
DBSCHEMA Schema Utility       INFORMIX-SQL Version 12.10.FC1WE







{ TABLE armas row size = 55 number of columns = 4 index size = 7 }

create table armas 
  (
    arm_codigo smallint not null ,
    arm_desc_lg char(30) not null ,
    arm_desc_md char(15) not null ,
    arm_desc_ct char(8) not null ,
    primary key (arm_codigo) 
  );

revoke all on armas from "public";

{ TABLE parentescos row size = 29 number of columns = 3 index size = 7 }

create table parentescos 
  (
    par_codigo smallint not null ,
    par_desc_md char(15) not null ,
    par_desc_ct char(12) not null ,
    primary key (par_codigo)  constraint u103_4
  );

revoke all on parentescos from "public";

{ TABLE escuelas row size = 58 number of columns = 6 index size = 14 }

create table escuelas 
  (
    esc_codigo smallint not null ,
    esc_desc_lg char(30) not null ,
    esc_desc_md char(15) not null ,
    esc_desc_ct char(8) not null ,
    esc_pais smallint,
    esc_situacion char(1),
    primary key (esc_codigo)  constraint u104_5
  );

revoke all on escuelas from "public";

{ TABLE cursos row size = 56 number of columns = 7 index size = 7 }

create table cursos 
  (
    cur_codigo smallint not null ,
    cur_desc_lg char(45) not null ,
    cur_tipo char(1),
    cur_clasifica char(1),
    cur_equi smallint,
    cur_nivel_esc char(1),
    cur_creditos decimal(5,2),
    
    check (cur_tipo IN ('M' ,'C' )) constraint c106_8,
    primary key (cur_codigo)  constraint u106_7
  );

revoke all on cursos from "public";

{ TABLE paises row size = 32 number of columns = 2 index size = 7 }

create table paises 
  (
    pai_codigo smallint not null ,
    pai_desc_lg char(30) not null ,
    primary key (pai_codigo)  constraint u108_10
  );

revoke all on paises from "public";

{ TABLE meom row size = 91 number of columns = 7 index size = 11 }

create table meom 
  (
    meom_ceom char(6) not null ,
    meom_desc_lg char(35) not null ,
    meom_desc_md char(27) not null ,
    meom_desc_ct char(16) not null ,
    meom_serie char(3) not null ,
    meom_nivel smallint,
    meom_situacion smallint,
    
    check ((meom_nivel >= 0 ) AND (meom_nivel <= 8 ) ) constraint ck_meom_nivel,
    
    check (meom_serie IN ('999' ,'E' ,'O' ,'T' ,'P' ,'TP' ,'AP' ,'X' ,'PE' )) constraint 
              ck_meom_serie,
    primary key (meom_ceom)  constraint u109_11
  );

revoke all on meom from "public";

{ TABLE grados row size = 62 number of columns = 8 index size = 13 }

create table grados 
  (
    gra_codigo smallint not null ,
    gra_desc_lg char(30) not null ,
    gra_desc_md char(15) not null ,
    gra_desc_ct char(8) not null ,
    gra_asc smallint,
    gra_tiempo smallint,
    gra_clase char(1) not null ,
    gra_demeritos smallint,
    
    check (gra_clase IN ('1' ,'2' ,'3' ,'4' ,'5' ,'6' )) constraint ck_gra_clase,
    primary key (gra_codigo)  constraint pk_grados
  );

revoke all on grados from "public";

{ TABLE asignaciones row size = 42 number of columns = 3 index size = 7 }

create table asignaciones 
  (
    asig_codigo smallint not null ,
    asig_desc_lg char(30) not null ,
    asig_desc_ct char(10) not null ,
    primary key (asig_codigo)  constraint u112_18
  );

revoke all on asignaciones from "public";

{ TABLE menu_master row size = 82 number of columns = 2 index size = 7 }

create table menu_master 
  (
    mm_menu smallint not null ,
    mm_descrip char(80),
    primary key (mm_menu)  constraint u130_33
  );

revoke all on menu_master from "public";

{ TABLE mfsub row size = 24 number of columns = 3 index size = 7 }

create table mfsub 
  (
    sub_dep smallint not null ,
    sub_prog char(20) not null ,
    sub_grupo smallint not null ,
    primary key (sub_dep)  constraint u132_35
  );

revoke all on mfsub from "public";

{ TABLE mfsue_e row size = 23 number of columns = 5 index size = 17 }

create table mfsue_e 
  (
    sue_grado smallint not null ,
    sue_serie char(1) not null ,
    sue_nivel smallint not null ,
    sue_sueldo money(16,2) not null ,
    sue_prima money(16,2) not null ,
    primary key (sue_grado,sue_serie,sue_nivel)  constraint u133_36
  );

revoke all on mfsue_e from "public";

{ TABLE mfsue_o row size = 24 number of columns = 5 index size = 25 }

create table mfsue_o 
  (
    mfs_grado smallint not null ,
    mfs_arma smallint not null ,
    mfs_bienal smallint not null ,
    mfs_sueldo money(16,2) not null ,
    mfs_prima money(16,2) not null ,
    primary key (mfs_grado,mfs_arma,mfs_bienal)  constraint u134_37
  );

revoke all on mfsue_o from "public";

{ TABLE mftro row size = 25 number of columns = 4 index size = 28 }

create table mftro 
  (
    tro_grado smallint not null ,
    tro_dep integer,
    tro_jerarquia char(10) not null ,
    tro_sueldo money(16,2) not null ,
    primary key (tro_grado,tro_dep,tro_jerarquia)  constraint u135_38
  );

revoke all on mftro from "public";

{ TABLE pdinero row size = 32 number of columns = 2 index size = 7 }

create table pdinero 
  (
    p_num smallint not null ,
    p_num_desc char(30),
    primary key (p_num)  constraint u138_43
  );

revoke all on pdinero from "public";

{ TABLE mfdep row size = 32 number of columns = 2 index size = 7 }

create table mfdep 
  (
    mfd_llave smallint not null ,
    mfd_descripcion char(30) not null ,
    primary key (mfd_llave)  constraint u223_83
  );

revoke all on mfdep from "public";

{ TABLE banderas row size = 7 number of columns = 3 index size = 6 }

create table banderas 
  (
    ban_aplicacion char(1) not null ,
    ban_codigo smallint not null ,
    ban_fecha date,
    
    check (ban_aplicacion IN ('T' ,'O' )) constraint ck_ban_aplicacion,
    
    check (ban_codigo IN (0 ,1 )) constraint ck_ban_codigo,
    primary key (ban_aplicacion)  constraint u226_91
  );

revoke all on banderas from "public";

{ TABLE sysmenus row size = 78 number of columns = 2 index size = 23 }

create table sysmenus 
  (
    menuname char(18),
    title char(60)
  );

revoke all on sysmenus from "public";

{ TABLE sysmenuitems row size = 143 number of columns = 5 index size = 27 }

create table sysmenuitems 
  (
    imenuname char(18),
    itemnum integer,
    mtext char(60),
    mtype char(1),
    progname char(60)
  );

revoke all on sysmenuitems from "public";

{ TABLE tropabajas row size = 10 number of columns = 3 index size = 16 }

create table tropabajas 
  (
    tb_catalogo integer not null ,
    tb_fec_nomb date not null ,
    tb_situacion char(2) not null ,
    primary key (tb_catalogo)  constraint u229_94
  );

revoke all on tropabajas from "public";

{ TABLE tropa_sp row size = 26 number of columns = 6 index size = 16 }

create table tropa_sp 
  (
    tsp_catalogo integer not null ,
    tsp_plaza integer not null ,
    tsp_fec_nomb date,
    tsp_fec_trans date not null ,
    tsp_operador char(8) not null ,
    tsp_grado smallint,
    primary key (tsp_catalogo)  constraint u236_99
  );

revoke all on tropa_sp from "public";

{ TABLE asig_plaza row size = 4 number of columns = 1 index size = 0 }

create table asig_plaza 
  (
    asc_plaza integer not null 
  );

revoke all on asig_plaza from "public";

{ TABLE permtropa row size = 32 number of columns = 3 index size = 35 }

create table permtropa 
  (
    pert_usuario char(10),
    pert_programa char(20),
    pert_permiso smallint,
    
    check (pert_permiso IN (0 ,100 ,200 ,300 ,400 )) constraint ck_pert_permiso,
    primary key (pert_usuario,pert_programa)  constraint u266_127
  );

revoke all on permtropa from "public";

{ TABLE dep_mun row size = 57 number of columns = 4 index size = 9 }

create table dep_mun 
  (
    dm_codigo char(4) not null ,
    dm_desc_lg char(30) not null ,
    dm_desc_md char(15) not null ,
    dm_desc_ct char(8) not null ,
    primary key (dm_codigo)  constraint u284_139
  );

revoke all on dep_mun from "public";

{ TABLE pcdtablr row size = 28 number of columns = 3 index size = 15 }

create table pcdtablr 
  (
    prodid char(8),
    line_no smallint,
    tabname char(18)
  );

revoke all on pcdtablr from "public";

{ TABLE cgdcolmr row size = 173 number of columns = 6 index size = 44 }

create table cgdcolmr 
  (
    tabname char(18),
    colname char(18),
    language char(3),
    description char(30),
    col_label char(30),
    mssg_line char(74)
  );

revoke all on cgdcolmr from "public";

{ TABLE cgdtablr row size = 171 number of columns = 5 index size = 26 }

create table cgdtablr 
  (
    tabname char(18),
    language char(3),
    description char(30),
    uniq_list char(60),
    tab_order char(60)
  );

revoke all on cgdtablr from "public";

{ TABLE cgmcmndd row size = 83 number of columns = 5 index size = 15 }

create table cgmcmndd 
  (
    m_name char(8),
    m_order smallint,
    m_lang char(3),
    m_label char(20),
    m_help char(50)
  );

revoke all on cgmcmndd from "public";

{ TABLE cgmcmndr row size = 57 number of columns = 12 index size = 15 }

create table cgmcmndr 
  (
    m_name char(8),
    m_desc char(20),
    m_order smallint,
    m_type char(1),
    m_event char(8),
    m_class char(12),
    m_style char(1),
    m_rowon char(1),
    m_curon char(1),
    m_toton char(1),
    m_deton char(1),
    m_enter char(1)
  );

revoke all on cgmcmndr from "public";

{ TABLE cgmmenud row size = 83 number of columns = 16 index size = 29 }

create table cgmmenud 
  (
    module char(8),
    prog char(8),
    scrid char(8),
    m_local smallint,
    m_name char(8),
    m_desc char(20),
    m_order smallint,
    m_type char(1),
    m_event char(8),
    m_class char(12),
    m_style char(1),
    m_rowon char(1),
    m_curon char(1),
    m_toton char(1),
    m_deton char(1),
    m_enter char(1)
  );

revoke all on cgmmenud from "public";

{ TABLE cgmmposr row size = 16 number of columns = 6 index size = 0 }

create table cgmmposr 
  (
    m_name char(8),
    m_type char(1),
    x_pos smallint,
    y_pos smallint,
    width smallint,
    hold char(1)
  );

revoke all on cgmmposr from "public";

{ TABLE cgrrimgd row size = 303 number of columns = 6 index size = 50 }

create table cgrrimgd 
  (
    rptname char(30),
    image_name char(10),
    language char(3),
    line_no smallint,
    part_no smallint,
    line_image char(256)
  );

revoke all on cgrrimgd from "public";

{ TABLE cgsscrnr row size = 351 number of columns = 17 index size = 28 }

create table cgsscrnr 
  (
    module char(8),
    prog char(8),
    scrid char(7),
    cust_key char(12),
    scr_type char(15),
    maintab char(18),
    init_filter char(200),
    win_x smallint,
    win_y smallint,
    delimiters char(2),
    rturning char(18),
    scr_attr char(30),
    load_time integer,
    trig_time integer,
    non_src_frm char(1),
    eng_ver char(10),
    fgl_ver char(10)
  );

revoke all on cgsscrnr from "public";

{ TABLE cgxsorcd row size = 238 number of columns = 6 index size = 31 }

create table cgxsorcd 
  (
    module char(8),
    prog char(8),
    scrid char(7),
    cust_key char(12),
    src_code char(3),
    src_name char(200)
  );

revoke all on cgxsorcd from "public";

{ TABLE stxacknd row size = 78 number of columns = 4 index size = 21 }

create table stxacknd 
  (
    ack_module char(8),
    ack_program char(8),
    line_no smallint,
    ack_text char(60)
  );

revoke all on stxacknd from "public";

{ TABLE stxactnr row size = 123 number of columns = 5 index size = 23 }

create table stxactnr 
  (
    language char(3),
    act_key char(15),
    description char(30),
    os_command char(74),
    press_enter char(1)
  );

revoke all on stxactnr from "public";

{ TABLE stxaddld row size = 80 number of columns = 4 index size = 55 }

create table stxaddld 
  (
    filename char(18) not null ,
    record_key char(30),
    line_no smallint,
    data char(30)
  );

revoke all on stxaddld from "public";

{ TABLE stxaddlr row size = 40 number of columns = 3 index size = 23 }

create table stxaddlr 
  (
    filename char(18) not null ,
    line_no smallint,
    field_label char(20)
  );

revoke all on stxaddlr from "public";

{ TABLE stxcompr row size = 176 number of columns = 5 index size = 0 }

create table stxcompr 
  (
    comp_id char(8),
    db_name char(14),
    logfile char(150),
    line_no smallint,
    consolidate smallint
  );

revoke all on stxcompr from "public";

{ TABLE stxerord row size = 85 number of columns = 8 index size = 26 }

create table stxerord 
  (
    language char(3),
    userdef char(1),
    err_module char(8),
    err_program char(8),
    err_number smallint,
    a_b char(1),
    line_no smallint,
    err_text char(60)
  );

revoke all on stxerord from "public";

{ TABLE stxerorh row size = 62 number of columns = 6 index size = 23 }

create table stxerorh 
  (
    language char(3),
    userdef char(1),
    err_module char(8),
    err_program char(8),
    err_number smallint,
    err_line char(40)
  );

revoke all on stxerorh from "public";

{ TABLE stxfiler row size = 256 number of columns = 3 index size = 0 }

create table stxfiler 
  (
    uniq_num integer,
    line_no serial not null ,
    line_text char(248)
  );

revoke all on stxfiler from "public";

{ TABLE stxfiltr row size = 217 number of columns = 3 index size = 0 }

create table stxfiltr 
  (
    unique_id char(15),
    seq_no smallint,
    sel_filter char(200)
  );

revoke all on stxfiltr from "public";

{ TABLE stxfuncr row size = 68 number of columns = 6 index size = 82 }

create table stxfuncr 
  (
    module char(8),
    progname char(8),
    funcname char(20),
    description char(30),
    allow_flag char(1),
    userdef char(1)
  );

revoke all on stxfuncr from "public";

{ TABLE stxgropd row size = 16 number of columns = 2 index size = 21 }

create table stxgropd 
  (
    group_id char(8),
    user_id char(8)
  );

revoke all on stxgropd from "public";

{ TABLE stxhelpd row size = 104 number of columns = 7 index size = 45 }

create table stxhelpd 
  (
    language char(3),
    userdef char(1),
    hlp_module char(18),
    hlp_program char(18),
    hlp_number smallint,
    line_no smallint,
    hlp_text char(60)
  );

revoke all on stxhelpd from "public";

{ TABLE stxhotkd row size = 43 number of columns = 5 index size = 33 }

create table stxhotkd 
  (
    hot_key smallint,
    act_key char(15),
    hot_module char(8),
    hot_program char(8),
    hot_user char(10)
  );

revoke all on stxhotkd from "public";

{ TABLE stxkeysr row size = 17 number of columns = 2 index size = 7 }

create table stxkeysr 
  (
    key_code smallint,
    key_desc char(15)
  );

revoke all on stxkeysr from "public";

{ TABLE stxlangr row size = 150 number of columns = 5 index size = 55 }

create table stxlangr 
  (
    language char(3),
    tr_tab_col char(37),
    tr_context char(10),
    native char(50),
    non_native char(50)
  );

revoke all on stxlangr from "public";

{ TABLE stxmssgr row size = 153 number of columns = 5 index size = 26 }

create table stxmssgr 
  (
    language char(3),
    mssg_module char(8),
    mssg_program char(8),
    mssg_number smallint,
    message char(132)
  );

revoke all on stxmssgr from "public";

{ TABLE stxnoted row size = 110 number of columns = 4 index size = 53 }

create table stxnoted 
  (
    filename char(18) not null ,
    record_key char(30),
    line_no smallint,
    data char(60)
  );

revoke all on stxnoted from "public";

{ TABLE stxnvgtd row size = 43 number of columns = 5 index size = 46 }

create table stxnvgtd 
  (
    act_key char(15),
    line_no smallint,
    nav_module char(8),
    nav_program char(8),
    nav_user char(10)
  );

revoke all on stxnvgtd from "public";

{ TABLE stxparmd row size = 425 number of columns = 20 index size = 43 }

create table stxparmd 
  (
    language char(3),
    module char(8),
    user_id char(8),
    access_key char(30),
    line_no integer,
    userdef char(1),
    sbd_flag char(1),
    parm_desc char(30),
    is_rule char(1),
    is_fatal char(1),
    help_num smallint,
    val_table char(30),
    val_column char(60),
    val_filter char(60),
    val_join char(60),
    val_switchbox char(8),
    val_description char(18),
    zoom_filter char(60),
    zoom_switchbox char(8),
    parm_value char(32)
  );

revoke all on stxparmd from "public";

{ TABLE stxpermd row size = 25 number of columns = 4 index size = 0 }

create table stxpermd 
  (
    user_id char(8),
    progname char(8),
    module char(8),
    permission char(1)
  );

revoke all on stxpermd from "public";

{ TABLE stxpermr row size = 147 number of columns = 9 index size = 13 }

create table stxpermr 
  (
    user_id char(8),
    lname char(20),
    fname char(20),
    minitial char(1),
    company char(30),
    dept char(15),
    responsibility char(30),
    phone char(15),
    pattern char(8)
  );

revoke all on stxpermr from "public";

{ TABLE stxprogr row size = 49 number of columns = 5 index size = 21 }

create table stxprogr 
  (
    module char(8),
    progname char(8),
    description char(30),
    use_trx smallint,
    userdef char(1)
  );

revoke all on stxprogr from "public";

{ TABLE stxsecud row size = 45 number of columns = 5 index size = 98 }

create table stxsecud 
  (
    user_id char(8),
    module char(8),
    progname char(8),
    funcname char(20),
    allow_flag char(1)
  );

revoke all on stxsecud from "public";

{ TABLE stxtodod row size = 72 number of columns = 3 index size = 17 }

create table stxtodod 
  (
    todo_user char(10),
    line_no smallint,
    todo_text char(60)
  );

revoke all on stxtodod from "public";

{ TABLE stxtxtdd row size = 106 number of columns = 3 index size = 37 }

create table stxtxtdd 
  (
    txt_key char(30),
    line_no smallint,
    dflt_text char(74)
  );

revoke all on stxtxtdd from "public";

{ TABLE stxuniqc row size = 4 number of columns = 1 index size = 0 }

create table stxuniqc 
  (
    uniq serial not null 
  );

revoke all on stxuniqc from "public";

{ TABLE cgsblobr row size = 116 number of columns = 8 index size = 30 }

create table cgsblobr 
  (
    module char(8),
    prog char(8),
    scrid char(7),
    cust_key char(12),
    input_num smallint,
    fldname char(18),
    runprog char(60),
    progedit char(1)
  );

revoke all on cgsblobr from "public";

{ TABLE cgsclipr row size = 63 number of columns = 9 index size = 13 }

create table cgsclipr 
  (
    username char(12),
    clipname char(8),
    clip_title char(30),
    seqno serial not null ,
    srow smallint,
    erow smallint,
    scol smallint,
    ecol smallint,
    clip_status char(1)
  );

revoke all on cgsclipr from "public";

{ TABLE cgscmdsd row size = 81 number of columns = 6 index size = 11 }

create table cgscmdsd 
  (
    cmd_id integer,
    line_no smallint,
    txt char(70),
    indent smallint,
    cont_line char(1),
    whitespace smallint
  );

revoke all on cgscmdsd from "public";

{ TABLE cgscmdsr row size = 212 number of columns = 16 index size = 100 }

create table cgscmdsr 
  (
    cmd_id serial not null ,
    cmd_type char(1),
    cmd_order smallint,
    trig_code smallint,
    module char(14),
    prog char(14),
    cust_key char(3),
    filename char(14),
    load_time integer,
    src_file char(14),
    funct_id char(18),
    block_id char(20),
    from_after char(1),
    from_str char(50),
    to_thru char(1),
    to_str char(50)
  );

revoke all on cgscmdsr from "public";

{ TABLE cgsdpndd row size = 73 number of columns = 7 index size = 28 }

create table cgsdpndd 
  (
    module char(8),
    prog char(8),
    scrid char(7),
    cust_key char(12),
    src_type smallint,
    src_field char(18),
    dpnd_field char(18)
  );

revoke all on cgsdpndd from "public";

{ TABLE cgsimged row size = 169 number of columns = 6 index size = 28 }

create table cgsimged 
  (
    module char(8),
    prog char(8),
    scrid char(7),
    cust_key char(12),
    line_no smallint,
    image_data char(132)
  );

revoke all on cgsimged from "public";

{ TABLE cgsinptr row size = 670 number of columns = 15 index size = 30 }

create table cgsinptr 
  (
    module char(8),
    prog char(8),
    scrid char(7),
    cust_key char(12),
    input_num smallint,
    scr_rec char(12),
    maintab char(18),
    sel_join char(200),
    sel_filter char(200),
    sel_order char(100),
    unique_key char(80),
    ok_delete char(1),
    auto_number char(18),
    scr_siz smallint,
    arr_max smallint
  );

revoke all on cgsinptr from "public";

{ TABLE cgsstypr row size = 25 number of columns = 3 index size = 25 }

create table cgsstypr 
  (
    set_key char(20),
    dflt_arr_max integer,
    userdef char(1)
  );

revoke all on cgsstypr from "public";

{ TABLE cgstrigr row size = 32 number of columns = 2 index size = 42 }

create table cgstrigr 
  (
    trig_def char(30),
    trig_code smallint
  );

revoke all on cgstrigr from "public";

{ TABLE cgszoomr row size = 299 number of columns = 11 index size = 40 }

create table cgszoomr 
  (
    module char(8),
    prog char(8),
    scrid char(7),
    cust_key char(12),
    input_num smallint,
    key_field char(18),
    zoom_scrid char(7),
    zoom_table char(18),
    noautozoom char(1),
    sel_filter char(200),
    zoom_from char(18)
  );

revoke all on cgszoomr from "public";

{ TABLE cgxfnamr row size = 48 number of columns = 3 index size = 35 }

create table cgxfnamr 
  (
    set_key char(20),
    func_key char(10),
    func_name char(18)
  );

revoke all on cgxfnamr from "public";

{ TABLE cgxfsetd row size = 31 number of columns = 3 index size = 35 }

create table cgxfsetd 
  (
    set_key char(20),
    func_key char(10),
    userdef char(1)
  );

revoke all on cgxfsetd from "public";

{ TABLE cgxlkupr row size = 291 number of columns = 9 index size = 40 }

create table cgxlkupr 
  (
    module char(8),
    prog char(8),
    scrid char(7),
    cust_key char(12),
    input_num smallint,
    lkup_name char(18),
    key_field char(18),
    lkup_table char(18),
    sel_filter char(200)
  );

revoke all on cgxlkupr from "public";

{ TABLE cgxlntod row size = 90 number of columns = 8 index size = 40 }

create table cgxlntod 
  (
    module char(8),
    prog char(8),
    scrid char(7),
    cust_key char(12),
    manual char(1),
    lkup_name char(18),
    lkup_into char(18),
    lkup_from char(18)
  );

revoke all on cgxlntod from "public";

{ TABLE cgxmathr row size = 155 number of columns = 7 index size = 40 }

create table cgxmathr 
  (
    module char(8),
    prog char(8),
    scrid char(7),
    cust_key char(12),
    input_num smallint,
    key_field char(18),
    math_text char(100)
  );

revoke all on cgxmathr from "public";

{ TABLE stxparmh row size = 87 number of columns = 3 index size = 0 }

create table stxparmh 
  (
    language char(3),
    module char(8),
    heading char(76)
  );

revoke all on stxparmh from "public";

{ TABLE ipm_fact row size = 37 number of columns = 8 index size = 31 }

create table ipm_fact 
  (
    fact_catalogo integer not null ,
    fact_cod_descuento smallint not null ,
    fact_fecha date not null ,
    fact_numero char(11) not null ,
    fact_procedencia char(2),
    fact_iva money(10,2) not null ,
    fact_monto money(10,2) not null ,
    fact_estado char(2),
    primary key (fact_catalogo,fact_numero)  constraint pk_ipm_fact_catalo_numero
  );

revoke all on ipm_fact from "public";

{ TABLE banejer_acc row size = 25 number of columns = 4 index size = 20 }

create table banejer_acc 
  (
    acc_accionista char(11) not null ,
    acc_catalogo integer not null ,
    acc_suscripcion money(16,2),
    acc_si_no char(1),
    primary key (acc_accionista,acc_catalogo)  constraint u678_277
  );

revoke all on banejer_acc from "public";

{ TABLE pbienal row size = 10 number of columns = 4 index size = 9 }

create table pbienal 
  (
    catalogo integer not null ,
    bienal1 smallint,
    bienal2 smallint,
    bienal3 smallint
  );

revoke all on pbienal from "public";

{ TABLE cgstrigd row size = 133 number of columns = 9 index size = 50 }

create table cgstrigd 
  (
    module char(8),
    prog char(8),
    scrid char(7),
    cust_key char(12),
    input_num smallint,
    trig_code smallint,
    arg_one char(18),
    trig_order smallint,
    trig_text char(74)
  );

revoke all on cgstrigd from "public";

{ TABLE sinefecto row size = 24 number of columns = 3 index size = 0 }

create table sinefecto 
  (
    catalogo integer not null ,
    orden char(8) not null ,
    usuario char(12)
  );

revoke all on sinefecto from "public";

{ TABLE partidas row size = 45 number of columns = 5 index size = 13 }

create table partidas 
  (
    par_codigo smallint not null ,
    par_depen smallint not null ,
    par_fecha date not null ,
    par_descr char(35) not null ,
    par_clase smallint not null 
  );

revoke all on partidas from "public";

{ TABLE noestan row size = 4 number of columns = 1 index size = 9 }

create table noestan 
  (
    noe_catalogo integer not null 
  );

revoke all on noestan from "public";

{ TABLE empresas row size = 39 number of columns = 7 index size = 0 }

create table empresas 
  (
    em_catalogo integer not null ,
    em_codigo smallint not null ,
    em_fecha date not null ,
    em_monto money(16,2) not null ,
    em_mensual money(16,2) not null ,
    em_saldo money(16,2) not null ,
    em_control smallint not null 
  );

revoke all on empresas from "public";

{ TABLE fmasi row size = 55 number of columns = 4 index size = 7 }

create table fmasi 
  (
    mas_codigo smallint not null ,
    mas_desc_ct char(8) not null ,
    mas_desc_md char(15) not null ,
    mas_desc_lg char(30) not null 
  );

revoke all on fmasi from "public";

{ TABLE fmdes row size = 55 number of columns = 4 index size = 7 }

create table fmdes 
  (
    mde_codigo smallint not null ,
    mde_desc_ct char(8) not null ,
    mde_desc_md char(15) not null ,
    mde_desc_lg char(30) not null 
  );

revoke all on fmdes from "public";

{ TABLE syscolval row size = 110 number of columns = 4 index size = 64 }

create table syscolval 
  (
    tabname char(18),
    colname char(18),
    attrname char(10),
    attrval char(64)
  );

revoke all on syscolval from "public";

{ TABLE cgsifldd row size = 528 number of columns = 25 index size = 71 }

create table cgsifldd 
  (
    module char(8),
    prog char(8),
    scrid char(7),
    cust_key char(12),
    input_num smallint,
    seqno smallint,
    field_tag char(6),
    tabname char(18),
    fldname char(18),
    fldtype char(42),
    f_autonext char(1),
    f_comments char(74),
    f_default char(30),
    f_display_like char(42),
    f_downshift char(1),
    f_format char(50),
    f_include char(100),
    f_picture char(50),
    f_noentry char(1),
    f_required char(1),
    f_upshift char(1),
    f_valid_like char(42),
    f_verify char(1),
    f_trans char(10),
    f_skip char(1)
  );

revoke all on cgsifldd from "public";

{ TABLE disr row size = 13 number of columns = 2 index size = 0 }

create table disr 
  (
    isr_catalogo integer not null ,
    isr_cantidad money(16,2) not null 
  );

revoke all on disr from "public";

{ TABLE descuentos row size = 46 number of columns = 6 index size = 7 }

create table descuentos 
  (
    desc_codigo smallint not null ,
    desc_desc_lg char(30) not null ,
    desc_desc_ct char(8) not null ,
    desc_prioridad smallint,
    desc_pressobre smallint,
    desc_ordenvale smallint,
    primary key (desc_codigo)  constraint u1069_383
  );

revoke all on descuentos from "public";

{ TABLE permisos row size = 32 number of columns = 3 index size = 50 }

create table permisos 
  (
    perm_usuario char(10),
    perm_programa char(20),
    perm_permiso smallint,
    
    check (perm_permiso IN (0 ,100 ,200 ,300 ,400 )) constraint c1148_421,
    primary key (perm_usuario,perm_programa)  constraint u1148_420
  );

revoke all on permisos from "public";

{ TABLE hdareal row size = 13 number of columns = 2 index size = 0 }

create table hdareal 
  (
    hdr_catalogo integer,
    hdr_cantidad money(16,2)
  );

revoke all on hdareal from "public";

{ TABLE retencion row size = 13 number of columns = 2 index size = 9 }

create table retencion 
  (
    ret_catalogo integer not null ,
    ret_monto money(16,2),
    primary key (ret_catalogo)  constraint u1242_537
  );

revoke all on retencion from "public";

{ TABLE jefes row size = 208 number of columns = 3 index size = 9 }

create table jefes 
  (
    jef_plaza integer not null ,
    jef_categoria char(4) not null ,
    jef_puesto char(200) not null 
  );

revoke all on jefes from "public";

{ TABLE fuerza row size = 7 number of columns = 4 index size = 14 }

create table fuerza 
  (
    f_dep smallint not null ,
    f_grado smallint not null ,
    f_total smallint not null ,
    f_situa char(1) not null 
  );

revoke all on fuerza from "public";

{ TABLE nopagados row size = 4 number of columns = 1 index size = 9 }

create table nopagados 
  (
    catalogo integer not null 
  );

revoke all on nopagados from "public";

{ TABLE des_no_efec row size = 22 number of columns = 6 index size = 24 }

create table des_no_efec 
  (
    no_efec_catalogo integer not null ,
    no_efec_codigo smallint not null ,
    no_efec_registro smallint,
    no_efec_fecha date not null ,
    no_efec_cantidad money(16,2) not null ,
    no_efec_corrida char(1) not null ,
    primary key (no_efec_catalogo,no_efec_codigo,no_efec_registro,no_efec_fecha) 
               constraint u1590_703
  );

revoke all on des_no_efec from "public";

{ TABLE tipo_docum row size = 32 number of columns = 2 index size = 7 }

create table tipo_docum 
  (
    tipo_codigo smallint not null ,
    tipo_desc char(30) not null ,
    primary key (tipo_codigo)  constraint u2291_1068
  );

revoke all on tipo_docum from "public";

{ TABLE menus row size = 202 number of columns = 3 index size = 7 }

create table menus 
  (
    mnu_codigo smallint not null ,
    mnu_descripcion char(100) not null ,
    mnu_opcion char(100) not null ,
    primary key (mnu_codigo)  constraint u483_297
  );

revoke all on menus from "public";

{ TABLE usumenu row size = 52 number of columns = 2 index size = 7 }

create table usumenu 
  (
    um_nombre char(50) not null ,
    um_cod_menu smallint
  );

revoke all on usumenu from "public";

{ TABLE mcols row size = 24 number of columns = 3 index size = 0 }

create table mcols 
  (
    mc_codigo smallint not null ,
    mc_orden smallint not null ,
    mc_descrip char(20) not null 
  );

revoke all on mcols from "public";

{ TABLE mreps row size = 72 number of columns = 3 index size = 7 }

create table mreps 
  (
    mr_codigo smallint not null ,
    mr_descrip char(60) not null ,
    mr_repo char(10) not null ,
    primary key (mr_codigo)  constraint u502_301
  );

revoke all on mreps from "public";

{ TABLE depmun row size = 117 number of columns = 5 index size = 9 }

create table depmun 
  (
    dm_codigo char(4) not null ,
    dm_desc_lg char(30) not null ,
    dm_desc_md char(15) not null ,
    dm_desc_ct char(8) not null ,
    dm_mun_dep char(60) not null ,
    primary key (dm_codigo)  constraint u517_311
  );

revoke all on depmun from "public";

{ TABLE meop row size = 89 number of columns = 6 index size = 11 }

create table meop 
  (
    meom_ceom char(6) not null ,
    meom_desc_lg char(35) not null ,
    meom_desc_md char(27) not null ,
    meom_desc_ct char(16) not null ,
    meom_serie char(3),
    meom_nivel smallint,
    
    check ((meom_nivel >= 0 ) AND (meom_nivel <= 8 ) ) constraint c530_319,
    primary key (meom_ceom)  constraint u530_317
  );

revoke all on meop from "public";

{ TABLE fbitacora row size = 14 number of columns = 4 index size = 15 }

create table fbitacora 
  (
    fbit_user integer,
    fbit_cod smallint,
    fbit_mes date,
    fbit_fecha date,
    primary key (fbit_user,fbit_cod,fbit_mes)  constraint u562_335
  );

revoke all on fbitacora from "public";

{ TABLE categorias row size = 34 number of columns = 2 index size = 9 }

create table categorias 
  (
    cat_codigo char(4) not null ,
    cat_descripcion char(30),
    primary key (cat_codigo)  constraint u618_355
  );

revoke all on categorias from "public";

{ TABLE fnosalta row size = 4 number of columns = 1 index size = 0 }

create table fnosalta 
  (
    fcatalogo integer not null 
  );

revoke all on fnosalta from "public";

{ TABLE tropa_pv row size = 20 number of columns = 4 index size = 18 }

create table tropa_pv 
  (
    tpv_plaza integer not null ,
    tpv_fec_trans date not null ,
    tpv_catalogo integer not null ,
    tpv_operador char(8) not null ,
    primary key (tpv_plaza)  constraint u237_100
  );

revoke all on tropa_pv from "public";

{ TABLE doc_pendientes row size = 31 number of columns = 3 index size = 9 }

create table doc_pendientes 
  (
    codigo integer,
    fecha datetime year to minute,
    oficina char(20),
    primary key (codigo)  constraint u741_408
  );

revoke all on doc_pendientes from "public";

{ TABLE oficina row size = 76 number of columns = 3 index size = 16 }

create table oficina 
  (
    of_dep smallint,
    of_codigo char(4) not null ,
    of_desc char(70),
    primary key (of_codigo)  constraint pk_oficina
  );

revoke all on oficina from "public";

{ TABLE corr_seg row size = 20 number of columns = 4 index size = 16 }

create table corr_seg 
  (
    seg_usuario integer not null ,
    seg_passwd char(10),
    seg_dep smallint,
    seg_oficina char(4),
    primary key (seg_usuario)  constraint u2296_1073
  );

revoke all on corr_seg from "public";

{ TABLE meomeop row size = 12 number of columns = 2 index size = 22 }

create table meomeop 
  (
    meom char(6) not null ,
    meop char(6) not null 
  );

revoke all on meomeop from "public";

{ TABLE tablas row size = 155 number of columns = 5 index size = 36 }

create table tablas 
  (
    tabla char(20) not null ,
    sistema char(3),
    llave_primaria char(32),
    llaves_foraneas char(50),
    descripcion char(50),
    primary key (tabla,sistema)  constraint u2355_1089
  );

revoke all on tablas from "public";

{ TABLE chunk row size = 32 number of columns = 5 index size = 7 }

create table chunk 
  (
    ch_id smallint,
    ch_dbspace smallint,
    ch_tamano integer,
    ch_path char(20),
    ch_creacion date,
    primary key (ch_id)  constraint u1022_531
  );

revoke all on chunk from "public";

{ TABLE cuentas row size = 26 number of columns = 3 index size = 38 }

create table cuentas 
  (
    cta_catalogo integer not null ,
    cta_numero char(20),
    cta_banco smallint not null ,
    primary key (cta_catalogo)  constraint u689_294
  );

revoke all on cuentas from "public";

{ TABLE mfsue_et row size = 23 number of columns = 5 index size = 10 }

create table mfsue_et 
  (
    sue_grado smallint not null ,
    sue_serie char(1) not null ,
    sue_nivel smallint not null ,
    sue_sueldo money(16,2) not null ,
    sue_prima money(16,2) not null ,
    primary key (sue_grado,sue_serie,sue_nivel)  constraint u1215_673
  );

revoke all on mfsue_et from "public";

{ TABLE mftror row size = 23 number of columns = 4 index size = 19 }

create table mftror 
  (
    tro_grado smallint not null ,
    tro_dep smallint not null ,
    tro_jerarquia char(10) not null ,
    tro_sueldo money(16,2) not null ,
    primary key (tro_grado,tro_dep,tro_jerarquia)  constraint u1216_674
  );

revoke all on mftror from "public";

{ TABLE aud_mftro row size = 123 number of columns = 12 index size = 12 }

create table aud_mftro 
  (
    antes1 char(4),
    antes2 char(10),
    antes3 char(10),
    antes4 char(20),
    despues1 char(4),
    despues2 char(10),
    despues3 char(10),
    despues4 char(20),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_mftro from "public";

{ TABLE aud_mfsue_et row size = 133 number of columns = 14 index size = 12 }

create table aud_mfsue_et 
  (
    antes1 char(4),
    antes2 char(1),
    antes3 char(4),
    antes4 char(20),
    antes5 char(20),
    despues1 char(4),
    despues2 char(1),
    despues3 char(4),
    despues4 char(20),
    despues5 char(20),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_mfsue_et from "public";

{ TABLE cmm_hospitalizados row size = 161 number of columns = 7 index size = 14 }

create table cmm_hospitalizados 
  (
    hos_catalogo integer not null ,
    hos_fec_ingreso date not null ,
    hos_diag_ingreso char(45),
    hos_fec_egreso date,
    hos_diag_egreso char(100),
    hos_grado smallint,
    hos_depen smallint,
    
    check (hos_fec_ingreso <= hos_fec_egreso ) constraint ck_cmmhosp_fec
  );

revoke all on cmm_hospitalizados from "public";

{ TABLE cmm_rebajados row size = 314 number of columns = 8 index size = 14 }

create table cmm_rebajados 
  (
    reb_catalogo integer not null ,
    reb_fec_inicio date not null ,
    reb_fec_final date,
    reb_diagnostico char(45),
    reb_tipo varchar(250),
    reb_tiempo smallint,
    reb_grado smallint,
    reb_depen smallint,
    
    check (reb_fec_inicio <= reb_fec_final ) constraint ck_cmmreb_fec
  );

revoke all on cmm_rebajados from "public";

{ TABLE mnums row size = 12 number of columns = 5 index size = 0 }

create table mnums 
  (
    mn_codigo smallint not null ,
    mn_puesto smallint not null ,
    mn_orden smallint not null ,
    mn_dep smallint,
    mn_valor integer not null 
  );

revoke all on mnums from "public";

{ TABLE dfdes_tro row size = 164 number of columns = 17 index size = 20 }

create table dfdes_tro 
  (
    dtd_catalogo integer not null ,
    dtd_codigo smallint not null ,
    dtd_nu_reg smallint not null ,
    dtd_cod_control smallint not null ,
    dtd_tipo_desc char(1) not null ,
    dtd_fec_ini date not null ,
    dtd_ult_act date,
    dtd_fec_cer date,
    dtd_monto money(16,2) not null ,
    dtd_saldo money(16,2) not null ,
    dtd_mensual money(16,2) not null ,
    dtd_tot_cuotas smallint not null ,
    dtd_num_cuotas smallint not null ,
    dtd_documen char(6),
    dtd_codeudor integer,
    dtd_nom_bene char(50),
    dtd_juz_con char(50),
    primary key (dtd_catalogo,dtd_codigo,dtd_nu_reg)  constraint u1383_609
  );

revoke all on dfdes_tro from "public";

{ TABLE permper row size = 32 number of columns = 3 index size = 35 }

create table permper 
  (
    perm_usuario char(10),
    perm_programa char(20),
    perm_permiso smallint,
    
    check (perm_permiso IN (0 ,100 ,150 ,200 ,250 ,300 ,350 ,400 ,410 ,420 ,450 ,500 ,550 )) 
              constraint ck_perm_permiso,
    primary key (perm_usuario,perm_programa)  constraint u244_107
  );

revoke all on permper from "public";

{ TABLE permorga row size = 32 number of columns = 3 index size = 35 }

create table permorga 
  (
    pero_usuario char(10),
    pero_programa char(20),
    pero_permiso smallint,
    
    check (pero_permiso IN (0 ,100 ,200 ,300 ,400 )) constraint c250_115,
    primary key (pero_usuario,pero_programa)  constraint u250_114
  );

revoke all on permorga from "public";

{ TABLE process row size = 102 number of columns = 10 index size = 39 }

create table process 
  (
    cod_process serial not null ,
    oper_process integer,
    h_ini_process datetime hour to second,
    comm_process char(15),
    desc_process char(45),
    h_fin_process datetime hour to second,
    fec_process date,
    host_process char(10),
    cinta_process char(10),
    param_process smallint
  );

revoke all on process from "public";

{ TABLE ubicacion_cerrados row size = 155 number of columns = 14 index size = 11 }

create table ubicacion_cerrados 
  (
    ub_correlativo smallint not null ,
    ub_cod_doc integer not null ,
    ub_fec_in datetime year to minute,
    ub_recibe integer,
    ub_entrega integer,
    ub_recibe_ok char(1),
    ub_observaciones char(100),
    ub_oficina char(3),
    ub_of_dep smallint,
    ub_doc_tipo_remite smallint,
    ub_doc_remite char(20),
    ub_int_ext char(1),
    ub_of_remite char(3),
    ub_of_dep_remite smallint,
    primary key (ub_correlativo,ub_cod_doc)  constraint u715_402
  );

revoke all on ubicacion_cerrados from "public";

{ TABLE tr_armas row size = 51 number of columns = 9 index size = 9 }

create table tr_armas 
  (
    tra_catalogo integer not null ,
    tra_num_arma char(20) not null ,
    tra_tipo char(10) not null ,
    tra_asignacion char(1) not null ,
    tra_situacion smallint not null ,
    tra_plaza integer not null ,
    tra_fecha date not null ,
    tra_accion smallint not null ,
    tra_persona integer not null ,
    primary key (tra_catalogo)  constraint u1869_1039
  );

revoke all on tr_armas from "public";

{ TABLE dcur row size = 69 number of columns = 14 index size = 43 }

create table dcur 
  (
    cur_catalogo integer not null ,
    cur_grado smallint not null ,
    cur_curso smallint not null ,
    cur_fec_inicio date not null ,
    cur_fec_fin date not null ,
    cur_pais smallint not null ,
    cur_escuela smallint not null ,
    cur_valor money(16,2),
    cur_punteo decimal(5,2),
    cur_equi smallint,
    cur_puesto char(3),
    cur_obserba char(20),
    cur_docto_auto char(10),
    cur_nivel_esc char(1),
    
    check (cur_puesto IN ('1RO' ,'2DO' ,'3RO' ,'4TO' ,'5TO' ,'6TO' ,'RDA' ,'RMC' ,'SAT' ,'ESP' ,'NOG' ,'PES' ,'REN' ,'RFP' ,'RIN' ,'RSS' ,'RPB' ,'RPE' ,'RPF' ,'SNA' ,'UMN' ,'RNR' ,'ROS' )) 
              constraint chk_cur_puesto,
    primary key (cur_catalogo,cur_curso,cur_fec_inicio)  constraint pk_dcur
  );

revoke all on dcur from "public";

{ TABLE dfdes_btrab row size = 165 number of columns = 18 index size = 66 }

create table dfdes_btrab 
  (
    dfdt_catalogo integer not null ,
    dfdt_codigo smallint not null ,
    dfdt_nu_reg smallint not null ,
    dfdt_cod_control smallint not null ,
    dfdt_tipo_desc char(1) not null ,
    dfdt_fec_ini date,
    dfdt_ult_act date,
    dfdt_fec_cer date,
    dfdt_monto money(16,2) not null ,
    dfdt_saldo money(16,2) not null ,
    dfdt_mensual money(16,2) not null ,
    dfdt_tot_cuotas smallint,
    dfdt_num_cuotas smallint,
    dfdt_documen char(6),
    dfdt_codeudor integer,
    dfdt_nom_bene char(50),
    dfdt_juz_con char(50),
    dfdt_si_no char(1),
    primary key (dfdt_catalogo,dfdt_juz_con)  constraint pk_dfdes_btrab_catal_juz_con
  );

revoke all on dfdes_btrab from "public";

{ TABLE ubicacion_docum row size = 157 number of columns = 14 index size = 11 }

create table ubicacion_docum 
  (
    ub_correlativo smallint not null ,
    ub_cod_doc integer not null ,
    ub_fec_in datetime year to minute,
    ub_recibe integer,
    ub_entrega integer,
    ub_recibe_ok char(1),
    ub_observaciones char(100),
    ub_oficina char(4),
    ub_of_dep smallint,
    ub_doc_tipo_remite smallint,
    ub_doc_remite char(20),
    ub_int_ext char(1),
    ub_of_remite char(4),
    ub_of_dep_remite smallint,
    primary key (ub_correlativo,ub_cod_doc)  constraint pk_ubicacion_doc
  );

revoke all on ubicacion_docum from "public";

{ TABLE sistemas row size = 23 number of columns = 2 index size = 8 }

create table sistemas 
  (
    sis_codigo char(3) not null ,
    sis_nombre char(20) not null ,
    primary key (sis_codigo)  constraint pk_sistemas
  );

revoke all on sistemas from "public";

{ TABLE hist_rep row size = 70 number of columns = 7 index size = 9 }

create table hist_rep 
  (
    hr_numero serial not null ,
    hr_catalogo integer,
    hr_terminal char(10),
    hr_fecha date,
    hr_hora char(8),
    hr_usuario char(30),
    hr_codigo char(10),
    primary key (hr_numero)  constraint u1993_1080
  );

revoke all on hist_rep from "public";

{ TABLE agui row size = 15 number of columns = 3 index size = 21 }

create table agui 
  (
    agui_catalogo integer not null ,
    agui_aguinaldo money(16,2) not null ,
    agui_meses smallint not null 
  );

revoke all on agui from "public";

{ TABLE dfam row size = 227 number of columns = 26 index size = 47 }

create table dfam 
  (
    fam_cat_militar integer not null ,
    fam_cat_familiar integer not null ,
    fam_nom1 char(15) not null ,
    fam_nom2 char(15),
    fam_ape1 char(15) not null ,
    fam_ape2 char(15),
    fam_parentesco smallint not null ,
    fam_sexo char(1),
    fam_sangre char(3),
    fam_est_civil char(1),
    fam_fec_nac date,
    fam_nac_lugar char(4),
    fam_ced_ord char(4),
    fam_ced_reg integer,
    fam_fec_ext_ced date,
    fam_lugar_ext_ced char(4),
    fam_direccion char(50),
    fam_zona smallint,
    fam_dir_lugar char(4),
    fam_telefono integer,
    fam_ocupacion char(30),
    fam_empresa char(30),
    fam_cheque smallint,
    fam_beneficiario smallint,
    fam_emergencia smallint,
    fam_clase_pasiva smallint,
    
    check (fam_ced_ord IN ('A-1' ,'B-2' ,'C-3' ,'D-4' ,'E-5' ,'F-6' ,'G-7' ,'H-8' ,'I-9' ,'J-10' ,'K-11' ,'L-12' ,'M-13' ,'N-14' ,'�-15' ,'O-16' ,'P-17' ,'Q-18' ,'&-15' ,'�-15' ,'R-19' ,'S-20' ,'T-21' ,'U-22' ,'P-99' )) 
              constraint ck_fam_ced_ord,
    
    check (fam_est_civil IN ('S' ,'C' ,'U' ,'D' ,'V' )) constraint ck_fam_est_civil,
    
    check (fam_sangre IN ('O+' ,'O-' ,'A+' ,'A-' ,'AB+' ,'AB-' ,'B+' ,'B-' ,'P' )) 
              constraint ck_fam_sangre,
    
    check (fam_sexo IN ('M' ,'F' )) constraint ck_fam_sexo,
    primary key (fam_cat_militar,fam_cat_familiar)  constraint pk_dfam
  );

revoke all on dfam from "public";

{ TABLE maestro row size = 8 number of columns = 2 index size = 0 }

create table maestro 
  (
    mae_ord_gen char(7) not null ,
    mae_clase char(1) not null 
  );

revoke all on maestro from "public";

{ TABLE aud_ubica_cerra row size = 595 number of columns = 32 index size = 12 }

create table aud_ubica_cerra 
  (
    antes1 char(12),
    antes2 char(12),
    antes3 char(50),
    antes4 char(12),
    antes5 char(12),
    antes6 char(1),
    antes7 char(100),
    antes8 char(12),
    antes9 char(12),
    antes10 char(12),
    antes11 char(20),
    antes12 char(1),
    antes13 char(12),
    antes14 char(12),
    despues1 char(12),
    despues2 char(12),
    despues3 char(50),
    despues4 char(12),
    despues5 char(12),
    despues6 char(1),
    despues7 char(100),
    despues8 char(12),
    despues9 char(12),
    despues10 char(12),
    despues11 char(20),
    despues12 char(1),
    despues13 char(12),
    despues14 char(12),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_ubica_cerra from "public";

{ TABLE dfdes_ipm row size = 165 number of columns = 18 index size = 13 }

create table dfdes_ipm 
  (
    dfdp_catalogo integer not null ,
    dfdp_codigo smallint not null ,
    dfdp_nu_reg smallint not null ,
    dfdp_cod_control smallint not null ,
    dfdp_tipo_desc char(1) not null ,
    dfdp_fec_ini date,
    dfdp_ult_act date,
    dfdp_fec_cer date,
    dfdp_monto money(16,2) not null ,
    dfdp_saldo money(16,2) not null ,
    dfdp_mensual money(16,2) not null ,
    dfdp_tot_cuotas smallint,
    dfdp_num_cuotas smallint,
    dfdp_documen char(6),
    dfdp_codeudor integer,
    dfdp_nom_bene char(50),
    dfdp_juz_con char(50),
    dfdp_si_no char(1),
    primary key (dfdp_catalogo,dfdp_codigo,dfdp_nu_reg)  constraint u1898_1050
  );

revoke all on dfdes_ipm from "public";

{ TABLE resutro row size = 155 number of columns = 23 index size = 0 }

create table resutro 
  (
    res_nomina smallint not null ,
    res_contrato smallint not null ,
    res_depen smallint not null ,
    res_btn smallint not null ,
    res_cia smallint not null ,
    res_fecha date not null ,
    res_prog char(3) not null ,
    res_grupo char(3) not null ,
    res_sueldo money(16,2) not null ,
    res_alimentacion money(16,2) not null ,
    res_responsabilida money(16,2) not null ,
    res_reenganche money(16,2) not null ,
    res_profesional money(16,2) not null ,
    res_representacion money(16,2) not null ,
    res_bon_emerg money(16,2) not null ,
    res_bon_662000 money(16,2),
    res_otras_boni money(16,2) not null ,
    res_montepio money(16,2) not null ,
    res_ipm money(16,2) not null ,
    res_cmm money(16,2) not null ,
    res_total money(16,2) not null ,
    res_liquido money(16,2) not null ,
    res_profmil money(16,2)
  );

revoke all on resutro from "public";

{ TABLE tsan row size = 96 number of columns = 5 index size = 9 }

create table tsan 
  (
    tsan_codigo serial not null ,
    tsan_descripcion char(80) not null ,
    tsan_tiempo integer not null ,
    tsan_posterga integer not null ,
    tsan_suspension integer not null ,
    primary key (tsan_codigo)  constraint pk_tsanx
  );

revoke all on tsan from "public";

{ TABLE mdep row size = 155 number of columns = 7 index size = 7 }

create table mdep 
  (
    dep_llave smallint not null ,
    dep_desc_lg char(100) not null ,
    dep_desc_md char(35) not null ,
    dep_desc_ct char(15) not null ,
    dep_clase char(1),
    dep_precio char(1),
    dep_ejto char(1),
    primary key (dep_llave)  constraint u259_123
  );

revoke all on mdep from "public";

{ TABLE aud_permorga row size = 111 number of columns = 10 index size = 12 }

create table aud_permorga 
  (
    antes1 char(10),
    antes2 char(20),
    antes3 char(8),
    despues1 char(10),
    despues2 char(20),
    despues3 char(8),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_permorga from "public";

{ TABLE documento row size = 257 number of columns = 23 index size = 30 }

create table documento 
  (
    doc_codigo serial not null ,
    doc_tipo smallint not null ,
    doc_nombre char(20) not null ,
    doc_prioridad char(1),
    doc_asunto char(120),
    doc_fec_realizado date not null ,
    doc_fec_in date not null ,
    doc_num_hojas smallint not null ,
    doc_destino smallint not null ,
    doc_procedencia smallint not null ,
    doc_status char(1),
    doc_interesado char(50),
    doc_clasificacion smallint,
    doc_prefijo smallint,
    doc_proposito smallint,
    doc_recibe integer not null ,
    doc_int_ext char(1),
    doc_solucion char(1),
    doc_referencia char(20),
    doc_of_actual char(4),
    doc_of_anterior char(4),
    doc_aceptado char(1),
    doc_fec_aceptado date,
    primary key (doc_codigo)  constraint u2294_1071
  );

revoke all on documento from "public";

{ TABLE bono14 row size = 15 number of columns = 3 index size = 21 }

create table bono14 
  (
    b14_catalogo integer not null ,
    b14_cantidad money(16,2) not null ,
    b14_meses smallint not null 
  );

revoke all on bono14 from "public";

{ TABLE aud_doc_pendientes row size = 135 number of columns = 10 index size = 12 }

create table aud_doc_pendientes 
  (
    antes1 char(12),
    antes2 char(18),
    antes3 char(20),
    despues1 char(12),
    despues2 char(18),
    despues3 char(20),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_doc_pendientes from "public";

{ TABLE aud_mftror row size = 143 number of columns = 12 index size = 12 }

create table aud_mftror 
  (
    antes1 char(12),
    antes2 char(12),
    antes3 char(10),
    antes4 char(20),
    despues1 char(12),
    despues2 char(12),
    despues3 char(10),
    despues4 char(20),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_mftror from "public";

{ TABLE aud_meomeop row size = 83 number of columns = 8 index size = 12 }

create table aud_meomeop 
  (
    antes1 char(12),
    antes2 char(12),
    despues1 char(12),
    despues2 char(12),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_meomeop from "public";

{ TABLE aud_tropabajas row size = 107 number of columns = 10 index size = 12 }

create table aud_tropabajas 
  (
    antes1 char(12),
    antes2 char(12),
    antes3 char(12),
    despues1 char(12),
    despues2 char(12),
    despues3 char(12),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_tropabajas from "public";

{ TABLE marginado row size = 19 number of columns = 6 index size = 9 }

create table marginado 
  (
    codigo serial not null ,
    documento integer not null ,
    marginado char(2) not null ,
    quien integer not null ,
    fecha date not null ,
    enterado char(1) not null ,
    primary key (codigo)  constraint u2293_1070
  );

revoke all on marginado from "public";

{ TABLE doc_cerrados row size = 257 number of columns = 23 index size = 30 }

create table doc_cerrados 
  (
    doc_codigo serial not null ,
    doc_tipo smallint not null ,
    doc_nombre char(20) not null ,
    doc_prioridad char(1),
    doc_asunto char(120),
    doc_fec_realizado date not null ,
    doc_fec_in date not null ,
    doc_num_hojas smallint not null ,
    doc_destino smallint not null ,
    doc_procedencia smallint not null ,
    doc_status char(1),
    doc_interesado char(50),
    doc_clasificacion smallint,
    doc_prefijo smallint,
    doc_proposito smallint,
    doc_recibe integer not null ,
    doc_int_ext char(1),
    doc_solucion char(1),
    doc_referencia char(20),
    doc_of_actual char(4),
    doc_of_anterior char(4),
    doc_aceptado char(1),
    doc_fec_aceptado date,
    primary key (doc_codigo)  constraint u845_471
  );

revoke all on doc_cerrados from "public";

{ TABLE aud_doc_cerrados row size = 801 number of columns = 50 index size = 12 }

create table aud_doc_cerrados 
  (
    antes1 char(12),
    antes2 char(12),
    antes3 char(20),
    antes4 char(1),
    antes5 char(120),
    antes6 char(12),
    antes7 char(12),
    antes8 char(12),
    antes9 char(12),
    antes10 char(12),
    antes11 char(1),
    antes12 char(50),
    antes13 char(12),
    antes14 char(12),
    antes15 char(12),
    antes16 char(12),
    antes17 char(1),
    antes18 char(1),
    antes19 char(20),
    antes20 char(12),
    antes21 char(12),
    antes22 char(1),
    antes23 char(12),
    despues1 char(12),
    despues2 char(12),
    despues3 char(20),
    despues4 char(1),
    despues5 char(120),
    despues6 char(12),
    despues7 char(12),
    despues8 char(12),
    despues9 char(12),
    despues10 char(12),
    despues11 char(1),
    despues12 char(50),
    despues13 char(12),
    despues14 char(12),
    despues15 char(12),
    despues16 char(12),
    despues17 char(1),
    despues18 char(1),
    despues19 char(20),
    despues20 char(12),
    despues21 char(12),
    despues22 char(1),
    despues23 char(12),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_doc_cerrados from "public";

{ TABLE aud_dcur row size = 156 number of columns = 31 index size = 12 }

create table aud_dcur 
  (
    catalogo integer,
    grado smallint,
    curso smallint,
    fec_inicio date,
    fec_fin date,
    pais smallint,
    escuela smallint,
    valor money(16,2),
    punteo decimal(5,2),
    equi smallint,
    puesto char(3),
    obserba char(20),
    docto_auto char(10),
    nivel_esc char(1),
    desp_catalogo integer,
    desp_grado smallint,
    desp_curso smallint,
    desp_fec_inicio date,
    desp_fec_fin date,
    desp_pais smallint,
    desp_escuela smallint,
    desp_valor money(16,2),
    desp_punteo decimal(5,2),
    desp_equi smallint,
    desp_puesto char(3),
    desp_obserba char(20),
    desp_docto_auto char(10),
    desp_nivel_esc char(1),
    accion char(1),
    usuario char(10),
    hora datetime year to minute
  );

revoke all on aud_dcur from "public";

{ TABLE mlins row size = 39 number of columns = 3 index size = 0 }

create table mlins 
  (
    ml_codigo smallint not null ,
    ml_puesto smallint not null ,
    ml_descrip char(35) not null 
  );

revoke all on mlins from "public";

{ TABLE situaciones row size = 82 number of columns = 4 index size = 7 }

create table situaciones 
  (
    sit_codigo char(2) not null ,
    sit_desc_lg char(40) not null ,
    sit_desc_md char(25) not null ,
    sit_desc_ct char(15) not null ,
    primary key (sit_codigo)  constraint u101_2
  );

revoke all on situaciones from "public";

{ TABLE tempdpue row size = 87 number of columns = 13 index size = 17 }

create table tempdpue 
  (
    pue_catalogo integer,
    pue_grado smallint not null ,
    pue_arma smallint not null ,
    pue_dependencia smallint not null ,
    pue_jerarquia char(3),
    pue_plaza integer not null ,
    pue_ceom char(6) not null ,
    pue_desc char(45) not null ,
    pue_situacion char(2) not null ,
    pue_fec_nomb date not null ,
    pue_ord_gral char(7) not null ,
    pue_punto_og smallint not null ,
    pue_fec_cese date not null ,
    
    check (pue_fec_nomb <= pue_fec_cese ) constraint ck_pue_nom_cese,
    primary key (pue_catalogo,pue_plaza,pue_fec_nomb)  constraint pk_dpuet
  );

revoke all on tempdpue from "public";

{ TABLE usuariosnt row size = 40 number of columns = 2 index size = 15 }

create table usuariosnt 
  (
    catalogo char(10) not null ,
    observaciones char(30)
  );

revoke all on usuariosnt from "public";

{ TABLE aud_dpue row size = 192 number of columns = 29 index size = 12 }

create table aud_dpue 
  (
    catalogo integer,
    grado smallint,
    arma smallint,
    dependencia smallint,
    jerarquia char(3),
    plaza integer,
    ceom char(6),
    desc char(45),
    situacion char(2),
    fec_nomb date,
    ord_gral char(7),
    punto_og smallint,
    fec_cese date,
    desp_catalogo integer,
    desp_grado smallint,
    desp_arma smallint,
    desp_dependencia smallint,
    desp_jerarquia char(3),
    desp_plaza integer,
    desp_ceom char(6),
    desp_desc char(45),
    desp_situacion char(2),
    desp_fec_nomb date,
    desp_ord_gral char(7),
    desp_punto_og smallint,
    desp_fec_cese date,
    accion char(1),
    usuario char(10),
    hora datetime year to minute
  );

revoke all on aud_dpue from "public";

{ TABLE permorden row size = 22 number of columns = 3 index size = 15 }

create table permorden 
  (
    pero_usuario char(10) not null ,
    pero_programa char(10),
    pero_permiso smallint
  );

revoke all on permorden from "public";

{ TABLE cla_cond row size = 62 number of columns = 2 index size = 0 }

create table cla_cond 
  (
    cla_codigo char(2) not null ,
    cla_descripcion char(60) not null 
  );

revoke all on cla_cond from "public";

{ TABLE lsm_marca row size = 47 number of columns = 2 index size = 7 }

create table lsm_marca 
  (
    marca_cod smallint not null ,
    marca_desc char(45),
    primary key (marca_cod)  constraint pk_marcod_lsmarca
  );

revoke all on lsm_marca from "public";

{ TABLE lsm_equipo row size = 55 number of columns = 5 index size = 18 }

create table lsm_equipo 
  (
    equi_cat integer not null ,
    equi_dep smallint not null ,
    equi_art smallint not null ,
    equi_serie char(45),
    equi_sit smallint,
    primary key (equi_cat,equi_dep)  constraint pk_equicat_lsmeqip
  );

revoke all on lsm_equipo from "public";

{ TABLE menu_det row size = 132 number of columns = 4 index size = 19 }

create table menu_det 
  (
    md_menu smallint not null ,
    md_orden decimal(8,2) not null ,
    md_opcion char(45) not null ,
    md_ejecuta char(80) not null ,
    primary key (md_menu,md_orden)  constraint u219_79
  );

revoke all on menu_det from "public";

{ TABLE orden row size = 26 number of columns = 8 index size = 9 }

create table orden 
  (
    ord_catalogo integer not null ,
    ord_sit char(2) not null ,
    ord_plaza integer not null ,
    ord_fecha_nom date not null ,
    ord_orden char(7),
    ord_punto_orden smallint,
    ord_clase char(1) not null ,
    ord_sitrasla char(2),
    
    check (ord_clase IN ('O' ,'A' ,'E' )) constraint c137_42,
    primary key (ord_catalogo)  constraint u137_41
  );

revoke all on orden from "public";

{ TABLE orden_h row size = 26 number of columns = 8 index size = 0 }

create table orden_h 
  (
    ord_catalogo integer not null ,
    ord_situacion char(2) not null ,
    ord_plaza integer not null ,
    ord_fecha_nomb date not null ,
    ord_orden char(7),
    ord_punto smallint,
    ord_clase char(1) not null ,
    ord_sitrasla char(2),
    
    check (ord_clase IN ('O' ,'A' ,'E' )) constraint c935_371
  );

revoke all on orden_h from "public";

{ TABLE sitrasla row size = 54 number of columns = 3 index size = 7 }

create table sitrasla 
  (
    sit_codigo char(2) not null ,
    sit_desc_lg char(40) not null ,
    sit_desc_ct char(12),
    primary key (sit_codigo)  constraint pk_sitrasla
  );

revoke all on sitrasla from "public";

{ TABLE hfdes1 row size = 55 number of columns = 9 index size = 46 }

create table hfdes1 
  (
    hfd_catalogo integer not null ,
    hfd_fecha date not null ,
    hfd_codigo smallint not null ,
    hfd_nu_reg smallint not null ,
    hfd_monto money(16,2) not null ,
    hfd_mensual money(16,2) not null ,
    hfd_saldo money(16,2) not null ,
    hfd_corrida char(1),
    hfd_varios char(15)
  );

revoke all on hfdes1 from "public";

{ TABLE hfasigc row size = 55 number of columns = 9 index size = 28 }

create table hfasigc 
  (
    hfa_catalogo integer not null ,
    hfa_fecha date not null ,
    hfa_codigo smallint not null ,
    hfa_nu_reg smallint not null ,
    hfa_monto money(16,2) not null ,
    hfa_mensual money(16,2) not null ,
    hfa_saldo money(16,2) not null ,
    hfa_corrida char(1),
    hfa_varios char(15),
    primary key (hfa_catalogo,hfa_fecha,hfa_codigo,hfa_nu_reg)  constraint pk_hfasigc
  );

revoke all on hfasigc from "public";

{ TABLE dlicen row size = 129 number of columns = 10 index size = 34 }

create table dlicen 
  (
    lic_catalogo integer not null ,
    lic_grado smallint not null ,
    lic_situacion char(2) not null ,
    lic_depen smallint not null ,
    lic_fecha_ini date not null ,
    lic_fecha_fin date not null ,
    lic_observacion char(100),
    lic_orden char(7),
    lic_punto_ord smallint,
    lic_estado char(2),
    primary key (lic_catalogo,lic_fecha_ini)  constraint pk_dlicen_catal
  );

revoke all on dlicen from "public";

{ TABLE tusuar row size = 89 number of columns = 5 index size = 15 }

create table tusuar 
  (
    tusuario char(10) not null ,
    tnombre char(40) not null ,
    tdependencia char(15) not null ,
    tseccion char(15) not null ,
    ttiempo decimal(16,2) not null ,
    primary key (tusuario) 
  );

revoke all on tusuar from "public";

{ TABLE indice_dau row size = 119 number of columns = 4 index size = 20 }

create table indice_dau 
  (
    id_nombre char(15) not null ,
    id_aplicacion char(3) not null ,
    id_tipo char(1) not null ,
    id_desc char(100),
    
    check (id_tipo IN ('P' ,'R' ,'F' ,'E' )) constraint ch_id_tipo,
    
    check (id_aplicacion IN ('PER' ,'SEG' ,'ORD' ,'LOG' ,'FIN' ,'OPE' )) constraint 
              ck_id_aplicacion,
    primary key (id_nombre)  constraint pk_indice_dua
  );

revoke all on indice_dau from "public";

{ TABLE eva_detalle row size = 83 number of columns = 4 index size = 13 }

create table eva_detalle 
  (
    det_evaluacion integer,
    det_aspecto smallint not null ,
    det_linea smallint not null ,
    det_texto char(75) not null ,
    primary key (det_evaluacion,det_aspecto,det_linea) 
  );

revoke all on eva_detalle from "public";

{ TABLE accesos row size = 257 number of columns = 16 index size = 0 }

create table accesos 
  (
    a_sistema char(20) not null ,
    a_subsistema char(20) not null ,
    a_catalogo integer not null ,
    a_dependencia char(40) not null ,
    a_negociado char(40) not null ,
    a_plaza integer not null ,
    a_puesto_actual char(40) not null ,
    a_catal_solic integer not null ,
    a_fec_solic datetime year to minute not null ,
    a_catal_autor integer not null ,
    a_catal_opero integer not null ,
    a_fec_opero datetime year to minute not null ,
    a_servidor char(3) not null ,
    a_basedatos char(10) not null ,
    a_asunto char(25) not null ,
    a_nom_objeto char(25)
  );

revoke all on accesos from "public";

{ TABLE rh_evaluacion row size = 60 number of columns = 17 index size = 9 }

create table rh_evaluacion 
  (
    eva_numero serial not null ,
    eva_catalogo integer not null ,
    eva_fec_evaluacion date not null ,
    eva_tiempo_total integer not null ,
    eva_plaza integer not null ,
    eva_tiempo_plaza integer not null ,
    eva_ceom_efectua char(6) not null ,
    eva_evaluador integer not null ,
    eva_tiempo_obser integer not null ,
    eva_fisa smallint not null ,
    eva_rela smallint not null ,
    eva_moet smallint not null ,
    eva_educ smallint not null ,
    eva_total smallint not null ,
    eva_ofi_personal integer not null ,
    eva_comandante integer not null ,
    eva_categoria integer not null ,
    primary key (eva_numero) 
  );

revoke all on rh_evaluacion from "public";

{ TABLE rh_aspecto row size = 81 number of columns = 3 index size = 9 }

create table rh_aspecto 
  (
    asp_codigo serial not null ,
    asp_tipo smallint not null ,
    asp_descripcion char(75) not null ,
    primary key (asp_codigo) 
  );

revoke all on rh_aspecto from "public";

{ TABLE rh_tipo_aspecto row size = 34 number of columns = 2 index size = 9 }

create table rh_tipo_aspecto 
  (
    tip_codigo serial not null ,
    tip_descripcion char(30) not null ,
    primary key (tip_codigo) 
  );

revoke all on rh_tipo_aspecto from "public";

{ TABLE rh_categoria row size = 33 number of columns = 4 index size = 9 }

create table rh_categoria 
  (
    cat_codigo serial not null ,
    cat_descripcion char(25) not null ,
    cat_minimo smallint not null ,
    cat_maximo smallint not null ,
    primary key (cat_codigo)  constraint pk_rh_cat
  );

revoke all on rh_categoria from "public";

{ TABLE rh_det_evaluacion row size = 78 number of columns = 4 index size = 13 }

create table rh_det_evaluacion 
  (
    det_evaluacion integer not null ,
    det_aspecto smallint not null ,
    det_linea smallint not null ,
    det_texto char(70),
    primary key (det_evaluacion,det_aspecto,det_linea)  constraint pk_rh_det_eval
  );

revoke all on rh_det_evaluacion from "public";

{ TABLE aud_asamblea row size = 32 number of columns = 7 index size = 12 }

create table aud_asamblea 
  (
    as_catalogo integer,
    as_cantidad smallint,
    desp_as_catalogo integer,
    desp_as_cantidad smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_asamblea from "public";

{ TABLE aud_asig_cat row size = 30 number of columns = 7 index size = 12 }

create table aud_asig_cat 
  (
    asc_tipo char(1),
    asc_catalogo integer,
    desp_asc_tipo char(1),
    desp_asc_catalogo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_asig_cat from "public";

{ TABLE aud_asig_plaza row size = 28 number of columns = 5 index size = 12 }

create table aud_asig_plaza 
  (
    asc_plaza integer,
    desp_asc_plaza integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_asig_plaza from "public";

{ TABLE aud_categorias row size = 88 number of columns = 7 index size = 12 }

create table aud_categorias 
  (
    cat_codigo char(4),
    cat_descripcion char(30),
    desp_cat_codigo char(4),
    desp_cat_descripcion char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_categorias from "public";

{ TABLE aud_cmm_rebajados row size = 648 number of columns = 19 index size = 12 }

create table aud_cmm_rebajados 
  (
    reb_catalogo integer,
    reb_fec_inicio date,
    reb_fec_final date,
    reb_diagnostico char(45),
    reb_tipo varchar(250),
    reb_tiempo smallint,
    reb_grado smallint,
    reb_depen smallint,
    desp_reb_catalogo integer,
    desp_reb_fec_inicio date,
    desp_reb_fec_final date,
    desp_reb_diagnostico char(45),
    desp_reb_tipo varchar(250),
    desp_reb_tiempo smallint,
    desp_reb_grado smallint,
    desp_reb_depen smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cmm_rebajados from "public";

{ TABLE aud_depmun row size = 254 number of columns = 13 index size = 12 }

create table aud_depmun 
  (
    dm_codigo char(4),
    dm_desc_lg char(30),
    dm_desc_md char(15),
    dm_desc_ct char(8),
    dm_mun_dep char(60),
    desp_dm_codigo char(4),
    desp_dm_desc_lg char(30),
    desp_dm_desc_md char(15),
    desp_dm_desc_ct char(8),
    desp_dm_mun_dep char(60),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_depmun from "public";

{ TABLE aud_des_no_efec row size = 64 number of columns = 15 index size = 12 }

create table aud_des_no_efec 
  (
    no_efec_catalogo integer,
    no_efec_codigo smallint,
    no_efec_registro smallint,
    no_efec_fecha date,
    no_efec_cantidad money(16,2),
    no_efec_corrida char(1),
    desp_no_efec_catalogo integer,
    desp_no_efec_codigo smallint,
    desp_no_efec_registro smallint,
    desp_no_efec_fecha date,
    desp_no_efec_cantidad money(16,2),
    desp_no_efec_corrida char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_des_no_efec from "public";

{ TABLE aud_descripciones row size = 224 number of columns = 11 index size = 12 }

create table aud_descripciones 
  (
    cod_dependencia smallint,
    usu_upd_menu char(50),
    servidor char(25),
    mdibmp char(25),
    desp_cod_dependencia smallint,
    desp_usu_upd_menu char(50),
    desp_servidor char(25),
    desp_mdibmp char(25),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_descripciones from "public";

{ TABLE aud_eva_detalle row size = 186 number of columns = 11 index size = 12 }

create table aud_eva_detalle 
  (
    det_evaluacion integer,
    det_aspecto smallint,
    det_linea smallint,
    det_texto char(75),
    desp_det_evaluacion integer,
    desp_det_aspecto smallint,
    desp_det_linea smallint,
    desp_det_texto char(75),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_detalle from "public";

{ TABLE aud_disr row size = 46 number of columns = 7 index size = 12 }

create table aud_disr 
  (
    isr_catalogo integer,
    isr_cantidad money(16,2),
    desp_isr_catalogo integer,
    desp_isr_cantidad money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_disr from "public";

{ TABLE insp_tipos row size = 154 number of columns = 4 index size = 9 }

create table insp_tipos 
  (
    tip_codigo integer not null ,
    tip_descct char(50),
    tip_descmd char(50),
    tip_desclg char(50),
    primary key (tip_codigo)  constraint pk_insp_tipos
  );

revoke all on insp_tipos from "public";

{ TABLE insp_situacion row size = 354 number of columns = 4 index size = 9 }

create table insp_situacion 
  (
    sit_codigo integer not null ,
    sit_descct char(50),
    sit_descmd char(50),
    sit_desclg char(250),
    primary key (sit_codigo)  constraint pk_insp_situacion
  );

revoke all on insp_situacion from "public";

{ TABLE insp_nueva row size = 262 number of columns = 8 index size = 9 }

create table insp_nueva 
  (
    codigo integer not null ,
    corta char(50),
    mediana char(50),
    larga char(50),
    host char(50),
    usuario char(50),
    date date,
    del integer,
    primary key (codigo)  constraint pk_insp_nueva
  );

revoke all on insp_nueva from "public";

{ TABLE insp_ianota row size = 258 number of columns = 3 index size = 9 }

create table insp_ianota 
  (
    a_codigo integer not null ,
    a_descripcion char(250),
    a_edif_terreno integer,
    primary key (a_codigo)  constraint pk_insp_ianota
  );

revoke all on insp_ianota from "public";

{ TABLE insp_estado row size = 154 number of columns = 4 index size = 9 }

create table insp_estado 
  (
    est_codigo integer not null ,
    est_descct char(50),
    est_descmd char(50),
    est_desclg char(50),
    primary key (est_codigo)  constraint pk_insp_estado
  );

revoke all on insp_estado from "public";

{ TABLE insp_anotaciones row size = 163 number of columns = 5 index size = 26 }

create table insp_anotaciones 
  (
    a_cat integer not null ,
    a_anota integer not null ,
    a_fecha date,
    a_si_no char(1),
    a_observaciones char(150),
    primary key (a_cat,a_anota,a_fecha)  constraint pk_insp_anotaciones
  );

revoke all on insp_anotaciones from "public";

{ TABLE aud_insp_nueva row size = 544 number of columns = 19 index size = 12 }

create table aud_insp_nueva 
  (
    codigo integer,
    corta char(50),
    mediana char(50),
    larga char(50),
    host char(50),
    usuarios char(50),
    date date,
    del integer,
    desp_codigo integer,
    desp_corta char(50),
    desp_mediana char(50),
    desp_larga char(50),
    desp_host char(50),
    desp_usuarios char(50),
    desp_date date,
    desp_del integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_insp_nueva from "public";

{ TABLE aud_insp_situacion row size = 328 number of columns = 11 index size = 12 }

create table aud_insp_situacion 
  (
    sit_codigo integer,
    sit_descct char(50),
    sit_descmd char(50),
    sit_desclg char(50),
    desp_sit_codigo integer,
    desp_sit_descct char(50),
    desp_sit_descmd char(50),
    desp_sit_desclg char(50),
    accion char(1),
    usuario char(12),
    hora datetime year to minute
  );

revoke all on aud_insp_situacion from "public";

{ TABLE aud_insp_estado row size = 328 number of columns = 11 index size = 12 }

create table aud_insp_estado 
  (
    est_codigo integer,
    est_descct char(50),
    est_descmd char(50),
    est_desclg char(50),
    desp_est_codigo integer,
    desp_est_descct char(50),
    desp_est_descmd char(50),
    desp_est_desclg char(50),
    accion char(1),
    usuario char(12),
    hora datetime year to minute
  );

revoke all on aud_insp_estado from "public";

{ TABLE aud_insp_tipos row size = 328 number of columns = 11 index size = 12 }

create table aud_insp_tipos 
  (
    tip_codigo integer,
    tip_descct char(50),
    tip_descmd char(50),
    tip_desclg char(50),
    desp_tip_codigo integer,
    desp_tip_descct char(50),
    desp_tip_descmd char(50),
    desp_tip_desclg char(50),
    accion char(1),
    usuario char(12),
    hora datetime year to minute
  );

revoke all on aud_insp_tipos from "public";

{ TABLE aud_insp_anotaciones row size = 346 number of columns = 13 index size = 12 }

create table aud_insp_anotaciones 
  (
    a_cat integer,
    a_anota integer,
    a_fecha date,
    a_si_no char(1),
    a_observaciones char(150),
    desp_a_cat integer,
    desp_a_anota integer,
    desp_a_fecha date,
    desp_a_si_no char(1),
    desp_a_observaciones char(150),
    accion char(1),
    usuario char(12),
    hora datetime year to minute
  );

revoke all on aud_insp_anotaciones from "public";

{ TABLE aud_insp_ianota row size = 536 number of columns = 9 index size = 12 }

create table aud_insp_ianota 
  (
    a_codigo integer,
    a_descripcion char(250),
    a_edif_terreno integer,
    desp_a_codigo integer,
    desp_a_descripcion char(250),
    desp_a_edif_terreno integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_insp_ianota from "public";

{ TABLE cc_tip_requerimiento row size = 34 number of columns = 2 index size = 9 }

create table cc_tip_requerimiento 
  (
    tipcodigo serial not null ,
    tipdescripcion char(30) not null ,
    primary key (tipcodigo) 
  );

revoke all on cc_tip_requerimiento from "public";

{ TABLE cc_divisiones row size = 58 number of columns = 3 index size = 9 }

create table cc_divisiones 
  (
    divcodigo serial not null ,
    divnombre char(50) not null ,
    divresponsable integer not null ,
    primary key (divcodigo) 
  );

revoke all on cc_divisiones from "public";

{ TABLE cc_situaciones row size = 34 number of columns = 2 index size = 9 }

create table cc_situaciones 
  (
    sitcodigo serial not null ,
    sitdescripcion char(30) not null ,
    primary key (sitcodigo) 
  );

revoke all on cc_situaciones from "public";

{ TABLE cc_problemas row size = 366 number of columns = 3 index size = 9 }

create table cc_problemas 
  (
    procodigo serial not null ,
    proproblema varchar(180) not null ,
    prosolucion varchar(180) not null ,
    primary key (procodigo) 
  );

revoke all on cc_problemas from "public";

{ TABLE aud_cc_divisiones row size = 136 number of columns = 9 index size = 12 }

create table aud_cc_divisiones 
  (
    divcodigo integer,
    divnombre char(50),
    divresponsable integer,
    desp_divcodigo integer,
    desp_divnombre char(50),
    desp_divresponsable integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cc_divisiones from "public";

{ TABLE aud_cc_problemas row size = 752 number of columns = 9 index size = 12 }

create table aud_cc_problemas 
  (
    procodigo integer,
    proproblema varchar(180),
    prosolucion varchar(180),
    desp_procodigo integer,
    desp_proproblema varchar(180),
    desp_prosolucion varchar(180),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cc_problemas from "public";

{ TABLE aud_cc_situaciones row size = 88 number of columns = 7 index size = 12 }

create table aud_cc_situaciones 
  (
    sitcodigo integer,
    sitdescripcion char(30),
    desp_sitcodigo integer,
    desp_sitdescripcion char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cc_situaciones from "public";

{ TABLE aud_cc_tip_requerimiento row size = 88 number of columns = 7 index size = 12 }

create table aud_cc_tip_requerimiento 
  (
    tipcodigo integer,
    tipdescripcion char(30),
    desp_tipcodigo integer,
    desp_tipdescripcion char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cc_tip_requerimiento from "public";

{ TABLE aud_dfdes_inv row size = 350 number of columns = 39 index size = 12 }

create table aud_dfdes_inv 
  (
    dfdi_catalogo integer,
    dfdi_codigo smallint,
    dfdi_nu_reg smallint,
    dfdi_cod_control smallint,
    dfdi_tipo_desc char(1),
    dfdi_fec_ini date,
    dfdi_ult_act date,
    dfdi_fec_cer date,
    dfdi_monto money(16,2),
    dfdi_saldo money(16,2),
    dfdi_mensual money(16,2),
    dfdi_tot_cuotas smallint,
    dfdi_num_cuotas smallint,
    dfdi_documen char(6),
    dfdi_codeudor integer,
    dfdi_nom_bene char(50),
    dfdi_juz_con char(50),
    dfdi_si_no char(1),
    desp_dfdi_catalogo integer,
    desp_dfdi_codigo smallint,
    desp_dfdi_nu_reg smallint,
    desp_dfdi_cod_control smallint,
    desp_dfdi_tipo_desc char(1),
    desp_dfdi_fec_ini date,
    desp_dfdi_ult_act date,
    desp_dfdi_fec_cer date,
    desp_dfdi_monto money(16,2),
    desp_dfdi_saldo money(16,2),
    desp_dfdi_mensual money(16,2),
    desp_dfdi_tot_cuotas smallint,
    desp_dfdi_num_cuotas smallint,
    desp_dfdi_documen char(6),
    desp_dfdi_codeudor integer,
    desp_dfdi_nom_bene char(50),
    desp_dfdi_juz_con char(50),
    desp_dfdi_si_no char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dfdes_inv from "public";

{ TABLE aud_dfdes_invt row size = 350 number of columns = 39 index size = 12 }

create table aud_dfdes_invt 
  (
    dfdi_catalogo integer,
    dfdi_codigo smallint,
    dfdi_nu_reg smallint,
    dfdi_cod_control smallint,
    dfdi_tipo_desc char(1),
    dfdi_fec_ini date,
    didi_ult_act date,
    dfdi_fec_cer date,
    dfdi_monto money(16,2),
    dfdi_saldo money(16,2),
    dfdi_mensual money(16,2),
    dfdi_tot_cuotas smallint,
    dfdi_num_cuotas smallint,
    dfdi_documen char(6),
    dfdi_codeudor integer,
    dfdi_nom_bene char(50),
    dfdi_juz_con char(50),
    dfdi_si_no char(1),
    desp_dfdi_catalogo integer,
    desp_dfdi_codigo smallint,
    desp_dfdi_nu_reg smallint,
    desp_dfdi_cod_control smallint,
    desp_dfdi_tipo_desc char(1),
    desp_dfdi_fec_ini date,
    desp_didi_ult_act date,
    desp_dfdi_fec_cer date,
    desp_dfdi_monto money(16,2),
    desp_dfdi_saldo money(16,2),
    desp_dfdi_mensual money(16,2),
    desp_dfdi_tot_cuotas smallint,
    desp_dfdi_num_cuotas smallint,
    desp_dfdi_documen char(6),
    desp_dfdi_codeudor integer,
    desp_dfdi_nom_bene char(50),
    desp_dfdi_juz_con char(50),
    desp_dfdi_si_no char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dfdes_invt from "public";

{ TABLE aud_dfdes_ipm row size = 350 number of columns = 39 index size = 12 }

create table aud_dfdes_ipm 
  (
    dfdp_catalogo integer,
    dfdp_codigo smallint,
    dfdp_nu_reg smallint,
    dfdp_cod_control smallint,
    dfdp_tipo_desc char(1),
    dfdp_fec_ini date,
    dfdp_ult_act date,
    dfdp_fec_cer date,
    dfdp_monto money(16,2),
    dfdp_saldo money(16,2),
    dfdp_mensual money(16,2),
    dfdp_tot_cuotas smallint,
    dfdp_num_cuotas smallint,
    dfdp_documen char(6),
    dfdp_codeudor integer,
    dfdp_nom_bene char(50),
    dfdp_juz_con char(50),
    dfdp_si_no char(1),
    desp_dfdp_catalogo integer,
    desp_dfdp_codigo smallint,
    desp_dfdp_nu_reg smallint,
    desp_dfdp_cod_control smallint,
    desp_dfdp_tipo_desc char(1),
    desp_dfdp_fec_ini date,
    desp_dfdp_ult_act date,
    desp_dfdp_fec_cer date,
    desp_dfdp_monto money(16,2),
    desp_dfdp_saldo money(16,2),
    desp_dfdp_mensual money(16,2),
    desp_dfdp_tot_cuotas smallint,
    desp_dfdp_num_cuotas smallint,
    desp_dfdp_documen char(6),
    desp_dfdp_codeudor integer,
    desp_dfdp_nom_bene char(50),
    desp_dfdp_juz_con char(50),
    desp_dfdp_si_no char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dfdes_ipm from "public";

{ TABLE insp_inmuebles row size = 1183 number of columns = 18 index size = 36 }

create table insp_inmuebles 
  (
    i_catalogo integer not null ,
    i_comando smallint not null ,
    i_tipo integer,
    i_inventariada char(1) not null ,
    i_no_inventario integer,
    i_nombre char(250),
    i_uso char(250),
    i_costo money(16,2),
    i_ubicacion char(250),
    i_estado integer,
    i_situacion integer,
    i_fecha_apertura date,
    i_observaciones char(255),
    i_folio integer,
    i_nfinca integer,
    i_libro char(50),
    i_extension char(80),
    i_fecaval date,
    primary key (i_catalogo)  constraint pk_insp_inmuebles
  );

revoke all on insp_inmuebles from "public";

{ TABLE aud_accesos row size = 534 number of columns = 35 index size = 12 }

create table aud_accesos 
  (
    a_sistema char(20),
    a_subsistema char(20),
    a_catalogo integer,
    a_dependencia char(40),
    a_negociado char(40),
    a_plaza integer,
    a_puesto_actual char(40),
    a_catal_solic integer,
    a_fec_solic datetime year to minute,
    a_catal_autor integer,
    a_catal_opero integer,
    a_fec_opero datetime year to minute,
    a_servidor char(3),
    a_basedatos char(10),
    a_asunto char(25),
    a_nom_objeto char(25),
    desp_a_sistema char(20),
    desp_a_subsistema char(20),
    desp_a_catalogo integer,
    desp_a_dependencia char(40),
    desp_a_negociado char(40),
    desp_a_plaza integer,
    desp_a_puesto_actual char(40),
    desp_a_catal_solic integer,
    desp_a_fec_solic datetime year to minute,
    desp_a_catal_autor integer,
    desp_a_catal_opero integer,
    desp_a_fec_opero datetime year to minute,
    desp_a_servidor char(3),
    desp_a_basedatos char(10),
    desp_a_asunto char(25),
    desp_a_nom_objeto char(25),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_accesos from "public";

{ TABLE aud_chunk row size = 84 number of columns = 13 index size = 12 }

create table aud_chunk 
  (
    ch_id smallint,
    ch_dbspace smallint,
    ch_tamano integer,
    ch_path char(20),
    ch_creacion date,
    desp_ch_id smallint,
    desp_ch_dbspace smallint,
    desp_ch_tamano integer,
    desp_ch_path char(20),
    desp_ch_creacion date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_chunk from "public";

{ TABLE aud_cla_cond row size = 84 number of columns = 7 index size = 12 }

create table aud_cla_cond 
  (
    cla_codigo char(2),
    cla_descripcion char(30),
    desp_cla_codigo char(2),
    desp_cla_descripcion char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cla_cond from "public";

{ TABLE aud_empresas row size = 98 number of columns = 17 index size = 12 }

create table aud_empresas 
  (
    em_catalogo integer,
    em_codigo smallint,
    em_fecha date,
    em_monto money(16,2),
    em_mensual money(16,2),
    em_saldo money(16,2),
    em_control smallint,
    desp_em_catalogo integer,
    desp_em_codigo smallint,
    desp_em_fecha date,
    desp_em_monto money(16,2),
    desp_em_mensual money(16,2),
    desp_em_saldo money(16,2),
    desp_em_control smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_empresas from "public";

{ TABLE aud_fbitacora row size = 48 number of columns = 11 index size = 12 }

create table aud_fbitacora 
  (
    fbit_user integer,
    fbit_cod smallint,
    fbit_mes date,
    fbit_fecha date,
    desp_fbit_user integer,
    desp_fbit_cod smallint,
    desp_fbit_mes date,
    desp_fbit_fecha date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fbitacora from "public";

{ TABLE aud_fmasi row size = 130 number of columns = 11 index size = 12 }

create table aud_fmasi 
  (
    mas_codigo smallint,
    mas_desc_ct char(8),
    mas_desc_md char(15),
    mas_desc_lg char(30),
    desp_mas_codigo smallint,
    desp_mas_desc_ct char(8),
    desp_mas_desc_md char(15),
    desp_mas_desc_lg char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fmasi from "public";

{ TABLE aud_fmdes row size = 130 number of columns = 11 index size = 12 }

create table aud_fmdes 
  (
    mde_codigo smallint,
    mde_desc_ct char(8),
    mde_desc_md char(15),
    mde_desc_lg char(30),
    desp_mde_codigo smallint,
    desp_mde_desc_ct char(8),
    desp_mde_desc_md char(15),
    desp_mde_desc_lg char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fmdes from "public";

{ TABLE aud_fnosalta row size = 28 number of columns = 5 index size = 12 }

create table aud_fnosalta 
  (
    fcatalogo integer,
    desp_fcatalogo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fnosalta from "public";

{ TABLE aud_fuerza row size = 34 number of columns = 11 index size = 12 }

create table aud_fuerza 
  (
    f_dep smallint,
    f_grado smallint,
    f_total smallint,
    f_situa char(1),
    desp_f_dep smallint,
    desp_f_grado smallint,
    desp_f_total smallint,
    desp_f_situa char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fuerza from "public";

{ TABLE aud_hdareal row size = 46 number of columns = 7 index size = 12 }

create table aud_hdareal 
  (
    hdr_catalogo integer,
    hdr_cantidad money(16,2),
    desp_hdr_catalogo integer,
    desp_hdr_cantidad money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_hdareal from "public";

{ TABLE aud_hist_rep row size = 160 number of columns = 17 index size = 12 }

create table aud_hist_rep 
  (
    hr_numero integer,
    hr_catalogo integer,
    hr_terminal char(10),
    hr_fecha date,
    hr_hora char(8),
    hr_usuario char(30),
    hr_codigo char(10),
    desp_hr_numero integer,
    desp_hr_catalogo integer,
    desp_hr_terminal char(10),
    desp_hr_fecha date,
    desp_hr_hora char(8),
    desp_hr_usuario char(30),
    desp_hr_codigo char(10),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_hist_rep from "public";

{ TABLE aud_indice_dau row size = 258 number of columns = 11 index size = 12 }

create table aud_indice_dau 
  (
    id_nombre char(15),
    id_aplicacion char(3),
    id_tipo char(1),
    id_desc char(100),
    desp_id_nombre char(15),
    desp_id_aplicacion char(3),
    desp_id_tipo char(1),
    desp_id_desc char(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_indice_dau from "public";

{ TABLE insp_observaciones row size = 112 number of columns = 4 index size = 18 }

create table insp_observaciones 
  (
    obs_cod serial not null ,
    obs_cat integer not null ,
    obs_linea integer,
    obs_desc char(100),
    primary key (obs_cod)  constraint pk_insp_observaciones
  );

revoke all on insp_observaciones from "public";

{ TABLE aud_insp_observaciones row size = 244 number of columns = 11 index size = 12 }

create table aud_insp_observaciones 
  (
    obs_cod integer,
    obs_cat integer,
    obs_linea integer,
    obs_desc char(100),
    desp_obs_cod integer,
    desp_obs_cat integer,
    desp_obs_linea integer,
    desp_obs_desc char(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_insp_observaciones from "public";

{ TABLE aud_lsm_equipo row size = 130 number of columns = 13 index size = 12 }

create table aud_lsm_equipo 
  (
    equi_cat integer,
    equi_dep smallint,
    equi_art smallint,
    equi_serie char(45),
    equi_sit smallint,
    desp_equi_cat integer,
    desp_equi_dep smallint,
    desp_equi_art smallint,
    desp_equi_serie char(45),
    desp_equi_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lsm_equipo from "public";

{ TABLE aud_lsm_marca row size = 114 number of columns = 7 index size = 12 }

create table aud_lsm_marca 
  (
    marca_cod smallint,
    marca_desc char(45),
    desp_marca_cod smallint,
    desp_marca_desc char(45),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lsm_marca from "public";

{ TABLE aud_maestro row size = 36 number of columns = 7 index size = 12 }

create table aud_maestro 
  (
    mae_ord_gen char(7),
    mae_clase char(1),
    desp_mae_ord_gen char(7),
    desp_mae_clase char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_maestro from "public";

{ TABLE aud_mcols row size = 68 number of columns = 9 index size = 12 }

create table aud_mcols 
  (
    mc_codigo smallint,
    mc_orden smallint,
    mc_descrip char(20),
    desp_mc_codigo smallint,
    desp_mc_orden smallint,
    desp_mc_descrip char(20),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mcols from "public";

{ TABLE aud_mlins row size = 98 number of columns = 9 index size = 12 }

create table aud_mlins 
  (
    ml_codigo smallint,
    ml_puesto smallint,
    ml_descrip char(35),
    desp_ml_codigo smallint,
    desp_ml_puesto smallint,
    desp_ml_descrip char(35),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mlins from "public";

{ TABLE aud_mnums row size = 44 number of columns = 13 index size = 12 }

create table aud_mnums 
  (
    mn_codigo smallint,
    mn_puesto smallint,
    mn_orden smallint,
    mn_dep smallint,
    mn_valor integer,
    desp_mn_codigo smallint,
    desp_mn_puesto smallint,
    desp_mn_orden smallint,
    desp_mn_dep smallint,
    desp_mn_valor integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mnums from "public";

{ TABLE aud_mreps row size = 164 number of columns = 9 index size = 12 }

create table aud_mreps 
  (
    mr_codigo smallint,
    mr_descrip char(60),
    mr_repo char(10),
    desp_mr_codigo smallint,
    desp_mr_descrip char(60),
    desp_mr_repo char(10),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mreps from "public";

{ TABLE aud_rh_aspecto row size = 182 number of columns = 9 index size = 12 }

create table aud_rh_aspecto 
  (
    asp_codigo integer,
    asp_tipo smallint,
    asp_descripcion char(75),
    desp_asp_codigo integer,
    desp_asp_tipo smallint,
    desp_asp_descripcion char(75),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rh_aspecto from "public";

{ TABLE aud_rh_categoria row size = 86 number of columns = 11 index size = 12 }

create table aud_rh_categoria 
  (
    cat_codigo integer,
    cat_descripcion char(25),
    cat_minimo smallint,
    cat_maximo smallint,
    desp_cat_codigo integer,
    desp_cat_descripcion char(25),
    desp_cat_minimo smallint,
    desp_cat_maximo smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rh_categoria from "public";

{ TABLE aud_rh_det_evaluacion row size = 176 number of columns = 11 index size = 12 }

create table aud_rh_det_evaluacion 
  (
    det_evaluacion integer,
    det_aspecto smallint,
    det_linea smallint,
    det_texto char(70),
    desp_det_evaluacion integer,
    desp_det_aspecto smallint,
    desp_det_linea smallint,
    desp_det_texto char(70),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rh_det_evaluacion from "public";

{ TABLE aud_rh_evaluacion row size = 140 number of columns = 37 index size = 12 }

create table aud_rh_evaluacion 
  (
    eva_numero integer,
    eva_catalogo integer,
    eva_fec_evaluacion date,
    eva_tiempo_total integer,
    eva_plaza integer,
    eva_tiempo_plaza integer,
    eva_ceom_efectua char(6),
    eva_evaluador integer,
    eva_tiempo_obser integer,
    eva_fisa smallint,
    eva_rela smallint,
    eva_moet smallint,
    eva_educ smallint,
    eva_total smallint,
    eva_ofi_personal integer,
    eva_comandante integer,
    eva_categoria integer,
    desp_eva_numero integer,
    desp_eva_catalogo integer,
    desp_eva_fec_evaluacion date,
    desp_eva_tiempo_total integer,
    desp_eva_plaza integer,
    desp_eva_tiempo_plaza integer,
    desp_eva_ceom_efectua char(6),
    desp_eva_evaluador integer,
    desp_eva_tiempo_obser integer,
    desp_eva_fisa smallint,
    desp_eva_rela smallint,
    desp_eva_moet smallint,
    desp_eva_educ smallint,
    desp_eva_total smallint,
    desp_eva_ofi_personal integer,
    desp_eva_comandante integer,
    desp_eva_categoria integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rh_evaluacion from "public";

{ TABLE aud_rh_tipo_aspecto row size = 88 number of columns = 7 index size = 12 }

create table aud_rh_tipo_aspecto 
  (
    tip_codigo integer,
    tip_descripcion char(30),
    desp_tip_codigo integer,
    desp_tip_descripcion char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rh_tipo_aspecto from "public";

{ TABLE aud_noestan row size = 28 number of columns = 5 index size = 12 }

create table aud_noestan 
  (
    noe_catalogo integer,
    desp_noe_catalogo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_noestan from "public";

{ TABLE aud_nopagados row size = 28 number of columns = 5 index size = 12 }

create table aud_nopagados 
  (
    catalogo integer,
    desp_catalogo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_nopagados from "public";

{ TABLE aud_orden_h row size = 72 number of columns = 19 index size = 12 }

create table aud_orden_h 
  (
    ord_catalogo integer,
    ord_situacion char(2),
    ord_plaza integer,
    ord_fecha_nomb date,
    ord_orden char(7),
    ord_punto smallint,
    ord_clase char(1),
    ord_sitrasla char(2),
    desp_ord_catalogo integer,
    desp_ord_situacion char(2),
    desp_ord_plaza integer,
    desp_ord_fecha_nomb date,
    desp_ord_orden char(7),
    desp_ord_punto smallint,
    desp_ord_clase char(1),
    desp_ord_sitrasla char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_orden_h from "public";

{ TABLE aud_pdinero row size = 84 number of columns = 7 index size = 12 }

create table aud_pdinero 
  (
    p_num smallint,
    p_num_desc char(30),
    desp_p_num smallint,
    desp_p_num_desc char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_pdinero from "public";

{ TABLE aud_permorden row size = 64 number of columns = 9 index size = 12 }

create table aud_permorden 
  (
    pero_usuario char(10),
    pero_programa char(10),
    pero_permiso smallint,
    desp_pero_usuario char(10),
    desp_pero_programa char(10),
    desp_pero_permiso smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_permorden from "public";

{ TABLE aud_process row size = 224 number of columns = 23 index size = 12 }

create table aud_process 
  (
    cod_process integer,
    oper_process integer,
    h_ini_process datetime hour to second,
    comm_process char(15),
    desc_process char(45),
    h_fin_process datetime hour to second,
    fec_process date,
    host_process char(10),
    cinta_process char(10),
    param_process smallint,
    desp_cod_process integer,
    desp_oper_process integer,
    desp_h_ini_process datetime hour to second,
    desp_comm_process char(15),
    desp_desc_process char(45),
    desp_h_fin_process datetime hour to second,
    desp_fec_process date,
    desp_host_process char(10),
    desp_cinta_process char(10),
    desp_param_process smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_process from "public";

{ TABLE aud_retencion row size = 46 number of columns = 7 index size = 12 }

create table aud_retencion 
  (
    ret_catalogo integer,
    ret_monto money(16,2),
    desp_ret_catalogo integer,
    desp_ret_monto money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_retencion from "public";

{ TABLE aud_sinefecto row size = 68 number of columns = 9 index size = 12 }

create table aud_sinefecto 
  (
    catalogo integer,
    orden char(8),
    usuarios char(12),
    desp_catalogo integer,
    desp_orden char(8),
    desp_usuarios char(12),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sinefecto from "public";

{ TABLE aud_sistemas row size = 66 number of columns = 7 index size = 12 }

create table aud_sistemas 
  (
    sis_codigo char(3),
    sis_nombre char(20),
    desp_sis_codigo char(3),
    desp_sis_nombre char(20),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sistemas from "public";

{ TABLE aud_sitrasla row size = 128 number of columns = 9 index size = 12 }

create table aud_sitrasla 
  (
    sit_codigo char(2),
    sit_desc_lg char(40),
    sit_desc_ct char(12),
    desp_sit_codigo char(2),
    desp_sit_desc_lg char(40),
    desp_sit_desc_ct char(12),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sitrasla from "public";

{ TABLE aud_t_org row size = 272 number of columns = 43 index size = 12 }

create table aud_t_org 
  (
    torg_plaza integer,
    torg_ceom char(6),
    torg_dependencia smallint,
    torg_jerarquia char(10),
    torg_grado smallint,
    torg_plaza_desc char(30),
    torg_situacion char(1),
    torg_cod_pago char(1),
    torg_hrs_trab smallint,
    torg_fec_ult_mod date,
    torg_ord_gral char(7),
    torg_dep_auto smallint,
    torg_docu_auto char(10),
    torg_fec_auto date,
    torg_nominas char(1),
    torg_usuario char(8),
    torg_fec_hora datetime year to minute,
    torg_terminal char(20),
    torg_accion char(1),
    torg_catalogo integer,
    desp_torg_plaza integer,
    desp_torg_ceom char(6),
    desp_torg_dependencia smallint,
    desp_torg_jerarquia char(10),
    desp_torg_grado smallint,
    desp_torg_plaza_desc char(30),
    desp_torg_situacion char(1),
    desp_torg_cod_pago char(1),
    desp_torg_hrs_trab smallint,
    desp_torg_fec_ult_mod date,
    desp_torg_ord_gral char(7),
    desp_torg_dep_auto smallint,
    desp_torg_docu_auto char(10),
    desp_torg_fec_auto date,
    desp_torg_nominas char(1),
    desp_torg_usuario char(8),
    desp_torg_fec_hora datetime year to minute,
    desp_torg_terminal char(20),
    desp_torg_accion char(1),
    desp_torg_catalogo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_t_org from "public";

{ TABLE aud_tablas row size = 330 number of columns = 13 index size = 12 }

create table aud_tablas 
  (
    tabla char(20),
    sistema char(3),
    llave_primaria char(32),
    llaves_foraneas char(50),
    descripcion char(50),
    desp_tabla char(20),
    desp_sistema char(3),
    desp_llave_primaria char(32),
    desp_llaves_foraneas char(50),
    desp_descripcion char(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tablas from "public";

{ TABLE aud_tconec row size = 146 number of columns = 17 index size = 12 }

create table aud_tconec 
  (
    dia char(8),
    tiempo decimal(16,2),
    usuarios char(10),
    dependencia char(15),
    seccion char(15),
    menu smallint,
    fecha date,
    desp_dia char(8),
    desp_tiempo decimal(16,2),
    desp_usuarios char(10),
    desp_dependencia char(15),
    desp_seccion char(15),
    desp_menu smallint,
    desp_fecha date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tconec from "public";

{ TABLE aud_tauth row size = 116 number of columns = 7 index size = 12 }

create table aud_tauth 
  (
    usu_user char(8),
    usu_nombre char(40),
    desp_usu_user char(8),
    desp_usu_nombre char(40),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tauth from "public";

{ TABLE aud_telefonos row size = 168 number of columns = 13 index size = 12 }

create table aud_telefonos 
  (
    tinstitucion integer,
    tnombre char(50),
    tclase char(3),
    tnumero char(12),
    textension char(5),
    desp_tinstitucion integer,
    desp_tnombre char(50),
    desp_tclase char(3),
    desp_tnumero char(12),
    desp_textension char(5),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_telefonos from "public";

{ TABLE aud_tempdpue row size = 194 number of columns = 29 index size = 12 }

create table aud_tempdpue 
  (
    pue_catalogo integer,
    pue_grado smallint,
    pue_arma smallint,
    pue_dependencia smallint,
    pue_jerarquia char(3),
    pue_plaza integer,
    pue_ceom char(6),
    pue_desc char(45),
    pue_situacion char(2),
    pue_fec_nomb date,
    pue_ord_gral char(7),
    pue_punto_og smallint,
    pue_fec_cese date,
    desp_pue_catalogo integer,
    desp_pue_grado smallint,
    desp_pue_arma smallint,
    desp_pue_dependencia smallint,
    desp_pue_jerarquia char(3),
    desp_pue_plaza integer,
    desp_pue_ceom char(6),
    desp_pue_desc char(45),
    desp_pue_situacion char(2),
    desp_pue_fec_nomb date,
    desp_pue_ord_gral char(7),
    desp_pue_punto_og smallint,
    desp_pue_fec_cese date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tempdpue from "public";

{ TABLE aud_tr_armas row size = 122 number of columns = 21 index size = 12 }

create table aud_tr_armas 
  (
    tra_catalogo integer,
    tra_num_arma char(20),
    tra_tipo char(10),
    tra_asignacion char(1),
    tra_situacion smallint,
    tra_plaza integer,
    tra_fecha date,
    tra_accion smallint,
    tra_persona integer,
    desp_tra_catalogo integer,
    desp_tra_num_arma char(20),
    desp_tra_tipo char(10),
    desp_tra_asignacion char(1),
    desp_tra_situacion smallint,
    desp_tra_plaza integer,
    desp_tra_fecha date,
    desp_tra_accion smallint,
    desp_tra_persona integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tr_armas from "public";

{ TABLE aud_tusuar row size = 198 number of columns = 13 index size = 12 }

create table aud_tusuar 
  (
    tusuario char(10),
    tnombre char(40),
    tdependencia char(15),
    tseccion char(15),
    ttiempo decimal(16,2),
    desp_tusuario char(10),
    desp_tnombre char(40),
    desp_tdependencia char(15),
    desp_tseccion char(15),
    desp_ttiempo decimal(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tusuar from "public";

{ TABLE aud_usuarios row size = 96 number of columns = 9 index size = 12 }

create table aud_usuarios 
  (
    grantee integer,
    tabauth char(9),
    tabname char(25),
    desp_grantee integer,
    desp_tabauth char(9),
    desp_tabname char(25),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_usuarios from "public";

{ TABLE aud_usuarios_sistema row size = 190 number of columns = 7 index size = 12 }

create table aud_usuarios_sistema 
  (
    usuarios char(15),
    nombre char(70),
    desp_usuarios char(15),
    desp_nombre char(70),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_usuarios_sistema from "public";

{ TABLE aud_usuariosnt row size = 100 number of columns = 7 index size = 12 }

create table aud_usuariosnt 
  (
    catalogo char(10),
    observaciones char(30),
    desp_catalogo char(10),
    desp_observaciones char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_usuariosnt from "public";

{ TABLE aud_usumenu row size = 124 number of columns = 7 index size = 12 }

create table aud_usumenu 
  (
    um_nombre char(50),
    um_cod_menu smallint,
    desp_um_nombre char(50),
    desp_um_cod_menu smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_usumenu from "public";

{ TABLE cc_dticket row size = 209 number of columns = 10 index size = 11 }

create table cc_dticket 
  (
    dtitransaccion integer,
    dtiorden smallint,
    dtitiprequeri smallint,
    dtidescripcion varchar(180),
    dticantidad smallint,
    dtifecfin date,
    dtihorafin datetime hour to second,
    dtifecentrega date,
    dtihoraentrega datetime hour to second,
    dtisituacion smallint,
    primary key (dtitransaccion,dtiorden) 
  );

revoke all on cc_dticket from "public";

{ TABLE cc_mticket row size = 38 number of columns = 11 index size = 9 }

create table cc_mticket 
  (
    mtitransaccion serial not null ,
    mtifecinicio date,
    mtihorainicio datetime hour to second,
    mtisolicitante integer,
    mtiorigen smallint,
    mtidestino smallint,
    mtiatendio integer,
    mtiresponsable integer,
    mtisituacion smallint,
    mtifecentrega date,
    mtihoraentrega datetime hour to second,
    primary key (mtitransaccion) 
  );

revoke all on cc_mticket from "public";

{ TABLE aud_cc_mticket row size = 96 number of columns = 25 index size = 12 }

create table aud_cc_mticket 
  (
    mtitransaccion integer,
    mtifecinicio date,
    mtihorainicio datetime hour to second,
    mtisolicitante integer,
    mtiorigen smallint,
    mtidestino smallint,
    mtiatendio integer,
    mtiresponsable integer,
    mtisituacion smallint,
    mtifecentrega date,
    mtihoraentrega datetime hour to second,
    desp_mtitransaccion integer,
    desp_mtifecinicio date,
    desp_mtihorainicio datetime hour to second,
    desp_mtisolicitante integer,
    desp_mtiorigen smallint,
    desp_mtidestino smallint,
    desp_mtiatendio integer,
    desp_mtiresponsable integer,
    desp_mtisituacion smallint,
    desp_mtifecentrega date,
    desp_mtihoraentrega datetime hour to second,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cc_mticket from "public";

{ TABLE aud_cc_dticket row size = 438 number of columns = 23 index size = 12 }

create table aud_cc_dticket 
  (
    dtitransaccion integer,
    dtiorden smallint,
    dtitiprequeri smallint,
    dtidescripcion varchar(180),
    dticantidad smallint,
    dtifecfin date,
    dtihorafin datetime hour to second,
    dtifecentrega date,
    dtihoraentrega datetime hour to second,
    dtisituacion smallint,
    desp_dtitransaccion integer,
    desp_dtiorden smallint,
    desp_dtitiprequeri smallint,
    desp_dtidescripcion varchar(180),
    desp_dticantidad smallint,
    desp_dtifecfin date,
    desp_dtihorafin datetime hour to second,
    desp_dtifecentrega date,
    desp_dtihoraentrega datetime hour to second,
    desp_dtisituacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cc_dticket from "public";

{ TABLE aud_insp_inmuebles row size = 2386 number of columns = 39 index size = 12 }

create table aud_insp_inmuebles 
  (
    i_catalogo integer,
    i_comando smallint,
    i_tipo integer,
    i_inventariada char(1),
    i_no_inventario integer,
    i_nombre char(250),
    i_uso char(250),
    i_costo money(16,2),
    i_ubicacion char(250),
    i_estado integer,
    i_situacion integer,
    i_fecha_apertura date,
    i_observaciones char(255),
    i_folio integer,
    i_nfinca integer,
    i_libro char(50),
    i_extension char(80),
    i_fecaval date,
    desp_i_catalogo integer,
    desp_i_comando smallint,
    desp_i_tipo integer,
    desp_i_inventariada char(1),
    desp_i_no_inventario integer,
    desp_i_nombre char(250),
    desp_i_uso char(250),
    desp_i_costo money(16,2),
    desp_i_ubicacion char(250),
    desp_i_estado integer,
    desp_i_situacion integer,
    desp_i_fecha_apertura date,
    desp_i_observaciones char(255),
    desp_i_folio integer,
    desp_i_nfinca integer,
    desp_i_libro char(50),
    desp_i_extension char(80),
    desp_i_fecaval date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_insp_inmuebles from "public";

{ TABLE c_proposito row size = 104 number of columns = 2 index size = 9 }

create table c_proposito 
  (
    prop_codigo integer not null ,
    prop_desc char(100) not null ,
    primary key (prop_codigo) 
  );

revoke all on c_proposito from "public";

{ TABLE aud_c_proposito row size = 228 number of columns = 7 index size = 12 }

create table aud_c_proposito 
  (
    prop_codigo integer,
    prop_desc char(100),
    desp_prop_codigo integer,
    desp_prop_desc char(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_c_proposito from "public";

{ TABLE c_empresas row size = 74 number of columns = 4 index size = 9 }

create table c_empresas 
  (
    emp_codigo integer not null ,
    emp_desc_lg char(40) not null ,
    emp_desc_md char(20) not null ,
    emp_desc_ct char(10) not null ,
    primary key (emp_codigo) 
  );

revoke all on c_empresas from "public";

{ TABLE aud_c_empresas row size = 168 number of columns = 11 index size = 12 }

create table aud_c_empresas 
  (
    emp_codigo integer,
    emp_desc_lg char(40),
    emp_desc_md char(20),
    emp_desc_ct char(10),
    desp_emp_codigo integer,
    desp_emp_desc_lg char(40),
    desp_emp_desc_md char(20),
    desp_emp_desc_ct char(10),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_c_empresas from "public";

{ TABLE aud_c_oficinas row size = 176 number of columns = 9 index size = 12 }

create table aud_c_oficinas 
  (
    of_codigo integer,
    of_dep integer,
    of_desc char(70),
    desp_of_codigo integer,
    desp_of_dep integer,
    desp_of_desc char(70),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_c_oficinas from "public";

{ TABLE aud_c_tipo_docum row size = 88 number of columns = 7 index size = 12 }

create table aud_c_tipo_docum 
  (
    tipo_codigo integer,
    tipo_desc char(30),
    desp_tipo_codigo integer,
    desp_tipo_desc char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_c_tipo_docum from "public";

{ TABLE aud_c_corr_seg row size = 64 number of columns = 11 index size = 12 }

create table aud_c_corr_seg 
  (
    seg_usuario integer,
    seg_passwd char(10),
    seg_dep integer,
    seg_oficina integer,
    desp_seg_usuario integer,
    desp_seg_passwd char(10),
    desp_seg_dep integer,
    desp_seg_oficina integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_c_corr_seg from "public";

{ TABLE aud_pcdtablr row size = 76 number of columns = 9 index size = 12 }

create table aud_pcdtablr 
  (
    prodid char(8),
    line_no smallint,
    tabname char(18),
    desp_prodid char(8),
    desp_line_no smallint,
    desp_tabname char(18),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_pcdtablr from "public";

{ TABLE aud_armas row size = 130 number of columns = 11 index size = 12 }

create table aud_armas 
  (
    arm_codigo smallint,
    arm_desc_lg char(30),
    arm_desc_md char(15),
    arm_desc_ct char(8),
    desp_arm_codigo smallint,
    desp_arm_desc_lg char(30),
    desp_arm_desc_md char(15),
    desp_arm_desc_ct char(8),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_armas from "public";

{ TABLE aud_asignaciones row size = 104 number of columns = 9 index size = 12 }

create table aud_asignaciones 
  (
    asig_codigo smallint,
    asig_desc_lg char(30),
    asig_desc_ct char(10),
    desp_asig_codigo smallint,
    desp_asig_desc_lg char(30),
    desp_asig_desc_ct char(10),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_asignaciones from "public";

{ TABLE aud_banderas row size = 34 number of columns = 9 index size = 12 }

create table aud_banderas 
  (
    ban_aplicacion char(1),
    ban_codigo smallint,
    ban_fecha date,
    desp_ban_aplicacion char(1),
    desp_ban_codigo smallint,
    desp_ban_fecha date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_banderas from "public";

{ TABLE aud_cond row size = 746 number of columns = 17 index size = 12 }

create table aud_cond 
  (
    con_codigo smallint,
    con_desc_lg char(250),
    con_clase char(2),
    con_pais smallint,
    con_creditos decimal(5,2),
    con_tipo_fund char(2),
    con_fundamento varchar(100),
    desp_con_codigo smallint,
    desp_con_desc_lg char(250),
    desp_con_clase char(2),
    desp_con_pais smallint,
    desp_con_creditos decimal(5,2),
    desp_con_tipo_fund char(2),
    desp_con_fundamento varchar(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cond from "public";

{ TABLE aud_cursos row size = 116 number of columns = 9 index size = 12 }

create table aud_cursos 
  (
    cur_codigo smallint,
    cur_desc_lg char(45),
    cur_tipo char(1),
    desp_cur_codigo smallint,
    desp_cur_desc_lg char(45),
    desp_cur_tipo char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cursos from "public";

{ TABLE aud_dep_mun row size = 134 number of columns = 11 index size = 12 }

create table aud_dep_mun 
  (
    dm_codigo char(4),
    dm_desc_lg char(30),
    dm_desc_md char(15),
    dm_desc_ct char(8),
    desp_dm_codigo char(4),
    desp_dm_desc_lg char(30),
    desp_dm_desc_md char(15),
    desp_dm_desc_ct char(8),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dep_mun from "public";

{ TABLE aud_descuentos row size = 112 number of columns = 15 index size = 12 }

create table aud_descuentos 
  (
    desc_codigo smallint,
    desc_desc_lg char(30),
    desc_desc_ct char(8),
    desc_prioridad smallint,
    desc_pressobre smallint,
    desc_ordenvale smallint,
    desp_desc_codigo smallint,
    desp_desc_desc_lg char(30),
    desp_desc_desc_ct char(8),
    desp_desc_prioridad smallint,
    desp_desc_pressobre smallint,
    desp_desc_ordenvale smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_descuentos from "public";

{ TABLE aud_dlicen row size = 278 number of columns = 23 index size = 12 }

create table aud_dlicen 
  (
    lic_catalogo integer,
    lic_grado smallint,
    lic_situacion char(2),
    lic_depen smallint,
    lic_fecha_ini date,
    lic_fecha_fin date,
    lic_observacion char(100),
    lic_orden char(7),
    lic_punto_ord smallint,
    lic_estado char(2),
    desp_lic_catalogo integer,
    desp_lic_grado smallint,
    desp_lic_situacion char(2),
    desp_lic_depen smallint,
    desp_lic_fecha_ini date,
    desp_lic_fecha_fin date,
    desp_lic_observacion char(100),
    desp_lic_orden char(7),
    desp_lic_punto_ord smallint,
    desp_lic_estado char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dlicen from "public";

{ TABLE aud_escuelas row size = 130 number of columns = 11 index size = 12 }

create table aud_escuelas 
  (
    esc_codigo smallint,
    esc_desc_lg char(30),
    esc_desc_md char(15),
    esc_desc_ct char(8),
    desp_esc_codigo smallint,
    desp_esc_desc_lg char(30),
    desp_esc_desc_md char(15),
    desp_esc_desc_ct char(8),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_escuelas from "public";

{ TABLE aud_evaluacion row size = 88 number of columns = 17 index size = 12 }

create table aud_evaluacion 
  (
    eva_catalogo integer,
    eva_fecha date,
    eva_grado smallint,
    eva_plaza integer,
    eva_te char(8),
    eva_tp char(8),
    eva_cat_ev integer,
    desp_eva_catalogo integer,
    desp_eva_fecha date,
    desp_eva_grado smallint,
    desp_eva_plaza integer,
    desp_eva_te char(8),
    desp_eva_tp char(8),
    desp_eva_cat_ev integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_evaluacion from "public";

{ TABLE aud_grados row size = 140 number of columns = 17 index size = 12 }

create table aud_grados 
  (
    gra_codigo smallint,
    gra_desc_lg char(30),
    gra_desc_md char(15),
    gra_desc_ct char(8),
    gra_asc smallint,
    gra_tiempo smallint,
    gra_clase char(1),
    desp_gra_codigo smallint,
    desp_gra_desc_lg char(30),
    desp_gra_desc_md char(15),
    desp_gra_desc_ct char(8),
    desp_gra_asc smallint,
    desp_gra_tiempo smallint,
    desp_gra_clase char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_grados from "public";

{ TABLE aud_marginado row size = 58 number of columns = 15 index size = 12 }

create table aud_marginado 
  (
    codigo integer,
    documento integer,
    marginado char(2),
    quien integer,
    fecha date,
    enterado char(1),
    desp_codigo integer,
    desp_documento integer,
    desp_marginado char(2),
    desp_quien integer,
    desp_fecha date,
    desp_enterado char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_marginado from "public";

{ TABLE aud_mdep row size = 280 number of columns = 17 index size = 12 }

create table aud_mdep 
  (
    dep_llave smallint,
    dep_desc_lg char(75),
    dep_desc_md char(35),
    dep_desc_ct char(15),
    dep_clase char(1),
    dep_precio char(1),
    dep_ejto char(1),
    desp_dep_llave smallint,
    desp_dep_desc_lg char(75),
    desp_dep_desc_md char(35),
    desp_dep_desc_ct char(15),
    desp_dep_clase char(1),
    desp_dep_precio char(1),
    desp_dep_ejto char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mdep from "public";

{ TABLE aud_menu_det row size = 284 number of columns = 11 index size = 12 }

create table aud_menu_det 
  (
    md_menu smallint,
    md_orden decimal(8,2),
    md_opcion char(45),
    md_ejecuta char(80),
    desp_md_menu smallint,
    desp_md_orden decimal(8,2),
    desp_md_opcion char(45),
    desp_md_ejecuta char(80),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_menu_det from "public";

{ TABLE aud_menu_master row size = 184 number of columns = 7 index size = 12 }

create table aud_menu_master 
  (
    mm_menu smallint,
    mm_descrip char(80),
    desp_mm_menu smallint,
    desp_mm_descrip char(80),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_menu_master from "public";

{ TABLE aud_menus row size = 424 number of columns = 9 index size = 12 }

create table aud_menus 
  (
    mnu_codigo smallint,
    mnu_descripcion char(100),
    mnu_opcion char(100),
    desp_mnu_codigo smallint,
    desp_mnu_descripcion char(100),
    desp_mnu_opcion char(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_menus from "public";

{ TABLE aud_meom row size = 202 number of columns = 17 index size = 12 }

create table aud_meom 
  (
    meom_ceom char(6),
    meom_desc_lg char(35),
    meom_desc_md char(27),
    meom_desc_ct char(16),
    meom_serie char(3),
    meom_nivel smallint,
    meom_situacion smallint,
    desp_meom_ceom char(6),
    desp_meom_desc_lg char(35),
    desp_meom_desc_md char(27),
    desp_meom_desc_ct char(16),
    desp_meom_serie char(3),
    desp_meom_nivel smallint,
    desp_meom_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_meom from "public";

{ TABLE aud_meop row size = 198 number of columns = 15 index size = 12 }

create table aud_meop 
  (
    meom_ceom char(6),
    meom_desc_lg char(35),
    meom_desc_md char(27),
    meom_desc_ct char(16),
    meom_serie char(3),
    meom_nivel smallint,
    desp_meom_ceom char(6),
    desp_meom_desc_lg char(35),
    desp_meom_desc_md char(27),
    desp_meom_desc_ct char(16),
    desp_meom_serie char(3),
    desp_meom_nivel smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_meop from "public";

{ TABLE aud_mfdep row size = 84 number of columns = 7 index size = 12 }

create table aud_mfdep 
  (
    mfd_llave smallint,
    mfd_descripcion char(30),
    desp_mfd_llave smallint,
    desp_mfd_descripcion char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mfdep from "public";

{ TABLE aud_mfsub row size = 68 number of columns = 9 index size = 12 }

create table aud_mfsub 
  (
    sub_dep smallint,
    sub_prog char(20),
    sub_grupo smallint,
    desp_sub_dep smallint,
    desp_sub_prog char(20),
    desp_sub_grupo smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mfsub from "public";

{ TABLE aud_mfsue_e row size = 66 number of columns = 13 index size = 12 }

create table aud_mfsue_e 
  (
    sue_grado smallint,
    sue_serie char(1),
    sue_nivel smallint,
    sue_sueldo money(16,2),
    sue_prima money(16,2),
    desp_sue_grado smallint,
    desp_sue_serie char(1),
    desp_sue_nivel smallint,
    desp_sue_sueldo money(16,2),
    desp_sue_prima money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mfsue_e from "public";

{ TABLE aud_mfsue_o row size = 68 number of columns = 13 index size = 12 }

create table aud_mfsue_o 
  (
    mfs_grado smallint,
    mfs_arma smallint,
    mfs_bienal smallint,
    mfs_sueldo money(16,2),
    mfs_prima money(16,2),
    desp_mfs_grado smallint,
    desp_mfs_arma smallint,
    desp_mfs_bienal smallint,
    desp_mfs_sueldo money(16,2),
    desp_mfs_prima money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mfsue_o from "public";

{ TABLE aud_oficina row size = 172 number of columns = 9 index size = 12 }

create table aud_oficina 
  (
    of_dep smallint,
    of_codigo char(4),
    of_desc char(70),
    desp_of_dep smallint,
    desp_of_codigo char(4),
    desp_of_desc char(70),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_oficina from "public";

{ TABLE aud_paises row size = 84 number of columns = 7 index size = 12 }

create table aud_paises 
  (
    pai_codigo smallint,
    pai_desc_lg char(30),
    desp_pai_codigo smallint,
    desp_pai_desc_lg char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_paises from "public";

{ TABLE aud_parentescos row size = 70 number of columns = 9 index size = 12 }

create table aud_parentescos 
  (
    par_codigo smallint,
    par_desc_md char(15),
    par_desc_ct char(8),
    desp_par_codigo smallint,
    desp_par_desc_md char(15),
    desp_par_desc_ct char(8),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_parentescos from "public";

{ TABLE aud_pbienal row size = 40 number of columns = 11 index size = 12 }

create table aud_pbienal 
  (
    catalogo integer,
    bienal1 smallint,
    bienal2 smallint,
    bienal3 smallint,
    desp_catalogo integer,
    desp_bienal1 smallint,
    desp_bienal2 smallint,
    desp_bienal3 smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_pbienal from "public";

{ TABLE aud_permisos row size = 84 number of columns = 9 index size = 12 }

create table aud_permisos 
  (
    perm_usuario char(10),
    perm_programa char(20),
    perm_permiso smallint,
    desp_perm_usuario char(10),
    desp_perm_programa char(20),
    desp_perm_permiso smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_permisos from "public";

{ TABLE aud_permper row size = 84 number of columns = 9 index size = 12 }

create table aud_permper 
  (
    perm_usuario char(10),
    perm_programa char(20),
    perm_permiso smallint,
    desp_perm_usuario char(10),
    desp_perm_programa char(20),
    desp_perm_permiso smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_permper from "public";

{ TABLE aud_permtropa row size = 84 number of columns = 9 index size = 12 }

create table aud_permtropa 
  (
    pert_usuario char(10),
    pert_programa char(20),
    pert_permiso smallint,
    desp_pert_usuario char(10),
    desp_pert_programa char(20),
    desp_pert_permiso smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_permtropa from "public";

{ TABLE aud_situaciones row size = 184 number of columns = 11 index size = 12 }

create table aud_situaciones 
  (
    sit_codigo char(2),
    sit_desc_lg char(40),
    sit_desc_md char(25),
    sit_desc_ct char(15),
    desp_sit_codigo char(2),
    desp_sit_desc_lg char(40),
    desp_sit_desc_md char(25),
    desp_sit_desc_ct char(15),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_situaciones from "public";

{ TABLE aud_tipo_docum row size = 84 number of columns = 7 index size = 12 }

create table aud_tipo_docum 
  (
    tipo_codigo smallint,
    tipo_desc char(30),
    desp_tipo_codigo smallint,
    desp_tipo_desc char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tipo_docum from "public";

{ TABLE aud_tropa_pv row size = 60 number of columns = 11 index size = 12 }

create table aud_tropa_pv 
  (
    tpv_plaza integer,
    tpv_fec_trans date,
    tpv_catalogo integer,
    tpv_operador char(8),
    desp_tpv_plaza integer,
    desp_tpv_fec_trans date,
    desp_tpv_catalogo integer,
    desp_tpv_operador char(8),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tropa_pv from "public";

{ TABLE aud_tropa_sp row size = 72 number of columns = 15 index size = 12 }

create table aud_tropa_sp 
  (
    tsp_catalogo integer,
    tsp_plaza integer,
    tsp_fec_nomb date,
    tsp_fec_trans date,
    tsp_operador char(8),
    tsp_grado smallint,
    desp_tsp_catalogo integer,
    desp_tsp_plaza integer,
    desp_tsp_fec_nomb date,
    desp_tsp_fec_trans date,
    desp_tsp_operador char(8),
    desp_tsp_grado smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tropa_sp from "public";

{ TABLE aud_tsan row size = 212 number of columns = 13 index size = 12 }

create table aud_tsan 
  (
    tsan_codigo integer,
    tsan_descripcion char(80),
    tsan_tiempo integer,
    tsan_posterga integer,
    tsan_suspension integer,
    desp_tsan_codigo integer,
    desp_tsan_descripcion char(80),
    desp_tsan_tiempo integer,
    desp_tsan_posterga integer,
    desp_tsan_suspension integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tsan from "public";

{ TABLE aud_jefes row size = 483 number of columns = 10 index size = 12 }

create table aud_jefes 
  (
    antes1 char(12),
    antes2 char(12),
    antes3 char(200),
    despues1 char(12),
    despues2 char(12),
    despues3 char(200),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_jefes from "public";

{ TABLE aud_corr_seg row size = 131 number of columns = 12 index size = 12 }

create table aud_corr_seg 
  (
    antes1 char(12),
    antes2 char(12),
    antes3 char(12),
    antes4 char(12),
    despues1 char(12),
    despues2 char(12),
    despues3 char(12),
    despues4 char(12),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_corr_seg from "public";

{ TABLE aud_sand row size = 178 number of columns = 10 index size = 12 }

create table aud_sand 
  (
    ant_dsan_tran integer,
    ant_dsan_linea smallint,
    ant_dsan_texto char(70),
    nue_dsan_tran integer,
    nue_dsan_linea smallint,
    nue_dsan_texto char(70),
    usuario char(8) not null ,
    hora datetime year to minute not null ,
    accion char(2) not null ,
    terminal char(9) not null 
  );

revoke all on aud_sand from "public";

{ TABLE c_oficinas row size = 76 number of columns = 3 index size = 18 }

create table c_oficinas 
  (
    of_codigo integer not null ,
    of_dep smallint not null ,
    of_desc char(70),
    primary key (of_codigo,of_dep) 
  );

revoke all on c_oficinas from "public";

{ TABLE c_tipo_docum row size = 34 number of columns = 2 index size = 9 }

create table c_tipo_docum 
  (
    tipo_codigo integer not null ,
    tipo_desc char(30) not null ,
    primary key (tipo_codigo) 
  );

revoke all on c_tipo_docum from "public";

{ TABLE r_papel row size = 47 number of columns = 3 index size = 7 }

create table r_papel 
  (
    p_codigo smallint not null ,
    p_desc_ct char(15) not null ,
    p_desc_lg char(30) not null ,
    primary key (p_codigo) 
  );

revoke all on r_papel from "public";

{ TABLE r_programas row size = 76 number of columns = 4 index size = 7 }

create table r_programas 
  (
    prog_codigo smallint not null ,
    prog_fuente char(12) not null ,
    prog_desc char(60) not null ,
    prog_sistema smallint not null ,
    primary key (prog_codigo) 
  );

revoke all on r_programas from "public";

{ TABLE aud_r_programas row size = 152 number of columns = 11 index size = 12 }

create table aud_r_programas 
  (
    prog_codigo smallint,
    prog_fuente char(12),
    prog_desc char(50),
    prog_sistema smallint,
    desp_prog_codigo smallint,
    desp_prog_fuente char(12),
    desp_prog_desc char(50),
    desp_prog_sistema smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_r_programas from "public";

{ TABLE aud_r_papel row size = 114 number of columns = 9 index size = 12 }

create table aud_r_papel 
  (
    p_codigo smallint,
    p_desc_ct char(15),
    p_desc_lg char(30),
    desp_p_codigo smallint,
    desp_p_desc_ct char(15),
    desp_p_desc_lg char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_r_papel from "public";

{ TABLE aud_r_det_requerimientos row size = 52 number of columns = 15 index size = 12 }

create table aud_r_det_requerimientos 
  (
    dre_requerimiento integer,
    dre_correlativo integer,
    dre_numprog smallint,
    dre_clapapel smallint,
    dre_copias smallint,
    dre_paginas smallint,
    desp_dre_requerimiento integer,
    desp_dre_correlativo integer,
    desp_dre_numprog smallint,
    desp_dre_clapapel smallint,
    desp_dre_copias smallint,
    desp_dre_paginas smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_r_det_requerimientos from "public";

{ TABLE economato row size = 19 number of columns = 5 index size = 13 }

create table economato 
  (
    eco_catalogo integer not null ,
    eco_mensual money(16,2) not null ,
    eco_num integer not null ,
    eco_control char(1),
    eco_tipo char(1),
    primary key (eco_catalogo,eco_num)  constraint pk_economato_catal_econum
  );

revoke all on economato from "public";

{ TABLE aud_f_hreal row size = 66 number of columns = 11 index size = 12 }

create table aud_f_hreal 
  (
    hr_catalogo integer,
    hr_mensual money(16,2),
    hr_saldo money(16,2),
    hr_control char(1),
    desp_hr_catalogo integer,
    desp_hr_mensual money(16,2),
    desp_hr_saldo money(16,2),
    desp_hr_control char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_f_hreal from "public";

{ TABLE r_requerimientos row size = 39 number of columns = 6 index size = 16 }

create table r_requerimientos 
  (
    req_codigo integer not null ,
    req_numdoc char(20) not null ,
    req_solicita integer not null ,
    req_destino smallint not null ,
    req_sistema smallint not null ,
    req_fecha datetime year to minute not null ,
    primary key (req_codigo) 
  );

revoke all on r_requerimientos from "public";

{ TABLE aud_r_requerimientos row size = 98 number of columns = 15 index size = 12 }

create table aud_r_requerimientos 
  (
    req_codigo integer,
    req_numdoc char(20),
    req_solicita integer,
    req_destino smallint,
    req_sistema smallint,
    req_fecha datetime year to minute,
    desp_req_codigo integer,
    desp_req_numdoc char(20),
    desp_req_solicita integer,
    desp_req_destino smallint,
    desp_req_sistema smallint,
    desp_req_fecha datetime year to minute,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_r_requerimientos from "public";

{ TABLE r_det_req row size = 16 number of columns = 6 index size = 27 }

create table r_det_req 
  (
    dre_requerimiento integer not null ,
    dre_correlativo integer not null ,
    dre_nomprog smallint not null ,
    dre_clapapel smallint not null ,
    dre_copias smallint not null ,
    dre_paginas smallint not null ,
    primary key (dre_requerimiento,dre_correlativo) 
  );

revoke all on r_det_req from "public";

{ TABLE aud_vocales row size = 148 number of columns = 11 index size = 12 }

create table aud_vocales 
  (
    voc_codigo integer,
    voc_desc_lg char(30),
    voc_desc_md char(20),
    voc_desc_ct char(10),
    desp_voc_codigo integer,
    desp_voc_desc_lg char(30),
    desp_voc_desc_md char(20),
    desp_voc_desc_ct char(10),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vocales from "public";

{ TABLE vocales row size = 64 number of columns = 4 index size = 9 }

create table vocales 
  (
    voc_codigo serial not null ,
    voc_desc_lg char(30) not null ,
    voc_desc_md char(20) not null ,
    voc_desc_ct char(10) not null ,
    primary key (voc_codigo) 
  );

revoke all on vocales from "public";

{ TABLE usuapli row size = 173 number of columns = 4 index size = 0 }

create table usuapli 
  (
    usuario char(32),
    tabla varchar(128),
    permisos char(9),
    sistema char(3)
  );

revoke all on usuapli from "public";

{ TABLE c_control row size = 26 number of columns = 2 index size = 11 }

create table c_control 
  (
    c_codigo char(6) not null ,
    c_nombre char(20) not null 
  );

revoke all on c_control from "public";

{ TABLE aud_usu_opera row size = 124 number of columns = 7 index size = 12 }

create table aud_usu_opera 
  (
    usu_catalogo char(50),
    usu_codigo smallint,
    desp_usu_catalogo char(50),
    desp_usu_codigo smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_usu_opera from "public";

{ TABLE aud_opera_menu row size = 424 number of columns = 9 index size = 12 }

create table aud_opera_menu 
  (
    om_codigo smallint,
    om_descripcion char(100),
    om_opcion char(100),
    desp_om_codigo smallint,
    desp_om_descripcion char(100),
    desp_om_opcion char(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_opera_menu from "public";

{ TABLE opera_menu row size = 202 number of columns = 3 index size = 7 }

create table opera_menu 
  (
    om_codigo smallint not null ,
    om_descripcion char(100),
    om_opcion char(100),
    primary key (om_codigo) 
  );

revoke all on opera_menu from "public";

{ TABLE usu_opera row size = 52 number of columns = 2 index size = 64 }

create table usu_opera 
  (
    usu_catalogo char(50) not null ,
    usu_codigo smallint,
    primary key (usu_catalogo,usu_codigo) 
  );

revoke all on usu_opera from "public";

{ TABLE co_mper row size = 253 number of columns = 33 index size = 9 }

create table co_mper 
  (
    per_catalogo integer not null ,
    per_serie char(8),
    per_grado smallint not null ,
    per_arma smallint not null ,
    per_nom1 char(15) not null ,
    per_nom2 char(15),
    per_ape1 char(15) not null ,
    per_ape2 char(15),
    per_ape3 char(15),
    per_ced_ord char(4),
    per_ced_reg integer,
    per_fec_ext_ced date,
    per_ext_ced_lugar char(4) not null ,
    per_est_civil char(1),
    per_direccion char(50),
    per_zona smallint,
    per_dir_lugar char(4) not null ,
    per_telefono integer,
    per_sexo char(1),
    per_fec_nac date,
    per_nac_lugar char(4) not null ,
    per_promocion smallint,
    per_afil_ipm char(1),
    per_sangre char(3),
    per_antiguedad smallint,
    per_bienal smallint not null ,
    per_plaza integer not null ,
    per_desc_empleo char(45) not null ,
    per_fec_nomb date,
    per_ord_gral char(7),
    per_punto_og smallint,
    per_situacion char(2) not null ,
    per_prima_prof smallint,
    
    check (per_ced_ord IN ('A-1' ,'B-2' ,'C-3' ,'D-4' ,'E-5' ,'F-6' ,'G-7' ,'H-8' ,'I-9' ,'J-10' ,'K-11' ,'L-12' ,'M-13' ,'N-14' ,'�-15' ,'O-16' ,'P-17' ,'Q-18' ,'&-15' ,'�-15' ,'R-19' ,'S-20' ,'T-21' ,'U-22' ,'P-99' )) 
              constraint c2315_1481,
    
    check (per_est_civil IN ('S' ,'C' ,'U' ,'D' ,'V' )) constraint c2315_1482,
    
    check (per_sexo IN ('M' ,'F' )) constraint c2315_1483,
    
    check (per_afil_ipm IN ('0' ,'1' ,'2' )) constraint c2315_1484,
    
    check (per_sangre IN ('O+' ,'O-' ,'A+' ,'A-' ,'AB+' ,'AB-' ,'B+' ,'B-' ,'P' )) 
              constraint c2315_1485,
    primary key (per_catalogo)  constraint u2315_1480
  );

revoke all on co_mper from "public";

{ TABLE aud_co_mper row size = 526 number of columns = 69 index size = 12 }

create table aud_co_mper 
  (
    per_catalogo integer,
    per_serie char(8),
    per_grado smallint,
    per_arma smallint,
    per_nom1 char(15),
    per_nom2 char(15),
    per_ape1 char(15),
    per_ape2 char(15),
    per_ape3 char(15),
    per_ced_ord char(4),
    per_ced_reg integer,
    per_fec_ext_ced date,
    per_ext_ced_lugar char(4),
    per_est_civil char(1),
    per_direccion char(50),
    per_zona smallint,
    per_dir_lugar char(4),
    per_telefono integer,
    per_sexo char(1),
    per_fec_nac date,
    per_nac_lugar char(4),
    per_promocion smallint,
    per_afil_ipm char(1),
    per_sangre char(3),
    per_antiguedad smallint,
    per_bienal smallint,
    per_plaza integer,
    per_desc_empleo char(45),
    per_fec_nomb date,
    per_ord_gral char(7),
    per_punto_og smallint,
    per_situacion char(2),
    per_prima_prof smallint,
    desp_per_catalogo integer,
    desp_per_serie char(8),
    desp_per_grado smallint,
    desp_per_arma smallint,
    desp_per_nom1 char(15),
    desp_per_nom2 char(15),
    desp_per_ape1 char(15),
    desp_per_ape2 char(15),
    desp_per_ape3 char(15),
    desp_per_ced_ord char(4),
    desp_per_ced_reg integer,
    desp_per_fec_ext_ced date,
    desp_per_ext_ced_lugar char(4),
    desp_per_est_civil char(1),
    desp_per_direccion char(50),
    desp_per_zona smallint,
    desp_per_dir_lugar char(4),
    desp_per_telefono integer,
    desp_per_sexo char(1),
    desp_per_fec_nac date,
    desp_per_nac_lugar char(4),
    desp_per_promocion smallint,
    desp_per_afil_ipm char(1),
    desp_per_sangre char(3),
    desp_per_antiguedad smallint,
    desp_per_bienal smallint,
    desp_per_plaza integer,
    desp_per_desc_empleo char(45),
    desp_per_fec_nomb date,
    desp_per_ord_gral char(7),
    desp_per_punto_og smallint,
    desp_per_situacion char(2),
    desp_per_prima_prof smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_co_mper from "public";

{ TABLE aud_sysmenus row size = 176 number of columns = 7 index size = 12 }

create table aud_sysmenus 
  (
    menuname char(18),
    title char(60),
    desp_menuname char(18),
    desp_title char(60),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sysmenus from "public";

{ TABLE diagnosticos row size = 37 number of columns = 2 index size = 7 }

create table diagnosticos 
  (
    d_codigo smallint,
    d_descrip char(35),
    primary key (d_codigo) 
  );

revoke all on diagnosticos from "public";

{ TABLE aud_diagnosticos row size = 94 number of columns = 7 index size = 12 }

create table aud_diagnosticos 
  (
    d_codigo smallint,
    d_descrip char(35),
    desp_d_codigo smallint,
    desp_d_descrip char(35),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_diagnosticos from "public";

{ TABLE aud_ingreso row size = 82 number of columns = 13 index size = 12 }

create table aud_ingreso 
  (
    numero integer,
    catalogo integer,
    dep integer,
    entro date,
    horas char(15),
    desp_numero integer,
    desp_catalogo integer,
    desp_dep integer,
    desp_entro date,
    desp_hora char(15),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ingreso from "public";

{ TABLE aud_busqueda row size = 44 number of columns = 9 index size = 12 }

create table aud_busqueda 
  (
    ingreso integer,
    cant integer,
    busco integer,
    desp_ingreso integer,
    desp_cant integer,
    desp_busco integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_busqueda from "public";

{ TABLE evaluaciones_ant row size = 24 number of columns = 10 index size = 18 }

create table evaluaciones_ant 
  (
    e_catalogo integer not null ,
    e_evaluacion smallint not null ,
    e_edad smallint,
    e_peso smallint,
    e_talla decimal(3,2),
    e_imc decimal(4,2),
    e_diagnost smallint,
    e_ref_dd char(1),
    e_fecha date,
    e_asist_dd char(1),
    primary key (e_catalogo,e_evaluacion) 
  );

revoke all on evaluaciones_ant from "public";

{ TABLE aud_documento row size = 477 number of columns = 38 index size = 12 }

create table aud_documento 
  (
    antes1 integer,
    antes2 smallint,
    antes3 char(20),
    antes4 char(1),
    antes5 char(100),
    antes6 date,
    antes7 date,
    antes8 smallint,
    antes9 smallint,
    antes10 smallint,
    antes11 char(1),
    antes12 char(50),
    antes13 smallint,
    antes14 smallint,
    antes15 integer,
    antes16 char(1),
    antes17 char(20),
    despues1 integer,
    despues2 smallint,
    despues3 char(20),
    despues4 char(1),
    despues5 char(100),
    despues6 date,
    despues7 date,
    despues8 smallint,
    despues9 smallint,
    despues10 smallint,
    despues11 char(1),
    despues12 char(50),
    despues13 smallint,
    despues14 smallint,
    despues15 integer,
    despues16 char(1),
    despues17 char(20),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_documento from "public";

{ TABLE aud_ubica_docum row size = 533 number of columns = 32 index size = 12 }

create table aud_ubica_docum 
  (
    antes1 char(8),
    antes2 char(12),
    antes3 char(35),
    antes4 char(12),
    antes5 char(12),
    antes6 char(1),
    antes7 char(100),
    antes8 char(12),
    antes9 char(8),
    antes10 char(8),
    antes11 char(20),
    antes12 char(1),
    antes13 char(12),
    antes14 char(8),
    despues1 char(8),
    despues2 char(12),
    despues3 char(35),
    despues4 char(12),
    despues5 char(12),
    despues6 char(1),
    despues7 char(100),
    despues8 char(12),
    despues9 char(8),
    despues10 char(8),
    despues11 char(20),
    despues12 char(1),
    despues13 char(12),
    despues14 char(8),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_ubica_docum from "public";

{ TABLE aud_msan row size = 100 number of columns = 26 index size = 12 }

create table aud_msan 
  (
    ant_san_catalogo integer,
    ant_san_tran integer,
    ant_san_grado smallint,
    ant_san_sancion smallint,
    ant_san_tiempo smallint,
    ant_san_fec_inicio date,
    ant_san_depen smallint,
    ant_san_ord_gral char(7),
    ant_san_fec_og date,
    ant_san_punto_og char(4),
    ant_san_estado char(2),
    nue_catalogo integer,
    nue_san_tran integer,
    nue_san_grado smallint,
    nue_san_sancion smallint,
    nue_san_tiempo smallint,
    nue_san_fec_inicio date,
    nue_san_depen smallint,
    nue_san_ord_gral char(7),
    nue_san_fec_og date,
    nue_san_punto_og char(4),
    nue_san_estado char(2),
    usuario char(8),
    hora datetime year to minute not null ,
    accion char(2) not null ,
    terminal char(9) not null 
  );

revoke all on aud_msan from "public";

{ TABLE resofi row size = 159 number of columns = 22 index size = 0 }

create table resofi 
  (
    res_nomina char(1),
    res_partida char(1),
    res_fecha date,
    res_unidad char(5),
    res_subprog char(2),
    res_sueldo money(16,2),
    res_bienal money(16,2),
    res_respon money(16,2),
    res_emerg money(16,2),
    res_repres money(16,2),
    res_profes money(16,2),
    res_constru money(16,2),
    res_tot_nomi money(16,2),
    res_ipm money(16,2),
    res_montepio money(16,2),
    res_fianza money(16,2),
    res_devengado money(16,2),
    res_descuentos money(16,2),
    res_liquido money(16,2),
    res_bon_662000 money(16,2),
    res_pri_prof_mil money(16,2),
    res_depen smallint
  );

revoke all on resofi from "public";

{ TABLE descripciones row size = 102 number of columns = 4 index size = 0 }

create table descripciones 
  (
    cod_dependencia smallint not null ,
    usu_upd_menu char(50) not null ,
    servidor char(25) not null ,
    mdibmp char(25) not null 
  );

revoke all on descripciones from "public";

{ TABLE f_hfag row size = 15 number of columns = 3 index size = 9 }

create table f_hfag 
  (
    fag_catalogo integer,
    fag_codigo smallint,
    fag_monto money(16,2),
    primary key (fag_catalogo) 
  );

revoke all on f_hfag from "public";

{ TABLE aud_f_hfag row size = 50 number of columns = 9 index size = 12 }

create table aud_f_hfag 
  (
    fag_catalogo integer,
    fag_codigo smallint,
    fag_monto money(16,2),
    desp_fag_catalogo integer,
    desp_fag_codigo smallint,
    desp_fag_monto money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_f_hfag from "public";

{ TABLE hfasig row size = 258 number of columns = 42 index size = 118 }

create table hfasig 
  (
    hfa_catalogo integer not null ,
    hfa_fecha date not null ,
    hfa_prog char(20) not null ,
    hfa_grupo smallint not null ,
    hfa_clase char(1) not null ,
    hfa_grado smallint not null ,
    hfa_arma smallint not null ,
    hfa_sexo char(1) not null ,
    hfa_plaza integer not null ,
    hfa_desc_empleo char(45) not null ,
    hfa_ceom char(6) not null ,
    hfa_jerarquia char(12),
    hfa_hrs_trab smallint not null ,
    hfa_ord_gral char(7) not null ,
    hfa_bienal smallint not null ,
    hfa_depen smallint not null ,
    hfa_sueldo money(16,2) not null ,
    hfa_bon_bienal money(8,2) not null ,
    hfa_prima_resp money(8,2) not null ,
    hfa_prima_esp money(8,2) not null ,
    hfa_gastos_rep money(8,2) not null ,
    hfa_bon_emerg money(8,2),
    hfa_dividendos money(8,2) not null ,
    hfa_aguinaldo money(8,2) not null ,
    hfa_bono_vac money(8,2) not null ,
    hfa_bono_14 money(8,2) not null ,
    hfa_bono_trans money(8,2) not null ,
    hfa_prima_ing money(8,2) not null ,
    hfa_prima_prof money(8,2) not null ,
    hfa_ipm money(8,2) not null ,
    hfa_montepio money(8,2) not null ,
    hfa_fianza money(8,2) not null ,
    hfa_hos_mil money(8,2) not null ,
    hfa_club_ofi money(8,2) not null ,
    hfa_club_esp money(8,2) not null ,
    hfa_liquido money(8,2) not null ,
    hfa_corrida char(1),
    hfa_unidad smallint,
    hfa_complemento money(8,2),
    hfa_cuenta char(20),
    hfa_prima_ext money(8,2),
    hfa_bono_ali money(8,2),
    primary key (hfa_catalogo,hfa_fecha)  constraint pk_hfasig
  );

revoke all on hfasig from "public";

{ TABLE hfdes row size = 55 number of columns = 9 index size = 100 }

create table hfdes 
  (
    hfd_catalogo integer not null ,
    hfd_fecha date not null ,
    hfd_codigo smallint not null ,
    hfd_nu_reg smallint not null ,
    hfd_monto money(16,2) not null ,
    hfd_mensual money(16,2) not null ,
    hfd_saldo money(16,2) not null ,
    hfd_corrida char(1),
    hfd_varios char(15),
    primary key (hfd_catalogo,hfd_fecha,hfd_codigo,hfd_nu_reg)  constraint u1586_698
  );

revoke all on hfdes from "public";

{ TABLE aud_f_bac row size = 208 number of columns = 21 index size = 12 }

create table aud_f_bac 
  (
    bac_prestamo char(11),
    bac_catalogo integer,
    bac_nombre char(40),
    bac_monto money(16,2),
    bac_cuota money(16,2),
    bac_saldo money(16,2),
    bac_intereses money(16,2),
    bac_si_no char(1),
    bac_cod_1_2 smallint,
    desp_bac_prestamo char(11),
    desp_bac_catalogo integer,
    desp_bac_nombre char(40),
    desp_bac_monto money(16,2),
    desp_bac_cuota money(16,2),
    desp_bac_saldo money(16,2),
    desp_bac_intereses money(16,2),
    desp_bac_si_no char(1),
    desp_bac_cod_1_2 smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_f_bac from "public";

{ TABLE aud_f_amt row size = 76 number of columns = 15 index size = 12 }

create table aud_f_amt 
  (
    amt_catalogo integer,
    amt_codigo smallint,
    amt_fecha date,
    amt_fact char(8),
    amt_monto money(16,2),
    amt_si_no char(1),
    desp_amt_catalogo integer,
    desp_amt_codigo smallint,
    desp_amt_fecha date,
    desp_amt_fact char(8),
    desp_amt_monto money(16,2),
    desp_amt_si_no char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_f_amt from "public";

{ TABLE aud_icombus row size = 84 number of columns = 7 index size = 12 }

create table aud_icombus 
  (
    com_codigo smallint,
    com_desc char(30),
    desp_com_codigo smallint,
    desp_com_desc char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_icombus from "public";

{ TABLE icombus row size = 32 number of columns = 2 index size = 7 }

create table icombus 
  (
    com_codigo smallint not null ,
    com_desc char(30) not null ,
    primary key (com_codigo) 
  );

revoke all on icombus from "public";

{ TABLE icorep row size = 18 number of columns = 5 index size = 16 }

create table icorep 
  (
    rep_numero serial not null ,
    rep_depen smallint not null ,
    rep_fecha date not null ,
    rep_fecha_del date not null ,
    rep_fecha_al date not null ,
    primary key (rep_numero) 
  );

revoke all on icorep from "public";

{ TABLE icobsrep row size = 71 number of columns = 3 index size = 11 }

create table icobsrep 
  (
    obs_numero integer not null ,
    obs_linea smallint not null ,
    obs_texto char(65),
    primary key (obs_numero,obs_linea) 
  );

revoke all on icobsrep from "public";

{ TABLE aud_icorep row size = 56 number of columns = 13 index size = 12 }

create table aud_icorep 
  (
    rep_numero integer,
    rep_depen smallint,
    rep_fecha date,
    rep_fecha_del date,
    rep_fecha_al date,
    desp_rep_numero integer,
    desp_rep_depen smallint,
    desp_rep_fecha date,
    desp_rep_fecha_del date,
    desp_rep_fecha_al date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_icorep from "public";

{ TABLE aud_icodetrep row size = 144 number of columns = 27 index size = 12 }

create table aud_icodetrep 
  (
    dr_numero integer,
    dr_comb smallint,
    dr_sasede integer,
    dr_sabm integer,
    dr_isede integer,
    dr_ibm integer,
    dr_esede integer,
    dr_emb integer,
    dr_evap integer,
    dr_doc char(20),
    dr_ssede integer,
    dr_sbm integer,
    desp_dr_numero integer,
    desp_dr_comb smallint,
    desp_dr_sasede integer,
    desp_dr_sabm integer,
    desp_dr_isede integer,
    desp_dr_ibm integer,
    desp_dr_esede integer,
    desp_dr_emb integer,
    desp_dr_evap integer,
    desp_dr_doc char(20),
    desp_dr_ssede integer,
    desp_dr_sbm integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_icodetrep from "public";

{ TABLE aud_icobsrep row size = 162 number of columns = 9 index size = 12 }

create table aud_icobsrep 
  (
    obs_numero integer,
    obs_linea smallint,
    obs_texto char(65),
    desp_obs_numero integer,
    desp_obs_linea smallint,
    desp_obs_texto char(65),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_icobsrep from "public";

{ TABLE icodetrep row size = 62 number of columns = 12 index size = 27 }

create table icodetrep 
  (
    dr_numero integer not null ,
    dr_comb smallint not null ,
    dr_sasede integer,
    dr_sabm integer,
    dr_isede integer,
    dr_ibm integer,
    dr_esede integer,
    dr_emb integer,
    dr_evap integer,
    dr_doc char(20),
    dr_ssede integer,
    dr_sbm integer,
    primary key (dr_numero,dr_comb) 
  );

revoke all on icodetrep from "public";

{ TABLE chn row size = 46 number of columns = 4 index size = 0 }

create table chn 
  (
    cat integer,
    codigo smallint,
    be char(20),
    chn char(20)
  );

revoke all on chn from "public";

{ TABLE aud_chn row size = 112 number of columns = 11 index size = 12 }

create table aud_chn 
  (
    cat integer,
    codigo smallint,
    be char(20),
    chn char(20),
    desp_cat integer,
    desp_codigo smallint,
    desp_be char(20),
    desp_chn char(20),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_chn from "public";

{ TABLE fceom row size = 14 number of columns = 3 index size = 20 }

create table fceom 
  (
    fc_catalogo integer,
    fc_plaza integer,
    fc_ceom char(6),
    primary key (fc_catalogo) 
  );

revoke all on fceom from "public";

{ TABLE aud_fceom row size = 48 number of columns = 9 index size = 12 }

create table aud_fceom 
  (
    fc_catalogo integer,
    fc_plaza integer,
    fc_ceom char(6),
    desp_fc_catalogo integer,
    desp_fc_plaza integer,
    desp_fc_ceom char(6),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fceom from "public";

{ TABLE asigna row size = 135 number of columns = 24 index size = 0 }

create table asigna 
  (
    a_catalogo integer,
    a_sueldo money(16,2),
    a_bienal money(8,2),
    a_prima_resp money(8,2),
    a_prima_esp money(16,8),
    a_gastos_rep money(8,2),
    a_bon_emerg money(8,2),
    a_dividendos money(8,2),
    a_aguinaldo money(16,2),
    a_bono_vac money(8,2),
    a_bono14 money(16,2),
    a_bono_trans money(8,2),
    a_prima_ing money(8,2),
    a_prima_prof money(8,2),
    a_complemento money(8,2),
    a_prima_ext money(8,2),
    a_bono_ali money(8,2),
    a_docencia money(8,2),
    a_kaibil money(8,2),
    a_salto money(8,2),
    a_662000 money(8,2),
    a_clase3 money(8,2),
    a_ppm money(8,2),
    a_riesgo money(8,2)
  );

revoke all on asigna from "public";

{ TABLE ftempo row size = 10 number of columns = 2 index size = 9 }

create table ftempo 
  (
    fplaza integer,
    fceom char(6),
    primary key (fplaza) 
  );

revoke all on ftempo from "public";

{ TABLE aud_ftempo row size = 40 number of columns = 7 index size = 12 }

create table aud_ftempo 
  (
    f_plaza integer,
    fceom char(6),
    desp_f_plaza integer,
    desp_fceom char(6),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ftempo from "public";

{ TABLE aud_f_mulfar row size = 56 number of columns = 11 index size = 12 }

create table aud_f_mulfar 
  (
    mf_catalogo integer,
    mf_mensual money(16,2),
    mf_fact integer,
    mf_control char(1),
    desp_mf_catalogo integer,
    desp_mf_mensual money(16,2),
    desp_mf_fact integer,
    desp_mf_control char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_f_mulfar from "public";

{ TABLE f_mulfar row size = 18 number of columns = 4 index size = 13 }

create table f_mulfar 
  (
    mf_catalogo integer not null ,
    mf_mensual money(16,2),
    mf_fact integer not null ,
    mf_control char(1),
    primary key (mf_catalogo,mf_fact) 
  );

revoke all on f_mulfar from "public";

{ TABLE aud_yakis row size = 622 number of columns = 69 index size = 48 }

create table aud_yakis 
  (
    catalogo integer,
    serie char(8),
    grado smallint,
    arma smallint,
    nom1 char(15),
    nom2 char(15),
    ape1 char(15),
    ape2 char(15),
    ape3 char(15),
    ced_ord char(4),
    ced_reg integer,
    fec_ext_ced char(20),
    ext_ced_lugar char(4),
    est_civil char(1),
    direccion char(50),
    zona smallint,
    dir_lugar char(4),
    telefono integer,
    sexo char(1),
    fec_nac char(20),
    nac_lugar char(4),
    promocion smallint,
    afil_ipm char(1),
    sangre char(3),
    antiguedad smallint,
    bienal smallint,
    plaza integer,
    desc_empleo char(45),
    fec_nomb char(20),
    ord_gral char(7),
    punto_og smallint,
    situacion char(2),
    prima_prof smallint,
    desp_catalogo integer,
    desp_serie char(8),
    desp_grado smallint,
    desp_arma smallint,
    desp_nom1 char(15),
    desp_nom2 char(15),
    desp_ape1 char(15),
    desp_ape2 char(15),
    desp_ape3 char(15),
    desp_ced_ord char(4),
    desp_ced_reg integer,
    desp_fec_ext_ced char(20),
    desp_ext_ced_lugar char(4),
    desp_est_civil char(1),
    desp_direccion char(50),
    desp_zona smallint,
    desp_dir_lugar char(4),
    desp_telefono integer,
    desp_sexo char(1),
    desp_fec_nac char(20),
    desp_nac_lugar char(4),
    desp_promocion smallint,
    desp_afil_ipm char(1),
    desp_sangre char(3),
    desp_antiguedad smallint,
    desp_bienal smallint,
    desp_plaza integer,
    desp_desc_empleo char(45),
    desp_fec_nomb char(20),
    desp_ord_gral char(7),
    desp_punto_og smallint,
    desp_situacion char(2),
    desp_prima_prof smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_yakis from "public";

{ TABLE aud_evaluaciones_ant row size = 68 number of columns = 23 index size = 12 }

create table aud_evaluaciones_ant 
  (
    e_catalogo integer,
    e_evaluacion smallint,
    e_edad smallint,
    e_peso smallint,
    e_talla decimal(3,2),
    e_imc decimal(4,2),
    e_diagnost smallint,
    e_ref_dd char(1),
    e_fecha date,
    e_asist_dd char(1),
    desp_e_catalogo integer,
    desp_e_evaluacion smallint,
    desp_e_edad smallint,
    desp_e_peso smallint,
    desp_e_talla decimal(3,2),
    desp_e_imc decimal(4,2),
    desp_e_diagnost smallint,
    desp_e_ref_dd char(1),
    desp_e_fecha date,
    desp_e_asist_dd char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_evaluaciones_ant from "public";

{ TABLE pacceso row size = 16 number of columns = 3 index size = 9 }

create table pacceso 
  (
    acccatalogo integer,
    accpwd char(10),
    accpermiso smallint,
    primary key (acccatalogo)  constraint pk_pacceso
  );

revoke all on pacceso from "public";

{ TABLE pdocumento row size = 408 number of columns = 17 index size = 30 }

create table pdocumento 
  (
    doccorrelativo serial not null ,
    docsolicita integer,
    doctipo smallint,
    docestado smallint,
    docgenero integer,
    docfecgenerado char(20),
    docasunto char(150),
    docmotivo char(150),
    docdirigido integer,
    docconducto integer,
    docfecinicio char(20),
    docfecfinaliza char(20),
    docautoriza integer,
    docvobo integer,
    docnegociado smallint,
    docnum integer,
    docreferencia char(10),
    primary key (doccorrelativo)  constraint pk_pdocumento
  );

revoke all on pdocumento from "public";

{ TABLE pestado row size = 17 number of columns = 2 index size = 7 }

create table pestado 
  (
    estcodigo smallint,
    estdesc char(15),
    primary key (estcodigo)  constraint pk_pestado
  );

revoke all on pestado from "public";

{ TABLE pnegociado row size = 52 number of columns = 2 index size = 7 }

create table pnegociado 
  (
    negcodigo smallint,
    negdesc char(50),
    primary key (negcodigo)  constraint pk_pnegociado
  );

revoke all on pnegociado from "public";

{ TABLE ptipo row size = 52 number of columns = 2 index size = 7 }

create table ptipo 
  (
    tipcodigo smallint,
    tipdesc char(50),
    primary key (tipcodigo)  constraint pk_ptipo
  );

revoke all on ptipo from "public";

{ TABLE aud_pdocumento row size = 836 number of columns = 37 index size = 12 }

create table aud_pdocumento 
  (
    doccorrelativo integer,
    docsolicita integer,
    doctipo smallint,
    docestado smallint,
    docgenero integer,
    docfecgenerado char(20),
    docasunto char(150),
    docmotivo char(150),
    docdirigido integer,
    docconducto integer,
    docfecinicio char(20),
    docfecfinaliza char(20),
    docautoriza integer,
    docvobo integer,
    docnegociado smallint,
    docnum integer,
    docreferencia char(10),
    desp_doccorrelativo integer,
    desp_docsolicita integer,
    desp_doctipo smallint,
    desp_docestado smallint,
    desp_docgenero integer,
    desp_docfecgenerado char(20),
    desp_docasunto char(150),
    desp_docmotivo char(150),
    desp_docdirigido integer,
    desp_docconducto integer,
    desp_docfecinicio char(20),
    desp_docfecfinaliza char(20),
    desp_docautoriza integer,
    desp_docvobo integer,
    desp_docnegociado smallint,
    desp_docnum integer,
    desp_docreferencia char(10),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_pdocumento from "public";

{ TABLE aud_ptipo row size = 124 number of columns = 7 index size = 12 }

create table aud_ptipo 
  (
    tipcodigo smallint,
    tipdesc char(50),
    desp_tipcodigo smallint,
    desp_tipdesc char(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ptipo from "public";

{ TABLE aud_pestado row size = 54 number of columns = 7 index size = 12 }

create table aud_pestado 
  (
    estcodigo smallint,
    estdesc char(15),
    desp_estcodigo smallint,
    desp_estdesc char(15),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_pestado from "public";

{ TABLE aud_pnegociado row size = 124 number of columns = 7 index size = 12 }

create table aud_pnegociado 
  (
    negcodigo smallint,
    negdesc char(50),
    desp_negcodigo smallint,
    desp_negdesc char(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_pnegociado from "public";

{ TABLE aud_pacceso row size = 52 number of columns = 9 index size = 12 }

create table aud_pacceso 
  (
    acccatalogo integer,
    accpwd char(10),
    accpermiso smallint,
    desp_acccatalogo integer,
    desp_accpwd char(10),
    desp_accpermiso smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_pacceso from "public";

{ TABLE aud_ptiempos row size = 100 number of columns = 19 index size = 12 }

create table aud_ptiempos 
  (
    tiempodoc integer,
    tiempoano char(4),
    tiempomes char(2),
    tiempo1 char(6),
    tiempo2 char(6),
    tiempo3 char(6),
    tiempo4 char(6),
    tiempo5 char(6),
    desp_tiempodoc integer,
    desp_tiempoano char(4),
    desp_tiempomes char(2),
    desp_tiempo1 char(6),
    desp_tiempo2 char(6),
    desp_tiempo3 char(6),
    desp_tiempo4 char(6),
    desp_tiempo5 char(6),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ptiempos from "public";

{ TABLE ptiempos row size = 40 number of columns = 8 index size = 9 }

create table ptiempos 
  (
    tiempodoc integer not null ,
    tiempoano char(4),
    tiempomes char(2),
    tiempo1 char(6),
    tiempo2 char(6),
    tiempo3 char(6),
    tiempo4 char(6),
    tiempo5 char(6),
    primary key (tiempodoc) 
  );

revoke all on ptiempos from "public";

{ TABLE tconec row size = 63 number of columns = 7 index size = 23 }

create table tconec 
  (
    dia char(8) not null ,
    tiempo decimal(16,2) not null ,
    usuario char(10) not null ,
    dependencia char(15) not null ,
    seccion char(15) not null ,
    menu smallint not null ,
    fecha date,
    primary key (dia,usuario) 
  );

revoke all on tconec from "public";

{ TABLE fincas row size = 92 number of columns = 3 index size = 7 }

create table fincas 
  (
    fin_numero smallint not null ,
    fin_nombre char(40) not null ,
    fin_ubicacion char(50) not null ,
    primary key (fin_numero) 
  );

revoke all on fincas from "public";

{ TABLE aud_fincas row size = 204 number of columns = 9 index size = 12 }

create table aud_fincas 
  (
    fin_numero smallint,
    fin_nombre char(40),
    fin_ubicacion char(50),
    desp_fin_numero smallint,
    desp_fin_descripcion char(40),
    desp_fin_ubicacion char(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fincas from "public";

{ TABLE asig_cat row size = 5 number of columns = 2 index size = 6 }

create table asig_cat 
  (
    asc_tipo char(1) not null ,
    asc_catalogo integer not null ,
    
    check (asc_tipo IN ('O' ,'T' )) constraint ck_asc_tipo,
    primary key (asc_tipo)  constraint u111_16
  );

revoke all on asig_cat from "public";

{ TABLE c_corr_seg row size = 20 number of columns = 4 index size = 16 }

create table c_corr_seg 
  (
    seg_usuario integer not null ,
    seg_passwd char(10) not null ,
    seg_dep smallint not null ,
    seg_oficina integer not null ,
    primary key (seg_usuario) 
  );

revoke all on c_corr_seg from "public";

{ TABLE c_documento row size = 438 number of columns = 22 index size = 31 }

create table c_documento 
  (
    doc_codigo integer not null ,
    doc_depend integer not null ,
    doc_tipo integer not null ,
    doc_nombre char(50) not null ,
    doc_prioridad char(1) not null ,
    doc_asunto char(250) not null ,
    doc_fec_realizado datetime year to second not null ,
    doc_fec_in datetime year to second not null ,
    doc_num_hojas integer not null ,
    doc_destino smallint not null ,
    doc_procedencia smallint not null ,
    doc_status char(1) not null ,
    doc_interesado char(50),
    doc_clasificacion integer not null ,
    doc_prefijo integer not null ,
    doc_proposito integer not null ,
    doc_recibe integer not null ,
    doc_int_ext char(1) not null ,
    doc_solucion char(1),
    doc_referencia char(20),
    doc_of_actual integer not null ,
    doc_ult_tras datetime year to second,
    primary key (doc_codigo,doc_depend) 
  );

revoke all on c_documento from "public";

{ TABLE c_ubicacion_docum row size = 245 number of columns = 15 index size = 17 }

create table c_ubicacion_docum 
  (
    ub_correlativo integer not null ,
    ub_cod_doc integer not null ,
    ub_cod_depend integer not null ,
    ub_fec_in datetime year to second,
    ub_recibe integer,
    ub_entrega integer,
    ub_recibe_ok char(1),
    ub_observaciones char(175),
    ub_oficina integer,
    ub_of_dep integer,
    ub_doc_tipo_remite integer,
    ub_doc_remite char(20),
    ub_int_ext char(1),
    ub_of_remite integer,
    ub_of_dep_remite integer,
    primary key (ub_correlativo,ub_cod_doc,ub_cod_depend) 
  );

revoke all on c_ubicacion_docum from "public";

{ TABLE dpue row size = 87 number of columns = 13 index size = 31 }

create table dpue 
  (
    pue_catalogo integer not null ,
    pue_grado smallint not null ,
    pue_arma smallint not null ,
    pue_dependencia smallint not null ,
    pue_jerarquia char(3),
    pue_plaza integer not null ,
    pue_ceom char(6) not null ,
    pue_desc char(45) not null ,
    pue_situacion char(2) not null ,
    pue_fec_nomb date not null ,
    pue_ord_gral char(7) not null ,
    pue_punto_og smallint not null ,
    pue_fec_cese date not null ,
    
    check (pue_fec_nomb <= pue_fec_cese ) constraint ck_pue_nomb_cese,
    primary key (pue_catalogo,pue_plaza,pue_fec_nomb)  constraint pk_dpue
  );

revoke all on dpue from "public";

{ TABLE mtit row size = 357 number of columns = 5 index size = 0 }

create table mtit 
  (
    tit_depen smallint not null ,
    tit_llave char(8) not null ,
    tit_desc_ct char(20) not null ,
    tit_desc_md char(27) not null ,
    tit_desc_lg char(300) not null 
  );

revoke all on mtit from "public";

{ TABLE sand row size = 76 number of columns = 3 index size = 11 }

create table sand 
  (
    dsan_tran integer not null ,
    dsan_linea smallint not null ,
    dsan_texto char(70) not null ,
    primary key (dsan_tran,dsan_linea)  constraint pk_sand
  );

revoke all on sand from "public";

{ TABLE telefonos row size = 74 number of columns = 5 index size = 0 }

create table telefonos 
  (
    tinstitucion integer not null ,
    tnombre char(50) not null ,
    tclase char(3) not null ,
    tnumero char(12),
    textension char(5)
  );

revoke all on telefonos from "public";

{ TABLE t_org row size = 126 number of columns = 20 index size = 7 }

create table t_org 
  (
    torg_plaza integer not null ,
    torg_ceom char(6) not null ,
    torg_dependencia smallint not null ,
    torg_jerarquia char(10) not null ,
    torg_grado smallint not null ,
    torg_plaza_desc char(30) not null ,
    torg_situacion char(1),
    torg_cod_pago char(1),
    torg_hrs_trab smallint not null ,
    torg_fec_ult_mod date,
    torg_ord_gral char(7),
    torg_dep_auto smallint not null ,
    torg_docu_auto char(10) not null ,
    torg_fec_auto date not null ,
    torg_nominas char(1),
    torg_usuario char(8),
    torg_fec_hora datetime year to minute,
    torg_terminal char(20),
    torg_accion char(1),
    torg_catalogo integer,
    
    check (torg_nominas IN ('0' ,'1' ,'2' ,'3' ,'4' ,'5' ,'6' ,'7' ,'8' ,'9' )) constraint 
              c238_103,
    
    check (torg_accion IN ('A' ,'I' )) constraint c238_104,
    
    check (torg_situacion IN ('A' ,'B' ,'C' )) constraint c916_1005
  );

revoke all on t_org from "public";

{ TABLE ret_of_carre_res row size = 352 number of columns = 14 index size = 9 }

create table ret_of_carre_res 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    arma char(30),
    dem char(10),
    t_servicio smallint,
    nombre char(100),
    lugar_alta char(100),
    bono_retiro money(16,2),
    sueldo money(16,2),
    bono14 money(16,2),
    aguinaldo money(16,2),
    bono_vac money(16,2),
    total money(16,2),
    primary key (catalogo) 
  );

revoke all on ret_of_carre_res from "public";

{ TABLE ret_tropa row size = 303 number of columns = 11 index size = 9 }

create table ret_tropa 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    t_servicio smallint,
    comando char(100),
    monto money(16,2),
    sueldo money(16,2),
    bono14 money(16,2),
    aguinaldo money(16,2),
    total money(16,2),
    primary key (catalogo) 
  );

revoke all on ret_tropa from "public";

{ TABLE ret_desc_im row size = 265 number of columns = 6 index size = 9 }

create table ret_desc_im 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    d_descuento char(100),
    saldo money(16,2),
    primary key (catalogo) 
  );

revoke all on ret_desc_im from "public";

{ TABLE ret_desc_hr row size = 365 number of columns = 7 index size = 9 }

create table ret_desc_hr 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    apellido char(100),
    nombre char(100),
    d_descuento char(100),
    saldo money(16,2),
    primary key (catalogo) 
  );

revoke all on ret_desc_hr from "public";

{ TABLE ret_desc_ipm_asim row size = 219 number of columns = 11 index size = 9 }

create table ret_desc_ipm_asim 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    prestamos money(16,2),
    optica money(16,2),
    pc money(16,2),
    financiamientos money(16,2),
    bazar money(16,2),
    boletos money(16,2),
    total money(16,2),
    primary key (catalogo) 
  );

revoke all on ret_desc_ipm_asim from "public";

{ TABLE ret_desc_ipm_esptas row size = 228 number of columns = 12 index size = 9 }

create table ret_desc_ipm_esptas 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    prestamos money(16,2),
    optica money(16,2),
    pc money(16,2),
    financiamiento money(16,2),
    bazar money(16,2),
    boletos money(16,2),
    linda_vista money(16,2),
    total money(16,2),
    primary key (catalogo) 
  );

revoke all on ret_desc_ipm_esptas from "public";

{ TABLE ret_desc_ipm_of row size = 269 number of columns = 12 index size = 9 }

create table ret_desc_ipm_of 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    arma char(50),
    nombre char(100),
    prestamos money(16,2),
    optica money(16,2),
    pc money(16,2),
    financiamiento money(16,2),
    bazar money(16,2),
    boletos money(16,2),
    total money(16,2),
    primary key (catalogo) 
  );

revoke all on ret_desc_ipm_of from "public";

{ TABLE ret_desc_ipm_sgtos_may row size = 219 number of columns = 11 index size = 9 }

create table ret_desc_ipm_sgtos_may 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    prestamos money(16,2),
    optica money(16,2),
    pc money(16,2),
    financiamiento money(16,2),
    bazar money(16,2),
    boletos money(16,2),
    total money(16,2),
    primary key (catalogo) 
  );

revoke all on ret_desc_ipm_sgtos_may from "public";

{ TABLE ret_of_asim row size = 364 number of columns = 14 index size = 9 }

create table ret_of_asim 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    comando char(100),
    t_servicio smallint,
    especialidad char(50),
    horas smallint,
    bono_retiro money(16,2),
    sueldo money(16,2),
    bono14 money(16,2),
    aguinaldo money(16,2),
    bono_vac money(16,2),
    total money(16,2),
    primary key (catalogo) 
  );

revoke all on ret_of_asim from "public";

{ TABLE ret_esptas row size = 312 number of columns = 12 index size = 9 }

create table ret_esptas 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    t_servicio smallint,
    puesto char(100),
    bono_retiro money(16,2),
    sueldo money(16,2),
    bono14 money(16,2),
    aguinaldo money(16,2),
    bono_vac money(16,2),
    total money(16,2),
    primary key (catalogo) 
  );

revoke all on ret_esptas from "public";

{ TABLE ret_sgtos_may row size = 312 number of columns = 12 index size = 9 }

create table ret_sgtos_may 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    comando char(100),
    t_servicio smallint,
    bono_retiro money(16,2),
    sueldo money(16,2),
    bono14 money(16,2),
    aguinaldo money(16,2),
    bono_vac money(16,2),
    total money(16,2),
    primary key (catalogo) 
  );

revoke all on ret_sgtos_may from "public";

{ TABLE aud_ret_desc_hr row size = 750 number of columns = 17 index size = 12 }

create table aud_ret_desc_hr 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    apellido char(100),
    nombre char(100),
    d_descuento char(100),
    saldo money(16,2),
    desp_no smallint,
    desp_catalogo integer,
    desp_grado char(50),
    desp_apellido char(100),
    desp_nombre char(100),
    desp_d_descuento char(100),
    desp_saldo money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ret_desc_hr from "public";

{ TABLE aud_ret_desc_im row size = 550 number of columns = 15 index size = 12 }

create table aud_ret_desc_im 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    d_descuento char(100),
    saldo money(16,2),
    desp_no smallint,
    desp_catalogo integer,
    desp_grado char(50),
    desp_nombre char(100),
    desp_d_descuento char(100),
    desp_saldo money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ret_desc_im from "public";

{ TABLE aud_ret_desc_ipm_esptas row size = 476 number of columns = 27 index size = 12 }

create table aud_ret_desc_ipm_esptas 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    prestamos money(16,2),
    optica money(16,2),
    pc money(16,2),
    financiamiento money(16,2),
    bazar money(16,2),
    boletos money(16,2),
    linda_vista money(16,2),
    total money(16,2),
    desp_no smallint,
    desp_catalogo integer,
    desp_grado char(50),
    desp_nombre char(100),
    desp_prestamos money(16,2),
    desp_optica money(16,2),
    desp_pc money(16,2),
    desp_financiamiento money(16,2),
    desp_bazar money(16,2),
    desp_boletos money(16,2),
    desp_linda_vista money(16,2),
    desp_total money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ret_desc_ipm_esptas from "public";

{ TABLE aud_ret_desc_ipm_of row size = 558 number of columns = 27 index size = 12 }

create table aud_ret_desc_ipm_of 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    arma char(50),
    nombre char(100),
    prestamos money(16,2),
    optica money(16,2),
    pc money(16,2),
    financiamiento money(16,2),
    bazar money(16,2),
    boletos money(16,2),
    total money(16,2),
    desp_no smallint,
    desp_catalogo integer,
    desp_grado char(50),
    desp_arma char(50),
    desp_nombre char(100),
    desp_prestamos money(16,2),
    desp_optica money(16,2),
    desp_pc money(16,2),
    desp_financiamiento money(16,2),
    desp_bazar money(16,2),
    desp_boletos money(16,2),
    desp_total money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ret_desc_ipm_of from "public";

{ TABLE aud_ret_desc_ipm_sgtos_may row size = 458 number of columns = 25 index size = 12 }

create table aud_ret_desc_ipm_sgtos_may 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    prestamos money(16,2),
    optica money(16,2),
    pc money(16,2),
    financiamiento money(16,2),
    bazar money(16,2),
    boletos money(16,2),
    total money(16,2),
    desp_no smallint,
    desp_catalogo integer,
    desp_grado char(50),
    desp_nombre char(100),
    desp_prestamos money(16,2),
    desp_optica money(16,2),
    desp_pc money(16,2),
    desp_financiamiento money(16,2),
    desp_bazar money(16,2),
    desp_boletos money(16,2),
    desp_total money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ret_desc_ipm_sgtos_may from "public";

{ TABLE aud_ret_of_asim row size = 748 number of columns = 31 index size = 12 }

create table aud_ret_of_asim 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    comando char(100),
    t_servicio smallint,
    especialidad char(50),
    horas smallint,
    bono_retiro money(16,2),
    sueldo money(16,2),
    bono14 money(16,2),
    aguinaldo money(16,2),
    bono_vac money(16,2),
    total money(16,2),
    desp_no smallint,
    desp_catalogo integer,
    desp_grado char(50),
    desp_nombre char(100),
    desp_comando char(100),
    desp_t_servicio smallint,
    desp_especialidad char(50),
    desp_horas smallint,
    desp_bono_retiro money(16,2),
    desp_sueldo money(16,2),
    desp_bono14 money(16,2),
    desp_aguinaldo money(16,2),
    desp_bono_vac money(16,2),
    desp_total money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ret_of_asim from "public";

{ TABLE aud_ret_of_carre_res row size = 724 number of columns = 31 index size = 12 }

create table aud_ret_of_carre_res 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    arma char(30),
    dem char(10),
    t_servicio smallint,
    nombre char(100),
    lugar_alta char(100),
    bono_retiro money(16,2),
    sueldo money(16,2),
    bono14 money(16,2),
    aguinaldo money(16,2),
    bono_vac money(16,2),
    total money(16,2),
    desp_no smallint,
    desp_catalogo integer,
    desp_grado char(50),
    desp_arma char(30),
    desp_dem char(10),
    desp_t_servicio smallint,
    desp_nombre char(100),
    desp_lugar_alta char(100),
    desp_bono_retiro money(16,2),
    desp_sueldo money(16,2),
    desp_bono14 money(16,2),
    desp_aguinaldo money(16,2),
    desp_bono_vac money(16,2),
    desp_total money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ret_of_carre_res from "public";

{ TABLE aud_ret_sgtos_may row size = 644 number of columns = 27 index size = 12 }

create table aud_ret_sgtos_may 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    comando char(100),
    t_servicio smallint,
    bono_retiro money(16,2),
    sueldo money(16,2),
    bono14 money(16,2),
    aguinaldo money(16,2),
    bono_vac money(16,2),
    total money(16,2),
    desp_no smallint,
    desp_catalogo integer,
    desp_grado char(50),
    desp_nombre char(100),
    desp_comando char(100),
    desp_t_servicio smallint,
    desp_bono_retiro money(16,2),
    desp_sueldo money(16,2),
    desp_bono14 money(16,2),
    desp_aguinaldo money(16,2),
    desp_bono_vac money(16,2),
    desp_total money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ret_sgtos_may from "public";

{ TABLE aud_ret_desc_ipm_asim row size = 458 number of columns = 25 index size = 12 }

create table aud_ret_desc_ipm_asim 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    prestamos money(16,2),
    optica money(16,2),
    pc money(16,2),
    financiamientos money(16,2),
    bazar money(16,2),
    boletos money(16,2),
    total money(16,2),
    desp_no smallint,
    desp_catalogo integer,
    desp_grado char(50),
    desp_nombre char(100),
    desp_prestamos money(16,2),
    desp_optica money(16,2),
    desp_pc money(16,2),
    desp_financiamientos money(16,2),
    desp_bazar money(16,2),
    desp_boletos money(16,2),
    desp_total money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ret_desc_ipm_asim from "public";

{ TABLE retiro row size = 297 number of columns = 36 index size = 9 }

create table retiro 
  (
    catalogo integer,
    gra_codigo smallint,
    grado char(20),
    nombre char(50),
    clase smallint,
    tiempo smallint,
    banco smallint,
    cuenta char(15),
    dependencia smallint,
    depen char(50),
    cedord char(4),
    registro integer,
    plataforma smallint,
    sueldo money(10,2),
    bono money(10,2),
    indenmiza money(10,2),
    completa money(10,2),
    bono14 money(10,2),
    aguinaldo money(10,2),
    vacacional money(10,2),
    totasig money(10,2),
    presipm money(10,2),
    finipm money(10,2),
    optipm money(10,2),
    pcsipm money(10,2),
    bazipm money(10,2),
    vivipm money(10,2),
    faripm money(10,2),
    bolipm money(10,2),
    totipm money(10,2),
    hreal money(10,2),
    indus money(10,2),
    totdesc money(10,2),
    mfp money(10,2),
    mdn money(10,2),
    total money(10,2),
    primary key (catalogo) 
  );

revoke all on retiro from "public";

{ TABLE aud_asigna row size = 290 number of columns = 51 index size = 12 }

create table aud_asigna 
  (
    a_catalogo integer,
    a_sueldo money(16,2),
    a_bienal money(8,2),
    a_prima_resp money(8,2),
    a_prima_esp money(16,8),
    a_gastos_rep money(8,2),
    a_bon_emerg money(8,2),
    a_dividendos money(8,2),
    a_aguinaldo money(16,2),
    a_bono_vac money(8,2),
    a_bono14 money(16,2),
    a_bono_trans money(8,2),
    a_prima_ing money(8,2),
    a_prima_prof money(8,2),
    a_complemento money(8,2),
    a_prima_ext money(8,2),
    a_bono_ali money(8,2),
    a_docencia money(8,2),
    a_kaibil money(8,2),
    a_salto money(8,2),
    a_662000 money(8,2),
    a_clase3 money(8,2),
    a_ppm money(8,2),
    a_riesgo money(8,2),
    desp_a_catalogo integer,
    desp_a_sueldo money(16,2),
    desp_a_bienal money(8,2),
    desp_a_prima_resp money(8,2),
    desp_a_prima_esp money(16,8),
    desp_a_gastos_rep money(8,2),
    desp_a_bon_emerg money(8,2),
    desp_a_dividendos money(8,2),
    desp_a_aguinaldo money(16,2),
    desp_a_bono_vac money(8,2),
    desp_a_bono14 money(16,2),
    desp_a_bono_trans money(8,2),
    desp_a_prima_ing money(8,2),
    desp_a_prima_prof money(8,2),
    desp_a_complemento money(8,2),
    desp_a_prima_ext money(8,2),
    desp_a_bono_ali money(8,2),
    desp_a_docencia money(8,2),
    desp_a_kaibil money(8,2),
    desp_a_salto money(8,2),
    desp_a_662000 money(8,2),
    desp_a_clase3 money(8,2),
    desp_a_ppm money(8,2),
    desp_a_riesgo money(8,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_asigna from "public";

{ TABLE aud_c_control row size = 72 number of columns = 7 index size = 12 }

create table aud_c_control 
  (
    c_codigo char(6),
    c_nombre char(20),
    desp_c_codigo char(6),
    desp_c_nombre char(20),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_c_control from "public";

{ TABLE aud_usuapli row size = 366 number of columns = 11 index size = 12 }

create table aud_usuapli 
  (
    usuarios char(32),
    tabla varchar(128),
    permisos char(9),
    sistema char(3),
    desp_usuarios char(32),
    desp_tabla varchar(128),
    desp_permisos char(9),
    desp_sistema char(3),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_usuapli from "public";

{ TABLE aud_cmm_hospitalizados row size = 342 number of columns = 17 index size = 12 }

create table aud_cmm_hospitalizados 
  (
    hos_catalogo integer,
    hos_fec_ingreso date,
    hos_diag_ingreso char(45),
    hos_fec_egreso date,
    hos_diag_egreso char(100),
    hos_grado smallint,
    hos_depen smallint,
    desp_hos_catalogo integer,
    desp_hos_fec_ingreso date,
    desp_hos_diag_ingreso char(45),
    desp_hos_fec_egreso date,
    desp_hos_diag_egreso char(100),
    desp_hos_grado smallint,
    desp_hos_depen smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cmm_hospitalizados from "public";

{ TABLE aud_retiro row size = 614 number of columns = 75 index size = 12 }

create table aud_retiro 
  (
    catalogo integer,
    gra_codigo smallint,
    grado char(20),
    nombre char(50),
    clase smallint,
    tiempo smallint,
    banco smallint,
    cuenta char(15),
    dependencia smallint,
    depen char(50),
    cedord char(4),
    registro integer,
    plataforma smallint,
    sueldo money(10,2),
    bono money(10,2),
    indenmiza money(10,2),
    completa money(10,2),
    bono14 money(10,2),
    aguinaldo money(10,2),
    vacacional money(10,2),
    totasig money(10,2),
    presipm money(10,2),
    finipm money(10,2),
    optipm money(10,2),
    pcsipm money(10,2),
    bazipm money(10,2),
    vivipm money(10,2),
    faripm money(10,2),
    bolipm money(10,2),
    totipm money(10,2),
    hreal money(10,2),
    indus money(10,2),
    totdesc money(10,2),
    mfp money(10,2),
    mdn money(10,2),
    total money(10,2),
    desp_catalogo integer,
    desp_gra_codigo smallint,
    desp_grado char(20),
    desp_nombre char(50),
    desp_clase smallint,
    desp_tiempo smallint,
    desp_banco smallint,
    desp_cuenta char(15),
    desp_dependencia smallint,
    desp_depen char(50),
    desp_cedord char(4),
    desp_registro integer,
    desp_plataforma smallint,
    desp_sueldo money(10,2),
    desp_bono money(10,2),
    desp_indenmiza money(10,2),
    desp_completa money(10,2),
    desp_bono14 money(10,2),
    desp_aguinaldo money(10,2),
    desp_vacacional money(10,2),
    desp_totasig money(10,2),
    desp_presipm money(10,2),
    desp_finipm money(10,2),
    desp_optipm money(10,2),
    desp_pcsipm money(10,2),
    desp_bazipm money(10,2),
    desp_vivipm money(10,2),
    desp_faripm money(10,2),
    desp_bolipm money(10,2),
    desp_totipm money(10,2),
    desp_hreal money(10,2),
    desp_indus money(10,2),
    desp_totdesc money(10,2),
    desp_mfp money(10,2),
    desp_mdn money(10,2),
    desp_total money(10,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_retiro from "public";

{ TABLE f_resumen row size = 99 number of columns = 8 index size = 7 }

create table f_resumen 
  (
    r_year smallint not null ,
    r_mes smallint not null ,
    r_clase char(30) not null ,
    r_cgrado smallint not null ,
    r_grado char(15) not null ,
    r_asignacion char(35) not null ,
    r_cantidad integer not null ,
    r_monto money(16,2)
  );

revoke all on f_resumen from "public";

{ TABLE f_datosfza row size = 82 number of columns = 8 index size = 14 }

create table f_datosfza 
  (
    df_cdep smallint not null ,
    df_dependencia char(45) not null ,
    df_clase char(1) not null ,
    df_dclase char(20) not null ,
    df_cgrado smallint not null ,
    df_totales integer not null ,
    df_llenas integer not null ,
    df_vacantes integer not null 
  );

revoke all on f_datosfza from "public";

{ TABLE aplicaciones row size = 52 number of columns = 2 index size = 7 }

create table aplicaciones 
  (
    codigo smallint not null ,
    aplicacion char(50) not null ,
    primary key (codigo) 
  );

revoke all on aplicaciones from "public";

{ TABLE divisiones row size = 52 number of columns = 2 index size = 7 }

create table divisiones 
  (
    codigo smallint not null ,
    division char(50) not null ,
    primary key (codigo) 
  );

revoke all on divisiones from "public";

{ TABLE negociados row size = 52 number of columns = 2 index size = 7 }

create table negociados 
  (
    codigo smallint not null ,
    negociado char(50) not null ,
    primary key (codigo) 
  );

revoke all on negociados from "public";

{ TABLE u_comisiones row size = 54 number of columns = 2 index size = 9 }

create table u_comisiones 
  (
    usuaryo integer not null ,
    clave char(50) not null ,
    primary key (usuaryo) 
  );

revoke all on u_comisiones from "public";

{ TABLE aud_aplicaciones row size = 124 number of columns = 7 index size = 12 }

create table aud_aplicaciones 
  (
    codigo smallint,
    aplicacion char(50),
    desp_codigo smallint,
    desp_aplicacion char(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_aplicaciones from "public";

{ TABLE aud_divisiones row size = 124 number of columns = 7 index size = 12 }

create table aud_divisiones 
  (
    codigo smallint,
    division char(50),
    desp_codigo smallint,
    desp_division char(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_divisiones from "public";

{ TABLE aud_negociados row size = 124 number of columns = 7 index size = 12 }

create table aud_negociados 
  (
    codigo smallint,
    negociado char(50),
    desp_codigo smallint,
    desp_negociado char(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_negociados from "public";

{ TABLE aud_u_comisiones row size = 128 number of columns = 7 index size = 12 }

create table aud_u_comisiones 
  (
    usuaryo integer,
    clave char(50),
    desp_usuaryo integer,
    desp_clave char(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_u_comisiones from "public";

{ TABLE f_ipm_cart row size = 55 number of columns = 9 index size = 9 }

create table f_ipm_cart 
  (
    ipc_correlativo integer not null ,
    ipc_fecha_env date not null ,
    ipc_nu_credito char(9) not null ,
    ipc_catalogo integer not null ,
    ipc_monto money(10,2) not null ,
    ipc_codigo char(2) not null ,
    ipc_status char(1) not null ,
    ipc_motivo char(15) not null ,
    ipc_saldo money(18,2),
    primary key (ipc_correlativo) 
  );

revoke all on f_ipm_cart from "public";

{ TABLE agtsa row size = 55 number of columns = 11 index size = 0 }

create table agtsa 
  (
    ag_catalogo integer not null ,
    ag_monto money(16,2),
    ag_descuento money(16,2),
    ag_saldo char(8),
    ag_des_flag char(1),
    ag_poliza char(9),
    ag_recibo char(8),
    ag_agente smallint,
    ag_depen smallint,
    ag_grado smallint,
    ag_clase char(1)
  );

revoke all on agtsa from "public";

{ TABLE asamblea row size = 6 number of columns = 2 index size = 0 }

create table asamblea 
  (
    as_catalogo integer not null ,
    as_cantidad smallint not null 
  );

revoke all on asamblea from "public";

{ TABLE banejer_car row size = 96 number of columns = 9 index size = 0 }

create table banejer_car 
  (
    car_prestamo char(13) not null ,
    car_catalogo integer not null ,
    car_nombre char(40),
    car_monto money(16,2),
    car_cuota money(16,2),
    car_saldo money(16,2),
    car_intereses money(16,2),
    car_si_no char(1),
    car_cod_1_2 smallint
  );

revoke all on banejer_car from "public";

{ TABLE dfdes_gra row size = 165 number of columns = 18 index size = 0 }

create table dfdes_gra 
  (
    dfdg_catalogo integer not null ,
    dfdg_codigo smallint not null ,
    dfdg_nu_reg smallint not null ,
    dfdg_cod_control smallint not null ,
    dfdg_tipo_desc char(1) not null ,
    dfdg_fec_ini date not null ,
    dfdg_ult_act date,
    dfdg_fec_cer date,
    dfdg_monto money(16,2) not null ,
    dfdg_saldo money(16,2) not null ,
    dfdg_mensual money(16,2) not null ,
    dfdg_tot_cuotas smallint not null ,
    dfdg_num_cuotas smallint not null ,
    dfdg_documen char(6),
    dfdg_codeudor integer,
    dfdg_nom_bene char(50),
    dfdg_juz_con char(50),
    dfdg_si_no char(1)
  );

revoke all on dfdes_gra from "public";

{ TABLE dfdes_grat row size = 165 number of columns = 18 index size = 0 }

create table dfdes_grat 
  (
    dfdg_catalogo integer not null ,
    dfdg_codigo smallint not null ,
    dfdg_nu_reg smallint not null ,
    dfdg_cod_control smallint not null ,
    dfdg_tipo_desc char(1) not null ,
    dfdg_fec_ini date not null ,
    dfdg_ult_act date,
    dfdg_fec_cer date,
    dfdg_monto money(16,2) not null ,
    dfdg_saldo money(16,2) not null ,
    dfdg_mensual money(16,2) not null ,
    dfdg_tot_cuotas smallint not null ,
    dfdg_num_cuotas smallint not null ,
    dfdg_documen char(6),
    dfdg_codeudor integer,
    dfdg_nom_bene char(50),
    dfdg_juz_con char(50),
    dfdg_si_no char(1)
  );

revoke all on dfdes_grat from "public";

{ TABLE dfdes_inv row size = 165 number of columns = 18 index size = 0 }

create table dfdes_inv 
  (
    dfdi_catalogo integer not null ,
    dfdi_codigo smallint not null ,
    dfdi_nu_reg smallint not null ,
    dfdi_cod_control smallint not null ,
    dfdi_tipo_desc char(1) not null ,
    dfdi_fec_ini date not null ,
    dfdi_ult_act date,
    dfdi_fec_cer date,
    dfdi_monto money(16,2) not null ,
    dfdi_saldo money(16,2) not null ,
    dfdi_mensual money(16,2) not null ,
    dfdi_tot_cuotas smallint not null ,
    dfdi_num_cuotas smallint not null ,
    dfdi_documen char(6),
    dfdi_codeudor integer,
    dfdi_nom_bene char(50),
    dfdi_juz_con char(50),
    dfdi_si_no char(1)
  );

revoke all on dfdes_inv from "public";

{ TABLE dfdes_invt row size = 165 number of columns = 18 index size = 0 }

create table dfdes_invt 
  (
    dfdi_catalogo integer not null ,
    dfdi_codigo smallint not null ,
    dfdi_nu_reg smallint not null ,
    dfdi_cod_control smallint not null ,
    dfdi_tipo_desc char(1) not null ,
    dfdi_fec_ini date not null ,
    didi_ult_act date,
    dfdi_fec_cer date,
    dfdi_monto money(16,2) not null ,
    dfdi_saldo money(16,2) not null ,
    dfdi_mensual money(16,2) not null ,
    dfdi_tot_cuotas smallint not null ,
    dfdi_num_cuotas smallint not null ,
    dfdi_documen char(6),
    dfdi_codeudor integer,
    dfdi_nom_bene char(50),
    dfdi_juz_con char(50),
    dfdi_si_no char(1)
  );

revoke all on dfdes_invt from "public";

{ TABLE f_amt row size = 28 number of columns = 6 index size = 0 }

create table f_amt 
  (
    amt_catalogo integer not null ,
    amt_codigo smallint,
    amt_fecha date,
    amt_fact char(8),
    amt_monto money(16,2),
    amt_si_no char(1)
  );

revoke all on f_amt from "public";

{ TABLE f_bac row size = 94 number of columns = 9 index size = 0 }

create table f_bac 
  (
    bac_prestamo char(11) not null ,
    bac_catalogo integer not null ,
    bac_nombre char(40),
    bac_monto money(16,2),
    bac_cuota money(16,2),
    bac_saldo money(16,2),
    bac_intereses money(16,2),
    bac_si_no char(1),
    bac_cod_1_2 smallint
  );

revoke all on f_bac from "public";

{ TABLE f_combust row size = 18 number of columns = 4 index size = 0 }

create table f_combust 
  (
    ic_cat integer not null ,
    ic_comb integer,
    ic_monto money(16,2),
    ic_otro char(1)
  );

revoke all on f_combust from "public";

{ TABLE f_hreal row size = 23 number of columns = 4 index size = 0 }

create table f_hreal 
  (
    hr_catalogo integer not null ,
    hr_mensual money(16,2) not null ,
    hr_saldo money(16,2) not null ,
    hr_control char(1)
  );

revoke all on f_hreal from "public";

{ TABLE findustria row size = 18 number of columns = 4 index size = 0 }

create table findustria 
  (
    ind_catalogo integer not null ,
    ind_mensual money(16,2) not null ,
    ind_num integer not null ,
    ind_control char(1)
  );

revoke all on findustria from "public";

{ TABLE f_asgral row size = 74 number of columns = 7 index size = 0 }

create table f_asgral 
  (
    as_catalogo integer not null ,
    as_nombre char(40),
    as_mensual money(16,2),
    as_si_no char(1),
    as_poliza char(10),
    as_solicitud char(9),
    as_moneda char(1)
  );

revoke all on f_asgral from "public";

{ TABLE mper row size = 284 number of columns = 34 index size = 274 }

create table mper 
  (
    per_catalogo integer not null ,
    per_serie char(8),
    per_grado smallint not null ,
    per_arma smallint not null ,
    per_nom1 char(15),
    per_nom2 char(15),
    per_ape1 char(15),
    per_ape2 char(15),
    per_ape3 char(15),
    per_ced_ord char(4) not null ,
    per_ced_reg char(20),
    per_fec_ext_ced date,
    per_ext_ced_lugar char(4) not null ,
    per_est_civil char(1),
    per_direccion char(50),
    per_zona smallint,
    per_dir_lugar char(4) not null ,
    per_telefono integer,
    per_sexo char(1) not null ,
    per_fec_nac date not null ,
    per_nac_lugar char(4) not null ,
    per_promocion smallint,
    per_afil_ipm char(1) not null ,
    per_sangre char(3) not null ,
    per_antiguedad smallint,
    per_bienal smallint not null ,
    per_plaza integer not null ,
    per_desc_empleo char(45) not null ,
    per_fec_nomb date not null ,
    per_ord_gral char(7),
    per_punto_og smallint,
    per_situacion char(2) not null ,
    per_prima_prof smallint,
    per_dpi char(15),
    
    check (per_est_civil IN ('S' ,'C' ,'U' ,'D' ,'V' )) constraint ck_per_est_civil,
    primary key (per_catalogo)  constraint pk_mper
  );

revoke all on mper from "public";

{ TABLE aud_permiso row size = 496 number of columns = 21 index size = 12 }

create table aud_permiso 
  (
    per_codigo integer,
    catalogo integer,
    fecha_inicio char(10),
    fecha_fin char(10),
    h_salida smallint,
    h_entrada smallint,
    autorizo integer,
    per_division smallint,
    per_observacion char(200),
    desp_per_codigo integer,
    desp_catalogo integer,
    desp_fecha_inicio char(10),
    desp_fecha_fin char(10),
    desp_h_salida smallint,
    desp_h_entrada smallint,
    desp_autorizo integer,
    desp_per_division smallint,
    desp_per_observacion char(200),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_permiso from "public";

{ TABLE permiso row size = 238 number of columns = 9 index size = 34 }

create table permiso 
  (
    per_codigo integer not null ,
    catalogo integer not null ,
    fecha_inicio char(10) not null ,
    fecha_fin char(10) not null ,
    h_salida smallint not null ,
    h_entrada smallint not null ,
    autorizo integer not null ,
    per_division smallint not null ,
    per_observacion char(200),
    primary key (per_codigo) 
  );

revoke all on permiso from "public";

{ TABLE fn_motivos row size = 27 number of columns = 2 index size = 7 }

create table fn_motivos 
  (
    mot_codigo char(2) not null ,
    mot_desc char(25) not null ,
    primary key (mot_codigo) 
  );

revoke all on fn_motivos from "public";

{ TABLE aud_fn_motivos row size = 74 number of columns = 7 index size = 12 }

create table aud_fn_motivos 
  (
    mot_codigo char(2),
    mot_desc char(25),
    desp_mot_codigo char(2),
    desp_mot_desc char(25),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fn_motivos from "public";

{ TABLE aud_f_cmm row size = 156 number of columns = 27 index size = 12 }

create table aud_f_cmm 
  (
    cmm_catalogo integer,
    cmm_trans integer,
    cmm_fec_ini date,
    cmm_ful_act date,
    cmm_fec_cer date,
    cmm_monto money(16,2),
    cmm_saldo money(16,2),
    cmm_mensual money(16,2),
    cmm_tot_cuotas smallint,
    cmm_num_cuotas smallint,
    cmm_contrato char(15),
    cmm_control char(2),
    desp_cmm_catalogo integer,
    desp_cmm_trans integer,
    desp_cmm_fec_ini date,
    desp_cmm_ful_act date,
    desp_cmm_fec_cer date,
    desp_cmm_monto money(16,2),
    desp_cmm_saldo money(16,2),
    desp_cmm_mensual money(16,2),
    desp_cmm_tot_cuotas smallint,
    desp_cmm_num_cuotas smallint,
    desp_cmm_contrato char(15),
    desp_cmm_control char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_f_cmm from "public";

{ TABLE f_cmm row size = 68 number of columns = 12 index size = 0 }

create table f_cmm 
  (
    cmm_catalogo integer not null ,
    cmm_trans integer not null ,
    cmm_fec_ini date not null ,
    cmm_ful_act date not null ,
    cmm_fec_cer date,
    cmm_monto money(16,2) not null ,
    cmm_saldo money(16,2) not null ,
    cmm_mensual money(16,2) not null ,
    cmm_tot_cuotas smallint not null ,
    cmm_num_cuotas smallint not null ,
    cmm_contrato char(15) not null ,
    cmm_control char(2)
  );

revoke all on f_cmm from "public";

{ TABLE hftro_des row size = 55 number of columns = 9 index size = 24 }

create table hftro_des 
  (
    htd_catalogo integer not null ,
    htd_fecha date not null ,
    htd_codigo smallint not null ,
    htd_nu_reg smallint not null ,
    htd_monto money(16,2) not null ,
    htd_mensual money(16,2) not null ,
    htd_saldo money(16,2) not null ,
    htd_corrida char(1),
    htd_varios char(15),
    primary key (htd_catalogo,htd_fecha,htd_codigo,htd_nu_reg)  constraint u954_374
  );

revoke all on hftro_des from "public";

{ TABLE ft_asigna row size = 15 number of columns = 3 index size = 18 }

create table ft_asigna 
  (
    ta_plaza integer not null ,
    ta_codigo smallint not null ,
    ta_monto money(16,2) not null ,
    primary key (ta_plaza,ta_codigo) 
  );

revoke all on ft_asigna from "public";

{ TABLE aud_ft_asigna row size = 50 number of columns = 9 index size = 12 }

create table aud_ft_asigna 
  (
    ta_plaza integer,
    ta_codigo smallint,
    ta_monto money(16,2),
    desp_ta_plaza integer,
    desp_ta_codigo smallint,
    desp_ta_monto money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ft_asigna from "public";

{ TABLE busqueda row size = 12 number of columns = 3 index size = 0 }

create table busqueda 
  (
    ingreso integer,
    cant integer,
    busco integer
  );

revoke all on busqueda from "public";

{ TABLE ingreso row size = 31 number of columns = 5 index size = 13 }

create table ingreso 
  (
    numero integer,
    catalogo integer,
    dep integer,
    entro date,
    hora char(15),
    primary key (numero,catalogo) 
  );

revoke all on ingreso from "public";

{ TABLE fcatnop row size = 8 number of columns = 2 index size = 22 }

create table fcatnop 
  (
    fcat_catalogo integer not null ,
    fcat_date date not null ,
    primary key (fcat_catalogo,fcat_date) 
  );

revoke all on fcatnop from "public";

{ TABLE aud_fcatnop row size = 36 number of columns = 7 index size = 12 }

create table aud_fcatnop 
  (
    fcat_catalogo integer,
    fcat_date date,
    desp_fcat_catalogo integer,
    desp_fcat_date date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fcatnop from "public";

{ TABLE cna row size = 52 number of columns = 2 index size = 7 }

create table cna 
  (
    cna_codigo smallint not null ,
    cna_desc_lg char(50) not null ,
    primary key (cna_codigo) 
  );

revoke all on cna from "public";

{ TABLE religiones row size = 32 number of columns = 2 index size = 7 }

create table religiones 
  (
    rel_codigo smallint not null ,
    rel_desc char(30) not null ,
    primary key (rel_codigo) 
  );

revoke all on religiones from "public";

{ TABLE rel_detalle row size = 6 number of columns = 2 index size = 9 }

create table rel_detalle 
  (
    rel_det_catalogo integer not null ,
    rel_det_religion smallint not null ,
    primary key (rel_det_catalogo) 
  );

revoke all on rel_detalle from "public";

{ TABLE aud_religiones row size = 84 number of columns = 7 index size = 12 }

create table aud_religiones 
  (
    rel_codigo smallint,
    rel_desc char(30),
    desp_rel_codigo smallint,
    desp_rel_desc char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_religiones from "public";

{ TABLE aud_rel_detalle row size = 32 number of columns = 7 index size = 12 }

create table aud_rel_detalle 
  (
    rel_det_catalogo integer,
    rel_det_religion smallint,
    desp_rel_det_catalogo integer,
    desp_rel_det_religion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rel_detalle from "public";

{ TABLE cnc row size = 68 number of columns = 5 index size = 0 }

create table cnc 
  (
    nombre char(20) not null ,
    objeto char(25) not null ,
    acceso char(9) not null ,
    fecha date not null ,
    db char(10) not null 
  );

revoke all on cnc from "public";

{ TABLE radius1 row size = 368 number of columns = 13 index size = 0 }

create table radius1 
  (
    codigo integer not null ,
    comando char(150) not null ,
    usuario_nt char(50) not null ,
    e_mail char(50) not null ,
    pwd1_nt char(8),
    pwd2_nt char(8),
    pwd3_nt char(8),
    pwd4_nt char(8),
    cta_radius char(50) not null ,
    pwd1_rad char(8),
    pwd2_rad char(8),
    pwd3_rad char(8),
    pwd4_rad char(8)
  );

revoke all on radius1 from "public";

{ TABLE aud_oestoe row size = 564 number of columns = 111 index size = 0 }

create table aud_oestoe 
  (
    est_codigo integer,
    est_depcia char(60),
    est_gd_ii integer,
    est_gd_v integer,
    est_gb_ii integer,
    est_gb_v integer,
    est_cnel_ii integer,
    est_cnel_v integer,
    est_tcnel_ii integer,
    est_tcnel_v integer,
    est_may_ii integer,
    est_may_v integer,
    est_o_sg_ii integer,
    est_o_sg_v integer,
    est_cap1_ii integer,
    est_cap1_v integer,
    est_cap2_ii integer,
    est_cap2_v integer,
    est_tte_ii integer,
    est_tte_v integer,
    est_subte_ii integer,
    est_subte_v integer,
    est_sgto_cp_ii integer,
    est_sgto_cp_v integer,
    est_as_ii integer,
    est_as_v integer,
    est_as_sg_ii integer,
    est_as_sg_v integer,
    est_sm_esp_ii integer,
    est_sm_esp_v integer,
    est_st_esp_ii integer,
    est_st_esp_v integer,
    est_s_1ro_esp_ii integer,
    est_s_1ro_esp_v integer,
    est_s_2do_esp_ii integer,
    est_s_2do_esp_v integer,
    est_cabo_esp_ii integer,
    est_cabo_esp_v integer,
    est_sold_1ra_esp_ii integer,
    est_sold_1ra_esp_v integer,
    est_sold_2da_esp_ii integer,
    est_sold_2da_esp_v integer,
    est_sgt_1ro_ii integer,
    est_sgt_1ro_v integer,
    est_sgt_2do_ii integer,
    est_sgt_2do_v integer,
    est_cabo_ii integer,
    est_cabo_v integer,
    est_sold_1ra_ii integer,
    est_sold_1ra_v integer,
    est_sold_2da_ii integer,
    est_sold_2da_v integer,
    est_cad_ii integer,
    est_cad_v integer,
    desp_est_codigo integer,
    desp_est_depcia char(60),
    desp_est_gd_ii integer,
    desp_est_gd_v integer,
    desp_est_gb_ii integer,
    desp_est_gb_v integer,
    desp_est_cnel_ii integer,
    desp_est_cnel_v integer,
    desp_est_tcnel_ii integer,
    desp_est_tcnel_v integer,
    desp_est_may_ii integer,
    desp_est_may_v integer,
    desp_est_o_sg_ii integer,
    desp_est_o_sg_v integer,
    desp_est_cap1_ii integer,
    desp_est_cap1_v integer,
    desp_est_cap2_ii integer,
    desp_est_cap2_v integer,
    desp_est_tte_ii integer,
    desp_est_tte_v integer,
    desp_est_subte_ii integer,
    desp_est_subte_v integer,
    desp_est_sgto_cp_ii integer,
    desp_est_sgto_cp_v integer,
    desp_est_as_ii integer,
    desp_est_as_v integer,
    desp_est_as_sg_ii integer,
    desp_est_as_sg_v integer,
    desp_est_sm_esp_ii integer,
    desp_est_sm_esp_v integer,
    desp_est_st_esp_ii integer,
    desp_est_st_esp_v integer,
    desp_est_s_1ro_esp_ii integer,
    desp_est_s_1ro_esp_v integer,
    desp_est_s_2do_esp_ii integer,
    desp_est_s_2do_esp_v integer,
    desp_est_cabo_esp_ii integer,
    desp_est_cabo_esp_v integer,
    desp_est_sold_1ra_esp_ii integer,
    desp_est_sold_1ra_esp_v integer,
    desp_est_sold_2da_esp_ii integer,
    desp_est_sold_2da_esp_v integer,
    desp_est_sgt_1ro_ii integer,
    desp_est_sgt_1ro_v integer,
    desp_est_sgt_2do_ii integer,
    desp_est_sgt_2do_v integer,
    desp_est_cabo_ii integer,
    desp_est_cabo_v integer,
    desp_est_sold_1ra_ii integer,
    desp_est_sold_1ra_v integer,
    desp_est_sold_2da_ii integer,
    desp_est_sold_2da_v integer,
    desp_est_cad_ii integer,
    desp_est_cad_v integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_oestoe from "public";

{ TABLE oestoe row size = 272 number of columns = 54 index size = 9 }

create table oestoe 
  (
    est_codigo integer not null ,
    est_depcia char(60),
    est_gd_ii integer,
    est_gd_v integer,
    est_gb_ii integer,
    est_gb_v integer,
    est_cnel_ii integer,
    est_cnel_v integer,
    est_tcnel_ii integer,
    est_tcnel_v integer,
    est_may_ii integer,
    est_may_v integer,
    est_o_sg_ii integer,
    est_o_sg_v integer,
    est_cap1_ii integer,
    est_cap1_v integer,
    est_cap2_ii integer,
    est_cap2_v integer,
    est_tte_ii integer,
    est_tte_v integer,
    est_subte_ii integer,
    est_subte_v integer,
    est_sgto_cp_ii integer,
    est_sgto_cp_v integer,
    est_as_ii integer,
    est_as_v integer,
    est_as_sg_ii integer,
    est_as_sg_v integer,
    est_sm_esp_ii integer,
    est_sm_esp_v integer,
    est_st_esp_ii integer,
    est_st_esp_v integer,
    est_s_1ro_esp_ii integer,
    est_s_1ro_esp_v integer,
    est_s_2do_esp_ii integer,
    est_s_2do_esp_v integer,
    est_cabo_esp_ii integer,
    est_cabo_esp_v integer,
    est_sold_1ra_esp_ii integer,
    est_sold_1ra_esp_v integer,
    est_sold_2da_esp_ii integer,
    est_sold_2da_esp_v integer,
    est_sgt_1ro_ii integer,
    est_sgt_1ro_v integer,
    est_sgt_2do_ii integer,
    est_sgt_2do_v integer,
    est_cabo_ii integer,
    est_cabo_v integer,
    est_sold_1ra_ii integer,
    est_sold_1ra_v integer,
    est_sold_2da_ii integer,
    est_sold_2da_v integer,
    est_cad_ii integer,
    est_cad_v integer,
    primary key (est_codigo)  constraint pk_oestoe
  );

revoke all on oestoe from "public";

{ TABLE aud_mtit row size = 734 number of columns = 13 index size = 12 }

create table aud_mtit 
  (
    tit_depen smallint,
    tit_llave char(8),
    tit_desc_ct char(20),
    tit_desc_md char(27),
    tit_desc_lg char(300),
    desp_tit_depen smallint,
    desp_tit_llave char(8),
    desp_tit_desc_ct char(20),
    desp_tit_desc_md char(27),
    desp_tit_desc_lg char(300),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mtit from "public";

{ TABLE aud_resofi row size = 337 number of columns = 47 index size = 12 }

create table aud_resofi 
  (
    res_nomina char(1),
    res_partida char(1),
    res_fecha date,
    res_unidad char(5),
    res_subprog char(2),
    res_sueldo money(16,2),
    res_bienal money(16,2),
    res_respon money(16,2),
    res_emerg money(16,2),
    res_repres money(16,2),
    res_profes money(16,2),
    res_constru money(16,2),
    res_tot_nomi money(16,2),
    res_ipm money(16,2),
    res_montepio money(16,2),
    res_fianza money(16,2),
    res_devengado money(16,2),
    res_descuentos money(16,2),
    res_liquido money(16,2),
    res_bon_662000 money(16,2),
    res_pri_prof_mil money(16,2),
    res_depen smallint,
    desp_res_nomina char(1),
    desp_res_partida char(1),
    desp_res_fecha date,
    desp_res_unidad char(4),
    desp_res_subprog char(2),
    desp_res_sueldo money(16,2),
    desp_res_bienal money(16,2),
    desp_res_respon money(16,2),
    desp_res_emerg money(16,2),
    desp_res_repres money(16,2),
    desp_res_profes money(16,2),
    desp_res_constru money(16,2),
    desp_res_tot_nomi money(16,2),
    desp_res_ipm money(16,2),
    desp_res_montepio money(16,2),
    desp_res_fianza money(16,2),
    desp_res_devengado money(16,2),
    desp_res_descuentos money(16,2),
    desp_res_liquido money(16,2),
    desp_res_bon_662000 money(16,2),
    desp_res_pri_prof_mil money(16,2),
    desp_res_depen smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_resofi from "public";

{ TABLE aud_f_resumen row size = 218 number of columns = 19 index size = 12 }

create table aud_f_resumen 
  (
    r_year smallint,
    r_mes smallint,
    r_clase char(30),
    r_cgrado smallint,
    r_grado char(15),
    r_asignacion char(35),
    r_cantidad integer,
    r_monto money(16,2),
    desp_r_year smallint,
    desp_r_mes smallint,
    desp_r_clase char(30),
    desp_r_cgrado smallint,
    desp_r_grado char(15),
    desp_r_asignacion char(35),
    desp_r_cantidad integer,
    desp_r_monto money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_f_resumen from "public";

{ TABLE aud_ret_esptas row size = 644 number of columns = 27 index size = 12 }

create table aud_ret_esptas 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    t_servicio smallint,
    puesto char(100),
    bono_retiro money(16,2),
    sueldo money(16,2),
    bono14 money(16,2),
    aguinaldo money(16,2),
    bono_vac money(16,2),
    total money(16,2),
    desp_no smallint,
    desp_catalogo integer,
    desp_grado char(50),
    desp_nombre char(100),
    desp_t_servicio smallint,
    desp_puesto char(100),
    desp_bono_retiro money(16,2),
    desp_sueldo money(16,2),
    desp_bono14 money(16,2),
    desp_aguinaldo money(16,2),
    desp_bono_vac money(16,2),
    desp_total money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ret_esptas from "public";

{ TABLE aud_findustria row size = 56 number of columns = 11 index size = 12 }

create table aud_findustria 
  (
    ind_catalogo integer,
    ind_mensual money(16,2),
    ind_num integer,
    ind_control char(1),
    desp_ind_catalogo integer,
    desp_ind_mensual money(16,2),
    desp_ind_num integer,
    desp_ind_control char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_findustria from "public";

{ TABLE aud_banejer_acc row size = 123 number of columns = 12 index size = 12 }

create table aud_banejer_acc 
  (
    antes1 char(11),
    antes2 char(12),
    antes3 char(20),
    antes4 char(1),
    despues1 char(11),
    despues2 char(12),
    despues3 char(20),
    despues4 char(1),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_banejer_acc from "public";

{ TABLE xsql_languages row size = 1778 number of columns = 7 index size = 0 }

create table xsql_languages 
  (
    source char(254) not null ,
    source_year char(254),
    conformance char(254),
    integrity char(254),
    implementation char(254),
    binding_style char(254),
    programming_lang char(254)
  );

revoke all on xsql_languages from "public";

{ TABLE xserver_info row size = 508 number of columns = 2 index size = 0 }

create table xserver_info 
  (
    server_attribute char(254) not null ,
    attribute_value char(254)
  );

revoke all on xserver_info from "public";

{ TABLE dfdes_frasa row size = 165 number of columns = 18 index size = 9 }

create table dfdes_frasa 
  (
    dfdf_catalogo integer not null ,
    dfdf_codigo smallint not null ,
    dfdf_nu_reg smallint not null ,
    dfdf_cod_control smallint not null ,
    dfdf_tipo_desc char(1) not null ,
    dfdf_fec_ini date,
    dfdf_ult_act date,
    dfdf_fec_cer date,
    dfdf_monto money(16,2) not null ,
    dfdf_saldo money(16,2) not null ,
    dfdf_mensual money(16,2) not null ,
    dfdf_tot_cuotas smallint not null ,
    dfdf_num_cuotas smallint not null ,
    dfdf_documen char(6),
    dfdf_codeudor integer,
    dfdf_nom_bene char(50),
    dfdf_juz_con char(50),
    dfdf_si_no char(1),
    primary key (dfdf_catalogo) 
  );

revoke all on dfdes_frasa from "public";

{ TABLE aud_dfdes_frasa row size = 350 number of columns = 39 index size = 0 }

create table aud_dfdes_frasa 
  (
    dfdf_catalogo integer,
    dfdf_codigo smallint,
    dfdf_nu_reg smallint,
    dfdf_cod_control smallint,
    dfdf_tipo_desc char(1),
    dfdf_fec_ini date,
    dfdf_ult_act date,
    dfdf_fec_cer date,
    dfdf_monto money(16,2),
    dfdf_saldo money(16,2),
    dfdf_mensual money(16,2),
    dfdf_tot_cuotas smallint,
    dfdf_num_cuotas smallint,
    dfdf_documen char(6),
    dfdf_codeudor integer,
    dfdf_nom_bene char(50),
    dfdf_juz_con char(50),
    dfdf_si_no char(1),
    desp_dfdf_catalogo integer,
    desp_dfdf_codigo smallint,
    desp_dfdf_nu_reg smallint,
    desp_dfdf_cod_control smallint,
    desp_dfdf_tipo_desc char(1),
    desp_dfdf_fec_ini date,
    desp_dfdf_ult_act date,
    desp_dfdf_fec_cer date,
    desp_dfdf_monto money(16,2),
    desp_dfdf_saldo money(16,2),
    desp_dfdf_mensual money(16,2),
    desp_dfdf_tot_cuotas smallint,
    desp_dfdf_num_cuotas smallint,
    desp_dfdf_documen char(6),
    desp_dfdf_codeudor integer,
    desp_dfdf_nom_bene char(50),
    desp_dfdf_juz_con char(50),
    desp_dfdf_si_no char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dfdes_frasa from "public";

{ TABLE msan row size = 41 number of columns = 12 index size = 32 }

create table msan 
  (
    san_catalogo integer not null ,
    san_tran serial not null ,
    san_grado smallint not null ,
    san_sancion integer not null ,
    san_tiempo smallint,
    san_fec_inicio date not null ,
    san_depen smallint not null ,
    san_ord_gral char(7),
    san_fec_og date,
    san_punto_og char(4),
    san_estado char(2),
    sam_horas smallint,
    primary key (san_tran)  constraint pk_msan
  );

revoke all on msan from "public";

{ TABLE aud_resutro row size = 330 number of columns = 49 index size = 12 }

create table aud_resutro 
  (
    res_nomina smallint,
    res_contrato smallint,
    res_depen smallint,
    res_btn smallint,
    res_cia smallint,
    res_fecha date,
    res_prog char(3),
    res_grupo char(3),
    res_sueldo money(16,2),
    res_alimentacion money(16,2),
    res_responsabilida money(16,2),
    res_reenganche money(16,2),
    res_profesional money(16,2),
    res_representacion money(16,2),
    res_bon_emerg money(16,2),
    res_bon_662000 money(16,2),
    res_otras_boni money(16,2),
    res_montepio money(16,2),
    res_ipm money(16,2),
    res_cmm money(16,2),
    res_total money(16,2),
    res_liquido money(16,2),
    res_profmil money(16,2),
    desp_res_nomina smallint,
    desp_res_contrato smallint,
    desp_res_depen smallint,
    desp_res_btn smallint,
    desp_res_cia smallint,
    desp_res_fecha date,
    desp_res_prog char(3),
    desp_res_grupo char(3),
    desp_res_sueldo money(16,2),
    desp_res_alimentacion money(16,2),
    desp_res_responsabilida money(16,2),
    desp_res_reenganche money(16,2),
    desp_res_profesional money(16,2),
    desp_res_representacion money(16,2),
    desp_res_bon_emerg money(16,2),
    desp_res_bon_662000 money(16,2),
    desp_res_otras_boni money(16,2),
    desp_res_montepio money(16,2),
    desp_res_ipm money(16,2),
    desp_res_cmm money(16,2),
    desp_res_total money(16,2),
    desp_res_liquido money(16,2),
    desp_res_profmil money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_resutro from "public";

{ TABLE aud_hftro_des row size = 130 number of columns = 21 index size = 12 }

create table aud_hftro_des 
  (
    htd_catalogo integer,
    htd_fecha date,
    htd_codigo smallint,
    htd_nu_reg smallint,
    htd_monto money(16,2),
    htd_mensual money(16,2),
    htd_saldo money(16,2),
    htd_corrida char(1),
    htd_varios char(15),
    desp_htd_catalogo integer,
    desp_htd_fecha date,
    desp_htd_codigo smallint,
    desp_htd_nu_reg smallint,
    desp_htd_monto money(16,2),
    desp_htd_mensual money(16,2),
    desp_htd_saldo money(16,2),
    desp_htd_corrida char(1),
    desp_htd_varios char(15),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_hftro_des from "public";

{ TABLE aud_partidas row size = 110 number of columns = 13 index size = 12 }

create table aud_partidas 
  (
    par_codigo smallint,
    par_depen smallint,
    par_fecha date,
    par_descr char(35),
    par_clase smallint,
    desp_par_codigo smallint,
    desp_par_depen smallint,
    desp_par_fecha date,
    desp_par_descr char(35),
    desp_par_clase smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_partidas from "public";

{ TABLE aud_orden row size = 70 number of columns = 19 index size = 12 }

create table aud_orden 
  (
    ord_catalogo integer,
    ord_sit char(2),
    ord_plaza integer,
    ord_fecha_nom date,
    ord_orden char(7),
    ord_punto_orden smallint,
    ord_clase char(1),
    ord_sitrasla char(2),
    desp_ord_catalogo integer,
    desp_ord_sit char(2),
    desp_ord_plaza integer,
    desp_ord_fecha_nom date,
    desp_ord_orden char(7),
    desp_ord_punto_orden smallint,
    desp_ord_clase char(1),
    desp_ord_sitrasla char(2),
    accion char(1),
    usuario char(10),
    hora datetime year to minute
  );

revoke all on aud_orden from "public";

{ TABLE aud_ret_tropa row size = 626 number of columns = 25 index size = 12 }

create table aud_ret_tropa 
  (
    no smallint,
    catalogo integer,
    grado char(50),
    nombre char(100),
    t_servicio smallint,
    comando char(100),
    monto money(16,2),
    sueldo money(16,2),
    bono14 money(16,2),
    aguinaldo money(16,2),
    total money(16,2),
    desp_no smallint,
    desp_catalogo integer,
    desp_grado char(50),
    desp_nombre char(100),
    desp_t_servicio smallint,
    desp_comando char(100),
    desp_monto money(16,2),
    desp_sueldo money(16,2),
    desp_bono14 money(16,2),
    desp_aguinaldo money(16,2),
    desp_total money(16,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ret_tropa from "public";

{ TABLE aud_f_datosfza row size = 184 number of columns = 19 index size = 12 }

create table aud_f_datosfza 
  (
    df_cdep smallint,
    df_dependencia char(45),
    df_clase char(1),
    df_dclase char(20),
    df_cgrado smallint,
    df_totales integer,
    df_llenas integer,
    df_vacantes integer,
    desp_df_cdep smallint,
    desp_df_dependencia char(45),
    desp_df_clase char(1),
    desp_df_dclase char(20),
    desp_df_cgrado smallint,
    desp_df_totales integer,
    desp_df_llenas integer,
    desp_df_vacantes integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_f_datosfza from "public";

{ TABLE aud_f_asgral row size = 168 number of columns = 17 index size = 12 }

create table aud_f_asgral 
  (
    as_catalogo integer,
    as_nombre char(40),
    as_mensual money(16,2),
    as_si_no char(1),
    as_poliza char(10),
    as_solicitud char(9),
    as_moneda char(1),
    desp_as_catalogo integer,
    desp_as_nombre char(40),
    desp_as_mensual money(16,2),
    desp_as_si_no char(1),
    desp_as_poliza char(10),
    desp_as_solicitud char(9),
    desp_as_moneda char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_f_asgral from "public";

{ TABLE aud_f_combust row size = 56 number of columns = 11 index size = 12 }

create table aud_f_combust 
  (
    ic_cat integer,
    ic_comb integer,
    ic_monto money(16,2),
    ic_otro char(1),
    desp_ic_cat integer,
    desp_ic_comb integer,
    desp_ic_monto money(16,2),
    desp_ic_otro char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_f_combust from "public";

{ TABLE f_seguros_gt row size = 39 number of columns = 7 index size = 9 }

create table f_seguros_gt 
  (
    fgt_catalogo integer not null ,
    fgt_codigo smallint not null ,
    fgt_fec_ini date,
    fgt_fecha date,
    fgt_registro char(15),
    fgt_mensual money(16,2),
    fgt_control char(1),
    primary key (fgt_catalogo) 
  );

revoke all on f_seguros_gt from "public";

{ TABLE aud_hftro row size = 492 number of columns = 63 index size = 12 }

create table aud_hftro 
  (
    hft_plaza integer,
    hft_fecha date,
    hft_depen smallint,
    hft_jerarquia char(10),
    hft_catalogo integer,
    hft_grado smallint,
    hft_empleo char(45),
    hft_situacion char(2),
    hft_prog char(3),
    hft_grupo smallint,
    hft_sueldo money(16,2),
    hft_reenganche money(16,2),
    hft_prima_prof money(16,2),
    hft_representacion money(16,2),
    hft_responsabilida money(16,2),
    hft_alimentacion money(16,2),
    hft_aguinaldo money(16,2),
    hft_bono_14 money(16,2),
    hft_bon_emerg money(16,2),
    hft_bono_662000 money(16,2),
    hft_ipm money(16,2),
    hft_centro_med_mil money(16,2),
    hft_total money(16,2),
    hft_liquido money(16,2),
    hft_familiar integer,
    hft_corrida char(1),
    hft_cuenta char(20),
    hft_valor smallint,
    hft_che_situ char(1),
    hft_gastos_rep money(6,2),
    desp_hft_plaza integer,
    desp_hft_fecha date,
    desp_hft_depen smallint,
    desp_hft_jerarquia char(10),
    desp_hft_catalogo integer,
    desp_hft_grado smallint,
    desp_hft_empleo char(45),
    desp_hft_situacion char(2),
    desp_hft_prog char(3),
    desp_hft_grupo smallint,
    desp_hft_sueldo money(16,2),
    desp_hft_reenganche money(16,2),
    desp_hft_prima_prof money(16,2),
    desp_hft_representacion money(16,2),
    desp_hft_responsabilida money(16,2),
    desp_hft_alimentacion money(16,2),
    desp_hft_aguinaldo money(16,2),
    desp_hft_bono_14 money(16,2),
    desp_hft_bon_emerg money(16,2),
    desp_hft_bono_662000 money(16,2),
    desp_hft_ipm money(16,2),
    desp_hft_centro_med_mil money(16,2),
    desp_hft_total money(16,2),
    desp_hft_liquido money(16,2),
    desp_hft_familiar integer,
    desp_hft_corrida char(1),
    desp_hft_cuenta char(20),
    desp_hft_valor smallint,
    desp_hft_che_situ char(1),
    desp_hft_gastos_rep money(6,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_hftro from "public";

{ TABLE aud_pafe_oficiales row size = 84 number of columns = 19 index size = 0 }

create table aud_pafe_oficiales 
  (
    pafe_catalogo integer,
    pafe_numero integer,
    pafe_fecha date,
    pafe_dominadas decimal(6,2),
    pafe_abdominales decimal(6,2),
    pafe_carrera decimal(6,2),
    pafe_alterno decimal(6,2),
    pafe_nota decimal(6,2),
    desp_pafe_catalogo integer,
    desp_pafe_numero integer,
    desp_pafe_fecha date,
    desp_pafe_dominadas decimal(6,2),
    desp_pafe_abdominales decimal(6,2),
    desp_pafe_carrera decimal(6,2),
    desp_pafe_alterno decimal(6,2),
    desp_pafe_nota decimal(6,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_pafe_oficiales from "public";

{ TABLE pafe_oficiales row size = 32 number of columns = 8 index size = 0 }

create table pafe_oficiales 
  (
    pafe_catalogo integer not null ,
    pafe_numero integer not null ,
    pafe_fecha date not null ,
    pafe_dominadas decimal(6,2),
    pafe_abdominales decimal(6,2),
    pafe_carrera decimal(6,2),
    pafe_alterno decimal(6,2),
    pafe_nota decimal(6,2) not null 
  );

revoke all on pafe_oficiales from "public";

{ TABLE dfasig row size = 19 number of columns = 4 index size = 52 }

create table dfasig 
  (
    dfa_catalogo integer not null ,
    dfa_codigo smallint not null ,
    dfa_fecha_ini date not null ,
    dfa_cantidad money(16,2) not null ,
    primary key (dfa_catalogo,dfa_codigo)  constraint u1589_701
  );

revoke all on dfasig from "public";

{ TABLE c_tareas row size = 14 number of columns = 3 index size = 9 }

create table c_tareas 
  (
    tar_codigo integer not null ,
    tar_fecha_fin datetime year to second,
    tar_tarea smallint,
    primary key (tar_codigo) 
  );

revoke all on c_tareas from "public";

{ TABLE aud_c_tareas row size = 48 number of columns = 9 index size = 12 }

create table aud_c_tareas 
  (
    tar_codigo integer,
    tar_fecha_fin datetime year to second,
    tar_tarea smallint,
    desp_tar_codigo integer,
    desp_tar_fecha_fin datetime year to second,
    desp_tar_tarea smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_c_tareas from "public";

{ TABLE recepcion row size = 721 number of columns = 19 index size = 98 }

create table recepcion 
  (
    rec_codigo integer not null ,
    rec_registro char(10) not null ,
    rec_oficio char(40) not null ,
    rec_fec_recibe date not null ,
    rec_usuario char(50) not null ,
    rec_dependencia smallint not null ,
    rec_tecnico integer not null ,
    rec_tel integer,
    rec_equipo integer not null ,
    rec_marca integer not null ,
    rec_modelo char(30),
    rec_problema char(150) not null ,
    rec_diagnostico char(150),
    rec_reparacion char(150),
    rec_proceso char(7) not null ,
    rec_obs char(50),
    rec_entrega integer,
    rec_recibe char(50),
    rec_fec_entrega date,
    primary key (rec_codigo) 
  );

revoke all on recepcion from "public";

{ TABLE marca row size = 54 number of columns = 2 index size = 9 }

create table marca 
  (
    mar_codigo integer not null ,
    mar_marca char(50) not null ,
    primary key (mar_codigo) 
  );

revoke all on marca from "public";

{ TABLE equipos row size = 54 number of columns = 2 index size = 9 }

create table equipos 
  (
    eq_codigo integer not null ,
    eq_tipo char(50) not null ,
    primary key (eq_codigo) 
  );

revoke all on equipos from "public";

{ TABLE aud_equipos row size = 128 number of columns = 7 index size = 0 }

create table aud_equipos 
  (
    eq_codigo integer,
    eq_tipo char(50),
    desp_eq_codigo integer,
    desp_eq_tipo char(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_equipos from "public";

{ TABLE aud_marca row size = 128 number of columns = 7 index size = 0 }

create table aud_marca 
  (
    mar_codigo integer,
    mar_marca char(50),
    desp_mar_codigo integer,
    desp_mar_marca char(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_marca from "public";

{ TABLE aud_recepcion row size = 1462 number of columns = 41 index size = 0 }

create table aud_recepcion 
  (
    rec_codigo integer,
    rec_registro char(10),
    rec_oficio char(40),
    rec_fec_recibe date,
    rec_usuario char(50),
    rec_dependencia smallint,
    rec_tecnico integer,
    rec_tel integer,
    rec_equipo integer,
    rec_marca integer,
    rec_modelo char(30),
    rec_problema char(150),
    rec_diagnostico char(150),
    rec_reparacion char(150),
    rec_proceso char(7),
    rec_obs char(50),
    rec_entrega integer,
    rec_recibe char(50),
    rec_fec_entrega date,
    desp_rec_codigo integer,
    desp_rec_registro char(10),
    desp_rec_oficio char(40),
    desp_rec_fec_recibe date,
    desp_rec_usuario char(50),
    desp_rec_dependencia smallint,
    desp_rec_tecnico integer,
    desp_rec_tel integer,
    desp_rec_equipo integer,
    desp_rec_marca integer,
    desp_rec_modelo char(30),
    desp_rec_problema char(150),
    desp_rec_diagnostico char(150),
    desp_rec_reparacion char(150),
    desp_rec_proceso char(7),
    desp_rec_obs char(50),
    desp_rec_entrega integer,
    desp_rec_recibe char(50),
    desp_rec_fec_entrega date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_recepcion from "public";

{ TABLE eacciones row size = 61 number of columns = 6 index size = 16 }

create table eacciones 
  (
    e_registro integer not null ,
    e_catalogo integer not null ,
    e_grado smallint not null ,
    e_puesto char(45) not null ,
    e_fecha date not null ,
    e_direccion char(2) not null ,
    primary key (e_registro) 
  );

revoke all on eacciones from "public";

{ TABLE eusuarios row size = 6 number of columns = 2 index size = 9 }

create table eusuarios 
  (
    eu_catalogo integer not null ,
    eu_direccion char(2),
    primary key (eu_catalogo) 
  );

revoke all on eusuarios from "public";

{ TABLE aud_det_acciones row size = 560 number of columns = 11 index size = 0 }

create table aud_det_acciones 
  (
    det_a_registro integer,
    det_a_linea integer,
    det_a_accion char(254),
    det_a_tipo char(8),
    desp_det_a_registro integer,
    desp_det_a_linea integer,
    desp_det_a_accion char(254),
    desp_det_a_tipo char(8),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_det_acciones from "public";

{ TABLE aud_eacciones row size = 142 number of columns = 15 index size = 0 }

create table aud_eacciones 
  (
    e_registro integer,
    e_catalogo integer,
    e_grado smallint,
    e_puesto char(45),
    e_fecha date,
    e_direccion char(2),
    desp_e_registro integer,
    desp_e_catalogo integer,
    desp_e_grado smallint,
    desp_e_puesto char(45),
    desp_e_fecha date,
    desp_e_direccion char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eacciones from "public";

{ TABLE aud_eusuarios row size = 32 number of columns = 7 index size = 0 }

create table aud_eusuarios 
  (
    eu_catalogo integer,
    eu_direccion char(2),
    desp_eu_catalogo integer,
    desp_eu_direccion char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eusuarios from "public";

{ TABLE det_acciones row size = 270 number of columns = 4 index size = 13 }

create table det_acciones 
  (
    det_a_registro integer not null ,
    det_a_linea integer not null ,
    det_a_accion char(254),
    det_a_tipo char(8),
    primary key (det_a_registro,det_a_linea) 
  );

revoke all on det_acciones from "public";

{ TABLE paf_actas row size = 24 number of columns = 3 index size = 9 }

create table paf_actas 
  (
    act_codigo integer not null ,
    act_desc char(10),
    act_fecha char(10),
    primary key (act_codigo) 
  );

revoke all on paf_actas from "public";

{ TABLE paf_calendario row size = 15 number of columns = 3 index size = 19 }

create table paf_calendario 
  (
    cal_periodo integer not null ,
    cal_fecha char(10) not null ,
    cal_habil_sino char(1),
    primary key (cal_periodo,cal_fecha) 
  );

revoke all on paf_calendario from "public";

{ TABLE paf_periodos row size = 12 number of columns = 3 index size = 9 }

create table paf_periodos 
  (
    per_periodo integer not null ,
    per_pcerrado integer,
    per_visible integer,
    primary key (per_periodo) 
  );

revoke all on paf_periodos from "public";

{ TABLE paf_grafica row size = 55 number of columns = 2 index size = 0 }

create table paf_grafica 
  (
    gra_serie varchar(50),
    gra_dato integer
  );

revoke all on paf_grafica from "public";

{ TABLE aud_paf_actas row size = 68 number of columns = 9 index size = 0 }

create table aud_paf_actas 
  (
    act_codigo integer,
    act_desc char(10),
    act_fecha char(10),
    desp_act_codigo integer,
    desp_act_desc char(10),
    desp_act_fecha char(10),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_paf_actas from "public";

{ TABLE aud_paf_calendario row size = 50 number of columns = 9 index size = 0 }

create table aud_paf_calendario 
  (
    cal_periodo integer,
    cal_fecha char(10),
    cal_habil_sino char(1),
    desp_cal_periodo integer,
    desp_cal_fecha char(10),
    desp_cal_habil_sino char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_paf_calendario from "public";

{ TABLE aud_paf_detalle row size = 186 number of columns = 21 index size = 0 }

create table aud_paf_detalle 
  (
    det_catalogo integer,
    det_nperiodo integer,
    det_evento1 integer,
    det_evento2 integer,
    det_evento3 integer,
    det_nota integer,
    det_observa varchar(50),
    det_actanumero integer,
    det_cod_grado integer,
    desp_det_catalogo integer,
    desp_det_nperiodo integer,
    desp_det_evento1 integer,
    desp_det_evento2 integer,
    desp_det_evento3 integer,
    desp_det_nota integer,
    desp_det_observa varchar(50),
    desp_det_actanumero integer,
    desp_det_cod_grado integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_paf_detalle from "public";

{ TABLE aud_paf_periodos row size = 44 number of columns = 9 index size = 0 }

create table aud_paf_periodos 
  (
    per_periodo integer,
    per_pcerrado integer,
    per_visible integer,
    desp_per_periodo integer,
    desp_per_pcerrado integer,
    desp_per_visible integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_paf_periodos from "public";

{ TABLE aud_paf_programador row size = 104 number of columns = 15 index size = 0 }

create table aud_paf_programador 
  (
    pro_catalogo integer,
    pro_nperiodo integer,
    pro_fecha_prog char(10),
    pro_recal char(10),
    pro_evaluado char(10),
    pro_cerrado integer,
    desp_pro_catalogo integer,
    desp_pro_nperiodo integer,
    desp_pro_fecha_prog char(10),
    desp_pro_recal char(10),
    desp_pro_evaluado char(10),
    desp_pro_cerrado integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_paf_programador from "public";

{ TABLE paf_programador row size = 42 number of columns = 6 index size = 22 }

create table paf_programador 
  (
    pro_catalogo integer not null ,
    pro_nperiodo integer,
    pro_fecha_prog char(10),
    pro_recal char(10),
    pro_evaluado char(10),
    pro_cerrado integer,
    primary key (pro_catalogo,pro_nperiodo) 
  );

revoke all on paf_programador from "public";

{ TABLE paf_detalle row size = 83 number of columns = 9 index size = 22 }

create table paf_detalle 
  (
    det_catalogo integer not null ,
    det_nperiodo integer not null ,
    det_evento1 integer,
    det_evento2 integer,
    det_evento3 integer,
    det_nota decimal(6,2),
    det_observa varchar(50),
    det_actanumero integer,
    det_cod_grado integer,
    primary key (det_catalogo,det_nperiodo) 
  );

revoke all on paf_detalle from "public";

{ TABLE aud_tiempos row size = 144 number of columns = 29 index size = 12 }

create table aud_tiempos 
  (
    t_catalogo integer,
    t_total integer,
    t_jubilacion integer,
    t_oficial integer,
    t_esp_ofi integer,
    t_form_mil integer,
    t_grado integer,
    t_depen integer,
    t_ult_asc char(10),
    t_prox_asc char(10),
    t_puesto integer,
    t_edad smallint,
    t_alta date,
    desp_t_catalogo integer,
    desp_t_total integer,
    desp_t_jubilacion integer,
    desp_t_oficial integer,
    desp_t_esp_ofi integer,
    desp_t_form_mil integer,
    desp_t_grado integer,
    desp_t_depen integer,
    desp_t_ult_asc char(10),
    desp_t_prox_asc char(10),
    desp_t_puesto integer,
    desp_t_edad smallint,
    desp_t_alta date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tiempos from "public";

{ TABLE freforma row size = 39 number of columns = 7 index size = 9 }

create table freforma 
  (
    fr_catalogo integer not null ,
    fr_codigo smallint not null ,
    fr_fec_ini date,
    fr_fecha date,
    fr_registro char(15),
    fr_mensual money(16,2),
    fr_control char(1),
    primary key (fr_catalogo) 
  );

revoke all on freforma from "public";

{ TABLE aud_freforma row size = 98 number of columns = 17 index size = 12 }

create table aud_freforma 
  (
    antes_fr_catalogo integer,
    antes_fr_codigo smallint,
    antes_fr_fec_ini date,
    antes_fr_fecha date,
    antes_fr_registro char(15),
    antes_fr_mensual money(16,2),
    antes_fr_control char(1),
    despues_fr_catalogo integer,
    despues_fr_codigo smallint,
    despues_fr_fec_ini date,
    despues_fr_fecha date,
    despues_fr_registro char(15),
    despues_fr_mensual money(16,2),
    despues_fr_control char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_freforma from "public";

{ TABLE licencias row size = 16 number of columns = 5 index size = 0 }

create table licencias 
  (
    lic_catalogo integer not null ,
    lic_situacion char(2) not null ,
    lic_inicia date not null ,
    lic_finaliza date not null ,
    lic_obs varchar(1,1)
  );

revoke all on licencias from "public";

{ TABLE aud_licencias row size = 44 number of columns = 13 index size = 0 }

create table aud_licencias 
  (
    lic_catalogo integer,
    lic_situacion char(2),
    lic_inicia date,
    lic_finaliza date,
    lic_obs varchar(1,1),
    desp_lic_catalogo integer,
    desp_lic_situacion char(2),
    desp_lic_inicia date,
    desp_lic_finaliza date,
    desp_lic_obs varchar(1,1),
    usuario integer,
    accion char(1),
    hora datetime year to minute
  );

revoke all on aud_licencias from "public";

{ TABLE msanlla row size = 41 number of columns = 12 index size = 9 }

create table msanlla 
  (
    san_catalogo integer not null ,
    san_tran serial not null ,
    san_grado smallint not null ,
    san_sancion integer not null ,
    san_tiempo smallint,
    san_fec_inicio date not null ,
    san_depen smallint not null ,
    san_ord_gral char(7),
    san_fec_og date,
    san_punto_og char(4),
    san_estado char(2),
    sam_horas smallint,
    primary key (san_tran)  constraint pk_msand
  );

revoke all on msanlla from "public";

{ TABLE sandlla row size = 76 number of columns = 3 index size = 11 }

create table sandlla 
  (
    dsan_tran integer not null ,
    dsan_linea smallint not null ,
    dsan_texto char(70) not null ,
    primary key (dsan_tran,dsan_linea)  constraint pk_sandt
  );

revoke all on sandlla from "public";

{ TABLE psan_orden row size = 23 number of columns = 6 index size = 15 }

create table psan_orden 
  (
    ord_catalogo integer not null ,
    ord_fecha date not null ,
    ord_sancion smallint not null ,
    ord_ord_gnl char(7) not null ,
    ord_punto_og smallint not null ,
    ord_fecha_og date not null ,
    primary key (ord_catalogo,ord_fecha,ord_sancion) 
  );

revoke all on psan_orden from "public";

{ TABLE psan_estadistica row size = 12 number of columns = 5 index size = 20 }

create table psan_estadistica 
  (
    est_catalogo integer not null ,
    est_grado smallint not null ,
    est_horas smallint not null ,
    est_demeritos smallint not null ,
    est_situacion smallint,
    primary key (est_catalogo,est_grado) 
  );

revoke all on psan_estadistica from "public";

{ TABLE psan_registro row size = 92 number of columns = 5 index size = 7 }

create table psan_registro 
  (
    reg_codigo smallint not null ,
    reg_descripcion varchar(50) not null ,
    reg_documento varchar(30) not null ,
    reg_vigente date not null ,
    reg_derogado date,
    primary key (reg_codigo) 
  );

revoke all on psan_registro from "public";

{ TABLE aud_psan_orden row size = 66 number of columns = 15 index size = 0 }

create table aud_psan_orden 
  (
    ord_catalogo integer,
    ord_fecha date,
    ord_sancion smallint,
    ord_ord_gnl char(7),
    ord_punto_og smallint,
    ord_fecha_og date,
    desp_ord_catalogo integer,
    desp_ord_fecha date,
    desp_ord_sancion smallint,
    desp_ord_ord_gnl char(7),
    desp_ord_punto_og smallint,
    desp_ord_fecha_og date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_psan_orden from "public";

{ TABLE aud_psan_estadistica row size = 40 number of columns = 11 index size = 0 }

create table aud_psan_estadistica 
  (
    est_catalogo integer,
    est_grado smallint,
    est_horas smallint,
    est_demeritos smallint,
    desp_est_catalogo integer,
    desp_est_grado smallint,
    desp_est_horas smallint,
    desp_est_demeritos smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_psan_estadistica from "public";

{ TABLE aud_psan_registro row size = 204 number of columns = 13 index size = 0 }

create table aud_psan_registro 
  (
    reg_codigo smallint,
    reg_descripcion varchar(50),
    reg_documento varchar(30),
    reg_vigente date,
    reg_derogado date,
    desp_reg_codigo smallint,
    desp_reg_descripcion varchar(50),
    desp_reg_documento varchar(30),
    desp_reg_vigente date,
    desp_reg_derogado date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_psan_registro from "public";

{ TABLE aud_mper row size = 556 number of columns = 71 index size = 48 }

create table aud_mper 
  (
    catalogo integer,
    serie char(8),
    grado smallint,
    arma smallint,
    nom1 char(15),
    nom2 char(15),
    ape1 char(15),
    ape2 char(15),
    ape3 char(15),
    ced_ord char(4),
    ced_reg integer,
    fec_ext_ced date,
    ext_ced_lugar char(4),
    est_civil char(1),
    direccion char(50),
    zona smallint,
    dir_lugar char(4),
    telefono integer,
    sexo char(1),
    fec_nac date,
    nac_lugar char(4),
    promocion smallint,
    afil_ipm char(1),
    sangre char(3),
    antiguedad smallint,
    bienal smallint,
    plaza integer,
    desc_empleo char(45),
    fec_nomb date,
    ord_gral char(7),
    punto_og smallint,
    situacion char(2),
    prima_prof smallint,
    dpi char(15),
    desp_catalogo integer,
    desp_serie char(8),
    desp_grado smallint,
    desp_arma smallint,
    desp_nom1 char(15),
    desp_nom2 char(15),
    desp_ape1 char(15),
    desp_ape2 char(15),
    desp_ape3 char(15),
    desp_ced_ord char(4),
    desp_ced_reg integer,
    desp_fec_ext_ced date,
    desp_ext_ced_lugar char(4),
    desp_est_civil char(1),
    desp_direccion char(50),
    desp_zona smallint,
    desp_dir_lugar char(4),
    desp_telefono integer,
    desp_sexo char(1),
    desp_fec_nac date,
    desp_nac_lugar char(4),
    desp_promocion smallint,
    desp_afil_ipm char(1),
    desp_sangre char(3),
    desp_antiguedad smallint,
    desp_bienal smallint,
    desp_plaza integer,
    desp_desc_empleo char(45),
    desp_fec_nomb date,
    desp_ord_gral char(7),
    desp_punto_og smallint,
    desp_situacion char(2),
    desp_prima_prof smallint,
    desp_dpi char(15),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mper from "public";

{ TABLE aud_agtsa row size = 263 number of columns = 26 index size = 12 }

create table aud_agtsa 
  (
    antes1 char(12),
    antes2 char(20),
    antes3 char(20),
    antes4 char(12),
    antes5 char(1),
    antes6 char(12),
    antes7 char(12),
    antes8 char(8),
    antes9 char(8),
    antes10 char(8),
    antes11 char(1),
    despues1 char(12),
    despues2 char(20),
    despues3 char(20),
    despues4 char(12),
    despues5 char(1),
    despues6 char(12),
    despues7 char(12),
    despues8 char(8),
    despues9 char(8),
    despues10 char(8),
    despues11 char(1),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_agtsa from "public";

{ TABLE aud_f_seguros_gt row size = 98 number of columns = 17 index size = 12 }

create table aud_f_seguros_gt 
  (
    fgt_catalogo integer,
    fgt_codigo smallint,
    fgt_fec_ini date,
    fgt_fecha date,
    fgt_registro char(15),
    fgt_mensual money(16,2),
    fgt_control char(1),
    desp_fgt_catalogo integer,
    desp_fgt_codigo smallint,
    desp_fgt_fec_ini date,
    desp_fgt_fecha date,
    desp_fgt_registro char(15),
    desp_fgt_mensual money(16,2),
    desp_fgt_control char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_f_seguros_gt from "public";

{ TABLE aud_banejer_car row size = 343 number of columns = 22 index size = 12 }

create table aud_banejer_car 
  (
    antes1 char(13),
    antes2 char(12),
    antes3 char(40),
    antes4 char(20),
    antes5 char(20),
    antes6 char(20),
    antes7 char(20),
    antes8 char(1),
    antes9 char(8),
    despues1 char(13),
    despues2 char(12),
    despues3 char(40),
    despues4 char(20),
    despues5 char(20),
    despues6 char(20),
    despues7 char(20),
    despues8 char(1),
    despues9 char(8),
    hora datetime year to minute,
    accion char(1) not null ,
    usuario char(12) not null ,
    tabname char(15) not null 
  );

revoke all on aud_banejer_car from "public";

{ TABLE aud_economato row size = 58 number of columns = 13 index size = 12 }

create table aud_economato 
  (
    eco_catalogo integer,
    eco_mensual money(16,2),
    eco_num integer,
    eco_control char(1),
    eco_tipo char(1),
    desp_eco_catalogo integer,
    desp_eco_mensual money(16,2),
    desp_eco_num integer,
    desp_eco_control char(1),
    desp_eco_tipo char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_economato from "public";

{ TABLE aud_ipm_fact row size = 94 number of columns = 19 index size = 12 }

create table aud_ipm_fact 
  (
    fact_catalogo integer,
    fact_cod_descuento smallint,
    fact_fecha date,
    fact_numero char(11),
    fact_procedencia char(2),
    fact_iva money(10,2),
    fact_monto money(10,2),
    fact_estado char(2),
    desp_fact_catalogo integer,
    desp_fact_cod_descuento smallint,
    desp_fact_fecha date,
    desp_fact_numero char(11),
    desp_fact_procedencia char(2),
    desp_fact_iva money(10,2),
    desp_fact_monto money(10,2),
    desp_fact_estado char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ipm_fact from "public";

{ TABLE insti row size = 107 number of columns = 5 index size = 7 }

create table insti 
  (
    icodigo integer not null ,
    inombre char(50) not null ,
    idireccion char(50),
    icategoria char(1) not null ,
    idep smallint
  );

revoke all on insti from "public";

{ TABLE aud_insti row size = 234 number of columns = 13 index size = 12 }

create table aud_insti 
  (
    icodigo integer,
    inombre char(50),
    idireccion char(50),
    icategoria char(1),
    idep smallint,
    desp_icodigo integer,
    desp_inombre char(50),
    desp_idireccion char(50),
    desp_icategoria char(1),
    desp_idep smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_insti from "public";

{ TABLE tdfasig row size = 76 number of columns = 11 index size = 7 }

create table tdfasig 
  (
    tdfa_catalogo integer not null ,
    tdfa_codigo smallint not null ,
    tdfa_fecha_ini date not null ,
    tdfa_cantidad money(16,2) not null ,
    tdfa_usuario char(8) not null ,
    tdfa_fec_hora datetime year to minute not null ,
    tdfa_terminal char(5),
    tdfa_accion char(1) not null ,
    tdfa_depen smallint not null ,
    tdfa_doc char(30) not null ,
    tdfa_fec_auto date not null 
  );

revoke all on tdfasig from "public";

{ TABLE tdfdes row size = 185 number of columns = 21 index size = 0 }

create table tdfdes 
  (
    tdfd_catalogo integer not null ,
    tdfd_codigo smallint not null ,
    tdfd_nu_reg smallint not null ,
    tdfd_cod_control smallint not null ,
    tdfd_tipo_desc char(1) not null ,
    tdfd_fec_ini date not null ,
    tdfd_ult_act date,
    tdfd_fec_cer date,
    tdfd_monto money(16,2) not null ,
    tdfd_saldo money(16,2) not null ,
    tdfd_mensual money(16,2) not null ,
    tdfd_tot_cuotas smallint not null ,
    tdfd_num_cuotas smallint not null ,
    tdfd_documen char(6),
    tdfd_codeudor integer,
    tdfd_nom_bene char(50),
    tdfd_juz_con char(50),
    tdfd_usuario char(8) not null ,
    tdfd_fec_hora datetime year to minute not null ,
    tdfd_terminal char(5) not null ,
    tdfd_accion char(1),
    
    check (tdfd_accion IN ('A' ,'I' ,'B' )) constraint c220_80
  );

revoke all on tdfdes from "public";

{ TABLE tmper row size = 278 number of columns = 38 index size = 16 }

create table tmper 
  (
    tper_catalogo integer not null ,
    tper_serie char(8),
    tper_grado smallint not null ,
    tper_arma smallint not null ,
    tper_nom1 char(15) not null ,
    tper_nom2 char(15),
    tper_ape1 char(15) not null ,
    tper_ape2 char(15),
    tper_ape3 char(15),
    tper_ced_ord char(4),
    tper_ced_reg integer,
    tper_fec_ext_ced date,
    tper_ext_ced_lugar char(4) not null ,
    tper_est_civil char(1),
    tper_direccion char(50),
    tper_zona smallint,
    tper_dir_lugar char(4) not null ,
    tper_telefono integer,
    tper_sexo char(1),
    tper_fec_nac date,
    tper_nac_lugar char(4) not null ,
    tper_promocion smallint,
    tper_afil_ipm char(1),
    tper_sangre char(3),
    tper_antiguedad smallint,
    tper_bienal smallint not null ,
    tper_plaza integer not null ,
    tper_desc_empleo char(45) not null ,
    tper_fec_nomb date,
    tper_ord_gral char(7),
    tper_punto_og smallint,
    tper_situacion char(2) not null ,
    tper_prima_prof smallint,
    tper_usuario char(8) not null ,
    tper_cat_usuario integer not null ,
    tper_fec_hora datetime year to minute not null ,
    tper_terminal char(5),
    tper_accion char(1),
    primary key (tper_catalogo,tper_fec_hora)  constraint u235_98
  );

revoke all on tmper from "public";

{ TABLE boleta row size = 348 number of columns = 9 index size = 9 }

create table boleta 
  (
    num_boleta serial not null ,
    sol_boleta char(100) not null ,
    fecha_boleta date not null ,
    depend_boleta char(50) not null ,
    req_boleta char(50) not null ,
    datos_boleta char(50) not null ,
    ordenam_boleta char(30),
    recibio char(30),
    genero char(30),
    primary key (num_boleta)  constraint u1772_1004
  );

revoke all on boleta from "public";

{ TABLE cuentas15 row size = 26 number of columns = 3 index size = 0 }

create table cuentas15 
  (
    cat integer,
    cta char(20),
    banco smallint
  );

revoke all on cuentas15 from "public";

{ TABLE despachos row size = 9 number of columns = 2 index size = 9 }

create table despachos 
  (
    des_catalogo integer not null ,
    des_cantidad money(8,2) not null ,
    primary key (des_catalogo)  constraint u1241_536
  );

revoke all on despachos from "public";

{ TABLE det_isr row size = 46 number of columns = 8 index size = 0 }

create table det_isr 
  (
    ris_catalogo integer not null ,
    ris_grado smallint not null ,
    ris_arma smallint not null ,
    ris_renneta money(16,2) not null ,
    ris_ipmcmm money(16,2) not null ,
    ris_retenc money(16,2) not null ,
    ris_saldo money(16,2) not null ,
    ris_situac char(2)
  );

revoke all on det_isr from "public";

{ TABLE detalle row size = 76 number of columns = 6 index size = 0 }

create table detalle 
  (
    det_con_nit char(10) not null ,
    det_ven_nit char(10) not null ,
    det_articulo char(34) not null ,
    det_fec date not null ,
    det_correl char(9) not null ,
    det_valor money(16,2) not null 
  );

revoke all on detalle from "public";

{ TABLE devoluciones row size = 13 number of columns = 2 index size = 9 }

create table devoluciones 
  (
    dev_catalogo integer not null ,
    dev_cantidad money(16,2) not null ,
    primary key (dev_catalogo)  constraint u248_113
  );

revoke all on devoluciones from "public";

{ TABLE dper row size = 20 number of columns = 4 index size = 13 }

create table dper 
  (
    cod_conf char(4) not null ,
    catalogo integer not null ,
    fecha date not null ,
    hora char(8) not null 
  );

revoke all on dper from "public";

{ TABLE fmdescue row size = 55 number of columns = 4 index size = 7 }

create table fmdescue 
  (
    mde_codigo smallint not null ,
    mde_desc_ct char(8) not null ,
    mde_desc_md char(15) not null ,
    mde_desc_lg char(30) not null 
  );

revoke all on fmdescue from "public";

{ TABLE fthreal400 row size = 6 number of columns = 2 index size = 0 }

create table fthreal400 
  (
    hreal_catal integer not null ,
    hreal_acumul smallint not null 
  );

revoke all on fthreal400 from "public";

{ TABLE hisfin row size = 635 number of columns = 85 index size = 16 }

create table hisfin 
  (
    omeses char(4),
    oprograma char(2),
    ogrupo char(2),
    ounidad char(8),
    odepen char(2),
    obatallon char(2),
    ocompa�ia char(2),
    opeloton char(2),
    oseccion char(2),
    oescuadra char(2),
    otipo char(1),
    ogrado char(2),
    ocatalogo integer,
    onombres char(45),
    oempleo char(30),
    oorden char(7),
    osueldo money(16,2),
    oalimentacion money(16,2),
    omontepio money(16,2),
    oipm1 money(16,2),
    otimbres1 money(16,2),
    ofianza money(16,2),
    oliquido1 money(16,2),
    odias char(2),
    oa�os char(2),
    obienal money(16,2),
    oespecialidad money(16,2),
    orepresenta money(16,2),
    oresponsabili money(16,2),
    ototal2 money(16,2),
    oalimenpc money(16,2),
    oipm2 money(16,2),
    otimbres2 money(16,2),
    oliquido2 money(16,2),
    oemergencia money(16,2),
    bil100 char(3),
    bil50 char(3),
    bil20 char(3),
    bil10 char(3),
    bil5 char(3),
    bil1 char(3),
    bil05 char(3),
    mon25 char(3),
    mon10 char(3),
    mon5 char(3),
    mon1 char(3),
    tota_liqui money(16,2),
    osueldopc money(16,2),
    omontepiopc money(16,2),
    obienalpc money(16,2),
    oipm1pc money(16,2),
    ofianzapc money(16,2),
    oliquido1pc money(16,2),
    oalimentr money(16,2),
    oprimapc money(16,2),
    orepresenpc money(16,2),
    oresponsapc money(16,2),
    ototal2pc money(16,2),
    ocontruccion money(16,2),
    oipm2pc money(16,2),
    oliquido2pc money(16,2),
    obonemerg money(16,2),
    ocomplemento money(16,2),
    oipmcomple money(16,2),
    oliquicomple money(16,2),
    onomcorto char(45),
    oprimaings money(16,2),
    oprimaprofe money(16,2),
    oaguinaldo money(16,2),
    obon50 money(16,2),
    opar char(1),
    ohoras char(1),
    oaumento money(16,2),
    ovaciones money(16,2),
    oplaza char(9),
    omes char(2),
    omonte char(1),
    osaldoase char(8),
    oceom char(5),
    oarma char(2),
    osexo char(1),
    omeomserie char(3),
    obtaop money(16,2),
    omeomnivel char(1),
    ovarios char(15)
  );

revoke all on hisfin from "public";

{ TABLE ipm_cart row size = 167 number of columns = 27 index size = 18 }

create table ipm_cart 
  (
    ipm_credito char(9),
    ipm_catalogo integer,
    ipm_nombre char(40),
    ipm_total_cuotas smallint,
    ipm_cuotas_van smallint,
    ipm_cod_unidad integer,
    ipm_saldo_capital money(10,2),
    ipm_int_mora money(10,2),
    ipm_int_anio_ant money(10,2),
    ipm_int_mes_ant money(10,2),
    ipm_int_mes money(10,2),
    ipm_g_admon_ant money(10,2),
    ipm_seg_viv_ant money(10,2),
    ipm_g_admon money(10,2),
    ipm_seg_vivienda money(10,2),
    ipm_capital money(10,2),
    ipm_iva_mes_ant money(10,2),
    ipm_iva_mes money(10,2),
    ipm_total_desc money(10,2),
    ipm_fecha6 date,
    ipm_fecha8 date,
    ipm_hora8 char(10),
    ipm_usuario char(3),
    ipm_terminal char(3),
    ipm_cod smallint,
    ipm_paga1 char(1),
    ipm_paga2 char(1),
    primary key (ipm_credito,ipm_catalogo)  constraint pk_ipm_cart_credito_cal
  );

revoke all on ipm_cart from "public";

{ TABLE ipm_manto row size = 15 number of columns = 5 index size = 11 }

create table ipm_manto 
  (
    man_catalogo integer not null ,
    man_cod_desc smallint,
    man_fecha date,
    man_cuota money(5,2),
    man_descontada char(1),
    primary key (man_catalogo,man_cod_desc)  constraint u683_285
  );

revoke all on ipm_manto from "public";

{ TABLE seguridad row size = 18 number of columns = 3 index size = 0 }

create table seguridad 
  (
    seg_login char(10),
    seg_catalogo integer,
    seg_plaza integer
  );

revoke all on seguridad from "public";

{ TABLE pickers row size = 42 number of columns = 3 index size = 0 }

create table pickers 
  (
    pic_prefijo smallint not null ,
    pic_codigo char(10) not null ,
    pic_descrip char(30) not null 
  );

revoke all on pickers from "public";

{ TABLE n_asig_plaza row size = 4 number of columns = 1 index size = 0 }

create table n_asig_plaza 
  (
    asc_plaza integer not null 
  );

revoke all on n_asig_plaza from "public";

{ TABLE n_control_plaza row size = 12 number of columns = 3 index size = 17 }

create table n_control_plaza 
  (
    cp_catalogo integer not null ,
    cp_plaza_a integer not null ,
    cp_plaza_n integer not null ,
    primary key (cp_catalogo,cp_plaza_a,cp_plaza_n) 
  );

revoke all on n_control_plaza from "public";

{ TABLE n_morg row size = 115 number of columns = 12 index size = 9 }

create table n_morg 
  (
    org_plaza integer not null ,
    org_ceom char(6) not null ,
    org_dependencia smallint not null ,
    org_jerarquia char(10) not null ,
    org_grado smallint not null ,
    org_plaza_desc char(75) not null ,
    org_situacion char(1),
    org_cod_pago char(1),
    org_hrs_trab smallint not null ,
    org_fec_ult_mod date,
    org_ord_gral char(7),
    org_nominas char(1),
    
    check (org_cod_pago IN ('1' ,'2' )) constraint n_chk_org_cod_pa,
    primary key (org_plaza)  constraint pk_n_n_morg
  );

revoke all on n_morg from "public";

{ TABLE n_mper row size = 253 number of columns = 33 index size = 217 }

create table n_mper 
  (
    per_catalogo integer not null ,
    per_serie char(8),
    per_grado smallint not null ,
    per_arma smallint not null ,
    per_nom1 char(15) not null ,
    per_nom2 char(15),
    per_ape1 char(15) not null ,
    per_ape2 char(15),
    per_ape3 char(15),
    per_ced_ord char(4),
    per_ced_reg integer,
    per_fec_ext_ced date,
    per_ext_ced_lugar char(4) not null ,
    per_est_civil char(1),
    per_direccion char(50),
    per_zona smallint,
    per_dir_lugar char(4) not null ,
    per_telefono integer,
    per_sexo char(1) not null ,
    per_fec_nac date,
    per_nac_lugar char(4) not null ,
    per_promocion smallint,
    per_afil_ipm char(1),
    per_sangre char(3),
    per_antiguedad smallint,
    per_bienal smallint not null ,
    per_plaza integer not null ,
    per_desc_empleo char(45) not null ,
    per_fec_nomb date,
    per_ord_gral char(7),
    per_punto_og smallint,
    per_situacion char(2) not null ,
    per_prima_prof smallint,
    
    check (per_afil_ipm IN ('0' ,'1' ,'2' )) constraint n_ck_per_afil_ipm,
    
    check (per_ced_ord IN ('A-1' ,'B-2' ,'C-3' ,'D-4' ,'E-5' ,'F-6' ,'G-7' ,'H-8' ,'I-9' ,'J-10' ,'K-11' ,'L-12' ,'M-13' ,'N-14' ,'�-15' ,'O-16' ,'P-17' ,'Q-18' ,'&-15' ,'�-15' ,'R-19' ,'S-20' ,'T-21' ,'U-22' ,'P-99' )) 
              constraint n_ck_per_ced_ord,
    
    check (per_est_civil IN ('S' ,'C' ,'U' ,'D' ,'V' )) constraint n_ck_per_est_civil,
    
    check (per_sangre IN ('O+' ,'O-' ,'A+' ,'A-' ,'AB+' ,'AB-' ,'B+' ,'B-' ,'P' )) 
              constraint n_ck_per_sangre,
    primary key (per_catalogo)  constraint n_pk_n_mper
  );

revoke all on n_mper from "public";

{ TABLE n_mtit row size = 357 number of columns = 5 index size = 13 }

create table n_mtit 
  (
    tit_depen smallint,
    tit_llave char(8) not null ,
    tit_desc_ct char(20) not null ,
    tit_desc_md char(27) not null ,
    tit_desc_lg char(300) not null 
  );

revoke all on n_mtit from "public";

{ TABLE n_orgfun row size = 10 number of columns = 2 index size = 15 }

create table n_orgfun 
  (
    fun_plaza integer,
    fun_ceom char(6),
    primary key (fun_plaza,fun_ceom) 
  );

revoke all on n_orgfun from "public";

{ TABLE n_plaza row size = 4 number of columns = 1 index size = 9 }

create table n_plaza 
  (
    plaza integer not null ,
    primary key (plaza) 
  );

revoke all on n_plaza from "public";

{ TABLE aud_conyugues row size = 148 number of columns = 13 index size = 12 }

create table aud_conyugues 
  (
    militar integer,
    e1 char(15),
    e2 char(15),
    e3 char(15),
    e4 char(15),
    desp_militar integer,
    desp_e1 char(15),
    desp_e2 char(15),
    desp_e3 char(15),
    desp_e4 char(15),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_conyugues from "public";

{ TABLE conyugues row size = 64 number of columns = 5 index size = 0 }

create table conyugues 
  (
    militar integer,
    e1 char(15) not null ,
    e2 char(15),
    e3 char(15) not null ,
    e4 char(15)
  );

revoke all on conyugues from "public";

{ TABLE lves_tallas row size = 35 number of columns = 10 index size = 9 }

create table lves_tallas 
  (
    lvt_catalogo integer,
    lvt_pan integer,
    lvt_cam integer,
    lvt_zap integer,
    lvt_birr integer,
    lvt_pix char(5),
    lvt_som char(2),
    lvt_swt char(2),
    lvt_chu char(2),
    lvt_bot integer,
    primary key (lvt_catalogo) 
  );

revoke all on lves_tallas from "public";

{ TABLE aud_lves_tallas row size = 90 number of columns = 23 index size = 0 }

create table aud_lves_tallas 
  (
    lvt_catalogo integer,
    lvt_pan integer,
    lvt_cam integer,
    lvt_zap integer,
    lvt_birr integer,
    lvt_pix char(5),
    lvt_som char(2),
    lvt_swt char(2),
    lvt_chu char(2),
    lvt_bot integer,
    desp_lvt_catalogo integer,
    desp_lvt_pan integer,
    desp_lvt_cam integer,
    desp_lvt_zap integer,
    desp_lvt_birr integer,
    desp_lvt_pix char(5),
    desp_lvt_som char(2),
    desp_lvt_swt char(2),
    desp_lvt_chu char(2),
    desp_lvt_bot integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lves_tallas from "public";

{ TABLE morg_temp row size = 122 number of columns = 13 index size = 0 }

create table morg_temp 
  (
    org_plaza integer not null ,
    org_ceom char(6) not null ,
    org_dependencia smallint not null ,
    org_jerarquia char(12),
    org_grado smallint not null ,
    org_plaza_desc char(75) not null ,
    org_situacion char(1),
    org_cod_pago char(1),
    org_hrs_trab smallint not null ,
    org_fec_ult_mod date,
    org_ord_gral char(7),
    org_nominas char(1),
    org_categoria varchar(4)
  );

revoke all on morg_temp from "public";

{ TABLE org_meom_detalle row size = 13 number of columns = 3 index size = 14 }

create table org_meom_detalle 
  (
    dmeom_codigo varchar(6) not null ,
    dmeom_req integer not null ,
    dmeom_orden smallint not null ,
    primary key (dmeom_codigo,dmeom_orden) 
  );

revoke all on org_meom_detalle from "public";

{ TABLE org_meom_funciones row size = 339 number of columns = 4 index size = 12 }

create table org_meom_funciones 
  (
    func_codigo varchar(4) not null ,
    func_empleo varchar(75),
    func_desc varchar(255),
    func_orden smallint not null ,
    primary key (func_codigo,func_orden) 
  );

revoke all on org_meom_funciones from "public";

{ TABLE org_meom_req row size = 260 number of columns = 2 index size = 9 }

create table org_meom_req 
  (
    req_codigo integer not null ,
    req_desc varchar(255) not null ,
    primary key (req_codigo) 
  );

revoke all on org_meom_req from "public";

{ TABLE org_seguridad row size = 278 number of columns = 5 index size = 9 }

create table org_seguridad 
  (
    seg_id integer not null ,
    seg_fecha datetime year to second not null ,
    seg_usuario char(8) not null ,
    seg_accion varchar(1) not null ,
    seg_nombre varchar(255) not null ,
    primary key (seg_id) 
  );

revoke all on org_seguridad from "public";

{ TABLE aud_org_meom_detalle row size = 46 number of columns = 9 index size = 0 }

create table aud_org_meom_detalle 
  (
    dmeom_codigo varchar(6),
    dmeom_req integer,
    dmeom_orden smallint,
    desp_dmeom_codigo varchar(6),
    desp_dmeom_req integer,
    desp_dmeom_orden smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_org_meom_detalle from "public";

{ TABLE aud_org_meom_funciones row size = 698 number of columns = 11 index size = 0 }

create table aud_org_meom_funciones 
  (
    func_codigo varchar(4),
    func_empleo varchar(75),
    func_desc varchar(255),
    func_orden smallint,
    desp_func_codigo varchar(4),
    desp_func_empleo varchar(75),
    desp_func_desc varchar(255),
    desp_func_orden smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_org_meom_funciones from "public";

{ TABLE aud_org_meom_req row size = 540 number of columns = 7 index size = 0 }

create table aud_org_meom_req 
  (
    req_codigo integer,
    req_desc varchar(255),
    desp_req_codigo integer,
    desp_req_desc varchar(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_org_meom_req from "public";

{ TABLE aud_oede_entrena row size = 614 number of columns = 25 index size = 0 }

create table aud_oede_entrena 
  (
    de_refiere integer,
    de_trans integer,
    de_dep smallint,
    de_unidad integer,
    de_fecha_inicio datetime year to minute,
    de_fecha_fin datetime year to minute,
    de_actividad integer,
    de_requiere smallint,
    de_estado char(5),
    de_obs varchar(255),
    de_elimina smallint,
    desp_de_refiere integer,
    desp_de_trans integer,
    desp_de_dep smallint,
    desp_de_unidad integer,
    desp_de_fecha_inicio datetime year to minute,
    desp_de_fecha_fin datetime year to minute,
    desp_de_actividad integer,
    desp_de_requiere smallint,
    desp_de_estado char(5),
    desp_de_obs varchar(255),
    desp_de_elimina smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_oede_entrena from "public";

{ TABLE aud_oema_entrena row size = 1196 number of columns = 23 index size = 0 }

create table aud_oema_entrena 
  (
    me_trans integer,
    me_documentos char(40),
    me_emana integer,
    me_encumple char(255),
    me_tipo integer,
    me_fecha date,
    me_motivo char(255),
    me_elimina smallint,
    me_ftrans datetime year to fraction(3),
    me_user char(10),
    desp_me_trans integer,
    desp_me_documentos char(40),
    desp_me_emana integer,
    desp_me_encumple char(255),
    desp_me_tipo integer,
    desp_me_fecha date,
    desp_me_motivo char(255),
    desp_me_elimina smallint,
    desp_me_ftrans datetime year to fraction(3),
    desp_me_user char(10),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_oema_entrena from "public";

{ TABLE aud_oetd_entrena row size = 538 number of columns = 7 index size = 0 }

create table aud_oetd_entrena 
  (
    tipd_codigo integer,
    tipd_desc_lg char(255),
    desp_tipd_codigo integer,
    desp_tipd_desc_lg char(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_oetd_entrena from "public";

{ TABLE oeac_entrena row size = 264 number of columns = 3 index size = 9 }

create table oeac_entrena 
  (
    acti_codigo integer not null ,
    acti_desc_lg varchar(255),
    acti_tipo integer not null ,
    primary key (acti_codigo) 
  );

revoke all on oeac_entrena from "public";

{ TABLE aud_oeac_entrena row size = 548 number of columns = 9 index size = 0 }

create table aud_oeac_entrena 
  (
    acti_codigo integer,
    acti_desc_lg varchar(255),
    acti_tipo integer,
    desp_acti_codigo integer,
    desp_acti_desc_lg varchar(255),
    desp_acti_tipo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_oeac_entrena from "public";

{ TABLE aud_oeta_entrena row size = 538 number of columns = 7 index size = 0 }

create table aud_oeta_entrena 
  (
    tipa_codigo integer,
    tipa_desc_lg char(255),
    desp_tipa_codigo integer,
    desp_tipa_desc_lg char(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_oeta_entrena from "public";

{ TABLE oedr_entrena row size = 16 number of columns = 4 index size = 9 }

create table oedr_entrena 
  (
    der_refiere integer,
    der_trans integer not null ,
    der_requerimiento integer,
    der_cantidad integer
  );

revoke all on oedr_entrena from "public";

{ TABLE aud_oedr_entrena row size = 52 number of columns = 11 index size = 0 }

create table aud_oedr_entrena 
  (
    der_refiere integer,
    der_trans integer,
    der_requerimiento integer,
    der_cantidad integer,
    desp_der_refiere integer,
    desp_der_trans integer,
    desp_der_requerimiento integer,
    desp_der_cantidad integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_oedr_entrena from "public";

{ TABLE aud_oerq_entrena row size = 546 number of columns = 9 index size = 0 }

create table aud_oerq_entrena 
  (
    req_codigo integer,
    req_desc_lg char(255),
    req_tipo_req integer,
    desp_req_codigo integer,
    desp_req_desc_lg char(255),
    desp_req_tipo_req integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_oerq_entrena from "public";

{ TABLE aud_oetr_entrena row size = 538 number of columns = 7 index size = 0 }

create table aud_oetr_entrena 
  (
    tipr_codigo integer,
    tipr_desc_lg char(255),
    desp_tipr_codigo integer,
    desp_tipr_desc_lg char(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_oetr_entrena from "public";

{ TABLE morg row size = 122 number of columns = 13 index size = 167 }

create table morg 
  (
    org_plaza integer not null ,
    org_ceom char(6) not null ,
    org_dependencia smallint not null ,
    org_jerarquia char(12),
    org_grado smallint not null ,
    org_plaza_desc char(75) not null ,
    org_situacion char(1),
    org_cod_pago char(1),
    org_hrs_trab smallint not null ,
    org_fec_ult_mod date,
    org_ord_gral char(7),
    org_nominas char(1),
    org_categoria varchar(4),
    
    check (org_cod_pago IN ('1' ,'2' )) constraint chk_org_cod_pago,
    primary key (org_plaza)  constraint pk_morg
  );

revoke all on morg from "public";

{ TABLE oetd_entrena row size = 260 number of columns = 2 index size = 9 }

create table oetd_entrena 
  (
    tipd_codigo integer not null ,
    tipd_desc_lg varchar(255,1),
    primary key (tipd_codigo) 
  );

revoke all on oetd_entrena from "public";

{ TABLE oeta_entrena row size = 260 number of columns = 2 index size = 9 }

create table oeta_entrena 
  (
    tipa_codigo integer not null ,
    tipa_desc_lg varchar(255,1),
    primary key (tipa_codigo) 
  );

revoke all on oeta_entrena from "public";

{ TABLE oerq_entrena row size = 264 number of columns = 3 index size = 18 }

create table oerq_entrena 
  (
    req_codigo integer not null ,
    req_desc_lg varchar(255,1),
    req_tipo_req integer not null ,
    primary key (req_codigo) 
  );

revoke all on oerq_entrena from "public";

{ TABLE oetr_entrena row size = 260 number of columns = 2 index size = 9 }

create table oetr_entrena 
  (
    tipr_codigo integer not null ,
    tipr_desc_lg varchar(255,1),
    primary key (tipr_codigo) 
  );

revoke all on oetr_entrena from "public";

{ TABLE oema_entrena row size = 806 number of columns = 10 index size = 18 }

create table oema_entrena 
  (
    me_trans integer not null ,
    me_documentos varchar(255,1) not null ,
    me_emana integer not null ,
    me_encumple varchar(255,1),
    me_tipo integer,
    me_fecha date not null ,
    me_motivo varchar(255,1),
    me_elimina smallint,
    me_ftrans datetime year to fraction(3) not null ,
    me_user char(10) not null ,
    primary key (me_trans) 
  );

revoke all on oema_entrena from "public";

{ TABLE oede_entrena row size = 297 number of columns = 11 index size = 31 }

create table oede_entrena 
  (
    de_refiere integer not null ,
    de_trans integer not null ,
    de_dep smallint,
    de_unidad integer,
    de_fecha_inicio datetime year to minute not null ,
    de_fecha_fin datetime year to minute not null ,
    de_actividad integer,
    de_requiere smallint,
    de_estado char(5),
    de_obs varchar(255),
    de_elimina smallint,
    primary key (de_refiere,de_trans) 
  );

revoke all on oede_entrena from "public";

{ TABLE pcon_maestra row size = 51 number of columns = 3 index size = 7 }

create table pcon_maestra 
  (
    mcon_codigo smallint not null ,
    mcon_desc_lg varchar(45) not null ,
    mcon_clase varchar(2),
    primary key (mcon_codigo)  constraint pk_pcon_maestra
  );

revoke all on pcon_maestra from "public";

{ TABLE pcon_detalle row size = 56 number of columns = 8 index size = 34 }

create table pcon_detalle 
  (
    dcon_catalogo integer not null ,
    dcon_grado smallint not null ,
    dcon_condecoracion smallint not null ,
    dcon_fecha date not null ,
    dcon_ord_gral varchar(30),
    dcon_punto_og smallint,
    dcon_reg_emdn varchar(7),
    dcon_estado varchar(2) not null ,
    primary key (dcon_catalogo,dcon_condecoracion)  constraint pk_pcon_detalle
  );

revoke all on pcon_detalle from "public";

{ TABLE pcon_personalidad row size = 156 number of columns = 4 index size = 9 }

create table pcon_personalidad 
  (
    per_id integer,
    per_nombres char(75),
    per_ape char(75),
    per_pais smallint,
    primary key (per_id)  constraint pk_cond_personalidad
  );

revoke all on pcon_personalidad from "public";

{ TABLE pcond_especial row size = 111 number of columns = 5 index size = 7 }

create table pcond_especial 
  (
    esp_codigo smallint not null ,
    esp_tipo smallint not null ,
    esp_descripcion varchar(100) not null ,
    esp_id integer not null ,
    esp_depen smallint not null ,
    primary key (esp_codigo)  constraint pk_pcond_especial
  );

revoke all on pcond_especial from "public";

{ TABLE aud_fdes_empresas row size = 128 number of columns = 19 index size = 0 }

create table aud_fdes_empresas 
  (
    emp_catalogo integer,
    emp_codigo smallint,
    emp_fec_ini date,
    emp_fec_fin date,
    emp_registro varchar(20),
    emp_mensual money(16,2),
    emp_saldo money(16,2),
    emp_control char(1),
    desp_emp_catalogo integer,
    desp_emp_codigo smallint,
    desp_emp_fec_ini date,
    desp_emp_fec_fin date,
    desp_emp_registro varchar(20),
    desp_emp_mensual money(16,2),
    desp_emp_saldo money(16,2),
    desp_emp_control char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fdes_empresas from "public";

{ TABLE hftro row size = 238 number of columns = 30 index size = 56 }

create table hftro 
  (
    hft_plaza integer not null ,
    hft_fecha date not null ,
    hft_depen smallint not null ,
    hft_jerarquia char(12),
    hft_catalogo integer not null ,
    hft_grado smallint not null ,
    hft_empleo char(45) not null ,
    hft_situacion char(2),
    hft_prog char(3),
    hft_grupo smallint,
    hft_sueldo money(16,2) not null ,
    hft_reenganche money(16,2) not null ,
    hft_prima_prof money(16,2) not null ,
    hft_representacion money(16,2) not null ,
    hft_responsabilida money(16,2) not null ,
    hft_alimentacion money(16,2) not null ,
    hft_aguinaldo money(16,2) not null ,
    hft_bono_14 money(16,2) not null ,
    hft_bon_emerg money(16,2),
    hft_bono_662000 money(16,2),
    hft_ipm money(16,2) not null ,
    hft_centro_med_mil money(16,2) not null ,
    hft_total money(16,2) not null ,
    hft_liquido money(16,2) not null ,
    hft_familiar integer not null ,
    hft_corrida char(1) not null ,
    hft_cuenta char(20),
    hft_valor smallint,
    hft_che_situ char(1),
    hft_gastos_rep money(6,2),
    primary key (hft_plaza,hft_fecha)  constraint pk_hftro
  );

revoke all on hftro from "public";

{ TABLE fdes_empresas row size = 54 number of columns = 8 index size = 32 }

create table fdes_empresas 
  (
    emp_catalogo integer not null ,
    emp_codigo smallint not null ,
    emp_fec_ini date,
    emp_fec_fin date,
    emp_registro varchar(20),
    emp_mensual money(16,2),
    emp_saldo money(16,2),
    emp_control char(1),
    primary key (emp_catalogo,emp_codigo,emp_registro) 
  );

revoke all on fdes_empresas from "public";

{ TABLE peva_concept row size = 2131 number of columns = 39 index size = 25 }

create table peva_concept 
  (
    con_catalogo integer not null ,
    con_periodo smallint not null ,
    con_grado smallint not null ,
    con_arma smallint not null ,
    con_plaza integer not null ,
    con_desc_empleo varchar(50) not null ,
    con_proy_carrera smallint not null ,
    con_eva_inmediato integer not null ,
    con_eva_intermedio integer not null ,
    con_eva_final integer not null ,
    con_dependencia integer not null ,
    con_funciones varchar(250) not null ,
    con_obj1 varchar(250) not null ,
    con_obj2 varchar(250) not null ,
    con_obj3 varchar(250) not null ,
    con_disciplina smallint not null ,
    con_interper smallint not null ,
    con_admond_rec smallint not null ,
    con_trabajo smallint not null ,
    con_comunicacion smallint not null ,
    con_coordinacion smallint not null ,
    con_plan_org smallint not null ,
    con_control smallint not null ,
    con_iniciativa smallint not null ,
    con_liderazgo smallint not null ,
    con_comp_social smallint not null ,
    con_adaptabilidad smallint not null ,
    con_solv_economica smallint not null ,
    con_cooperacion smallint not null ,
    con_discrecion smallint not null ,
    con_salud smallint not null ,
    con_prevision smallint not null ,
    con_seg_conf smallint not null ,
    con_vocacion smallint not null ,
    con_cap_analitica smallint not null ,
    con_obs varchar(250),
    con_concep1 varchar(250) not null ,
    con_concep2 varchar(250),
    con_concep3 varchar(250) not null ,
    primary key (con_catalogo,con_periodo) 
  );

revoke all on peva_concept from "public";

{ TABLE peva_proyeccion row size = 253 number of columns = 2 index size = 7 }

create table peva_proyeccion 
  (
    pro_codigo smallint not null ,
    pro_descripcion varchar(250) not null ,
    primary key (pro_codigo) 
  );

revoke all on peva_proyeccion from "public";

{ TABLE peva_control_dep row size = 271 number of columns = 7 index size = 14 }

create table peva_control_dep 
  (
    depc_codigo smallint not null ,
    depc_dependencia smallint not null ,
    depc_docrecibidos integer,
    depc_docdevueltos integer,
    depc_fec_recibidos date,
    depc_fec_devueltos date,
    depc_obs varchar(250),
    primary key (depc_codigo) 
  );

revoke all on peva_control_dep from "public";

{ TABLE peva_periodos_ant row size = 62 number of columns = 5 index size = 7 }

create table peva_periodos_ant 
  (
    per_codigo smallint not null ,
    per_fecha_inicio date not null ,
    per_fecha_fin date not null ,
    per_descripcion varchar(50),
    per_activo char(1),
    primary key (per_codigo) 
  );

revoke all on peva_periodos_ant from "public";

{ TABLE aud_peva_concept row size = 4282 number of columns = 81 index size = 0 }

create table aud_peva_concept 
  (
    con_catalogo integer,
    con_periodo smallint,
    con_grado smallint,
    con_arma smallint,
    con_plaza integer,
    con_desc_empleo varchar(50),
    con_proy_carrera smallint,
    con_eva_inmediato integer,
    con_eva_intermedio integer,
    con_eva_final integer,
    con_dependencia integer,
    con_funciones varchar(250),
    con_obj1 varchar(250),
    con_obj2 varchar(250),
    con_obj3 varchar(250),
    con_disciplina smallint,
    con_interper smallint,
    con_admond_rec smallint,
    con_trabajo smallint,
    con_comunicacion smallint,
    con_coordinacion smallint,
    con_plan_org smallint,
    con_control smallint,
    con_iniciativa smallint,
    con_liderazgo smallint,
    con_comp_social smallint,
    con_adaptabilidad smallint,
    con_solv_economica smallint,
    con_cooperacion smallint,
    con_discrecion smallint,
    con_salud smallint,
    con_prevision smallint,
    con_seg_conf smallint,
    con_vocacion smallint,
    con_cap_analitica smallint,
    con_obs varchar(250),
    con_concep1 varchar(250),
    con_concep2 varchar(250),
    con_concep3 varchar(250),
    desp_con_catalogo integer,
    desp_con_periodo smallint,
    desp_con_grado smallint,
    desp_con_arma smallint,
    desp_con_plaza integer,
    desp_con_desc_empleo varchar(50),
    desp_con_proy_carrera smallint,
    desp_con_eva_inmediato integer,
    desp_con_eva_intermedio integer,
    desp_con_eva_final integer,
    desp_con_dependencia integer,
    desp_con_funciones varchar(250),
    desp_con_obj1 varchar(250),
    desp_con_obj2 varchar(250),
    desp_con_obj3 varchar(250),
    desp_con_disciplina smallint,
    desp_con_interper smallint,
    desp_con_admond_rec smallint,
    desp_con_trabajo smallint,
    desp_con_comunicacion smallint,
    desp_con_coordinacion smallint,
    desp_con_plan_org smallint,
    desp_con_control smallint,
    desp_con_iniciativa smallint,
    desp_con_liderazgo smallint,
    desp_con_comp_social smallint,
    desp_con_adaptabilidad smallint,
    desp_con_solv_economica smallint,
    desp_con_cooperacion smallint,
    desp_con_discrecion smallint,
    desp_con_salud smallint,
    desp_con_prevision smallint,
    desp_con_seg_conf smallint,
    desp_con_vocacion smallint,
    desp_con_cap_analitica smallint,
    desp_con_obs varchar(250),
    desp_con_concep1 varchar(250),
    desp_con_concep2 varchar(250),
    desp_con_concep3 varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_concept from "public";

{ TABLE aud_peva_proyeccion row size = 526 number of columns = 7 index size = 0 }

create table aud_peva_proyeccion 
  (
    pro_codigo smallint,
    pro_descripcion varchar(250),
    desp_pro_codigo smallint,
    desp_pro_descripcion varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_proyeccion from "public";

{ TABLE aud_peva_control_dep row size = 562 number of columns = 17 index size = 0 }

create table aud_peva_control_dep 
  (
    depc_codigo smallint,
    depc_dependencia smallint,
    depc_docrecibidos integer,
    depc_docdevueltos integer,
    depc_fec_recibidos date,
    depc_fec_devueltos date,
    depc_obs varchar(250),
    desp_depc_codigo smallint,
    desp_depc_dependencia smallint,
    desp_depc_docrecibidos integer,
    desp_depc_docdevueltos integer,
    desp_depc_fec_recibidos date,
    desp_depc_fec_devueltos date,
    desp_depc_obs varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_control_dep from "public";

{ TABLE aud_peva_periodos_ant row size = 144 number of columns = 13 index size = 0 }

create table aud_peva_periodos_ant 
  (
    per_codigo smallint,
    per_fecha_inicio date,
    per_fecha_fin date,
    per_descripcion varchar(50),
    per_activo char(1),
    desp_per_codigo smallint,
    desp_per_fecha_inicio date,
    desp_per_fecha_fin date,
    desp_per_descripcion varchar(50),
    desp_per_activo char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_periodos_ant from "public";

{ TABLE aud_opaf_usuario row size = 162 number of columns = 9 index size = 0 }

create table aud_opaf_usuario 
  (
    usu_usuario integer,
    usu_clave varchar(20),
    usu_empleo varchar(45),
    desp_usu_usuario integer,
    desp_usu_clave varchar(20),
    desp_usu_empleo varchar(45),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_opaf_usuario from "public";

{ TABLE sop_equipos row size = 55 number of columns = 2 index size = 9 }

create table sop_equipos 
  (
    equ_codigo integer not null ,
    equ_nombre varchar(50) not null ,
    primary key (equ_codigo) 
  );

revoke all on sop_equipos from "public";

{ TABLE sop_marcas row size = 55 number of columns = 2 index size = 9 }

create table sop_marcas 
  (
    mar_codigo integer not null ,
    mar_nombre varchar(50) not null ,
    primary key (mar_codigo) 
  );

revoke all on sop_marcas from "public";

{ TABLE sop_soporte row size = 1324 number of columns = 23 index size = 43 }

create table sop_soporte 
  (
    sop_codigo integer not null ,
    sop_fec_ingreso date not null ,
    sop_oficio varchar(50) not null ,
    sop_registro varchar(20) not null ,
    sop_dependencia smallint not null ,
    sop_usuario varchar(100) not null ,
    sop_telefono integer,
    sop_seccion char(1) not null ,
    sop_equipo integer not null ,
    sop_marca integer not null ,
    sop_modelo varchar(50),
    sop_serie varchar(50),
    sop_componentes varchar(255) not null ,
    sop_motivo varchar(150) not null ,
    sop_inentrega varchar(100) not null ,
    sop_recibetec integer not null ,
    sop_diagnostico varchar(150),
    sop_trabrealizado varchar(150),
    sop_fec_egreso date,
    sop_entrego varchar(100),
    sop_recibio varchar(100),
    sop_mensaje integer,
    sop_visita smallint not null ,
    primary key (sop_codigo) 
  );

revoke all on sop_soporte from "public";

{ TABLE aud_sop_equipos row size = 130 number of columns = 7 index size = 0 }

create table aud_sop_equipos 
  (
    equ_codigo integer,
    equ_nombre varchar(50),
    desp_equ_codigo integer,
    desp_equ_nombre varchar(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sop_equipos from "public";

{ TABLE aud_sop_marcas row size = 130 number of columns = 7 index size = 0 }

create table aud_sop_marcas 
  (
    mar_codigo integer,
    mar_nombre varchar(50),
    desp_mar_codigo integer,
    desp_mar_nombre varchar(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sop_marcas from "public";

{ TABLE aud_sop_soporte row size = 2668 number of columns = 49 index size = 0 }

create table aud_sop_soporte 
  (
    sop_codigo integer,
    sop_fec_ingreso date,
    sop_oficio varchar(50),
    sop_registro varchar(20),
    sop_dependencia smallint,
    sop_usuario varchar(100),
    sop_telefono integer,
    sop_seccion char(1),
    sop_equipo integer,
    sop_marca integer,
    sop_modelo varchar(50),
    sop_serie varchar(50),
    sop_componentes varchar(255),
    sop_motivo varchar(150),
    sop_inentrega varchar(100),
    sop_recibetec integer,
    sop_diagnostico varchar(150),
    sop_trabrealizado varchar(150),
    sop_fec_egreso date,
    sop_entrego varchar(100),
    sop_recibio varchar(100),
    sop_mensaje integer,
    sop_visita smallint,
    desp_sop_codigo integer,
    desp_sop_fec_ingreso date,
    desp_sop_oficio varchar(50),
    desp_sop_registro varchar(20),
    desp_sop_dependencia smallint,
    desp_sop_usuario varchar(100),
    desp_sop_telefono integer,
    desp_sop_seccion char(1),
    desp_sop_equipo integer,
    desp_sop_marca integer,
    desp_sop_modelo varchar(50),
    desp_sop_serie varchar(50),
    desp_sop_componentes varchar(255),
    desp_sop_motivo varchar(150),
    desp_sop_inentrega varchar(100),
    desp_sop_recibetec integer,
    desp_sop_diagnostico varchar(150),
    desp_sop_trabrealizado varchar(150),
    desp_sop_fec_egreso date,
    desp_sop_entrego varchar(100),
    desp_sop_recibio varchar(100),
    desp_sop_mensaje integer,
    desp_sop_visita smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sop_soporte from "public";

{ TABLE opaf_dominadas row size = 13 number of columns = 4 index size = 0 }

create table opaf_dominadas 
  (
    dom_edad integer not null ,
    dom_sexo char(1) not null ,
    dom_repeticiones integer not null ,
    dom_punteo integer not null 
  );

revoke all on opaf_dominadas from "public";

{ TABLE opaf_abdominales row size = 13 number of columns = 4 index size = 0 }

create table opaf_abdominales 
  (
    abd_edad integer not null ,
    abd_sexo char(1) not null ,
    abd_repeticiones integer,
    abd_punteo integer
  );

revoke all on opaf_abdominales from "public";

{ TABLE aud_opaf_dominadas row size = 46 number of columns = 11 index size = 0 }

create table aud_opaf_dominadas 
  (
    dom_edad integer,
    dom_sexo char(1),
    dom_repeticiones integer,
    dom_punteo integer,
    desp_dom_edad integer,
    desp_dom_sexo char(1),
    desp_dom_repeticiones integer,
    desp_dom_punteo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_opaf_dominadas from "public";

{ TABLE aud_opaf_abdominales row size = 46 number of columns = 11 index size = 0 }

create table aud_opaf_abdominales 
  (
    abd_edad integer,
    abd_sexo char(1),
    abd_repeticiones integer,
    abd_punteo integer,
    desp_abd_edad integer,
    desp_abd_sexo char(1),
    desp_abd_repeticiones integer,
    desp_abd_punteo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_opaf_abdominales from "public";

{ TABLE opaf_alterno row size = 14 number of columns = 4 index size = 19 }

create table opaf_alterno 
  (
    alt_edad integer not null ,
    alt_sexo char(1) not null ,
    alt_evento integer,
    alt_norma char(5),
    primary key (alt_edad,alt_sexo,alt_evento,alt_norma) 
  );

revoke all on opaf_alterno from "public";

{ TABLE aud_opaf_alterno row size = 48 number of columns = 11 index size = 0 }

create table aud_opaf_alterno 
  (
    alt_edad integer,
    alt_sexo char(1),
    alt_evento integer,
    alt_norma char(5),
    desp_alt_edad integer,
    desp_alt_sexo char(1),
    desp_alt_evento integer,
    desp_alt_norma char(5),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_opaf_alterno from "public";

{ TABLE opaf_carrera row size = 12 number of columns = 4 index size = 0 }

create table opaf_carrera 
  (
    car_edad integer not null ,
    car_sexo char(1) not null ,
    car_tiempo datetime hour to minute,
    car_punteo integer
  );

revoke all on opaf_carrera from "public";

{ TABLE aud_opaf_carrera row size = 44 number of columns = 11 index size = 0 }

create table aud_opaf_carrera 
  (
    car_edad integer,
    car_sexo char(1),
    car_tiempo datetime hour to minute,
    car_punteo integer,
    desp_car_edad integer,
    desp_car_sexo char(1),
    desp_car_tiempo datetime hour to minute,
    desp_car_punteo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_opaf_carrera from "public";

{ TABLE eva_especialistas row size = 4130 number of columns = 58 index size = 22 }

create table eva_especialistas 
  (
    esp_catalogo integer not null ,
    esp_ano integer not null ,
    esp_tipo integer not null ,
    esp_grado varchar(200) not null ,
    esp_nom1 varchar(200),
    esp_nom2 varchar(200),
    esp_ape1 varchar(200),
    esp_ape2 varchar(200,200),
    esp_empleo varchar(200),
    esp_plaza varchar(200) not null ,
    esp_nom_comando varchar(200) not null ,
    esp_anos1 integer not null ,
    esp_meses1 integer not null ,
    esp_dias1 integer not null ,
    esp_evaluador integer not null ,
    esp_eva_grado varchar(200) not null ,
    esp_eva_nom1 varchar(200) not null ,
    esp_eva_nom2 varchar(200) not null ,
    esp_eva_ape1 varchar(200) not null ,
    esp_eva_ape2 varchar(200) not null ,
    esp_eva_puesto varchar(200),
    esp_anos2 integer not null ,
    esp_meses2 integer not null ,
    esp_dias2 integer not null ,
    esp_biofisico smallint not null ,
    esp_con_fisica smallint not null ,
    esp_eva1 integer not null ,
    esp_eva2 integer not null ,
    esp_eva3 integer not null ,
    esp_eva4 integer not null ,
    esp_demeritos smallint not null ,
    esp_arrestos smallint not null ,
    esp_merito1 smallint,
    esp_merito11 varchar(200),
    esp_merito2 smallint,
    esp_merito22 varchar(200),
    esp_subtotal1 integer not null ,
    esp_concep1 smallint not null ,
    esp_concep2 smallint not null ,
    esp_concep3 smallint not null ,
    esp_concep4 smallint not null ,
    esp_concep5 smallint not null ,
    esp_concep6 smallint not null ,
    esp_concep7 smallint not null ,
    esp_concep8 smallint not null ,
    esp_concep9 smallint not null ,
    esp_concep10 smallint not null ,
    esp_concep11 smallint not null ,
    esp_concep12 smallint not null ,
    esp_concep13 smallint not null ,
    esp_concep14 smallint not null ,
    esp_concep15 smallint not null ,
    esp_subtotal2 integer not null ,
    esp_total integer not null ,
    esp_categoria varchar(200) not null ,
    esp_motivadoras varchar(200),
    esp_correctivas varchar(200),
    esp_obs varchar(200),
    primary key (esp_catalogo,esp_ano) 
  );

revoke all on eva_especialistas from "public";

{ TABLE eva_tipo row size = 205 number of columns = 2 index size = 9 }

create table eva_tipo 
  (
    tip_codigo integer not null ,
    tip_descripcion varchar(200) not null ,
    primary key (tip_codigo) 
  );

revoke all on eva_tipo from "public";

{ TABLE aud_eva_tipo row size = 432 number of columns = 7 index size = 0 }

create table aud_eva_tipo 
  (
    tip_codigo integer,
    tip_descripcion varchar(200),
    desp_tip_codigo integer,
    desp_tip_descripcion varchar(200),
    accion varchar(1) not null ,
    usuario varchar(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_tipo from "public";

{ TABLE aud_eva_especialistas row size = 8282 number of columns = 119 index size = 0 }

create table aud_eva_especialistas 
  (
    esp_catalogo integer,
    esp_ano integer,
    esp_tipo integer,
    esp_grado varchar(200),
    esp_nom1 varchar(200),
    esp_nom2 varchar(200),
    esp_ape1 varchar(200),
    esp_ape2 varchar(200,200),
    esp_empleo varchar(200),
    esp_plaza varchar(200),
    esp_nom_comando varchar(200),
    esp_anos1 integer,
    esp_meses1 integer,
    esp_dias1 integer,
    esp_evaluador integer,
    esp_eva_grado varchar(200),
    esp_eva_nom1 varchar(200),
    esp_eva_nom2 varchar(200),
    esp_eva_ape1 varchar(200),
    esp_eva_ape2 varchar(200),
    esp_eva_puesto varchar(200),
    esp_anos2 integer,
    esp_meses2 integer,
    esp_dias2 integer,
    esp_biofisico smallint,
    esp_con_fisica smallint,
    esp_eva1 integer,
    esp_eva2 integer,
    esp_eva3 integer,
    esp_eva4 integer,
    esp_demeritos smallint,
    esp_arrestos smallint,
    esp_merito1 smallint,
    esp_merito11 varchar(200),
    esp_merito2 smallint,
    esp_merito22 varchar(200),
    esp_subtotal1 integer,
    esp_concep1 smallint,
    esp_concep2 smallint,
    esp_concep3 smallint,
    esp_concep4 smallint,
    esp_concep5 smallint,
    esp_concep6 smallint,
    esp_concep7 smallint,
    esp_concep8 smallint,
    esp_concep9 smallint,
    esp_concep10 smallint,
    esp_concep11 smallint,
    esp_concep12 smallint,
    esp_concep13 smallint,
    esp_concep14 smallint,
    esp_concep15 smallint,
    esp_subtotal2 integer,
    esp_total integer,
    esp_categoria varchar(200),
    esp_motivadoras varchar(200),
    esp_correctivas varchar(200),
    esp_obs varchar(200),
    desp_esp_catalogo integer,
    desp_esp_ano integer,
    desp_esp_tipo integer,
    desp_esp_grado varchar(200),
    desp_esp_nom1 varchar(200),
    desp_esp_nom2 varchar(200),
    desp_esp_ape1 varchar(200),
    desp_esp_ape2 varchar(200,200),
    desp_esp_empleo varchar(200),
    desp_esp_plaza varchar(200),
    desp_esp_nom_comando varchar(200),
    desp_esp_anos1 integer,
    desp_esp_meses1 integer,
    desp_esp_dias1 integer,
    desp_esp_evaluador integer,
    desp_esp_eva_grado varchar(200),
    desp_esp_eva_nom1 varchar(200),
    desp_esp_eva_nom2 varchar(200),
    desp_esp_eva_ape1 varchar(200),
    desp_esp_eva_ape2 varchar(200),
    desp_esp_eva_puesto varchar(200),
    desp_esp_anos2 integer,
    desp_esp_meses2 integer,
    desp_esp_dias2 integer,
    desp_esp_biofisico smallint,
    desp_esp_con_fisica smallint,
    desp_esp_eva1 integer,
    desp_esp_eva2 integer,
    desp_esp_eva3 integer,
    desp_esp_eva4 integer,
    desp_esp_demeritos smallint,
    desp_esp_arrestos smallint,
    desp_esp_merito1 smallint,
    desp_esp_merito11 varchar(200),
    desp_esp_merito2 smallint,
    desp_esp_merito22 varchar(200),
    desp_esp_subtotal1 integer,
    desp_esp_concep1 smallint,
    desp_esp_concep2 smallint,
    desp_esp_concep3 smallint,
    desp_esp_concep4 smallint,
    desp_esp_concep5 smallint,
    desp_esp_concep6 smallint,
    desp_esp_concep7 smallint,
    desp_esp_concep8 smallint,
    desp_esp_concep9 smallint,
    desp_esp_concep10 smallint,
    desp_esp_concep11 smallint,
    desp_esp_concep12 smallint,
    desp_esp_concep13 smallint,
    desp_esp_concep14 smallint,
    desp_esp_concep15 smallint,
    desp_esp_subtotal2 integer,
    desp_esp_total integer,
    desp_esp_categoria varchar(200),
    desp_esp_motivadoras varchar(200),
    desp_esp_correctivas varchar(200),
    desp_esp_obs varchar(200),
    accion varchar(1) not null ,
    usuario varchar(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_especialistas from "public";

{ TABLE permiso_autocom row size = 55 number of columns = 2 index size = 56 }

create table permiso_autocom 
  (
    aut_plaza varchar(50) not null ,
    aut_permiso integer not null ,
    primary key (aut_plaza) 
  );

revoke all on permiso_autocom from "public";

{ TABLE aud_permiso_autocom row size = 132 number of columns = 7 index size = 0 }

create table aud_permiso_autocom 
  (
    aut_plaza varchar(50) not null ,
    aut_permiso integer,
    desp_aut_plaza varchar(50) not null ,
    desp_aut_permiso integer,
    usuario varchar(12) not null ,
    accion varchar(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_permiso_autocom from "public";

{ TABLE evaluaciones row size = 106 number of columns = 15 index size = 20 }

create table evaluaciones 
  (
    e_catalogo integer not null ,
    e_evaluacion smallint not null ,
    e_numero smallint not null ,
    e_edad smallint not null ,
    e_peso smallint not null ,
    e_talla decimal(3,2) not null ,
    e_imc decimal(4,2) not null ,
    e_diagnost smallint not null ,
    e_ref_dd varchar(1) not null ,
    e_fecha datetime year to day 
        default current year to day,
    e_asist_dd varchar(1) not null ,
    e_resultado varchar(40),
    e_grado smallint,
    e_puntuacion decimal(3,2),
    e_usuario varchar(30),
    primary key (e_catalogo,e_evaluacion,e_numero)  constraint pk_evaluaciones
  );

revoke all on evaluaciones from "public";

{ TABLE aud_evaluaciones row size = 232 number of columns = 33 index size = 0 }

create table aud_evaluaciones 
  (
    e_catalogo integer,
    e_evaluacion smallint,
    e_numero smallint,
    e_edad smallint,
    e_peso smallint,
    e_talla decimal(3,2),
    e_imc decimal(4,2),
    e_diagnost smallint,
    e_ref_dd varchar(1),
    e_fecha datetime year to day,
    e_asist_dd varchar(1),
    e_resultado varchar(40),
    e_grado smallint,
    e_puntuacion decimal(3,2),
    e_usuario varchar(30),
    desp_e_catalogo integer,
    desp_e_evaluacion smallint,
    desp_e_numero smallint,
    desp_e_edad smallint,
    desp_e_peso smallint,
    desp_e_talla decimal(3,2),
    desp_e_imc decimal(4,2),
    desp_e_diagnost smallint,
    desp_e_ref_dd varchar(1),
    desp_e_fecha datetime year to day,
    desp_e_asist_dd varchar(1),
    desp_e_resultado varchar(40),
    desp_e_grado smallint,
    desp_e_puntuacion decimal(3,2),
    desp_e_usuario varchar(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_evaluaciones from "public";

{ TABLE jefes_ant row size = 209 number of columns = 3 index size = 9 }

create table jefes_ant 
  (
    jef_plaza integer not null ,
    jef_categoria char(4) not null ,
    jef_puesto varchar(200) not null 
  );

revoke all on jefes_ant from "public";

{ TABLE aud_morg row size = 248 number of columns = 27 index size = 34 }

create table aud_morg 
  (
    plaza integer,
    ceom char(6),
    dependencia smallint,
    jerarquia char(10),
    grado smallint,
    plaza_desc char(75),
    situacion char(1),
    cod_pago char(1),
    hrs_trab smallint,
    fec_ult_mod date,
    org_gradol char(7),
    nominas char(1),
    desp_plaza integer,
    desp_ceom char(6),
    desp_dependencia smallint,
    desp_jerarquia char(10),
    desp_grado smallint,
    desp_plaza_desc char(75),
    desp_situacion char(1),
    desp_cod_pago char(1),
    desp_hrs_trab smallint,
    desp_fec_ult_mod date,
    desp_org_gradol char(7),
    desp_nominas char(1),
    accion char(1) not null ,
    usuario char(10) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_morg from "public";

{ TABLE aud_dfdes_grat row size = 350 number of columns = 39 index size = 12 }

create table aud_dfdes_grat 
  (
    dfdg_catalogo integer,
    dfdg_codigo smallint,
    dfdg_nu_reg smallint,
    dfdg_cod_control smallint,
    dfdg_tipo_desc char(1),
    dfdg_fec_ini date,
    dfdg_ult_act date,
    dfdg_fec_cer date,
    dfdg_monto money(16,2),
    dfdg_saldo money(16,2),
    dfdg_mensual money(16,2),
    dfdg_tot_cuotas smallint,
    dfdg_num_cuotas smallint,
    dfdg_documen char(6),
    dfdg_codeudor integer,
    dfdg_nom_bene char(50),
    dfdg_juz_con char(50),
    dfdg_si_no char(1),
    desp_dfdg_catalogo integer,
    desp_dfdg_codigo smallint,
    desp_dfdg_nu_reg smallint,
    desp_dfdg_cod_control smallint,
    desp_dfdg_tipo_desc char(1),
    desp_dfdg_fec_ini date,
    desp_dfdg_ult_act date,
    desp_dfdg_fec_cer date,
    desp_dfdg_monto money(16,2),
    desp_dfdg_saldo money(16,2),
    desp_dfdg_mensual money(16,2),
    desp_dfdg_tot_cuotas smallint,
    desp_dfdg_num_cuotas smallint,
    desp_dfdg_documen char(6),
    desp_dfdg_codeudor integer,
    desp_dfdg_nom_bene char(50),
    desp_dfdg_juz_con char(50),
    desp_dfdg_si_no char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dfdes_grat from "public";

{ TABLE evaluacion_ant row size = 34 number of columns = 7 index size = 20 }

create table evaluacion_ant 
  (
    eva_catalogo integer,
    eva_fecha date,
    eva_grado smallint,
    eva_plaza integer,
    eva_te char(8) not null ,
    eva_tp char(8) not null ,
    eva_cat_ev integer,
    primary key (eva_catalogo,eva_fecha) 
  );

revoke all on evaluacion_ant from "public";

{ TABLE ef_fuerza row size = 299 number of columns = 21 index size = 22 }

create table ef_fuerza 
  (
    ef_fecha date not null ,
    ef_depen integer not null ,
    ef_destino smallint not null ,
    ef_gd smallint,
    ef_gb smallint,
    ef_ofsup_cr smallint,
    ef_ofsup_rsvas smallint,
    ef_ofsup_as smallint,
    ef_ofsub_cr smallint,
    ef_ofsub_rsvas smallint,
    ef_ofsub_as smallint,
    ef_esptas smallint,
    ef_sgtosmay smallint,
    ef_tropa smallint,
    ef_tropa_a smallint,
    ef_tropa_n smallint,
    ef_cadetes smallint,
    ef_total_destinos integer,
    ef_toe smallint,
    ef_usuario integer not null ,
    ef_observaciones varchar(250),
    primary key (ef_fecha,ef_depen,ef_destino) 
  );

revoke all on ef_fuerza from "public";

{ TABLE ef_destinos_ant row size = 79 number of columns = 3 index size = 7 }

create table ef_destinos_ant 
  (
    efd_codigo smallint not null ,
    efd_desc_lg varchar(75) not null ,
    efd_activo char(1) 
        default 'S' not null ,
    primary key (efd_codigo)  constraint pk_efd_codigo
  );

revoke all on ef_destinos_ant from "public";

{ TABLE ef_usuarios row size = 7 number of columns = 3 index size = 16 }

create table ef_usuarios 
  (
    efu_usuario integer not null ,
    efu_depen smallint not null ,
    efu_nivel char(1) 
        default '1',
    primary key (efu_usuario)  constraint efu_usuario
  );

revoke all on ef_usuarios from "public";

{ TABLE diagnostico row size = 43 number of columns = 2 index size = 7 }

create table diagnostico 
  (
    d_codigo smallint not null ,
    d_descrip varchar(40) not null ,
    primary key (d_codigo) 
  );

revoke all on diagnostico from "public";

{ TABLE evaluacion row size = 45 number of columns = 3 index size = 7 }

create table evaluacion 
  (
    ev_evaluacion smallint not null ,
    ev_ano smallint not null ,
    ev_observaciones varchar(40),
    primary key (ev_evaluacion) 
  );

revoke all on evaluacion from "public";

{ TABLE aud_ef_fuerza row size = 618 number of columns = 45 index size = 0 }

create table aud_ef_fuerza 
  (
    ef_fecha date,
    ef_depen integer,
    ef_destino smallint,
    ef_gd smallint,
    ef_gb smallint,
    ef_ofsup_cr smallint,
    ef_ofsup_rsvas smallint,
    ef_ofsup_as smallint,
    ef_ofsub_cr smallint,
    ef_ofsub_rsvas smallint,
    ef_ofsub_as smallint,
    ef_esptas smallint,
    ef_sgtosmay smallint,
    ef_tropa smallint,
    ef_tropa_a smallint,
    ef_tropa_n smallint,
    ef_cadetes smallint,
    ef_total_destinos integer,
    ef_toe smallint,
    ef_usuario integer,
    ef_observaciones varchar(250),
    desp_ef_fecha date,
    desp_ef_depen integer,
    desp_ef_destino smallint,
    desp_ef_gd smallint,
    desp_ef_gb smallint,
    desp_ef_ofsup_cr smallint,
    desp_ef_ofsup_rsvas smallint,
    desp_ef_ofsup_as smallint,
    desp_ef_ofsub_cr smallint,
    desp_ef_ofsub_rsvas smallint,
    desp_ef_ofsub_as smallint,
    desp_ef_esptas smallint,
    desp_ef_sgtosmay smallint,
    desp_ef_tropa smallint,
    desp_ef_tropa_a smallint,
    desp_ef_tropa_n smallint,
    desp_ef_cadetes smallint,
    desp_ef_total_destinos integer,
    desp_ef_toe smallint,
    desp_ef_usuario integer,
    desp_ef_observaciones varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ef_fuerza from "public";

{ TABLE aud_ef_destinos_ant row size = 178 number of columns = 9 index size = 0 }

create table aud_ef_destinos_ant 
  (
    efd_codigo smallint,
    efd_desc_lg varchar(75),
    efd_activo char(1),
    desp_efd_codigo smallint,
    desp_efd_desc_lg varchar(75),
    desp_efd_activo char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ef_destinos_ant from "public";

{ TABLE aud_ef_usuarios row size = 34 number of columns = 9 index size = 0 }

create table aud_ef_usuarios 
  (
    efu_usuario integer,
    efu_depen smallint,
    efu_nivel char(1),
    desp_efu_usuario integer,
    desp_efu_depen smallint,
    desp_efu_nivel char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ef_usuarios from "public";

{ TABLE ei_asignaciones row size = 8 number of columns = 2 index size = 22 }

create table ei_asignaciones 
  (
    asi_curso integer not null ,
    asi_materia integer not null ,
    primary key (asi_curso,asi_materia) 
  );

revoke all on ei_asignaciones from "public";

{ TABLE aud_ei_asignaciones row size = 36 number of columns = 7 index size = 0 }

create table aud_ei_asignaciones 
  (
    asi_curso integer,
    asi_materia integer,
    desp_asi_curso integer,
    desp_asi_materia integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ei_asignaciones from "public";

{ TABLE ei_cursos_asig row size = 212 number of columns = 5 index size = 13 }

create table ei_cursos_asig 
  (
    curasig_codigo integer not null ,
    curasig_catalogo integer not null ,
    curasig_fecha date not null ,
    curasig_obs char(100),
    curasig_grado char(100),
    primary key (curasig_codigo,curasig_catalogo) 
  );

revoke all on ei_cursos_asig from "public";

{ TABLE aud_ei_cursos_asig row size = 440 number of columns = 13 index size = 0 }

create table aud_ei_cursos_asig 
  (
    curasig_codigo integer,
    curasig_catalogo integer,
    curasig_fecha date,
    curasig_obs char(100),
    curasig_grado char(100),
    desp_curasig_codigo integer,
    desp_curasig_catalogo integer,
    desp_curasig_fecha date,
    desp_curasig_obs char(100),
    desp_curasig_grado char(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime hour to minute not null 
  );

revoke all on aud_ei_cursos_asig from "public";

{ TABLE ei_cursos_reali row size = 241 number of columns = 7 index size = 22 }

create table ei_cursos_reali 
  (
    curr_tipo integer not null ,
    curr_referencia integer not null ,
    curr_desc_lg char(75) not null ,
    curr_desc_ct char(50) not null ,
    curr_inicia date not null ,
    curr_final date not null ,
    curr_obs char(100),
    primary key (curr_tipo,curr_referencia) 
  );

revoke all on ei_cursos_reali from "public";

{ TABLE aud_ei_cursos_reali row size = 502 number of columns = 17 index size = 0 }

create table aud_ei_cursos_reali 
  (
    curr_tipo integer,
    curr_referencia integer,
    curr_desc_lg char(75),
    curr_desc_ct char(50),
    curr_inicia date,
    curr_final date,
    curr_obs char(100),
    desp_curr_tipo integer,
    desp_curr_referencia integer,
    desp_curr_desc_lg char(75),
    desp_curr_desc_ct char(50),
    desp_curr_inicia date,
    desp_curr_final date,
    desp_curr_obs char(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ei_cursos_reali from "public";

{ TABLE ei_mper_extranjero row size = 357 number of columns = 17 index size = 9 }

create table ei_mper_extranjero 
  (
    ext_codigo integer not null ,
    ext_grado char(50) not null ,
    ext_arma char(50) not null ,
    ext_nom1 char(15) not null ,
    ext_nom2 char(15),
    ext_ape1 char(15) not null ,
    ext_ape2 char(15),
    ext_nacionalidad char(30) not null ,
    ext_tipo_doc_id char(10) not null ,
    ext_num_doc_id char(20) not null ,
    ext_fec_nac date not null ,
    ext_sexo char(1) not null ,
    ext_tipo_sangre char(3) not null ,
    ext_estado_civil char(1) not null ,
    ext_direccion char(100),
    ext_telefono1 char(12),
    ext_telefono2 char(12),
    
    check (ext_sexo IN ('M' ,'F' )),
    
    check (ext_estado_civil IN ('C' ,'S' ,'V' ,'U' ,'D' )),
    primary key (ext_codigo) 
  );

revoke all on ei_mper_extranjero from "public";

{ TABLE aud_ei_mper_extranjero row size = 734 number of columns = 37 index size = 0 }

create table aud_ei_mper_extranjero 
  (
    ext_codigo integer,
    ext_grado char(50),
    ext_arma char(50),
    ext_nom1 char(15),
    ext_nom2 char(15),
    ext_ape1 char(15),
    ext_ape2 char(15),
    ext_nacionalidad char(30),
    ext_tipo_doc_id char(10),
    ext_num_doc_id char(20),
    ext_fec_nac date,
    ext_sexo char(1),
    ext_tipo_sangre char(3),
    ext_estado_civil char(1),
    ext_direccion char(100),
    ext_telefono1 char(12),
    ext_telefono2 char(12),
    desp_ext_codigo integer,
    desp_ext_grado char(50),
    desp_ext_arma char(50),
    desp_ext_nom1 char(15),
    desp_ext_nom2 char(15),
    desp_ext_ape1 char(15),
    desp_ext_ape2 char(15),
    desp_ext_nacionalidad char(30),
    desp_ext_tipo_doc_id char(10),
    desp_ext_num_doc_id char(20),
    desp_ext_fec_nac date,
    desp_ext_sexo char(1),
    desp_ext_tipo_sangre char(3),
    desp_ext_estado_civil char(1),
    desp_ext_direccion char(100),
    desp_ext_telefono1 char(12),
    desp_ext_telefono2 char(12),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ei_mper_extranjero from "public";

{ TABLE ei_materias row size = 154 number of columns = 3 index size = 9 }

create table ei_materias 
  (
    mat_codigo integer not null ,
    mat_descripcion char(50) not null ,
    mat_observaciones char(100),
    primary key (mat_codigo) 
  );

revoke all on ei_materias from "public";

{ TABLE aud_ei_materias row size = 328 number of columns = 9 index size = 0 }

create table aud_ei_materias 
  (
    mat_codigo integer,
    mat_descripcion char(50),
    mat_observaciones char(100),
    desp_mat_codigo integer,
    desp_mat_descripcion char(50),
    desp_mat_observaciones char(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ei_materias from "public";

{ TABLE ei_notas row size = 125 number of columns = 8 index size = 26 }

create table ei_notas 
  (
    not_catalogo integer not null ,
    not_curso integer not null ,
    not_materia integer not null ,
    not_zona decimal(4,2),
    not_final decimal(5,2),
    not_rec_uno decimal(4,2),
    not_rec_dos decimal(4,2),
    not_obs char(100),
    primary key (not_catalogo,not_curso,not_materia) 
  );

revoke all on ei_notas from "public";

{ TABLE aud_ei_notas row size = 270 number of columns = 19 index size = 0 }

create table aud_ei_notas 
  (
    not_catalogo integer,
    not_curso integer,
    not_materia integer,
    not_zona decimal(4,2),
    not_final decimal(5,2),
    not_rec_uno decimal(4,2),
    not_rec_dos decimal(4,2),
    not_obs char(100),
    desp_not_catalogo integer,
    desp_not_curso integer,
    desp_not_materia integer,
    desp_not_zona decimal(4,2),
    desp_not_final decimal(5,2),
    desp_not_rec_uno decimal(4,2),
    desp_not_rec_dos decimal(4,2),
    desp_not_obs char(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ei_notas from "public";

{ TABLE ei_tipo_curso row size = 155 number of columns = 3 index size = 9 }

create table ei_tipo_curso 
  (
    tcur_codigo integer not null ,
    tcur_descripcion char(50) not null ,
    tcur_observaciones varchar(100),
    primary key (tcur_codigo) 
  );

revoke all on ei_tipo_curso from "public";

{ TABLE aud_ei_tipo_curso row size = 330 number of columns = 9 index size = 0 }

create table aud_ei_tipo_curso 
  (
    tcur_codigo integer,
    tcur_descripcion char(50),
    tcur_observaciones varchar(100),
    desp_tcur_codigo integer,
    desp_tcur_descripcion char(50),
    desp_tcur_observaciones varchar(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ei_tipo_curso from "public";

{ TABLE ef_detalle row size = 298 number of columns = 12 index size = 24 }

create table ef_detalle 
  (
    ef_fecha date not null ,
    ef_depen integer not null ,
    ef_destino smallint not null ,
    ef_numero smallint not null ,
    ef_ofs smallint,
    ef_esp smallint,
    ef_tropa smallint,
    ef_cdtes smallint,
    ef_obs varchar(250),
    ef_grado smallint,
    ef_comando integer,
    ef_tiempo varchar(20),
    primary key (ef_fecha,ef_depen,ef_destino,ef_numero) 
  );

revoke all on ef_detalle from "public";

{ TABLE aud_ef_detalle row size = 616 number of columns = 27 index size = 0 }

create table aud_ef_detalle 
  (
    ef_fecha date,
    ef_depen integer,
    ef_destino smallint,
    ef_numero smallint,
    ef_ofs smallint,
    ef_esp smallint,
    ef_tropa smallint,
    ef_cdtes smallint,
    ef_obs varchar(250),
    ef_grado smallint,
    ef_comando integer,
    ef_tiempo varchar(20),
    desp_ef_fecha date,
    desp_ef_depen integer,
    desp_ef_destino smallint,
    desp_ef_numero smallint,
    desp_ef_ofs smallint,
    desp_ef_esp smallint,
    desp_ef_tropa smallint,
    desp_ef_cdtes smallint,
    desp_ef_obs varchar(250,1),
    desp_ef_grado smallint,
    desp_ef_comando integer,
    desp_ef_tiempo varchar(20,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ef_detalle from "public";

{ TABLE aud_radius1 row size = 756 number of columns = 29 index size = 0 }

create table aud_radius1 
  (
    codigo integer,
    comando char(150),
    usuario_nt char(50),
    e_mail char(50),
    pwd1_nt char(8),
    pwd2_nt char(8),
    pwd3_nt char(8),
    pwd4_nt char(8),
    cta_radius char(50),
    pwd1_rad char(8),
    pwd2_rad char(8),
    pwd3_rad char(8),
    pwd4_rad char(8),
    desp_codigo integer,
    desp_comando char(150),
    desp_usuario_nt char(50),
    desp_e_mail char(50),
    desp_pwd1_nt char(8),
    desp_pwd2_nt char(8),
    desp_pwd3_nt char(8),
    desp_pwd4_nt char(8),
    desp_cta_radius char(50),
    desp_pwd1_rad char(8),
    desp_pwd2_rad char(8),
    desp_pwd3_rad char(8),
    desp_pwd4_rad char(8),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute
  );

revoke all on aud_radius1 from "public";

{ TABLE pass row size = 20 number of columns = 4 index size = 13 }

create table pass 
  (
    pas_correla serial not null ,
    pas_password char(8) not null ,
    pas_status integer not null ,
    pas_fecha date not null ,
    primary key (pas_password) 
  );

revoke all on pass from "public";

{ TABLE ef_destinos row size = 81 number of columns = 4 index size = 7 }

create table ef_destinos 
  (
    efd_codigo smallint not null ,
    efd_correla smallint,
    efd_desc_lg varchar(75) not null ,
    efd_activo char(1) 
        default 'S' not null ,
    primary key (efd_codigo)  constraint pk_efd_codigo1
  );

revoke all on ef_destinos from "public";

{ TABLE aud_ef_destinos row size = 182 number of columns = 11 index size = 0 }

create table aud_ef_destinos 
  (
    efd_codigo smallint,
    efd_correla smallint,
    efd_desc_lg varchar(75),
    efd_activo char(1),
    desp_efd_codigo smallint,
    desp_efd_correla smallint,
    desp_efd_desc_lg varchar(75),
    desp_efd_activo char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ef_destinos from "public";

{ TABLE aud_opaf_notas row size = 886 number of columns = 51 index size = 0 }

create table aud_opaf_notas 
  (
    not_catalogo integer,
    not_fecha date,
    not_periodo varchar(6),
    not_dominadas smallint,
    not_punteo_dom smallint,
    not_abdominales smallint,
    not_punteo_abd smallint,
    not_carrera datetime minute to second,
    not_punteo_car smallint,
    not_promedio decimal(5,2),
    not_obs varchar(255),
    not_tipo varchar(1),
    not_revisado smallint,
    not_dependencia smallint,
    not_peso smallint,
    not_estatura decimal(3,2),
    not_imc decimal(4,2),
    not_perfil varchar(15),
    not_fec_certi date,
    not_grado smallint,
    not_usuario integer,
    not_acta varchar(100),
    not_extemporaneo smallint,
    not_evento smallint,
    desp_not_catalogo integer,
    desp_not_fecha date,
    desp_not_periodo varchar(6),
    desp_not_dominadas smallint,
    desp_not_punteo_dom smallint,
    desp_not_abdominales smallint,
    desp_not_punteo_abd smallint,
    desp_not_carrera datetime minute to second,
    desp_not_punteo_car smallint,
    desp_not_promedio decimal(5,2),
    desp_not_obs varchar(255),
    desp_not_tipo varchar(1),
    desp_not_revisado smallint,
    desp_not_dependencia smallint,
    desp_not_peso smallint,
    desp_not_estatura decimal(3,2),
    desp_not_imc decimal(4,2),
    desp_not_perfil varchar(15),
    desp_not_fec_certi date,
    desp_not_grado smallint,
    desp_not_usuario integer,
    desp_not_acta varchar(100),
    desp_not_extemporaneo smallint,
    desp_not_evento smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_opaf_notas from "public";

{ TABLE opaf_notas row size = 433 number of columns = 24 index size = 29 }

create table opaf_notas 
  (
    not_catalogo integer not null ,
    not_fecha date not null ,
    not_periodo varchar(6),
    not_dominadas smallint not null ,
    not_punteo_dom smallint not null ,
    not_abdominales smallint not null ,
    not_punteo_abd smallint not null ,
    not_carrera datetime minute to second not null ,
    not_punteo_car smallint not null ,
    not_promedio decimal(5,2) not null ,
    not_obs varchar(255),
    not_tipo varchar(1) not null ,
    not_revisado smallint not null ,
    not_dependencia smallint not null ,
    not_peso smallint not null ,
    not_estatura decimal(3,2) not null ,
    not_imc decimal(4,2) not null ,
    not_perfil varchar(15) not null ,
    not_fec_certi date,
    not_grado smallint not null ,
    not_usuario integer not null ,
    not_acta varchar(100),
    not_extemporaneo smallint not null ,
    not_evento smallint,
    primary key (not_catalogo,not_fecha) 
  );

revoke all on opaf_notas from "public";

{ TABLE opaf_usuario row size = 33 number of columns = 5 index size = 9 }

create table opaf_usuario 
  (
    usu_catalogo integer not null ,
    usu_clave varchar(20) not null ,
    usu_plaza integer not null ,
    usu_nivel smallint not null ,
    usu_status smallint not null ,
    primary key (usu_catalogo) 
  );

revoke all on opaf_usuario from "public";

{ TABLE aud_larm_det row size = 126 number of columns = 17 index size = 0 }

create table aud_larm_det 
  (
    det_cat integer,
    det_plaza integer,
    det_fec_ini date,
    det_fec_fin date,
    det_cat_per integer,
    det_sit smallint,
    det_usuario varchar(30),
    desp_det_cat integer,
    desp_det_plaza integer,
    desp_det_fec_ini date,
    desp_det_fec_fin date,
    desp_det_cat_per integer,
    desp_det_sit smallint,
    desp_det_usuario varchar(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_larm_det from "public";

{ TABLE aud_larm_lot row size = 360 number of columns = 27 index size = 0 }

create table aud_larm_lot 
  (
    lot_tipo smallint,
    lot_cod smallint,
    lot_marca char(30),
    lot_modelo char(30),
    lot_calibre char(10),
    lot_lote char(10),
    lot_hecho smallint,
    lot_fec_compra date,
    tip_antiguo char(10),
    tip_desc_ct char(30),
    lot_precio money(16,2),
    lot_usuario varchar(30),
    desp_lot_tipo smallint,
    desp_lot_cod smallint,
    desp_lot_marca char(30),
    desp_lot_modelo char(30),
    desp_lot_calibre char(10),
    desp_lot_lote char(10),
    desp_lot_hecho smallint,
    desp_lot_fec_compra date,
    desp_tip_antiguo char(10),
    desp_tip_desc_ct char(30),
    desp_lot_precio money(16,2),
    desp_lot_usuario varchar(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_larm_lot from "public";

{ TABLE aud_larm_sit row size = 222 number of columns = 15 index size = 0 }

create table aud_larm_sit 
  (
    sit_cod smallint,
    sit_desc_lg char(35),
    sit_desc_md char(20),
    sit_desc_ct char(12),
    sit_cod_ant char(1),
    sit_usuario varchar(30),
    desp_sit_cod smallint,
    desp_sit_desc_lg char(35),
    desp_sit_desc_md char(20),
    desp_sit_desc_ct char(12),
    desp_sit_cod_ant char(1),
    desp_sit_usuario varchar(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_larm_sit from "public";

{ TABLE aud_larm_tip row size = 196 number of columns = 15 index size = 0 }

create table aud_larm_tip 
  (
    tip_cod smallint,
    tip_desc_lg char(30),
    tip_desc_md char(15),
    tip_desc_ct char(9),
    tip_asigna char(1),
    tip_usuario varchar(30),
    desp_tip_cod smallint,
    desp_tip_desc_lg char(30),
    desp_tip_desc_md char(15),
    desp_tip_desc_ct char(9),
    desp_tip_asigna char(1),
    desp_tip_usuario varchar(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_larm_tip from "public";

{ TABLE aud_lmarmas row size = 158 number of columns = 19 index size = 0 }

create table aud_lmarmas 
  (
    arm_cat integer,
    arm_tipo smallint,
    arm_lote smallint,
    arm_numero char(20),
    arm_plaza integer,
    arm_sit smallint,
    arm_fec_situ date,
    arm_usuario varchar(30),
    desp_arm_cat integer,
    desp_arm_tipo smallint,
    desp_arm_lote smallint,
    desp_arm_numero char(20),
    desp_arm_plaza integer,
    desp_arm_sit smallint,
    desp_arm_fec_situ date,
    desp_arm_usuario varchar(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmarmas from "public";

{ TABLE aud_lhrep row size = 246 number of columns = 17 index size = 0 }

create table aud_lhrep 
  (
    hre_num integer,
    hre_sis char(1),
    hre_cat integer,
    hre_mot char(60),
    hre_fec date,
    hre_cst money(16,2),
    hre_usuario varchar(30),
    desp_hre_num integer,
    desp_hre_sis char(1),
    desp_hre_cat integer,
    desp_hre_mot char(60),
    desp_hre_fec date,
    desp_hre_cst money(16,2),
    desp_hre_usuario varchar(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lhrep from "public";

{ TABLE larm_sit row size = 101 number of columns = 6 index size = 7 }

create table larm_sit 
  (
    sit_cod smallint not null ,
    sit_desc_lg char(35) not null ,
    sit_desc_md char(20) not null ,
    sit_desc_ct char(12) not null ,
    sit_cod_ant char(1),
    sit_usuario varchar(30) 
        default user,
    primary key (sit_cod)  constraint pk_larm_sit
  );

revoke all on larm_sit from "public";

{ TABLE larm_tip row size = 88 number of columns = 6 index size = 7 }

create table larm_tip 
  (
    tip_cod smallint not null ,
    tip_desc_lg char(30) not null ,
    tip_desc_md char(15) not null ,
    tip_desc_ct char(9) not null ,
    tip_asigna char(1) not null ,
    tip_usuario varchar(30) 
        default user,
    primary key (tip_cod)  constraint pk_larm_tip
  );

revoke all on larm_tip from "public";

{ TABLE larm_lot row size = 207 number of columns = 12 index size = 16 }

create table larm_lot 
  (
    lot_tipo smallint not null ,
    lot_cod smallint not null ,
    lot_marca char(30) not null ,
    lot_modelo char(30) not null ,
    lot_calibre char(30) not null ,
    lot_lote char(10) not null ,
    lot_hecho smallint not null ,
    lot_fec_compra date,
    tip_antiguo char(10),
    tip_desc_ct char(50),
    lot_precio money(10,2),
    lot_usuario varchar(30) 
        default user,
    primary key (lot_cod,lot_tipo)  constraint pk_larmlot
  );

revoke all on larm_lot from "public";

{ TABLE larm_loc row size = 220 number of columns = 16 index size = 0 }

create table larm_loc 
  (
    vplaza integer,
    vper_cat integer,
    vper_grado smallint,
    vgrado varchar(8),
    vape1 char(15),
    vape2 char(15),
    vdesc_plaza char(75),
    vceom char(6),
    varm_cat integer,
    vtipo char(30),
    vlot_arm smallint,
    vtip_arm smallint,
    vno_arm char(20),
    vsit_desc char(20),
    vsit_codigo smallint,
    vjerar char(10)
  );

revoke all on larm_loc from "public";

{ TABLE lmarmas row size = 69 number of columns = 8 index size = 57 }

create table lmarmas 
  (
    arm_cat integer not null ,
    arm_tipo smallint not null ,
    arm_lote smallint not null ,
    arm_numero char(20) not null ,
    arm_plaza integer not null ,
    arm_sit smallint not null ,
    arm_fec_situ date not null ,
    arm_usuario varchar(30) 
        default user,
    primary key (arm_cat)  constraint pk_lmarmas
  );

revoke all on lmarmas from "public";

{ TABLE larm_det row size = 53 number of columns = 7 index size = 26 }

create table larm_det 
  (
    det_cat integer not null ,
    det_plaza integer not null ,
    det_fec_ini date not null ,
    det_fec_fin date not null ,
    det_cat_per integer not null ,
    det_sit smallint not null ,
    det_usuario varchar(30),
    
    check (det_fec_fin >= det_fec_ini ) constraint ck_det_fec_fin,
    primary key (det_cat,det_plaza,det_fec_ini) 
  );

revoke all on larm_det from "public";

{ TABLE lhrep row size = 113 number of columns = 7 index size = 14 }

create table lhrep 
  (
    hre_num integer,
    hre_sis char(1) not null ,
    hre_cat integer not null ,
    hre_mot char(60) not null ,
    hre_fec date not null ,
    hre_cst money(16,2) not null ,
    hre_usuario varchar(30) 
        default user,
    primary key (hre_sis,hre_cat,hre_fec) 
  );

revoke all on lhrep from "public";

{ TABLE larm_detalle row size = 146 number of columns = 8 index size = 0 }

create table larm_detalle 
  (
    deta_cat integer not null ,
    deta_lote smallint not null ,
    deta_numero char(20) not null ,
    deta_plaza integer not null ,
    deta_sit smallint not null ,
    deta_doc varchar(100,1) not null ,
    deta_fecha date not null ,
    deta_usuario varchar(8,1) not null 
  );

revoke all on larm_detalle from "public";

{ TABLE aud_larm_detalle row size = 312 number of columns = 19 index size = 0 }

create table aud_larm_detalle 
  (
    deta_cat integer,
    deta_lote smallint,
    deta_numero char(20),
    deta_plaza integer,
    deta_sit smallint,
    deta_doc varchar(100,1),
    deta_fecha date,
    deta_usuario varchar(8,1),
    desp_deta_cat integer,
    desp_deta_lote smallint,
    desp_deta_numero char(20),
    desp_deta_plaza integer,
    desp_deta_sit smallint,
    desp_deta_doc varchar(100,1),
    desp_deta_fecha date,
    desp_deta_usuario varchar(8,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_larm_detalle from "public";

{ TABLE aud_hfasig row size = 532 number of columns = 87 index size = 12 }

create table aud_hfasig 
  (
    hfa_catalogo integer,
    hfa_fecha date,
    hfa_prog char(20),
    hfa_grupo smallint,
    hfa_clase char(1),
    hfa_grado smallint,
    hfa_arma smallint,
    hfa_sexo char(1),
    hfa_plaza integer,
    hfa_desc_empleo char(45),
    hfa_ceom char(6),
    hfa_jerarquia char(10),
    hfa_hrs_trab smallint,
    hfa_ord_gral char(7),
    hfa_bienal smallint,
    hfa_depen smallint,
    hfa_sueldo money(16,2),
    hfa_bon_bienal money(8,2),
    hfa_prima_resp money(8,2),
    hfa_prima_esp money(8,2),
    hfa_gastos_rep money(8,2),
    hfa_bon_emerg money(8,2),
    hfa_dividendos money(8,2),
    hfa_aguinaldo money(8,2),
    hfa_bono_vac money(8,2),
    hfa_bono_14 money(8,2),
    hfa_bono_trans money(8,2),
    hfa_prima_ing money(8,2),
    hfa_prima_prof money(8,2),
    hfa_ipm money(8,2),
    hfa_montepio money(8,2),
    hfa_fianza money(8,2),
    hfa_hos_mil money(8,2),
    hfa_club_ofi money(8,2),
    hfa_club_esp money(8,2),
    hfa_liquido money(8,2),
    hfa_corrida char(1),
    hfa_unidad smallint,
    hfa_complemento money(8,2),
    hfa_cuenta char(20),
    hfa_prima_ext money(8,2),
    hfa_bono_ali money(8,2),
    desp_hfa_catalogo integer,
    desp_hfa_fecha date,
    desp_hfa_prog char(20),
    desp_hfa_grupo smallint,
    desp_hfa_clase char(1),
    desp_hfa_grado smallint,
    desp_hfa_arma smallint,
    desp_hfa_sexo char(1),
    desp_hfa_plaza integer,
    desp_hfa_desc_empleo char(45),
    desp_hfa_ceom char(6),
    desp_hfa_jerarquia char(10),
    desp_hfa_hrs_trab smallint,
    desp_hfa_ord_gral char(7),
    desp_hfa_bienal smallint,
    desp_hfa_depen smallint,
    desp_hfa_sueldo money(16,2),
    desp_hfa_bon_bienal money(8,2),
    desp_hfa_prima_resp money(8,2),
    desp_hfa_prima_esp money(8,2),
    desp_hfa_gastos_rep money(8,2),
    desp_hfa_bon_emerg money(8,2),
    desp_hfa_dividendos money(8,2),
    desp_hfa_aguinaldo money(8,2),
    desp_hfa_bono_vac money(8,2),
    desp_hfa_bono_14 money(8,2),
    desp_hfa_bono_trans money(8,2),
    desp_hfa_prima_ing money(8,2),
    desp_hfa_prima_prof money(8,2),
    desp_hfa_ipm money(8,2),
    desp_hfa_montepio money(8,2),
    desp_hfa_fianza money(8,2),
    desp_hfa_hos_mil money(8,2),
    desp_hfa_club_ofi money(8,2),
    desp_hfa_club_esp money(8,2),
    desp_hfa_liquido money(8,2),
    desp_hfa_corrida char(1),
    desp_hfa_unidad smallint,
    desp_hfa_complemento money(8,2),
    desp_hfa_cuenta char(20),
    desp_hfa_prima_ext money(8,2),
    desp_hfa_bono_ali money(8,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_hfasig from "public";

{ TABLE aud_c_documento row size = 844 number of columns = 47 index size = 12 }

create table aud_c_documento 
  (
    doc_codigo integer,
    doc_depend integer,
    doc_tipo integer,
    doc_nombre char(20),
    doc_prioridad char(1),
    doc_asunto char(250),
    doc_fec_realizado datetime year to second,
    doc_fec_in datetime year to second,
    doc_num_hojas integer,
    doc_destino integer,
    doc_procedencia integer,
    doc_status char(1),
    doc_interesado char(50),
    doc_clasificacion integer,
    doc_prefijo integer,
    doc_proposito integer,
    doc_recibe integer,
    doc_int_ext char(1),
    doc_solucion char(1),
    doc_referencia char(20),
    doc_of_actual integer,
    doc_ult_tras datetime year to second,
    desp_doc_codigo integer,
    desp_doc_depend integer,
    desp_doc_tipo integer,
    desp_doc_nombre char(20),
    desp_doc_prioridad char(1),
    desp_doc_asunto char(250),
    desp_doc_fec_realizado datetime year to second,
    desp_doc_fec_in datetime year to second,
    desp_doc_num_hojas integer,
    desp_doc_destino integer,
    desp_doc_procedencia integer,
    desp_doc_status char(1),
    desp_doc_interesado char(50),
    desp_doc_clasificacion integer,
    desp_doc_prefijo integer,
    desp_doc_proposito integer,
    desp_doc_recibe integer,
    desp_doc_int_ext char(1),
    desp_doc_solucion char(1),
    desp_doc_referencia char(20),
    desp_doc_of_actual integer,
    desp_doc_ult_tras datetime year to second,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_c_documento from "public";

{ TABLE aud_hfasigc row size = 130 number of columns = 21 index size = 12 }

create table aud_hfasigc 
  (
    hfa_catalogo integer,
    hfa_fecha date,
    hfa_codigo smallint,
    hfa_nu_reg smallint,
    hfa_monto money(16,2),
    hfa_mensual money(16,2),
    hfa_saldo money(16,2),
    hfa_corrida char(1),
    hfa_varios char(15),
    desp_hfa_catalogo integer,
    desp_hfa_fecha date,
    desp_hfa_codigo smallint,
    desp_hfa_nu_reg smallint,
    desp_hfa_monto money(16,2),
    desp_hfa_mensual money(16,2),
    desp_hfa_saldo money(16,2),
    desp_hfa_corrida char(1),
    desp_hfa_varios char(15),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_hfasigc from "public";

{ TABLE aud_dfdes_btrab row size = 350 number of columns = 39 index size = 12 }

create table aud_dfdes_btrab 
  (
    dfdt_catalogo integer,
    dfdt_codigo smallint,
    dfdt_nu_reg smallint,
    dfdt_cod_control smallint,
    dfdt_tipo_desc char(1),
    dfdt_fec_ini date,
    dfdt_ult_act date,
    dfdt_fec_cer date,
    dfdt_monto money(16,2),
    dfdt_saldo money(16,2),
    dfdt_mensual money(16,2),
    dfdt_tot_cuotas smallint,
    dfdt_num_cuotas smallint,
    dfdt_documen char(6),
    dfdt_codeudor integer,
    dfdt_nom_bene char(50),
    dfdt_juz_con char(50),
    dfdt_si_no char(1),
    desp_dfdt_catalogo integer,
    desp_dfdt_codigo smallint,
    desp_dfdt_nu_reg smallint,
    desp_dfdt_cod_control smallint,
    desp_dfdt_tipo_desc char(1),
    desp_dfdt_fec_ini date,
    desp_dfdt_ult_act date,
    desp_dfdt_fec_cer date,
    desp_dfdt_monto money(16,2),
    desp_dfdt_saldo money(16,2),
    desp_dfdt_mensual money(16,2),
    desp_dfdt_tot_cuotas smallint,
    desp_dfdt_num_cuotas smallint,
    desp_dfdt_documen char(6),
    desp_dfdt_codeudor integer,
    desp_dfdt_nom_bene char(50),
    desp_dfdt_juz_con char(50),
    desp_dfdt_si_no char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dfdes_btrab from "public";

{ TABLE aud_hfdes1 row size = 130 number of columns = 21 index size = 12 }

create table aud_hfdes1 
  (
    hfd_catalogo integer,
    hfd_fecha date,
    hfd_codigo smallint,
    hfd_nu_reg smallint,
    hfd_monto money(16,2),
    hfd_mensual money(16,2),
    hfd_saldo money(16,2),
    hfd_corrida char(1),
    hfd_varios char(15),
    desp_hfd_catalogo integer,
    desp_hfd_fecha date,
    desp_hfd_codigo smallint,
    desp_hfd_nu_reg smallint,
    desp_hfd_monto money(16,2),
    desp_hfd_mensual money(16,2),
    desp_hfd_saldo money(16,2),
    desp_hfd_corrida char(1),
    desp_hfd_varios char(15),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_hfdes1 from "public";

{ TABLE aud_dfasig row size = 163 number of columns = 12 index size = 12 }

create table aud_dfasig 
  (
    antes1 char(12),
    antes2 char(8),
    antes3 char(22),
    antes4 char(22),
    despues1 char(12),
    despues2 char(8),
    despues3 char(22),
    despues4 char(22),
    hora datetime year to minute,
    accion char(1) not null ,
    usuario char(12) not null ,
    tabname char(15) not null 
  );

revoke all on aud_dfasig from "public";

{ TABLE aud_hfdes row size = 130 number of columns = 21 index size = 12 }

create table aud_hfdes 
  (
    hfd_catalogo integer,
    hfd_fecha date,
    hfd_codigo smallint,
    hfd_nu_reg smallint,
    hfd_monto money(16,2),
    hfd_mensual money(16,2),
    hfd_saldo money(16,2),
    hfd_corrida char(1),
    hfd_varios char(15),
    desp_hfd_catalogo integer,
    desp_hfd_fecha date,
    desp_hfd_codigo smallint,
    desp_hfd_nu_reg smallint,
    desp_hfd_monto money(16,2),
    desp_hfd_mensual money(16,2),
    desp_hfd_saldo money(16,2),
    desp_hfd_corrida char(1),
    desp_hfd_varios char(15),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_hfdes from "public";

{ TABLE aud_c_ubicacion_docum row size = 510 number of columns = 33 index size = 12 }

create table aud_c_ubicacion_docum 
  (
    ub_correlativo integer,
    ub_cod_doc integer,
    ub_cod_depend integer,
    ub_fec_in datetime year to second,
    ub_recibe integer,
    ub_entrega integer,
    ub_recibe_ok char(1),
    ub_observaciones char(175),
    ub_oficina integer,
    ub_of_dep integer,
    ub_doc_tipo_remite integer,
    ub_doc_remite char(20),
    ub_int_ext char(1),
    ub_of_remite integer,
    ub_of_dep_remite integer,
    desp_ub_correlativo integer,
    desp_ub_cod_doc integer,
    desp_ub_cod_depend integer,
    desp_ub_fec_in datetime year to second,
    desp_ub_recibe integer,
    desp_ub_entrega integer,
    desp_ub_recibe_ok char(1),
    desp_ub_observaciones char(175),
    desp_ub_oficina integer,
    desp_ub_of_dep integer,
    desp_ub_doc_tipo_remite integer,
    desp_ub_doc_remite char(20),
    desp_ub_int_ext char(1),
    desp_ub_of_remite integer,
    desp_ub_of_dep_remite integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_c_ubicacion_docum from "public";

{ TABLE aud_f_ipm_cart row size = 130 number of columns = 21 index size = 12 }

create table aud_f_ipm_cart 
  (
    ipc_correlativo integer,
    ipc_fecha_env date,
    ipc_nu_credito char(9),
    ipc_catalogo integer,
    ipc_monto money(10,2),
    ipc_codigo char(2),
    ipc_status char(1),
    ipc_motivo char(15),
    ipc_saldo money(18,2),
    desp_ipc_correlativo integer,
    desp_ipc_fecha_env date,
    desp_ipc_nu_credito char(9),
    desp_ipc_catalogo integer,
    desp_ipc_monto money(10,2),
    desp_ipc_codigo char(2),
    desp_ipc_status char(1),
    desp_ipc_motivo char(15),
    desp_ipc_saldo money(18,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_f_ipm_cart from "public";

{ TABLE aud_dfdes_tro row size = 473 number of columns = 38 index size = 12 }

create table aud_dfdes_tro 
  (
    antes1 char(12),
    antes2 char(2),
    antes3 char(2),
    antes4 char(2),
    antes5 char(1),
    antes6 char(12),
    antes7 char(12),
    antes8 char(12),
    antes9 char(12),
    antes10 char(12),
    antes11 char(12),
    antes12 char(2),
    antes13 char(2),
    antes14 char(12),
    antes15 char(12),
    antes16 char(50),
    antes17 char(50),
    despues1 char(12),
    despues2 char(2),
    despues3 char(2),
    despues4 char(2),
    despues5 char(1),
    despues6 char(12),
    despues7 char(12),
    despues8 char(12),
    despues9 char(12),
    despues10 char(12),
    despues11 char(12),
    despues12 char(2),
    despues13 char(2),
    despues14 char(12),
    despues15 char(12),
    despues16 char(50),
    despues17 char(50),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_dfdes_tro from "public";

{ TABLE aud_cuentas row size = 87 number of columns = 10 index size = 12 }

create table aud_cuentas 
  (
    antes1 integer,
    antes2 char(20),
    antes3 smallint,
    despues1 integer,
    despues2 char(20),
    despues3 smallint,
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_cuentas from "public";

{ TABLE aud_bono14 row size = 50 number of columns = 9 index size = 12 }

create table aud_bono14 
  (
    b14_catalogo integer,
    b14_cantidad money(16,2),
    b14_meses smallint,
    desp_b14_catalogo integer,
    desp_b14_cantidad money(16,2),
    desp_b14_meses smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bono14 from "public";

{ TABLE aud_dfdes_gra row size = 350 number of columns = 39 index size = 12 }

create table aud_dfdes_gra 
  (
    dfdg_catalogo integer,
    dfdg_codigo smallint,
    dfdg_nu_reg smallint,
    dfdg_cod_control smallint,
    dfdg_tipo_desc char(1),
    dfdg_fec_ini date,
    dfdg_ult_act date,
    dfdg_fec_cer date,
    dfdg_monto money(16,2),
    dfdg_saldo money(16,2),
    dfdg_mensual money(16,2),
    dfdg_tot_cuotas smallint,
    dfdg_num_cuotas smallint,
    dfdg_documen char(6),
    dfdg_codeudor integer,
    dfdg_nom_bene char(50),
    dfdg_juz_con char(50),
    dfdg_si_no char(1),
    desp_dfdg_catalogo integer,
    desp_dfdg_codigo smallint,
    desp_dfdg_nu_reg smallint,
    desp_dfdg_cod_control smallint,
    desp_dfdg_tipo_desc char(1),
    desp_dfdg_fec_ini date,
    desp_dfdg_ult_act date,
    desp_dfdg_fec_cer date,
    desp_dfdg_monto money(16,2),
    desp_dfdg_saldo money(16,2),
    desp_dfdg_mensual money(16,2),
    desp_dfdg_tot_cuotas smallint,
    desp_dfdg_num_cuotas smallint,
    desp_dfdg_documen char(6),
    desp_dfdg_codeudor integer,
    desp_dfdg_nom_bene char(50),
    desp_dfdg_juz_con char(50),
    desp_dfdg_si_no char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dfdes_gra from "public";

{ TABLE aud_agui row size = 50 number of columns = 9 index size = 12 }

create table aud_agui 
  (
    agui_catalogo integer,
    agui_aguinaldo money(16,2),
    agui_meses smallint,
    desp_agui_catalogo integer,
    desp_agui_aguinaldo money(16,2),
    desp_agui_meses smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_agui from "public";

{ TABLE peva_periodos row size = 10 number of columns = 3 index size = 7 }

create table peva_periodos 
  (
    per_codigo smallint not null ,
    per_fecha_inicio date not null ,
    per_fecha_fin date not null ,
    primary key (per_codigo) 
  );

revoke all on peva_periodos from "public";

{ TABLE peva_admin row size = 184 number of columns = 12 index size = 34 }

create table peva_admin 
  (
    adm_catalogo integer not null ,
    adm_periodo smallint not null ,
    adm_grado smallint not null ,
    adm_arma smallint not null ,
    adm_emp_ant varchar(75) not null ,
    adm_proyec smallint not null ,
    adm_dep smallint not null ,
    adm_fec_alta date not null ,
    adm_emp_act varchar(75) not null ,
    adm_tiempo integer not null ,
    adm_plaza integer not null ,
    adm_ceom char(6) not null ,
    primary key (adm_catalogo,adm_periodo) 
  );

revoke all on peva_admin from "public";

{ TABLE peva_aut_em row size = 269 number of columns = 7 index size = 11 }

create table peva_aut_em 
  (
    autem_catalogo integer not null ,
    autem_periodo smallint not null ,
    autem_cat_em integer,
    autem_grado smallint,
    autem_fecha date,
    autem_estado smallint,
    autem_obs varchar(250),
    primary key (autem_catalogo,autem_periodo) 
  );

revoke all on peva_aut_em from "public";

{ TABLE peva_conceptos row size = 508 number of columns = 4 index size = 24 }

create table peva_conceptos 
  (
    con_catalogo integer not null ,
    con_periodo smallint not null ,
    con_codigo smallint not null ,
    con_concepto char(500),
    primary key (con_catalogo,con_periodo,con_codigo) 
  );

revoke all on peva_conceptos from "public";

{ TABLE peva_evaluacion row size = 46 number of columns = 22 index size = 11 }

create table peva_evaluacion 
  (
    eva_catalogo integer not null ,
    eva_periodo smallint not null ,
    eva_disciplina smallint,
    eva_rel_inter smallint,
    eva_admon_rec smallint,
    eva_cal_trab smallint,
    eva_comunica smallint,
    eva_coordina smallint,
    eva_plan_orga smallint,
    eva_control smallint,
    eva_iniciativa smallint,
    eva_lider smallint,
    eva_comp_soc smallint,
    eva_adapta smallint,
    eva_solv_econ smallint,
    eva_coopera smallint,
    eva_discre smallint,
    eva_salud smallint,
    eva_prevision smallint,
    eva_seg_confi smallint,
    eva_voc_serv smallint,
    eva_cap_ana smallint,
    primary key (eva_catalogo,eva_periodo) 
  );

revoke all on peva_evaluacion from "public";

{ TABLE peva_notas row size = 28 number of columns = 6 index size = 11 }

create table peva_notas 
  (
    not_catalogo integer not null ,
    not_periodo smallint not null ,
    not_e_evalua smallint not null ,
    not_e_numero smallint not null ,
    not_pafe varchar(15) not null ,
    not_dem smallint,
    primary key (not_catalogo,not_periodo) 
  );

revoke all on peva_notas from "public";

{ TABLE peva_funciones row size = 10 number of columns = 3 index size = 26 }

create table peva_funciones 
  (
    fun_catalogo integer not null ,
    fun_periodo smallint not null ,
    fun_codigo integer,
    primary key (fun_catalogo,fun_periodo,fun_codigo) 
  );

revoke all on peva_funciones from "public";

{ TABLE peva_autentica row size = 94 number of columns = 7 index size = 24 }

create table peva_autentica 
  (
    aut_catalogo integer not null ,
    aut_periodo smallint not null ,
    aut_codigo smallint not null ,
    aut_cat integer not null ,
    aut_grado smallint not null ,
    aut_puesto varchar(75) not null ,
    aut_tiempo integer not null ,
    primary key (aut_catalogo,aut_periodo,aut_codigo) 
  );

revoke all on peva_autentica from "public";

{ TABLE aud_peva_admin row size = 388 number of columns = 27 index size = 0 }

create table aud_peva_admin 
  (
    adm_catalogo integer,
    adm_periodo smallint,
    adm_grado smallint,
    adm_arma smallint,
    adm_emp_ant varchar(75),
    adm_proyec smallint,
    adm_dep smallint,
    adm_fec_alta date,
    adm_emp_act varchar(75),
    adm_tiempo integer,
    adm_plaza integer,
    adm_ceom char(6),
    desp_adm_catalogo integer,
    desp_adm_periodo smallint,
    desp_adm_grado smallint,
    desp_adm_arma smallint,
    desp_adm_emp_ant varchar(75),
    desp_adm_proyec smallint,
    desp_adm_dep smallint,
    desp_adm_fec_alta date,
    desp_adm_emp_act varchar(75),
    desp_adm_tiempo integer,
    desp_adm_plaza integer,
    desp_adm_ceom char(6),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_admin from "public";

{ TABLE aud_peva_aut_em row size = 558 number of columns = 17 index size = 0 }

create table aud_peva_aut_em 
  (
    autem_catalogo integer,
    autem_periodo smallint,
    autem_cat_em integer,
    autem_grado smallint,
    autem_fecha date,
    autem_estado smallint,
    autem_obs varchar(250),
    desp_autem_catalogo integer,
    desp_autem_periodo smallint,
    desp_autem_cat_em integer,
    desp_autem_grado smallint,
    desp_autem_fecha date,
    desp_autem_estado smallint,
    desp_autem_obs varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_aut_em from "public";

{ TABLE aud_peva_conceptos row size = 1036 number of columns = 11 index size = 0 }

create table aud_peva_conceptos 
  (
    con_catalogo integer,
    con_periodo smallint,
    con_codigo smallint,
    con_concepto char(500),
    desp_con_catalogo integer,
    desp_con_periodo smallint,
    desp_con_codigo smallint,
    desp_con_concepto char(500),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_conceptos from "public";

{ TABLE aud_peva_evaluacion row size = 112 number of columns = 47 index size = 0 }

create table aud_peva_evaluacion 
  (
    eva_catalogo integer,
    eva_periodo smallint,
    eva_disciplina smallint,
    eva_rel_inter smallint,
    eva_admon_rec smallint,
    eva_cal_trab smallint,
    eva_comunica smallint,
    eva_coordina smallint,
    eva_plan_orga smallint,
    eva_control smallint,
    eva_iniciativa smallint,
    eva_lider smallint,
    eva_comp_soc smallint,
    eva_adapta smallint,
    eva_solv_econ smallint,
    eva_coopera smallint,
    eva_discre smallint,
    eva_salud smallint,
    eva_prevision smallint,
    eva_seg_confi smallint,
    eva_voc_serv smallint,
    eva_cap_ana smallint,
    desp_eva_catalogo integer,
    desp_eva_periodo smallint,
    desp_eva_disciplina smallint,
    desp_eva_rel_inter smallint,
    desp_eva_admon_rec smallint,
    desp_eva_cal_trab smallint,
    desp_eva_comunica smallint,
    desp_eva_coordina smallint,
    desp_eva_plan_orga smallint,
    desp_eva_control smallint,
    desp_eva_iniciativa smallint,
    desp_eva_lider smallint,
    desp_eva_comp_soc smallint,
    desp_eva_adapta smallint,
    desp_eva_solv_econ smallint,
    desp_eva_coopera smallint,
    desp_eva_discre smallint,
    desp_eva_salud smallint,
    desp_eva_prevision smallint,
    desp_eva_seg_confi smallint,
    desp_eva_voc_serv smallint,
    desp_eva_cap_ana smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_evaluacion from "public";

{ TABLE aud_peva_notas row size = 76 number of columns = 15 index size = 0 }

create table aud_peva_notas 
  (
    not_catalogo integer,
    not_periodo smallint,
    not_e_evalua smallint,
    not_e_numero smallint,
    not_pafe varchar(15),
    not_dem smallint,
    desp_not_catalogo integer,
    desp_not_periodo smallint,
    desp_not_e_evalua smallint,
    desp_not_e_numero smallint,
    desp_not_pafe varchar(15),
    desp_not_dem smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_notas from "public";

{ TABLE aud_peva_funciones row size = 40 number of columns = 9 index size = 0 }

create table aud_peva_funciones 
  (
    fun_catalogo integer,
    fun_periodo smallint,
    fun_codigo integer,
    desp_fun_catalogo integer,
    desp_fun_periodo smallint,
    desp_fun_codigo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_funciones from "public";

{ TABLE aud_peva_autentica row size = 208 number of columns = 17 index size = 0 }

create table aud_peva_autentica 
  (
    aut_catalogo integer,
    aut_periodo smallint,
    aut_codigo smallint,
    aut_cat integer,
    aut_grado smallint,
    aut_puesto varchar(75),
    aut_tiempo integer,
    desp_aut_catalogo integer,
    desp_aut_periodo smallint,
    desp_aut_codigo smallint,
    desp_aut_cat integer,
    desp_aut_grado smallint,
    desp_aut_puesto varchar(75),
    desp_aut_tiempo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_autentica from "public";

{ TABLE aud_peva_periodos row size = 40 number of columns = 9 index size = 0 }

create table aud_peva_periodos 
  (
    per_codigo smallint,
    per_fecha_inicio date,
    per_fecha_fin date,
    desp_per_codigo smallint,
    desp_per_fecha_inicio date,
    desp_per_fecha_fin date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_periodos from "public";

{ TABLE larm_tip_sol row size = 25 number of columns = 2 index size = 9 }

create table larm_tip_sol 
  (
    tips_cod integer,
    tips_desc varchar(20),
    primary key (tips_cod)  constraint pk_larm_tip_sol
  );

revoke all on larm_tip_sol from "public";

{ TABLE aud_larm_tip_sol row size = 70 number of columns = 7 index size = 0 }

create table aud_larm_tip_sol 
  (
    tips_cod integer,
    tips_desc varchar(20),
    desp_tips_cod integer,
    desp_tips_desc varchar(20),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_larm_tip_sol from "public";

{ TABLE aud_larm_mov row size = 156 number of columns = 15 index size = 0 }

create table aud_larm_mov 
  (
    mov_solicitud integer,
    mov_correla smallint,
    mov_fecha datetime year to day,
    mov_docto varchar(50,1),
    mov_termina smallint,
    mov_usuario integer,
    desp_mov_solicitud integer,
    desp_mov_correla smallint,
    desp_mov_fecha datetime year to day,
    desp_mov_docto varchar(50,1),
    desp_mov_termina smallint,
    desp_mov_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_larm_mov from "public";

{ TABLE aud_larm_temp row size = 108 number of columns = 19 index size = 0 }

create table aud_larm_temp 
  (
    tem_solicitud integer,
    tem_tipo smallint,
    tem_lote smallint,
    tem_numero char(20),
    tem_plaza integer,
    tem_sit integer,
    tem_fec_situ date,
    tem_usuario integer,
    desp_tem_solicitud integer,
    desp_tem_tipo smallint,
    desp_tem_lote smallint,
    desp_tem_numero char(20),
    desp_tem_plaza integer,
    desp_tem_sit integer,
    desp_tem_fec_situ date,
    desp_tem_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_larm_temp from "public";

{ TABLE aud_ceom_funcion row size = 1048 number of columns = 11 index size = 0 }

create table aud_ceom_funcion 
  (
    func_meom char(6),
    func_codigo integer,
    func_descripcion char(500),
    func_estado integer,
    desp_func_meom char(6),
    desp_func_codigo integer,
    desp_func_descripcion char(500),
    desp_func_estado integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ceom_funcion from "public";

{ TABLE ceom_funcion row size = 514 number of columns = 4 index size = 26 }

create table ceom_funcion 
  (
    func_meom char(6) not null ,
    func_codigo integer,
    func_descripcion char(500),
    func_estado integer,
    primary key (func_meom,func_codigo) 
  );

revoke all on ceom_funcion from "public";

{ TABLE aud_peva_objetivos row size = 1036 number of columns = 11 index size = 0 }

create table aud_peva_objetivos 
  (
    obj_catalogo integer,
    obj_periodo smallint,
    obj_codigo smallint,
    obj_desc char(500),
    desp_obj_catalogo integer,
    desp_obj_periodo smallint,
    desp_obj_codigo smallint,
    desp_obj_desc char(500),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_objetivos from "public";

{ TABLE peva_objetivos row size = 508 number of columns = 4 index size = 24 }

create table peva_objetivos 
  (
    obj_catalogo integer not null ,
    obj_periodo smallint not null ,
    obj_codigo smallint not null ,
    obj_desc char(500) not null ,
    primary key (obj_catalogo,obj_periodo,obj_codigo) 
  );

revoke all on peva_objetivos from "public";

{ TABLE mdep_tipo row size = 77 number of columns = 2 index size = 6 }

create table mdep_tipo 
  (
    tip_codigo char(1) not null ,
    tip_desc varchar(75) not null ,
    primary key (tip_codigo)  constraint pk_mdep_tipo
  );

revoke all on mdep_tipo from "public";

{ TABLE lmarmas_ag row size = 632 number of columns = 13 index size = 16 }

create table lmarmas_ag 
  (
    arm_cat_smg integer not null ,
    arm_cat_sistema smallint,
    arm_tipo smallint not null ,
    arm_lote smallint not null ,
    arm_numero varchar(50) not null ,
    arm_plaza integer,
    arm_sit smallint not null ,
    arm_fec_situ date not null ,
    arm_usuario varchar(100) not null ,
    arm_almacen smallint not null ,
    arm_destino varchar(100),
    arm_acta varchar(100),
    arm_obs varchar(255),
    primary key (arm_cat_smg)  constraint pk_lmarmas_ag
  );

revoke all on lmarmas_ag from "public";

{ TABLE lade_conocimiento row size = 12 number of columns = 5 index size = 25 }

create table lade_conocimiento 
  (
    d_con_codigo smallint not null ,
    d_con_trans smallint not null ,
    d_con_catalogo integer not null ,
    d_con_estado smallint not null ,
    d_con_pagina smallint not null ,
    primary key (d_con_codigo,d_con_trans)  constraint pk_lade_conocimiento
  );

revoke all on lade_conocimiento from "public";

{ TABLE lali_conoc row size = 80 number of columns = 2 index size = 9 }

create table lali_conoc 
  (
    lali_no_libro integer not null ,
    lali_desc_libro varchar(75) not null ,
    primary key (lali_no_libro)  constraint pk_lali_conoc
  );

revoke all on lali_conoc from "public";

{ TABLE usuarios_ige row size = 20 number of columns = 3 index size = 0 }

create table usuarios_ige 
  (
    usu_catalogo char(6) not null ,
    usu_clave varchar(12) not null ,
    usu_nivel char(1) not null 
  );

revoke all on usuarios_ige from "public";

{ TABLE lama_conoc row size = 678 number of columns = 12 index size = 23 }

create table lama_conoc 
  (
    lama_codigo smallint not null ,
    lama_libro integer not null ,
    lama_folio smallint not null ,
    lama_conocimiento varchar(100) not null ,
    lama_en_cumplimiento varchar(100) not null ,
    lama_tipo_doc smallint not null ,
    lama_fecha date not null ,
    lama_dep_entrega smallint not null ,
    lama_dep_recibe smallint not null ,
    lama_entrega varchar(100) not null ,
    lama_recibe varchar(100) not null ,
    lama_observaciones varchar(255) not null ,
    primary key (lama_codigo)  constraint pk_lama_conoc
  );

revoke all on lama_conoc from "public";

{ TABLE lmarmas_ag1 row size = 632 number of columns = 13 index size = 9 }

create table lmarmas_ag1 
  (
    arm_cat_smg integer not null ,
    arm_cat_sistema smallint,
    arm_tipo smallint not null ,
    arm_lote smallint not null ,
    arm_numero varchar(50) not null ,
    arm_plaza integer,
    arm_sit smallint not null ,
    arm_fec_situ date not null ,
    arm_usuario varchar(100) not null ,
    arm_almacen smallint not null ,
    arm_destino varchar(100),
    arm_acta varchar(100),
    arm_obs varchar(255),
    primary key (arm_cat_smg)  constraint pk_lmarmas_ag1
  );

revoke all on lmarmas_ag1 from "public";

{ TABLE mdep_conocimiento row size = 131 number of columns = 5 index size = 13 }

create table mdep_conocimiento 
  (
    dep_con_llave smallint not null ,
    dep_con_desc_lg varchar(75) not null ,
    dep_con_desc_md varchar(35) not null ,
    dep_con_desc_ct varchar(15) not null ,
    dep_con_tipo char(1) not null ,
    primary key (dep_con_llave)  constraint pk_mdep_conocimiento
  );

revoke all on mdep_conocimiento from "public";

{ TABLE lama_almacen row size = 255 number of columns = 4 index size = 7 }

create table lama_almacen 
  (
    al_codigo smallint not null ,
    al_desc_lg varchar(100) not null ,
    al_desc_md varchar(50) not null ,
    al_ubicacion varchar(100) not null ,
    primary key (al_codigo)  constraint pk_lama_almacen
  );

revoke all on lama_almacen from "public";

{ TABLE larm_buscerradas row size = 50 number of columns = 9 index size = 42 }

create table larm_buscerradas 
  (
    carm_cat integer not null ,
    carm_tipo smallint not null ,
    carm_lote smallint not null ,
    carm_numero char(20) not null ,
    carm_plaza integer not null ,
    carm_sit smallint not null ,
    carm_fec_situ date not null ,
    carm_fecha datetime year to second not null ,
    carm_usuario integer not null ,
    primary key (carm_cat,carm_fecha)  constraint pri_carm
  );

revoke all on larm_buscerradas from "public";

{ TABLE aud_larm_buscerradas row size = 120 number of columns = 21 index size = 0 }

create table aud_larm_buscerradas 
  (
    carm_cat integer,
    carm_tipo smallint,
    carm_lote smallint,
    carm_numero char(20),
    carm_plaza integer,
    carm_sit smallint,
    carm_fec_situ date,
    carm_fecha datetime year to second,
    carm_usuario integer,
    desp_carm_cat integer,
    desp_carm_tipo smallint,
    desp_carm_lote smallint,
    desp_carm_numero char(20),
    desp_carm_plaza integer,
    desp_carm_sit smallint,
    desp_carm_fec_situ date,
    desp_carm_fecha datetime year to second,
    desp_carm_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_larm_buscerradas from "public";

{ TABLE larm_temp row size = 102 number of columns = 8 index size = 114 }

create table larm_temp 
  (
    tem_solicitud integer not null ,
    tem_tipo smallint not null ,
    tem_lote smallint not null ,
    tem_numero char(80) not null ,
    tem_plaza integer not null ,
    tem_sit smallint not null ,
    tem_fec_situ date not null ,
    tem_usuario integer not null ,
    primary key (tem_solicitud,tem_numero)  constraint pk_larm_temp
  );

revoke all on larm_temp from "public";

{ TABLE uniformes row size = 57 number of columns = 4 index size = 7 }

create table uniformes 
  (
    uni_codigo smallint not null ,
    uni_fuerza smallint not null ,
    uni_descrip varchar(50,1) not null ,
    uni_gorra smallint not null ,
    primary key (uni_codigo)  constraint pk_codigo
  );

revoke all on uniformes from "public";

{ TABLE aud_uniformes row size = 134 number of columns = 11 index size = 0 }

create table aud_uniformes 
  (
    uni_codigo smallint,
    uni_fuerza smallint,
    uni_descrip varchar(50,1),
    uni_gorra smallint,
    desp_uni_codigo smallint,
    desp_uni_fuerza smallint,
    desp_uni_descrip varchar(50,1),
    desp_uni_gorra smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_uniformes from "public";

{ TABLE aud_detalle_solicitud row size = 116 number of columns = 25 index size = 0 }

create table aud_detalle_solicitud 
  (
    det_solicitud integer,
    det_catalogo integer,
    det_grado smallint,
    det_codigo_uni smallint,
    det_talla_uni varchar(6,1),
    det_talla_bota varchar(5,1),
    det_talla_gorra varchar(6,1),
    det_situacion integer,
    det_fecha date,
    det_usuario integer,
    det_comprobante integer,
    desp_det_solicitud integer,
    desp_det_catalogo integer,
    desp_det_grado smallint,
    desp_det_codigo_uni smallint,
    desp_det_talla_uni varchar(6,1),
    desp_det_talla_bota varchar(5,1),
    desp_det_talla_gorra varchar(6,1),
    desp_det_situacion integer,
    desp_det_fecha date,
    desp_det_usuario integer,
    desp_det_comprobante integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_detalle_solicitud from "public";

{ TABLE aud_solicitud_uniformes row size = 644 number of columns = 23 index size = 0 }

create table aud_solicitud_uniformes 
  (
    sol_numero integer,
    sol_mensaje varchar(25,1),
    sol_fecha date,
    sol_com_catalogo integer,
    sol_log_cat integer,
    sol_observaciones varchar(250,1),
    sol_situacion varchar(10,1),
    sol_dotac smallint,
    sol_dependencia smallint,
    sol_usuario integer,
    desp_sol_numero integer,
    desp_sol_mensaje varchar(25,1),
    desp_sol_fecha date,
    desp_sol_com_catalogo integer,
    desp_sol_log_cat integer,
    desp_sol_observaciones varchar(250,1),
    desp_sol_situacion varchar(10,1),
    desp_sol_dotac smallint,
    desp_sol_dependencia smallint,
    desp_sol_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_solicitud_uniformes from "public";

{ TABLE detalle_solicitud row size = 74 number of columns = 12 index size = 38 }

create table detalle_solicitud 
  (
    det_solicitud integer not null ,
    det_catalogo integer not null ,
    det_grado smallint not null ,
    det_codigo_uni smallint not null ,
    det_talla_uni varchar(6,1) not null ,
    det_talla_bota varchar(5,1) not null ,
    det_talla_gorra varchar(6,1) not null ,
    det_situacion integer not null ,
    det_fecha date not null ,
    det_usuario integer not null ,
    det_comprobante integer not null ,
    det_codbarra varchar(25,1),
    primary key (det_solicitud,det_catalogo)  constraint pk_solicitud
  );

revoke all on detalle_solicitud from "public";

{ TABLE larm_mov row size = 168 number of columns = 6 index size = 20 }

create table larm_mov 
  (
    mov_solicitud integer not null ,
    mov_correla smallint not null ,
    mov_fecha datetime year to day not null ,
    mov_docto varchar(150,1) not null ,
    mov_termina smallint not null ,
    mov_usuario integer not null ,
    primary key (mov_solicitud,mov_correla)  constraint pk_larm_mov
  );

revoke all on larm_mov from "public";

{ TABLE solicitud_uniformes row size = 312 number of columns = 10 index size = 69 }

create table solicitud_uniformes 
  (
    sol_numero integer not null ,
    sol_mensaje varchar(25,1) not null ,
    sol_fecha date not null ,
    sol_com_catalogo integer not null ,
    sol_log_cat integer not null ,
    sol_observaciones varchar(250,1) not null ,
    sol_situacion varchar(10,1) not null ,
    sol_dotac smallint not null ,
    sol_dependencia smallint not null ,
    sol_usuario integer,
    primary key (sol_numero,sol_mensaje)  constraint pksol_uni
  );

revoke all on solicitud_uniformes from "public";

{ TABLE dep_ubicacion row size = 7 number of columns = 3 index size = 16 }

create table dep_ubicacion 
  (
    cod_dep smallint not null ,
    cod_dm char(4) not null ,
    cod_fza char(1) not null ,
    primary key (cod_dep)  constraint pk_dep
  );

revoke all on dep_ubicacion from "public";

{ TABLE aud_dep_ubicacion row size = 34 number of columns = 9 index size = 0 }

create table aud_dep_ubicacion 
  (
    cod_dep smallint,
    cod_dm char(4),
    cod_fza char(1),
    desp_cod_dep smallint,
    desp_cod_dm char(4),
    desp_cod_fza char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dep_ubicacion from "public";

{ TABLE aud_con_solicitud row size = 790 number of columns = 17 index size = 0 }

create table aud_con_solicitud 
  (
    sol_codigo integer,
    sol_anio integer,
    sol_formulario varchar(16),
    sol_dependencia integer,
    sol_fec_solicit date,
    sol_justific varchar(250),
    sol_oficio varchar(100),
    desp_sol_codigo integer,
    desp_sol_anio integer,
    desp_sol_formulario varchar(16),
    desp_sol_dependencia integer,
    desp_sol_fec_solicit date,
    desp_sol_justific varchar(250),
    desp_sol_oficio varchar(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_solicitud from "public";

{ TABLE det_consolicit row size = 365 number of columns = 13 index size = 23 }

create table det_consolicit 
  (
    con_solcod serial not null ,
    con_catalogo integer not null ,
    con_grado smallint not null ,
    con_condecoracion smallint not null ,
    con_solcodigo integer not null ,
    con_solanio integer not null ,
    con_fec_con date not null ,
    con_ord_gral char(10),
    con_punto_og smallint,
    con_reg_emdn char(25),
    con_acta varchar(50),
    con_obs varchar(250),
    con_estado smallint,
    primary key (con_solcod)  constraint detsolcon
  );

revoke all on det_consolicit from "public";

{ TABLE aud_det_consolicit row size = 750 number of columns = 29 index size = 0 }

create table aud_det_consolicit 
  (
    con_solcod integer,
    con_catalogo integer,
    con_grado smallint,
    con_condecoracion smallint,
    con_solcodigo integer,
    con_solanio integer,
    con_fec_con date,
    con_ord_gral char(10),
    con_punto_og smallint,
    con_reg_emdn char(25),
    con_acta varchar(50),
    con_obs varchar(250),
    con_estado smallint,
    desp_con_solcod integer,
    desp_con_catalogo integer,
    desp_con_grado smallint,
    desp_con_condecoracion smallint,
    desp_con_solcodigo integer,
    desp_con_solanio integer,
    desp_con_fec_con date,
    desp_con_ord_gral char(10),
    desp_con_punto_og smallint,
    desp_con_reg_emdn char(25),
    desp_con_acta varchar(50),
    desp_con_obs varchar(250),
    desp_con_estado smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_det_consolicit from "public";

{ TABLE cond row size = 363 number of columns = 7 index size = 14 }

create table cond 
  (
    con_codigo smallint not null ,
    con_desc_lg char(250),
    con_clase char(2),
    con_pais smallint,
    con_creditos decimal(5,2),
    con_tipo_fund char(2),
    con_fundamento varchar(100),
    primary key (con_codigo)  constraint u105_6
  );

revoke all on cond from "public";

{ TABLE aud_dcon row size = 520 number of columns = 27 index size = 12 }

create table aud_dcon 
  (
    con_catalogo integer,
    con_grado smallint,
    con_condecoracion smallint,
    con_solcodigo integer,
    con_solanio integer,
    con_fec_con date,
    con_ord_gral char(12),
    con_punto_og smallint,
    con_reg_emdn char(12),
    con_acta varchar(50),
    con_obs varchar(250),
    con_estado char(2),
    desp_con_catalogo integer,
    desp_con_grado smallint,
    desp_con_condecoracion smallint,
    desp_con_solcodigo integer,
    desp_con_solanio integer,
    desp_con_fec_con date,
    desp_con_ord_gral char(12),
    desp_con_punto_og smallint,
    desp_con_reg_emdn char(12),
    desp_con_acta varchar(50),
    desp_con_obs varchar(50),
    desp_con_estado char(2),
    accion char(1),
    usuario char(12),
    hora datetime year to minute
  );

revoke all on aud_dcon from "public";

{ TABLE dcon row size = 361 number of columns = 12 index size = 25 }

create table dcon 
  (
    con_catalogo integer not null ,
    con_grado smallint not null ,
    con_condecoracion smallint not null ,
    con_solcodigo integer,
    con_solanio integer,
    con_fec_con date not null ,
    con_ord_gral char(10) not null ,
    con_punto_og smallint,
    con_reg_emdn char(25),
    con_acta varchar(50),
    con_obs varchar(250),
    con_estado char(2),
    primary key (con_catalogo,con_condecoracion)  constraint pk_dcon
  );

revoke all on dcon from "public";

{ TABLE eva_boleta row size = 334 number of columns = 20 index size = 40 }

create table eva_boleta 
  (
    bol_cat_evaluado integer not null ,
    bol_anio integer not null ,
    bol_cat_evaluador integer not null ,
    bol_ceom varchar(10),
    bol_perfil integer not null ,
    bol_pafe integer not null ,
    bol_eva1 integer,
    bol_eva2 integer,
    bol_eva3 integer,
    bol_eva4 integer,
    bol_demeritos integer not null ,
    bol_arrestos integer not null ,
    bol_total_salud integer not null ,
    bol_total_concep integer not null ,
    bol_total integer not null ,
    bol_accion_mot integer,
    bol_accion_correc integer,
    bol_cat_g1 integer not null ,
    bol_cat_comte integer not null ,
    bol_obs varchar(250),
    primary key (bol_cat_evaluado,bol_anio) 
  );

revoke all on eva_boleta from "public";

{ TABLE aud_eva_boleta row size = 688 number of columns = 43 index size = 0 }

create table aud_eva_boleta 
  (
    bol_cat_evaluado integer,
    bol_anio integer,
    bol_cat_evaluador integer,
    bol_ceom varchar(10),
    bol_perfil integer,
    bol_pafe integer,
    bol_eva1 integer,
    bol_eva2 integer,
    bol_eva3 integer,
    bol_eva4 integer,
    bol_demeritos integer,
    bol_arrestos integer,
    bol_total_salud integer,
    bol_total_concep integer,
    bol_total integer,
    bol_accion_mot integer,
    bol_accion_correc integer,
    bol_cat_g1 integer,
    bol_cat_comte integer,
    bol_obs varchar(250),
    desp_bol_cat_evaluado integer,
    desp_bol_anio integer,
    desp_bol_cat_evaluador integer,
    desp_bol_ceom varchar(10),
    desp_bol_perfil integer,
    desp_bol_pafe integer,
    desp_bol_eva1 integer,
    desp_bol_eva2 integer,
    desp_bol_eva3 integer,
    desp_bol_eva4 integer,
    desp_bol_demeritos integer,
    desp_bol_arrestos integer,
    desp_bol_total_salud integer,
    desp_bol_total_concep integer,
    desp_bol_total integer,
    desp_bol_accion_mot integer,
    desp_bol_accion_correc integer,
    desp_bol_cat_g1 integer,
    desp_bol_cat_comte integer,
    desp_bol_obs varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_boleta from "public";

{ TABLE bol_det_meritos row size = 12 number of columns = 3 index size = 39 }

create table bol_det_meritos 
  (
    detm_evaluado integer not null ,
    detm_anio integer not null ,
    detm_codigo integer not null ,
    primary key (detm_evaluado,detm_anio,detm_codigo) 
  );

revoke all on bol_det_meritos from "public";

{ TABLE aud_bol_det_meritos row size = 44 number of columns = 9 index size = 0 }

create table aud_bol_det_meritos 
  (
    detm_evaluado integer,
    detm_anio integer,
    detm_codigo integer,
    desp_detm_evaluado integer,
    desp_detm_anio integer,
    desp_detm_codigo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bol_det_meritos from "public";

{ TABLE bol_det_concep row size = 16 number of columns = 4 index size = 39 }

create table bol_det_concep 
  (
    detc_evaluado integer not null ,
    detc_anio integer not null ,
    detc_pregunta integer not null ,
    detc_nota integer not null ,
    primary key (detc_evaluado,detc_anio,detc_pregunta) 
  );

revoke all on bol_det_concep from "public";

{ TABLE aud_bol_det_concep row size = 52 number of columns = 11 index size = 0 }

create table aud_bol_det_concep 
  (
    detc_evaluado integer,
    detc_anio integer,
    detc_pregunta integer,
    detc_nota integer,
    desp_detc_evaluado integer,
    desp_detc_anio integer,
    desp_detc_pregunta integer,
    desp_detc_nota integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bol_det_concep from "public";

{ TABLE acc_motivadora row size = 259 number of columns = 3 index size = 9 }

create table acc_motivadora 
  (
    mot_codigo integer,
    mot_accion integer,
    mot_descripcion varchar(250),
    primary key (mot_codigo) 
  );

revoke all on acc_motivadora from "public";

{ TABLE aud_acc_motivadora row size = 538 number of columns = 9 index size = 0 }

create table aud_acc_motivadora 
  (
    mot_codigo integer,
    mot_accion integer,
    mot_descripcion varchar(250),
    desp_mot_codigo integer,
    desp_mot_accion integer,
    desp_mot_descripcion varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_acc_motivadora from "public";

{ TABLE aud_acc_correctiva row size = 538 number of columns = 9 index size = 0 }

create table aud_acc_correctiva 
  (
    corr_codigo integer,
    corr_accion integer,
    corr_descripcion varchar(250),
    desp_corr_codigo integer,
    desp_corr_accion integer,
    desp_corr_descripcion varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_acc_correctiva from "public";

{ TABLE eva_meritos row size = 259 number of columns = 3 index size = 9 }

create table eva_meritos 
  (
    mer_codigo integer not null ,
    mer_descripcion varchar(250),
    mer_nota integer,
    primary key (mer_codigo) 
  );

revoke all on eva_meritos from "public";

{ TABLE aud_eva_meritos row size = 538 number of columns = 9 index size = 0 }

create table aud_eva_meritos 
  (
    mer_codigo integer,
    mer_descripcion varchar(250),
    mer_nota integer,
    desp_mer_codigo integer,
    desp_mer_descripcion varchar(250),
    desp_mer_nota integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_meritos from "public";

{ TABLE eva_preguntas row size = 259 number of columns = 3 index size = 9 }

create table eva_preguntas 
  (
    pre_codigo integer not null ,
    pre_descripcion varchar(250) not null ,
    pre_proyeccion integer not null ,
    primary key (pre_codigo) 
  );

revoke all on eva_preguntas from "public";

{ TABLE aud_eva_preguntas row size = 538 number of columns = 9 index size = 0 }

create table aud_eva_preguntas 
  (
    pre_codigo integer,
    pre_descripcion varchar(250),
    pre_proyeccion integer,
    desp_pre_codigo integer,
    desp_pre_descripcion varchar(250),
    desp_pre_proyeccion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_preguntas from "public";

{ TABLE eva_datos row size = 534 number of columns = 10 index size = 13 }

create table eva_datos 
  (
    dat_cat_evaluado integer,
    dat_anio integer,
    dat_grado integer,
    dat_depen integer,
    dat_puesto varchar(250),
    dat_tiempo integer,
    dat_grado_eva integer,
    dat_arma_eva integer,
    dat_puesto_eva varchar(250),
    dat_tiempo_eva integer,
    primary key (dat_cat_evaluado,dat_anio) 
  );

revoke all on eva_datos from "public";

{ TABLE aud_eva_datos row size = 1088 number of columns = 23 index size = 0 }

create table aud_eva_datos 
  (
    dat_cat_evaluado integer,
    dat_anio integer,
    dat_grado integer,
    dat_depen integer,
    dat_puesto varchar(250),
    dat_tiempo integer,
    dat_grado_eva integer,
    dat_arma_eva integer,
    dat_puesto_eva varchar(250),
    dat_tiempo_eva integer,
    desp_dat_cat_evaluado integer,
    desp_dat_anio integer,
    desp_dat_grado integer,
    desp_dat_depen integer,
    desp_dat_puesto varchar(250),
    desp_dat_tiempo integer,
    desp_dat_grado_eva integer,
    desp_dat_arma_eva integer,
    desp_dat_puesto_eva varchar(250),
    desp_dat_tiempo_eva integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_datos from "public";

{ TABLE eva_certifica row size = 276 number of columns = 6 index size = 13 }

create table eva_certifica 
  (
    cer_evaluado integer not null ,
    cer_anio integer not null ,
    cer_certificador integer not null ,
    cer_status integer not null ,
    cer_fecha date not null ,
    cer_obs varchar(255),
    primary key (cer_evaluado,cer_anio) 
  );

revoke all on eva_certifica from "public";

{ TABLE aud_eva_certifica row size = 572 number of columns = 15 index size = 0 }

create table aud_eva_certifica 
  (
    cer_evaluado integer,
    cer_anio integer,
    cer_certificador integer,
    cer_status integer,
    cer_fecha date,
    cer_obs varchar(255),
    desp_cer_evaluado integer,
    desp_cer_anio integer,
    desp_cer_certificador integer,
    desp_cer_status integer,
    desp_cer_fecha date,
    desp_cer_obs varchar(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_certifica from "public";

{ TABLE rnb_casco row size = 56 number of columns = 3 index size = 9 }

create table rnb_casco 
  (
    cas_codigo serial not null ,
    cas_desc_lg varchar(30),
    cas_desc_ct varchar(20),
    primary key (cas_codigo)  constraint pk_rnb_casco
  );

revoke all on rnb_casco from "public";

{ TABLE aud_rnb_casco row size = 132 number of columns = 9 index size = 0 }

create table aud_rnb_casco 
  (
    cas_codigo integer,
    cas_desc_lg varchar(30),
    cas_desc_ct varchar(20),
    desp_cas_codigo integer,
    desp_cas_desc_lg varchar(30),
    desp_cas_desc_ct varchar(20),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_casco from "public";

{ TABLE rnb_motor row size = 68 number of columns = 6 index size = 22 }

create table rnb_motor 
  (
    mot_codigo serial not null ,
    mot_embarcacion integer not null ,
    mot_serie varchar(25) not null ,
    mot_marca varchar(25) not null ,
    mot_hp integer not null ,
    mot_fueraborda integer,
    primary key (mot_codigo,mot_embarcacion)  constraint pk_motor
  );

revoke all on rnb_motor from "public";

{ TABLE aud_rnb_motor row size = 156 number of columns = 15 index size = 0 }

create table aud_rnb_motor 
  (
    mot_codigo integer,
    mot_embarcacion integer,
    mot_serie varchar(25),
    mot_marca varchar(25),
    mot_hp integer,
    mot_fueraborda integer,
    desp_mot_codigo integer,
    desp_mot_embarcacion integer,
    desp_mot_serie varchar(25),
    desp_mot_marca varchar(25),
    desp_mot_hp integer,
    desp_mot_fueraborda integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_motor from "public";

{ TABLE rnb_marca row size = 56 number of columns = 3 index size = 9 }

create table rnb_marca 
  (
    mar_codigo serial not null ,
    mar_desc_lg varchar(30),
    mar_desc_ct varchar(20),
    primary key (mar_codigo)  constraint pk_marcodigo
  );

revoke all on rnb_marca from "public";

{ TABLE aud_rnb_marca row size = 132 number of columns = 9 index size = 0 }

create table aud_rnb_marca 
  (
    mar_codigo integer,
    mar_desc_lg varchar(30),
    mar_desc_ct varchar(20),
    desp_mar_codigo integer,
    desp_mar_desc_lg varchar(30),
    desp_mar_desc_ct varchar(20),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_marca from "public";

{ TABLE rnb_modificacion row size = 77 number of columns = 6 index size = 31 }

create table rnb_modificacion 
  (
    mod_codigo serial not null ,
    mod_embarcacion integer not null ,
    mod_modificacion text not null ,
    mod_fecha datetime year to day not null ,
    mod_quien integer not null ,
    mod_autoriza integer,
    primary key (mod_codigo,mod_embarcacion)  constraint pk_modificiacion
  );

revoke all on rnb_modificacion from "public";

{ TABLE aud_rnb_modificacion row size = 174 number of columns = 15 index size = 0 }

create table aud_rnb_modificacion 
  (
    mod_codigo integer,
    mod_embarcacion integer,
    mod_modificacion text,
    mod_fecha datetime year to day,
    mod_quien integer,
    mod_autoriza integer,
    desp_mod_codigo integer,
    desp_mod_embarcacion integer,
    desp_mod_modificacion text,
    desp_mod_fecha datetime year to day,
    desp_mod_quien integer,
    desp_mod_autoriza integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_modificacion from "public";

{ TABLE rnb_impuesto row size = 38 number of columns = 5 index size = 22 }

create table rnb_impuesto 
  (
    imp_codigo serial not null ,
    imp_embarcacion integer not null ,
    imp_circulacion money(16,2),
    imp_form_sat varchar(15),
    imp_fecha datetime year to day,
    primary key (imp_codigo,imp_embarcacion)  constraint pk_impuesto
  );

revoke all on rnb_impuesto from "public";

{ TABLE aud_rnb_impuesto row size = 96 number of columns = 13 index size = 0 }

create table aud_rnb_impuesto 
  (
    imp_codigo integer,
    imp_embarcacion integer,
    imp_circulacion money(16,2),
    imp_form_sat varchar(15),
    imp_fecha datetime year to day,
    desp_imp_codigo integer,
    desp_imp_embarcacion integer,
    desp_imp_circulacion money(16,2),
    desp_imp_form_sat varchar(15),
    desp_imp_fecha datetime year to day,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_impuesto from "public";

{ TABLE rnb_tipo_emb row size = 56 number of columns = 3 index size = 9 }

create table rnb_tipo_emb 
  (
    tip_codigo serial not null ,
    tip_desc_lg varchar(30),
    tip_desc_ct varchar(20),
    primary key (tip_codigo)  constraint pk_tipo_emb
  );

revoke all on rnb_tipo_emb from "public";

{ TABLE aud_rnb_tipo_emb row size = 132 number of columns = 9 index size = 0 }

create table aud_rnb_tipo_emb 
  (
    tip_codigo integer,
    tip_desc_lg varchar(30),
    tip_desc_ct varchar(20),
    desp_tip_codigo integer,
    desp_tip_desc_lg varchar(30),
    desp_tip_desc_ct varchar(20),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_tipo_emb from "public";

{ TABLE rnb_propietario row size = 398 number of columns = 15 index size = 37 }

create table rnb_propietario 
  (
    pro_nit varchar(15) not null ,
    pro_nom1 varchar(30),
    pro_nom2 varchar(30),
    pro_ape1 varchar(30),
    pro_ape2 varchar(30),
    pro_ape3 varchar(30),
    pro_dpi varchar(15),
    pro_cedula varchar(20),
    pro_direccion varchar(100),
    pro_dep_mun char(4),
    pro_pais smallint,
    pro_telefono char(15),
    pro_celular char(15),
    pro_email varchar(50),
    pro_tipo smallint,
    primary key (pro_nit)  constraint pk_propietario
  );

revoke all on rnb_propietario from "public";

{ TABLE aud_rnb_propietario row size = 816 number of columns = 33 index size = 0 }

create table aud_rnb_propietario 
  (
    pro_nit varchar(15),
    pro_nom1 varchar(30),
    pro_nom2 varchar(30),
    pro_ape1 varchar(30),
    pro_ape2 varchar(30),
    pro_ape3 varchar(30),
    pro_dpi varchar(15),
    pro_cedula varchar(20),
    pro_direccion varchar(100),
    pro_dep_mun char(4),
    pro_pais smallint,
    pro_telefono char(15),
    pro_celular char(15),
    pro_email varchar(50),
    pro_tipo smallint,
    desp_pro_nit varchar(15) not null ,
    desp_pro_nom1 varchar(30),
    desp_pro_nom2 varchar(30),
    desp_pro_ape1 varchar(30),
    desp_pro_ape2 varchar(30),
    desp_pro_ape3 varchar(30),
    desp_pro_dpi varchar(15),
    desp_pro_cedula varchar(20),
    desp_pro_direccion varchar(100),
    desp_pro_dep_mun char(4),
    desp_pro_pais smallint,
    desp_pro_telefono char(15),
    desp_pro_celular char(15),
    desp_pro_email varchar(50),
    desp_pro_tipo smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_propietario from "public";

{ TABLE rnb_color row size = 75 number of columns = 4 index size = 22 }

create table rnb_color 
  (
    col_codigo serial not null ,
    col_embarcacion integer not null ,
    col_color varchar(15),
    col_descr varchar(50),
    primary key (col_codigo,col_embarcacion)  constraint pk_color
  );

revoke all on rnb_color from "public";

{ TABLE aud_rnb_color row size = 170 number of columns = 11 index size = 0 }

create table aud_rnb_color 
  (
    col_codigo integer,
    col_embarcacion integer,
    col_color varchar(15),
    col_descr varchar(50),
    desp_col_codigo integer,
    desp_col_embarcacion integer,
    desp_col_color varchar(15),
    desp_col_descr varchar(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_color from "public";

{ TABLE rnb_embarcacion row size = 2036 number of columns = 43 index size = 57 }

create table rnb_embarcacion 
  (
    emb_codigo serial not null ,
    emb_nombre varchar(25),
    emb_propietario varchar(15) not null ,
    emb_rep_legal varchar(25),
    emb_dir_repleg varchar(100),
    emb_tel_repleg varchar(20),
    emb_matricula char(25),
    emb_tipo integer not null ,
    emb_ind_llama char(12),
    emb_imo varchar(15),
    emb_num_construc varchar(25),
    emb_lug_constr varchar(25),
    emb_marca integer not null ,
    emb_tripulantes integer,
    emb_operador varchar(25),
    emb_eslora decimal(6,2),
    emb_manga decimal(6,2),
    emb_puntal decimal(6,2),
    emb_calado decimal(6,2),
    emb_desplaza decimal(6,2),
    emb_mat_casco integer not null ,
    emb_pasajeros integer,
    emb_ton_neto decimal(12,2),
    emb_ton_bruto decimal(12,2),
    emb_cap_carga decimal(12,2),
    emb_cap_gas decimal(8,2),
    emb_cap_agua decimal(8,2),
    emb_freq_radio decimal(5,2),
    emb_freq_trab decimal(5,2),
    emb_autorizada varchar(50),
    emb_lugar_op varchar(50),
    emb_grav_desc varchar(250),
    emb_chalecos integer,
    emb_balsas integer,
    emb_botiquin integer,
    emb_ext_co2 integer,
    emb_ext_quim integer,
    emb_sist_incen integer,
    emb_obs varchar(250),
    emb_desc_color varchar(250),
    emb_desc_motor varchar(250),
    emb_desc_hp varchar(250),
    emb_desc_mot_serie varchar(250),
    primary key (emb_codigo)  constraint pk_embarcacion
  );

revoke all on rnb_embarcacion from "public";

{ TABLE aud_rnb_embarcacion row size = 4076 number of columns = 89 index size = 0 }

create table aud_rnb_embarcacion 
  (
    emb_codigo integer,
    emb_nombre varchar(25),
    emb_propietario varchar(15),
    emb_rep_legal varchar(25),
    emb_dir_repleg varchar(100),
    emb_tel_repleg varchar(20),
    emb_matricula char(25),
    emb_tipo integer,
    emb_ind_llama char(4),
    emb_imo varchar(15),
    emb_num_construc varchar(25),
    emb_lug_constr varchar(25),
    emb_marca integer,
    emb_tripulantes integer,
    emb_operador varchar(25),
    emb_eslora decimal(6,2),
    emb_manga decimal(6,2),
    emb_puntal decimal(6,2),
    emb_calado decimal(6,2),
    emb_desplaza decimal(6,2),
    emb_mat_casco integer,
    emb_pasajeros integer,
    emb_ton_neto decimal(12,2),
    emb_ton_bruto decimal(12,2),
    emb_cap_carga decimal(12,2),
    emb_cap_gas decimal(8,2),
    emb_cap_agua decimal(8,2),
    emb_freq_radio decimal(5,2),
    emb_freq_trab decimal(5,2),
    emb_autorizada varchar(50),
    emb_lugar_op varchar(50),
    emb_grav_desc varchar(250),
    emb_chalecos integer,
    emb_balsas integer,
    emb_botiquin integer,
    emb_ext_co2 integer,
    emb_ext_quim integer,
    emb_sist_incen integer,
    emb_obs varchar(250),
    emb_desc_color varchar(250),
    emb_desc_motor varchar(250),
    emb_desc_hp varchar(250),
    emb_desc_mot_serie varchar(250),
    desp_emb_codigo integer,
    desp_emb_nombre varchar(25),
    desp_emb_propietario varchar(15),
    desp_emb_rep_legal varchar(25),
    desp_emb_dir_repleg varchar(100),
    desp_emb_tel_repleg varchar(20),
    desp_emb_matricula char(25),
    desp_emb_tipo integer,
    desp_emb_ind_llama char(4),
    desp_emb_imo varchar(15),
    desp_emb_num_construc varchar(25),
    desp_emb_lug_constr varchar(25),
    desp_emb_marca integer,
    desp_emb_tripulantes integer,
    desp_emb_operador varchar(25),
    desp_emb_eslora decimal(6,2),
    desp_emb_manga decimal(6,2),
    desp_emb_puntal decimal(6,2),
    desp_emb_calado decimal(6,2),
    desp_emb_desplaza decimal(6,2),
    desp_emb_mat_casco integer,
    desp_emb_pasajeros integer,
    desp_emb_ton_neto decimal(12,2),
    desp_emb_ton_bruto decimal(12,2),
    desp_emb_cap_carga decimal(12,2),
    desp_emb_cap_gas decimal(8,2),
    desp_emb_cap_agua decimal(8,2),
    desp_emb_freq_radio decimal(5,2),
    desp_emb_freq_trab decimal(5,2),
    desp_emb_autorizada varchar(50),
    desp_emb_lugar_op varchar(50),
    desp_emb_grav_desc varchar(250),
    desp_emb_chalecos integer,
    desp_emb_balsas integer,
    desp_emb_botiquin integer,
    desp_emb_ext_co2 integer,
    desp_emb_ext_quim integer,
    desp_emb_sist_incen integer,
    desp_emb_obs varchar(250),
    desp_emb_desc_color varchar(250),
    desp_emb_desc_motor varchar(250),
    desp_emb_desc_hp varchar(250),
    desp_emb_desc_mot_serie varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_embarcacion from "public";

{ TABLE rnb_licencia row size = 58 number of columns = 12 index size = 37 }

create table rnb_licencia 
  (
    lic_codigo char(10) not null ,
    lic_embarcacion integer not null ,
    lic_correlativo integer,
    lic_anno integer,
    lic_fecha datetime year to day,
    lic_inspector integer not null ,
    lic_fecha_insp datetime year to day not null ,
    lic_secretario integer,
    lic_comandante integer,
    lic_dependencia integer not null ,
    lic_precio money(16,2),
    lic_situacion char(1),
    primary key (lic_codigo,lic_embarcacion)  constraint pk_licencia
  );

revoke all on rnb_licencia from "public";

{ TABLE aud_rnb_licencia row size = 136 number of columns = 27 index size = 0 }

create table aud_rnb_licencia 
  (
    lic_codigo char(10),
    lic_embarcacion integer,
    lic_correlativo integer,
    lic_anno integer,
    lic_fecha datetime year to day,
    lic_inspector integer,
    lic_fecha_insp datetime year to day,
    lic_secretario integer,
    lic_comandante integer,
    lic_dependencia integer,
    lic_precio money(16,2),
    lic_situacion char(1),
    desp_lic_codigo char(10),
    desp_lic_embarcacion integer,
    desp_lic_correlativo integer,
    desp_lic_anno integer,
    desp_lic_fecha datetime year to day,
    desp_lic_inspector integer,
    desp_lic_fecha_insp datetime year to day,
    desp_lic_secretario integer,
    desp_lic_comandante integer,
    desp_lic_dependencia integer,
    desp_lic_precio money(16,2),
    desp_lic_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_licencia from "public";

{ TABLE rnb_usuario row size = 13 number of columns = 4 index size = 18 }

create table rnb_usuario 
  (
    usu_catalogo integer not null ,
    usu_dependencia integer not null ,
    usu_situacion char(1),
    usu_nivel integer,
    primary key (usu_catalogo)  constraint pk_usuario
  );

revoke all on rnb_usuario from "public";

{ TABLE aud_rnb_usuario row size = 46 number of columns = 11 index size = 0 }

create table aud_rnb_usuario 
  (
    usu_catalogo integer,
    usu_dependencia integer,
    usu_situacion char(1),
    usu_nivel integer,
    desp_usu_catalogo integer,
    desp_usu_dependencia integer,
    desp_usu_situacion char(1),
    desp_usu_nivel integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_usuario from "public";

{ TABLE rnb_inspeccion row size = 208 number of columns = 12 index size = 42 }

create table rnb_inspeccion 
  (
    insp_codigo char(15) not null ,
    insp_embarcacion integer not null ,
    insp_correlativo integer,
    insp_anno integer,
    insp_fecha datetime year to minute,
    insp_lugar varchar(100),
    insp_inspector integer,
    insp_secretario integer,
    insp_comandante integer,
    insp_dependencia integer not null ,
    insp_observacion text,
    insp_resultado char(1),
    primary key (insp_codigo,insp_embarcacion)  constraint pk_inspeccion
  );

revoke all on rnb_inspeccion from "public";

{ TABLE aud_rnb_inspeccion row size = 436 number of columns = 27 index size = 0 }

create table aud_rnb_inspeccion 
  (
    insp_codigo char(15),
    insp_embarcacion integer,
    insp_correlativo integer,
    insp_anno integer,
    insp_fecha datetime year to minute,
    insp_lugar varchar(100),
    insp_inspector integer,
    insp_secretario integer,
    insp_comandante integer,
    insp_dependencia integer,
    insp_observacion text,
    insp_resultado char(1),
    desp_insp_codigo char(15),
    desp_insp_embarcacion integer,
    desp_insp_correlativo integer,
    desp_insp_anno integer,
    desp_insp_fecha datetime year to minute,
    desp_insp_lugar varchar(100),
    desp_insp_inspector integer,
    desp_insp_secretario integer,
    desp_insp_comandante integer,
    desp_insp_dependencia integer,
    desp_insp_observacion text,
    desp_insp_resultado char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_inspeccion from "public";

{ TABLE rnb_dependencia row size = 189 number of columns = 6 index size = 18 }

create table rnb_dependencia 
  (
    dep_codigo serial not null ,
    dep_desc_lg varchar(100),
    dep_desc_md varchar(50),
    dep_desc_ct varchar(25),
    dep_lugar char(4),
    dep_clave char(3),
    primary key (dep_codigo)  constraint pk_dependencia
  );

revoke all on rnb_dependencia from "public";

{ TABLE aud_rnb_dependencia row size = 398 number of columns = 15 index size = 0 }

create table aud_rnb_dependencia 
  (
    dep_codigo integer,
    dep_desc_lg varchar(100),
    dep_desc_md varchar(50),
    dep_desc_ct varchar(25),
    dep_lugar char(4),
    dep_clave char(3),
    desp_dep_codigo integer,
    desp_dep_desc_lg varchar(100),
    desp_dep_desc_md varchar(50),
    desp_dep_desc_ct varchar(25),
    desp_dep_lugar char(4),
    desp_dep_clave char(3),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_dependencia from "public";

{ TABLE rnb_matricula row size = 72 number of columns = 12 index size = 52 }

create table rnb_matricula 
  (
    mat_codigo char(25) not null ,
    mat_embarcacion integer not null ,
    mat_correlativo integer,
    mat_libro integer,
    mat_folio integer,
    mat_anno integer,
    mat_fecha datetime year to day,
    mat_secretario integer,
    mat_comandante integer,
    mat_dependencia integer not null ,
    mat_precio money(16,2),
    mat_situacion char(1),
    primary key (mat_codigo,mat_embarcacion)  constraint pk_matricula
  );

revoke all on rnb_matricula from "public";

{ TABLE aud_rnb_matricula row size = 164 number of columns = 27 index size = 0 }

create table aud_rnb_matricula 
  (
    mat_codigo char(25),
    mat_embarcacion integer,
    mat_correlativo integer,
    mat_libro integer,
    mat_folio integer,
    mat_anno integer,
    mat_fecha datetime year to day,
    mat_secretario integer,
    mat_comandante integer,
    mat_dependencia integer,
    mat_precio money(16,2),
    mat_situacion char(1),
    desp_mat_codigo char(25),
    desp_mat_embarcacion integer,
    desp_mat_correlativo integer,
    desp_mat_libro integer,
    desp_mat_folio integer,
    desp_mat_anno integer,
    desp_mat_fecha datetime year to day,
    desp_mat_secretario integer,
    desp_mat_comandante integer,
    desp_mat_dependencia integer,
    desp_mat_precio money(16,2),
    desp_mat_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_matricula from "public";

{ TABLE rnb_zarpe_inter row size = 245 number of columns = 7 index size = 64 }

create table rnb_zarpe_inter 
  (
    zarin_codigo serial not null ,
    zarin_zarpe char(25) not null ,
    zarin_linea integer,
    zarin_titulo varchar(100),
    zarin_autoridad varchar(100),
    zarin_fechaini datetime year to day,
    zarin_fechafin datetime year to day,
    primary key (zarin_codigo,zarin_zarpe)  constraint pk_zarp_int
  );

revoke all on rnb_zarpe_inter from "public";

{ TABLE aud_rnb_zarpe_inter row size = 510 number of columns = 17 index size = 0 }

create table aud_rnb_zarpe_inter 
  (
    zarin_codigo integer,
    zarin_zarpe char(25),
    zarin_linea integer,
    zarin_titulo varchar(100),
    zarin_autoridad varchar(100),
    zarin_fechaini datetime year to day,
    zarin_fechafin datetime year to day,
    desp_zarin_codigo integer,
    desp_zarin_zarpe char(25),
    desp_zarin_linea integer,
    desp_zarin_titulo varchar(100),
    desp_zarin_autoridad varchar(100),
    desp_zarin_fechaini datetime year to day,
    desp_zarin_fechafin datetime year to day,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_zarpe_inter from "public";

{ TABLE rnb_zarpe row size = 1391 number of columns = 30 index size = 39 }

create table rnb_zarpe 
  (
    zar_codigo char(25) not null ,
    zar_emb_codigo integer,
    zar_correlativo integer,
    zar_anno integer,
    zar_fecha datetime year to minute,
    zar_secretario integer,
    zar_comandante integer,
    zar_dependencia integer not null ,
    zar_precio money(16,2) not null ,
    zar_matricula varchar(25),
    zar_emb_nombre varchar(25),
    zar_propietario varchar(50),
    zar_pro_direccion varchar(50),
    zar_bandera varchar(25),
    zar_pregistro varchar(50),
    zar_fregistro datetime year to day,
    zar_imo varchar(25),
    zar_indll varchar(8),
    zar_tipo varchar(25),
    zar_tonb decimal(12,2),
    zar_tonn decimal(12,2),
    zar_lcons varchar(50),
    zar_tripulantes integer,
    zar_pasajeros integer,
    zar_capitan varchar(50) not null ,
    zar_agente_mar varchar(50),
    zar_manifes_cargo varchar(250),
    zar_ultimos_puertos varchar(250),
    zar_desc_carga varchar(250),
    zar_destino varchar(100),
    primary key (zar_codigo)  constraint pk_zarpe
  );

revoke all on rnb_zarpe from "public";

{ TABLE aud_rnb_zarpe row size = 2802 number of columns = 63 index size = 0 }

create table aud_rnb_zarpe 
  (
    zar_codigo char(25),
    zar_emb_codigo integer,
    zar_correlativo integer,
    zar_anno integer,
    zar_fecha datetime year to minute,
    zar_secretario integer,
    zar_comandante integer,
    zar_dependencia integer,
    zar_precio money(16,2),
    zar_matricula varchar(25),
    zar_emb_nombre varchar(25),
    zar_propietario varchar(50),
    zar_pro_direccion varchar(50),
    zar_bandera varchar(25),
    zar_pregistro varchar(50),
    zar_fregistro datetime year to day,
    zar_imo varchar(25),
    zar_indll varchar(8),
    zar_tipo varchar(25),
    zar_tonb decimal(12,2),
    zar_tonn decimal(12,2),
    zar_lcons varchar(50),
    zar_tripulantes integer,
    zar_pasajeros integer,
    zar_capitan varchar(50),
    zar_agente_mar varchar(50),
    zar_manifes_cargo varchar(250),
    zar_ultimos_puertos varchar(250),
    zar_desc_carga varchar(250),
    zar_destino varchar(100),
    desp_zar_codigo char(25),
    desp_zar_emb_codigo integer,
    desp_zar_correlativo integer,
    desp_zar_anno integer,
    desp_zar_fecha datetime year to minute,
    desp_zar_secretario integer,
    desp_zar_comandante integer,
    desp_zar_dependencia integer,
    desp_zar_precio money(16,2),
    desp_zar_matricula varchar(25),
    desp_zar_emb_nombre varchar(25),
    desp_zar_propietario varchar(50),
    desp_zar_pro_direccion varchar(50),
    desp_zar_bandera varchar(25),
    desp_zar_pregistro varchar(50),
    desp_zar_fregistro datetime year to day,
    desp_zar_imo varchar(25),
    desp_zar_indll varchar(8),
    desp_zar_tipo varchar(25),
    desp_zar_tonb decimal(12,2),
    desp_zar_tonn decimal(12,2),
    desp_zar_lcons varchar(50),
    desp_zar_tripulantes integer,
    desp_zar_pasajeros integer,
    desp_zar_capitan varchar(50),
    desp_zar_agente_mar varchar(50),
    desp_zar_manifes_cargo varchar(250),
    desp_zar_ultimos_puertos varchar(250),
    desp_zar_desc_carga varchar(250),
    desp_zar_destino varchar(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_zarpe from "public";

{ TABLE rnb_bitacora row size = 79 number of columns = 6 index size = 9 }

create table rnb_bitacora 
  (
    bit_codigo serial not null ,
    bit_tipo varchar(3) not null ,
    bit_accion text not null ,
    bit_fecha datetime year to minute not null ,
    bit_quien integer not null ,
    bit_dependencia integer not null ,
    primary key (bit_codigo)  constraint pk_bita
  );

revoke all on rnb_bitacora from "public";

{ TABLE aud_rnb_bitacora row size = 178 number of columns = 15 index size = 0 }

create table aud_rnb_bitacora 
  (
    bit_codigo integer,
    bit_tipo varchar(3),
    bit_accion text,
    bit_fecha datetime year to minute,
    bit_quien integer,
    bit_dependencia integer,
    desp_bit_codigo integer,
    desp_bit_tipo varchar(3),
    desp_bit_accion text,
    desp_bit_fecha datetime year to minute,
    desp_bit_quien integer,
    desp_bit_dependencia integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_bitacora from "public";

{ TABLE rnb_atraque row size = 571 number of columns = 24 index size = 39 }

create table rnb_atraque 
  (
    atra_codigo char(25) not null ,
    atra_emb_codigo integer,
    atra_correlativo integer,
    atra_anno integer,
    atra_fecha datetime year to minute,
    atra_secretario integer,
    atra_comandante integer,
    atra_dependencia integer not null ,
    atra_matricula varchar(25),
    atra_emb_nombre varchar(25),
    atra_propietario varchar(50),
    atra_pro_direccion varchar(50),
    atra_bandera varchar(25),
    atra_pregistro varchar(50),
    atra_fregistro datetime year to day,
    atra_imo varchar(25),
    atra_indll varchar(8),
    atra_tipo varchar(25),
    atra_tipoatra char(1),
    atra_tonb decimal(12,2) not null ,
    atra_tonn decimal(12,2) not null ,
    atra_capitan varchar(50) not null ,
    atra_agente_mar varchar(50),
    atra_procedente varchar(100) not null ,
    primary key (atra_codigo) 
  );

revoke all on rnb_atraque from "public";

{ TABLE aud_rnb_atraque row size = 1162 number of columns = 51 index size = 0 }

create table aud_rnb_atraque 
  (
    atra_codigo char(25),
    atra_emb_codigo integer,
    atra_correlativo integer,
    atra_anno integer,
    atra_fecha datetime year to minute,
    atra_secretario integer,
    atra_comandante integer,
    atra_dependencia integer,
    atra_matricula varchar(25),
    atra_emb_nombre varchar(25),
    atra_propietario varchar(50),
    atra_pro_direccion varchar(50),
    atra_bandera varchar(25),
    atra_pregistro varchar(50),
    atra_fregistro datetime year to day,
    atra_imo varchar(25),
    atra_indll varchar(8),
    atra_tipo varchar(25),
    atra_tipoatra char(1),
    atra_tonb decimal(12,2),
    atra_tonn decimal(12,2),
    atra_capitan varchar(50),
    atra_agente_mar varchar(50),
    atra_procedente varchar(100),
    desp_atra_codigo char(25),
    desp_atra_emb_codigo integer,
    desp_atra_correlativo integer,
    desp_atra_anno integer,
    desp_atra_fecha datetime year to minute,
    desp_atra_secretario integer,
    desp_atra_comandante integer,
    desp_atra_dependencia integer,
    desp_atra_matricula varchar(25),
    desp_atra_emb_nombre varchar(25),
    desp_atra_propietario varchar(50),
    desp_atra_pro_direccion varchar(50),
    desp_atra_bandera varchar(25),
    desp_atra_pregistro varchar(50),
    desp_atra_fregistro datetime year to day,
    desp_atra_imo varchar(25),
    desp_atra_indll varchar(8),
    desp_atra_tipo varchar(25),
    desp_atra_tipoatra char(1),
    desp_atra_tonb decimal(12,2),
    desp_atra_tonn decimal(12,2),
    desp_atra_capitan varchar(50),
    desp_atra_agente_mar varchar(50),
    desp_atra_procedente varchar(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rnb_atraque from "public";

{ TABLE peva_detpersonal row size = 520 number of columns = 7 index size = 18 }

create table peva_detpersonal 
  (
    det_noevaas varchar(1,1) not null ,
    det_catalogo integer not null ,
    det_grado integer not null ,
    det_puesto varchar(250) not null ,
    det_tiempo varchar(250) not null ,
    det_depen integer,
    det_clasificacion integer not null ,
    primary key (det_noevaas,det_catalogo)  constraint pk_ofas_cat
  );

revoke all on peva_detpersonal from "public";

{ TABLE aud_peva_detpersonal row size = 1060 number of columns = 17 index size = 0 }

create table aud_peva_detpersonal 
  (
    det_noevaas varchar(1,1),
    det_catalogo integer,
    det_grado integer,
    det_puesto varchar(250),
    det_tiempo varchar(250),
    det_depen integer,
    det_clasificacion integer,
    desp_det_noevaas varchar(1,1),
    desp_det_catalogo integer,
    desp_det_grado integer,
    desp_det_puesto varchar(250),
    desp_det_tiempo varchar(250),
    desp_det_depen integer,
    desp_det_clasificacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_detpersonal from "public";

{ TABLE aud_peva_boletasas row size = 646 number of columns = 37 index size = 0 }

create table aud_peva_boletasas 
  (
    eva_noevaas varchar(1,1),
    eva_catalogo integer,
    eva_periodo integer,
    eva_perfil integer,
    eva_eval1 integer,
    eva_eval2 integer,
    eva_eval3 integer,
    eva_eval4 integer,
    eva_pafe integer,
    eva_demeritos integer,
    eva_arrestos integer,
    eva_subt_salud integer,
    eva_subt_concep integer,
    eva_total integer,
    eva_catg1 integer,
    eva_catcomte integer,
    eva_obs varchar(250),
    desp_eva_noevaas varchar(1,1),
    desp_eva_catalogo integer,
    desp_eva_periodo integer,
    desp_eva_perfil integer,
    desp_eva_eval1 integer,
    desp_eva_eval2 integer,
    desp_eva_eval3 integer,
    desp_eva_eval4 integer,
    desp_eva_pafe integer,
    desp_eva_demeritos integer,
    desp_eva_arrestos integer,
    desp_eva_subt_salud integer,
    desp_eva_subt_concep integer,
    desp_eva_total integer,
    desp_eva_catg1 integer,
    desp_eva_catcomte integer,
    desp_eva_obs varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_boletasas from "public";

{ TABLE peva_certificaas row size = 269 number of columns = 6 index size = 18 }

create table peva_certificaas 
  (
    cer_noevaas varchar(1,1) not null ,
    cer_catalogo integer not null ,
    cer_status integer not null ,
    cer_certificador integer not null ,
    cer_fecha date not null ,
    cer_obs varchar(250),
    primary key (cer_noevaas,cer_catalogo)  constraint pk_ofasi_cert
  );

revoke all on peva_certificaas from "public";

{ TABLE aud_peva_certificaas row size = 558 number of columns = 15 index size = 0 }

create table aud_peva_certificaas 
  (
    cer_noevaas varchar(1,1),
    cer_catalogo integer,
    cer_status integer,
    cer_certificador integer,
    cer_fecha date,
    cer_obs varchar(250),
    desp_cer_noevaas varchar(1,1),
    desp_cer_catalogo integer,
    desp_cer_status integer,
    desp_cer_certificador integer,
    desp_cer_fecha date,
    desp_cer_obs varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_certificaas from "public";

{ TABLE peva_detbolconcep row size = 18 number of columns = 5 index size = 26 }

create table peva_detbolconcep 
  (
    con_noevaas varchar(1,1) not null ,
    con_evaluado integer not null ,
    con_periodo integer not null ,
    con_pregunta integer not null ,
    con_nota integer not null ,
    primary key (con_noevaas,con_evaluado,con_periodo,con_pregunta)  constraint pk_ofasi_bol_concp
  );

revoke all on peva_detbolconcep from "public";

{ TABLE aud_peva_detbolconcep row size = 56 number of columns = 13 index size = 0 }

create table aud_peva_detbolconcep 
  (
    con_noevaas varchar(1,1),
    con_evaluado integer,
    con_periodo integer,
    con_pregunta integer,
    con_nota integer,
    desp_con_noevaas varchar(1,1),
    desp_con_evaluado integer,
    desp_con_periodo integer,
    desp_con_pregunta integer,
    desp_con_nota integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_peva_detbolconcep from "public";

{ TABLE peva_boletasas row size = 311 number of columns = 17 index size = 23 }

create table peva_boletasas 
  (
    eva_noevaas varchar(1,1),
    eva_catalogo integer,
    eva_periodo smallint not null ,
    eva_perfil integer,
    eva_eval1 integer,
    eva_eval2 integer,
    eva_eval3 integer,
    eva_eval4 integer,
    eva_pafe integer,
    eva_demeritos integer,
    eva_arrestos integer,
    eva_subt_salud integer,
    eva_subt_concep integer,
    eva_total integer,
    eva_catg1 integer,
    eva_catcomte integer,
    eva_obs varchar(250),
    primary key (eva_noevaas)  constraint pk_ofasi_bol
  );

revoke all on peva_boletasas from "public";

{ TABLE larm_inventario row size = 37 number of columns = 9 index size = 18 }

create table larm_inventario 
  (
    inv_id serial not null ,
    inv_numero char(20) not null ,
    inv_tipo smallint not null ,
    inv_lote smallint not null ,
    inv_dependencia smallint not null ,
    imv_fecha date not null ,
    inv_status char(1) not null ,
    inv_map char(1),
    inv_museo char(1),
    primary key (inv_id)  constraint pk_id_invent
  );

revoke all on larm_inventario from "public";

{ TABLE aud_larm_inventario row size = 94 number of columns = 21 index size = 0 }

create table aud_larm_inventario 
  (
    inv_id integer,
    inv_numero char(20),
    inv_tipo smallint,
    inv_lote smallint,
    inv_dependencia smallint,
    imv_fecha date,
    inv_status char(1),
    inv_map char(1),
    inv_museo char(1),
    desp_inv_id integer,
    desp_inv_numero char(20),
    desp_inv_tipo smallint,
    desp_inv_lote smallint,
    desp_inv_dependencia smallint,
    desp_imv_fecha date,
    desp_inv_status char(1),
    desp_inv_map char(1),
    desp_inv_museo char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_larm_inventario from "public";

{ TABLE pictures row size = 60 number of columns = 2 index size = 9 }

create table pictures 
  (
    pic_id integer not null ,
    pic_cat byte not null ,
    primary key (pic_id)  constraint pk_picture
  );

revoke all on pictures from "public";

{ TABLE his_morg row size = 156 number of columns = 9 index size = 0 }

create table his_morg 
  (
    his_code serial not null ,
    his_plaza integer not null ,
    his_ceom char(6) not null ,
    his_grado smallint not null ,
    his_plaza_desc char(75) not null ,
    his_desc_empleo char(45),
    his_accion char(1) not null ,
    his_usuario char(12) not null ,
    his_hora datetime year to minute not null 
  );

revoke all on his_morg from "public";

{ TABLE larm_hallazgo row size = 372 number of columns = 7 index size = 29 }

create table larm_hallazgo 
  (
    hall_cat integer not null ,
    hall_numero smallint not null ,
    hall_fecha date not null ,
    hall_texto varchar(255) not null ,
    hall_documento varchar(100),
    hall_status char(1) not null ,
    hall_usuario integer not null ,
    primary key (hall_cat,hall_numero)  constraint pk_hallazgo
  );

revoke all on larm_hallazgo from "public";

{ TABLE aud_larm_hallazgo row size = 764 number of columns = 17 index size = 0 }

create table aud_larm_hallazgo 
  (
    hall_cat integer,
    hall_numero smallint,
    hall_fecha date,
    hall_texto varchar(255),
    hall_documento varchar(100),
    hall_status char(1),
    hall_usuario integer,
    desp_hall_cat integer,
    desp_hall_numero smallint,
    desp_hall_fecha date,
    desp_hall_texto varchar(255),
    desp_hall_documento varchar(100),
    desp_hall_status char(1),
    desp_hall_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_larm_hallazgo from "public";

{ TABLE per row size = 4 number of columns = 1 index size = 0 }

create table per 
  (
    cat integer
  );

revoke all on per from "public";

{ TABLE lveh_neumaticos row size = 55 number of columns = 2 index size = 9 }

create table lveh_neumaticos 
  (
    neu_code integer not null ,
    neu_desc varchar(50,1) not null ,
    primary key (neu_code)  constraint pk_llantas
  );

revoke all on lveh_neumaticos from "public";

{ TABLE aud_lveh_neumaticos row size = 130 number of columns = 7 index size = 0 }

create table aud_lveh_neumaticos 
  (
    neu_code integer,
    neu_desc varchar(50,1),
    desp_neu_code integer,
    desp_neu_desc varchar(50,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_neumaticos from "public";

{ TABLE lveh_det_neumaticos row size = 32 number of columns = 7 index size = 35 }

create table lveh_det_neumaticos 
  (
    det_neu_catalogo integer not null ,
    det_neu_llanta integer not null ,
    det_neu_serial integer not null ,
    det_neu_fecha datetime year to second not null ,
    det_neu_cantidad integer not null ,
    det_neu_rin integer not null ,
    det_neu_llanta2 integer,
    primary key (det_neu_catalogo,det_neu_llanta,det_neu_serial)  constraint pk_detllant
  );

revoke all on lveh_det_neumaticos from "public";

{ TABLE aud_lveh_det_neumaticos row size = 84 number of columns = 17 index size = 0 }

create table aud_lveh_det_neumaticos 
  (
    det_neu_catalogo integer,
    det_neu_llanta integer,
    det_neu_serial integer,
    det_neu_fecha datetime year to second,
    det_neu_cantidad integer,
    det_neu_rin integer,
    det_neu_llanta2 integer,
    desp_det_neu_catalogo integer,
    desp_det_neu_llanta integer,
    desp_det_neu_serial integer,
    desp_det_neu_fecha datetime year to second,
    desp_det_neu_cantidad integer,
    desp_det_neu_rin integer,
    desp_det_neu_llanta2 integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_det_neumaticos from "public";

{ TABLE lveh_det_plaza row size = 16 number of columns = 3 index size = 39 }

create table lveh_det_plaza 
  (
    det_pla_catalogo integer not null ,
    det_pla_plaza integer not null ,
    det_pla_fecha datetime year to second not null ,
    primary key (det_pla_catalogo,det_pla_plaza,det_pla_fecha)  constraint pk_plazas
  );

revoke all on lveh_det_plaza from "public";

{ TABLE aud_lveh_det_plaza row size = 52 number of columns = 9 index size = 0 }

create table aud_lveh_det_plaza 
  (
    det_pla_catalogo integer,
    det_pla_plaza integer,
    det_pla_fecha datetime year to second,
    desp_det_pla_catalogo integer,
    desp_det_pla_plaza integer,
    desp_det_pla_fecha datetime year to second,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_det_plaza from "public";

{ TABLE lveh_det_otros row size = 121 number of columns = 5 index size = 35 }

create table lveh_det_otros 
  (
    det_otros_catalogo integer not null ,
    det_otros_caracteristica integer not null ,
    det_otros_serial integer not null ,
    det_otros_fecha datetime year to second not null ,
    det_otros_dato varchar(100,1) not null ,
    primary key (det_otros_catalogo,det_otros_caracteristica,det_otros_serial)  constraint 
              pk_detalleotros_veh
  );

revoke all on lveh_det_otros from "public";

{ TABLE aud_lveh_det_otros row size = 262 number of columns = 13 index size = 0 }

create table aud_lveh_det_otros 
  (
    det_otros_catalogo integer,
    det_otros_caracteristica integer,
    det_otros_serial integer,
    det_otros_fecha datetime year to second,
    det_otros_dato varchar(100,1),
    desp_det_otros_catalogo integer,
    desp_det_otros_caracteristica integer,
    desp_det_otros_serial integer,
    desp_det_otros_fecha datetime year to second,
    desp_det_otros_dato varchar(100,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_det_otros from "public";

{ TABLE lveh_estilo row size = 59 number of columns = 3 index size = 18 }

create table lveh_estilo 
  (
    estilo_code integer not null ,
    estilo_desc varchar(50,1) not null ,
    estilo_marcas integer not null ,
    primary key (estilo_code)  constraint pk_estilo_veh
  );

revoke all on lveh_estilo from "public";

{ TABLE aud_lveh_estilo row size = 138 number of columns = 9 index size = 0 }

create table aud_lveh_estilo 
  (
    estilo_code integer,
    estilo_desc varchar(50,1),
    estilo_marcas integer,
    desp_estilo_code integer,
    desp_estilo_desc varchar(50,1),
    desp_estilo_marcas integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_estilo from "public";

{ TABLE lveh_marcas row size = 59 number of columns = 3 index size = 18 }

create table lveh_marcas 
  (
    mar_code integer not null ,
    mar_desc varchar(50,1) not null ,
    mar_tipo integer not null ,
    primary key (mar_code)  constraint pk_mar_veh
  );

revoke all on lveh_marcas from "public";

{ TABLE aud_lveh_marcas row size = 138 number of columns = 9 index size = 0 }

create table aud_lveh_marcas 
  (
    mar_code integer,
    mar_desc varchar(50,1),
    mar_tipo integer,
    desp_mar_code integer,
    desp_mar_desc varchar(50,1),
    desp_mar_tipo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_marcas from "public";

{ TABLE lveh_tipo row size = 55 number of columns = 2 index size = 9 }

create table lveh_tipo 
  (
    tip_code integer not null ,
    tip_desc varchar(50,1) not null ,
    primary key (tip_code)  constraint pk_tipo_veh
  );

revoke all on lveh_tipo from "public";

{ TABLE aud_lveh_tipo row size = 130 number of columns = 7 index size = 0 }

create table aud_lveh_tipo 
  (
    tip_code integer,
    tip_desc varchar(50,1),
    desp_tip_code integer,
    desp_tip_desc varchar(50,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_tipo from "public";

{ TABLE lvehiculos row size = 201 number of columns = 14 index size = 36 }

create table lvehiculos 
  (
    veh_catalogo integer not null ,
    veh_placas varchar(20,1) not null ,
    veh_chasis varchar(30,1) not null ,
    veh_vin varchar(30,1) not null ,
    veh_serie varchar(30,1) not null ,
    veh_tipo integer not null ,
    veh_marca integer not null ,
    veh_estilo integer not null ,
    veh_modelo integer not null ,
    veh_asientos integer not null ,
    veh_puertas integer not null ,
    veh_traccion varchar(50,1) not null ,
    veh_ejes integer not null ,
    veh_tonelaje integer not null ,
    primary key (veh_catalogo)  constraint pk_catveh
  );

revoke all on lvehiculos from "public";

{ TABLE aud_lvehiculos row size = 422 number of columns = 31 index size = 0 }

create table aud_lvehiculos 
  (
    veh_catalogo integer,
    veh_placas varchar(20,1),
    veh_chasis varchar(30,1),
    veh_vin varchar(30,1),
    veh_serie varchar(30,1),
    veh_tipo integer,
    veh_marca integer,
    veh_estilo integer,
    veh_modelo integer,
    veh_asientos integer,
    veh_puertas integer,
    veh_traccion varchar(50,1),
    veh_ejes integer,
    veh_tonelaje integer,
    desp_veh_catalogo integer,
    desp_veh_placas varchar(20,1),
    desp_veh_chasis varchar(30,1),
    desp_veh_vin varchar(30,1),
    desp_veh_serie varchar(30,1),
    desp_veh_tipo integer,
    desp_veh_marca integer,
    desp_veh_estilo integer,
    desp_veh_modelo integer,
    desp_veh_asientos integer,
    desp_veh_puertas integer,
    desp_veh_traccion varchar(50,1),
    desp_veh_ejes integer,
    desp_veh_tonelaje integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lvehiculos from "public";

{ TABLE lveh_det_transmision row size = 41 number of columns = 5 index size = 56 }

create table lveh_det_transmision 
  (
    det_trans_catalogo integer not null ,
    det_trans_tipo varchar(20,1) not null ,
    det_trans_fecha datetime year to second not null ,
    det_trans_aceite integer not null ,
    det_trans_aceitecant integer not null ,
    primary key (det_trans_catalogo,det_trans_tipo,det_trans_fecha)  constraint pk_dettrans_veh
  );

revoke all on lveh_det_transmision from "public";

{ TABLE lveh_det_motor row size = 91 number of columns = 10 index size = 95 }

create table lveh_det_motor 
  (
    det_mot_catalogo integer not null ,
    det_mot_numero varchar(50,1) not null ,
    det_mot_fecha datetime year to second not null ,
    det_mot_cilindros integer not null ,
    det_mot_cilindraje integer not null ,
    det_mot_combustible integer not null ,
    det_mot_autonomia integer not null ,
    det_mot_aceite integer not null ,
    det_mot_aceitecant integer not null ,
    det_mot_eficiencia integer not null ,
    primary key (det_mot_catalogo,det_mot_numero,det_mot_fecha)  constraint pk_detmot_veh
  );

revoke all on lveh_det_motor from "public";

{ TABLE aud_lveh_det_motor row size = 202 number of columns = 23 index size = 0 }

create table aud_lveh_det_motor 
  (
    det_mot_catalogo integer,
    det_mot_numero varchar(50,1),
    det_mot_fecha datetime year to second,
    det_mot_cilindros integer,
    det_mot_cilindraje integer,
    det_mot_combustible integer,
    det_mot_autonomia integer,
    det_mot_aceite integer,
    det_mot_aceitecant integer,
    det_mot_eficiencia integer,
    desp_det_mot_catalogo integer,
    desp_det_mot_numero varchar(50,1),
    desp_det_mot_fecha datetime year to second,
    desp_det_mot_cilindros integer,
    desp_det_mot_cilindraje integer,
    desp_det_mot_combustible integer,
    desp_det_mot_autonomia integer,
    desp_det_mot_aceite integer,
    desp_det_mot_aceitecant integer,
    desp_det_mot_eficiencia integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_det_motor from "public";

{ TABLE lveh_solicitud row size = 539 number of columns = 12 index size = 50 }

create table lveh_solicitud 
  (
    sol_numero integer not null ,
    sol_dependencia smallint not null ,
    sol_fecha datetime year to second not null ,
    sol_tipo integer not null ,
    sol_motivo varchar(200,1) not null ,
    sol_observaciones varchar(200,1) not null ,
    sol_estatus integer not null ,
    sol_cat_comte integer not null ,
    sol_cat_logistico integer not null ,
    sol_cat_usuario integer not null ,
    sol_grado smallint not null ,
    sol_referencia varchar(100,1) not null ,
    primary key (sol_numero)  constraint pk_solic_veh
  );

revoke all on lveh_solicitud from "public";

{ TABLE aud_lveh_solicitud row size = 1098 number of columns = 27 index size = 0 }

create table aud_lveh_solicitud 
  (
    sol_numero integer,
    sol_dependencia smallint,
    sol_fecha datetime year to second,
    sol_tipo integer,
    sol_motivo varchar(200,1),
    sol_observaciones varchar(200,1),
    sol_estatus integer,
    sol_cat_comte integer,
    sol_cat_logistico integer,
    sol_cat_usuario integer,
    sol_grado smallint,
    sol_referencia varchar(100,1),
    desp_sol_numero integer,
    desp_sol_dependencia smallint,
    desp_sol_fecha datetime year to second,
    desp_sol_tipo integer,
    desp_sol_motivo varchar(200,1),
    desp_sol_observaciones varchar(200,1),
    desp_sol_estatus integer,
    desp_sol_cat_comte integer,
    desp_sol_cat_logistico integer,
    desp_sol_cat_usuario integer,
    desp_sol_grado smallint,
    desp_sol_referencia varchar(100,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_solicitud from "public";

{ TABLE lveh_combustible row size = 59 number of columns = 3 index size = 9 }

create table lveh_combustible 
  (
    com_code integer not null ,
    com_desc varchar(50,1) not null ,
    com_situacion integer not null ,
    primary key (com_code)  constraint pk_comb_veh
  );

revoke all on lveh_combustible from "public";

{ TABLE aud_lveh_combustible row size = 130 number of columns = 7 index size = 0 }

create table aud_lveh_combustible 
  (
    com_code integer,
    com_desc varchar(50,1),
    desp_com_code integer,
    desp_com_desc varchar(50,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_combustible from "public";

{ TABLE lveh_aceite row size = 55 number of columns = 2 index size = 9 }

create table lveh_aceite 
  (
    ace_code integer not null ,
    ace_desc varchar(50,1) not null ,
    primary key (ace_code)  constraint pk_aceite_lveh
  );

revoke all on lveh_aceite from "public";

{ TABLE aud_lveh_aceite row size = 130 number of columns = 7 index size = 0 }

create table aud_lveh_aceite 
  (
    ace_code integer,
    ace_desc varchar(50,1),
    desp_ace_code integer,
    desp_ace_desc varchar(50,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_aceite from "public";

{ TABLE lveh_nuevo row size = 587 number of columns = 37 index size = 102 }

create table lveh_nuevo 
  (
    nue_solicitud integer not null ,
    nue_dependencia smallint not null ,
    nue_placas varchar(20,1) not null ,
    nue_chasis varchar(30,1) not null ,
    nue_vin varchar(30,1) not null ,
    nue_serie varchar(30,1) not null ,
    nue_tipo_veh integer not null ,
    nue_modelo integer not null ,
    nue_marca integer not null ,
    nue_asientos integer not null ,
    nue_puertas integer not null ,
    nue_traccion varchar(50,1) not null ,
    nue_ejes integer not null ,
    nue_tonelaje integer not null ,
    nue_estilo integer not null ,
    nue_motor varchar(30,1) not null ,
    nue_cilindros integer not null ,
    nue_cilindraje integer not null ,
    nue_combustible integer not null ,
    nue_autonomia integer not null ,
    nue_aceite_motor integer not null ,
    nue_cantidad_mot integer not null ,
    nue_transmision varchar(20,1) not null ,
    nue_aceite_trans integer not null ,
    nue_cantidad_trans varchar(20,1) not null ,
    nue_llantas integer not null ,
    nue_tipo_llantas integer not null ,
    nue_rin integer not null ,
    nue_plaza integer not null ,
    nue_dep smallint not null ,
    nue_estado varchar(50,1) not null ,
    nue_situacion smallint not null ,
    nue_color smallint not null ,
    nue_uso varchar(100,1) not null ,
    nue_adaptacion varchar(100,1),
    nue_eficiencia integer not null ,
    nue_llanta2 integer,
    primary key (nue_solicitud)  constraint pk_nuevo_veh
  );

revoke all on lveh_nuevo from "public";

{ TABLE lveh_det_documento row size = 121 number of columns = 6 index size = 37 }

create table lveh_det_documento 
  (
    det_doc_numero integer not null ,
    det_doc_dependencia smallint not null ,
    det_doc_fecha datetime year to second not null ,
    det_doc_referencia varchar(100,1) not null ,
    det_doc_usuario integer not null ,
    det_doc_grado smallint not null ,
    primary key (det_doc_numero,det_doc_dependencia,det_doc_fecha)  constraint pk_todo
  );

revoke all on lveh_det_documento from "public";

{ TABLE aud_lveh_det_documento row size = 262 number of columns = 15 index size = 0 }

create table aud_lveh_det_documento 
  (
    det_doc_numero integer,
    det_doc_dependencia smallint,
    det_doc_fecha datetime year to second,
    det_doc_referencia varchar(100,1),
    det_doc_usuario integer,
    det_doc_grado smallint,
    desp_det_doc_numero integer,
    desp_det_doc_dependencia smallint,
    desp_det_doc_fecha datetime year to second,
    desp_det_doc_referencia varchar(100,1),
    desp_det_doc_usuario integer,
    desp_det_doc_grado smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_det_documento from "public";

{ TABLE lveh_caracteristicas row size = 55 number of columns = 2 index size = 9 }

create table lveh_caracteristicas 
  (
    car_code integer not null ,
    car_desc varchar(50,1) not null ,
    primary key (car_code)  constraint pk_caract_veh
  );

revoke all on lveh_caracteristicas from "public";

{ TABLE aud_lveh_caracteristicas row size = 130 number of columns = 7 index size = 0 }

create table aud_lveh_caracteristicas 
  (
    car_code integer,
    car_desc varchar(50,1),
    desp_car_code integer,
    desp_car_desc varchar(50,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_caracteristicas from "public";

{ TABLE lveh_asigna row size = 8 number of columns = 2 index size = 31 }

create table lveh_asigna 
  (
    veh_sol_numero integer not null ,
    veh_sol_catalogo integer not null ,
    primary key (veh_sol_numero,veh_sol_catalogo)  constraint pkc_asignaveh
  );

revoke all on lveh_asigna from "public";

{ TABLE aud_lveh_asigna row size = 36 number of columns = 7 index size = 0 }

create table aud_lveh_asigna 
  (
    veh_sol_numero integer,
    veh_sol_catalogo integer,
    desp_veh_sol_numero integer,
    desp_veh_sol_catalogo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_asigna from "public";

{ TABLE aud_lveh_nuevo row size = 1194 number of columns = 77 index size = 0 }

create table aud_lveh_nuevo 
  (
    nue_solicitud integer,
    nue_dependencia smallint,
    nue_placas varchar(20,1),
    nue_chasis varchar(30,1),
    nue_vin varchar(30,1),
    nue_serie varchar(30,1),
    nue_tipo_veh integer,
    nue_modelo integer,
    nue_marca integer,
    nue_asientos integer,
    nue_puertas integer,
    nue_traccion varchar(50,1),
    nue_ejes integer,
    nue_tonelaje integer,
    nue_estilo integer,
    nue_motor varchar(30,1),
    nue_cilindros integer,
    nue_cilindraje integer,
    nue_combustible integer,
    nue_autonomia integer,
    nue_aceite_motor integer,
    nue_cantidad_mot integer,
    nue_transmision varchar(20,1),
    nue_aceite_trans integer,
    nue_cantidad_trans varchar(20,1),
    nue_llantas integer,
    nue_tipo_llantas integer,
    nue_rin integer,
    nue_plaza integer,
    nue_dep smallint,
    nue_estado varchar(50,1),
    nue_situacion smallint,
    nue_color smallint,
    nue_uso varchar(100,1),
    nue_adaptacion varchar(100,1),
    nue_eficiencia integer,
    nue_llanta2 integer,
    desp_nue_solicitud integer,
    desp_nue_dependencia smallint,
    desp_nue_placas varchar(20,1),
    desp_nue_chasis varchar(30,1),
    desp_nue_vin varchar(30,1),
    desp_nue_serie varchar(30,1),
    desp_nue_tipo_veh integer,
    desp_nue_modelo integer,
    desp_nue_marca integer,
    desp_nue_asientos integer,
    desp_nue_puertas integer,
    desp_nue_traccion varchar(50,1),
    desp_nue_ejes integer,
    desp_nue_tonelaje integer,
    desp_nue_estilo integer,
    desp_nue_motor varchar(30,1),
    desp_nue_cilindros integer,
    desp_nue_cilindraje integer,
    desp_nue_combustible integer,
    desp_nue_autonomia integer,
    desp_nue_aceite_motor integer,
    desp_nue_cantidad_mot integer,
    desp_nue_transmision varchar(20,1),
    desp_nue_aceite_trans integer,
    desp_nue_cantidad_trans varchar(20,1),
    desp_nue_llantas integer,
    desp_nue_tipo_llantas integer,
    desp_nue_rin integer,
    desp_nue_plaza integer,
    desp_nue_dep smallint,
    desp_nue_estado varchar(50,1),
    desp_nue_situacion smallint,
    desp_nue_color smallint,
    desp_nue_uso varchar(100,1),
    desp_nue_adaptacion varchar(100,1),
    desp_nue_eficiencia integer,
    desp_nue_llanta2 integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_nuevo from "public";

{ TABLE aud_larm_loc row size = 460 number of columns = 35 index size = 0 }

create table aud_larm_loc 
  (
    vplaza integer,
    vper_cat integer,
    vper_grado smallint,
    vgrado varchar(8),
    vape1 char(15),
    vape2 char(15),
    vdesc_plaza char(75),
    vceom char(6),
    varm_cat integer,
    vtipo char(30),
    vlot_arm smallint,
    vtip_arm smallint,
    vno_arm char(20),
    vsit_desc char(20),
    vsit_codigo smallint,
    vjerar char(10),
    desp_vplaza integer,
    desp_vper_cat integer,
    desp_vper_grado smallint,
    desp_vgrado varchar(8),
    desp_vape1 char(15),
    desp_vape2 char(15),
    desp_vdesc_plaza char(75),
    desp_vceom char(6),
    desp_varm_cat integer,
    desp_vtipo char(30),
    desp_vlot_arm smallint,
    desp_vtip_arm smallint,
    desp_vno_arm char(20),
    desp_vsit_desc char(20),
    desp_vsit_codigo smallint,
    desp_vjerar char(10),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_larm_loc from "public";

{ TABLE conecta2 row size = 6 number of columns = 2 index size = 0 }

create table conecta2 
  (
    catalogo integer,
    sistema smallint
  );

revoke all on conecta2 from "public";

{ TABLE lveh_obser row size = 97 number of columns = 5 index size = 11 }

create table lveh_obser 
  (
    obs_cat integer not null ,
    obs_num smallint not null ,
    obs_fecha date,
    obs_texto text not null ,
    obs_usuario varchar(30) 
        default user,
    primary key (obs_cat,obs_num)  constraint pk_veh_obser
  );

revoke all on lveh_obser from "public";

{ TABLE aud_lveh_obser row size = 214 number of columns = 13 index size = 0 }

create table aud_lveh_obser 
  (
    obs_cat integer,
    obs_num smallint,
    obs_fecha date,
    obs_texto text,
    obs_usuario varchar(30),
    desp_obs_cat integer,
    desp_obs_num smallint,
    desp_obs_fecha date,
    desp_obs_texto text,
    desp_obs_usuario varchar(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_obser from "public";

{ TABLE lveh_his row size = 45 number of columns = 5 index size = 15 }

create table lveh_his 
  (
    his_cat integer not null ,
    his_dep smallint not null ,
    his_fec_ini date,
    his_fec_fin date,
    his_usuario varchar(30) 
        default user,
    
    check (his_fec_fin >= his_fec_ini ) constraint ck_his_fec_fin,
    primary key (his_cat,his_dep,his_fec_ini) 
  );

revoke all on lveh_his from "public";

{ TABLE aud_lveh_his row size = 110 number of columns = 13 index size = 0 }

create table aud_lveh_his 
  (
    his_cat integer,
    his_dep smallint,
    his_fec_ini date,
    his_fec_fin date,
    his_usuario varchar(30),
    desp_his_cat integer,
    desp_his_dep smallint,
    desp_his_fec_ini date,
    desp_his_fec_fin date,
    desp_his_usuario varchar(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_his from "public";

{ TABLE lveh_situacion row size = 55 number of columns = 4 index size = 7 }

create table lveh_situacion 
  (
    sit_codigo smallint not null ,
    sit_desc_lg char(30) not null ,
    sit_desc_md char(15) not null ,
    sit_desc_ct char(8) not null ,
    primary key (sit_codigo)  constraint pk_veh_situacion
  );

revoke all on lveh_situacion from "public";

{ TABLE aud_lveh_situacion row size = 130 number of columns = 11 index size = 0 }

create table aud_lveh_situacion 
  (
    sit_codigo smallint,
    sit_desc_lg char(30),
    sit_desc_md char(15),
    sit_desc_ct char(8),
    desp_sit_codigo smallint,
    desp_sit_desc_lg char(30),
    desp_sit_desc_md char(15),
    desp_sit_desc_ct char(8),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_situacion from "public";

{ TABLE lveh_color row size = 86 number of columns = 4 index size = 7 }

create table lveh_color 
  (
    col_codigo smallint not null ,
    col_desc_lg char(41) not null ,
    col_desc_md char(28) not null ,
    col_desc_ct char(15) not null ,
    primary key (col_codigo)  constraint pk_veh_color
  );

revoke all on lveh_color from "public";

{ TABLE aud_lveh_color row size = 130 number of columns = 11 index size = 0 }

create table aud_lveh_color 
  (
    col_codigo smallint,
    col_desc_lg char(30),
    col_desc_md char(15),
    col_desc_ct char(8),
    desp_col_codigo smallint,
    desp_col_desc_lg char(30),
    desp_col_desc_md char(15),
    desp_col_desc_ct char(8),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_color from "public";

{ TABLE aud_lveh_det_transmision row size = 102 number of columns = 13 index size = 0 }

create table aud_lveh_det_transmision 
  (
    det_trans_catalogo integer,
    det_trans_tipo varchar(20,1),
    det_trans_fecha datetime year to second,
    det_trans_aceite integer,
    det_trans_aceitecant integer,
    desp_det_trans_catalogo integer,
    desp_det_trans_tipo varchar(20,1),
    desp_det_trans_fecha datetime year to second,
    desp_det_trans_aceite integer,
    desp_det_trans_aceitecant integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lveh_det_transmision from "public";

{ TABLE aud_larm_solicitud row size = 938 number of columns = 29 index size = 0 }

create table aud_larm_solicitud 
  (
    sol_num integer,
    sol_catalogo integer,
    sol_tipo integer,
    sol_ref varchar(150,1),
    sol_datocambia integer,
    sol_contenido varchar(10,1),
    sol_contenido2 integer,
    sol_motivo varchar(255,1),
    sol_logistico integer,
    sol_comte integer,
    sol_inspector integer,
    sol_fecha datetime year to day,
    sol_usuario integer,
    desp_sol_num integer,
    desp_sol_catalogo integer,
    desp_sol_tipo integer,
    desp_sol_ref varchar(150,1),
    desp_sol_datocambia integer,
    desp_sol_contenido varchar(10,1),
    desp_sol_contenido2 integer,
    desp_sol_motivo varchar(255,1),
    desp_sol_logistico integer,
    desp_sol_comte integer,
    desp_sol_inspector integer,
    desp_sol_fecha datetime year to day,
    desp_sol_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_larm_solicitud from "public";

{ TABLE aud_larm_obser row size = 4108 number of columns = 13 index size = 0 }

create table aud_larm_obser 
  (
    obs_cat integer,
    obs_num smallint,
    obs_fecha date,
    obs_texto lvarchar(2000),
    obs_usuario varchar(30),
    desp_obs_cat integer,
    desp_obs_num smallint,
    desp_obs_fecha date,
    desp_obs_texto lvarchar(2000),
    desp_obs_usuario varchar(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_larm_obser from "public";

{ TABLE larm_obser row size = 2044 number of columns = 5 index size = 20 }

create table larm_obser 
  (
    obs_cat integer not null ,
    obs_num smallint not null ,
    obs_fecha date,
    obs_texto lvarchar(2000),
    obs_usuario varchar(30),
    primary key (obs_cat,obs_num)  constraint lobs_catnum
  );

revoke all on larm_obser from "public";

{ TABLE ptel_personal row size = 414 number of columns = 5 index size = 9 }

create table ptel_personal 
  (
    tel_catalogo integer,
    tel_casa integer,
    tel_personal integer,
    tel_correo_of varchar(200),
    tel_correo_per varchar(200),
    primary key (tel_catalogo)  constraint tel_person
  );

revoke all on ptel_personal from "public";

{ TABLE aud_ptel_personal row size = 848 number of columns = 13 index size = 0 }

create table aud_ptel_personal 
  (
    tel_catalogo integer,
    tel_casa integer,
    tel_personal integer,
    tel_correo_of varchar(200),
    tel_correo_per varchar(200),
    desp_tel_catalogo integer,
    desp_tel_casa integer,
    desp_tel_personal integer,
    desp_tel_correo_of varchar(200),
    desp_tel_correo_per varchar(200),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ptel_personal from "public";

{ TABLE ptel_depen row size = 41 number of columns = 6 index size = 9 }

create table ptel_depen 
  (
    tel_plaza integer,
    tel_depen integer,
    tel_planta1 integer,
    tel_planta2 integer,
    tel_centrix integer,
    tel_correo varchar(20),
    primary key (tel_plaza)  constraint tel_depen
  );

revoke all on ptel_depen from "public";

{ TABLE aud_ptel_depen row size = 102 number of columns = 15 index size = 0 }

create table aud_ptel_depen 
  (
    tel_plaza integer,
    tel_depen integer,
    tel_planta1 integer,
    tel_planta2 integer,
    tel_centrix integer,
    tel_correo varchar(20),
    desp_tel_plaza integer,
    desp_tel_depen integer,
    desp_tel_planta1 integer,
    desp_tel_planta2 integer,
    desp_tel_centrix integer,
    desp_tel_correo varchar(20),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ptel_depen from "public";

{ TABLE ptel_centrix row size = 8 number of columns = 2 index size = 9 }

create table ptel_centrix 
  (
    tel_plaza integer,
    tel_centrix integer,
    primary key (tel_plaza) 
  );

revoke all on ptel_centrix from "public";

{ TABLE aud_ptel_centrix row size = 36 number of columns = 7 index size = 0 }

create table aud_ptel_centrix 
  (
    tel_plaza integer,
    tel_centrix integer,
    desp_tel_plaza integer,
    desp_tel_centrix integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ptel_centrix from "public";

{ TABLE dfdes row size = 164 number of columns = 17 index size = 27 }

create table dfdes 
  (
    dfd_catalogo integer not null ,
    dfd_codigo smallint not null ,
    dfd_nu_reg smallint not null ,
    dfd_cod_control smallint not null ,
    dfd_tipo_desc char(1) not null ,
    dfd_fec_ini date not null ,
    dfd_ult_act date,
    dfd_fec_cer date,
    dfd_monto money(16,2) not null ,
    dfd_saldo money(16,2) not null ,
    dfd_mensual money(16,2) not null ,
    dfd_tot_cuotas smallint not null ,
    dfd_num_cuotas smallint not null ,
    dfd_documen char(6),
    dfd_codeudor integer,
    dfd_nom_bene char(50),
    dfd_juz_con char(50),
    primary key (dfd_catalogo,dfd_codigo,dfd_nu_reg)  constraint u1587_699
  );

revoke all on dfdes from "public";

{ TABLE aud_dfdes row size = 581 number of columns = 38 index size = 12 }

create table aud_dfdes 
  (
    antes1 char(12),
    antes2 char(8),
    antes3 char(8),
    antes4 char(8),
    antes5 char(1),
    antes6 char(12),
    antes7 char(12),
    antes8 char(12),
    antes9 char(20),
    antes10 char(20),
    antes11 char(20),
    antes12 char(8),
    antes13 char(8),
    antes14 char(12),
    antes15 char(12),
    antes16 char(50),
    antes17 char(50),
    despues1 char(12),
    despues2 char(8),
    despues3 char(8),
    despues4 char(8),
    despues5 char(1),
    despues6 char(12),
    despues7 char(12),
    despues8 char(12),
    despues9 char(20),
    despues10 char(20),
    despues11 char(20),
    despues12 char(8),
    despues13 char(8),
    despues14 char(12),
    despues15 char(12),
    despues16 char(50),
    despues17 char(50),
    hora datetime year to minute,
    accion char(1) not null ,
    usuario char(12) not null ,
    tabname char(15) not null 
  );

revoke all on aud_dfdes from "public";

{ TABLE psan_detalle row size = 1770 number of columns = 8 index size = 38 }

create table psan_detalle 
  (
    det_catalogo integer not null ,
    det_fecha date not null ,
    det_sancion smallint not null ,
    det_grado smallint not null ,
    det_dependencia smallint not null ,
    det_observaciones varchar(250),
    det_detalle lvarchar(1500),
    det_status smallint,
    primary key (det_catalogo,det_fecha,det_sancion) 
  );

revoke all on psan_detalle from "public";

{ TABLE aud_psan_detalle row size = 3560 number of columns = 19 index size = 0 }

create table aud_psan_detalle 
  (
    det_catalogo integer,
    det_fecha date,
    det_sancion smallint,
    det_grado smallint,
    det_dependencia smallint,
    det_observaciones varchar(250),
    det_detalle lvarchar(1500),
    det_status smallint,
    desp_det_catalogo integer,
    desp_det_fecha date,
    desp_det_sancion smallint,
    desp_det_grado smallint,
    desp_det_dependencia smallint,
    desp_det_observaciones varchar(250),
    desp_det_detalle lvarchar(1500),
    desp_det_status smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_psan_detalle from "public";

{ TABLE esp_clase_licencia row size = 206 number of columns = 3 index size = 9 }

create table esp_clase_licencia 
  (
    cla_codigo integer not null ,
    cla_nombre varchar(50) not null ,
    cla_descripcion varchar(150,1) not null ,
    primary key (cla_codigo) 
  );

revoke all on esp_clase_licencia from "public";

{ TABLE aud_esp_clase_licencia row size = 432 number of columns = 9 index size = 0 }

create table aud_esp_clase_licencia 
  (
    cla_codigo integer,
    cla_nombre varchar(50),
    cla_descripcion varchar(150,1),
    desp_cla_codigo integer,
    desp_cla_nombre varchar(50),
    desp_cla_descripcion varchar(150,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_clase_licencia from "public";

{ TABLE esp_expertos row size = 229 number of columns = 10 index size = 18 }

create table esp_expertos 
  (
    exp_codigo integer not null ,
    exp_nom1 varchar(15) not null ,
    exp_nom2 varchar(15),
    exp_ape1 varchar(15) not null ,
    exp_ape2 varchar(15),
    exp_numerolic varchar(50) not null ,
    exp_tipolic varchar(50) not null ,
    exp_fechavence date not null ,
    exp_dpi_cedula varchar(50) not null ,
    exp_empresa integer not null ,
    primary key (exp_codigo)  constraint pk_esp_expertos
  );

revoke all on esp_expertos from "public";

{ TABLE aud_esp_expertos row size = 478 number of columns = 23 index size = 0 }

create table aud_esp_expertos 
  (
    exp_codigo integer,
    exp_nom1 varchar(15),
    exp_nom2 varchar(15),
    exp_ape1 varchar(15),
    exp_ape2 varchar(15),
    exp_numerolic varchar(50),
    exp_tipolic varchar(50),
    exp_fechavence date,
    exp_dpi_cedula varchar(50),
    exp_empresa integer,
    desp_exp_codigo integer,
    desp_exp_nom1 varchar(15),
    desp_exp_nom2 varchar(15),
    desp_exp_ape1 varchar(15),
    desp_exp_ape2 varchar(15),
    desp_exp_numerolic varchar(50),
    desp_exp_tipolic varchar(50),
    desp_exp_fechavence date,
    desp_exp_dpi_cedula varchar(50),
    desp_exp_empresa integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_expertos from "public";

{ TABLE esp_permisos row size = 1555 number of columns = 22 index size = 36 }

create table esp_permisos 
  (
    per_codigo integer not null ,
    per_empresa integer not null ,
    per_numeroper varchar(100,1) not null ,
    per_vehiculo varchar(250,1) not null ,
    per_aduana integer not null ,
    per_usuario varchar(50) not null ,
    per_vicemin varchar(100) not null ,
    per_empresa_ext varchar(100) not null ,
    per_pais varchar(100) not null ,
    per_dir varchar(100) not null ,
    per_experto varchar(250) not null ,
    per_obs varchar(250) not null ,
    per_status integer not null ,
    per_claseper integer not null ,
    per_referencia varchar(100) not null ,
    per_fecharefe date not null ,
    per_fec_ac date not null ,
    per_horainicia integer not null ,
    per_duracion integer not null ,
    per_licencia integer not null ,
    per_destino varchar(100) not null ,
    per_fecha_custodia date not null ,
    primary key (per_codigo)  constraint pk_esp_permisos
  );

revoke all on esp_permisos from "public";

{ TABLE aud_esp_permisos row size = 3130 number of columns = 47 index size = 0 }

create table aud_esp_permisos 
  (
    per_codigo integer,
    per_empresa integer,
    per_numeroper varchar(100,1),
    per_vehiculo varchar(250,1),
    per_aduana integer,
    per_usuario varchar(50),
    per_vicemin varchar(100),
    per_empresa_ext varchar(100),
    per_pais varchar(100),
    per_dir varchar(100),
    per_experto varchar(250),
    per_obs varchar(250),
    per_status integer,
    per_claseper integer,
    per_referencia varchar(100),
    per_fecharefe date,
    per_fec_ac date,
    per_horainicia integer,
    per_duracion integer,
    per_licencia integer,
    per_destino varchar(100),
    per_fecha_custodia date,
    desp_per_codigo integer,
    desp_per_empresa integer,
    desp_per_numeroper varchar(100,1),
    desp_per_vehiculo varchar(250,1),
    desp_per_aduana integer,
    desp_per_usuario varchar(50),
    desp_per_vicemin varchar(100),
    desp_per_empresa_ext varchar(100),
    desp_per_pais varchar(100),
    desp_per_dir varchar(100),
    desp_per_experto varchar(250),
    desp_per_obs varchar(250),
    desp_per_status integer,
    desp_per_claseper integer,
    desp_per_referencia varchar(100),
    desp_per_fecharefe date,
    desp_per_fec_ac date,
    desp_per_horainicia integer,
    desp_per_duracion integer,
    desp_per_licencia integer,
    desp_per_destino varchar(100),
    desp_per_fecha_custodia date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_permisos from "public";

{ TABLE esp_historial row size = 24 number of columns = 6 index size = 30 }

create table esp_historial 
  (
    his_codigo integer not null ,
    his_permiso integer not null ,
    his_inventario integer not null ,
    his_movimiento integer not null ,
    his_fechamov date not null ,
    his_cantidad integer not null ,
    primary key (his_codigo,his_permiso,his_inventario) 
  );

revoke all on esp_historial from "public";

{ TABLE aud_esp_historial row size = 68 number of columns = 15 index size = 0 }

create table aud_esp_historial 
  (
    his_codigo integer,
    his_permiso integer,
    his_inventario integer,
    his_movimiento integer,
    his_fechamov date,
    his_cantidad integer,
    desp_his_codigo integer,
    desp_his_permiso integer,
    desp_his_inventario integer,
    desp_his_movimiento integer,
    desp_his_fechamov date,
    desp_his_cantidad integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_historial from "public";

{ TABLE esp_det_permisos row size = 16 number of columns = 4 index size = 31 }

create table esp_det_permisos 
  (
    dper_codigo integer not null ,
    dper_codigoper integer not null ,
    dper_producto integer not null ,
    dper_cantidad integer not null ,
    primary key (dper_codigo,dper_codigoper) 
  );

revoke all on esp_det_permisos from "public";

{ TABLE aud_esp_det_permisos row size = 52 number of columns = 11 index size = 0 }

create table aud_esp_det_permisos 
  (
    dper_codigo integer,
    dper_codigoper integer,
    dper_producto integer,
    dper_cantidad integer,
    desp_dper_codigo integer,
    desp_dper_codigoper integer,
    desp_dper_producto integer,
    desp_dper_cantidad integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_det_permisos from "public";

{ TABLE esp_marcas row size = 35 number of columns = 2 index size = 9 }

create table esp_marcas 
  (
    mar_codigo integer not null ,
    mar_descripcion varchar(30) not null ,
    primary key (mar_codigo) 
  );

revoke all on esp_marcas from "public";

{ TABLE aud_esp_marcas row size = 90 number of columns = 7 index size = 0 }

create table aud_esp_marcas 
  (
    mar_codigo integer,
    mar_descripcion varchar(30),
    desp_mar_codigo integer,
    desp_mar_descripcion varchar(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_marcas from "public";

{ TABLE esp_grupo_producto row size = 105 number of columns = 2 index size = 9 }

create table esp_grupo_producto 
  (
    gru_codigo integer not null ,
    gru_nombre varchar(100) not null ,
    primary key (gru_codigo) 
  );

revoke all on esp_grupo_producto from "public";

{ TABLE aud_esp_grupo_producto row size = 230 number of columns = 7 index size = 0 }

create table aud_esp_grupo_producto 
  (
    gru_codigo integer,
    gru_nombre varchar(100),
    desp_gru_codigo integer,
    desp_gru_nombre varchar(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_grupo_producto from "public";

{ TABLE esp_productos row size = 110 number of columns = 6 index size = 27 }

create table esp_productos 
  (
    pro_codigo integer not null ,
    pro_desc_lg varchar(50) not null ,
    pro_desc_md varchar(30) not null ,
    pro_desc_ct varchar(15) not null ,
    pro_umedida integer not null ,
    pro_grupo integer not null ,
    primary key (pro_codigo) 
  );

revoke all on esp_productos from "public";

{ TABLE aud_esp_productos row size = 240 number of columns = 15 index size = 0 }

create table aud_esp_productos 
  (
    pro_codigo integer,
    pro_desc_lg varchar(50),
    pro_desc_md varchar(30),
    pro_desc_ct varchar(15),
    pro_umedida integer,
    pro_grupo integer,
    desp_pro_codigo integer,
    desp_pro_desc_lg varchar(50),
    desp_pro_desc_md varchar(30),
    desp_pro_desc_ct varchar(15),
    desp_pro_umedida integer,
    desp_pro_grupo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_productos from "public";

{ TABLE esp_unidad_medida row size = 55 number of columns = 2 index size = 9 }

create table esp_unidad_medida 
  (
    uni_codigo integer not null ,
    uni_descripcion varchar(50) not null ,
    primary key (uni_codigo) 
  );

revoke all on esp_unidad_medida from "public";

{ TABLE aud_esp_unidad_medida row size = 130 number of columns = 7 index size = 0 }

create table aud_esp_unidad_medida 
  (
    uni_codigo integer,
    uni_descripcion varchar(50),
    desp_uni_codigo integer,
    desp_uni_descripcion varchar(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_unidad_medida from "public";

{ TABLE esp_aduanas row size = 90 number of columns = 4 index size = 9 }

create table esp_aduanas 
  (
    adu_codigo integer not null ,
    adu_desc_lg varchar(50) not null ,
    adu_desc_ct varchar(30) not null ,
    adu_dpmun integer not null ,
    primary key (adu_codigo) 
  );

revoke all on esp_aduanas from "public";

{ TABLE aud_esp_aduanas row size = 200 number of columns = 11 index size = 0 }

create table aud_esp_aduanas 
  (
    adu_codigo integer,
    adu_desc_lg varchar(50),
    adu_desc_ct varchar(30),
    adu_dpmun integer,
    desp_adu_codigo integer,
    desp_adu_desc_lg varchar(50),
    desp_adu_desc_ct varchar(30),
    desp_adu_dpmun integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_aduanas from "public";

{ TABLE esp_inventario row size = 16 number of columns = 4 index size = 13 }

create table esp_inventario 
  (
    inv_codigo integer not null ,
    inv_licencia integer not null ,
    inv_cantidad integer not null ,
    inv_producto integer not null ,
    primary key (inv_codigo,inv_licencia) 
  );

revoke all on esp_inventario from "public";

{ TABLE aud_esp_inventario row size = 52 number of columns = 11 index size = 0 }

create table aud_esp_inventario 
  (
    inv_codigo integer,
    inv_licencia integer,
    inv_cantidad integer,
    inv_producto integer,
    desp_inv_codigo integer,
    desp_inv_licencia integer,
    desp_inv_cantidad integer,
    desp_inv_producto integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_inventario from "public";

{ TABLE esp_det_licencias row size = 16 number of columns = 4 index size = 31 }

create table esp_det_licencias 
  (
    dlic_codigo integer not null ,
    dlic_codigolic integer not null ,
    dlic_producto integer not null ,
    dlic_cantidad integer not null ,
    primary key (dlic_codigo,dlic_codigolic) 
  );

revoke all on esp_det_licencias from "public";

{ TABLE aud_esp_det_licencias row size = 52 number of columns = 11 index size = 0 }

create table aud_esp_det_licencias 
  (
    dlic_codigo integer,
    dlic_codigolic integer,
    dlic_producto integer,
    dlic_cantidad integer,
    desp_dlic_codigo integer,
    desp_dlic_codigolic integer,
    desp_dlic_producto integer,
    desp_dlic_cantidad integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_det_licencias from "public";

{ TABLE esp_aseguradoras row size = 86 number of columns = 3 index size = 9 }

create table esp_aseguradoras 
  (
    ase_codigo integer not null ,
    ase_desc_lg varchar(50) not null ,
    ase_desc_ct varchar(30) not null ,
    primary key (ase_codigo) 
  );

revoke all on esp_aseguradoras from "public";

{ TABLE aud_esp_aseguradoras row size = 192 number of columns = 9 index size = 0 }

create table aud_esp_aseguradoras 
  (
    ase_codigo integer,
    ase_desc_lg varchar(50),
    ase_desc_ct varchar(30),
    desp_ase_codigo integer,
    desp_ase_desc_lg varchar(50),
    desp_ase_desc_ct varchar(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_aseguradoras from "public";

{ TABLE esp_clase_permiso row size = 206 number of columns = 3 index size = 9 }

create table esp_clase_permiso 
  (
    cper_codigo integer not null ,
    cper_nombre varchar(50) not null ,
    cper_descripcion varchar(150) not null ,
    primary key (cper_codigo) 
  );

revoke all on esp_clase_permiso from "public";

{ TABLE aud_esp_clase_permiso row size = 432 number of columns = 9 index size = 0 }

create table aud_esp_clase_permiso 
  (
    cper_codigo integer,
    cper_nombre varchar(50),
    cper_descripcion varchar(150),
    desp_cper_codigo integer,
    desp_cper_nombre varchar(50),
    desp_cper_descripcion varchar(150),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_clase_permiso from "public";

{ TABLE esp_licencias row size = 1038 number of columns = 14 index size = 36 }

create table esp_licencias 
  (
    lic_codigo integer not null ,
    lic_empresa integer not null ,
    lic_claselic integer not null ,
    lic_fechainicia date not null ,
    lic_fechafin date not null ,
    lic_numerolic varchar(100,1) not null ,
    lic_seguro integer not null ,
    lic_vehiculo varchar(250,1) not null ,
    lic_usuario varchar(50,1) not null ,
    lic_vicemin varchar(100,1) not null ,
    lic_obs varchar(250,1) not null ,
    lic_status integer not null ,
    lic_fecactual date not null ,
    lic_procedencia varchar(250,1) not null ,
    primary key (lic_codigo) 
  );

revoke all on esp_licencias from "public";

{ TABLE aud_esp_licencias row size = 2096 number of columns = 31 index size = 0 }

create table aud_esp_licencias 
  (
    lic_codigo integer,
    lic_empresa integer,
    lic_claselic integer,
    lic_fechainicia date,
    lic_fechafin date,
    lic_numerolic varchar(100,1),
    lic_seguro integer,
    lic_vehiculo varchar(250,1),
    lic_usuario varchar(50,1),
    lic_vicemin varchar(100,1),
    lic_obs varchar(250,1),
    lic_status integer,
    lic_fecactual date,
    lic_procedencia varchar(250,1),
    desp_lic_codigo integer,
    desp_lic_empresa integer,
    desp_lic_claselic integer,
    desp_lic_fechainicia date,
    desp_lic_fechafin date,
    desp_lic_numerolic varchar(100,1),
    desp_lic_seguro integer,
    desp_lic_vehiculo varchar(250,1),
    desp_lic_usuario varchar(50,1),
    desp_lic_vicemin varchar(100,1),
    desp_lic_obs varchar(250,1),
    desp_lic_status integer,
    desp_lic_fecactual date,
    desp_lic_procedencia varchar(250,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_licencias from "public";

{ TABLE esp_seguro row size = 70 number of columns = 4 index size = 18 }

create table esp_seguro 
  (
    seg_codigo integer not null ,
    seg_clasepoli varchar(30) not null ,
    seg_numpoli varchar(30) not null ,
    seg_asegura integer not null ,
    primary key (seg_codigo) 
  );

revoke all on esp_seguro from "public";

{ TABLE aud_esp_seguro row size = 160 number of columns = 11 index size = 0 }

create table aud_esp_seguro 
  (
    seg_codigo integer,
    seg_clasepoli varchar(30),
    seg_numpoli varchar(30),
    seg_asegura integer,
    desp_seg_codigo integer,
    desp_seg_clasepoli varchar(30),
    desp_seg_numpoli varchar(30),
    desp_seg_asegura integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_seguro from "public";

{ TABLE esp_empresas row size = 529 number of columns = 17 index size = 9 }

create table esp_empresas 
  (
    emp_codigo integer not null ,
    emp_nit varchar(30) not null ,
    emp_nombre varchar(100) not null ,
    emp_direccion varchar(100) not null ,
    emp_tel integer not null ,
    emp_mail varchar(50) not null ,
    emp_nomrep1 varchar(15) not null ,
    emp_nomrep2 varchar(15),
    emp_aperep1 varchar(15) not null ,
    emp_aperep2 varchar(15),
    emp_tel1 integer not null ,
    emp_nompropi1 varchar(15) not null ,
    emp_nompropi2 varchar(15),
    emp_apepropi1 varchar(15) not null ,
    emp_apepropi2 varchar(15),
    emp_tel2 integer not null ,
    emp_dirbodega varchar(100) not null ,
    primary key (emp_codigo) 
  );

revoke all on esp_empresas from "public";

{ TABLE aud_esp_empresas row size = 1078 number of columns = 37 index size = 0 }

create table aud_esp_empresas 
  (
    emp_codigo integer,
    emp_nit varchar(30),
    emp_nombre varchar(100),
    emp_direccion varchar(100),
    emp_tel integer,
    emp_mail varchar(50),
    emp_nomrep1 varchar(15),
    emp_nomrep2 varchar(15),
    emp_aperep1 varchar(15),
    emp_aperep2 varchar(15),
    emp_tel1 integer,
    emp_nompropi1 varchar(15),
    emp_nompropi2 varchar(15),
    emp_apepropi1 varchar(15),
    emp_apepropi2 varchar(15),
    emp_tel2 integer not null ,
    emp_dirbodega varchar(100),
    desp_emp_codigo integer,
    desp_emp_nit varchar(30),
    desp_emp_nombre varchar(100),
    desp_emp_direccion varchar(100),
    desp_emp_tel integer,
    desp_emp_mail varchar(50),
    desp_emp_nomrep1 varchar(15),
    desp_emp_nomrep2 varchar(15),
    desp_emp_aperep1 varchar(15),
    desp_emp_aperep2 varchar(15),
    desp_emp_tel1 integer,
    desp_emp_nompropi1 varchar(15),
    desp_emp_nompropi2 varchar(15),
    desp_emp_apepropi1 varchar(15),
    desp_emp_apepropi2 varchar(15),
    desp_emp_tel2 integer not null ,
    desp_emp_dirbodega varchar(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_empresas from "public";

{ TABLE esp_vehiculos row size = 265 number of columns = 10 index size = 27 }

create table esp_vehiculos 
  (
    veh_codigo integer not null ,
    veh_marca integer not null ,
    veh_modelo integer not null ,
    veh_color varchar(30,1) not null ,
    veh_placas varchar(30,1) not null ,
    veh_empresa integer not null ,
    veh_tipo varchar(30,1) not null ,
    veh_doc_auto varchar(100,1) not null ,
    veh_fecha_auto date not null ,
    veh_capacidad varchar(50,1) not null ,
    primary key (veh_codigo)  constraint pk_espveh
  );

revoke all on esp_vehiculos from "public";

{ TABLE aud_esp_vehiculos row size = 550 number of columns = 23 index size = 0 }

create table aud_esp_vehiculos 
  (
    veh_codigo integer,
    veh_marca integer,
    veh_modelo integer,
    veh_color varchar(30),
    veh_placas varchar(30),
    veh_empresa integer,
    veh_tipo varchar(30),
    veh_doc_auto varchar(100,1),
    veh_fecha_auto date,
    veh_capacidad varchar(50),
    desp_veh_codigo integer,
    desp_veh_marca integer,
    desp_veh_modelo integer,
    desp_veh_color varchar(30),
    desp_veh_placas varchar(30),
    desp_veh_empresa integer,
    desp_veh_tipo varchar(30),
    desp_veh_doc_auto varchar(100,1),
    desp_veh_fecha_auto date,
    desp_veh_capacidad varchar(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esp_vehiculos from "public";

{ TABLE luni_solicitud row size = 307 number of columns = 10 index size = 34 }

create table luni_solicitud 
  (
    sol_numero integer not null ,
    sol_docto varchar(25,1) not null ,
    sol_fecha date not null ,
    sol_obs varchar(250,1) not null ,
    sol_dependencia smallint not null ,
    sol_comte integer not null ,
    sol_logistico integer not null ,
    sol_dotac integer not null ,
    sol_usuario integer not null ,
    sol_comprobante integer not null ,
    primary key (sol_numero)  constraint pk_soli
  );

revoke all on luni_solicitud from "public";

{ TABLE aud_luni_solicitud row size = 634 number of columns = 23 index size = 0 }

create table aud_luni_solicitud 
  (
    sol_numero integer,
    sol_docto varchar(25,1),
    sol_fecha date,
    sol_obs varchar(250,1),
    sol_dependencia smallint,
    sol_comte integer,
    sol_logistico integer,
    sol_dotac integer,
    sol_usuario integer,
    sol_comprobante integer,
    desp_sol_numero integer,
    desp_sol_docto varchar(25,1),
    desp_sol_fecha date,
    desp_sol_obs varchar(250,1),
    desp_sol_dependencia smallint,
    desp_sol_comte integer,
    desp_sol_logistico integer,
    desp_sol_dotac integer,
    desp_sol_usuario integer,
    desp_sol_comprobante integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_luni_solicitud from "public";

{ TABLE luni_detallesoli row size = 18 number of columns = 5 index size = 40 }

create table luni_detallesoli 
  (
    dets_solicitud integer not null ,
    dets_uniforme smallint not null ,
    dets_talla integer not null ,
    dets_total integer not null ,
    dets_status integer not null ,
    primary key (dets_solicitud,dets_uniforme,dets_talla)  constraint pklunidetsoli
  );

revoke all on luni_detallesoli from "public";

{ TABLE aud_luni_detallesoli row size = 56 number of columns = 13 index size = 0 }

create table aud_luni_detallesoli 
  (
    dets_solicitud integer,
    dets_uniforme smallint,
    dets_talla integer,
    dets_total integer,
    dets_status integer,
    desp_dets_solicitud integer,
    desp_dets_uniforme smallint,
    desp_dets_talla integer,
    desp_dets_total integer,
    desp_dets_status integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_luni_detallesoli from "public";

{ TABLE luni_detsol_log row size = 36 number of columns = 10 index size = 56 }

create table luni_detsol_log 
  (
    detu_solicitud integer not null ,
    detu_uniforme smallint not null ,
    detu_talla integer not null ,
    detu_total integer not null ,
    detu_fecha date not null ,
    detu_usuario integer not null ,
    detu_situacion integer not null ,
    detu_comprobante integer not null ,
    detu_dotacion integer not null ,
    detu_dependencia smallint not null ,
    primary key (detu_solicitud,detu_uniforme,detu_talla)  constraint pkluni_log
  );

revoke all on luni_detsol_log from "public";

{ TABLE aud_luni_detsol_log row size = 92 number of columns = 23 index size = 0 }

create table aud_luni_detsol_log 
  (
    detu_solicitud integer,
    detu_uniforme smallint,
    detu_talla integer,
    detu_total integer,
    detu_fecha date,
    detu_usuario integer,
    detu_situacion integer,
    detu_comprobante integer,
    detu_dotacion integer,
    detu_dependencia smallint,
    desp_detu_solicitud integer,
    desp_detu_uniforme smallint,
    desp_detu_talla integer,
    desp_detu_total integer,
    desp_detu_fecha date,
    desp_detu_usuario integer,
    desp_detu_situacion integer,
    desp_detu_comprobante integer,
    desp_detu_dotacion integer,
    desp_detu_dependencia smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_luni_detsol_log from "public";

{ TABLE luni_situacion row size = 30 number of columns = 2 index size = 9 }

create table luni_situacion 
  (
    sit_codigo integer not null ,
    sit_descrip varchar(25,1) not null ,
    primary key (sit_codigo)  constraint pk_situacion
  );

revoke all on luni_situacion from "public";

{ TABLE aud_luni_situacion row size = 80 number of columns = 7 index size = 0 }

create table aud_luni_situacion 
  (
    sit_codigo integer,
    sit_descrip varchar(25,1),
    desp_sit_codigo integer,
    desp_sit_descrip varchar(25,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_luni_situacion from "public";

{ TABLE luni_documento row size = 34 number of columns = 3 index size = 53 }

create table luni_documento 
  (
    doc_numero integer not null ,
    doc_documento varchar(25,1) not null ,
    doc_situacion integer not null ,
    primary key (doc_numero,doc_documento)  constraint pk_documento
  );

revoke all on luni_documento from "public";

{ TABLE aud_luni_documento row size = 88 number of columns = 9 index size = 0 }

create table aud_luni_documento 
  (
    doc_numero integer,
    doc_documento varchar(25,1),
    doc_situacion integer,
    desp_doc_numero integer,
    desp_doc_documento varchar(25,1),
    desp_doc_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_luni_documento from "public";

{ TABLE luni_talla row size = 15 number of columns = 2 index size = 9 }

create table luni_talla 
  (
    tal_codigo integer not null ,
    tal_descrip varchar(10,1) not null ,
    primary key (tal_codigo)  constraint pk_tallauni
  );

revoke all on luni_talla from "public";

{ TABLE aud_luni_talla row size = 50 number of columns = 7 index size = 0 }

create table aud_luni_talla 
  (
    tal_codigo integer,
    tal_descrip varchar(10,1),
    desp_tal_codigo integer,
    desp_tal_descrip varchar(10,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_luni_talla from "public";

{ TABLE lmun_tipo1 row size = 34 number of columns = 3 index size = 18 }

create table lmun_tipo1 
  (
    tip_cod integer not null ,
    tip_desc varchar(25) not null ,
    tip_usuario integer not null ,
    primary key (tip_cod)  constraint pk_tipo
  );

revoke all on lmun_tipo1 from "public";

{ TABLE lmun_calibre1 row size = 34 number of columns = 3 index size = 18 }

create table lmun_calibre1 
  (
    cal_codigo integer not null ,
    cal_desc varchar(25) not null ,
    cal_usuario integer not null ,
    primary key (cal_codigo)  constraint pk_calibre
  );

revoke all on lmun_calibre1 from "public";

{ TABLE lmun_marca row size = 34 number of columns = 3 index size = 18 }

create table lmun_marca 
  (
    mar_codigo integer not null ,
    mar_desc varchar(25) not null ,
    mar_usuario integer not null ,
    primary key (mar_codigo)  constraint pk_marca
  );

revoke all on lmun_marca from "public";

{ TABLE lmun_color row size = 23 number of columns = 2 index size = 7 }

create table lmun_color 
  (
    col_cod smallint not null ,
    col_desc varchar(20) not null ,
    primary key (col_cod)  constraint pk_color1
  );

revoke all on lmun_color from "public";

{ TABLE lmun_modelo row size = 139 number of columns = 5 index size = 18 }

create table lmun_modelo 
  (
    mod_codigo integer not null ,
    mod_docto varchar(100) not null ,
    mod_desc varchar(25) not null ,
    mod_cantidad integer not null ,
    mod_usuario integer not null ,
    primary key (mod_codigo)  constraint pk_modelo
  );

revoke all on lmun_modelo from "public";

{ TABLE lmun_fabrica row size = 118 number of columns = 6 index size = 25 }

create table lmun_fabrica 
  (
    fab_codigo integer not null ,
    fab_desc_lg varchar(50) not null ,
    fab_desc_md varchar(35) not null ,
    fab_desc_ct varchar(20) not null ,
    fab_pais smallint not null ,
    fab_usuario integer not null ,
    primary key (fab_codigo)  constraint pk_fabrica
  );

revoke all on lmun_fabrica from "public";

{ TABLE lmun_lote1 row size = 48 number of columns = 13 index size = 90 }

create table lmun_lote1 
  (
    lot_tipo integer not null ,
    lot_lote integer not null ,
    lot_marca integer not null ,
    lot_modelo integer not null ,
    lot_calibre integer not null ,
    lot_fec_cad date not null ,
    lot_fabrica integer not null ,
    lot_color_laca smallint not null ,
    lot_cantidad integer not null ,
    lot_usuario integer not null ,
    lot_dep smallint not null ,
    lot_fec_fab date not null ,
    lot_fec date not null ,
    primary key (lot_tipo,lot_lote)  constraint fk_lote_mun
  );

revoke all on lmun_lote1 from "public";

{ TABLE lmun_situacion row size = 34 number of columns = 3 index size = 18 }

create table lmun_situacion 
  (
    sit_cod integer not null ,
    sit_desc varchar(25) not null ,
    sit_usuario integer not null ,
    primary key (sit_cod)  constraint pk_sit_municion
  );

revoke all on lmun_situacion from "public";

{ TABLE l_municion row size = 32 number of columns = 8 index size = 49 }

create table l_municion 
  (
    mun_codigo integer not null ,
    mun_tipo integer not null ,
    mun_lote integer not null ,
    mun_plaza integer not null ,
    mun_cantidad integer not null ,
    mun_situacion integer not null ,
    mun_fecha_act date not null ,
    mun_usuario integer not null ,
    primary key (mun_codigo)  constraint pk_mun_codigo
  );

revoke all on l_municion from "public";

{ TABLE lmun_uso1 row size = 34 number of columns = 3 index size = 18 }

create table lmun_uso1 
  (
    uso_codigo integer not null ,
    uso_desc varchar(25) not null ,
    uso_usuario integer not null ,
    primary key (uso_codigo)  constraint uso_codigo
  );

revoke all on lmun_uso1 from "public";

{ TABLE lmun_carga row size = 34 number of columns = 3 index size = 18 }

create table lmun_carga 
  (
    car_codigo integer not null ,
    car_desc varchar(25) not null ,
    car_usuario integer not null ,
    primary key (car_codigo)  constraint car_codigo
  );

revoke all on lmun_carga from "public";

{ TABLE lmun_solicitud1 row size = 398 number of columns = 14 index size = 88 }

create table lmun_solicitud1 
  (
    sol_numero integer not null ,
    sol_solasigna integer not null ,
    sol_tipo_sol integer not null ,
    sol_documento varchar(100) not null ,
    sol_uso integer not null ,
    sol_carga integer not null ,
    sol_dependencia smallint not null ,
    sol_plaza integer not null ,
    sol_motivo varchar(250) not null ,
    sol_fecha date not null ,
    sol_logistico integer not null ,
    sol_inspector integer not null ,
    sol_comandante integer not null ,
    sol_usuario integer not null ,
    primary key (sol_numero)  constraint pk_sol_numero
  );

revoke all on lmun_solicitud1 from "public";

{ TABLE lmun_det_solicitud row size = 20 number of columns = 5 index size = 44 }

create table lmun_det_solicitud 
  (
    det_solicitud integer not null ,
    det_tipo_mun integer not null ,
    det_calibre integer not null ,
    det_cantidad integer not null ,
    det_usuario integer not null ,
    primary key (det_solicitud,det_tipo_mun,det_calibre)  constraint pd_det_solicitud
  );

revoke all on lmun_det_solicitud from "public";

{ TABLE lmun_det_solasigna row size = 16 number of columns = 4 index size = 31 }

create table lmun_det_solasigna 
  (
    deta_solicitud integer not null ,
    deta_municion integer not null ,
    deta_cantidad integer not null ,
    deta_usuario integer not null ,
    primary key (deta_solicitud,deta_municion)  constraint pksolasigna
  );

revoke all on lmun_det_solasigna from "public";

{ TABLE lmun_det_cambiosit row size = 20 number of columns = 5 index size = 40 }

create table lmun_det_cambiosit 
  (
    detc_solicitud integer not null ,
    detc_municion integer not null ,
    detc_cantidad integer not null ,
    detc_situacion integer not null ,
    detc_usuario integer not null ,
    primary key (detc_solicitud,detc_municion)  constraint pkcambiosit
  );

revoke all on lmun_det_cambiosit from "public";

{ TABLE lmun_devolentre row size = 310 number of columns = 17 index size = 65 }

create table lmun_devolentre 
  (
    dev_solicitud integer not null ,
    dev_municion integer not null ,
    dev_utiles integer not null ,
    dev_vainas integer not null ,
    dev_fallidas integer not null ,
    dev_no_encont integer not null ,
    dev_tot_uti integer not null ,
    dev_usuario integer not null ,
    dev_uso integer not null ,
    dev_carga integer not null ,
    dev_entregue integer not null ,
    dev_recibi integer not null ,
    dev_status char(1) not null ,
    dev_observaciones varchar(250) not null ,
    dev_fecha date not null ,
    dev_cantidad integer not null ,
    dev_dependencia smallint not null ,
    primary key (dev_solicitud,dev_municion)  constraint pk_devol
  );

revoke all on lmun_devolentre from "public";

{ TABLE lmun_mov_solicitud row size = 117 number of columns = 5 index size = 40 }

create table lmun_mov_solicitud 
  (
    mov_solicitud integer not null ,
    mov_correla integer not null ,
    mov_fecha date not null ,
    mov_docto varchar(100) not null ,
    mov_usuario integer not null ,
    primary key (mov_solicitud,mov_correla)  constraint pk_movsolicitud
  );

revoke all on lmun_mov_solicitud from "public";

{ TABLE lmun_correla row size = 30 number of columns = 2 index size = 9 }

create table lmun_correla 
  (
    cor_numero integer not null ,
    cor_descrip varchar(25) not null ,
    primary key (cor_numero)  constraint pk_cornumero
  );

revoke all on lmun_correla from "public";

{ TABLE lmun_movimientos row size = 289 number of columns = 10 index size = 49 }

create table lmun_movimientos 
  (
    movi_municion integer not null ,
    movi_numero integer not null ,
    movi_cantidad integer not null ,
    movi_plaza integer not null ,
    movi_fecha date not null ,
    movi_uso integer not null ,
    movi_carga integer not null ,
    movi_observacion varchar(255) not null ,
    movi_status char(1) not null ,
    movi_usuario integer not null ,
    primary key (movi_municion,movi_numero)  constraint pk_movimientos
  );

revoke all on lmun_movimientos from "public";

{ TABLE lmun_asignacion row size = 281 number of columns = 9 index size = 52 }

create table lmun_asignacion 
  (
    asig_codigo integer not null ,
    asig_dependencia smallint not null ,
    asig_plaza integer not null ,
    asig_municion integer not null ,
    asig_cantidad integer not null ,
    asig_uso integer not null ,
    asig_carga integer not null ,
    asig_observacion varchar(250) not null ,
    asig_usuario integer not null ,
    primary key (asig_codigo)  constraint asig_codigo
  );

revoke all on lmun_asignacion from "public";

{ TABLE lmun_cambio_sit row size = 289 number of columns = 11 index size = 61 }

create table lmun_cambio_sit 
  (
    cam_codigo integer not null ,
    cam_dependencia smallint not null ,
    cam_plaza integer not null ,
    cam_municion integer not null ,
    cam_cantidad integer not null ,
    cam_uso integer not null ,
    cam_carga integer not null ,
    cam_observacion varchar(250) not null ,
    cam_situacion integer not null ,
    cam_usuario integer not null ,
    cam_fecha date not null ,
    primary key (cam_codigo)  constraint cam_codigo
  );

revoke all on lmun_cambio_sit from "public";

{ TABLE lmun_trasint row size = 394 number of columns = 13 index size = 70 }

create table lmun_trasint 
  (
    tras_numero integer not null ,
    tras_docto varchar(100) not null ,
    tras_lote integer not null ,
    tras_entrega integer not null ,
    tras_recibe integer not null ,
    tras_fecha date not null ,
    tras_plaza integer not null ,
    tras_cantidad integer not null ,
    tras_uso integer not null ,
    tras_carga integer not null ,
    tras_obser varchar(250) not null ,
    tras_dependencia smallint not null ,
    tras_usuario integer not null ,
    primary key (tras_numero)  constraint pk_trasint
  );

revoke all on lmun_trasint from "public";

{ TABLE lmun_det_conocimiento row size = 18 number of columns = 5 index size = 29 }

create table lmun_det_conocimiento 
  (
    detc_conocimiento integer not null ,
    detc_municion integer not null ,
    detc_cantidad integer not null ,
    detc_dep smallint not null ,
    detc_usuario integer not null ,
    primary key (detc_conocimiento,detc_municion)  constraint pk_con_conoci
  );

revoke all on lmun_det_conocimiento from "public";

{ TABLE lmun_conoc_fab row size = 134 number of columns = 10 index size = 54 }

create table lmun_conoc_fab 
  (
    conf_numero integer not null ,
    conf_docto varchar(100) not null ,
    conf_fecha date not null ,
    conf_entregue integer not null ,
    conf_recibi integer not null ,
    conf_vo integer not null ,
    conf_conforme integer not null ,
    conf_usuario integer not null ,
    conf_status char(1) not null ,
    conf_codigo integer not null ,
    primary key (conf_numero)  constraint pk_confnumero
  );

revoke all on lmun_conoc_fab from "public";

{ TABLE lmun_det_conoc_fab row size = 16 number of columns = 4 index size = 31 }

create table lmun_det_conoc_fab 
  (
    detf_conocimiento integer not null ,
    detf_lote integer not null ,
    detf_cantidad integer not null ,
    detf_usuario integer not null ,
    primary key (detf_conocimiento,detf_lote)  constraint pk_conifab
  );

revoke all on lmun_det_conoc_fab from "public";

{ TABLE aud_lmun_tipo row size = 88 number of columns = 9 index size = 12 }

create table aud_lmun_tipo 
  (
    tip_cod integer,
    tip_desc varchar(25),
    tip_usuario integer,
    desp_tip_cod integer,
    desp_tip_desc varchar(25),
    desp_tip_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_tipo from "public";

{ TABLE aud_lmun_calibre row size = 88 number of columns = 9 index size = 12 }

create table aud_lmun_calibre 
  (
    cal_codigo integer,
    cal_desc varchar(25),
    cal_usuario integer,
    desp_cal_codigo integer,
    desp_cal_desc varchar(25),
    desp_cal_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_calibre from "public";

{ TABLE aud_lmun_marca row size = 88 number of columns = 9 index size = 12 }

create table aud_lmun_marca 
  (
    mar_codigo integer,
    mar_desc varchar(25),
    mar_usuario integer,
    desp_mar_codigo integer,
    desp_mar_desc varchar(25),
    desp_mar_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_marca from "public";

{ TABLE aud_lmun_color row size = 66 number of columns = 7 index size = 12 }

create table aud_lmun_color 
  (
    col_cod smallint,
    col_desc varchar(20),
    desp_col_cod smallint,
    desp_col_desc varchar(20),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_color from "public";

{ TABLE aud_lmun_modelo row size = 298 number of columns = 13 index size = 12 }

create table aud_lmun_modelo 
  (
    mod_codigo integer,
    mod_docto varchar(100),
    mod_desc varchar(25),
    mod_cantidad integer,
    mod_usuario integer,
    desp_mod_codigo integer,
    desp_mod_docto varchar(100),
    desp_mod_desc varchar(25),
    desp_mod_cantidad integer,
    desp_mod_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_modelo from "public";

{ TABLE aud_lmun_fabrica row size = 256 number of columns = 15 index size = 12 }

create table aud_lmun_fabrica 
  (
    fab_codigo integer,
    fab_desc_lg varchar(50),
    fab_desc_md varchar(35),
    fab_desc_ct varchar(20),
    fab_pais smallint,
    fab_usuario integer,
    desp_fab_codigo integer,
    desp_fab_desc_lg varchar(50),
    desp_fab_desc_md varchar(35),
    desp_fab_desc_ct varchar(20),
    desp_fab_pais smallint,
    desp_fab_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_fabrica from "public";

{ TABLE aud_lmun_lote row size = 116 number of columns = 29 index size = 12 }

create table aud_lmun_lote 
  (
    lot_tipo integer,
    lot_lote integer,
    lot_marca integer,
    lot_modelo integer,
    lot_calibre integer,
    lot_fec_cad date,
    lot_fabrica integer,
    lot_color_laca smallint,
    lot_cantidad integer,
    lot_usuario integer,
    lot_dep smallint,
    lot_fec_fab date,
    lot_fec date,
    desp_lot_tipo integer,
    desp_lot_lote integer,
    desp_lot_marca integer,
    desp_lot_modelo integer,
    desp_lot_calibre integer,
    desp_lot_fec_cad date,
    desp_lot_fabrica integer,
    desp_lot_color_laca smallint,
    desp_lot_cantidad integer,
    desp_lot_usuario integer,
    desp_lot_dep smallint,
    desp_lot_fec_fab date,
    desp_lot_fec date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_lote from "public";

{ TABLE aud_lmun_situacion row size = 88 number of columns = 9 index size = 12 }

create table aud_lmun_situacion 
  (
    sit_cod integer,
    sit_desc varchar(25),
    sit_usuario integer,
    desp_sit_cod integer,
    desp_sit_desc varchar(25),
    desp_sit_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_situacion from "public";

{ TABLE aud_l_municion row size = 84 number of columns = 19 index size = 12 }

create table aud_l_municion 
  (
    mun_codigo integer,
    mun_tipo integer,
    mun_lote integer,
    mun_plaza integer,
    mun_cantidad integer,
    mun_situacion integer,
    mun_fecha_act date,
    mun_usuario integer,
    desp_mun_codigo integer,
    desp_mun_tipo integer,
    desp_mun_lote integer,
    desp_mun_plaza integer,
    desp_mun_cantidad integer,
    desp_mun_situacion integer,
    desp_mun_fecha_act date,
    desp_mun_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_l_municion from "public";

{ TABLE aud_lmun_uso row size = 88 number of columns = 9 index size = 12 }

create table aud_lmun_uso 
  (
    uso_codigo integer,
    uso_desc varchar(25),
    uso_usuario integer,
    desp_uso_codigo integer,
    desp_uso_desc varchar(25),
    desp_uso_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_uso from "public";

{ TABLE aud_lmun_carga row size = 88 number of columns = 9 index size = 12 }

create table aud_lmun_carga 
  (
    car_codigo integer,
    car_desc varchar(25),
    car_usuario integer,
    desp_car_codigo integer,
    desp_car_desc varchar(25),
    desp_car_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_carga from "public";

{ TABLE aud_lmun_solicitud row size = 816 number of columns = 31 index size = 12 }

create table aud_lmun_solicitud 
  (
    sol_numero integer,
    sol_solasigna integer,
    sol_tipo_sol integer,
    sol_documento varchar(100),
    sol_uso integer,
    sol_carga integer,
    sol_dependencia smallint,
    sol_plaza integer,
    sol_motivo varchar(250),
    sol_fecha date,
    sol_logistico integer,
    sol_inspector integer,
    sol_comandante integer,
    sol_usuario integer,
    desp_sol_numero integer,
    desp_sol_solasigna integer,
    desp_sol_tipo_sol integer,
    desp_sol_documento varchar(100),
    desp_sol_uso integer,
    desp_sol_carga integer,
    desp_sol_dependencia smallint,
    desp_sol_plaza integer,
    desp_sol_motivo varchar(250),
    desp_sol_fecha date,
    desp_sol_logistico integer,
    desp_sol_inspector integer,
    desp_sol_comandante integer,
    desp_sol_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_solicitud from "public";

{ TABLE aud_lmun_det_solicitud row size = 60 number of columns = 13 index size = 12 }

create table aud_lmun_det_solicitud 
  (
    det_solicitud integer,
    det_tipo_mun integer,
    det_calibre integer,
    det_cantidad integer,
    det_usuario integer,
    desp_det_solicitud integer,
    desp_det_tipo_mun integer,
    desp_det_calibre integer,
    desp_det_cantidad integer,
    desp_det_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_det_solicitud from "public";

{ TABLE aud_lmun_det_solasigna row size = 52 number of columns = 11 index size = 12 }

create table aud_lmun_det_solasigna 
  (
    deta_solicitud integer,
    deta_municion integer,
    deta_cantidad integer,
    deta_usuario integer,
    desp_deta_solicitud integer,
    desp_deta_municion integer,
    desp_deta_cantidad integer,
    desp_deta_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_det_solasigna from "public";

{ TABLE aud_lmun_det_cambiosit row size = 60 number of columns = 13 index size = 12 }

create table aud_lmun_det_cambiosit 
  (
    detc_solicitud integer,
    detc_municion integer,
    detc_cantidad integer,
    detc_situacion integer,
    detc_usuario integer,
    desp_detc_solicitud integer,
    desp_detc_municion integer,
    desp_detc_cantidad integer,
    desp_detc_situacion integer,
    desp_detc_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_det_cambiosit from "public";

{ TABLE aud_lmun_devolentre row size = 640 number of columns = 37 index size = 12 }

create table aud_lmun_devolentre 
  (
    dev_solicitud integer,
    dev_municion integer,
    dev_utiles integer,
    dev_vainas integer,
    dev_fallidas integer,
    dev_no_encont integer,
    dev_tot_uti integer,
    dev_usuario integer,
    dev_uso integer,
    dev_carga integer,
    dev_entregue integer,
    dev_recibi integer,
    dev_status char(1),
    dev_observaciones varchar(250),
    dev_fecha date,
    dev_cantidad integer,
    dev_dependencia smallint,
    desp_dev_solicitud integer,
    desp_dev_municion integer,
    desp_dev_utiles integer,
    desp_dev_vainas integer,
    desp_dev_fallidas integer,
    desp_dev_no_encont integer,
    desp_dev_tot_uti integer,
    desp_dev_usuario integer,
    desp_dev_uso integer,
    desp_dev_carga integer,
    desp_dev_entregue integer,
    desp_dev_recibi integer,
    desp_dev_status char(1),
    desp_dev_observaciones varchar(250),
    desp_dev_fecha date,
    desp_dev_cantidad integer,
    desp_dev_dependencia smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_devolentre from "public";

{ TABLE aud_lmun_mov_solicitud row size = 254 number of columns = 13 index size = 12 }

create table aud_lmun_mov_solicitud 
  (
    mov_solicitud integer,
    mov_correla integer,
    mov_fecha date,
    mov_docto varchar(100),
    mov_usuario integer,
    desp_mov_solicitud integer,
    desp_mov_correla integer,
    desp_mov_fecha date,
    desp_mov_docto varchar(100),
    desp_mov_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_mov_solicitud from "public";

{ TABLE aud_lmun_correla row size = 80 number of columns = 7 index size = 12 }

create table aud_lmun_correla 
  (
    cor_numero integer,
    cor_descrip varchar(25),
    desp_cor_numero integer,
    desp_cor_descrip varchar(25),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_correla from "public";

{ TABLE aud_lmun_movimientos row size = 598 number of columns = 23 index size = 12 }

create table aud_lmun_movimientos 
  (
    movi_municion integer,
    movi_numero integer,
    movi_cantidad integer,
    movi_plaza integer,
    movi_fecha date,
    movi_uso integer,
    movi_carga integer,
    movi_observacion varchar(255),
    movi_status char(1),
    movi_usuario integer,
    desp_movi_municion integer,
    desp_movi_numero integer,
    desp_movi_cantidad integer,
    desp_movi_plaza integer,
    desp_movi_fecha date,
    desp_movi_uso integer,
    desp_movi_carga integer,
    desp_movi_observacion varchar(255),
    desp_movi_status char(1),
    desp_movi_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_movimientos from "public";

{ TABLE aud_lmun_asignacion row size = 582 number of columns = 21 index size = 12 }

create table aud_lmun_asignacion 
  (
    asig_codigo integer,
    asig_dependencia smallint,
    asig_plaza integer,
    asig_municion integer,
    asig_cantidad integer,
    asig_uso integer,
    asig_carga integer,
    asig_observacion varchar(250),
    asig_usuario integer,
    desp_asig_codigo integer,
    desp_asig_dependencia smallint,
    desp_asig_plaza integer,
    desp_asig_municion integer,
    desp_asig_cantidad integer,
    desp_asig_uso integer,
    desp_asig_carga integer,
    desp_asig_observacion varchar(250),
    desp_asig_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_asignacion from "public";

{ TABLE aud_lmun_cambio_sit row size = 598 number of columns = 25 index size = 12 }

create table aud_lmun_cambio_sit 
  (
    cam_codigo integer,
    cam_dependencia smallint,
    cam_plaza integer,
    cam_municion integer,
    cam_cantidad integer,
    cam_uso integer,
    cam_carga integer,
    cam_observacion varchar(250),
    cam_situacion integer,
    cam_usuario integer,
    cam_fecha date,
    desp_cam_codigo integer,
    desp_cam_dependencia smallint,
    desp_cam_plaza integer,
    desp_cam_municion integer,
    desp_cam_cantidad integer,
    desp_cam_uso integer,
    desp_cam_carga integer,
    desp_cam_observacion varchar(250),
    desp_cam_situacion integer,
    desp_cam_usuario integer,
    desp_cam_fecha date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_cambio_sit from "public";

{ TABLE aud_lmun_trasint row size = 808 number of columns = 29 index size = 12 }

create table aud_lmun_trasint 
  (
    tras_numero integer,
    tras_docto varchar(100),
    tras_lote integer,
    tras_entrega integer,
    tras_recibe integer,
    tras_fecha date,
    tras_plaza integer,
    tras_cantidad integer,
    tras_uso integer,
    tras_carga integer,
    tras_obser varchar(250),
    tras_dependencia smallint,
    tras_usuario integer,
    desp_tras_numero integer,
    desp_tras_docto varchar(100),
    desp_tras_lote integer,
    desp_tras_entrega integer,
    desp_tras_recibe integer,
    desp_tras_fecha date,
    desp_tras_plaza integer,
    desp_tras_cantidad integer,
    desp_tras_uso integer,
    desp_tras_carga integer,
    desp_tras_obser varchar(250),
    desp_tras_dependencia smallint,
    desp_tras_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_trasint from "public";

{ TABLE aud_lmun_det_conocimiento row size = 56 number of columns = 13 index size = 12 }

create table aud_lmun_det_conocimiento 
  (
    detc_conocimiento integer,
    detc_municion integer,
    detc_cantidad integer,
    detc_dep smallint,
    detc_usuario integer,
    desp_detc_conocimiento integer,
    desp_detc_municion integer,
    desp_detc_cantidad integer,
    desp_detc_dep smallint,
    desp_detc_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_det_conocimiento from "public";

{ TABLE aud_lmun_conoc_fab row size = 288 number of columns = 23 index size = 12 }

create table aud_lmun_conoc_fab 
  (
    conf_numero integer,
    conf_docto varchar(100),
    conf_fecha date,
    conf_entregue integer,
    conf_recibi integer,
    conf_vo integer,
    conf_conforme integer,
    conf_usuario integer,
    conf_status char(1),
    conf_codigo integer,
    desp_conf_numero integer,
    desp_conf_docto varchar(100),
    desp_conf_fecha date,
    desp_conf_entregue integer,
    desp_conf_recibi integer,
    desp_conf_vo integer,
    desp_conf_conforme integer,
    desp_conf_usuario integer,
    desp_conf_status char(1),
    desp_conf_codigo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_conoc_fab from "public";

{ TABLE aud_lmun_det_conoc_fab row size = 52 number of columns = 11 index size = 12 }

create table aud_lmun_det_conoc_fab 
  (
    detf_conocimiento integer,
    detf_lote integer,
    detf_cantidad integer,
    detf_usuario integer,
    desp_detf_conocimiento integer,
    desp_detf_lote integer,
    desp_detf_cantidad integer,
    desp_detf_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_det_conoc_fab from "public";

{ TABLE pcapa_det_solicitud row size = 781 number of columns = 20 index size = 74 }

create table pcapa_det_solicitud 
  (
    cap_solcod varchar(20) not null ,
    cap_catalogo integer not null ,
    cap_grado smallint not null ,
    cap_curso varchar(100) not null ,
    cap_fec_inicio date not null ,
    cap_fec_fin date not null ,
    cap_pais smallint not null ,
    cap_escuela varchar(100) not null ,
    cap_valor money(16,2),
    cap_tipo char(1),
    cap_clasifica char(1),
    cap_equi smallint,
    cap_punteo decimal(5,2),
    cap_puesto char(3),
    cap_obserba varchar(250),
    cap_estado smallint not null ,
    cap_tipo_doc char(10),
    cap_aprueba integer,
    cap_fec_aprueba date,
    cap_obs varchar(250,1),
    primary key (cap_solcod,cap_catalogo,cap_fec_inicio)  constraint pk_capdetsol
  );

revoke all on pcapa_det_solicitud from "public";

{ TABLE aud_pcapa_det_solicitud row size = 1582 number of columns = 43 index size = 12 }

create table aud_pcapa_det_solicitud 
  (
    cap_solcod varchar(20),
    cap_catalogo integer,
    cap_grado smallint,
    cap_curso varchar(100),
    cap_fec_inicio date,
    cap_fec_fin date,
    cap_pais smallint,
    cap_escuela varchar(100),
    cap_valor money(16,2),
    cap_tipo char(1),
    cap_clasifica char(1),
    cap_equi smallint,
    cap_punteo decimal(5,2),
    cap_puesto char(3),
    cap_obserba varchar(250),
    cap_estado smallint,
    cap_tipo_doc char(10),
    cap_aprueba integer,
    cap_fec_aprueba date,
    cap_obs varchar(250,1),
    desp_cap_solcod varchar(20),
    desp_cap_catalogo integer,
    desp_cap_grado smallint,
    desp_cap_curso varchar(100),
    desp_cap_fec_inicio date,
    desp_cap_fec_fin date,
    desp_cap_pais smallint,
    desp_cap_escuela varchar(100),
    desp_cap_valor money(16,2),
    desp_cap_tipo char(1),
    desp_cap_clasifica char(1),
    desp_cap_equi smallint,
    desp_cap_punteo decimal(5,2),
    desp_cap_puesto char(3),
    desp_cap_obserba varchar(250),
    desp_cap_estado smallint,
    desp_cap_tipo_doc char(10),
    desp_cap_aprueba integer,
    desp_cap_fec_aprueba date,
    desp_cap_obs varchar(250,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_pcapa_det_solicitud from "public";

{ TABLE pocur_solicitud row size = 392 number of columns = 9 index size = 33 }

create table pocur_solicitud 
  (
    sol_codigo varchar(20) not null ,
    sol_correlativo integer not null ,
    sol_comte integer not null ,
    sol_ofop integer not null ,
    sol_formulario char(1) not null ,
    sol_dependencia smallint not null ,
    sol_fec_solicit date not null ,
    sol_justific varchar(250) not null ,
    sol_oficio varchar(100) not null ,
    primary key (sol_codigo)  constraint pk_cursol
  );

revoke all on pocur_solicitud from "public";

{ TABLE aud_pocur_solicitud row size = 804 number of columns = 21 index size = 12 }

create table aud_pocur_solicitud 
  (
    sol_codigo varchar(20),
    sol_correlativo integer,
    sol_comte integer,
    sol_ofop integer,
    sol_formulario char(1),
    sol_dependencia smallint,
    sol_fec_solicit date,
    sol_justific varchar(250),
    sol_oficio varchar(100),
    desp_sol_codigo varchar(20),
    desp_sol_correlativo integer,
    desp_sol_comte integer,
    desp_sol_ofop integer,
    desp_sol_formulario char(1),
    desp_sol_dependencia smallint,
    desp_sol_fec_solicit date,
    desp_sol_justific varchar(250),
    desp_sol_oficio varchar(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_pocur_solicitud from "public";

{ TABLE pdcapacitacion row size = 524 number of columns = 17 index size = 154 }

create table pdcapacitacion 
  (
    cap_catalogo integer not null ,
    cap_grado smallint not null ,
    cap_curso varchar(100) not null ,
    cap_fec_inicio date not null ,
    cap_fec_fin date not null ,
    cap_solicitud varchar(20) not null ,
    cap_pais smallint not null ,
    cap_escuela varchar(100) not null ,
    cap_valor money(16,2),
    cap_tipo char(1),
    cap_clasifica char(1),
    cap_equi smallint,
    cap_punteo decimal(5,2),
    cap_puesto char(3),
    cap_obserba varchar(250),
    cap_docto_auto char(10),
    cap_creditos decimal(5,2),
    primary key (cap_catalogo,cap_curso,cap_fec_inicio)  constraint pk_dcap
  );

revoke all on pdcapacitacion from "public";

{ TABLE aud_pdcapacitacion row size = 1068 number of columns = 37 index size = 12 }

create table aud_pdcapacitacion 
  (
    cap_catalogo integer,
    cap_grado smallint,
    cap_curso varchar(100),
    cap_fec_inicio date,
    cap_fec_fin date,
    cap_solicitud varchar(20),
    cap_pais smallint,
    cap_escuela varchar(100),
    cap_valor money(16,2),
    cap_tipo char(1),
    cap_clasifica char(1),
    cap_equi smallint,
    cap_punteo decimal(5,2),
    cap_puesto char(3),
    cap_obserba varchar(250),
    cap_docto_auto char(10),
    cap_creditos decimal(5,2),
    desp_cap_catalogo integer,
    desp_cap_grado smallint,
    desp_cap_curso varchar(100),
    desp_cap_fec_inicio date,
    desp_cap_fec_fin date,
    desp_cap_solicitud varchar(20),
    desp_cap_pais smallint,
    desp_cap_escuela varchar(100),
    desp_cap_valor money(16,2),
    desp_cap_tipo char(1),
    desp_cap_clasifica char(1),
    desp_cap_equi smallint,
    desp_cap_punteo decimal(5,2),
    desp_cap_puesto char(3),
    desp_cap_obserba varchar(250),
    desp_cap_docto_auto char(10),
    desp_cap_creditos decimal(5,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_pdcapacitacion from "public";

{ TABLE ocur_det_solicitud row size = 578 number of columns = 17 index size = 81 }

create table ocur_det_solicitud 
  (
    cur_solcod varchar(20) not null ,
    cur_catalogo integer not null ,
    cur_grado smallint not null ,
    cur_curso smallint not null ,
    cur_fec_inicio date not null ,
    cur_fec_fin date not null ,
    cur_escuela smallint not null ,
    cur_valor money(16,2),
    cur_clasifica char(1),
    cur_punteo decimal(5,2),
    cur_puesto char(3),
    cur_obserba varchar(250),
    cur_estado smallint not null ,
    cur_tipo_doc char(10),
    cur_aprueba integer,
    cur_fec_aprueba date,
    cur_obs varchar(250,1),
    primary key (cur_solcod,cur_catalogo,cur_fec_inicio)  constraint pk_curdetsol
  );

revoke all on ocur_det_solicitud from "public";

{ TABLE aud_ocur_det_solicitud row size = 1176 number of columns = 37 index size = 0 }

create table aud_ocur_det_solicitud 
  (
    cur_solcod varchar(20),
    cur_catalogo integer,
    cur_grado smallint,
    cur_curso smallint,
    cur_fec_inicio date,
    cur_fec_fin date,
    cur_escuela smallint,
    cur_valor money(16,2),
    cur_clasifica char(1),
    cur_punteo decimal(5,2),
    cur_puesto char(3),
    cur_obserba varchar(250),
    cur_estado smallint,
    cur_tipo_doc char(10),
    cur_aprueba integer,
    cur_fec_aprueba date,
    cur_obs varchar(250,1),
    desp_cur_solcod varchar(20),
    desp_cur_catalogo integer,
    desp_cur_grado smallint,
    desp_cur_curso smallint,
    desp_cur_fec_inicio date,
    desp_cur_fec_fin date,
    desp_cur_escuela smallint,
    desp_cur_valor money(16,2),
    desp_cur_clasifica char(1),
    desp_cur_punteo decimal(5,2),
    desp_cur_puesto char(3),
    desp_cur_obserba varchar(250),
    desp_cur_estado smallint,
    desp_cur_tipo_doc char(10),
    desp_cur_aprueba integer,
    desp_cur_fec_aprueba date,
    desp_cur_obs varchar(250,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ocur_det_solicitud from "public";

{ TABLE usuarios_sistema row size = 85 number of columns = 2 index size = 0 }

create table usuarios_sistema 
  (
    usuario char(15),
    nombre char(70)
  );

revoke all on usuarios_sistema from "public";

{ TABLE luni_asignacion row size = 60 number of columns = 11 index size = 47 }

create table luni_asignacion 
  (
    asi_catalogo integer not null ,
    asi_uniforme smallint not null ,
    asi_numero integer not null ,
    asi_tallauni varchar(10,1) not null ,
    asi_tallabota varchar(5,1) not null ,
    asi_tallagorra varchar(5,1) not null ,
    asi_fecha date not null ,
    asi_codigobarra varchar(15,1) not null ,
    asi_dependencia smallint,
    asi_usuario integer not null ,
    asi_status char(1) not null ,
    
    check (asi_status IN ('A' ,'M' )) constraint ck_asi_status,
    primary key (asi_catalogo,asi_uniforme,asi_numero)  constraint luni_asignacion
  );

revoke all on luni_asignacion from "public";

{ TABLE aud_luni_asignacion row size = 140 number of columns = 25 index size = 0 }

create table aud_luni_asignacion 
  (
    asi_catalogo integer,
    asi_uniforme smallint,
    asi_numero integer,
    asi_tallauni varchar(10,1),
    asi_tallabota varchar(5,1),
    asi_tallagorra varchar(5,1),
    asi_fecha date,
    asi_codigobarra varchar(15,1),
    asi_dependencia smallint,
    asi_usuario integer,
    asi_status char(1),
    desp_asi_catalogo integer,
    desp_asi_uniforme smallint,
    desp_asi_numero integer,
    desp_asi_tallauni varchar(10,1),
    desp_asi_tallabota varchar(5,1),
    desp_asi_tallagorra varchar(5,1),
    desp_asi_fecha date,
    desp_asi_codigobarra varchar(15,1),
    desp_asi_dependencia smallint,
    desp_asi_usuario integer,
    desp_asi_status char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_luni_asignacion from "public";

{ TABLE arco_capacitaciones row size = 13 number of columns = 5 index size = 24 }

create table arco_capacitaciones 
  (
    acap_catalogo integer not null ,
    acap_tipo char(1) not null ,
    acap_clasifica char(1) not null ,
    acap_valor decimal(4,2) not null ,
    acap_esca date not null ,
    
    check (acap_clasifica IN ('T' ,'S' ,'C' ,'D' ,'I' ,'E' ,'P' ,'M' ,'D' ,'L' )),
    
    check (acap_tipo IN ('C' ,'U' )) constraint ck_acap_tipo,
    primary key (acap_catalogo,acap_clasifica,acap_esca,acap_tipo)  constraint pk_arco_capacitaciones
  );

revoke all on arco_capacitaciones from "public";

{ TABLE aud_arco_capacitaciones row size = 46 number of columns = 13 index size = 0 }

create table aud_arco_capacitaciones 
  (
    acap_catalogo integer,
    acap_tipo char(1),
    acap_clasifica char(1),
    acap_valor decimal(4,2),
    acap_esca date,
    desp_acap_catalogo integer,
    desp_acap_tipo char(1),
    desp_acap_clasifica char(1),
    desp_acap_valor decimal(4,2),
    desp_acap_esca date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_capacitaciones from "public";

{ TABLE arco_cond row size = 214 number of columns = 8 index size = 19 }

create table arco_cond 
  (
    conm_codigo smallint not null ,
    conm_desc char(100) not null ,
    conm_equi smallint not null ,
    conm_fuerza char(1) not null ,
    conm_valor decimal(4,2) not null ,
    conm_vigencia smallint not null ,
    conm_fecha date not null ,
    conm_obs char(100),
    primary key (conm_codigo,conm_fecha,conm_fuerza)  constraint pk_arco_cond
  );

revoke all on arco_cond from "public";

{ TABLE aud_arco_cond row size = 448 number of columns = 19 index size = 0 }

create table aud_arco_cond 
  (
    conm_codigo smallint,
    conm_desc char(100),
    conm_equi smallint,
    conm_fuerza char(1),
    conm_valor decimal(4,2),
    conm_vigencia smallint,
    conm_fecha date,
    conm_obs char(100),
    desp_conm_codigo smallint,
    desp_conm_desc char(100),
    desp_conm_equi smallint,
    desp_conm_fuerza char(1),
    desp_conm_valor decimal(4,2),
    desp_conm_vigencia smallint,
    desp_conm_fecha date,
    desp_conm_obs char(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_cond from "public";

{ TABLE arco_dcon row size = 13 number of columns = 4 index size = 22 }

create table arco_dcon 
  (
    acon_codigo smallint not null ,
    acon_catalogo integer not null ,
    acon_valor decimal(4,2) not null ,
    acon_esca date not null ,
    primary key (acon_catalogo,acon_codigo,acon_esca)  constraint pk_arco_dcon
  );

revoke all on arco_dcon from "public";

{ TABLE aud_arco_dcon row size = 46 number of columns = 11 index size = 0 }

create table aud_arco_dcon 
  (
    acon_codigo smallint,
    acon_catalogo integer,
    acon_valor decimal(4,2),
    acon_esca date,
    desp_acon_codigo smallint,
    desp_acon_catalogo integer,
    desp_acon_valor decimal(4,2),
    desp_acon_esca date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_dcon from "public";

{ TABLE arco_dcur row size = 13 number of columns = 4 index size = 31 }

create table arco_dcur 
  (
    acur_codigo smallint not null ,
    acur_catalogo integer not null ,
    acur_valor decimal(4,2) not null ,
    acur_esca date not null ,
    primary key (acur_catalogo,acur_codigo,acur_esca)  constraint pk_arco_dcur
  );

revoke all on arco_dcur from "public";

{ TABLE aud_arco_dcur row size = 46 number of columns = 11 index size = 0 }

create table aud_arco_dcur 
  (
    acur_codigo smallint,
    acur_catalogo integer,
    acur_valor decimal(4,2),
    acur_esca date,
    desp_acur_codigo smallint,
    desp_acur_catalogo integer,
    desp_acur_valor decimal(4,2),
    desp_acur_esca date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_dcur from "public";

{ TABLE arco_demeritos row size = 10 number of columns = 4 index size = 18 }

create table arco_demeritos 
  (
    dem_grado smallint not null ,
    dem_fecha date not null ,
    dem_limite smallint not null ,
    dem_vigente smallint not null ,
    primary key (dem_fecha,dem_grado)  constraint pk_demeritos_arco
  );

revoke all on arco_demeritos from "public";

{ TABLE aud_arco_demeritos row size = 40 number of columns = 11 index size = 0 }

create table aud_arco_demeritos 
  (
    dem_grado smallint,
    dem_fecha date,
    dem_limite smallint,
    dem_vigente smallint,
    desp_dem_grado smallint,
    desp_dem_fecha date,
    desp_dem_limite smallint,
    desp_dem_vigente smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_demeritos from "public";

{ TABLE arco_erudiccion row size = 67 number of columns = 7 index size = 11 }

create table arco_erudiccion 
  (
    eru_tipo char(1) not null ,
    eru_clasifica char(1) not null ,
    eru_descripcion varchar(25),
    eru_valor decimal(4,2),
    eru_vigencia smallint not null ,
    eru_fec date not null ,
    eru_obs char(30),
    
    check (eru_clasifica IN ('T' ,'S' ,'C' ,'D' ,'I' ,'E' ,'P' ,'M' ,'D' ,'L' )),
    
    check (eru_tipo IN ('C' ,'U' )) constraint ck_eru_tipo,
    primary key (eru_clasifica,eru_fec,eru_tipo)  constraint pk_erudiccion
  );

revoke all on arco_erudiccion from "public";

{ TABLE aud_arco_erudiccion row size = 154 number of columns = 17 index size = 0 }

create table aud_arco_erudiccion 
  (
    eru_tipo char(1),
    eru_clasifica char(1),
    eru_descripcion varchar(25),
    eru_valor decimal(4,2),
    eru_vigencia smallint,
    eru_fec date,
    eru_obs char(30),
    desp_eru_tipo char(1),
    desp_eru_clasifica char(1),
    desp_eru_descripcion varchar(25),
    desp_eru_valor decimal(4,2),
    desp_eru_vigencia smallint,
    desp_eru_fec date,
    desp_eru_obs char(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_erudiccion from "public";

{ TABLE arco_evads row size = 14 number of columns = 4 index size = 24 }

create table arco_evads 
  (
    evad_catalogo integer not null ,
    evad_periodo smallint not null ,
    evad_nota decimal(5,2),
    evad_fecha date,
    primary key (evad_catalogo,evad_fecha,evad_periodo)  constraint pk_arco_evads
  );

revoke all on arco_evads from "public";

{ TABLE aud_arco_evads row size = 48 number of columns = 11 index size = 0 }

create table aud_arco_evads 
  (
    evad_catalogo integer,
    evad_periodo smallint,
    evad_nota decimal(5,2),
    evad_fecha date,
    desp_evad_catalogo integer,
    desp_evad_periodo smallint,
    desp_evad_nota decimal(5,2),
    desp_evad_fecha date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_evads from "public";

{ TABLE arco_grados row size = 30 number of columns = 6 index size = 7 }

create table arco_grados 
  (
    arcgra_codigo smallint not null ,
    arcgra_equivale smallint not null ,
    arcgra_proximo smallint not null ,
    arcgra_anterior smallint not null ,
    arcgra_tiempo smallint not null ,
    arcgra_desc char(20) not null ,
    primary key (arcgra_codigo)  constraint pk_arco_grados
  );

revoke all on arco_grados from "public";

{ TABLE aud_arco_grados row size = 80 number of columns = 15 index size = 0 }

create table aud_arco_grados 
  (
    arcgra_codigo smallint,
    arcgra_equivale smallint,
    arcgra_proximo smallint,
    arcgra_anterior smallint,
    arcgra_tiempo smallint,
    arcgra_desc char(20),
    desp_arcgra_codigo smallint,
    desp_arcgra_equivale smallint,
    desp_arcgra_proximo smallint,
    desp_arcgra_anterior smallint,
    desp_arcgra_tiempo smallint,
    desp_arcgra_desc char(20),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_grados from "public";

{ TABLE arco_notas row size = 26 number of columns = 8 index size = 22 }

create table arco_notas 
  (
    not_catalogo integer not null ,
    not_fecha date not null ,
    not_capacidad decimal(4,2) not null ,
    not_evad decimal(4,2) not null ,
    not_conducta decimal(4,2) not null ,
    not_pafe decimal(4,2) not null ,
    not_biof decimal(4,2) not null ,
    not_creditos decimal(4,2) not null ,
    primary key (not_catalogo,not_fecha)  constraint pk_arco_notas
  );

revoke all on arco_notas from "public";

{ TABLE aud_arco_notas row size = 72 number of columns = 19 index size = 0 }

create table aud_arco_notas 
  (
    not_catalogo integer,
    not_fecha date,
    not_capacidad decimal(4,2),
    not_evad decimal(4,2),
    not_conducta decimal(4,2),
    not_pafe decimal(4,2),
    not_biof decimal(4,2),
    not_creditos decimal(4,2),
    desp_not_catalogo integer,
    desp_not_fecha date,
    desp_not_capacidad decimal(4,2),
    desp_not_evad decimal(4,2),
    desp_not_conducta decimal(4,2),
    desp_not_pafe decimal(4,2),
    desp_not_biof decimal(4,2),
    desp_not_creditos decimal(4,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_notas from "public";

{ TABLE arco_obligatorio row size = 13 number of columns = 4 index size = 24 }

create table arco_obligatorio 
  (
    aobli_catalogo integer not null ,
    aobli_curso smallint not null ,
    aobli_punteo decimal(4,2),
    aobli_esca date not null ,
    primary key (aobli_catalogo,aobli_curso,aobli_esca)  constraint pk_arco_obli
  );

revoke all on arco_obligatorio from "public";

{ TABLE aud_arco_obligatorio row size = 46 number of columns = 11 index size = 0 }

create table aud_arco_obligatorio 
  (
    aobli_catalogo integer,
    aobli_curso smallint,
    aobli_punteo decimal(4,2),
    aobli_esca date,
    desp_aobli_catalogo integer,
    desp_aobli_curso smallint,
    desp_aobli_punteo decimal(4,2),
    desp_aobli_esca date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_obligatorio from "public";

{ TABLE arco_pafes row size = 19 number of columns = 6 index size = 33 }

create table arco_pafes 
  (
    pafe_catalogo integer not null ,
    pafe_fecha date not null ,
    pafe_grado smallint not null ,
    pafe_nota decimal(5,2) not null ,
    pafe_tipo char(1) not null ,
    pafe_esca date not null ,
    primary key (pafe_catalogo,pafe_esca,pafe_fecha)  constraint pk_arco_pafe
  );

revoke all on arco_pafes from "public";

{ TABLE aud_arco_pafes row size = 58 number of columns = 15 index size = 0 }

create table aud_arco_pafes 
  (
    pafe_catalogo integer,
    pafe_fecha date,
    pafe_grado smallint,
    pafe_nota decimal(5,2),
    pafe_tipo char(1),
    pafe_esca date,
    desp_pafe_catalogo integer,
    desp_pafe_fecha date,
    desp_pafe_grado smallint,
    desp_pafe_nota decimal(5,2),
    desp_pafe_tipo char(1),
    desp_pafe_esca date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_pafes from "public";

{ TABLE arco_ponderacion row size = 26 number of columns = 9 index size = 18 }

create table arco_ponderacion 
  (
    pon_grado smallint not null ,
    pon_fec_vig date not null ,
    pon_capacidad decimal(4,2) not null ,
    pon_evad decimal(4,2) not null ,
    pon_conducta decimal(4,2) not null ,
    pon_pafe decimal(4,2) not null ,
    pon_biof decimal(4,2) not null ,
    pon_merito decimal(4,2) not null ,
    pon_vigencia smallint not null ,
    primary key (pon_fec_vig,pon_grado)  constraint pk_arco_ponde
  );

revoke all on arco_ponderacion from "public";

{ TABLE aud_arco_ponderacion row size = 72 number of columns = 21 index size = 0 }

create table aud_arco_ponderacion 
  (
    pon_grado smallint,
    pon_fec_vig date,
    pon_capacidad decimal(4,2),
    pon_evad decimal(4,2),
    pon_conducta decimal(4,2),
    pon_pafe decimal(4,2),
    pon_biof decimal(4,2),
    pon_merito decimal(4,2),
    pon_vigencia smallint,
    desp_pon_grado smallint,
    desp_pon_fec_vig date,
    desp_pon_capacidad decimal(4,2),
    desp_pon_evad decimal(4,2),
    desp_pon_conducta decimal(4,2),
    desp_pon_pafe decimal(4,2),
    desp_pon_biof decimal(4,2),
    desp_pon_merito decimal(4,2),
    desp_pon_vigencia smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_ponderacion from "public";

{ TABLE arco_sanciones row size = 16 number of columns = 5 index size = 28 }

create table arco_sanciones 
  (
    asan_catalogo integer not null ,
    asan_fecha date not null ,
    asan_sancion smallint not null ,
    asan_cantidad smallint not null ,
    asan_esca date not null ,
    primary key (asan_catalogo,asan_fecha,asan_sancion,asan_esca)  constraint pk_arco_sanciones
  );

revoke all on arco_sanciones from "public";

{ TABLE aud_arco_sanciones row size = 52 number of columns = 13 index size = 0 }

create table aud_arco_sanciones 
  (
    asan_catalogo integer,
    asan_fecha date,
    asan_sancion smallint,
    asan_cantidad smallint,
    asan_esca date,
    desp_asan_catalogo integer,
    desp_asan_fecha date,
    desp_asan_sancion smallint,
    desp_asan_cantidad smallint,
    desp_asan_esca date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_sanciones from "public";

{ TABLE arco_cursos row size = 239 number of columns = 8 index size = 19 }

create table arco_cursos 
  (
    curm_codigo smallint not null ,
    curm_desc char(100) not null ,
    curm_equi smallint not null ,
    curm_valor decimal(4,2) not null ,
    curm_fuerza char(1) not null ,
    curm_vigencia smallint not null ,
    curm_obser char(125),
    curm_fec date not null ,
    primary key (curm_codigo,curm_fec,curm_fuerza)  constraint pk_arco_curso
  );

revoke all on arco_cursos from "public";

{ TABLE aud_arco_cursos row size = 498 number of columns = 19 index size = 0 }

create table aud_arco_cursos 
  (
    curm_codigo smallint,
    curm_desc char(100),
    curm_equi smallint,
    curm_valor decimal(4,2),
    curm_fuerza char(1),
    curm_vigencia smallint,
    curm_obser char(125),
    curm_fec date,
    desp_curm_codigo smallint,
    desp_curm_desc char(100),
    desp_curm_equi smallint,
    desp_curm_valor decimal(4,2),
    desp_curm_fuerza char(1),
    desp_curm_vigencia smallint,
    desp_curm_obser char(125),
    desp_curm_fec date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_cursos from "public";

{ TABLE arco_jefes row size = 216 number of columns = 6 index size = 17 }

create table arco_jefes 
  (
    ajef_plaza integer not null ,
    ajef_categoria char(4) not null ,
    ajef_empleo char(200) not null ,
    ajef_fec_vig date,
    ajef_vigencia smallint,
    ajef_esca smallint,
    primary key (ajef_plaza,ajef_fec_vig,ajef_categoria)  constraint pk_arco_jefes
  );

revoke all on arco_jefes from "public";

{ TABLE aud_arco_jefes row size = 452 number of columns = 15 index size = 0 }

create table aud_arco_jefes 
  (
    ajef_plaza integer,
    ajef_categoria char(4),
    ajef_empleo char(200),
    ajef_fec_vig date,
    ajef_vigencia smallint,
    ajef_esca smallint,
    desp_ajef_plaza integer,
    desp_ajef_categoria char(4),
    desp_ajef_empleo char(200),
    desp_ajef_fec_vig date,
    desp_ajef_vigencia smallint,
    desp_ajef_esca smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_jefes from "public";

{ TABLE larm_solicitud row size = 509 number of columns = 13 index size = 67 }

create table larm_solicitud 
  (
    sol_num integer not null ,
    sol_catalogo integer not null ,
    sol_tipo integer not null ,
    sol_ref varchar(150,1) not null ,
    sol_datocambia integer not null ,
    sol_contenido varchar(60,5),
    sol_contenido2 integer,
    sol_motivo varchar(255,1) not null ,
    sol_logistico integer not null ,
    sol_comte integer not null ,
    sol_inspector integer not null ,
    sol_fecha datetime year to day not null ,
    sol_usuario integer,
    primary key (sol_num,sol_catalogo)  constraint soli_s
  );

revoke all on larm_solicitud from "public";

{ TABLE coc_coordenadas row size = 205 number of columns = 15 index size = 30 }

create table coc_coordenadas 
  (
    coo_reporte integer not null ,
    coo_anio smallint not null ,
    coo_dep smallint not null ,
    coo_id integer not null ,
    coo_lat_gra smallint,
    coo_lat_min smallint,
    coo_lat_seg smallint,
    coo_long_gra smallint,
    coo_long_min smallint,
    coo_long_seg smallint,
    coo_decimal_lat decimal(20,18),
    coo_decimal_long decimal(20,18),
    coo_utm_x integer,
    coo_utm_y integer,
    coo_lugar varchar(150,50),
    primary key (coo_reporte,coo_anio,coo_dep,coo_id)  constraint coc_coordenadas
  );

revoke all on coc_coordenadas from "public";

{ TABLE aud_coc_coordenadas row size = 430 number of columns = 33 index size = 0 }

create table aud_coc_coordenadas 
  (
    coo_reporte integer,
    coo_anio smallint,
    coo_dep smallint,
    coo_id integer,
    coo_lat_gra smallint,
    coo_lat_min smallint,
    coo_lat_seg smallint,
    coo_long_gra smallint,
    coo_long_min smallint,
    coo_long_seg smallint,
    coo_decimal_lat decimal(20,18),
    coo_decimal_long decimal(20,18),
    coo_utm_x integer,
    coo_utm_y integer,
    coo_lugar varchar(150,50),
    desp_coo_reporte integer,
    desp_coo_anio smallint,
    desp_coo_dep smallint,
    desp_coo_id integer,
    desp_coo_lat_gra smallint,
    desp_coo_lat_min smallint,
    desp_coo_lat_seg smallint,
    desp_coo_long_gra smallint,
    desp_coo_long_min smallint,
    desp_coo_long_seg smallint,
    desp_coo_decimal_lat decimal(20,18),
    desp_coo_decimal_long decimal(20,18),
    desp_coo_utm_x integer,
    desp_coo_utm_y integer,
    desp_coo_lugar varchar(150,50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_coordenadas from "public";

{ TABLE coc_mision row size = 264 number of columns = 4 index size = 9 }

create table coc_mision 
  (
    mis_codigo serial not null ,
    mis_descripcion varchar(255) not null ,
    mis_fuerza smallint not null ,
    mis_tipo smallint not null 
  );

revoke all on coc_mision from "public";

{ TABLE aud_coc_mision row size = 548 number of columns = 11 index size = 0 }

create table aud_coc_mision 
  (
    mis_codigo integer,
    mis_descripcion varchar(255),
    mis_fuerza smallint,
    mis_tipo smallint,
    desp_mis_codigo integer,
    desp_mis_descripcion varchar(255),
    desp_mis_fuerza smallint,
    desp_mis_tipo smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_mision from "public";

{ TABLE coc_personal row size = 12 number of columns = 5 index size = 28 }

create table coc_personal 
  (
    per_reporte integer not null ,
    per_anio smallint not null ,
    per_dep smallint not null ,
    per_tipo smallint not null ,
    per_cantidad smallint not null ,
    primary key (per_reporte,per_anio,per_dep,per_tipo)  constraint pk_coc_personal
  );

revoke all on coc_personal from "public";

{ TABLE aud_coc_personal row size = 44 number of columns = 13 index size = 0 }

create table aud_coc_personal 
  (
    per_reporte integer,
    per_anio smallint,
    per_dep smallint,
    per_tipo smallint,
    per_cantidad smallint,
    desp_per_reporte integer,
    desp_per_anio smallint,
    desp_per_dep smallint,
    desp_per_tipo smallint,
    desp_per_cantidad smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_personal from "public";

{ TABLE coc_reporte row size = 1944 number of columns = 26 index size = 43 }

create table coc_reporte 
  (
    rep_id integer not null ,
    rep_anio smallint not null ,
    rep_dep smallint not null ,
    rep_mision integer not null ,
    rep_nivel_u smallint not null ,
    rep_cat_resp integer,
    rep_resp_gra smallint,
    rep_telefono varchar(10),
    rep_fec_ini datetime year to minute not null ,
    rep_fec_fin datetime year to minute not null ,
    rep_fec_fin_e datetime year to minute,
    rep_porque char(500) not null ,
    rep_resultado char(500),
    rep_of_comte integer,
    rep_comte_gra smallint,
    rep_of_ops integer,
    rep_ops_gra smallint,
    rep_mje_orden varchar(150),
    rep_mje_inicio varchar(150),
    rep_mje_fin varchar(150),
    rep_mje_cancela varchar(150),
    rep_motivo_canc varchar(255),
    rep_fec_canc datetime year to minute,
    rep_usuario integer not null ,
    rep_fecha datetime year to minute not null ,
    rep_status smallint not null ,
    primary key (rep_id,rep_anio,rep_dep)  constraint pk_reporte
  );

revoke all on coc_reporte from "public";

{ TABLE aud_coc_reporte row size = 3886 number of columns = 53 index size = 0 }

create table aud_coc_reporte 
  (
    rep_id integer,
    rep_anio smallint,
    rep_dep smallint,
    rep_mision integer,
    rep_nivel_u smallint,
    rep_cat_resp integer,
    rep_resp_gra smallint,
    rep_fec_ini datetime year to minute,
    rep_fec_fin datetime year to minute,
    rep_fec_fin_e datetime year to minute,
    rep_porque char(500),
    rep_resultado char(500),
    rep_of_comte integer,
    rep_comte_gra smallint,
    rep_of_ops integer,
    rep_ops_gra smallint,
    rep_mje_orden varchar(150),
    rep_mje_inicio varchar(150),
    rep_mje_fin varchar(150),
    rep_mje_cancela varchar(150),
    rep_motivo_canc varchar(255),
    rep_fec_canc datetime year to minute,
    rep_usuario integer,
    rep_fecha datetime year to minute,
    rep_status smallint,
    desp_rep_id integer,
    desp_rep_anio smallint,
    desp_rep_dep smallint,
    desp_rep_mision integer,
    desp_rep_nivel_u smallint,
    desp_rep_cat_resp integer,
    desp_rep_resp_gra smallint,
    desp_rep_fec_ini datetime year to minute,
    desp_rep_fec_fin datetime year to minute,
    desp_rep_fec_fin_e datetime year to minute,
    desp_rep_porque char(500),
    desp_rep_resultado char(500),
    desp_rep_of_comte integer,
    desp_rep_comte_gra smallint,
    desp_rep_of_ops integer,
    desp_rep_ops_gra smallint,
    desp_rep_mje_orden varchar(150),
    desp_rep_mje_inicio varchar(150),
    desp_rep_mje_fin varchar(150),
    desp_rep_mje_cancela varchar(150),
    desp_rep_motivo_canc varchar(255),
    desp_rep_fec_canc datetime year to minute,
    desp_rep_usuario integer,
    desp_rep_fecha datetime year to minute,
    desp_rep_status smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_reporte from "public";

{ TABLE coc_tipo_veh row size = 107 number of columns = 3 index size = 9 }

create table coc_tipo_veh 
  (
    tve_codigo serial not null ,
    tve_descripcion varchar(100) not null ,
    tve_uso smallint
  );

revoke all on coc_tipo_veh from "public";

{ TABLE aud_coc_tipo_veh row size = 234 number of columns = 9 index size = 0 }

create table aud_coc_tipo_veh 
  (
    tve_codigo integer,
    tve_descripcion varchar(100),
    tve_uso smallint,
    desp_tve_codigo integer,
    desp_tve_descripcion varchar(100),
    desp_tve_uso smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_tipo_veh from "public";

{ TABLE coc_vehiculo_rep row size = 16 number of columns = 6 index size = 41 }

create table coc_vehiculo_rep 
  (
    veh_reporte integer not null ,
    veh_anio smallint not null ,
    veh_dep smallint not null ,
    veh_tipo integer not null ,
    veh_propiedad smallint not null ,
    veh_cantidad smallint not null ,
    primary key (veh_reporte,veh_anio,veh_dep,veh_tipo,veh_propiedad)  constraint 
              pk_coc_vehiculo
  );

revoke all on coc_vehiculo_rep from "public";

{ TABLE aud_coc_vehiculo_rep row size = 52 number of columns = 15 index size = 0 }

create table aud_coc_vehiculo_rep 
  (
    veh_reporte integer,
    veh_anio smallint,
    veh_dep smallint,
    veh_tipo integer,
    veh_propiedad smallint,
    veh_cantidad smallint,
    desp_veh_reporte integer,
    desp_veh_anio smallint,
    desp_veh_dep smallint,
    desp_veh_tipo integer,
    desp_veh_propiedad smallint,
    desp_veh_cantidad smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_vehiculo_rep from "public";

{ TABLE aud_fin_personal row size = 480 number of columns = 57 index size = 0 }

create table aud_fin_personal 
  (
    fper_catalogo integer,
    fper_grado smallint,
    fper_arma smallint,
    fper_nom1 char(15),
    fper_nom2 char(15),
    fper_ape1 char(15),
    fper_ape2 char(15),
    fper_ape3 char(15),
    fper_ced_ord char(4),
    fper_ced_reg char(20),
    fper_fec_ext_ced date,
    fper_ext_ced_lugar char(4),
    fper_est_civil char(1),
    fper_direccion char(50),
    fper_zona smallint,
    fper_dir_lugar char(4),
    fper_telefono integer,
    fper_sexo char(1),
    fper_fec_nac date,
    fper_nac_lugar char(4),
    fper_sangre char(3),
    fper_profesion smallint,
    fper_banco smallint,
    fper_cuenta char(20),
    fper_tip_cuenta char(1),
    fper_situacion char(2),
    fper_dpi char(15),
    desp_fper_catalogo integer,
    desp_fper_grado smallint,
    desp_fper_arma smallint,
    desp_fper_nom1 char(15),
    desp_fper_nom2 char(15),
    desp_fper_ape1 char(15),
    desp_fper_ape2 char(15),
    desp_fper_ape3 char(15),
    desp_fper_ced_ord char(4),
    desp_fper_ced_reg char(20),
    desp_fper_fec_ext_ced date,
    desp_fper_ext_ced_lugar char(4),
    desp_fper_est_civil char(1),
    desp_fper_direccion char(50),
    desp_fper_zona smallint,
    desp_fper_dir_lugar char(4),
    desp_fper_telefono integer,
    desp_fper_sexo char(1),
    desp_fper_fec_nac date,
    desp_fper_nac_lugar char(4),
    desp_fper_sangre char(3),
    desp_fper_profesion smallint,
    desp_fper_banco smallint,
    desp_fper_cuenta char(20),
    desp_fper_tip_cuenta char(1),
    desp_fper_situacion char(2),
    desp_fper_dpi char(15),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fin_personal from "public";

{ TABLE fin_personal row size = 256 number of columns = 27 index size = 23 }

create table fin_personal 
  (
    fper_catalogo integer not null ,
    fper_grado smallint,
    fper_arma smallint,
    fper_nom1 char(15) not null ,
    fper_nom2 char(15),
    fper_ape1 char(15) not null ,
    fper_ape2 char(15),
    fper_ape3 char(15),
    fper_ced_ord char(4),
    fper_ced_reg char(20),
    fper_fec_ext_ced date,
    fper_ext_ced_lugar char(4),
    fper_est_civil char(1),
    fper_direccion varchar(75,10),
    fper_zona smallint,
    fper_dir_lugar char(4),
    fper_telefono integer,
    fper_sexo char(1),
    fper_fec_nac date,
    fper_nac_lugar char(4),
    fper_sangre char(3),
    fper_profesion smallint,
    fper_banco smallint,
    fper_cuenta char(20),
    fper_tip_cuenta char(1),
    fper_situacion char(2) not null ,
    fper_dpi char(15),
    
    check (fper_est_civil IN ('S' ,'C' ,'U' ,'D' ,'V' )) constraint ck_fper_est_civil,
    primary key (fper_catalogo)  constraint pk_fin_personal
  );

revoke all on fin_personal from "public";

{ TABLE coc_dman row size = 194 number of columns = 13 index size = 18 }

create table coc_dman 
  (
    dman_codigo integer not null ,
    dman_dep smallint not null ,
    dman_desc_lg char(100) not null ,
    dman_desc_ct char(50) not null ,
    dman_lat_gra smallint not null ,
    dman_lat_min smallint not null ,
    dman_lat_seg smallint not null ,
    dman_long_gra smallint not null ,
    dman_long_min smallint not null ,
    dman_long_seg smallint not null ,
    dman_decimal_lat decimal(20,18) not null ,
    dman_decimal_long decimal(20,18) not null ,
    dman_situacion integer,
    primary key (dman_codigo,dman_dep)  constraint coc_dman
  );

revoke all on coc_dman from "public";

{ TABLE aud_coc_dman row size = 408 number of columns = 29 index size = 0 }

create table aud_coc_dman 
  (
    dman_codigo integer,
    dman_dep smallint,
    dman_desc_lg char(100),
    dman_desc_ct char(50),
    dman_lat_gra smallint,
    dman_lat_min smallint,
    dman_lat_seg smallint,
    dman_long_gra smallint,
    dman_long_min smallint,
    dman_long_seg smallint,
    dman_decimal_lat decimal(20,18),
    dman_decimal_long decimal(20,18),
    dman_situacion integer,
    desp_dman_codigo integer,
    desp_dman_dep smallint,
    desp_dman_desc_lg char(100),
    desp_dman_desc_ct char(50),
    desp_dman_lat_gra smallint,
    desp_dman_lat_min smallint,
    desp_dman_lat_seg smallint,
    desp_dman_long_gra smallint,
    desp_dman_long_min smallint,
    desp_dman_long_seg smallint,
    desp_dman_decimal_lat decimal(20,18),
    desp_dman_decimal_long decimal(20,18),
    desp_dman_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_dman from "public";

{ TABLE fin_contrato row size = 279 number of columns = 11 index size = 16 }

create table fin_contrato 
  (
    con_catalogo integer,
    con_escuadron smallint,
    con_empleo smallint,
    con_inicia date,
    con_termina date,
    con_pago char(1),
    con_contrato varchar(100),
    con_fec_alta date,
    con_fec_baja date,
    con_motivo varchar(150,20),
    con_hor_trab smallint,
    primary key (con_catalogo)  constraint con_catalogo
  );

revoke all on fin_contrato from "public";

{ TABLE aud_fin_contrato row size = 578 number of columns = 25 index size = 0 }

create table aud_fin_contrato 
  (
    con_catalogo integer,
    con_escuadron smallint,
    con_empleo smallint,
    con_inicia date,
    con_termina date,
    con_pago char(1),
    con_contrato varchar(100),
    con_fec_alta date,
    con_fec_baja date,
    con_motivo varchar(150,20),
    con_hor_trab smallint,
    desp_con_catalogo integer,
    desp_con_escuadron smallint,
    desp_con_empleo smallint,
    desp_con_inicia date,
    desp_con_termina date,
    desp_con_pago char(1),
    desp_con_contrato varchar(100),
    desp_con_fec_alta date,
    desp_con_fec_baja date,
    desp_con_motivo varchar(150,20),
    desp_con_hor_trab smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fin_contrato from "public";

{ TABLE fin_escuadrones row size = 234 number of columns = 6 index size = 14 }

create table fin_escuadrones 
  (
    esc_codigo smallint,
    esc_desc_lg varchar(150,10),
    esc_desc_md varchar(50,5),
    esc_desc_ct varchar(25,3),
    esc_gru_pago smallint,
    esc_dependencia smallint,
    primary key (esc_codigo)  constraint esc_codigo
  );

revoke all on fin_escuadrones from "public";

{ TABLE aud_fin_escuadrones row size = 488 number of columns = 15 index size = 0 }

create table aud_fin_escuadrones 
  (
    esc_codigo smallint,
    esc_desc_lg varchar(150,10),
    esc_desc_md varchar(50,5),
    esc_desc_ct varchar(25,3),
    esc_gru_pago smallint,
    esc_dependencia smallint,
    desp_esc_codigo smallint,
    desp_esc_desc_lg varchar(150,10),
    desp_esc_desc_md varchar(50,5),
    desp_esc_desc_ct varchar(25,3),
    desp_esc_gru_pago smallint,
    desp_esc_dependencia smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fin_escuadrones from "public";

{ TABLE cn row size = 16 number of columns = 6 index size = 0 }

create table cn 
  (
    cn_catalogo integer not null ,
    cn_plaza integer not null ,
    cn_aplicacion smallint not null ,
    cn_nivel char(1) not null ,
    cn_accion char(1) not null ,
    cn_fecha date not null 
  );

revoke all on cn from "public";

{ TABLE cnb row size = 102 number of columns = 2 index size = 6 }

create table cnb 
  (
    cnb_codigo char(1) not null ,
    cnb_desc_lg varchar(100,1) not null ,
    primary key (cnb_codigo) 
  );

revoke all on cnb from "public";

{ TABLE aud_cn row size = 50 number of columns = 15 index size = 0 }

create table aud_cn 
  (
    cn_catalogo integer,
    cn_plaza integer,
    cn_aplicacion smallint,
    cn_nivel char(1),
    cn_accion char(1),
    cn_fecha date,
    desp_cn_catalogo integer,
    desp_cn_plaza integer,
    desp_cn_aplicacion smallint,
    desp_cn_nivel char(1),
    desp_cn_accion char(1),
    desp_cn_fecha date,
    accion char(1) not null ,
    usuario char(10) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cn from "public";

{ TABLE aud_cnb row size = 222 number of columns = 7 index size = 0 }

create table aud_cnb 
  (
    cnb_codigo char(1),
    cnb_desc_lg varchar(100,1),
    desp_cnb_codigo char(1),
    desp_cnb_desc_lg varchar(100,1),
    accion char(1) not null ,
    usuario char(10) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cnb from "public";

{ TABLE aud_cna row size = 122 number of columns = 7 index size = 0 }

create table aud_cna 
  (
    cna_codigo smallint,
    cna_desc_lg char(50),
    desp_cna_codigo smallint,
    desp_cna_desc_lg char(50),
    accion char(1) not null ,
    usuario char(10) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cna from "public";

{ TABLE cns row size = 31 number of columns = 4 index size = 20 }

create table cns 
  (
    sis_catalogo integer,
    sis_pass varchar(20,1) not null ,
    sis_fecha date not null ,
    sis_permiso smallint,
    primary key (sis_catalogo,sis_permiso)  constraint sistemas
  );

revoke all on cns from "public";

{ TABLE aud_usu_sistemas row size = 80 number of columns = 11 index size = 0 }

create table aud_usu_sistemas 
  (
    sis_catalogo integer,
    sis_pass varchar(20,1),
    sis_fecha date,
    sis_permiso smallint,
    desp_sis_catalogo integer,
    desp_sis_pass varchar(20,1),
    desp_sis_fecha date,
    desp_sis_permiso smallint,
    accion char(1) not null ,
    usuario char(10) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_usu_sistemas from "public";

{ TABLE aud_dfam row size = 638 number of columns = 56 index size = 12 }

create table aud_dfam 
  (
    fam_cat_militar integer,
    fam_cat_familiar integer,
    fam_nom1 char(15),
    fam_nom2 char(15),
    fam_ape1 char(15),
    fam_ape2 char(15),
    fam_parentesco smallint,
    fam_sexo char(1),
    fam_sangre char(3),
    fam_est_civil char(1),
    fam_fec_nac date,
    fam_nac_lugar char(4),
    fam_ced_ord char(4),
    fam_ced_reg integer,
    fam_fec_ext_ced date,
    fam_lugar_ext_ced char(4),
    fam_direccion char(50),
    fam_zona smallint,
    fam_dir_lugar char(4),
    fam_telefono integer,
    fam_ocupacion char(30),
    fam_empresa char(30),
    fam_cheque smallint,
    fam_beneficiario smallint,
    fam_emergencia smallint,
    fam_clase_pasiva smallint,
    despues1 char(12),
    despues2 char(12),
    despues3 char(15),
    despues4 char(15),
    despues5 char(15),
    despues6 char(15),
    despues7 char(12),
    despues8 char(1),
    despues9 char(12),
    despues10 char(1),
    despues11 char(12),
    despues12 char(12),
    despues13 char(12),
    despues14 char(12),
    despues15 char(12),
    despues16 char(12),
    despues17 char(50),
    despues18 char(12),
    despues19 char(12),
    despues20 char(12),
    despues21 char(30),
    despues22 char(30),
    despues23 char(12),
    despues24 char(12),
    despues25 char(12),
    despues26 char(12),
    hora datetime year to minute,
    accion char(1),
    usuario char(12),
    tabname char(15)
  );

revoke all on aud_dfam from "public";

{ TABLE prueba_dfam row size = 4 number of columns = 1 index size = 0 }

create table prueba_dfam 
  (
    catalogo integer not null 
  );

revoke all on prueba_dfam from "public";

{ TABLE coc_planificar row size = 1614 number of columns = 5 index size = 18 }

create table coc_planificar 
  (
    pla_dep_llave smallint not null ,
    pla_codigo integer not null ,
    pla_referencia varchar(100,1) not null ,
    pla_descripcion lvarchar(1500),
    pla_situacion integer not null ,
    primary key (pla_dep_llave,pla_codigo)  constraint coc_planificar
  );

revoke all on coc_planificar from "public";

{ TABLE aud_coc_planificar row size = 3248 number of columns = 13 index size = 0 }

create table aud_coc_planificar 
  (
    pla_dep_llave smallint,
    pla_codigo integer,
    pla_referencia varchar(100,1),
    pla_descripcion lvarchar(1500),
    pla_situacion integer,
    desp_pla_dep_llave smallint,
    desp_pla_codigo integer,
    desp_pla_referencia varchar(100,1),
    desp_pla_descripcion lvarchar(1500),
    desp_pla_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_planificar from "public";

{ TABLE tauth row size = 48 number of columns = 2 index size = 0 }

create table tauth 
  (
    usu_user char(8),
    usu_nombre char(40)
  );

revoke all on tauth from "public";

{ TABLE usuarios row size = 38 number of columns = 3 index size = 0 }

create table usuarios 
  (
    grantee integer,
    tabauth char(9),
    tabname char(25)
  );

revoke all on usuarios from "public";

{ TABLE temp_fin_personal row size = 256 number of columns = 27 index size = 9 }

create table temp_fin_personal 
  (
    fper_catalogo integer not null ,
    fper_grado smallint,
    fper_arma smallint,
    fper_nom1 char(15) not null ,
    fper_nom2 char(15),
    fper_ape1 char(15) not null ,
    fper_ape2 char(15),
    fper_ape3 char(15),
    fper_ced_ord char(4),
    fper_ced_reg char(20),
    fper_fec_ext_ced date,
    fper_ext_ced_lugar char(4),
    fper_est_civil char(1),
    fper_direccion varchar(75,10),
    fper_zona smallint,
    fper_dir_lugar char(4),
    fper_telefono integer,
    fper_sexo char(1),
    fper_fec_nac date,
    fper_nac_lugar char(4),
    fper_sangre char(3),
    fper_profesion smallint,
    fper_banco smallint,
    fper_cuenta char(20),
    fper_tip_cuenta char(1),
    fper_situacion char(2) not null ,
    fper_dpi char(15),
    
    check (fper_est_civil IN ('S' ,'C' ,'U' ,'D' ,'V' )) constraint temp_ck_fper_est_civil,
    primary key (fper_catalogo)  constraint temp_pk_fin_personal
  );

revoke all on temp_fin_personal from "public";

{ TABLE cor_tipo_docum row size = 55 number of columns = 2 index size = 9 }

create table cor_tipo_docum 
  (
    tipo_codigo integer not null ,
    tipo_desc varchar(50,5) not null ,
    primary key (tipo_codigo) 
  );

revoke all on cor_tipo_docum from "public";

{ TABLE aud_cor_tipo_docum row size = 130 number of columns = 7 index size = 0 }

create table aud_cor_tipo_docum 
  (
    tipo_codigo integer,
    tipo_desc varchar(50,5),
    desp_tipo_codigo integer,
    desp_tipo_desc varchar(50,5),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cor_tipo_docum from "public";

{ TABLE cor_proposito row size = 105 number of columns = 2 index size = 9 }

create table cor_proposito 
  (
    prop_codigo integer not null ,
    prop_desc varchar(100,5) not null ,
    primary key (prop_codigo)  constraint prop_codigo
  );

revoke all on cor_proposito from "public";

{ TABLE aud_cor_proposito row size = 230 number of columns = 7 index size = 0 }

create table aud_cor_proposito 
  (
    prop_codigo integer,
    prop_desc varchar(100,5),
    desp_prop_codigo integer,
    desp_prop_desc varchar(100,5),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cor_proposito from "public";

{ TABLE cor_ubicacion_docum row size = 507 number of columns = 14 index size = 22 }

create table cor_ubicacion_docum 
  (
    ubi_codigo integer not null ,
    ubi_documento integer not null ,
    ubi_remite_ofi integer not null ,
    ubi_remite_usu integer not null ,
    ubi_remite_fec datetime year to second not null ,
    ubi_remite_folios integer not null ,
    ubi_tipo_doc_remite integer not null ,
    ubi_doc_remite varchar(200,2) not null ,
    ubi_observaciones varchar(255,1) not null ,
    ubi_int_ext char(1) not null ,
    ubi_recibe_of integer not null ,
    ubi_recibe_usu integer,
    ubi_recibe_fec datetime year to second,
    ubi_recibe_status char(1) not null ,
    primary key (ubi_codigo,ubi_documento)  constraint cor_ubicacion
  );

revoke all on cor_ubicacion_docum from "public";

{ TABLE aud_cor_ubicacion_docum row size = 1034 number of columns = 31 index size = 0 }

create table aud_cor_ubicacion_docum 
  (
    ubi_codigo integer,
    ubi_documento integer,
    ubi_remite_ofi integer,
    ubi_remite_usu integer,
    ubi_remite_fec datetime year to second,
    ubi_remite_folios integer,
    ubi_tipo_doc_remite integer,
    ubi_doc_remite varchar(200,2),
    ubi_observaciones varchar(255,1),
    ubi_int_ext char(1),
    ubi_recibe_of integer,
    ubi_recibe_usu integer,
    ubi_recibe_fec datetime year to second,
    ubi_recibe_status char(1),
    desp_ubi_codigo integer,
    desp_ubi_documento integer,
    desp_ubi_remite_ofi integer,
    desp_ubi_remite_usu integer,
    desp_ubi_remite_fec datetime year to second,
    desp_ubi_remite_folios integer,
    desp_ubi_tipo_doc_remite integer,
    desp_ubi_doc_remite varchar(200,2),
    desp_ubi_observaciones varchar(255,1),
    desp_ubi_int_ext char(1),
    desp_ubi_recibe_of integer,
    desp_ubi_recibe_usu integer,
    desp_ubi_recibe_fec datetime year to second,
    desp_ubi_recibe_status char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cor_ubicacion_docum from "public";

{ TABLE cor_documento row size = 659 number of columns = 22 index size = 36 }

create table cor_documento 
  (
    doc_codigo integer not null ,
    doc_oficina integer not null ,
    doc_tipo integer not null ,
    doc_nombre varchar(200,5) not null ,
    doc_prioridad integer not null ,
    doc_asunto varchar(255,1) not null ,
    doc_fec_realizado date not null ,
    doc_fec_ingresado datetime year to second not null ,
    doc_num_hojas integer not null ,
    doc_destino integer not null ,
    doc_procedencia integer not null ,
    doc_status char(1) not null ,
    doc_interesado varchar(50,5) not null ,
    doc_clasificacion integer not null ,
    doc_proposito integer not null ,
    doc_recibe integer not null ,
    doc_interno char(1) not null ,
    doc_solucion char(1) not null ,
    doc_referencia varchar(75,1) not null ,
    doc_of_actual integer not null ,
    doc_ult_tras datetime year to second not null ,
    doc_fec_limite datetime year to second,
    primary key (doc_codigo)  constraint codigo
  );

revoke all on cor_documento from "public";

{ TABLE aud_cor_documento row size = 1338 number of columns = 47 index size = 0 }

create table aud_cor_documento 
  (
    doc_codigo integer,
    doc_oficina integer,
    doc_tipo integer,
    doc_nombre varchar(200,5),
    doc_prioridad integer,
    doc_asunto varchar(255,1),
    doc_fec_realizado date,
    doc_fec_ingresado datetime year to second,
    doc_num_hojas integer,
    doc_destino integer,
    doc_procedencia integer,
    doc_status char(1),
    doc_interesado varchar(50,5),
    doc_clasificacion integer,
    doc_proposito integer,
    doc_recibe integer,
    doc_interno char(1),
    doc_solucion char(1),
    doc_referencia varchar(75,1),
    doc_of_actual integer,
    doc_ult_tras datetime year to second,
    doc_fec_limite datetime year to second,
    desp_doc_codigo integer,
    desp_doc_oficina integer,
    desp_doc_tipo integer,
    desp_doc_nombre varchar(200,5),
    desp_doc_prioridad integer,
    desp_doc_asunto varchar(255,1),
    desp_doc_fec_realizado date,
    desp_doc_fec_ingresado datetime year to second,
    desp_doc_num_hojas integer,
    desp_doc_destino integer,
    desp_doc_procedencia integer,
    desp_doc_status char(1),
    desp_doc_interesado varchar(50,5),
    desp_doc_clasificacion integer,
    desp_doc_proposito integer,
    desp_doc_recibe integer,
    desp_doc_interno char(1),
    desp_doc_solucion char(1),
    desp_doc_referencia varchar(75,1),
    desp_doc_of_actual integer,
    desp_doc_ult_tras datetime year to second,
    desp_doc_fec_limite datetime year to second,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cor_documento from "public";

{ TABLE cor_empresas row size = 142 number of columns = 4 index size = 9 }

create table cor_empresas 
  (
    emp_codigo integer not null ,
    emp_desc_lg varchar(75,1) not null ,
    emp_desc_md varchar(40,1) not null ,
    emp_desc_ct varchar(20,1) not null ,
    primary key (emp_codigo)  constraint cod3
  );

revoke all on cor_empresas from "public";

{ TABLE aud_cor_empresas row size = 304 number of columns = 11 index size = 0 }

create table aud_cor_empresas 
  (
    emp_codigo integer,
    emp_desc_lg varchar(75,1),
    emp_desc_md varchar(40,1),
    emp_desc_ct varchar(20,1),
    desp_emp_codigo integer,
    desp_emp_desc_lg varchar(75,1),
    desp_emp_desc_md varchar(40,1),
    desp_emp_desc_ct varchar(20,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cor_empresas from "public";

{ TABLE cor_oficinas row size = 97 number of columns = 5 index size = 16 }

create table cor_oficinas 
  (
    of_codigo integer not null ,
    of_oficina varchar(10,1) not null ,
    of_dependencia smallint not null ,
    of_descripcion varchar(75,1) not null ,
    of_mensajes integer not null ,
    primary key (of_codigo)  constraint of_codigo
  );

revoke all on cor_oficinas from "public";

{ TABLE aud_cor_oficinas row size = 214 number of columns = 13 index size = 0 }

create table aud_cor_oficinas 
  (
    of_codigo integer,
    of_oficina varchar(10,1),
    of_dependencia smallint,
    of_descripcion varchar(75,1),
    of_mensajes integer,
    desp_of_codigo integer,
    desp_of_oficina varchar(10,1),
    desp_of_dependencia smallint,
    desp_of_descripcion varchar(75,1),
    desp_of_mensajes integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cor_oficinas from "public";

{ TABLE lmun_solicitud row size = 1086 number of columns = 17 index size = 18 }

create table lmun_solicitud 
  (
    sol_codigo integer not null ,
    sol_dep_llave smallint not null ,
    sol_catalogo_solicita integer not null ,
    sol_grado_solicita integer not null ,
    sol_fecha_solicita datetime year to second not null ,
    sol_msj_solicita varchar(255,1) not null ,
    sol_fecha_solicita2 date,
    sol_msj_solicita2 varchar(255,1),
    sol_catalogo_autoriza integer,
    sol_grado_autoriza integer,
    sol_fecha_autoriza datetime year to second,
    sol_msj_autoriza varchar(255,1),
    sol_catalogo_ordena integer,
    sol_grado_ordena integer,
    sol_fecha_ordena datetime year to second,
    sol_msj_ordena varchar(255,1),
    sol_situacion integer not null ,
    primary key (sol_codigo,sol_dep_llave)  constraint pk_sol_codigo_sol_dep_llave
  );

revoke all on lmun_solicitud from "public";

{ TABLE lmun_lote row size = 268 number of columns = 4 index size = 9 }

create table lmun_lote 
  (
    lote_codigo integer not null ,
    lote_descripcion varchar(255,1) not null ,
    lote_fecha date,
    lote_situacion integer not null ,
    primary key (lote_codigo)  constraint pk_lote_codigo
  );

revoke all on lmun_lote from "public";

{ TABLE lmun_detalle_solicitud row size = 30 number of columns = 8 index size = 53 }

create table lmun_detalle_solicitud 
  (
    sdet_sol_codigo integer not null ,
    sdet_sol_dep_llave smallint not null ,
    sdet_codigo integer not null ,
    sdet_cal_codigo integer not null ,
    sdet_tipo_codigo integer not null ,
    sdet_uso_codigo integer not null ,
    sdet_eslabonada integer not null ,
    sdet_cantidad integer not null ,
    primary key (sdet_sol_codigo,sdet_sol_dep_llave,sdet_codigo)  constraint pk_sdet_sol_codigo_sdet_sol_dep_llave_sdet_codigo
  );

revoke all on lmun_detalle_solicitud from "public";

{ TABLE lmun_lote_asig row size = 10 number of columns = 3 index size = 36 }

create table lmun_lote_asig 
  (
    asig_lote_codigo integer not null ,
    asig_dep_llave smallint,
    asig_lote_situacion integer,
    primary key (asig_lote_codigo,asig_dep_llave)  constraint pk_lote_asig
  );

revoke all on lmun_lote_asig from "public";

{ TABLE lmun_tipo row size = 264 number of columns = 3 index size = 9 }

create table lmun_tipo 
  (
    tipo_codigo integer not null ,
    tipo_descripcion varchar(255,1) not null ,
    tipo_situacion integer not null ,
    primary key (tipo_codigo)  constraint pk_tipo_codigo
  );

revoke all on lmun_tipo from "public";

{ TABLE lmun_calibre row size = 264 number of columns = 3 index size = 9 }

create table lmun_calibre 
  (
    cal_codigo integer not null ,
    cal_descripcion varchar(255,1) not null ,
    cal_situacion integer not null ,
    primary key (cal_codigo)  constraint pk_cal_codigo
  );

revoke all on lmun_calibre from "public";

{ TABLE lmun_uso row size = 264 number of columns = 3 index size = 9 }

create table lmun_uso 
  (
    uso_codigo integer not null ,
    uso_descripcion varchar(255,1) not null ,
    uso_situacion integer not null ,
    primary key (uso_codigo)  constraint pk_uso_codigo
  );

revoke all on lmun_uso from "public";

{ TABLE lmun_ent_sal row size = 50 number of columns = 13 index size = 62 }

create table lmun_ent_sal 
  (
    es_codigo integer not null ,
    es_con_codigo integer not null ,
    es_con_dep_llave smallint not null ,
    es_lote_codigo integer not null ,
    es_uso_codigo integer not null ,
    es_tipo_codigo integer not null ,
    es_cal_codigo integer not null ,
    es_eslabonada integer not null ,
    es_carga integer not null ,
    es_cantidad integer not null ,
    es_status integer not null ,
    es_tipo integer not null ,
    es_situacion integer not null ,
    primary key (es_codigo,es_con_codigo,es_con_dep_llave)  constraint pk_es_codigo_es_con_codigo_es_con_dep_llave
  );

revoke all on lmun_ent_sal from "public";

{ TABLE aud_lmarmas1 row size = 48 number of columns = 6 index size = 0 }

create table aud_lmarmas1 
  (
    arm_cat integer,
    arm_numero char(20),
    arm_plaza integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmarmas1 from "public";

{ TABLE mag_egresos row size = 338 number of columns = 10 index size = 43 }

create table mag_egresos 
  (
    egr_id integer not null ,
    egr_fecha datetime year to second not null ,
    egr_usuario integer not null ,
    egr_dependencia smallint not null ,
    egr_departamento char(4) not null ,
    egr_municipio char(4) not null ,
    egr_observaciones varchar(255,1),
    egr_referencia char(50),
    egr_personal integer,
    egr_situacion smallint not null ,
    primary key (egr_id)  constraint fk_egresos
  );

revoke all on mag_egresos from "public";

{ TABLE aud_mag_egresos row size = 696 number of columns = 23 index size = 0 }

create table aud_mag_egresos 
  (
    egr_id integer,
    egr_fecha datetime year to second,
    egr_usuario integer,
    egr_dependencia smallint,
    egr_departamento char(4),
    egr_municipio char(4),
    egr_observaciones varchar(255,1),
    egr_referencia char(50),
    egr_personal integer,
    egr_situacion smallint,
    desp_egr_id integer,
    desp_egr_fecha datetime year to second,
    desp_egr_usuario integer,
    desp_egr_dependencia smallint,
    desp_egr_departamento char(4),
    desp_egr_municipio char(4),
    desp_egr_observaciones varchar(255,1),
    desp_egr_referencia char(50),
    desp_egr_personal integer,
    desp_egr_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mag_egresos from "public";

{ TABLE mag_inventario row size = 35 number of columns = 6 index size = 43 }

create table mag_inventario 
  (
    inv_id serial not null ,
    inv_dependencia smallint not null ,
    inv_departamento char(4) not null ,
    inv_municipio char(4) not null ,
    inv_insumo integer not null ,
    inv_cantidad decimal(32,2) not null ,
    primary key (inv_id)  constraint fk_inventario
  );

revoke all on mag_inventario from "public";

{ TABLE aud_mag_inventario row size = 90 number of columns = 15 index size = 0 }

create table aud_mag_inventario 
  (
    inv_id integer,
    inv_dependencia smallint,
    inv_departamento char(4),
    inv_municipio char(4),
    inv_insumo integer,
    inv_cantidad decimal(32,2),
    desp_inv_id integer,
    desp_inv_dependencia smallint,
    desp_inv_departamento char(4),
    desp_inv_municipio char(4),
    desp_inv_insumo integer,
    desp_inv_cantidad decimal(32,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mag_inventario from "public";

{ TABLE mag_insumos row size = 160 number of columns = 4 index size = 9 }

create table mag_insumos 
  (
    ins_id serial not null ,
    ins_descripcion varchar(100,50) not null ,
    ins_medida varchar(50,2) not null ,
    ins_situacion integer not null ,
    primary key (ins_id)  constraint pk_insumo
  );

revoke all on mag_insumos from "public";

{ TABLE aud_mag_insumos row size = 340 number of columns = 11 index size = 0 }

create table aud_mag_insumos 
  (
    ins_id integer,
    ins_descripcion varchar(100,50),
    ins_medida varchar(50,2),
    ins_situacion integer,
    desp_ins_id integer,
    desp_ins_descripcion varchar(100,50),
    desp_ins_medida varchar(50,2),
    desp_ins_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mag_insumos from "public";

{ TABLE mag_det_ingreso row size = 29 number of columns = 4 index size = 27 }

create table mag_det_ingreso 
  (
    det_id serial not null ,
    det_id_ingreso integer not null ,
    det_insumo integer not null ,
    det_cantidad decimal(32,2) not null ,
    primary key (det_id)  constraint pk_det_ingreso
  );

revoke all on mag_det_ingreso from "public";

{ TABLE aud_mag_det_ingreso row size = 78 number of columns = 11 index size = 0 }

create table aud_mag_det_ingreso 
  (
    det_id integer,
    det_id_ingreso integer,
    det_insumo integer,
    det_cantidad decimal(32,2),
    desp_det_id integer,
    desp_det_id_ingreso integer,
    desp_det_insumo integer,
    desp_det_cantidad decimal(32,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mag_det_ingreso from "public";

{ TABLE mag_det_egreso row size = 29 number of columns = 4 index size = 31 }

create table mag_det_egreso 
  (
    det_id_eg serial not null ,
    det_id_egreso integer not null ,
    det_insumo_eg integer not null ,
    det_cantidad_eg decimal(32,2) not null ,
    primary key (det_id_egreso,det_insumo_eg)  constraint pk_det_egreso
  );

revoke all on mag_det_egreso from "public";

{ TABLE aud_mag_det_egreso row size = 78 number of columns = 11 index size = 0 }

create table aud_mag_det_egreso 
  (
    det_id_eg integer,
    det_id_egreso integer,
    det_insumo_eg integer,
    det_cantidad_eg decimal(32,2),
    desp_det_id_eg integer,
    desp_det_id_egreso integer,
    desp_det_insumo_eg integer,
    desp_det_cantidad_eg decimal(32,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mag_det_egreso from "public";

{ TABLE mag_ingresos row size = 338 number of columns = 10 index size = 43 }

create table mag_ingresos 
  (
    ing_id integer not null ,
    ing_fecha datetime year to second not null ,
    ing_usuario integer not null ,
    ing_dependencia smallint not null ,
    ing_departamento char(4) not null ,
    ing_municipio char(4) not null ,
    ing_observaciones varchar(255,1),
    ing_referencia char(50),
    ing_personal integer,
    ing_situacion smallint not null ,
    primary key (ing_id)  constraint fk_ingreso
  );

revoke all on mag_ingresos from "public";

{ TABLE aud_mag_ingresos row size = 696 number of columns = 23 index size = 0 }

create table aud_mag_ingresos 
  (
    ing_id integer,
    ing_fecha datetime year to second,
    ing_usuario integer,
    ing_dependencia smallint,
    ing_departamento char(4),
    ing_municipio char(4),
    ing_observaciones varchar(255,1),
    ing_referencia char(50),
    ing_personal integer,
    ing_situacion smallint,
    desp_ing_id integer,
    desp_ing_fecha datetime year to second,
    desp_ing_usuario integer,
    desp_ing_dependencia smallint,
    desp_ing_departamento char(4),
    desp_ing_municipio char(4),
    desp_ing_observaciones varchar(255,1),
    desp_ing_referencia char(50),
    desp_ing_personal integer,
    desp_ing_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mag_ingresos from "public";

{ TABLE lmun_conocimiento row size = 1088 number of columns = 22 index size = 18 }

create table lmun_conocimiento 
  (
    con_codigo integer not null ,
    con_dep_llave smallint not null ,
    con_numero_libro varchar(255,1) not null ,
    con_folio_libro varchar(255,1) not null ,
    con_conocimiento_libro varchar(255,1) not null ,
    con_tipo_libro integer not null ,
    con_grado_entrego integer not null ,
    con_catalogo_entrego integer not null ,
    con_dep_llave_entrego smallint not null ,
    con_org_plaza_entrego integer,
    con_grado_recibio integer not null ,
    con_catalogo_recibio integer not null ,
    con_dep_llave_recibio smallint not null ,
    con_org_plaza_recibio integer,
    con_grado_autorizo integer not null ,
    con_catalogo_autorizo integer not null ,
    con_dep_llave_autorizo smallint not null ,
    con_org_plaza_autorizo integer,
    con_mensaje varchar(255,1) not null ,
    con_fecha_mensaje date not null ,
    con_fecha_conocimiento date not null ,
    con_situacion integer not null ,
    primary key (con_codigo,con_dep_llave)  constraint pk_con_codigo_con_dep_llave
  );

revoke all on lmun_conocimiento from "public";

{ TABLE usu_autocom row size = 1021 number of columns = 7 index size = 9 }

create table usu_autocom 
  (
    usu_catalogo integer not null ,
    usu_pass varchar(250) not null ,
    usu_contrapass varchar(250) not null ,
    usu_pregunta varchar(250),
    usu_respuesta varchar(255),
    usu_habilita integer not null ,
    usu_seguridad integer not null ,
    primary key (usu_catalogo) 
  );

revoke all on usu_autocom from "public";

{ TABLE cor_corr_seg row size = 59 number of columns = 8 index size = 18 }

create table cor_corr_seg 
  (
    seg_usuario integer not null ,
    seg_pass varchar(30,1) not null ,
    seg_oficina integer not null ,
    seg_plaza integer not null ,
    seg_nivel integer not null ,
    seg_seguridad integer not null ,
    seg_habilita integer not null ,
    seg_situacion integer not null ,
    primary key (seg_usuario)  constraint segusuario
  );

revoke all on cor_corr_seg from "public";

{ TABLE aud_cor_corr_seg row size = 138 number of columns = 19 index size = 0 }

create table aud_cor_corr_seg 
  (
    seg_usuario integer,
    seg_pass varchar(30,1),
    seg_oficina integer,
    seg_plaza integer,
    seg_nivel integer,
    seg_seguridad integer,
    seg_habilita integer,
    seg_situacion integer,
    desp_seg_usuario integer,
    desp_seg_pass varchar(30,1),
    desp_seg_oficina integer,
    desp_seg_plaza integer,
    desp_seg_nivel integer,
    desp_seg_seguridad integer,
    desp_seg_habilita integer,
    desp_seg_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cor_corr_seg from "public";

{ TABLE lmun_asig_arm row size = 22 number of columns = 7 index size = 18 }

create table lmun_asig_arm 
  (
    asig_lot_tipo smallint not null ,
    asig_lot_cod smallint not null ,
    asig_basica integer not null ,
    asig_cia integer,
    asig_btn integer,
    asig_brigada integer,
    asig_tolvas smallint,
    primary key (asig_lot_tipo,asig_lot_cod)  constraint pk_lmun_asig
  );

revoke all on lmun_asig_arm from "public";

{ TABLE arco_escalafon row size = 41 number of columns = 9 index size = 22 }

create table arco_escalafon 
  (
    esca_cat integer not null ,
    esca_grado smallint not null ,
    esca_plaza integer not null ,
    esca_plaza_nivel smallint,
    esca_fec_asc char(10) not null ,
    esca_fec_prox_asc char(10) not null ,
    esca_nota decimal(4,2),
    esca_ubica smallint,
    esca_fec date not null ,
    primary key (esca_cat,esca_fec)  constraint pk_arco_esca
  );

revoke all on arco_escalafon from "public";

{ TABLE aud_arco_escalafon row size = 102 number of columns = 21 index size = 0 }

create table aud_arco_escalafon 
  (
    esca_cat integer,
    esca_grado smallint,
    esca_plaza integer,
    esca_plaza_nivel smallint,
    esca_fec_asc char(10),
    esca_fec_prox_asc char(10),
    esca_nota decimal(4,2),
    esca_ubica smallint,
    esca_fec date,
    desp_esca_cat integer,
    desp_esca_grado smallint,
    desp_esca_plaza integer,
    desp_esca_plaza_nivel smallint,
    desp_esca_fec_asc char(10),
    desp_esca_fec_prox_asc char(10),
    desp_esca_nota decimal(4,2),
    desp_esca_ubica smallint,
    desp_esca_fec date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_escalafon from "public";

{ TABLE arco_escalafonp row size = 41 number of columns = 9 index size = 13 }

create table arco_escalafonp 
  (
    esca_cat integer not null ,
    esca_grado smallint not null ,
    esca_plaza integer not null ,
    esca_plaza_nivel smallint,
    esca_fec_asc char(10) not null ,
    esca_fec_prox_asc char(10) not null ,
    esca_nota decimal(4,2),
    esca_ubica smallint,
    esca_fec date not null ,
    primary key (esca_cat,esca_fec)  constraint pk_arco_escap
  );

revoke all on arco_escalafonp from "public";

{ TABLE arco_not_creditos row size = 26 number of columns = 8 index size = 13 }

create table arco_not_creditos 
  (
    not_catalogo integer not null ,
    not_fecha date not null ,
    not_curmil decimal(4,2) not null ,
    not_carruni decimal(4,2) not null ,
    not_curcap decimal(4,2) not null ,
    not_idiomas decimal(4,2) not null ,
    not_conde decimal(4,2) not null ,
    not_total decimal(4,2) not null ,
    primary key (not_catalogo,not_fecha)  constraint pk_arco_not_creditos
  );

revoke all on arco_not_creditos from "public";

{ TABLE arco_escalafon1 row size = 43 number of columns = 12 index size = 13 }

create table arco_escalafon1 
  (
    esca_cat integer not null ,
    esca_grado smallint not null ,
    esca_grado_equi smallint not null ,
    esca_plaza integer not null ,
    esca_plaza_nivel smallint,
    esca_fec_asc date not null ,
    esca_fec_prox_asc char(10) not null ,
    esca_nota decimal(4,2),
    esca_promocion smallint,
    esca_categoria char(4) not null ,
    erca_arma smallint not null ,
    esca_fec date not null ,
    primary key (esca_cat,esca_fec)  constraint pk_arcoo_esca
  );

revoke all on arco_escalafon1 from "public";

{ TABLE tiempos row size = 56 number of columns = 13 index size = 9 }

create table tiempos 
  (
    t_catalogo integer,
    t_total integer not null ,
    t_jubilacion integer not null ,
    t_oficial integer not null ,
    t_esp_ofi integer not null ,
    t_form_mil integer not null ,
    t_grado integer not null ,
    t_depen integer not null ,
    t_ult_asc date not null ,
    t_prox_asc char(10) not null ,
    t_puesto integer not null ,
    t_edad smallint,
    t_alta date,
    primary key (t_catalogo) 
  );

revoke all on tiempos from "public";

{ TABLE arco_pcomando row size = 135 number of columns = 13 index size = 17 }

create table arco_pcomando 
  (
    pcom_catalogo integer not null ,
    pcom_meom_ceom char(6) not null ,
    pcom_desc_ceom char(35) not null ,
    pcom_grado smallint not null ,
    pcom_descgrado char(8) not null ,
    pcom_arma smallint not null ,
    pcom_descempleo char(45) not null ,
    pcom_plaza integer not null ,
    pcom_fecnomb date not null ,
    pcom_feccese date not null ,
    pcom_dependencia smallint not null ,
    pcom_descdependencia char(15) not null ,
    pcom_fec date not null ,
    primary key (pcom_catalogo,pcom_fecnomb,pcom_fec)  constraint pk_arco_pcomando
  );

revoke all on arco_pcomando from "public";

{ TABLE dot_uniformes row size = 57 number of columns = 4 index size = 7 }

create table dot_uniformes 
  (
    uni_codigo smallint not null ,
    uni_fuerza smallint not null ,
    uni_descrip varchar(50,1) not null ,
    uni_situacion smallint not null ,
    primary key (uni_codigo)  constraint pk_codd
  );

revoke all on dot_uniformes from "public";

{ TABLE aud_dot_uniformes row size = 134 number of columns = 11 index size = 0 }

create table aud_dot_uniformes 
  (
    uni_codigo smallint,
    uni_fuerza smallint,
    uni_descrip varchar(50,1),
    uni_situacion smallint,
    desp_uni_codigo smallint,
    desp_uni_fuerza smallint,
    desp_uni_descrip varchar(50,1),
    desp_uni_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dot_uniformes from "public";

{ TABLE dot_solicitud row size = 358 number of columns = 13 index size = 9 }

create table dot_solicitud 
  (
    sol_numero integer not null ,
    sol_mensaje varchar(50,10) not null ,
    sol_fecha date not null ,
    sol_com_catalogo integer not null ,
    sol_log_cat integer not null ,
    sol_observaciones varchar(250,1) not null ,
    sol_situacion varchar(10,1) not null ,
    sol_dotacion varchar(10,5) not null ,
    sol_dependencia smallint not null ,
    sol_jerarquia integer,
    sol_usuario integer,
    sol_hoja integer,
    sol_cant_hojas integer,
    primary key (sol_numero)  constraint pk_solicit
  );

revoke all on dot_solicitud from "public";

{ TABLE aud_dot_solicitud row size = 736 number of columns = 29 index size = 0 }

create table aud_dot_solicitud 
  (
    sol_numero integer,
    sol_mensaje varchar(50,10),
    sol_fecha date,
    sol_com_catalogo integer,
    sol_log_cat integer,
    sol_observaciones varchar(250,1),
    sol_situacion varchar(10,1),
    sol_dotacion varchar(10,5),
    sol_dependencia smallint,
    sol_jerarquia integer,
    sol_usuario integer,
    sol_hoja integer,
    sol_cant_hojas integer,
    desp_sol_numero integer,
    desp_sol_mensaje varchar(50,10),
    desp_sol_fecha date,
    desp_sol_com_catalogo integer,
    desp_sol_log_cat integer,
    desp_sol_observaciones varchar(250,1),
    desp_sol_situacion varchar(10,1),
    desp_sol_dotacion varchar(10,5),
    desp_sol_dependencia smallint,
    desp_sol_jerarquia integer,
    desp_sol_usuario integer,
    desp_sol_hoja integer,
    desp_sol_cant_hojas integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dot_solicitud from "public";

{ TABLE dot_detalle row size = 64 number of columns = 12 index size = 13 }

create table dot_detalle 
  (
    det_solicitud integer not null ,
    det_catalogo integer not null ,
    det_grado smallint not null ,
    det_codigo_uni smallint not null ,
    det_talla_uni varchar(6,1) not null ,
    det_talla_bota varchar(5,1) not null ,
    det_talla_gorra varchar(6,1) not null ,
    det_situacion integer not null ,
    det_fecha date not null ,
    det_usuario integer not null ,
    det_comprobante integer not null ,
    det_codbarra varchar(15,1),
    primary key (det_solicitud,det_catalogo)  constraint pk_detsolicitud
  );

revoke all on dot_detalle from "public";

{ TABLE aud_dot_detalle row size = 148 number of columns = 27 index size = 0 }

create table aud_dot_detalle 
  (
    det_solicitud integer,
    det_catalogo integer,
    det_grado smallint,
    det_codigo_uni smallint,
    det_talla_uni varchar(6,1),
    det_talla_bota varchar(5,1),
    det_talla_gorra varchar(6,1),
    det_situacion integer,
    det_fecha date,
    det_usuario integer,
    det_comprobante integer,
    det_codbarra varchar(15,1),
    desp_det_solicitud integer,
    desp_det_catalogo integer,
    desp_det_grado smallint,
    desp_det_codigo_uni smallint,
    desp_det_talla_uni varchar(6,1),
    desp_det_talla_bota varchar(5,1),
    desp_det_talla_gorra varchar(6,1),
    desp_det_situacion integer,
    desp_det_fecha date,
    desp_det_usuario integer,
    desp_det_comprobante integer,
    desp_det_codbarra varchar(15,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dot_detalle from "public";

{ TABLE inv_proveedor row size = 308 number of columns = 7 index size = 7 }

create table inv_proveedor 
  (
    pro_codigo smallint not null ,
    pro_nombre char(20) not null ,
    pro_nit integer not null ,
    pro_direccion varchar(255),
    pro_telefono integer,
    pro_correo char(20),
    pro_situacion smallint not null ,
    primary key (pro_codigo)  constraint pk_proveedor
  );

revoke all on inv_proveedor from "public";

{ TABLE aud_inv_proveedor row size = 636 number of columns = 17 index size = 0 }

create table aud_inv_proveedor 
  (
    pro_codigo smallint,
    pro_nombre char(20),
    pro_nit integer,
    pro_direccion varchar(255),
    pro_telefono integer,
    pro_correo char(20),
    pro_situacion smallint,
    desp_pro_codigo smallint,
    desp_pro_nombre char(20),
    desp_pro_nit integer,
    desp_pro_direccion varchar(255),
    desp_pro_telefono integer,
    desp_pro_correo char(20),
    desp_pro_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_proveedor from "public";

{ TABLE inv_representante row size = 88 number of columns = 7 index size = 7 }

create table inv_representante 
  (
    rep_codigo smallint not null ,
    rep_nom1 char(20) not null ,
    rep_nom2 char(20),
    rep_ape1 char(20) not null ,
    rep_ape2 char(20),
    rep_telefono integer,
    rep_situacion smallint not null ,
    primary key (rep_codigo)  constraint representante
  );

revoke all on inv_representante from "public";

{ TABLE inv_asig_repre_provee row size = 8 number of columns = 4 index size = 21 }

create table inv_asig_repre_provee 
  (
    asig_codigo smallint not null ,
    asig_proveedor smallint not null ,
    asig_representante smallint not null ,
    asig_situacion smallint not null ,
    primary key (asig_codigo)  constraint asignacion
  );

revoke all on inv_asig_repre_provee from "public";

{ TABLE inv_detalle row size = 306 number of columns = 10 index size = 33 }

create table inv_detalle 
  (
    det_codigo integer not null ,
    det_formulario integer not null ,
    det_tipo char(2) not null ,
    det_lote integer not null ,
    det_articulo integer not null ,
    det_grupo integer not null ,
    det_cantidad integer not null ,
    det_calidad char(20) not null ,
    det_observaciones varchar(255,1) not null ,
    det_situaciones integer not null ,
    primary key (det_codigo,det_formulario,det_tipo)  constraint inv_detalle_pk11
  );

revoke all on inv_detalle from "public";

{ TABLE inv_articulo row size = 114 number of columns = 5 index size = 18 }

create table inv_articulo 
  (
    art_codigo integer not null ,
    art_grupo integer not null ,
    art_desc_corta varchar(50,1) not null ,
    art_desc_larga varchar(50,1) not null ,
    art_situacion integer not null ,
    primary key (art_codigo)  constraint artcodigo
  );

revoke all on inv_articulo from "public";

{ TABLE inv_clase row size = 288 number of columns = 4 index size = 7 }

create table inv_clase 
  (
    cla_codigo smallint not null ,
    cla_nombre varchar(25,1) not null ,
    cla_descripcion varchar(255,1) not null ,
    cla_situacion integer not null ,
    primary key (cla_codigo)  constraint id_clase
  );

revoke all on inv_clase from "public";

{ TABLE aud_inv_clase row size = 596 number of columns = 11 index size = 0 }

create table aud_inv_clase 
  (
    cla_codigo smallint,
    cla_nombre varchar(25),
    cla_descripcion varchar(255),
    cla_situacion integer,
    desp_cla_codigo smallint,
    desp_cla_nombre varchar(25),
    desp_cla_descripcion varchar(255),
    desp_cla_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_clase from "public";

{ TABLE aud_inv_grupo row size = 132 number of columns = 13 index size = 0 }

create table aud_inv_grupo 
  (
    grup_codigo integer,
    grup_clase smallint,
    grup_tipo char(20) not null ,
    grup_descripcion varchar(25,1),
    grup_situacion integer,
    desp_grup_codigo integer,
    desp_grup_clase smallint,
    desp_grup_tipo char(20) not null ,
    desp_grup_descripcion varchar(25,1),
    desp_grup_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_grupo from "public";

{ TABLE aud_inv_articulo row size = 248 number of columns = 13 index size = 0 }

create table aud_inv_articulo 
  (
    art_codigo integer,
    art_grupo integer,
    art_desc_corta varchar(50,1),
    art_desc_larga varchar(50,1),
    art_situacion integer,
    desp_art_codigo integer,
    desp_art_grupo integer,
    desp_art_desc_corta varchar(50,1),
    desp_art_desc_larga varchar(50,1),
    desp_art_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_articulo from "public";

{ TABLE aud_inv_detalle row size = 632 number of columns = 23 index size = 0 }

create table aud_inv_detalle 
  (
    det_codigo integer,
    det_formulario integer,
    det_tipo char(2),
    det_lote integer,
    det_articulo integer,
    det_grupo integer,
    det_cantidad integer,
    det_calidad char(20),
    det_observaciones varchar(255,1),
    det_situaciones integer,
    desp_det_codigo integer,
    desp_det_formulario integer,
    desp_det_tipo char(2),
    desp_det_lote integer,
    desp_det_articulo integer,
    desp_det_grupo integer,
    desp_det_cantidad integer,
    desp_det_calidad char(20),
    desp_det_observaciones varchar(255,1),
    desp_det_situaciones integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_detalle from "public";

{ TABLE aud_inv_asig_repre_provee row size = 36 number of columns = 11 index size = 0 }

create table aud_inv_asig_repre_provee 
  (
    asig_codigo smallint,
    asig_proveedor smallint,
    asig_representante smallint,
    asig_situacion smallint,
    desp_asig_codigo smallint,
    desp_asig_proveedor smallint,
    desp_asig_representante smallint,
    desp_asig_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_asig_repre_provee from "public";

{ TABLE aud_inv_representante row size = 196 number of columns = 17 index size = 0 }

create table aud_inv_representante 
  (
    rep_codigo smallint,
    rep_nom1 char(20),
    rep_nom2 char(20),
    rep_ape1 char(20),
    rep_ape2 char(20),
    rep_telefono integer,
    rep_situacion smallint,
    desp_rep_codigo smallint,
    desp_rep_nom1 char(20),
    desp_rep_nom2 char(20),
    desp_rep_ape1 char(20),
    desp_rep_ape2 char(20),
    desp_rep_telefono integer,
    desp_rep_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_representante from "public";

{ TABLE inv_grupo row size = 56 number of columns = 5 index size = 16 }

create table inv_grupo 
  (
    grup_codigo integer not null ,
    grup_clase smallint not null ,
    grup_tipo char(20) not null ,
    grup_descripcion varchar(25,1) not null ,
    grup_situacion integer not null ,
    primary key (grup_codigo)  constraint pk_grup_codigo
  );

revoke all on inv_grupo from "public";

{ TABLE inv_lote row size = 719 number of columns = 13 index size = 25 }

create table inv_lote 
  (
    lot_codigo integer not null ,
    lot_articulo integer not null ,
    lot_grupo integer not null ,
    lot_dependencia smallint,
    lot_desc_corta varchar(100,1) not null ,
    lot_desc_larga varchar(200,1) not null ,
    lot_existencias integer not null ,
    lot_ubicacion varchar(250,1) not null ,
    lot_numserie varchar(30,1),
    lot_modelo varchar(60,1),
    lot_version char(1),
    lot_frecuencia varchar(50,1),
    lot_situacion integer not null ,
    primary key (lot_codigo)  constraint lotcodigo
  );

revoke all on inv_lote from "public";

{ TABLE inv_formulario row size = 306 number of columns = 17 index size = 39 }

create table inv_formulario 
  (
    for_codigo integer not null ,
    for_tipo char(2) not null ,
    for_fechora datetime year to second not null ,
    for_proveedor smallint,
    for_dep_entrega smallint,
    for_dep_recibe smallint not null ,
    for_representante smallint,
    for_cat_entrega integer,
    for_cat_recibe integer not null ,
    for_cat_encargado integer not null ,
    for_cat_jefe integer not null ,
    for_grad_entrega smallint,
    for_grad_recibe smallint,
    for_grad_encargado smallint,
    for_grad_jefe smallint,
    for_observaciones varchar(255,1) not null ,
    for_situaciones integer not null ,
    primary key (for_codigo,for_tipo)  constraint pk_inv_forulario
  );

revoke all on inv_formulario from "public";

{ TABLE aud_inv_lote row size = 1458 number of columns = 29 index size = 0 }

create table aud_inv_lote 
  (
    lot_codigo integer,
    lot_articulo integer,
    lot_grupo integer,
    lot_dependencia smallint,
    lot_desc_corta varchar(100,1),
    lot_desc_larga varchar(200,1),
    lot_existencias integer,
    lot_ubicacion varchar(250,1),
    lot_numserie varchar(30,1),
    lot_modelo varchar(60,1),
    lot_version char(1),
    lot_frecuencia varchar(50,1),
    lot_situacion integer,
    desp_lot_codigo integer,
    desp_lot_articulo integer,
    desp_lot_grupo integer,
    desp_lot_dependencia smallint,
    desp_lot_desc_corta varchar(100,1),
    desp_lot_desc_larga varchar(200,1),
    desp_lot_existencias integer,
    desp_lot_ubicacion varchar(250,1),
    desp_lot_numserie varchar(30,1),
    desp_lot_modelo varchar(60,1),
    desp_lot_version char(1),
    desp_lot_frecuencia varchar(50,1),
    desp_lot_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_lote from "public";

{ TABLE aud_inv_formulario row size = 668 number of columns = 37 index size = 0 }

create table aud_inv_formulario 
  (
    for_codigo integer,
    for_tipo char(20),
    for_fechora datetime year to second,
    for_proveedor smallint,
    for_dep_entrega smallint,
    for_dep_recibe smallint,
    for_representante smallint,
    for_cat_entrega integer,
    for_cat_recibe integer,
    for_cat_encargado integer,
    for_cat_jefe integer,
    for_grad_entrega smallint,
    for_grad_recibe smallint,
    for_grad_encargado smallint,
    for_grad_jefe smallint,
    for_observaciones varchar(255,1),
    for_situaciones integer,
    desp_for_codigo integer,
    desp_for_tipo char(20),
    desp_for_fechora datetime year to second,
    desp_for_proveedor smallint,
    desp_for_dep_entrega smallint,
    desp_for_dep_recibe smallint,
    desp_for_representante smallint,
    desp_for_cat_entrega integer,
    desp_for_cat_recibe integer,
    desp_for_cat_encargado integer,
    desp_for_cat_jefe integer,
    desp_for_grad_entrega smallint,
    desp_for_grad_recibe smallint,
    desp_for_grad_encargado smallint,
    desp_for_grad_jefe smallint,
    desp_for_observaciones varchar(255,1),
    desp_for_situaciones integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_formulario from "public";

{ TABLE dtx_accesorio row size = 385 number of columns = 10 index size = 18 }

create table dtx_accesorio 
  (
    acc_id integer not null ,
    acc_desc_ct varchar(15) not null ,
    acc_desc_lg varchar(45) not null ,
    acc_marca integer not null ,
    acc_no_serie varchar(45),
    acc_modelo char(10),
    acc_version char(1) not null ,
    acc_estado char(1) not null ,
    acc_observaciones varchar(255),
    acc_situacion char(1) not null ,
    primary key (acc_id)  constraint pk_acc_id
  );

revoke all on dtx_accesorio from "public";

{ TABLE aud_dtx_accesorio row size = 790 number of columns = 23 index size = 0 }

create table aud_dtx_accesorio 
  (
    acc_id integer,
    acc_desc_ct varchar(15),
    acc_desc_lg varchar(45),
    acc_marca integer,
    acc_no_serie varchar(45),
    acc_modelo char(10),
    acc_version char(1),
    acc_estado char(1),
    acc_observaciones varchar(255),
    acc_situacion char(1),
    desp_acc_id integer,
    desp_acc_desc_ct varchar(15),
    desp_acc_desc_lg varchar(45),
    desp_acc_marca integer,
    desp_acc_no_serie varchar(45),
    desp_acc_modelo char(10),
    desp_acc_version char(1),
    desp_acc_estado char(1),
    desp_acc_observaciones varchar(255),
    desp_acc_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dtx_accesorio from "public";

{ TABLE dtx_marca row size = 51 number of columns = 3 index size = 9 }

create table dtx_marca 
  (
    mar_id integer not null ,
    mar_desc varchar(45) not null ,
    mar_situacion char(1) not null ,
    primary key (mar_id)  constraint pk_mar_id
  );

revoke all on dtx_marca from "public";

{ TABLE dtx_articulo row size = 386 number of columns = 11 index size = 18 }

create table dtx_articulo 
  (
    art_id integer not null ,
    art_desc_ct varchar(15) not null ,
    art_desc_lg varchar(45) not null ,
    art_marca integer not null ,
    art_no_serie varchar(45),
    art_modelo char(10),
    art_version char(1) not null ,
    art_r_frecuencia char(1) not null ,
    art_estado char(1) not null ,
    art_observaciones varchar(255),
    art_situacion char(1) not null ,
    primary key (art_id)  constraint pk_art_id
  );

revoke all on dtx_articulo from "public";

{ TABLE aud_dtx_articulo row size = 792 number of columns = 25 index size = 0 }

create table aud_dtx_articulo 
  (
    art_id integer,
    art_desc_ct varchar(15),
    art_desc_lg varchar(45),
    art_marca integer,
    art_no_serie varchar(45),
    art_modelo char(10),
    art_version char(1),
    art_r_frecuencia char(1),
    art_estado char(1),
    art_observaciones varchar(255),
    art_situacion char(1),
    desp_art_id integer,
    desp_art_desc_ct varchar(15),
    desp_art_desc_lg varchar(45),
    desp_art_marca integer,
    desp_art_no_serie varchar(45),
    desp_art_modelo char(10),
    desp_art_version char(1),
    desp_art_r_frecuencia char(1),
    desp_art_estado char(1),
    desp_art_observaciones varchar(255),
    desp_art_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dtx_articulo from "public";

{ TABLE dtx_equipo row size = 265 number of columns = 4 index size = 22 }

create table dtx_equipo 
  (
    eq_art integer not null ,
    eq_acc integer not null ,
    eq_observaciones varchar(255),
    eq_situacion char(1) not null ,
    primary key (eq_acc,eq_art)  constraint eq_id
  );

revoke all on dtx_equipo from "public";

{ TABLE aud_dtx_equipo row size = 550 number of columns = 11 index size = 0 }

create table aud_dtx_equipo 
  (
    eq_art integer,
    eq_acc integer,
    eq_observaciones varchar(255),
    eq_situacion char(1),
    desp_eq_art integer,
    desp_eq_acc integer,
    desp_eq_observaciones varchar(255),
    desp_eq_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dtx_equipo from "public";

{ TABLE aud_dtx_marca row size = 122 number of columns = 9 index size = 0 }

create table aud_dtx_marca 
  (
    mar_id integer,
    mar_desc varchar(45),
    mar_situacion char(1),
    desp_mar_id integer,
    desp_mar_desc varchar(45),
    desp_mar_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dtx_marca from "public";

{ TABLE aud_dtx_distribucion row size = 186 number of columns = 27 index size = 0 }

create table aud_dtx_distribucion 
  (
    dist_dman_dep smallint,
    dist_dman_codigo integer,
    dist_eq_art integer,
    dist_eq_acc integer,
    dist_calidad char(1),
    dist_f_asignacion date,
    dist_catalogo_entrega integer,
    dist_grado_entrega smallint,
    dist_catalogo_recibe integer,
    dist_grado_recibe smallint,
    dist_situacion char(1),
    dist_doc_ref varchar(50,5),
    desp_dist_dman_dep smallint,
    desp_dist_dman_codigo integer,
    desp_dist_eq_art integer,
    desp_dist_eq_acc integer,
    desp_dist_calidad char(1),
    desp_dist_f_asignacion date,
    desp_dist_catalogo_entrega integer,
    desp_dist_grado_entrega smallint,
    desp_dist_catalogo_recibe integer,
    desp_dist_grado_recibe smallint,
    desp_dist_situacion char(1),
    desp_dist_doc_ref varchar(50,5),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dtx_distribucion from "public";

{ TABLE dtx_distribucion row size = 83 number of columns = 12 index size = 39 }

create table dtx_distribucion 
  (
    dist_dman_dep smallint not null ,
    dist_dman_codigo integer not null ,
    dist_eq_art integer not null ,
    dist_eq_acc integer,
    dist_calidad char(1) not null ,
    dist_f_asignacion date not null ,
    dist_catalogo_entrega integer not null ,
    dist_grado_entrega smallint not null ,
    dist_catalogo_recibe integer not null ,
    dist_grado_recibe smallint not null ,
    dist_situacion char(1) not null ,
    dist_doc_ref varchar(50,5) not null ,
    primary key (dist_dman_codigo,dist_dman_dep,dist_eq_art)  constraint pk_dist_id
  );

revoke all on dtx_distribucion from "public";

{ TABLE bin_situacion row size = 109 number of columns = 3 index size = 9 }

create table bin_situacion 
  (
    sit_id integer not null ,
    sit_descripcion varchar(100,50) not null ,
    sit_situacion integer not null ,
    primary key (sit_id)  constraint pk_sit
  );

revoke all on bin_situacion from "public";

{ TABLE aud_bin_situacion row size = 238 number of columns = 9 index size = 0 }

create table aud_bin_situacion 
  (
    sit_id integer,
    sit_descripcion varchar(100,50),
    sit_situacion integer,
    desp_sit_id integer,
    desp_sit_descripcion varchar(100,50),
    desp_sit_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_situacion from "public";

{ TABLE bin_adquisicion row size = 109 number of columns = 3 index size = 9 }

create table bin_adquisicion 
  (
    adq_id integer not null ,
    adq_descripcion varchar(100,50) not null ,
    adq_situacion integer not null ,
    primary key (adq_id)  constraint pk_adq
  );

revoke all on bin_adquisicion from "public";

{ TABLE aud_bin_adquisicion row size = 238 number of columns = 9 index size = 0 }

create table aud_bin_adquisicion 
  (
    adq_id integer,
    adq_descripcion varchar(100,50),
    adq_situacion integer,
    desp_adq_id integer,
    desp_adq_descripcion varchar(100,50),
    desp_adq_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_adquisicion from "public";

{ TABLE bin_tipos row size = 109 number of columns = 3 index size = 9 }

create table bin_tipos 
  (
    tip_id integer not null ,
    tip_descripcion varchar(100,50) not null ,
    tip_situacion integer not null ,
    primary key (tip_id)  constraint pk_tipos
  );

revoke all on bin_tipos from "public";

{ TABLE aud_bin_tipos row size = 238 number of columns = 9 index size = 0 }

create table aud_bin_tipos 
  (
    tip_id integer,
    tip_descripcion varchar(100,50),
    tip_situacion integer,
    desp_tip_id integer,
    desp_tip_descripcion varchar(100,50),
    desp_tip_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_tipos from "public";

{ TABLE bin_accion row size = 276 number of columns = 6 index size = 18 }

create table bin_accion 
  (
    acc_codigo serial not null ,
    acc_incidencia integer not null ,
    acc_accion varchar(255,200),
    acc_fecha date not null ,
    acc_usuario integer not null ,
    acc_situacion integer not null ,
    primary key (acc_codigo)  constraint pk_ac
  );

revoke all on bin_accion from "public";

{ TABLE bin_utm row size = 20 number of columns = 5 index size = 9 }

create table bin_utm 
  (
    utm_codigo serial not null ,
    utm_inmueble integer not null ,
    utm_vertice integer not null ,
    utm_coor integer not null ,
    utm_situacion integer not null ,
    primary key (utm_codigo)  constraint pk_utm
  );

revoke all on bin_utm from "public";

{ TABLE aud_bin_utm row size = 60 number of columns = 13 index size = 0 }

create table aud_bin_utm 
  (
    utm_codigo integer,
    utm_inmueble integer,
    utm_vertice integer,
    utm_coor integer,
    utm_situacion integer,
    desp_utm_codigo integer,
    desp_utm_inmueble integer,
    desp_utm_vertice integer,
    desp_utm_coor integer,
    desp_utm_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_utm from "public";

{ TABLE bin_inmueble row size = 2369 number of columns = 21 index size = 54 }

create table bin_inmueble 
  (
    inm_codigo integer not null ,
    inm_descripcion varchar(255,200) not null ,
    inm_situacion integer not null ,
    inm_tipo integer not null ,
    inm_adquisicion integer not null ,
    inm_direccion varchar(255,200) not null ,
    inm_depto char(4) not null ,
    inm_municipio char(4) not null ,
    inm_area varchar(255,200) not null ,
    inm_area_reg varchar(255,200),
    inm_finca integer,
    inm_folio integer,
    inm_libro varchar(20,5),
    inm_esc_publica varchar(255,200),
    inm_ac_gub varchar(255,200),
    inm_bienes_estado varchar(255,200),
    inm_referencia varchar(255,200),
    inm_status integer not null ,
    inm_catastro integer not null ,
    inm_fecha_cat date,
    inm_obs varchar(255,200),
    primary key (inm_codigo)  constraint pk_inmue
  );

revoke all on bin_inmueble from "public";

{ TABLE aud_bin_inmueble row size = 4758 number of columns = 45 index size = 0 }

create table aud_bin_inmueble 
  (
    inm_codigo integer,
    inm_descripcion varchar(255,200),
    inm_situacion integer,
    inm_tipo integer,
    inm_adquisicion integer,
    inm_direccion varchar(255,200),
    inm_depto char(4),
    inm_municipio char(4),
    inm_area varchar(255,200),
    inm_area_reg varchar(255,200),
    inm_finca integer,
    inm_folio integer,
    inm_libro varchar(20,5),
    inm_esc_publica varchar(255,200),
    inm_ac_gub varchar(255,200),
    inm_bienes_estado varchar(255,200),
    inm_referencia varchar(255,200),
    inm_status integer,
    inm_catastro integer,
    inm_fecha_cat date,
    inm_obs varchar(255,200),
    desp_inm_codigo integer,
    desp_inm_descripcion varchar(255,200),
    desp_inm_situacion integer,
    desp_inm_tipo integer,
    desp_inm_adquisicion integer,
    desp_inm_direccion varchar(255,200),
    desp_inm_depto char(4),
    desp_inm_municipio char(4),
    desp_inm_area varchar(255,200),
    desp_inm_area_reg varchar(255,200),
    desp_inm_finca integer,
    desp_inm_folio integer,
    desp_inm_libro varchar(20,5),
    desp_inm_esc_publica varchar(255,200),
    desp_inm_ac_gub varchar(255,200),
    desp_inm_bienes_estado varchar(255,200),
    desp_inm_referencia varchar(255,200),
    desp_inm_status integer,
    desp_inm_catastro integer,
    desp_inm_fecha_cat date,
    desp_inm_obs varchar(255,200),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_inmueble from "public";

{ TABLE aud_bin_accion row size = 572 number of columns = 15 index size = 0 }

create table aud_bin_accion 
  (
    acc_codigo integer,
    acc_incidencia integer,
    acc_accion varchar(255,200),
    acc_fecha date,
    acc_usuario integer,
    acc_situacion integer,
    desp_acc_codigo integer,
    desp_acc_incidencia integer,
    desp_acc_accion varchar(255,200),
    desp_acc_fecha date,
    desp_acc_usuario integer,
    desp_acc_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_accion from "public";

{ TABLE bin_ubicacion row size = 36 number of columns = 6 index size = 18 }

create table bin_ubicacion 
  (
    ubi_codigo serial not null ,
    ubi_inmueble integer not null ,
    ubi_vertice integer not null ,
    ubi_latitud decimal(16) not null ,
    ubi_longitud decimal(16) not null ,
    ubi_situacion integer not null ,
    primary key (ubi_codigo)  constraint pk_ubi1
  );

revoke all on bin_ubicacion from "public";

{ TABLE aud_bin_ubicacion row size = 92 number of columns = 15 index size = 0 }

create table aud_bin_ubicacion 
  (
    ubi_codigo integer,
    ubi_inmueble integer,
    ubi_vertice integer,
    ubi_latitud decimal(16),
    ubi_longitud decimal(16),
    ubi_situacion integer,
    desp_ubi_codigo integer,
    desp_ubi_inmueble integer,
    desp_ubi_vertice integer,
    desp_ubi_latitud decimal(16),
    desp_ubi_longitud decimal(16),
    desp_ubi_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_ubicacion from "public";

{ TABLE bin_incidencia row size = 536 number of columns = 8 index size = 27 }

create table bin_incidencia 
  (
    inc_codigo integer not null ,
    inc_inmueble integer not null ,
    inc_fecha date not null ,
    inc_tipo char(4) not null ,
    inc_descripcion varchar(255,200),
    inc_referencia varchar(255,200),
    inc_usuario integer not null ,
    inc_situacion integer not null ,
    primary key (inc_codigo)  constraint pk_inc
  );

revoke all on bin_incidencia from "public";

{ TABLE bin_asignacion row size = 542 number of columns = 11 index size = 66 }

create table bin_asignacion 
  (
    asi_codigo serial not null ,
    asi_inmueble integer not null ,
    asi_referencia varchar(255,200),
    asi_fecha date not null ,
    asi_responsable integer not null ,
    asi_dependencia smallint not null ,
    asi_autentica integer not null ,
    asi_usuario integer not null ,
    asi_obs varchar(255,200),
    asi_resp_grado smallint not null ,
    asi_aut_grado smallint not null ,
    primary key (asi_codigo)  constraint pk_asig1
  );

revoke all on bin_asignacion from "public";

{ TABLE aud_bin_incidencia row size = 1092 number of columns = 19 index size = 0 }

create table aud_bin_incidencia 
  (
    inc_codigo integer,
    inc_inmueble integer,
    inc_fecha date,
    inc_tipo char(4),
    inc_descripcion varchar(255,200),
    inc_referencia varchar(255,200),
    inc_usuario integer,
    inc_situacion integer,
    desp_inc_codigo integer,
    desp_inc_inmueble integer,
    desp_inc_fecha date,
    desp_inc_tipo char(4),
    desp_inc_descripcion varchar(255,200),
    desp_inc_referencia varchar(255,200),
    desp_inc_usuario integer,
    desp_inc_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_incidencia from "public";

{ TABLE aud_bin_asignacion row size = 1104 number of columns = 25 index size = 0 }

create table aud_bin_asignacion 
  (
    asi_codigo integer,
    asi_inmueble integer,
    asi_referencia varchar(255,200),
    asi_fecha date,
    asi_responsable integer,
    asi_dependencia smallint,
    asi_autentica integer,
    asi_usuario integer,
    asi_obs varchar(255,200),
    asi_resp_grado smallint,
    asi_aut_grado smallint,
    desp_asi_codigo integer,
    desp_asi_inmueble integer,
    desp_asi_referencia varchar(255,200),
    desp_asi_fecha date,
    desp_asi_responsable integer,
    desp_asi_dependencia smallint,
    desp_asi_autentica integer,
    desp_asi_usuario integer,
    desp_asi_obs varchar(255,200),
    desp_asi_resp_grado smallint,
    desp_asi_aut_grado smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_asignacion from "public";

{ TABLE lemus row size = 197 number of columns = 13 index size = 0 }

create table lemus 
  (
    cat integer,
    grado smallint,
    nombre1 char(15),
    nombre2 char(15),
    ape1 char(15),
    ape2 char(15),
    dpi char(15),
    direccion char(50),
    telefono integer,
    empleo char(45),
    sueldo money(16,2),
    nombra date,
    cese date
  );

revoke all on lemus from "public";

{ TABLE aud_psan_boleta row size = 488 number of columns = 35 index size = 0 }

create table aud_psan_boleta 
  (
    bol_det_catalogo integer,
    bol_det_fecha date,
    bol_det_sancion smallint,
    bol_det_grado smallint,
    bol_dependencia smallint,
    bol_desc_empleo char(45),
    bol_jerarquia_sancionado char(100),
    bol_sancionador integer,
    bol_gra_sancionador smallint,
    bol_empleo_sancionador char(45),
    bol_justicia integer,
    bol_gra_justicia smallint,
    bol_comte integer,
    bol_gra_comte smallint,
    bol_fech_cumple datetime year to second,
    bol_det_status integer,
    desp_bol_det_catalogo integer,
    desp_bol_det_fecha date,
    desp_bol_det_sancion smallint,
    desp_bol_det_grado smallint,
    desp_bol_dependencia smallint,
    desp_bol_desc_empleo char(45),
    desp_bol_jerarquia_sancionado char(100),
    desp_bol_sancionador integer,
    desp_bol_gra_sancionador smallint,
    desp_bol_empleo_sancionador char(45),
    desp_bol_justicia integer,
    desp_bol_gra_justicia smallint,
    desp_bol_comte integer,
    desp_bol_gra_comte smallint,
    desp_bol_fech_cumple datetime year to second,
    desp_bol_det_status integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_psan_boleta from "public";

{ TABLE psan_boleta row size = 234 number of columns = 16 index size = 15 }

create table psan_boleta 
  (
    bol_det_catalogo integer not null ,
    bol_det_fecha date not null ,
    bol_det_sancion smallint not null ,
    bol_det_grado smallint,
    bol_dependencia smallint,
    bol_desc_empleo char(45) not null ,
    bol_jerarquia_sancionado char(100) not null ,
    bol_sancionador integer not null ,
    bol_gra_sancionador smallint not null ,
    bol_empleo_sancionador char(45) not null ,
    bol_justicia integer not null ,
    bol_gra_justicia smallint not null ,
    bol_comte integer not null ,
    bol_gra_comte smallint not null ,
    bol_fech_cumple datetime year to second,
    bol_det_status integer,
    primary key (bol_det_catalogo,bol_det_fecha,bol_det_sancion)  constraint sancionado
  );

revoke all on psan_boleta from "public";

{ TABLE ing_asi_maquinas row size = 21 number of columns = 6 index size = 9 }

create table ing_asi_maquinas 
  (
    asimaq_codigo integer not null ,
    asimaq_proyecto integer not null ,
    asimaq_maquina integer not null ,
    asimaq_fecha_inicio date,
    asimaq_fecha_fin date,
    asimaq_situacion char(1) not null ,
    primary key (asimaq_codigo) 
  );

revoke all on ing_asi_maquinas from "public";

{ TABLE aud_ing_asi_maquinas row size = 62 number of columns = 15 index size = 0 }

create table aud_ing_asi_maquinas 
  (
    asimaq_codigo integer,
    asimaq_proyecto integer,
    asimaq_maquina integer,
    asimaq_fecha_inicio date,
    asimaq_fecha_fin date,
    asimaq_situacion char(1),
    desp_asimaq_codigo integer,
    desp_asimaq_proyecto integer,
    desp_asimaq_maquina integer,
    desp_asimaq_fecha_inicio date,
    desp_asimaq_fecha_fin date,
    desp_asimaq_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ing_asi_maquinas from "public";

{ TABLE ing_asi_subren row size = 13 number of columns = 4 index size = 9 }

create table ing_asi_subren 
  (
    asu_codigo integer not null ,
    asu_renglon integer not null ,
    asu_subrenglon integer not null ,
    asu_situacion char(1) not null ,
    primary key (asu_codigo) 
  );

revoke all on ing_asi_subren from "public";

{ TABLE aud_ing_asi_subren row size = 46 number of columns = 11 index size = 0 }

create table aud_ing_asi_subren 
  (
    asu_codigo integer,
    asu_renglon integer,
    asu_subrenglon integer,
    asu_situacion char(1),
    desp_asu_codigo integer,
    desp_asu_renglon integer,
    desp_asu_subrenglon integer,
    desp_asu_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ing_asi_subren from "public";

{ TABLE ing_asi_vehiculos row size = 21 number of columns = 6 index size = 9 }

create table ing_asi_vehiculos 
  (
    asiveh_codigo integer not null ,
    asiveh_proyecto integer not null ,
    asiveh_vehiculo integer not null ,
    asiveh_fecha_inicio date,
    asiveh_fecha_fin date,
    asiveh_situacion char(1) not null ,
    primary key (asiveh_codigo) 
  );

revoke all on ing_asi_vehiculos from "public";

{ TABLE aud_ing_asi_vehiculos row size = 62 number of columns = 15 index size = 0 }

create table aud_ing_asi_vehiculos 
  (
    asiveh_codigo integer,
    asiveh_proyecto integer,
    asiveh_vehiculo integer,
    asiveh_fecha_inicio date,
    asiveh_fecha_fin date,
    asiveh_situacion char(1),
    desp_asiveh_codigo integer not null ,
    desp_asiveh_proyecto integer not null ,
    desp_asiveh_vehiculo integer not null ,
    desp_asiveh_fecha_inicio date,
    desp_asiveh_fecha_fin date,
    desp_asiveh_situacion char(1) not null ,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ing_asi_vehiculos from "public";

{ TABLE ing_avances row size = 24 number of columns = 6 index size = 9 }

create table ing_avances 
  (
    avan_codigo integer not null ,
    avan_fecha date not null ,
    avan_tramo integer not null ,
    avan_subrenglon integer not null ,
    avan_avance integer,
    avan_medida integer,
    primary key (avan_codigo) 
  );

revoke all on ing_avances from "public";

{ TABLE aud_ing_avances row size = 68 number of columns = 15 index size = 0 }

create table aud_ing_avances 
  (
    avan_codigo integer,
    avan_fecha date,
    avan_tramo integer,
    avan_subrenglon integer,
    avan_avance integer,
    avan_medida integer,
    desp_avan_codigo integer,
    desp_avan_fecha date,
    desp_avan_tramo integer,
    desp_avan_subrenglon integer,
    desp_avan_avance integer,
    desp_avan_medida integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ing_avances from "public";

{ TABLE ing_hist_maquinas row size = 52 number of columns = 10 index size = 9 }

create table ing_hist_maquinas 
  (
    hisma_codigo integer not null ,
    hisma_maquina integer not null ,
    hisma_fecha date not null ,
    hisma_htrab decimal(8,2) not null ,
    hisma_hhombre decimal(8,2) not null ,
    hisma_combustible decimal(8,2) not null ,
    hisma_cph decimal(8,2) not null ,
    hisma_hinicio decimal(14,2) not null ,
    hisma_hfinal decimal(14,2) not null ,
    hisma_proyecto integer not null ,
    primary key (hisma_codigo) 
  );

revoke all on ing_hist_maquinas from "public";

{ TABLE aud_ing_hist_maquinas row size = 124 number of columns = 23 index size = 0 }

create table aud_ing_hist_maquinas 
  (
    hisma_codigo integer,
    hisma_maquina integer,
    hisma_fecha date,
    hisma_htrab decimal(8,2),
    hisma_hhombre decimal(8,2),
    hisma_combustible decimal(8,2),
    hisma_cph decimal(8,2),
    hisma_hinicio decimal(14,2),
    hisma_hfinal decimal(14,2),
    hisma_proyecto integer,
    desp_hisma_codigo integer,
    desp_hisma_maquina integer,
    desp_hisma_fecha date,
    desp_hisma_htrab decimal(8,2),
    desp_hisma_hhombre decimal(8,2),
    desp_hisma_combustible decimal(8,2),
    desp_hisma_cph decimal(8,2),
    desp_hisma_hinicio decimal(14,2),
    desp_hisma_hfinal decimal(14,2),
    desp_hisma_proyecto integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ing_hist_maquinas from "public";

{ TABLE ing_hist_vehiculos row size = 57 number of columns = 11 index size = 9 }

create table ing_hist_vehiculos 
  (
    hisve_codigo integer not null ,
    hisve_vehiculo integer not null ,
    hisve_fecha date not null ,
    hisve_kreco decimal(8,2) not null ,
    hisve_htrab decimal(8,2) not null ,
    hisve_hhombre decimal(8,2) not null ,
    hisve_combustible decimal(8,2) not null ,
    hisve_cph decimal(8,2) not null ,
    hisve_hinicio decimal(14,2) not null ,
    hisve_hfinal decimal(14,2) not null ,
    hisve_proyecto integer not null ,
    primary key (hisve_codigo) 
  );

revoke all on ing_hist_vehiculos from "public";

{ TABLE aud_ing_hist_vehiculos row size = 134 number of columns = 25 index size = 0 }

create table aud_ing_hist_vehiculos 
  (
    hisve_codigo integer,
    hisve_vehiculo integer,
    hisve_fecha date,
    hisve_kreco decimal(8,2),
    hisve_htrab decimal(8,2),
    hisve_hhombre decimal(8,2),
    hisve_combustible decimal(8,2),
    hisve_cph decimal(8,2),
    hisve_hinicio decimal(14,2),
    hisve_hfinal decimal(14,2),
    hisve_proyecto integer,
    desp_hisve_codigo integer,
    desp_hisve_vehiculo integer,
    desp_hisve_fecha date,
    desp_hisve_kreco decimal(8,2),
    desp_hisve_htrab decimal(8,2),
    desp_hisve_hhombre decimal(8,2),
    desp_hisve_combustible decimal(8,2),
    desp_hisve_cph decimal(8,2),
    desp_hisve_hinicio decimal(14,2),
    desp_hisve_hfinal decimal(14,2),
    desp_hisve_proyecto integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ing_hist_vehiculos from "public";

{ TABLE ing_renglones row size = 387 number of columns = 4 index size = 9 }

create table ing_renglones 
  (
    ren_codigo integer not null ,
    ren_descripcion varchar(190,65) not null ,
    ren_observacion varchar(190,65),
    ren_situacion char(1) not null ,
    primary key (ren_codigo) 
  );

revoke all on ing_renglones from "public";

{ TABLE aud_ing_renglones row size = 794 number of columns = 11 index size = 0 }

create table aud_ing_renglones 
  (
    ren_codigo integer,
    ren_descripcion varchar(190,65),
    ren_observacion varchar(190,65),
    ren_situacion char(1),
    desp_ren_codigo integer,
    desp_ren_descripcion varchar(190,65),
    desp_ren_observacion varchar(190,65),
    desp_ren_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ing_renglones from "public";

{ TABLE ing_subrenglones row size = 389 number of columns = 5 index size = 9 }

create table ing_subrenglones 
  (
    subr_codigo integer not null ,
    subr_descripcion varchar(190,65) not null ,
    subr_medida char(2) not null ,
    subr_observacion varchar(190,65),
    subr_situacion char(1) not null ,
    primary key (subr_codigo) 
  );

revoke all on ing_subrenglones from "public";

{ TABLE aud_ing_subrenglones row size = 798 number of columns = 13 index size = 0 }

create table aud_ing_subrenglones 
  (
    subr_codigo integer,
    subr_descripcion varchar(190,65),
    subr_medida char(2),
    subr_observacion varchar(190,65),
    subr_situacion char(1),
    desp_subr_codigo integer,
    desp_subr_descripcion varchar(190,65),
    desp_subr_medida char(2),
    desp_subr_observacion varchar(190,65),
    desp_subr_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ing_subrenglones from "public";

{ TABLE aud_ing_tramos row size = 806 number of columns = 27 index size = 0 }

create table aud_ing_tramos 
  (
    tra_codigo integer,
    tra_nombre varchar(70,10),
    tra_ubicacion char(4),
    tra_direccion varchar(90,15),
    tra_dimension integer,
    tra_medida char(1),
    tra_renglon integer,
    tra_fecha_inicio date,
    tra_fecha_fin date,
    tra_situacion char(1),
    tra_proyecto integer,
    tra_obser varchar(200,55),
    des_tra_codigo integer,
    desp_tra_nombre varchar(70,10),
    desp_tra_ubicacion char(4),
    desp_tra_direccion varchar(90,15),
    desp_tra_dimension integer,
    desp_tra_medida char(1),
    desp_tra_renglon integer,
    desp_tra_fecha_inicio date,
    desp_tra_fecha_fin date,
    desp_tra_situacion char(1),
    desp_tra_proyecto integer,
    desp_tra_obser varchar(200,55),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ing_tramos from "public";

{ TABLE sancioness row size = 275 number of columns = 10 index size = 0 }

create table sancioness 
  (
    san_codigo integer not null ,
    san_descripcion varchar(255),
    san_clasificacion char(2),
    san_tipo char(2),
    san_cantidad smallint not null ,
    san_reglamento smallint,
    san_articulo smallint,
    san_literal char(1),
    san_numeral smallint,
    san_inciso char(2)
  );

revoke all on sancioness from "public";

{ TABLE estadisticaa row size = 12 number of columns = 5 index size = 11 }

create table estadisticaa 
  (
    est_catalogo integer not null ,
    est_grado smallint not null ,
    est_horas smallint not null ,
    est_demeritos smallint not null ,
    est_situacion smallint,
    primary key (est_catalogo,est_grado) 
  );

revoke all on estadisticaa from "public";

{ TABLE detallee row size = 1770 number of columns = 8 index size = 15 }

create table detallee 
  (
    det_catalogo integer not null ,
    det_fecha date not null ,
    det_sancion smallint not null ,
    det_grado smallint not null ,
    det_dependencia smallint not null ,
    det_observaciones varchar(250),
    det_detalle lvarchar(1500),
    det_status smallint,
    primary key (det_catalogo,det_fecha,det_sancion) 
  );

revoke all on detallee from "public";

{ TABLE ing_maq_servicios row size = 218 number of columns = 6 index size = 18 }

create table ing_maq_servicios 
  (
    mser_codigo integer not null ,
    mser_maquina integer not null ,
    mser_fecha date not null ,
    mser_horometro integer not null ,
    mser_situacion char(1) not null ,
    mser_observacion varchar(200,55),
    primary key (mser_codigo) 
  );

revoke all on ing_maq_servicios from "public";

{ TABLE aud_ing_maq_servicios row size = 456 number of columns = 15 index size = 0 }

create table aud_ing_maq_servicios 
  (
    mser_codigo integer,
    mser_maquina integer,
    mser_fecha date,
    mser_horometro integer,
    mser_situacion char(1),
    mser_observacion varchar(200,55),
    desp_mser_codigo integer,
    desp_mser_maquina integer,
    desp_mser_fecha date,
    desp_mser_horometro integer,
    desp_mser_situacion char(1),
    desp_mser_observacion varchar(200,55),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ing_maq_servicios from "public";

{ TABLE ing_proyecto row size = 116 number of columns = 13 index size = 9 }

create table ing_proyecto 
  (
    pro_codigo integer not null ,
    pro_nombre varchar(60,6) not null ,
    pro_ubicacion char(4) not null ,
    pro_fecha_despliegue date not null ,
    pro_fecha_final date,
    pro_fecha_real date,
    pro_personal integer not null ,
    pro_latitud decimal(16) not null ,
    pro_longitud decimal(16) not null ,
    pro_of_encargado integer not null ,
    pro_grado_encargado smallint not null ,
    pro_num_encargado integer not null ,
    pro_situacion char(1) not null ,
    primary key (pro_codigo) 
  );

revoke all on ing_proyecto from "public";

{ TABLE aud_ing_proyecto row size = 252 number of columns = 29 index size = 0 }

create table aud_ing_proyecto 
  (
    pro_codigo integer,
    pro_nombre varchar(60,6),
    pro_ubicacion char(4),
    pro_fecha_despliegue date,
    pro_fecha_final date,
    pro_fecha_real date,
    pro_personal integer,
    pro_latitud decimal(16),
    pro_longitud decimal(16),
    pro_of_encargado integer,
    pro_grado_encargado smallint,
    pro_num_encargado integer,
    pro_situacion char(1),
    desp_pro_codigo integer,
    desp_pro_nombre varchar(60,6),
    desp_pro_ubicacion char(4),
    desp_pro_fecha_despliegue date,
    desp_pro_fecha_final date,
    desp_pro_fecha_real date,
    desp_pro_personal integer,
    desp_pro_latitud decimal(16),
    desp_pro_longitud decimal(16),
    desp_pro_of_encargado integer,
    desp_pro_grado_encargado smallint,
    desp_pro_num_encargado integer,
    desp_pro_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ing_proyecto from "public";

{ TABLE ing_veh_servicios row size = 218 number of columns = 6 index size = 9 }

create table ing_veh_servicios 
  (
    ivser_codigo integer not null ,
    ivser_vehiculo integer not null ,
    ivser_fecha date not null ,
    ivser_odometro integer not null ,
    isver_situacion char(1) not null ,
    isver_observacion varchar(200,55),
    primary key (ivser_codigo) 
  );

revoke all on ing_veh_servicios from "public";

{ TABLE aud_ing_veh_servicios row size = 456 number of columns = 15 index size = 0 }

create table aud_ing_veh_servicios 
  (
    ivser_codigo integer,
    ivser_vehiculo integer,
    ivser_fecha date,
    ivser_odometro integer,
    isver_situacion char(1),
    isver_observacion varchar(200,55),
    desp_ivser_codigo integer,
    desp_ivser_vehiculo integer,
    desp_ivser_fecha date,
    desp_ivser_odometro integer,
    desp_isver_situacion char(1),
    desp_isver_observacion varchar(200,55),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ing_veh_servicios from "public";

{ TABLE historial_relestcivil row size = 16 number of columns = 4 index size = 0 }

create table historial_relestcivil 
  (
    his_id serial not null ,
    his_catalogo integer not null ,
    his_religion integer not null ,
    his_fecha date not null 
  );

revoke all on historial_relestcivil from "public";

{ TABLE aud_historial_relestcivil row size = 52 number of columns = 11 index size = 0 }

create table aud_historial_relestcivil 
  (
    his_id serial not null ,
    his_catalogo integer,
    his_religion integer,
    his_fecha date,
    desp_his_id integer,
    desp_his_catalogo integer,
    desp_his_religion integer,
    desp_his_fecha date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_historial_relestcivil from "public";

{ TABLE religion_personal row size = 18 number of columns = 5 index size = 0 }

create table religion_personal 
  (
    rel_id serial not null ,
    rel_catalogo integer not null ,
    rel_religion integer not null ,
    rel_fecha date not null ,
    rel_situacion smallint not null 
  );

revoke all on religion_personal from "public";

{ TABLE aud_religion_personal row size = 56 number of columns = 13 index size = 0 }

create table aud_religion_personal 
  (
    rel_id integer,
    rel_catalogo integer,
    rel_religion integer,
    rel_fecha date,
    rel_situacion smallint,
    desp_rel_id integer,
    desp_rel_catalogo integer,
    desp_rel_religion integer,
    desp_rel_fecha date,
    desp_rel_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_religion_personal from "public";

{ TABLE eva_factores row size = 84 number of columns = 3 index size = 9 }

create table eva_factores 
  (
    fac_id integer not null ,
    fac_desc_lg varchar(75,10) not null ,
    fac_situacion integer not null ,
    primary key (fac_id) 
  );

revoke all on eva_factores from "public";

{ TABLE aud_eva_factores row size = 188 number of columns = 9 index size = 0 }

create table aud_eva_factores 
  (
    fac_id integer,
    fac_desc_lg varchar(75,10),
    fac_situacion integer,
    desp_fac_id integer,
    desp_fac_desc_lg varchar(75,10),
    desp_fac_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_factores from "public";

{ TABLE eva_linea row size = 84 number of columns = 3 index size = 9 }

create table eva_linea 
  (
    lin_id integer not null ,
    lin_desc_lg varchar(75,10) not null ,
    lin_situacion integer not null ,
    primary key (lin_id) 
  );

revoke all on eva_linea from "public";

{ TABLE aud_eva_linea row size = 188 number of columns = 9 index size = 0 }

create table aud_eva_linea 
  (
    lin_id integer,
    lin_desc_lg varchar(75,10),
    lin_situacion integer,
    desp_lin_id integer,
    desp_lin_desc_lg varchar(75,10),
    desp_lin_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_linea from "public";

{ TABLE eva_evaluacion row size = 1880 number of columns = 28 index size = 96 }

create table eva_evaluacion 
  (
    eva_id integer not null ,
    eva_periodo varchar(25,10) not null ,
    eva_renglon integer not null ,
    eva_linea integer not null ,
    eva_dest_actual varchar(150,25) not null ,
    eva_cat1 integer not null ,
    eva_cat2 integer not null ,
    eva_cat3 integer not null ,
    eva_arma1 smallint not null ,
    eva_arma2 smallint not null ,
    eva_arma3 smallint not null ,
    eva_grado1 smallint not null ,
    eva_grado2 smallint not null ,
    eva_grado3 smallint not null ,
    eva_empleo1 varchar(125,25) not null ,
    eva_empleo2 varchar(125,25) not null ,
    eva_empleo3 varchar(125,25) not null ,
    eva_tiempo1 varchar(125,25) not null ,
    eva_tiempo2 varchar(125,25) not null ,
    eva_tiempo3 varchar(125,25) not null ,
    eva_emp_ant varchar(125,25) not null ,
    eva_situacion integer not null ,
    eva_obs_inm varchar(255) not null ,
    eva_obs_final varchar(255) not null ,
    eva_dep smallint not null ,
    eva_obs varchar(255) not null ,
    eva_usuario integer,
    eva_fecha_aprov datetime year to minute,
    primary key (eva_id) 
  );

revoke all on eva_evaluacion from "public";

{ TABLE eva_notas row size = 31 number of columns = 8 index size = 36 }

create table eva_notas 
  (
    not_id serial not null ,
    not_factores integer not null ,
    not_evaluacion integer not null ,
    not_preg integer not null ,
    not_nota decimal(3,2) not null ,
    not_tipo integer not null ,
    not_fecha date not null ,
    not_usuario integer not null ,
    primary key (not_id) 
  );

revoke all on eva_notas from "public";

{ TABLE aud_eva_notas row size = 82 number of columns = 19 index size = 0 }

create table aud_eva_notas 
  (
    not_id integer,
    not_factores integer,
    not_evaluacion integer,
    not_preg integer,
    not_nota decimal(3,2),
    not_tipo integer,
    not_fecha date,
    not_usuario integer,
    desp_not_id integer,
    desp_not_factores integer,
    desp_not_evaluacion integer,
    desp_not_preg integer,
    desp_not_nota decimal(3,2),
    desp_not_tipo integer,
    desp_not_fecha date,
    desp_not_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_notas from "public";

{ TABLE aud_eva_evaluacion row size = 3780 number of columns = 59 index size = 0 }

create table aud_eva_evaluacion 
  (
    eva_usuario integer,
    eva_fecha_aprov datetime year to minute,
    eva_id integer,
    eva_periodo varchar(25,10),
    eva_renglon integer,
    eva_linea integer,
    eva_dest_actual varchar(150,25),
    eva_cat1 integer,
    eva_cat2 integer,
    eva_cat3 integer,
    eva_arma1 smallint,
    eva_arma2 smallint,
    eva_arma3 smallint,
    eva_grado1 smallint,
    eva_grado2 smallint,
    eva_grado3 smallint,
    eva_empleo1 varchar(125,25),
    eva_empleo2 varchar(125,25),
    eva_empleo3 varchar(125,25),
    eva_tiempo1 varchar(125,25),
    eva_tiempo2 varchar(125,25),
    eva_tiempo3 varchar(125,25),
    eva_emp_ant varchar(125,25),
    eva_situacion integer,
    eva_obs_inm varchar(255),
    eva_obs_final varchar(255),
    eva_dep smallint,
    eva_obs varchar(255),
    desp_eva_id integer,
    desp_eva_periodo varchar(25,10),
    desp_eva_renglon integer,
    desp_eva_linea integer,
    desp_eva_dest_actual varchar(150,25),
    desp_eva_cat1 integer,
    desp_eva_cat2 integer,
    desp_eva_cat3 integer,
    desp_eva_arma1 smallint,
    desp_eva_arma2 smallint,
    desp_eva_arma3 smallint,
    desp_eva_grado1 smallint,
    desp_eva_grado2 smallint,
    desp_eva_grado3 smallint,
    desp_eva_empleo1 varchar(125,25),
    desp_eva_empleo2 varchar(125,25),
    desp_eva_empleo3 varchar(125,25),
    desp_eva_tiempo1 varchar(125,25),
    desp_eva_tiempo2 varchar(125,25),
    desp_eva_tiempo3 varchar(125,25),
    desp_eva_emp_ant varchar(125,25),
    desp_eva_situacion integer,
    desp_eva_obs_inm varchar(255),
    desp_eva_obs_final varchar(255),
    desp_eva_dep smallint,
    desp_eva_obs varchar(255),
    desp_eva_usuario integer,
    desp_eva_fecha_aprov datetime year to minute,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_evaluacion from "public";

{ TABLE ing_maquinas row size = 268 number of columns = 17 index size = 9 }

create table ing_maquinas 
  (
    maq_codigo integer not null ,
    maq_no_asignacion char(20) not null ,
    maq_catalogo integer,
    maq_placas varchar(20,1),
    maq_tipo integer not null ,
    maq_marca integer not null ,
    maq_modelo varchar(30,5),
    maq_no_motor varchar(30,1),
    maq_no_chasis varchar(30,1),
    maq_tonelaje integer,
    maq_color smallint not null ,
    maq_combustible integer not null ,
    maq_estado char(1) not null ,
    maq_situacion char(1) not null ,
    maq_destino char(1) not null ,
    maq_horometro integer not null ,
    maq_observaciones varchar(100,55),
    primary key (maq_codigo) 
  );

revoke all on ing_maquinas from "public";

{ TABLE aud_ing_maquinas row size = 556 number of columns = 37 index size = 0 }

create table aud_ing_maquinas 
  (
    maq_codigo integer,
    maq_no_asignacion char(20),
    maq_catalogo integer,
    maq_placas varchar(20,1),
    maq_tipo integer,
    maq_marca integer,
    maq_modelo varchar(30,5),
    maq_no_motor varchar(30,1),
    maq_no_chasis varchar(30,1),
    maq_tonelaje integer,
    maq_color smallint,
    maq_combustible integer,
    maq_estado char(1),
    maq_situacion char(1),
    maq_destino char(1),
    maq_horometro integer,
    maq_observaciones varchar(100,55),
    desp_maq_codigo integer,
    desp_maq_no_asignacion char(20),
    desp_maq_catalogo integer,
    desp_maq_placas varchar(20,1),
    desp_maq_tipo integer,
    desp_maq_marca integer,
    desp_maq_modelo varchar(30,5),
    desp_maq_no_motor varchar(30,1),
    desp_maq_no_chasis varchar(30,1),
    desp_maq_tonelaje integer,
    desp_maq_color smallint,
    desp_maq_combustible integer,
    desp_maq_estado char(1),
    desp_maq_situacion char(1),
    desp_maq_destino char(1),
    desp_maq_horometro integer,
    desp_maq_observaciones varchar(100,55),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ing_maquinas from "public";

{ TABLE ing_vehiculos row size = 368 number of columns = 17 index size = 9 }

create table ing_vehiculos 
  (
    iveh_codigo integer not null ,
    iveh_no_asignacion char(20) not null ,
    iveh_catalogo integer,
    iveh_placas varchar(20,1),
    iveh_tipo integer not null ,
    iveh_marca integer not null ,
    iveh_modelo varchar(30,5),
    iveh_no_motor varchar(30,1),
    iveh_no_chasis varchar(30,1),
    iveh_tonelaje integer,
    iveh_color smallint not null ,
    iveh_combustible integer not null ,
    iveh_estado char(1) not null ,
    iveh_situacion char(1) not null ,
    iveh_destino char(1) not null ,
    iveh_odometro integer not null ,
    iveh_observaciones varchar(200,55),
    primary key (iveh_codigo) 
  );

revoke all on ing_vehiculos from "public";

{ TABLE aud_ing_vehiculos row size = 756 number of columns = 37 index size = 0 }

create table aud_ing_vehiculos 
  (
    iveh_codigo integer,
    iveh_no_asignacion char(20),
    iveh_catalogo integer,
    iveh_placas varchar(20,1),
    iveh_tipo integer,
    iveh_marca integer,
    iveh_modelo varchar(30,5),
    iveh_no_motor varchar(30,1),
    iveh_no_chasis varchar(30,1),
    iveh_tonelaje integer,
    iveh_color smallint,
    iveh_combustible integer,
    iveh_estado char(1),
    iveh_situacion char(1),
    iveh_destino char(1),
    iveh_odometro integer,
    iveh_observaciones varchar(200,55),
    desp_iveh_codigo integer,
    desp_iveh_no_asignacion char(20),
    desp_iveh_catalogo integer,
    desp_iveh_placas varchar(20,1),
    desp_iveh_tipo integer,
    desp_iveh_marca integer,
    desp_iveh_modelo varchar(30,5),
    desp_iveh_no_motor varchar(30,1),
    desp_iveh_no_chasis varchar(30,1),
    desp_iveh_tonelaje integer,
    desp_iveh_color smallint,
    desp_iveh_combustible integer,
    desp_iveh_estado char(1),
    desp_iveh_situacion char(1),
    desp_iveh_destino char(1),
    desp_iveh_odometro integer,
    desp_iveh_observaciones varchar(200,55),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ing_vehiculos from "public";

{ TABLE res_personal row size = 1041 number of columns = 34 index size = 9 }

create table res_personal 
  (
    resper_catalogo integer not null ,
    resper_dep smallint not null ,
    resper_plaza integer,
    resper_alta date not null ,
    resper_baja date,
    resper_nom1 char(15) not null ,
    resper_nom2 char(15),
    resper_nom3 char(15),
    resper_ape1 char(15) not null ,
    resper_ape2 char(15),
    resper_ape3 char(15),
    resper_grado varchar(50,10),
    resper_fechnac date not null ,
    resper_dpi char(15),
    resper_fech_dpi date,
    resper_mundpi char(4),
    resper_lunac char(4),
    resper_direccion varchar(255,100),
    resper_tel1 char(10),
    resper_tel2 char(10),
    resper_dirtrajo varchar(255,100),
    resper_estado char(10),
    resper_sableer char(2),
    resper_tpantalon char(2),
    resper_tcamisa char(2),
    resper_tbotas char(2),
    resper_tgorra char(2),
    resper_anio_apro char(1) not null ,
    resper_profesion integer,
    resper_correo char(20),
    resper_genero char(1),
    resper_sangre char(15),
    resper_situacion char(2) not null ,
    resper_obs varchar(255,255),
    primary key (resper_catalogo) 
  );

revoke all on res_personal from "public";

{ TABLE aud_res_personal row size = 2102 number of columns = 71 index size = 0 }

create table aud_res_personal 
  (
    resper_catalogo integer,
    resper_dep smallint,
    resper_plaza integer,
    resper_alta date,
    resper_baja date,
    resper_nom1 char(15),
    resper_nom2 char(15),
    resper_nom3 char(15),
    resper_ape1 char(15),
    resper_ape2 char(15),
    resper_ape3 char(15),
    resper_grado varchar(50,10),
    resper_fechnac date,
    resper_dpi char(15),
    resper_fech_dpi date,
    resper_mundpi char(4),
    resper_lunac char(4),
    resper_direccion varchar(255,100),
    resper_tel1 char(10),
    resper_tel2 char(10),
    resper_dirtrajo varchar(255,100),
    resper_estado char(10),
    resper_sableer char(2),
    resper_tpantalon char(2),
    resper_tcamisa char(2),
    resper_tbotas char(2),
    resper_tgorra char(2),
    resper_anio_apro char(1),
    resper_profesion integer,
    resper_correo char(20),
    resper_genero char(1),
    resper_sangre char(15),
    resper_situacion char(2),
    resper_obs varchar(255,255),
    desp_resper_catalogo integer,
    desp_resper_dep smallint,
    desp_resper_plaza integer,
    desp_resper_alta date,
    desp_resper_baja date,
    desp_resper_nom1 char(15),
    desp_resper_nom2 char(15),
    desp_resper_nom3 char(15),
    desp_resper_ape1 char(15),
    desp_resper_ape2 char(15),
    desp_resper_ape3 char(15),
    desp_resper_grado varchar(50,10),
    desp_resper_fechnac date,
    desp_resper_dpi char(15),
    desp_resper_fech_dpi date,
    desp_resper_mundpi char(4),
    desp_resper_lunac char(4),
    desp_resper_direccion varchar(255,100),
    desp_resper_tel1 char(10),
    desp_resper_tel2 char(10),
    desp_resper_dirtrajo varchar(255,100),
    desp_resper_estado char(10),
    desp_resper_sableer char(2),
    desp_resper_tpantalon char(2),
    desp_resper_tcamisa char(2),
    desp_resper_tbotas char(2),
    desp_resper_tgorra char(2),
    desp_resper_anio_apro char(1),
    desp_resper_profesion integer,
    desp_resper_correo char(20),
    desp_resper_genero char(1),
    desp_resper_sangre char(15),
    desp_resper_situacion char(2),
    desp_resper_obs varchar(255,255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_res_personal from "public";

{ TABLE respafe row size = 44 number of columns = 5 index size = 18 }

create table respafe 
  (
    not_codigo integer not null ,
    not_catalogo integer not null ,
    not_fecha date not null ,
    not_tiempalta varchar(30,10) not null ,
    not_nota char(1) not null ,
    primary key (not_codigo) 
  );

revoke all on respafe from "public";

{ TABLE aud_respafe row size = 108 number of columns = 13 index size = 0 }

create table aud_respafe 
  (
    not_codigo integer,
    not_catalogo integer,
    not_fecha date,
    not_tiempalta varchar(30,10),
    not_nota char(1),
    desp_not_codigo integer,
    desp_not_catalogo integer,
    desp_not_fecha date,
    desp_not_tiempalta varchar(30,10),
    desp_not_nota char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_respafe from "public";

{ TABLE resascensos row size = 63 number of columns = 4 index size = 18 }

create table resascensos 
  (
    asc_codigo integer not null ,
    asc_catalogo integer not null ,
    asc_fech date not null ,
    asc_grado varchar(50,50) not null ,
    primary key (asc_codigo) 
  );

revoke all on resascensos from "public";

{ TABLE aud_resascensos row size = 146 number of columns = 11 index size = 0 }

create table aud_resascensos 
  (
    asc_codigo integer,
    asc_catalogo integer,
    asc_fech date,
    asc_grado varchar(50,50),
    desp_asc_codigo integer,
    desp_asc_catalogo integer,
    desp_asc_fech date,
    desp_asc_grado varchar(50,50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_resascensos from "public";

{ TABLE resdfam row size = 343 number of columns = 11 index size = 18 }

create table resdfam 
  (
    resfam_codigo integer not null ,
    resfam_catalogo integer not null ,
    resfam_nom1 char(15) not null ,
    resfam_nom2 char(15),
    resfam_ape1 char(15) not null ,
    resfam_ape2 char(15),
    resfam_parentesco smallint not null ,
    resfam_genero char(1) not null ,
    resfam_direccion varchar(255),
    resfam_telefono char(8) not null ,
    resfam_emergencia char(8),
    primary key (resfam_codigo) 
  );

revoke all on resdfam from "public";

{ TABLE aud_resdfam row size = 706 number of columns = 25 index size = 0 }

create table aud_resdfam 
  (
    resfam_codigo integer,
    resfam_catalogo integer,
    resfam_nom1 char(15),
    resfam_nom2 char(15),
    resfam_ape1 char(15),
    resfam_ape2 char(15),
    resfam_parentesco smallint,
    resfam_genero char(1),
    resfam_direccion varchar(255),
    resfam_telefono char(8),
    resfam_emergencia char(8),
    desp_resfam_codigo integer,
    desp_resfam_catalogo integer,
    desp_resfam_nom1 char(15),
    desp_resfam_nom2 char(15),
    desp_resfam_ape1 char(15),
    desp_resfam_ape2 char(15),
    desp_resfam_parentesco smallint,
    desp_resfam_genero char(1),
    desp_resfam_direccion varchar(255),
    desp_resfam_telefono char(8),
    desp_resfam_emergencia char(8),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_resdfam from "public";

{ TABLE resorg row size = 112 number of columns = 5 index size = 9 }

create table resorg 
  (
    resorg_plaza integer not null ,
    resorg_dependencia smallint,
    resorg_descripcion varchar(100,50),
    resorg_situacion char(1),
    resorg_fecha_mod date,
    primary key (resorg_plaza) 
  );

revoke all on resorg from "public";

{ TABLE aud_resorg row size = 244 number of columns = 13 index size = 0 }

create table aud_resorg 
  (
    resorg_plaza integer,
    resorg_dependencia smallint,
    resorg_descripcion varchar(100,50),
    resorg_situacion char(1),
    resorg_fecha_mod date,
    desp_resorg_plaza integer,
    desp_resorg_dependencia smallint,
    desp_resorg_descripcion varchar(100,50),
    desp_resorg_situacion char(1),
    desp_resorg_fecha_mod date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_resorg from "public";

{ TABLE dep_reservas row size = 53 number of columns = 2 index size = 7 }

create table dep_reservas 
  (
    deprr_clave smallint,
    deprr_nombre varchar(50,5),
    primary key (deprr_clave) 
  );

revoke all on dep_reservas from "public";

{ TABLE aud_dep_reservas row size = 126 number of columns = 7 index size = 0 }

create table aud_dep_reservas 
  (
    deprr_clave smallint,
    deprr_nombre varchar(50,5),
    desp_deprr_clave smallint,
    desp_deprr_nombre varchar(50,5),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dep_reservas from "public";

{ TABLE ing_tramos row size = 613 number of columns = 12 index size = 9 }

create table ing_tramos 
  (
    tra_codigo integer not null ,
    tra_nombre varchar(190,60) not null ,
    tra_ubicacion char(4) not null ,
    tra_direccion varchar(190,60),
    tra_dimension integer,
    tra_medida char(1),
    tra_renglon integer not null ,
    tra_fecha_inicio date,
    tra_fecha_fin date,
    tra_situacion char(1),
    tra_proyecto integer not null ,
    tra_obser varchar(200,55),
    primary key (tra_codigo) 
  );

revoke all on ing_tramos from "public";

{ TABLE bonoextra row size = 21 number of columns = 4 index size = 9 }

create table bonoextra 
  (
    bon_plaza integer not null ,
    bon_clase integer not null ,
    bon_cantidad money(16,2) not null ,
    bon_grupo integer,
    primary key (bon_plaza)  constraint bexplaza
  );

revoke all on bonoextra from "public";

{ TABLE llamada_atencion row size = 481 number of columns = 25 index size = 9 }

create table llamada_atencion 
  (
    id_llamada integer not null ,
    no_orden varchar(45),
    punto_orden varchar(45),
    no_oficio varchar(45),
    llamada_atencion varchar(255) not null ,
    catalogo_impone integer not null ,
    grado_impone integer not null ,
    arma_impone integer not null ,
    dep_impone integer not null ,
    plaza_impone integer not null ,
    catalogo_sancionado integer not null ,
    grado_sancionado integer not null ,
    arma_sancionado integer not null ,
    dep_sancionado integer not null ,
    plaza_sancionado integer not null ,
    catalogo_ingresa integer not null ,
    grado_ingresa integer not null ,
    arma_ingresa integer not null ,
    dep_ingresa integer not null ,
    plaza_ingresa integer not null ,
    fecha_i_sist date not null ,
    fecha_llamada date not null ,
    situacion varchar(10) not null ,
    extra1 varchar(1),
    extra2 varchar(1),
    primary key (id_llamada) 
  );

revoke all on llamada_atencion from "public";

{ TABLE aud_llamada_atencion row size = 982 number of columns = 53 index size = 0 }

create table aud_llamada_atencion 
  (
    id_llamada integer,
    no_orden varchar(45),
    punto_orden varchar(45),
    no_oficio varchar(45),
    llamada_atencion varchar(255),
    catalogo_impone integer,
    grado_impone integer,
    arma_impone integer,
    dep_impone integer,
    plaza_impone integer,
    catalogo_sancionado integer,
    grado_sancionado integer,
    arma_sancionado integer,
    dep_sancionado integer,
    plaza_sancionado integer,
    catalogo_ingresa integer,
    grado_ingresa integer,
    arma_ingresa integer,
    dep_ingresa integer,
    plaza_ingresa integer,
    fecha_i_sist date,
    fecha_llamada date,
    situacion varchar(10),
    extra1 varchar(1),
    extra2 varchar(1),
    desp_id_llamada integer,
    desp_no_orden varchar(45),
    desp_punto_orden varchar(45),
    desp_no_oficio varchar(45),
    desp_llamada_atencion varchar(255),
    desp_catalogo_impone integer,
    desp_grado_impone integer,
    desp_arma_impone integer,
    desp_dep_impone integer,
    desp_plaza_impone integer,
    desp_catalogo_sancionado integer,
    desp_grado_sancionado integer,
    desp_arma_sancionado integer,
    desp_dep_sancionado integer,
    desp_plaza_sancionado integer,
    desp_catalogo_ingresa integer,
    desp_grado_ingresa integer,
    desp_arma_ingresa integer,
    desp_dep_ingresa integer,
    desp_plaza_ingresa integer,
    desp_fecha_i_sist date,
    desp_fecha_llamada date,
    desp_situacion varchar(10),
    desp_extra1 varchar(1),
    desp_extra2 varchar(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_llamada_atencion from "public";

{ TABLE llamada_atencion_mod row size = 536 number of columns = 34 index size = 22 }

create table llamada_atencion_mod 
  (
    id_llamada integer not null ,
    mod_id_llamada integer not null ,
    no_orden varchar(15),
    punto_orden varchar(10),
    no_oficio varchar(45),
    llamada_atencion varchar(255) not null ,
    catalogo_impone integer not null ,
    grado_impone integer not null ,
    arma_impone integer not null ,
    dep_impone integer not null ,
    plaza_impone integer not null ,
    catalogo_sancionado integer not null ,
    grado_sancionado integer not null ,
    arma_sancionado integer not null ,
    dep_sancionado integer not null ,
    plaza_sancionado integer not null ,
    catalogo_ingresa integer not null ,
    grado_ingresa integer not null ,
    arma_ingresa integer not null ,
    dep_ingresa integer not null ,
    plaza_ingresa integer not null ,
    catalogo_mod integer,
    grado_mod integer,
    arma_mod integer,
    dep_mod integer,
    plaza_mod integer,
    fecha_i_sist date not null ,
    fecha_llamada date not null ,
    fecha_mod date not null ,
    motivo_mod varchar(45) not null ,
    doc_ref_mod varchar(45) not null ,
    extra1 varchar(1),
    extra2 varchar(1),
    situacion varchar(10) not null ,
    primary key (id_llamada,mod_id_llamada) 
  );

revoke all on llamada_atencion_mod from "public";

{ TABLE aud_llamada_atencion_mod row size = 1092 number of columns = 71 index size = 0 }

create table aud_llamada_atencion_mod 
  (
    id_llamada integer,
    mod_id_llamada integer,
    no_orden varchar(15),
    punto_orden varchar(10),
    no_oficio varchar(45),
    llamada_atencion varchar(255),
    catalogo_impone integer,
    grado_impone integer,
    arma_impone integer,
    dep_impone integer,
    plaza_impone integer,
    catalogo_sancionado integer,
    grado_sancionado integer,
    arma_sancionado integer,
    dep_sancionado integer,
    plaza_sancionado integer,
    catalogo_ingresa integer,
    grado_ingresa integer,
    arma_ingresa integer,
    dep_ingresa integer,
    plaza_ingresa integer,
    catalogo_mod integer,
    grado_mod integer,
    arma_mod integer,
    dep_mod integer,
    plaza_mod integer,
    fecha_i_sist date,
    fecha_llamada date,
    fecha_mod date,
    motivo_mod varchar(45),
    doc_ref_mod varchar(45),
    extra1 varchar(1),
    extra2 varchar(1),
    situacion varchar(10),
    desp_id_llamada integer,
    desp_mod_id_llamada integer,
    desp_no_orden varchar(15),
    desp_punto_orden varchar(10),
    desp_no_oficio varchar(45),
    desp_llamada_atencion varchar(255),
    desp_catalogo_impone integer,
    desp_grado_impone integer,
    desp_arma_impone integer,
    desp_dep_impone integer,
    desp_plaza_impone integer,
    desp_catalogo_sancionado integer,
    desp_grado_sancionado integer,
    desp_arma_sancionado integer,
    desp_dep_sancionado integer,
    desp_plaza_sancionado integer,
    desp_catalogo_ingresa integer,
    desp_grado_ingresa integer,
    desp_arma_ingresa integer,
    desp_dep_ingresa integer,
    desp_plaza_ingresa integer,
    desp_catalogo_mod integer,
    desp_grado_mod integer,
    desp_arma_mod integer,
    desp_dep_mod integer,
    desp_plaza_mod integer,
    desp_fecha_i_sist date,
    desp_fecha_llamada date,
    desp_fecha_mod date,
    desp_motivo_mod varchar(45),
    desp_doc_ref_mod varchar(45),
    desp_extra1 varchar(1),
    desp_extra2 varchar(1),
    desp_situacion varchar(10),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_llamada_atencion_mod from "public";

{ TABLE sanciones row size = 267 number of columns = 6 index size = 9 }

create table sanciones 
  (
    san_codigo integer not null ,
    san_descripcion varchar(255),
    san_clasificacion char(2),
    san_tipo char(1),
    san_cantidad smallint not null ,
    san_reglamento smallint,
    primary key (san_codigo)  constraint pk_sancioness
  );

revoke all on sanciones from "public";

{ TABLE exp_solicitud_detalle row size = 26 number of columns = 7 index size = 38 }

create table exp_solicitud_detalle 
  (
    sdet_sol_codigo integer not null ,
    sdet_sol_dep_llave smallint not null ,
    sdet_codigo integer not null ,
    sdet_tipo_codigo integer not null ,
    sdet_uso_codigo integer not null ,
    sdet_cantidad integer not null ,
    sdet_situacion integer not null ,
    primary key (sdet_codigo) 
  );

revoke all on exp_solicitud_detalle from "public";

{ TABLE exp_conocimiento row size = 1328 number of columns = 19 index size = 11 }

create table exp_conocimiento 
  (
    con_dep_llave smallint not null ,
    con_codigo integer not null ,
    con_libro_numero varchar(255,1) not null ,
    con_libro_folio varchar(255,1) not null ,
    con_libro_tipo varchar(255,1) not null ,
    con_libro_conocimiento varchar(255,1) not null ,
    con_libro_conocimiento_fecha date not null ,
    con_mensaje varchar(255,1) not null ,
    con_mensaje_fecha date not null ,
    con_entrego_dep_llave smallint not null ,
    con_entrego_grado integer not null ,
    con_entrego_catalogo integer not null ,
    con_recibio_dep_llave smallint not null ,
    con_recibio_grado integer not null ,
    con_recibio_catalogo integer not null ,
    con_autorizo_dep_llave smallint not null ,
    con_autorizo_grado integer not null ,
    con_autorizo_catalogo integer not null ,
    con_situacion integer not null ,
    primary key (con_dep_llave,con_codigo) 
  );

revoke all on exp_conocimiento from "public";

{ TABLE exp_solicitud row size = 838 number of columns = 20 index size = 20 }

create table exp_solicitud 
  (
    sol_codigo integer not null ,
    sol_dep_llave smallint not null ,
    sol_solicito_dep_llave smallint,
    sol_solicito_grado integer,
    sol_solicito_catalogo integer,
    sol_solicito_mensaje varchar(255,1),
    sol_solicito_fecha datetime year to second,
    sol_autorizo_dep_llave smallint,
    sol_autorizo_grado integer,
    sol_autorizo_catalogo integer,
    sol_autorizo_mensaje varchar(255,1),
    sol_autorizo_fecha datetime year to second,
    sol_ordeno_dep_llave smallint,
    sol_ordeno_grado integer,
    sol_ordeno_catalogo integer,
    sol_ordeno_mensaje varchar(255,1),
    sol_ordeno_fecha datetime year to second,
    sol_pro_codigo integer not null ,
    sol_dep_llave2 smallint not null ,
    sol_situacion integer not null ,
    primary key (sol_codigo,sol_dep_llave) 
  );

revoke all on exp_solicitud from "public";

{ TABLE exp_uso row size = 268 number of columns = 4 index size = 9 }

create table exp_uso 
  (
    uso_codigo integer not null ,
    uso_descripcion varchar(255,1) not null ,
    uso_tipo integer not null ,
    uso_situacion integer not null ,
    primary key (uso_codigo) 
  );

revoke all on exp_uso from "public";

{ TABLE exp_tipo row size = 264 number of columns = 3 index size = 9 }

create table exp_tipo 
  (
    tipo_codigo integer not null ,
    tipo_descripcion varchar(255,1) not null ,
    tipo_situacion integer not null ,
    primary key (tipo_codigo) 
  );

revoke all on exp_tipo from "public";

{ TABLE exp_proyecto row size = 268 number of columns = 4 index size = 9 }

create table exp_proyecto 
  (
    pro_codigo integer not null ,
    pro_descripcion varchar(255,1) not null ,
    pro_tipo integer not null ,
    pro_situacion integer not null ,
    primary key (pro_codigo) 
  );

revoke all on exp_proyecto from "public";

{ TABLE exp_ent_sal row size = 34 number of columns = 9 index size = 33 }

create table exp_ent_sal 
  (
    es_codigo integer not null ,
    es_con_codigo integer not null ,
    es_con_dep_llave smallint not null ,
    es_uso_codigo integer not null ,
    es_tipo_codigo integer not null ,
    es_cantidad integer not null ,
    es_status integer not null ,
    es_tipo integer not null ,
    es_situacion integer not null ,
    primary key (es_codigo,es_con_codigo,es_con_dep_llave) 
  );

revoke all on exp_ent_sal from "public";

{ TABLE control_toe row size = 102 number of columns = 10 index size = 9 }

create table control_toe 
  (
    toe_codigo integer not null ,
    toe_catalogo integer not null ,
    toe_grado smallint not null ,
    toe_arma smallint,
    toe_nombre char(75) not null ,
    toe_plaza integer not null ,
    toe_dependencia smallint not null ,
    toe_horaactual datetime hour to minute not null ,
    toe_fecha date not null ,
    toe_depgenero smallint not null ,
    primary key (toe_codigo)  constraint pk_toe_codigo
  );

revoke all on control_toe from "public";

{ TABLE aud_control_toe row size = 224 number of columns = 23 index size = 0 }

create table aud_control_toe 
  (
    toe_codigo integer,
    toe_catalogo integer,
    toe_grado smallint,
    toe_arma smallint,
    toe_nombre char(75),
    toe_plaza integer,
    toe_dependencia smallint,
    toe_horaactual datetime hour to minute,
    toe_fecha date,
    toe_depgenero smallint,
    desp_toe_codigo integer,
    desp_toe_catalogo integer,
    desp_toe_grado smallint,
    desp_toe_arma smallint,
    desp_toe_nombre char(75),
    desp_toe_plaza integer,
    desp_toe_dependencia smallint,
    desp_toe_horaactual datetime hour to minute,
    desp_toe_fecha date,
    desp_toe_depgenero smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_control_toe from "public";

{ TABLE religion_segcontalu row size = 28 number of columns = 9 index size = 31 }

create table religion_segcontalu 
  (
    rel_id serial not null ,
    rel_unidad smallint not null ,
    rel_escuadron smallint not null ,
    rel_religions smallint not null ,
    rel_cantidad integer not null ,
    rel_fecha date not null ,
    rel_usuario integer not null ,
    rel_comando integer not null ,
    rel_situacion smallint not null ,
    primary key (rel_unidad,rel_religions,rel_escuadron,rel_comando)  constraint 
              pk_relis
  );

revoke all on religion_segcontalu from "public";

{ TABLE aud_religion_segcontalu row size = 76 number of columns = 21 index size = 0 }

create table aud_religion_segcontalu 
  (
    rel_id integer,
    rel_unidad smallint,
    rel_escuadron smallint,
    rel_religions smallint,
    rel_cantidad integer,
    rel_fecha date,
    rel_usuario integer,
    rel_comando integer,
    rel_situacion smallint,
    desp_rel_id integer,
    desp_rel_unidad smallint,
    desp_rel_escuadron smallint,
    desp_rel_religions smallint,
    desp_rel_cantidad integer,
    desp_rel_fecha date,
    desp_rel_usuario integer,
    desp_rel_comando integer,
    desp_rel_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_religion_segcontalu from "public";

{ TABLE con_mdep row size = 347 number of columns = 7 index size = 16 }

create table con_mdep 
  (
    con_dep_llave smallint not null ,
    con_dep_desc_lg char(255) not null ,
    con_dep_desc_md char(50) not null ,
    con_dep_desc_ct char(30) not null ,
    con_dep_unidad integer not null ,
    con_dep_situacion char(2) not null ,
    con_mdep integer,
    primary key (con_dep_llave)  constraint pk_con_dep_llave
  );

revoke all on con_mdep from "public";

{ TABLE con_unidades row size = 261 number of columns = 3 index size = 9 }

create table con_unidades 
  (
    uni_codigo integer not null ,
    uni_descripcion char(255) not null ,
    uni_situacion char(2) not null ,
    primary key (uni_codigo)  constraint pk_uni_codigo
  );

revoke all on con_unidades from "public";

{ TABLE fmdep row size = 155 number of columns = 7 index size = 7 }

create table fmdep 
  (
    dep_llave smallint not null ,
    dep_desc_lg char(100) not null ,
    dep_desc_md char(35) not null ,
    dep_desc_ct char(15) not null ,
    dep_clase char(1),
    dep_precio char(1),
    dep_ejto char(1),
    primary key (dep_llave) 
  );

revoke all on fmdep from "public";

{ TABLE lmun_ent_sal_restore row size = 50 number of columns = 13 index size = 15 }

create table lmun_ent_sal_restore 
  (
    es_codigo integer,
    es_con_codigo integer,
    es_con_dep_llave smallint,
    es_lote_codigo integer not null ,
    es_uso_codigo integer not null ,
    es_tipo_codigo integer not null ,
    es_cal_codigo integer not null ,
    es_eslabonada integer not null ,
    es_carga integer not null ,
    es_cantidad integer not null ,
    es_status integer not null ,
    es_tipo integer not null ,
    es_situacion integer not null ,
    primary key (es_codigo,es_con_codigo,es_con_dep_llave) 
  );

revoke all on lmun_ent_sal_restore from "public";

{ TABLE lmun_conocimiento_restore row size = 1088 number of columns = 22 index size = 11 }

create table lmun_conocimiento_restore 
  (
    con_codigo integer,
    con_dep_llave smallint,
    con_numero_libro varchar(255,1) not null ,
    con_folio_libro varchar(255,1) not null ,
    con_conocimiento_libro varchar(255,1) not null ,
    con_tipo_libro integer not null ,
    con_grado_entrego integer not null ,
    con_catalogo_entrego integer not null ,
    con_dep_llave_entrego smallint not null ,
    con_org_plaza_entrego integer,
    con_grado_recibio integer not null ,
    con_catalogo_recibio integer not null ,
    con_dep_llave_recibio smallint not null ,
    con_org_plaza_recibio integer,
    con_grado_autorizo integer not null ,
    con_catalogo_autorizo integer not null ,
    con_dep_llave_autorizo smallint not null ,
    con_org_plaza_autorizo integer,
    con_mensaje varchar(255,1) not null ,
    con_fecha_mensaje date not null ,
    con_fecha_conocimiento date not null ,
    con_situacion integer not null ,
    primary key (con_codigo,con_dep_llave) 
  );

revoke all on lmun_conocimiento_restore from "public";

{ TABLE dfasig_tabla row size = 19 number of columns = 4 index size = 11 }

create table dfasig_tabla 
  (
    dfp_plaza integer,
    dfp_codigo smallint,
    dfp_fecha_ini date,
    dfp_cantidad money(16,2),
    primary key (dfp_plaza,dfp_codigo) 
  );

revoke all on dfasig_tabla from "public";

{ TABLE con_area row size = 263 number of columns = 5 index size = 18 }

create table con_area 
  (
    area_id integer not null ,
    area_descripcion integer not null ,
    area_situacion char(1),
    area_manual integer not null ,
    area_extra1 char(250),
    primary key (area_id) 
  );

revoke all on con_area from "public";

{ TABLE aud_con_area row size = 546 number of columns = 13 index size = 0 }

create table aud_con_area 
  (
    area_id integer,
    area_descripcion integer,
    area_situacion char(1),
    area_manual integer,
    area_extra1 char(250),
    desp_area_id integer,
    desp_area_descripcion integer,
    desp_area_situacion char(1),
    desp_area_manual integer,
    desp_area_extra1 char(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_area from "public";

{ TABLE con_asignacion_plaza row size = 20 number of columns = 5 index size = 45 }

create table con_asignacion_plaza 
  (
    asig_id integer not null ,
    asig_manual integer not null ,
    asig_area integer not null ,
    asig_subarea integer not null ,
    asig_plaza integer not null ,
    primary key (asig_id) 
  );

revoke all on con_asignacion_plaza from "public";

{ TABLE aud_con_asignacion_plaza row size = 60 number of columns = 13 index size = 0 }

create table aud_con_asignacion_plaza 
  (
    asig_id integer,
    asig_manual integer,
    asig_area integer,
    asig_subarea integer,
    asig_plaza integer,
    desp_asig_id integer,
    desp_asig_manual integer,
    desp_asig_area integer,
    desp_asig_subarea integer,
    desp_asig_plaza integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_asignacion_plaza from "public";

{ TABLE con_boleta row size = 1064 number of columns = 16 index size = 36 }

create table con_boleta 
  (
    bol_id serial not null ,
    bol_dependencia smallint not null ,
    bol_cat_revisor integer,
    bol_gra_revisor integer,
    bol_nombre varchar(255),
    bol_grado varchar(255),
    bol_empleo varchar(255),
    bol_cat_comte integer,
    bol_gra_comte integer,
    bol_contrato integer,
    bol_unidad smallint not null ,
    bol_ejecutora smallint not null ,
    bol_fe_revision date not null ,
    bol_fe_emision date not null ,
    bol_observaciones varchar(255),
    bol_situacion char(2),
    primary key (bol_id) 
  );

revoke all on con_boleta from "public";

{ TABLE con_mper_contratos row size = 1162 number of columns = 16 index size = 9 }

create table con_mper_contratos 
  (
    perc_id integer not null ,
    perc_dpi char(20) not null ,
    perc_nom1 char(20) not null ,
    perc_nom2 char(20),
    perc_nom3 char(20),
    perc_ape1 char(20) not null ,
    perc_ape2 char(20),
    perc_ape3 char(20),
    perc_direccion char(500) not null ,
    perc_estado_civil char(1) not null ,
    perc_sexo char(1) not null ,
    perc_profesion char(500) not null ,
    perc_departamento char(4) not null ,
    perc_municipio char(4) not null ,
    perc_fech_nac date not null ,
    perc_status char(4) not null ,
    primary key (perc_id) 
  );

revoke all on con_mper_contratos from "public";

{ TABLE aud_con_mper_contratos row size = 2344 number of columns = 35 index size = 0 }

create table aud_con_mper_contratos 
  (
    perc_id integer,
    perc_dpi char(20),
    perc_nom1 char(20),
    perc_nom2 char(20),
    perc_nom3 char(20),
    perc_ape1 char(20),
    perc_ape2 char(20),
    perc_ape3 char(20),
    perc_direccion char(500),
    perc_estado_civil char(1),
    perc_sexo char(1),
    perc_profesion char(500),
    perc_departamento char(4),
    perc_municipio char(4),
    perc_fech_nac date,
    perc_status char(4),
    desp_perc_id integer,
    desp_perc_dpi char(20),
    desp_perc_nom1 char(20),
    desp_perc_nom2 char(20),
    desp_perc_nom3 char(20),
    desp_perc_ape1 char(20),
    desp_perc_ape2 char(20),
    desp_perc_ape3 char(20),
    desp_perc_direccion char(500),
    desp_perc_estado_civil char(1),
    desp_perc_sexo char(1),
    desp_perc_profesion char(500),
    desp_perc_departamento char(4),
    desp_perc_municipio char(4),
    desp_perc_fech_nac date,
    desp_perc_status char(4),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_mper_contratos from "public";

{ TABLE con_contrato row size = 1685 number of columns = 32 index size = 41 }

create table con_contrato 
  (
    con_id serial not null ,
    con_num_contrato char(255) not null ,
    con_contratado integer not null ,
    con_fech_contrato date not null ,
    con_jur_datos integer not null ,
    con_fech_inicio date,
    con_fech_fin date,
    con_horas_trabajo smallint,
    con_hora_entra datetime hour to minute,
    con_hora_salida datetime hour to minute,
    con_hora_entra2 datetime hour to minute,
    con_hora_salida2 datetime hour to minute,
    con_meses smallint,
    con_sueldo money(16,2),
    con_sueldo_mensual money(16,2),
    con_bono66 money(16,2),
    con_bono_pro money(16,2),
    con_colegiado integer,
    con_seguro char(50),
    con_desc_seguro money(16,2),
    con_mont_asegu money(16,2),
    con_ocupacion char(1),
    con_horario char(255),
    con_cant_peisol smallint,
    con_esp_peisol char(255),
    con_minuta smallint,
    con_dependencia smallint not null ,
    con_asignacion integer,
    con_ant_asignacion integer,
    con_con_modi char(255),
    con_observaciones char(500),
    con_status smallint not null ,
    primary key (con_id) 
  );

revoke all on con_contrato from "public";

{ TABLE con_desc_area row size = 259 number of columns = 2 index size = 9 }

create table con_desc_area 
  (
    desc_area_id integer not null ,
    desc_area_descripcion char(255),
    primary key (desc_area_id) 
  );

revoke all on con_desc_area from "public";

{ TABLE aud_con_desc_area row size = 538 number of columns = 7 index size = 0 }

create table aud_con_desc_area 
  (
    desc_area_id integer,
    desc_area_descripcion char(255),
    desp_desc_area_id integer,
    desp_desc_area_descripcion char(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_desc_area from "public";

{ TABLE con_desc_subareas row size = 259 number of columns = 2 index size = 9 }

create table con_desc_subareas 
  (
    desc_sub_id integer not null ,
    desc_sub_descripcion char(255),
    primary key (desc_sub_id) 
  );

revoke all on con_desc_subareas from "public";

{ TABLE aud_con_desc_subareas row size = 538 number of columns = 7 index size = 0 }

create table aud_con_desc_subareas 
  (
    desc_sub_id integer,
    desc_sub_descripcion char(255),
    desp_desc_sub_id integer,
    desp_desc_sub_descripcion char(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_desc_subareas from "public";

{ TABLE con_manual row size = 505 number of columns = 4 index size = 9 }

create table con_manual 
  (
    man_id integer not null ,
    man_descripcion char(250) not null ,
    man_situacion char(1) not null ,
    man_extra1 char(250),
    primary key (man_id) 
  );

revoke all on con_manual from "public";

{ TABLE aud_con_manual row size = 1030 number of columns = 11 index size = 0 }

create table aud_con_manual 
  (
    man_id integer,
    man_descripcion char(250),
    man_situacion char(1),
    man_extra1 char(250),
    desp_man_id integer,
    desp_man_descripcion char(250),
    desp_man_situacion char(1),
    desp_man_extra1 char(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_manual from "public";

{ TABLE aud_con_mdep row size = 714 number of columns = 17 index size = 0 }

create table aud_con_mdep 
  (
    con_dep_llave smallint,
    con_dep_desc_lg char(255),
    con_dep_desc_md char(50),
    con_dep_desc_ct char(30),
    con_dep_unidad integer,
    con_dep_situacion char(2),
    con_mdep integer,
    desp_con_dep_llave smallint,
    desp_con_dep_desc_lg char(255),
    desp_con_dep_desc_md char(50),
    desp_con_dep_desc_ct char(30),
    desp_con_dep_unidad integer,
    desp_con_dep_situacion char(2),
    desp_con_mdep integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_mdep from "public";

{ TABLE con_minuta row size = 204 number of columns = 3 index size = 7 }

create table con_minuta 
  (
    min_id smallint not null ,
    min_descripcion char(200) not null ,
    min_situacion smallint not null ,
    primary key (min_id) 
  );

revoke all on con_minuta from "public";

{ TABLE aud_con_minuta row size = 428 number of columns = 9 index size = 0 }

create table aud_con_minuta 
  (
    min_id smallint,
    min_descripcion char(200),
    min_situacion smallint,
    desp_min_id smallint,
    desp_min_descripcion char(200),
    desp_min_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_minuta from "public";

{ TABLE con_observaciones row size = 275 number of columns = 8 index size = 18 }

create table con_observaciones 
  (
    obs_id integer not null ,
    obs_contrato integer not null ,
    obs_depen char(2) not null ,
    obs_obser char(255),
    obs_fecha date not null ,
    obs_salario char(1),
    obs_situacion char(1) not null ,
    obs_usuario integer not null ,
    primary key (obs_id) 
  );

revoke all on con_observaciones from "public";

{ TABLE aud_con_observaciones row size = 570 number of columns = 19 index size = 0 }

create table aud_con_observaciones 
  (
    obs_id integer,
    obs_contrato integer,
    obs_depen char(2),
    obs_obser char(255),
    obs_fecha date,
    obs_salario char(1),
    obs_situacion char(1),
    obs_usuario integer,
    desp_obs_id integer,
    desp_obs_contrato integer,
    desp_obs_depen char(2),
    desp_obs_obser char(255),
    desp_obs_fecha date,
    desp_obs_salario char(1),
    desp_obs_situacion char(1),
    desp_obs_usuario integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_observaciones from "public";

{ TABLE con_permisos row size = 10 number of columns = 4 index size = 14 }

create table con_permisos 
  (
    con_per_id smallint not null ,
    con_per_cat integer not null ,
    con_per_dep smallint not null ,
    con_per_situacion char(2) not null ,
    primary key (con_per_id) 
  );

revoke all on con_permisos from "public";

{ TABLE aud_con_permisos row size = 40 number of columns = 11 index size = 0 }

create table aud_con_permisos 
  (
    con_per_id smallint,
    con_per_cat integer,
    con_per_dep smallint,
    con_per_situacion char(2),
    desp_con_per_id smallint,
    desp_con_per_cat integer,
    desp_con_per_dep smallint,
    desp_con_per_situacion char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_permisos from "public";

{ TABLE con_plaza row size = 514 number of columns = 5 index size = 9 }

create table con_plaza 
  (
    plaza_id integer not null ,
    plaza_descripcion char(255) not null ,
    plaza_situacion char(1),
    plaza_area integer not null ,
    plaza_extra1 char(250),
    primary key (plaza_id) 
  );

revoke all on con_plaza from "public";

{ TABLE aud_con_plaza row size = 1048 number of columns = 13 index size = 0 }

create table aud_con_plaza 
  (
    plaza_id integer,
    plaza_descripcion char(255),
    plaza_situacion char(1),
    plaza_area integer,
    plaza_extra1 char(250),
    desp_plaza_id integer,
    desp_plaza_descripcion char(255),
    desp_plaza_situacion char(1),
    desp_plaza_area integer,
    desp_plaza_extra1 char(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_plaza from "public";

{ TABLE con_seguimiento row size = 18 number of columns = 6 index size = 18 }

create table con_seguimiento 
  (
    seg_id integer not null ,
    seg_contrato integer not null ,
    seg_ubicacion char(1) not null ,
    seg_fecha date not null ,
    seg_motivo char(1) not null ,
    seg_catalogo integer,
    primary key (seg_id) 
  );

revoke all on con_seguimiento from "public";

{ TABLE aud_con_seguimiento row size = 56 number of columns = 15 index size = 0 }

create table aud_con_seguimiento 
  (
    seg_id integer,
    seg_contrato integer,
    seg_ubicacion char(1),
    seg_fecha date,
    seg_motivo char(1),
    seg_catalogo integer,
    desp_seg_id integer,
    desp_seg_contrato integer,
    desp_seg_ubicacion char(1),
    desp_seg_fecha date,
    desp_seg_motivo char(1),
    desp_seg_catalogo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_seguimiento from "public";

{ TABLE cont_solicitud row size = 385 number of columns = 7 index size = 13 }

create table cont_solicitud 
  (
    sol_codigo integer not null ,
    sol_anio integer not null ,
    sol_formulario varchar(16) not null ,
    sol_dependencia integer not null ,
    sol_fec_solicit date not null ,
    sol_justific varchar(250) not null ,
    sol_oficio varchar(100),
    primary key (sol_codigo,sol_anio) 
  );

revoke all on cont_solicitud from "public";

{ TABLE aud_cont_solicitud row size = 790 number of columns = 17 index size = 0 }

create table aud_cont_solicitud 
  (
    sol_codigo integer,
    sol_anio integer,
    sol_formulario varchar(16),
    sol_dependencia integer,
    sol_fec_solicit date,
    sol_justific varchar(250),
    sol_oficio varchar(100),
    desp_sol_codigo integer,
    desp_sol_anio integer,
    desp_sol_formulario varchar(16),
    desp_sol_dependencia integer,
    desp_sol_fec_solicit date,
    desp_sol_justific varchar(250),
    desp_sol_oficio varchar(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cont_solicitud from "public";

{ TABLE con_subareas row size = 285 number of columns = 8 index size = 18 }

create table con_subareas 
  (
    sub_id integer not null ,
    sub_descripcion integer not null ,
    sub_sueldobase money(16,2) not null ,
    sub_bono66 money(16,2),
    sub_situacion char(1),
    sub_area integer not null ,
    sub_dependencia integer not null ,
    sub_extra2 char(250),
    primary key (sub_id) 
  );

revoke all on con_subareas from "public";

{ TABLE aud_con_subareas row size = 590 number of columns = 19 index size = 0 }

create table aud_con_subareas 
  (
    sub_id integer,
    sub_descripcion integer,
    sub_sueldobase money(16,2),
    sub_bono66 money(16,2),
    sub_situacion char(1),
    sub_area integer,
    sub_dependencia integer,
    sub_extra2 char(250),
    desp_sub_id integer,
    desp_sub_descripcion integer,
    desp_sub_sueldobase money(16,2),
    desp_sub_bono66 money(16,2),
    desp_sub_situacion char(1),
    desp_sub_area integer,
    desp_sub_dependencia integer,
    desp_sub_extra2 char(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_subareas from "public";

{ TABLE con_usuarios row size = 146 number of columns = 12 index size = 40 }

create table con_usuarios 
  (
    usu_id integer not null ,
    usu_usuario integer not null ,
    usu_pass char(10) not null ,
    usu_nom1 char(15) not null ,
    usu_nom2 char(15),
    usu_ape1 char(15) not null ,
    usu_ape2 char(15),
    usu_ape3 char(15),
    usu_grado char(25) not null ,
    usu_empleo char(25) not null ,
    usu_dependencia smallint not null ,
    usu_situacion char(1) not null ,
    unique (usu_usuario) ,
    unique (usu_pass) ,
    primary key (usu_id) 
  );

revoke all on con_usuarios from "public";

{ TABLE aud_con_usuarios row size = 312 number of columns = 27 index size = 0 }

create table aud_con_usuarios 
  (
    usu_id integer,
    usu_usuario integer,
    usu_pass char(10),
    usu_nom1 char(15),
    usu_nom2 char(15),
    usu_ape1 char(15),
    usu_ape2 char(15),
    usu_ape3 char(15),
    usu_grado char(25),
    usu_empleo char(25),
    usu_dependencia smallint,
    usu_situacion char(1),
    desp_usu_id integer,
    desp_usu_usuario integer,
    desp_usu_pass char(10),
    desp_usu_nom1 char(15),
    desp_usu_nom2 char(15),
    desp_usu_ape1 char(15),
    desp_usu_ape2 char(15),
    desp_usu_ape3 char(15),
    desp_usu_grado char(25),
    desp_usu_empleo char(25),
    desp_usu_dependencia smallint,
    desp_usu_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_usuarios from "public";

{ TABLE aud_con_unidades row size = 542 number of columns = 9 index size = 0 }

create table aud_con_unidades 
  (
    uni_codigo integer,
    uni_descripcion char(255),
    uni_situacion char(2),
    desp_uni_codigo integer,
    desp_uni_descripcion char(255),
    desp_uni_situacion char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_unidades from "public";

{ TABLE con_juridico row size = 1270 number of columns = 14 index size = 27 }

create table con_juridico 
  (
    jur_id integer not null ,
    jur_cat_vice integer not null ,
    jur_gra_vice smallint not null ,
    jur_cat_ministro integer not null ,
    jur_gra_ministro smallint not null ,
    jur_nom_ministro char(500) not null ,
    jur_nom_vice char(500) not null ,
    jur_no_acuer_gub char(20) not null ,
    jur_fecha_acuer_gub date not null ,
    jur_cert_acta char(20) not null ,
    jur_fech_acta date not null ,
    jur_ofi_no char(200) not null ,
    jur_fech_ofi date not null ,
    jur_status smallint,
    primary key (jur_id) 
  );

revoke all on con_juridico from "public";

{ TABLE aud_con_juridico row size = 2560 number of columns = 31 index size = 0 }

create table aud_con_juridico 
  (
    jur_id integer,
    jur_cat_vice integer,
    jur_gra_vice smallint,
    jur_cat_ministro integer,
    jur_gra_ministro smallint,
    jur_nom_ministro char(500),
    jur_nom_vice char(500),
    jur_no_acuer_gub char(20),
    jur_fecha_acuer_gub date,
    jur_cert_acta char(20),
    jur_fech_acta date,
    jur_ofi_no char(200),
    jur_fech_ofi date,
    jur_status smallint,
    desp_jur_id integer,
    desp_jur_cat_vice integer,
    desp_jur_gra_vice smallint,
    desp_jur_cat_ministro integer,
    desp_jur_gra_ministro smallint,
    desp_jur_nom_ministro char(500),
    desp_jur_nom_vice char(500),
    desp_jur_no_acuer_gub char(20),
    desp_jur_fecha_acuer_gub date,
    desp_jur_cert_acta char(20),
    desp_jur_fech_acta date,
    desp_jur_ofi_no char(200),
    desp_jur_fech_ofi date,
    desp_jur_status smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_juridico from "public";

{ TABLE con_solicitud row size = 385 number of columns = 7 index size = 13 }

create table con_solicitud 
  (
    sol_codigo integer,
    sol_anio integer,
    sol_formulario varchar(16),
    sol_dependencia integer,
    sol_fec_solicit date,
    sol_justific varchar(250),
    sol_oficio varchar(100),
    primary key (sol_codigo,sol_anio)  constraint primary
  );

revoke all on con_solicitud from "public";

{ TABLE aud_con_contrato row size = 3390 number of columns = 67 index size = 0 }

create table aud_con_contrato 
  (
    con_id integer,
    con_num_contrato char(255),
    con_contratado integer,
    con_fech_contrato date,
    con_jur_datos integer,
    con_fech_inicio date,
    con_fech_fin date,
    con_horas_trabajo smallint,
    con_hora_entra datetime hour to minute,
    con_hora_salida datetime hour to minute,
    con_hora_entra2 datetime hour to minute,
    con_hora_salida2 datetime hour to minute,
    con_meses smallint,
    con_sueldo money(16,2),
    con_sueldo_mensual money(16,2),
    con_bono66 money(16,2),
    con_bono_pro money(16,2),
    con_colegiado integer,
    con_seguro char(50),
    con_desc_seguro money(16,2),
    con_mont_asegu money(16,2),
    con_ocupacion char(1),
    con_horario char(255),
    con_cant_peisol smallint,
    con_esp_peisol char(255),
    con_minuta smallint,
    con_dependencia smallint,
    con_asignacion integer,
    con_ant_asignacion integer,
    con_con_modi char(255),
    con_observaciones char(500),
    con_status smallint,
    desp_con_id integer,
    desp_con_num_contrato char(255),
    desp_con_contratado integer,
    desp_con_fech_contrato date,
    desp_con_jur_datos integer,
    desp_con_fech_inicio date,
    desp_con_fech_fin date,
    desp_con_horas_trabajo smallint,
    desp_con_hora_entra datetime hour to minute,
    desp_con_hora_salida datetime hour to minute,
    desp_con_hora_entra2 datetime hour to minute,
    desp_con_hora_salida2 datetime hour to minute,
    desp_con_meses smallint,
    desp_con_sueldo money(16,2),
    desp_con_sueldo_mensual money(16,2),
    desp_con_bono66 money(16,2),
    desp_con_bono_pro money(16,2),
    desp_con_colegiado integer,
    desp_con_seguro char(50),
    desp_con_desc_seguro money(16,2),
    desp_con_mont_asegu money(16,2),
    desp_con_ocupacion char(1),
    desp_con_horario char(255),
    desp_con_cant_peisol smallint,
    desp_con_esp_peisol char(255),
    desp_con_minuta smallint,
    desp_con_dependencia smallint,
    desp_con_asignacion integer,
    desp_con_ant_asignacion integer,
    desp_con_con_modi char(255),
    desp_con_observaciones char(500),
    desp_con_status smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_contrato from "public";

{ TABLE aud_con_boleta row size = 2148 number of columns = 35 index size = 0 }

create table aud_con_boleta 
  (
    bol_id integer,
    bol_dependencia smallint,
    bol_cat_revisor integer,
    bol_gra_revisor integer,
    bol_nombre varchar(255),
    bol_grado varchar(255),
    bol_empleo varchar(255),
    bol_cat_comte integer,
    bol_gra_comte integer,
    bol_contrato integer,
    bol_unidad smallint,
    bol_ejecutora smallint,
    bol_fe_revision date,
    bol_fe_emision date,
    bol_observaciones varchar(255),
    bol_situacion char(2),
    desp_bol_id integer,
    desp_bol_dependencia smallint,
    desp_bol_cat_revisor integer,
    desp_bol_gra_revisor integer,
    desp_bol_nombre varchar(255),
    desp_bol_grado varchar(255),
    desp_bol_empleo varchar(255),
    desp_bol_cat_comte integer,
    desp_bol_gra_comte integer,
    desp_bol_contrato integer,
    desp_bol_unidad smallint,
    desp_bol_ejecutora smallint,
    desp_bol_fe_revision date,
    desp_bol_fe_emision date,
    desp_bol_observaciones varchar(255),
    desp_bol_situacion char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_boleta from "public";

{ TABLE con_ef_personal row size = 32 number of columns = 9 index size = 18 }

create table con_ef_personal 
  (
    ef_id integer not null ,
    ef_disponibles integer,
    ef_vacantes integer,
    ef_unidadejecutora integer not null ,
    ef_fechaactual date,
    ef_fechaef date,
    ef_total integer not null ,
    ef_situacion varchar(1),
    ef_extra varchar(1),
    primary key (ef_id) 
  );

revoke all on con_ef_personal from "public";

{ TABLE aud_con_ef_personal row size = 84 number of columns = 21 index size = 0 }

create table aud_con_ef_personal 
  (
    ef_id integer,
    ef_disponibles integer,
    ef_vacantes integer,
    ef_unidadejecutora integer,
    ef_fechaactual date,
    ef_fechaef date,
    ef_total integer,
    ef_situacion varchar(1),
    ef_extra varchar(1),
    desp_ef_id integer,
    desp_ef_disponibles integer,
    desp_ef_vacantes integer,
    desp_ef_unidadejecutora integer,
    desp_ef_fechaactual date,
    desp_ef_fechaef date,
    desp_ef_total integer,
    desp_ef_situacion varchar(1),
    desp_ef_extra varchar(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_ef_personal from "public";

{ TABLE arco_paridera row size = 6 number of columns = 2 index size = 7 }

create table arco_paridera 
  (
    codigo smallint not null ,
    cat_paridera integer not null ,
    primary key (codigo)  constraint c_codigo
  );

revoke all on arco_paridera from "public";

{ TABLE cci_est_destino row size = 27 number of columns = 2 index size = 7 }

create table cci_est_destino 
  (
    est_des_codigo smallint not null ,
    est_des_descripcion char(25) not null ,
    primary key (est_des_codigo) 
  );

revoke all on cci_est_destino from "public";

{ TABLE aud_cci_est_destino row size = 74 number of columns = 7 index size = 0 }

create table aud_cci_est_destino 
  (
    est_des_codigo smallint,
    est_des_descripcion char(25),
    desp_est_des_codigo smallint,
    desp_est_des_descripcion char(25),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cci_est_destino from "public";

{ TABLE cci_est_fuerza row size = 165 number of columns = 10 index size = 16 }

create table cci_est_fuerza 
  (
    est_codigo integer not null ,
    est_catalogo integer not null ,
    est_jerarquia char(10) not null ,
    est_clase smallint not null ,
    est_codigo_grado smallint not null ,
    est_grado char(40) not null ,
    est_nombres char(60) not null ,
    est_destino smallint not null ,
    est_observacion char(40),
    est_situacion char(1) not null ,
    primary key (est_codigo) 
  );

revoke all on cci_est_fuerza from "public";

{ TABLE aud_cci_est_fuerza row size = 350 number of columns = 23 index size = 0 }

create table aud_cci_est_fuerza 
  (
    est_codigo integer,
    est_catalogo integer,
    est_jerarquia char(10),
    est_clase smallint,
    est_codigo_grado smallint,
    est_grado char(40),
    est_nombres char(60),
    est_destino smallint,
    est_observacion char(40),
    est_situacion char(1),
    desp_est_codigo integer,
    desp_est_catalogo integer,
    desp_est_jerarquia char(10),
    desp_est_clase smallint,
    desp_est_codigo_grado smallint,
    desp_est_grado char(40),
    desp_est_nombres char(60),
    desp_est_destino smallint,
    desp_est_observacion char(40),
    desp_est_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cci_est_fuerza from "public";

{ TABLE cci_novedades row size = 663 number of columns = 4 index size = 9 }

create table cci_novedades 
  (
    novcci_codigo integer not null ,
    novcci_fecha datetime year to minute not null ,
    novcci_novedad char(650) not null ,
    novcci_sitacion smallint not null ,
    primary key (novcci_codigo) 
  );

revoke all on cci_novedades from "public";

{ TABLE aud_cci_novedades row size = 1343 number of columns = 11 index size = 0 }

create table aud_cci_novedades 
  (
    novcci_codigo integer,
    novcci_fecha datetime year to minute,
    novcci_novedad char(650),
    novcci_sitacion smallint,
    desp_novcci_codigo integer,
    desp_novcci_fecha integer,
    desp_novcci_novedad char(650),
    desp_novcci_sitacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cci_novedades from "public";

{ TABLE vlh_t_cisterna row size = 30 number of columns = 3 index size = 7 }

create table vlh_t_cisterna 
  (
    cis_id_t smallint not null ,
    cis_desc varchar(25),
    cis_cap smallint,
    primary key (cis_id_t) 
  );

revoke all on vlh_t_cisterna from "public";

{ TABLE vlh_t_vehiculo row size = 40 number of columns = 3 index size = 7 }

create table vlh_t_vehiculo 
  (
    tve_id smallint not null ,
    tve_desc varchar(35) not null ,
    tve_situacion smallint,
    primary key (tve_id) 
  );

revoke all on vlh_t_vehiculo from "public";

{ TABLE vlh_llantas row size = 310 number of columns = 12 index size = 7 }

create table vlh_llantas 
  (
    lla_id smallint not null ,
    lla_cantidad_delanteras smallint,
    lla_cantidad_traseras smallint,
    lla_rin_delanteras decimal(10,2),
    lla_rin_traseras decimal(10,2),
    lla_ancho_delanteras decimal(10,2),
    lla_ancho_traseras decimal(10,2),
    lla_altura_delanteras decimal(10,2),
    lla_altura_traseras decimal(10,2),
    lla_psi_delanteras decimal(10,2),
    lla_psi_traseras decimal(10,2),
    lla_tipo varchar(255,255),
    primary key (lla_id) 
  );

revoke all on vlh_llantas from "public";

{ TABLE vlh_marcas row size = 33 number of columns = 2 index size = 7 }

create table vlh_marcas 
  (
    mar_id smallint not null ,
    mar_desc varchar(30) not null ,
    primary key (mar_id) 
  );

revoke all on vlh_marcas from "public";

{ TABLE vlh_hidraulico_fag row size = 20 number of columns = 3 index size = 7 }

create table vlh_hidraulico_fag 
  (
    hid_id_fag smallint not null ,
    hid_tipo_fag varchar(15),
    hid_cant_fag smallint,
    primary key (hid_id_fag) 
  );

revoke all on vlh_hidraulico_fag from "public";

{ TABLE vlh_linea row size = 35 number of columns = 3 index size = 14 }

create table vlh_linea 
  (
    lin_id smallint not null ,
    lin_desc varchar(30) not null ,
    lin_marca smallint not null ,
    primary key (lin_id) 
  );

revoke all on vlh_linea from "public";

{ TABLE vlh_aceite_fag row size = 20 number of columns = 3 index size = 7 }

create table vlh_aceite_fag 
  (
    ace_id_fag smallint not null ,
    ace_tipo_fag varchar(15),
    ace_cant_fag smallint,
    primary key (ace_id_fag) 
  );

revoke all on vlh_aceite_fag from "public";

{ TABLE aud_vlh_aceite_fag row size = 60 number of columns = 9 index size = 0 }

create table aud_vlh_aceite_fag 
  (
    ace_id_fag smallint,
    ace_tipo_fag varchar(15),
    ace_cant_fag smallint,
    desp_ace_id_fag smallint,
    desp_ace_tipo_fag varchar(15),
    desp_ace_cant_fag smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_aceite_fag from "public";

{ TABLE vlh_aeronave row size = 28 number of columns = 2 index size = 7 }

create table vlh_aeronave 
  (
    aer_id smallint not null ,
    aer_desc varchar(25) not null ,
    primary key (aer_id) 
  );

revoke all on vlh_aeronave from "public";

{ TABLE aud_vlh_aeronave row size = 76 number of columns = 7 index size = 0 }

create table aud_vlh_aeronave 
  (
    aer_id smallint,
    aer_desc varchar(25),
    desp_aer_id smallint,
    desp_aer_desc varchar(25),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_aeronave from "public";

{ TABLE vlh_apu row size = 62 number of columns = 5 index size = 7 }

create table vlh_apu 
  (
    apu_id smallint not null ,
    apu_tipo_aceite varchar(15),
    apu_tipo_conbustible varchar(15),
    apu_capacidad smallint,
    apu_serie varchar(25),
    primary key (apu_id) 
  );

revoke all on vlh_apu from "public";

{ TABLE aud_vlh_apu row size = 144 number of columns = 13 index size = 0 }

create table aud_vlh_apu 
  (
    apu_id smallint,
    apu_tipo_aceite varchar(15),
    apu_tipo_conbustible varchar(15),
    apu_capacidad smallint,
    apu_serie varchar(25),
    desp_apu_id smallint,
    desp_apu_tipo_aceite varchar(15),
    desp_apu_tipo_conbustible varchar(15),
    desp_apu_capacidad smallint,
    desp_apu_serie varchar(25),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_apu from "public";

{ TABLE vlh_baterias row size = 46 number of columns = 6 index size = 7 }

create table vlh_baterias 
  (
    bat_id_fag smallint not null ,
    bat_cant_fag smallint,
    bat_tipo_fag varchar(35),
    bat_amperaje_fag smallint,
    bat_voltaje_fag smallint,
    bat_cant_placas_fag smallint,
    primary key (bat_id_fag) 
  );

revoke all on vlh_baterias from "public";

{ TABLE aud_vlh_baterias row size = 112 number of columns = 15 index size = 0 }

create table aud_vlh_baterias 
  (
    bat_id_fag smallint,
    bat_cant_fag smallint,
    bat_tipo_fag varchar(35),
    bat_amperaje_fag smallint,
    bat_voltaje_fag smallint,
    bat_cant_placas_fag smallint,
    desp_bat_id_fag smallint,
    desp_bat_cant_fag smallint,
    desp_bat_tipo_fag varchar(35),
    desp_bat_amperaje_fag smallint,
    desp_bat_voltaje_fag smallint,
    desp_bat_cant_placas_fag smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_baterias from "public";

{ TABLE aud_vlh_t_cisterna row size = 80 number of columns = 9 index size = 0 }

create table aud_vlh_t_cisterna 
  (
    cis_id_t smallint,
    cis_desc varchar(25),
    cis_cap smallint,
    desp_cis_id_t smallint,
    desp_cis_desc varchar(25),
    desp_cis_cap smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_t_cisterna from "public";

{ TABLE aud_vlh_t_vehiculo row size = 130 number of columns = 9 index size = 0 }

create table aud_vlh_t_vehiculo 
  (
    tve_id smallint,
    tve_desc varchar(50),
    tve_situacion smallint,
    desp_tve_id smallint,
    desp_tve_desc varchar(50),
    desp_tve_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_t_vehiculo from "public";

{ TABLE vlh_tipo_carroceria row size = 97 number of columns = 5 index size = 7 }

create table vlh_tipo_carroceria 
  (
    tca_id_t smallint not null ,
    tca_marca varchar(50),
    tca_estado smallint,
    tca_material varchar(25),
    tca_lona varchar(15),
    primary key (tca_id_t) 
  );

revoke all on vlh_tipo_carroceria from "public";

{ TABLE aud_vlh_tipo_carroceria row size = 214 number of columns = 13 index size = 0 }

create table aud_vlh_tipo_carroceria 
  (
    tca_id_t smallint,
    tca_marca varchar(50),
    tca_estado smallint,
    tca_material varchar(25),
    tca_lona varchar(15),
    desp_tca_id_t smallint,
    desp_tca_marca varchar(50),
    desp_tca_estado smallint,
    desp_tca_material varchar(25),
    desp_tca_lona varchar(15),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_tipo_carroceria from "public";

{ TABLE vlh_tipo_combustible row size = 106 number of columns = 4 index size = 7 }

create table vlh_tipo_combustible 
  (
    com_id smallint not null ,
    com_desc varchar(50) not null ,
    com_aceite varchar(50),
    com_cant_mezcla_aceite smallint,
    primary key (com_id) 
  );

revoke all on vlh_tipo_combustible from "public";

{ TABLE aud_vlh_tipo_combustible row size = 232 number of columns = 11 index size = 0 }

create table aud_vlh_tipo_combustible 
  (
    com_id smallint,
    com_desc varchar(50),
    com_aceite varchar(50),
    com_cant_mezcla_aceite smallint,
    desp_com_id smallint,
    desp_com_desc varchar(50),
    desp_com_aceite varchar(50),
    desp_com_cant_mezcla_aceite smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_tipo_combustible from "public";

{ TABLE vlh_traccion_vehiculo row size = 63 number of columns = 2 index size = 7 }

create table vlh_traccion_vehiculo 
  (
    trc_id_vehiculo smallint not null ,
    trc_desc_vehiculo varchar(60) not null ,
    primary key (trc_id_vehiculo) 
  );

revoke all on vlh_traccion_vehiculo from "public";

{ TABLE aud_vlh_traccion_vehiculo row size = 146 number of columns = 7 index size = 0 }

create table aud_vlh_traccion_vehiculo 
  (
    trc_id_vehiculo smallint,
    trc_desc_vehiculo varchar(60),
    desp_trc_id_vehiculo smallint,
    desp_trc_desc_vehiculo varchar(60),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_traccion_vehiculo from "public";

{ TABLE vlh_transmision_vehiculo row size = 55 number of columns = 3 index size = 7 }

create table vlh_transmision_vehiculo 
  (
    tra_id_vehiculo smallint not null ,
    tra_desc_vehiculo varchar(50) not null ,
    tra_cant_velocidades smallint,
    primary key (tra_id_vehiculo) 
  );

revoke all on vlh_transmision_vehiculo from "public";

{ TABLE aud_vlh_transmision_vehiculo row size = 130 number of columns = 9 index size = 0 }

create table aud_vlh_transmision_vehiculo 
  (
    tra_id_vehiculo smallint,
    tra_desc_vehiculo varchar(50),
    tra_cant_velocidades smallint,
    desp_tra_id_vehiculo smallint,
    desp_tra_desc_vehiculo varchar(50),
    desp_tra_cant_velocidades smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_transmision_vehiculo from "public";

{ TABLE vlh_validaciones row size = 26 number of columns = 8 index size = 7 }

create table vlh_validaciones 
  (
    val_id smallint not null ,
    val_catalogo integer,
    val_revisor integer,
    val_comte integer,
    val_fecha date,
    val_situacion varchar(1),
    val_dependencia smallint,
    val_fecha_emision date,
    primary key (val_id) 
  );

revoke all on vlh_validaciones from "public";

{ TABLE aud_vlh_validaciones row size = 72 number of columns = 19 index size = 0 }

create table aud_vlh_validaciones 
  (
    val_id smallint,
    val_catalogo integer,
    val_revisor integer,
    val_comte integer,
    val_fecha date,
    val_situacion varchar(1),
    val_dependencia smallint,
    val_fecha_emision date,
    desp_val_id smallint,
    desp_val_catalogo integer,
    desp_val_revisor integer,
    desp_val_comte integer,
    desp_val_fecha date,
    desp_val_situacion varchar(1),
    desp_val_dependencia smallint,
    desp_val_fecha_emision date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_validaciones from "public";

{ TABLE vlh_permisos row size = 10 number of columns = 4 index size = 7 }

create table vlh_permisos 
  (
    vlh_per_id smallint not null ,
    vlh_per_cat integer not null ,
    vlh_per_dep smallint not null ,
    vlh_per_situacion char(2) not null ,
    primary key (vlh_per_id) 
  );

revoke all on vlh_permisos from "public";

{ TABLE aud_vlh_permisos row size = 40 number of columns = 11 index size = 0 }

create table aud_vlh_permisos 
  (
    vlh_per_id smallint,
    vlh_per_cat integer,
    vlh_per_dep smallint,
    vlh_per_situacion char(2),
    desp_vlh_per_id smallint,
    desp_vlh_per_cat integer,
    desp_vlh_per_dep smallint,
    desp_vlh_per_situacion char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_permisos from "public";

{ TABLE aud_vlh_hidraulico_fag row size = 130 number of columns = 9 index size = 0 }

create table aud_vlh_hidraulico_fag 
  (
    hid_id_fag smallint,
    hid_tipo_fag varchar(50),
    hid_cant_fag smallint,
    desp_hid_id_fag smallint,
    desp_hid_tipo_fag varchar(50),
    desp_hid_cant_fag smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_hidraulico_fag from "public";

{ TABLE aud_vlh_marcas row size = 126 number of columns = 7 index size = 0 }

create table aud_vlh_marcas 
  (
    mar_id smallint,
    mar_desc varchar(50),
    desp_mar_id smallint,
    desp_mar_desc varchar(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_marcas from "public";

{ TABLE aud_vlh_linea row size = 130 number of columns = 9 index size = 0 }

create table aud_vlh_linea 
  (
    lin_id smallint,
    lin_desc varchar(50),
    lin_marca smallint,
    desp_lin_id smallint,
    desp_lin_desc varchar(50),
    desp_lin_marca smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_linea from "public";

{ TABLE aud_vlh_llantas row size = 180 number of columns = 27 index size = 0 }

create table aud_vlh_llantas 
  (
    lla_id smallint,
    lla_cantidad_delanteras smallint,
    lla_cantidad_traseras smallint,
    lla_rin_delanteras decimal(10,2),
    lla_rin_traseras decimal(10,2),
    lla_ancho_delanteras decimal(10,2),
    lla_ancho_traseras decimal(10,2),
    lla_altura_delanteras decimal(10,2),
    lla_altura_traseras decimal(10,2),
    lla_psi_delanteras decimal(10,2),
    lla_psi_traseras decimal(10,2),
    lla_tipo varchar(25),
    desp_lla_id smallint,
    desp_lla_cantidad_delanteras smallint,
    desp_lla_cantidad_traseras smallint,
    desp_lla_rin_delanteras decimal(10,2),
    desp_lla_rin_traseras decimal(10,2),
    desp_lla_ancho_delanteras decimal(10,2),
    desp_lla_ancho_traseras decimal(10,2),
    desp_lla_altura_delanteras decimal(10,2),
    desp_lla_altura_traseras decimal(10,2),
    desp_lla_psi_delanteras decimal(10,2),
    desp_lla_psi_traseras decimal(10,2),
    desp_lla_tipo varchar(25),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_llantas from "public";

{ TABLE vlh_motor_fag row size = 208 number of columns = 6 index size = 7 }

create table vlh_motor_fag 
  (
    mot_id_fag smallint not null ,
    mot_cant_fag smallint,
    mot_tipo_fag varchar(50),
    mot_marca_fag varchar(50),
    mot_modelo_fag varchar(50),
    mot_serie_fag varchar(50),
    primary key (mot_id_fag) 
  );

revoke all on vlh_motor_fag from "public";

{ TABLE aud_vlh_motor_fag row size = 436 number of columns = 15 index size = 0 }

create table aud_vlh_motor_fag 
  (
    mot_id_fag smallint,
    mot_cant_fag smallint,
    mot_tipo_fag varchar(50),
    mot_marca_fag varchar(50),
    mot_modelo_fag varchar(50),
    mot_serie_fag varchar(50),
    desp_mot_id_fag smallint,
    desp_mot_cant_fag smallint,
    desp_mot_tipo_fag varchar(50),
    desp_mot_marca_fag varchar(50),
    desp_mot_modelo_fag varchar(50),
    desp_mot_serie_fag varchar(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_motor_fag from "public";

{ TABLE vlh_neumaticos_fag row size = 277 number of columns = 8 index size = 7 }

create table vlh_neumaticos_fag 
  (
    neu_id_neumaticos_fag smallint not null ,
    neu_cantidad_principal smallint,
    neu_especificaciones_principal varchar(80),
    neu_cantidad_nariz smallint,
    neu_especificaciones_nariz varchar(80),
    neu_cantidad_cola smallint,
    neu_especificaciones_cola varchar(80),
    neu_tipo_gas varchar(25),
    primary key (neu_id_neumaticos_fag) 
  );

revoke all on vlh_neumaticos_fag from "public";

{ TABLE aud_vlh_neumaticos_fag row size = 574 number of columns = 19 index size = 0 }

create table aud_vlh_neumaticos_fag 
  (
    neu_id_neumaticos_fag smallint,
    neu_cantidad_principal smallint,
    neu_especificaciones_principal varchar(80),
    neu_cantidad_nariz smallint,
    neu_especificaciones_nariz varchar(80),
    neu_cantidad_cola smallint,
    neu_especificaciones_cola varchar(80),
    neu_tipo_gas varchar(25),
    desp_neu_id_neumaticos_fag smallint,
    desp_neu_cantidad_principal smallint,
    desp_neu_especificaciones_principal varchar(80),
    desp_neu_cantidad_nariz smallint,
    desp_neu_especificaciones_nariz varchar(80),
    desp_neu_cantidad_cola smallint,
    desp_neu_especificaciones_cola varchar(80),
    desp_neu_tipo_gas varchar(25),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_neumaticos_fag from "public";

{ TABLE vlh_origen_vehiculo row size = 53 number of columns = 2 index size = 7 }

create table vlh_origen_vehiculo 
  (
    vlh_id_vehiculo smallint not null ,
    vlh_desc_vehiculo varchar(50) not null ,
    primary key (vlh_id_vehiculo) 
  );

revoke all on vlh_origen_vehiculo from "public";

{ TABLE aud_vlh_origen_vehiculo row size = 126 number of columns = 7 index size = 0 }

create table aud_vlh_origen_vehiculo 
  (
    vlh_id_vehiculo smallint,
    vlh_desc_vehiculo varchar(50),
    desp_vlh_id_vehiculo smallint,
    desp_vlh_desc_vehiculo varchar(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_origen_vehiculo from "public";

{ TABLE vlh_estado_vehiculo row size = 33 number of columns = 2 index size = 7 }

create table vlh_estado_vehiculo 
  (
    est_id_estado smallint not null ,
    est_descripcion varchar(30) not null ,
    primary key (est_id_estado) 
  );

revoke all on vlh_estado_vehiculo from "public";

{ TABLE aud_vlh_estado_vehiculo row size = 86 number of columns = 7 index size = 0 }

create table aud_vlh_estado_vehiculo 
  (
    est_id_estado smallint,
    est_descripcion varchar(30),
    desp_est_id_estado smallint,
    desp_est_descripcion varchar(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_estado_vehiculo from "public";

{ TABLE vlh_combustible_fag row size = 31 number of columns = 4 index size = 7 }

create table vlh_combustible_fag 
  (
    comb_id_fag smallint not null ,
    comb_tipo_fag varchar(20),
    comb_cap_tanques integer,
    comb_cap_tanq_externos integer,
    primary key (comb_id_fag) 
  );

revoke all on vlh_combustible_fag from "public";

{ TABLE aud_vlh_combustible_fag row size = 82 number of columns = 11 index size = 0 }

create table aud_vlh_combustible_fag 
  (
    comb_id_fag smallint,
    comb_tipo_fag varchar(20),
    comb_cap_tanques integer,
    comb_cap_tanq_externos integer,
    desp_comb_id_fag smallint,
    desp_comb_tipo_fag varchar(20),
    desp_comb_cap_tanques integer,
    desp_comb_cap_tanq_externos integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_combustible_fag from "public";

{ TABLE vlh_cons_comb_vehi row size = 12 number of columns = 5 index size = 7 }

create table vlh_cons_comb_vehi 
  (
    con_id_comb smallint not null ,
    con_cap_galones smallint not null ,
    con_hrs smallint,
    con_gls smallint,
    con_odometro integer,
    primary key (con_id_comb) 
  );

revoke all on vlh_cons_comb_vehi from "public";

{ TABLE aud_vlh_cons_comb_vehi row size = 44 number of columns = 13 index size = 0 }

create table aud_vlh_cons_comb_vehi 
  (
    con_id_comb smallint,
    con_cap_galones smallint,
    con_hrs smallint,
    con_gls smallint,
    con_odometro integer,
    desp_con_id_comb smallint,
    desp_con_cap_galones smallint,
    desp_con_hrs smallint,
    desp_con_gls smallint,
    desp_con_odometro integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_cons_comb_vehi from "public";

{ TABLE vlh_cons_lubri_vehi row size = 152 number of columns = 8 index size = 7 }

create table vlh_cons_lubri_vehi 
  (
    con_id_lub smallint not null ,
    con_tipo_aceite_motor varchar(35),
    con_cap_aceite_motor smallint,
    con_tipo_aceite_hidraulico varchar(35),
    con_cap_aceite_hidraulico smallint,
    con_tipo_aceite_transmision varchar(35),
    con_cap_aceite_transmision smallint,
    con_aceite_motor varchar(35),
    primary key (con_id_lub) 
  );

revoke all on vlh_cons_lubri_vehi from "public";

{ TABLE aud_vlh_cons_lubri_vehi row size = 324 number of columns = 19 index size = 0 }

create table aud_vlh_cons_lubri_vehi 
  (
    con_id_lub smallint,
    con_tipo_aceite_motor varchar(35),
    con_cap_aceite_motor smallint,
    con_tipo_aceite_hidraulico varchar(35),
    con_cap_aceite_hidraulico smallint,
    con_tipo_aceite_transmision varchar(35),
    con_cap_aceite_transmision smallint,
    con_aceite_motor varchar(35),
    desp_con_id_lub smallint,
    desp_con_tipo_aceite_motor varchar(35),
    desp_con_cap_aceite_motor smallint,
    desp_con_tipo_aceite_hidraulico varchar(35),
    desp_con_cap_aceite_hidraulico smallint,
    desp_con_tipo_aceite_transmision varchar(35),
    desp_con_cap_aceite_transmision smallint,
    desp_con_aceite_motor varchar(35),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_cons_lubri_vehi from "public";

{ TABLE vlh_destino row size = 42 number of columns = 2 index size = 7 }

create table vlh_destino 
  (
    des_id smallint not null ,
    des_desc char(40),
    primary key (des_id) 
  );

revoke all on vlh_destino from "public";

{ TABLE aud_vlh_destino row size = 104 number of columns = 7 index size = 0 }

create table aud_vlh_destino 
  (
    des_id smallint,
    des_desc char(40),
    desp_des_id smallint,
    desp_des_desc char(40),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_destino from "public";

{ TABLE vlh_carretones row size = 309 number of columns = 12 index size = 42 }

create table vlh_carretones 
  (
    carr_id smallint not null ,
    carr_catalogo integer,
    carr_adquisicion smallint,
    carr_observacion varchar(250,250),
    carr_ubicacion smallint not null ,
    carr_dependencia smallint not null ,
    carr_estado smallint not null ,
    carr_llantas smallint,
    carr_cap_toneladas smallint,
    carr_tipo_cisterna varchar(35),
    carr_cap_cisterna smallint,
    carr_situacion smallint not null ,
    primary key (carr_id) 
  );

revoke all on vlh_carretones from "public";

{ TABLE vlh_equipo_terrestre_fag row size = 225 number of columns = 21 index size = 63 }

create table vlh_equipo_terrestre_fag 
  (
    equ_id smallint not null ,
    equ_catalogo integer,
    equ_matricula integer,
    equ_tipo smallint,
    equ_ubicacion smallint,
    equ_dependencia smallint,
    equ_adquisicion smallint,
    equ_modelo varchar(50),
    equ_serie varchar(50),
    equ_fabricacion smallint,
    equ_proposito varchar(20),
    equ_capacidad smallint,
    equ_motor smallint,
    equ_neumatico smallint,
    equ_tipo_comb varchar(25),
    equ_cap_comb smallint,
    equ_aceite varchar(30),
    equ_cant_aceite smallint,
    equ_baterias smallint,
    equ_estado varchar(10) not null ,
    equ_situacion smallint,
    primary key (equ_id) 
  );

revoke all on vlh_equipo_terrestre_fag from "public";

{ TABLE vlh_embarcacion row size = 845 number of columns = 34 index size = 42 }

create table vlh_embarcacion 
  (
    emb_id_embarcacion smallint not null ,
    emb_catalogo integer,
    emb_matricula varchar(50),
    emb_nombre varchar(50),
    emb_indicativo varchar(50),
    emb_linea varchar(50),
    emb_modelo smallint,
    emb_color varchar(50),
    emb_origen smallint,
    emb_ubicacion smallint,
    emb_observaciones varchar(250,250),
    emb_fabricacion smallint,
    emb_constructora varchar(50),
    emb_dependencia smallint,
    emb_tipo varchar(50),
    emb_estado smallint,
    emb_desplazamiento smallint,
    emb_repotenciado varchar(50),
    emb_fecha_repotenciado date,
    emb_vel_emergencia smallint,
    emb_vel_crucero smallint,
    emb_tripulacion smallint,
    emb_autonomia smallint,
    emb_cap_agua smallint,
    emb_eslora smallint,
    emb_manga smallint,
    emb_calado smallint,
    emb_puntal smallint,
    emb_cap_combustible smallint,
    emb_tipo_combustible varchar(35),
    emb_cant_motores smallint,
    emb_marca_motor varchar(50) not null ,
    emb_modelo_motor varchar(50),
    emb_situacion smallint,
    primary key (emb_id_embarcacion) 
  );

revoke all on vlh_embarcacion from "public";

{ TABLE vlh_remolques row size = 135 number of columns = 20 index size = 49 }

create table vlh_remolques 
  (
    rem_id smallint not null ,
    rem_serie varchar(50),
    rem_catalogo integer,
    rem_ubicacion smallint,
    rem_origen smallint,
    rem_modelo smallint,
    rem_asig smallint,
    rem_dep smallint,
    rem_estado smallint,
    rem_cap smallint,
    rem_ancho decimal(6,4),
    rem_largo decimal(6,4),
    rem_sistema varchar(5),
    rem_tipo_sist varchar(20),
    rem_estado_sist varchar(10),
    rem_cap_sist smallint,
    rem_sist_electrico varchar(5),
    rem_estado_sist_electrico varchar(5),
    rem_neumaticos smallint,
    rem_situacion smallint,
    primary key (rem_id) 
  );

revoke all on vlh_remolques from "public";

{ TABLE aud_vlh_carretones row size = 638 number of columns = 27 index size = 0 }

create table aud_vlh_carretones 
  (
    carr_id smallint,
    carr_catalogo integer,
    carr_adquisicion smallint,
    carr_observacion varchar(250,250),
    carr_ubicacion smallint,
    carr_dependencia smallint,
    carr_estado smallint,
    carr_llantas smallint,
    carr_cap_toneladas smallint,
    carr_tipo_cisterna varchar(35),
    carr_cap_cisterna smallint,
    carr_situacion smallint,
    desp_carr_id smallint,
    desp_carr_catalogo integer,
    desp_carr_adquisicion smallint,
    desp_carr_observacion varchar(250,250),
    desp_carr_ubicacion smallint,
    desp_carr_dependencia smallint,
    desp_carr_estado smallint,
    desp_carr_llantas smallint,
    desp_carr_cap_toneladas smallint,
    desp_carr_tipo_cisterna varchar(35),
    desp_carr_cap_cisterna smallint,
    desp_carr_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_carretones from "public";

{ TABLE aud_vlh_equipo_terrestre_fag row size = 470 number of columns = 45 index size = 0 }

create table aud_vlh_equipo_terrestre_fag 
  (
    equ_id smallint,
    equ_catalogo integer,
    equ_matricula integer,
    equ_tipo smallint,
    equ_ubicacion smallint,
    equ_dependencia smallint,
    equ_adquisicion smallint,
    equ_modelo varchar(50),
    equ_serie varchar(50),
    equ_fabricacion smallint,
    equ_proposito varchar(20),
    equ_capacidad smallint,
    equ_motor smallint,
    equ_neumatico smallint,
    equ_tipo_comb varchar(25),
    equ_cap_comb smallint,
    equ_aceite varchar(30),
    equ_cant_aceite smallint,
    equ_baterias smallint,
    equ_estado varchar(10),
    equ_situacion smallint,
    desp_equ_id smallint,
    desp_equ_catalogo integer,
    desp_equ_matricula integer,
    desp_equ_tipo smallint,
    desp_equ_ubicacion smallint,
    desp_equ_dependencia smallint,
    desp_equ_adquisicion smallint,
    desp_equ_modelo varchar(50),
    desp_equ_serie varchar(50),
    desp_equ_fabricacion smallint,
    desp_equ_proposito varchar(20),
    desp_equ_capacidad smallint,
    desp_equ_motor smallint,
    desp_equ_neumatico smallint,
    desp_equ_tipo_comb varchar(25),
    desp_equ_cap_comb smallint,
    desp_equ_aceite varchar(30),
    desp_equ_cant_aceite smallint,
    desp_equ_baterias smallint,
    desp_equ_estado varchar(10),
    desp_equ_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_equipo_terrestre_fag from "public";

{ TABLE aud_vlh_embarcacion row size = 1710 number of columns = 71 index size = 0 }

create table aud_vlh_embarcacion 
  (
    emb_id_embarcacion smallint,
    emb_catalogo integer,
    emb_matricula varchar(50),
    emb_nombre varchar(50),
    emb_indicativo varchar(50),
    emb_linea varchar(50),
    emb_modelo smallint,
    emb_color varchar(50),
    emb_origen smallint,
    emb_ubicacion smallint,
    emb_observaciones varchar(250,250),
    emb_fabricacion smallint,
    emb_constructora varchar(50),
    emb_dependencia smallint,
    emb_tipo varchar(50),
    emb_estado smallint,
    emb_desplazamiento smallint,
    emb_repotenciado varchar(50),
    emb_fecha_repotenciado date,
    emb_vel_emergencia smallint,
    emb_vel_crucero smallint,
    emb_tripulacion smallint,
    emb_autonomia smallint,
    emb_cap_agua smallint,
    emb_eslora smallint,
    emb_manga smallint,
    emb_calado smallint,
    emb_puntal smallint,
    emb_cap_combustible smallint,
    emb_tipo_combustible varchar(35),
    emb_cant_motores smallint,
    emb_marca_motor varchar(50),
    emb_modelo_motor varchar(50),
    emb_situacion smallint,
    desp_emb_id_embarcacion smallint,
    desp_emb_catalogo integer,
    desp_emb_matricula varchar(50),
    desp_emb_nombre varchar(50),
    desp_emb_indicativo varchar(50),
    desp_emb_linea varchar(50),
    desp_emb_modelo smallint,
    desp_emb_color varchar(50),
    desp_emb_origen smallint,
    desp_emb_ubicacion smallint,
    desp_emb_observaciones varchar(250,250),
    desp_emb_fabricacion smallint,
    desp_emb_constructora varchar(50),
    desp_emb_dependencia smallint,
    desp_emb_tipo varchar(50),
    desp_emb_estado smallint,
    desp_emb_desplazamiento smallint,
    desp_emb_repotenciado varchar(50),
    desp_emb_fecha_repotenciado date,
    desp_emb_vel_emergencia smallint,
    desp_emb_vel_crucero smallint,
    desp_emb_tripulacion smallint,
    desp_emb_autonomia smallint,
    desp_emb_cap_agua smallint,
    desp_emb_eslora smallint,
    desp_emb_manga smallint,
    desp_emb_calado smallint,
    desp_emb_puntal smallint,
    desp_emb_cap_combustible smallint,
    desp_emb_tipo_combustible varchar(35),
    desp_emb_cant_motores smallint,
    desp_emb_marca_motor varchar(50),
    desp_emb_modelo_motor varchar(50),
    desp_emb_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_embarcacion from "public";

{ TABLE aud_vlh_remolques row size = 290 number of columns = 43 index size = 0 }

create table aud_vlh_remolques 
  (
    rem_id smallint,
    rem_serie varchar(50),
    rem_catalogo integer,
    rem_ubicacion smallint,
    rem_origen smallint,
    rem_modelo smallint,
    rem_asig smallint,
    rem_dep smallint,
    rem_estado smallint,
    rem_cap smallint,
    rem_ancho decimal(6,4),
    rem_largo decimal(6,4),
    rem_sistema varchar(5),
    rem_tipo_sist varchar(20),
    rem_estado_sist varchar(10),
    rem_cap_sist smallint,
    rem_sist_electrico varchar(5),
    rem_estado_sist_electrico varchar(5),
    rem_neumaticos smallint,
    rem_situacion smallint,
    desp_rem_id smallint,
    desp_rem_serie varchar(50),
    desp_rem_catalogo integer,
    desp_rem_ubicacion smallint,
    desp_rem_origen smallint,
    desp_rem_modelo smallint,
    desp_rem_asig smallint,
    desp_rem_dep smallint,
    desp_rem_estado smallint,
    desp_rem_cap smallint,
    desp_rem_ancho decimal(6,4),
    desp_rem_largo decimal(6,4),
    desp_rem_sistema varchar(5),
    desp_rem_tipo_sist varchar(20),
    desp_rem_estado_sist varchar(10),
    desp_rem_cap_sist smallint,
    desp_rem_sist_electrico varchar(5),
    desp_rem_estado_sist_electrico varchar(5),
    desp_rem_neumaticos smallint,
    desp_rem_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_remolques from "public";

{ TABLE vlh_caract_vehiculos row size = 702 number of columns = 37 index size = 116 }

create table vlh_caract_vehiculos 
  (
    car_id_vehiculo smallint not null ,
    car_serie_vehiculo varchar(30),
    car_catalogo_vehiculo integer not null ,
    car_placas_vehiculo varchar(30),
    car_indicativo_vehiculo varchar(30),
    car_siglas_vehiculo varchar(30),
    car_t_circulacion varchar(30),
    car_t_vehiculo smallint,
    car_estado_vehiculo smallint,
    car_marca_vehiculo smallint not null ,
    car_linea_vehiculo smallint,
    car_modelo_vehiculo smallint not null ,
    car_motor_vehiculo varchar(40),
    car_chasis_vehiculo varchar(40),
    car_color_vehiculo varchar(50) not null ,
    car_cap_toneladas_vehiculo smallint,
    car_cap_pasajeros_vehiculo smallint,
    car_tipo_carroceria smallint,
    car_tipo_combustible smallint,
    car_llantas_vehiculo smallint,
    car_gancho_pinzon_vehiculo varchar(10),
    car_cap_gancho smallint,
    car_tipo_cisterna smallint,
    car_origen_vehiculo smallint,
    car_ubicacion_vehiculo smallint not null ,
    car_obs_vehiculo varchar(250,250),
    car_comb_consumo smallint,
    car_lubri_consumo smallint,
    car_transmision_vehiculo smallint,
    car_traccion_vehiculo smallint,
    car_aire_acond varchar(10),
    car_impuesto_vehiculo varchar(10),
    car_poliza varchar(50),
    car_bateria smallint,
    car_dependencia smallint,
    car_destino varchar(30),
    car_vehi_situacion smallint,
    primary key (car_id_vehiculo,car_catalogo_vehiculo) 
  );

revoke all on vlh_caract_vehiculos from "public";

{ TABLE aud_vlh_caract_vehiculos row size = 1424 number of columns = 77 index size = 0 }

create table aud_vlh_caract_vehiculos 
  (
    car_id_vehiculo smallint,
    car_serie_vehiculo varchar(30),
    car_catalogo_vehiculo integer,
    car_placas_vehiculo varchar(30),
    car_indicativo_vehiculo varchar(30),
    car_siglas_vehiculo varchar(30),
    car_t_circulacion varchar(30),
    car_t_vehiculo smallint,
    car_estado_vehiculo smallint,
    car_marca_vehiculo smallint,
    car_linea_vehiculo smallint,
    car_modelo_vehiculo smallint,
    car_motor_vehiculo varchar(40),
    car_chasis_vehiculo varchar(40),
    car_color_vehiculo varchar(50),
    car_cap_toneladas_vehiculo smallint,
    car_cap_pasajeros_vehiculo smallint,
    car_tipo_carroceria smallint,
    car_tipo_combustible smallint,
    car_llantas_vehiculo smallint,
    car_gancho_pinzon_vehiculo varchar(10),
    car_cap_gancho smallint,
    car_tipo_cisterna smallint,
    car_origen_vehiculo smallint,
    car_ubicacion_vehiculo smallint,
    car_obs_vehiculo varchar(250,250),
    car_comb_consumo smallint,
    car_lubri_consumo smallint,
    car_transmision_vehiculo smallint,
    car_traccion_vehiculo smallint,
    car_aire_acond varchar(10),
    car_impuesto_vehiculo varchar(10),
    car_poliza varchar(50),
    car_bateria smallint,
    car_dependencia smallint,
    car_destino varchar(30),
    car_vehi_situacion smallint,
    desp_car_id_vehiculo smallint,
    desp_car_serie_vehiculo varchar(30),
    desp_car_catalogo_vehiculo integer,
    desp_car_placas_vehiculo varchar(30),
    desp_car_indicativo_vehiculo varchar(30),
    desp_car_siglas_vehiculo varchar(30),
    desp_car_t_circulacion varchar(30),
    desp_car_t_vehiculo smallint,
    desp_car_estado_vehiculo smallint,
    desp_car_marca_vehiculo smallint,
    desp_car_linea_vehiculo smallint,
    desp_car_modelo_vehiculo smallint,
    desp_car_motor_vehiculo varchar(40),
    desp_car_chasis_vehiculo varchar(40),
    desp_car_color_vehiculo varchar(50),
    desp_car_cap_toneladas_vehiculo smallint,
    desp_car_cap_pasajeros_vehiculo smallint,
    desp_car_tipo_carroceria smallint,
    desp_car_tipo_combustible smallint,
    desp_car_llantas_vehiculo smallint,
    desp_car_gancho_pinzon_vehiculo varchar(10),
    desp_car_cap_gancho smallint,
    desp_car_tipo_cisterna smallint,
    desp_car_origen_vehiculo smallint,
    desp_car_ubicacion_vehiculo smallint,
    desp_car_obs_vehiculo varchar(250,250),
    desp_car_comb_consumo smallint,
    desp_car_lubri_consumo smallint,
    desp_car_transmision_vehiculo smallint,
    desp_car_traccion_vehiculo smallint,
    desp_car_aire_acond varchar(10),
    desp_car_impuesto_vehiculo varchar(10),
    desp_car_poliza varchar(50),
    desp_car_bateria smallint,
    desp_car_dependencia smallint,
    desp_car_destino varchar(30),
    desp_car_vehi_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_caract_vehiculos from "public";

{ TABLE vlh_fag_caracteristicas row size = 612 number of columns = 38 index size = 98 }

create table vlh_fag_caracteristicas 
  (
    fag_id_carct smallint not null ,
    fag_catalogo varchar(30),
    fag_tipo varchar(20),
    fag_serie varchar(30),
    fag_ubicacion_exacta smallint,
    fag_dependencia smallint,
    fag_forma_adquisicion smallint,
    fag_aeronave smallint,
    fag_fabricacion smallint,
    fag_proposito varchar(35),
    fag_tripulacion smallint,
    fag_pasajero smallint,
    fag_peso_despliegue smallint,
    fag_estado smallint,
    fag_color varchar(50),
    fag_motor smallint,
    fag_combustible smallint,
    fag_aceite smallint,
    fag_hidraulico smallint,
    fag_baterias smallint,
    fag_neumaticos smallint,
    fag_apu smallint,
    fag_hrs_vuelo smallint,
    fag_hrs_vuelo_disp smallint,
    fag_consumo_combustible smallint,
    fag_fecha_ult_fase date,
    fag_tipo_fase varchar(50),
    fag_autonomia smallint,
    fag_obs varchar(250,250),
    fag_aceite_transmision_heli varchar(20),
    fag_cant_ac_transmision_heli smallint,
    fag_aceite_caja90_heli varchar(20),
    fag_cant_aceite_caja90_heli smallint,
    fag_aceite_caja42_heli varchar(20),
    fag_cant_aceite_caja42_heli smallint,
    fag_aceite_rotor_gearbox_heli varchar(20),
    fag_cant_aceite_rotor_gearbox_heli smallint,
    fag_situacion smallint,
    primary key (fag_id_carct) 
  );

revoke all on vlh_fag_caracteristicas from "public";

{ TABLE aud_vlh_fag_caracteristicas row size = 1244 number of columns = 79 index size = 0 }

create table aud_vlh_fag_caracteristicas 
  (
    fag_id_carct smallint,
    fag_catalogo varchar(30),
    fag_tipo varchar(20),
    fag_serie varchar(30),
    fag_ubicacion_exacta smallint,
    fag_dependencia smallint,
    fag_forma_adquisicion smallint,
    fag_aeronave smallint,
    fag_fabricacion smallint,
    fag_proposito varchar(35),
    fag_tripulacion smallint,
    fag_pasajero smallint,
    fag_peso_despliegue smallint,
    fag_estado smallint,
    fag_color varchar(50),
    fag_motor smallint,
    fag_combustible smallint,
    fag_aceite smallint,
    fag_hidraulico smallint,
    fag_baterias smallint,
    fag_neumaticos smallint,
    fag_apu smallint,
    fag_hrs_vuelo smallint,
    fag_hrs_vuelo_disp smallint,
    fag_consumo_combustible smallint,
    fag_fecha_ult_fase date,
    fag_tipo_fase varchar(50),
    fag_autonomia smallint,
    fag_obs varchar(250,250),
    fag_aceite_transmision_heli varchar(20),
    fag_cant_ac_transmision_heli smallint,
    fag_aceite_caja90_heli varchar(20),
    fag_cant_aceite_caja90_heli smallint,
    fag_aceite_caja42_heli varchar(20),
    fag_cant_aceite_caja42_heli smallint,
    fag_aceite_rotor_gearbox_heli varchar(20),
    fag_cant_aceite_rotor_gearbox_heli smallint,
    fag_situacion smallint,
    desp_fag_id_carct smallint,
    desp_fag_catalogo varchar(30),
    desp_fag_tipo varchar(20),
    desp_fag_serie varchar(30),
    desp_fag_ubicacion_exacta smallint,
    desp_fag_dependencia smallint,
    desp_fag_forma_adquisicion smallint,
    desp_fag_aeronave smallint,
    desp_fag_fabricacion smallint,
    desp_fag_proposito varchar(35),
    desp_fag_tripulacion smallint,
    desp_fag_pasajero smallint,
    desp_fag_peso_despliegue smallint,
    desp_fag_estado smallint,
    desp_fag_color varchar(50),
    desp_fag_motor smallint,
    desp_fag_combustible smallint,
    desp_fag_aceite smallint,
    desp_fag_hidraulico smallint,
    desp_fag_baterias smallint,
    desp_fag_neumaticos smallint,
    desp_fag_apu smallint,
    desp_fag_hrs_vuelo smallint,
    desp_fag_hrs_vuelo_disp smallint,
    desp_fag_consumo_combustible smallint,
    desp_fag_fecha_ult_fase date,
    desp_fag_tipo_fase varchar(50),
    desp_fag_autonomia smallint,
    desp_fag_obs varchar(250,250),
    desp_fag_aceite_transmision_heli varchar(20),
    desp_fag_cant_ac_transmision_heli smallint,
    desp_fag_aceite_caja90_heli varchar(20),
    desp_fag_cant_aceite_caja90_heli smallint,
    desp_fag_aceite_caja42_heli varchar(20),
    desp_fag_cant_aceite_caja42_heli smallint,
    desp_fag_aceite_rotor_gearbox_heli varchar(20),
    desp_fag_cant_aceite_rotor_gearbox_heli smallint,
    desp_fag_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_fag_caracteristicas from "public";

{ TABLE gpl_t_comision row size = 109 number of columns = 3 index size = 9 }

create table gpl_t_comision 
  (
    com_id integer not null ,
    com_descripcion varchar(100,50) not null ,
    com_situacion integer not null ,
    primary key (com_id) 
  );

revoke all on gpl_t_comision from "public";

{ TABLE aud_gpl_t_comision row size = 238 number of columns = 9 index size = 0 }

create table aud_gpl_t_comision 
  (
    com_id integer,
    com_descripcion varchar(100,50),
    com_situacion integer,
    desp_com_id integer,
    desp_com_descripcion varchar(100,50),
    desp_com_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_gpl_t_comision from "public";

{ TABLE aud_gpl_presidencial row size = 654 number of columns = 33 index size = 0 }

create table aud_gpl_presidencial 
  (
    pre_id integer,
    pre_grado_of smallint,
    pre_arma_of smallint,
    pre_catalogo integer,
    pre_dependencia smallint,
    pre_desc_com varchar(255,255),
    pre_t_comision integer,
    pre_quien integer,
    pre_hrs decimal(7,2),
    pre_tropa integer,
    pre_esp integer,
    pre_hora_salida datetime year to second,
    pre_hora_ent datetime year to second,
    pre_duracion decimal(10,2),
    pre_situacion integer,
    desp_pre_id integer,
    desp_pre_grado_of smallint,
    desp_pre_arma_of smallint,
    desp_pre_catalogo integer,
    desp_pre_dependencia smallint,
    desp_pre_desc_com varchar(255,255),
    desp_pre_t_comision integer,
    desp_pre_quien integer,
    desp_pre_hrs decimal(7,2),
    desp_pre_tropa integer,
    desp_pre_esp integer,
    desp_pre_hora_salida datetime year to second,
    desp_pre_hora_ent datetime year to second,
    desp_pre_duracion decimal(10,2),
    desp_pre_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_gpl_presidencial from "public";

{ TABLE gpl_ubicacion row size = 36 number of columns = 6 index size = 9 }

create table gpl_ubicacion 
  (
    uba_codigo serial not null ,
    uba_comision integer not null ,
    uba_vertice integer not null ,
    uba_latitud decimal(16) not null ,
    uba_longitud decimal(16) not null ,
    uba_situacion integer not null ,
    primary key (uba_codigo) 
  );

revoke all on gpl_ubicacion from "public";

{ TABLE aud_gpl_ubicacion row size = 92 number of columns = 15 index size = 0 }

create table aud_gpl_ubicacion 
  (
    uba_codigo integer,
    uba_comision integer,
    uba_vertice integer,
    uba_latitud decimal(16),
    uba_longitud decimal(16),
    uba_situacion integer,
    desp_uba_codigo integer,
    desp_uba_comision integer,
    desp_uba_vertice integer,
    desp_uba_latitud decimal(16),
    desp_uba_longitud decimal(16),
    desp_uba_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_gpl_ubicacion from "public";

{ TABLE gpl_lugar row size = 146 number of columns = 6 index size = 27 }

create table gpl_lugar 
  (
    lug_id integer not null ,
    lug_desc_lg varchar(75) not null ,
    lug_desc_ct varchar(55) not null ,
    lug_depto char(4) not null ,
    lug_municipio char(4) not null ,
    lug_situacion smallint not null ,
    primary key (lug_id) 
  );

revoke all on gpl_lugar from "public";

{ TABLE aud_gpl_lugar row size = 312 number of columns = 15 index size = 0 }

create table aud_gpl_lugar 
  (
    lug_id integer,
    lug_desc_lg varchar(75),
    lug_desc_ct varchar(55),
    lug_depto char(4),
    lug_municipio char(4),
    lug_situacion smallint,
    desp_lug_id integer,
    desp_lug_desc_lg varchar(75),
    desp_lug_desc_ct varchar(55),
    desp_lug_depto char(4),
    desp_lug_municipio char(4),
    desp_lug_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_gpl_lugar from "public";

{ TABLE aud_gpl_asig_lugar row size = 52 number of columns = 11 index size = 0 }

create table aud_gpl_asig_lugar 
  (
    alu_id integer,
    alu_comision integer,
    alu_lugar integer,
    alu_situacion integer,
    desp_alu_id integer,
    desp_alu_comision integer,
    desp_alu_lugar integer,
    desp_alu_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_gpl_asig_lugar from "public";

{ TABLE gpl_transporte row size = 43 number of columns = 8 index size = 16 }

create table gpl_transporte 
  (
    tra_id serial not null ,
    tra_comision integer not null ,
    tra_cat_esp integer not null ,
    tra_uso_veh char(2),
    tra_cat_veh char(15),
    tra_placas char(8),
    tra_tipo_veh smallint not null ,
    tra_situacion integer not null ,
    primary key (tra_id) 
  );

revoke all on gpl_transporte from "public";

{ TABLE cont_curriculo row size = 75 number of columns = 9 index size = 39 }

create table cont_curriculo 
  (
    curr_codigo integer not null ,
    curr_catalogo integer not null ,
    curr_grado smallint not null ,
    curr_arma smallint not null ,
    curr_nombre char(45) not null ,
    curr_dependencia smallint not null ,
    curr_horaactual datetime year to second not null ,
    curr_fecha date not null ,
    curr_generado integer not null ,
    primary key (curr_codigo) 
  );

revoke all on cont_curriculo from "public";

{ TABLE aud_cont_curriculo row size = 170 number of columns = 21 index size = 0 }

create table aud_cont_curriculo 
  (
    curr_codigo integer,
    curr_catalogo integer,
    curr_grado smallint,
    curr_arma smallint,
    curr_nombre char(45),
    curr_dependencia smallint,
    curr_horaactual datetime year to second,
    curr_fecha date,
    curr_generado integer,
    desp_curr_codigo integer,
    desp_curr_catalogo integer,
    desp_curr_grado smallint,
    desp_curr_arma smallint,
    desp_curr_nombre char(45),
    desp_curr_dependencia smallint,
    desp_curr_horaactual datetime year to second,
    desp_curr_fecha date,
    desp_curr_generado integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cont_curriculo from "public";

{ TABLE aud_gpl_conductores row size = 160 number of columns = 17 index size = 0 }

create table aud_gpl_conductores 
  (
    con_catalogo integer,
    con_nom1 char(15),
    con_nom2 char(15),
    con_ape1 char(15),
    con_ape2 char(15),
    con_dep smallint,
    con_sitacion integer,
    desp_con_catalogo integer,
    desp_con_nom1 char(15),
    desp_con_nom2 char(15),
    desp_con_ape1 char(15),
    desp_con_ape2 char(15),
    desp_con_dep smallint,
    desp_con_sitacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_gpl_conductores from "public";

{ TABLE aud_gpl_transporte row size = 98 number of columns = 17 index size = 0 }

create table aud_gpl_transporte 
  (
    tra_id integer,
    tra_comision integer,
    tra_cat_esp integer,
    tra_uso_veh char(2),
    tra_cat_veh char(15),
    tra_placas char(8),
    tra_tipo_veh smallint,
    desp_tra_id integer,
    desp_tra_comision integer,
    desp_tra_cat_esp integer,
    desp_tra_uso_veh char(2),
    desp_tra_cat_veh char(15),
    desp_tra_placas char(8),
    desp_tra_tipo_veh smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_gpl_transporte from "public";

{ TABLE vlh_tow row size = 1564 number of columns = 34 index size = 63 }

create table vlh_tow 
  (
    tow_id smallint,
    tow_sicoin varchar(50),
    tow_catalogo integer,
    tow_ubicacion smallint,
    tow_adquisicion smallint,
    tow_modelo smallint,
    tow_serie varchar(80),
    tow_pais smallint,
    tow_proposito varchar(50),
    tow_dependencia smallint,
    tow_tipo varchar(80),
    tow_estado smallint,
    tow_marca smallint,
    tow_linea smallint,
    tow_cap_libras smallint,
    tow_traccion varchar(50),
    tow_cant_motor smallint,
    tow_t_motor varchar(50),
    tow_marca_motor varchar(80),
    tow_serie_motor varchar(80),
    tow_actuadores varchar(80),
    tow_cant_bat smallint,
    tow_t_bat varchar(80),
    tow_amperaje smallint,
    tow_voltaje smallint,
    tow_placas smallint,
    tow_acum varchar(80),
    tow_fuentes varchar(80),
    tow_tiempo varchar(80),
    tow_combustible varchar(80),
    tow_neumaticos smallint,
    tow_lubri varchar(255),
    tow_lubri_esp varchar(255),
    tow_situacion smallint,
    primary key (tow_id) 
  );

revoke all on vlh_tow from "public";

{ TABLE dfam_ipm row size = 155 number of columns = 16 index size = 0 }

create table dfam_ipm 
  (
    catalogo_afiliado integer not null ,
    catalogo_familiar integer not null ,
    parentesco integer,
    apellido1 char(15),
    apellido2 char(15),
    nombre1 char(15),
    nombre2 char(15),
    fecha_nacimiento date,
    afi_sexo char(1),
    dpi bigint,
    fecha_dpi date,
    ord_cedula char(4),
    registro_cedula integer,
    fecha_cedula date,
    direccion char(50),
    telefono integer
  );

revoke all on dfam_ipm from "public";

{ TABLE pafe_alternos row size = 144 number of columns = 7 index size = 0 }

create table pafe_alternos 
  (
    alt_catalogo integer not null ,
    alt_fec_ingreso date not null ,
    alt_fec_salida date,
    alt_evento char(30),
    alt_resp_ingreso char(50),
    alt_resp_egreso char(50),
    alt_sit char(2) not null 
  );

revoke all on pafe_alternos from "public";

{ TABLE dfdes_banrural row size = 163 number of columns = 17 index size = 55 }

create table dfdes_banrural 
  (
    dfdr_catalogo integer not null ,
    dfdr_codigo smallint not null ,
    dfdr_nu_reg smallint not null ,
    dfdr_tipo_desc char(1) not null ,
    dfdr_fec_ini date,
    dfdr_mes_act date,
    dfdr_fin_pres date,
    dfdr_monto money(16,2) not null ,
    dfdr_saldo money(16,2) not null ,
    dfdr_mensual money(16,2) not null ,
    dfdr_tot_cuotas smallint,
    dfdr_num_cuotas smallint,
    dfdr_nom_banco char(6),
    dfdr_codeudor integer,
    dfdr_nom_bene char(50),
    dfdr_no_prest char(50) not null ,
    dfdr_si_no char(1),
    primary key (dfdr_no_prest)  constraint pk_dfdr_no_prest
  );

revoke all on dfdes_banrural from "public";

{ TABLE aud_dfdes_banrural row size = 346 number of columns = 37 index size = 0 }

create table aud_dfdes_banrural 
  (
    dfdr_catalogo integer,
    dfdr_codigo smallint,
    dfdr_nu_reg smallint,
    dfdr_tipo_desc char(1),
    dfdr_fec_ini date,
    dfdr_mes_act date,
    dfdr_fin_pres date,
    dfdr_monto money(16,2),
    dfdr_saldo money(16,2),
    dfdr_mensual money(16,2),
    dfdr_tot_cuotas smallint,
    dfdr_num_cuotas smallint,
    dfdr_nom_banco char(6),
    dfdr_codeudor integer,
    dfdr_nom_bene char(50),
    dfdr_no_prest char(50),
    dfdr_si_no char(1),
    des_dfdr_catalogo integer,
    des_dfdr_codigo smallint,
    des_dfdr_nu_reg smallint,
    des_dfdr_tipo_desc char(1),
    des_dfdr_fec_ini date,
    des_dfdr_mes_act date,
    des_dfdr_fin_pres date,
    des_dfdr_monto money(16,2),
    des_dfdr_saldo money(16,2),
    des_dfdr_mensual money(16,2),
    des_dfdr_tot_cuotas smallint,
    des_dfdr_num_cuotas smallint,
    des_dfdr_nom_banco char(6),
    des_dfdr_codeudor integer,
    des_dfdr_nom_bene char(50),
    des_dfdr_no_prest char(50),
    des_dfdr_si_no char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dfdes_banrural from "public";

{ TABLE com_ent_sal2 row size = 373 number of columns = 16 index size = 18 }

create table com_ent_sal2 
  (
    es_codigo integer not null ,
    es_documento varchar(55,5) not null ,
    es_dep_llave_entrada smallint not null ,
    es_dep_llave_salida smallint not null ,
    es_forma smallint not null ,
    es_fecha datetime year to second not null ,
    es_galones integer not null ,
    es_cargo integer not null ,
    es_tipo integer not null ,
    es_saldo decimal(18,2) not null ,
    es_precio decimal(18,2) not null ,
    es_lugar integer not null ,
    es_situacion integer not null ,
    es_catalogo integer,
    es_dependencia integer,
    es_obs varchar(250,4),
    primary key (es_codigo)  constraint pk_es_codigo
  );

revoke all on com_ent_sal2 from "public";

{ TABLE com_resumen row size = 311 number of columns = 10 index size = 9 }

create table com_resumen 
  (
    res_id integer not null ,
    res_com smallint not null ,
    res_factura varchar(15,2) not null ,
    res_fech date not null ,
    res_cantc integer not null ,
    res_preuni decimal(18,2) not null ,
    res_tipo integer not null ,
    res_total decimal(18,2) not null ,
    res_sit varchar(55) not null ,
    res_obs varchar(200,15) not null ,
    primary key (res_id)  constraint pk_res_id
  );

revoke all on com_resumen from "public";

{ TABLE coc_area_mision row size = 359 number of columns = 5 index size = 9 }

create table coc_area_mision 
  (
    are_codigo integer not null ,
    are_descripcion varchar(50,25) not null ,
    are_responsabilidad varchar(250,50) not null ,
    are_tipo_seg varchar(50,25) not null ,
    are_situacion smallint not null ,
    primary key (are_codigo)  constraint pk_are_codigo
  );

revoke all on coc_area_mision from "public";

{ TABLE coc_metodo_ejec row size = 57 number of columns = 3 index size = 9 }

create table coc_metodo_ejec 
  (
    met_ejec_codigo integer not null ,
    met_ejec_descripcion varchar(50,25) not null ,
    met_ejec_situacion smallint not null ,
    primary key (met_ejec_codigo)  constraint pk_met_ejec_codigo
  );

revoke all on coc_metodo_ejec from "public";

{ TABLE coc_metas row size = 18 number of columns = 6 index size = 9 }

create table coc_metas 
  (
    met_codigo integer not null ,
    met_anio smallint not null ,
    met_dep smallint not null ,
    met_mes integer not null ,
    met_cantidad integer not null ,
    met_situacion smallint not null ,
    primary key (met_codigo)  constraint pk_met_codigo
  );

revoke all on coc_metas from "public";

{ TABLE coc_coordenadas2 row size = 205 number of columns = 15 index size = 18 }

create table coc_coordenadas2 
  (
    coo_reporte integer 
        default null,
    coo_anio smallint not null ,
    coo_dep smallint not null ,
    coo_id integer not null ,
    coo_lat_gra smallint 
        default null,
    coo_lat_min smallint 
        default null,
    coo_lat_seg smallint 
        default null,
    coo_long_gra smallint 
        default null,
    coo_long_min smallint 
        default null,
    coo_long_seg smallint 
        default null,
    coo_decimal_lat decimal(20,18) 
        default null,
    coo_decimal_long decimal(20,18) 
        default null,
    coo_utm_x integer 
        default null,
    coo_utm_y integer 
        default null,
    coo_lugar varchar(150,50) 
        default null,
    primary key (coo_id)  constraint pk_coo_id
  );

revoke all on coc_coordenadas2 from "public";

{ TABLE coc_vehiculo_rep2 row size = 20 number of columns = 7 index size = 18 }

create table coc_vehiculo_rep2 
  (
    veh_id integer not null ,
    veh_reporte integer 
        default null,
    veh_anio smallint not null ,
    veh_dep smallint not null ,
    veh_tipo integer 
        default null,
    veh_propiedad smallint,
    veh_cantidad smallint not null ,
    primary key (veh_id)  constraint pk_veh_id
  );

revoke all on coc_vehiculo_rep2 from "public";

{ TABLE ef_fuerza_rsvp row size = 12 number of columns = 5 index size = 20 }

create table ef_fuerza_rsvp 
  (
    ef_fecha date not null ,
    ef_dependencia smallint not null ,
    ef_masculino smallint not null ,
    ef_femenino smallint not null ,
    ef_tipo smallint not null ,
    primary key (ef_fecha,ef_dependencia,ef_tipo)  constraint pk_ef_fecha_ef_dependencia_ef_tipo
  );

revoke all on ef_fuerza_rsvp from "public";

{ TABLE ef_fuerza_ce row size = 12 number of columns = 5 index size = 20 }

create table ef_fuerza_ce 
  (
    efc_fecha date not null ,
    efc_dependencia smallint not null ,
    efc_masculino smallint not null ,
    efc_femenino smallint not null ,
    efc_tipo smallint not null ,
    primary key (efc_fecha,efc_dependencia,efc_tipo)  constraint pk_ef_fecha_ef_dependencia_efc_tipo
  );

revoke all on ef_fuerza_ce from "public";

{ TABLE ipm_dfam_temp row size = 227 number of columns = 26 index size = 13 }

create table ipm_dfam_temp 
  (
    fam_cat_militar integer not null ,
    fam_cat_familiar integer not null ,
    fam_nom1 char(15) not null ,
    fam_nom2 char(15),
    fam_ape1 char(15) not null ,
    fam_ape2 char(15),
    fam_parentesco smallint not null ,
    fam_sexo char(1),
    fam_sangre char(3),
    fam_est_civil char(1),
    fam_fec_nac date,
    fam_nac_lugar char(4),
    fam_ced_ord char(4),
    fam_ced_reg integer,
    fam_fec_ext_ced date,
    fam_lugar_ext_ced char(4),
    fam_direccion char(50),
    fam_zona smallint,
    fam_dir_lugar char(4),
    fam_telefono integer,
    fam_ocupacion char(30),
    fam_empresa char(30),
    fam_cheque smallint,
    fam_beneficiario smallint,
    fam_emergencia smallint,
    fam_clase_pasiva smallint,
    primary key (fam_cat_militar,fam_cat_familiar)  constraint pk_ipm_fam_tem
  );

revoke all on ipm_dfam_temp from "public";

{ TABLE coc_mensaje row size = 1965 number of columns = 13 index size = 18 }

create table coc_mensaje 
  (
    men_codigo integer not null ,
    men_ope_pla_cod integer not null ,
    men_dependencia smallint not null ,
    men_fecha datetime year to second not null ,
    men_lugar varchar(50,25) not null ,
    men_numero_men varchar(50,25) not null ,
    men_contenido char(1500) not null ,
    men_cat_comte integer not null ,
    men_comte_empleo varchar(50,25) not null ,
    men_cat_resp integer not null ,
    men_resp_empleo varchar(50,25) not null ,
    men_situacion integer not null ,
    men_observacion varchar(230,60) not null ,
    primary key (men_codigo)  constraint pk_men_codigo
  );

revoke all on coc_mensaje from "public";

{ TABLE amp_registro_personal row size = 327 number of columns = 18 index size = 20 }

create table amp_registro_personal 
  (
    inf_cui_due char(15) not null ,
    inf_cat integer 
        default null,
    inf_nom1 varchar(15) 
        default null,
    inf_nom2 varchar(15) 
        default null,
    inf_ape1 varchar(15) not null ,
    inf_ape2 varchar(15) 
        default null,
    inf_fec_ingreso varchar(30) not null ,
    inf_status integer not null ,
    inf_sexo integer not null ,
    inf_tel_casa integer 
        default null,
    inf_cel integer not null ,
    inf_email varchar(30) not null ,
    inf_nit varchar(11) 
        default null,
    inf_domicilio varchar(40) not null ,
    inf_municipio char(4) not null ,
    inf_depto char(4) not null ,
    inf_sit integer not null ,
    inf_obs varchar(100) 
        default null,
    primary key (inf_cui_due)  constraint pk_inf_cui_due
  );

revoke all on amp_registro_personal from "public";

{ TABLE amp_ubicacion_personal row size = 158 number of columns = 13 index size = 9 }

create table amp_ubicacion_personal 
  (
    map_id integer not null ,
    map_sit_prop char(1) 
        default null,
    map_status_boleta char(1) 
        default null,
    map_no_lote integer 
        default null,
    map_manzana varchar(10) 
        default null,
    map_sector varchar(10) 
        default null,
    map_ubicacion varchar(50) 
        default null,
    map_latitud decimal(10,6) not null ,
    map_longitud decimal(10,6) not null ,
    map_fec_venta date 
        default null,
    map_fec_compra date 
        default null,
    map_sit integer 
        default null,
    map_obs varchar(50) 
        default null,
    primary key (map_id)  constraint pk_map_id
  );

revoke all on amp_ubicacion_personal from "public";

{ TABLE amp_asig_propietario row size = 44 number of columns = 6 index size = 38 }

create table amp_asig_propietario 
  (
    asig_id integer not null ,
    asig_localidad_lote integer 
        default null,
    asig_propietario_cui char(15) not null ,
    asig_situacion char(1) 
        default null,
    asig_fecha date 
        default null,
    asig_observacion varchar(15) 
        default null,
    primary key (asig_id)  constraint pk_asig_id
  );

revoke all on amp_asig_propietario from "public";

{ TABLE amp_lote row size = 40 number of columns = 4 index size = 9 }

create table amp_lote 
  (
    lot_id integer not null ,
    lot_no_lot integer not null ,
    lot_sit char(1) 
        default null,
    lot_obs varchar(30) 
        default null,
    primary key (lot_id)  constraint pk_lot_id
  );

revoke all on amp_lote from "public";

{ TABLE amp_manzana row size = 43 number of columns = 4 index size = 9 }

create table amp_manzana 
  (
    man_id integer not null ,
    man_letra varchar(6) not null ,
    man_sit char(1) 
        default null,
    man_obs varchar(30) 
        default null,
    primary key (man_id)  constraint pk_man_id
  );

revoke all on amp_manzana from "public";

{ TABLE amp_sector row size = 43 number of columns = 4 index size = 9 }

create table amp_sector 
  (
    sec_id integer not null ,
    sec_letra varchar(6) not null ,
    sec_sit char(1) 
        default null,
    sec_obs varchar(30) 
        default null,
    primary key (sec_id)  constraint pk_sec_id
  );

revoke all on amp_sector from "public";

{ TABLE opaf_abdominales1 row size = 13 number of columns = 4 index size = 0 }

create table opaf_abdominales1 
  (
    abd_edad integer not null ,
    abd_sexo char(1) not null ,
    abd_repeticiones integer,
    abd_punteo integer
  );

revoke all on opaf_abdominales1 from "public";

{ TABLE opaf_carrera2 row size = 12 number of columns = 4 index size = 0 }

create table opaf_carrera2 
  (
    car_edad integer not null ,
    car_sexo char(1) not null ,
    car_tiempo datetime hour to minute,
    car_punteo integer
  );

revoke all on opaf_carrera2 from "public";

{ TABLE opaf_dominadas1 row size = 13 number of columns = 4 index size = 0 }

create table opaf_dominadas1 
  (
    dom_edad integer not null ,
    dom_sexo char(1) not null ,
    dom_repeticiones integer not null ,
    dom_punteo integer not null 
  );

revoke all on opaf_dominadas1 from "public";

{ TABLE opaf_notas1 row size = 426 number of columns = 23 index size = 13 }

create table opaf_notas1 
  (
    not_catalogo integer not null ,
    not_fecha date not null ,
    not_dominadas smallint not null ,
    not_punteo_dom smallint not null ,
    not_abdominales smallint not null ,
    not_punteo_abd smallint not null ,
    not_carrera datetime minute to second not null ,
    not_punteo_car smallint not null ,
    not_promedio decimal(5,2) not null ,
    not_obs varchar(255),
    not_tipo varchar(1) not null ,
    not_revisado smallint not null ,
    not_dependencia smallint not null ,
    not_peso smallint not null ,
    not_estatura decimal(3,2) not null ,
    not_imc decimal(4,2) not null ,
    not_perfil varchar(15) not null ,
    not_fec_certi date,
    not_grado smallint not null ,
    not_usuario integer not null ,
    not_acta varchar(100),
    not_extemporaneo smallint not null ,
    not_evento smallint,
    primary key (not_catalogo,not_fecha) 
  );

revoke all on opaf_notas1 from "public";

{ TABLE coc_control row size = 72 number of columns = 7 index size = 9 }

create table coc_control 
  (
    con_codigo integer not null ,
    con_catalogo integer not null ,
    con_grado smallint not null ,
    con_arma smallint not null ,
    con_nombre char(50) not null ,
    con_dependencia smallint not null ,
    con_hora_ingreso datetime year to second not null ,
    primary key (con_codigo)  constraint pk_con_codigo
  );

revoke all on coc_control from "public";

{ TABLE gpl_actividad row size = 164 number of columns = 6 index size = 9 }

create table gpl_actividad 
  (
    act_id integer not null ,
    act_desc varchar(100,10) not null ,
    act_tipo_act varchar(40,5) not null ,
    act_ministerio integer not null ,
    act_dependencia smallint not null ,
    act_situacion char(12) not null ,
    primary key (act_id)  constraint pk_act
  );

revoke all on gpl_actividad from "public";

{ TABLE gpl_ministerios row size = 141 number of columns = 4 index size = 9 }

create table gpl_ministerios 
  (
    min_id integer not null ,
    min_descripcion varchar(100,10) not null ,
    min_desc_ct varchar(25,10) not null ,
    min_situacion char(10) not null ,
    primary key (min_id)  constraint de3
  );

revoke all on gpl_ministerios from "public";

{ TABLE gpl_asig_mision row size = 16 number of columns = 4 index size = 18 }

create table gpl_asig_mision 
  (
    ami_id serial not null ,
    ami_comision integer not null ,
    ami_mision integer not null ,
    ami_situacion integer not null 
  );

revoke all on gpl_asig_mision from "public";

{ TABLE gpl_conductores row size = 80 number of columns = 8 index size = 9 }

create table gpl_conductores 
  (
    con_catalogo integer not null ,
    con_nom1 char(15) not null ,
    con_nom2 char(15) not null ,
    con_ape1 char(15) not null ,
    con_ape2 char(15) not null ,
    con_dep smallint not null ,
    con_puesto integer not null ,
    con_sitacion char(10) not null ,
    primary key (con_catalogo) 
  );

revoke all on gpl_conductores from "public";

{ TABLE gpl_asig_lugar row size = 64 number of columns = 8 index size = 9 }

create table gpl_asig_lugar 
  (
    alu_id serial not null ,
    alu_comision integer not null ,
    alu_lugar integer not null ,
    alu_actividad integer,
    alu_latitud char(20),
    alu_longitud char(20),
    alu_fecha_rea date,
    alu_situacion integer not null ,
    primary key (alu_id) 
  );

revoke all on gpl_asig_lugar from "public";

{ TABLE opaf_evento_per row size = 162 number of columns = 6 index size = 9 }

create table opaf_evento_per 
  (
    eve_codigo integer not null ,
    eve_catalogo integer not null ,
    eve_evento smallint not null ,
    eve_acta char(50) not null ,
    eve_situacion smallint not null ,
    eve_observacion char(100) not null ,
    primary key (eve_codigo)  constraint pk_eve_codigo
  );

revoke all on opaf_evento_per from "public";

{ TABLE gpl_presidencial row size = 321 number of columns = 16 index size = 9 }

create table gpl_presidencial 
  (
    pre_id integer not null ,
    pre_grado_of smallint not null ,
    pre_arma_of smallint not null ,
    pre_catalogo integer not null ,
    pre_dependencia smallint not null ,
    pre_desc_com varchar(255,255) not null ,
    pre_quien integer not null ,
    pre_hrs decimal(7,2),
    pre_ofsuperior integer,
    pre_ofsubalterno integer,
    pre_tropa integer not null ,
    pre_esp integer not null ,
    pre_hora_salida datetime year to second not null ,
    pre_hora_ent datetime year to second,
    pre_duracion decimal(10,2),
    pre_situacion integer not null ,
    primary key (pre_id)  constraint pkiw323
  );

revoke all on gpl_presidencial from "public";

{ TABLE test_table row size = 22 number of columns = 2 index size = 7 }

create table test_table 
  (
    tes_id smallint,
    tes_desc char(20),
    primary key (tes_id) 
  );

revoke all on test_table from "public";

{ TABLE cumple_jefes row size = 271 number of columns = 6 index size = 9 }

create table cumple_jefes 
  (
    cum_id integer not null ,
    cum_dependencia smallint not null ,
    cum_desc_empleo char(255) not null ,
    cum_jerarquia char(4),
    cum_plaza integer not null ,
    cum_situacion char(2) not null ,
    primary key (cum_id) 
  );

revoke all on cumple_jefes from "public";

{ TABLE aud_cumple_jefes row size = 562 number of columns = 15 index size = 0 }

create table aud_cumple_jefes 
  (
    cum_id integer,
    cum_dependencia smallint,
    cum_desc_empleo char(255),
    cum_jerarquia char(4),
    cum_plaza integer,
    cum_situacion char(2),
    desp_cum_id integer,
    desp_cum_dependencia smallint,
    desp_cum_desc_empleo char(255),
    desp_cum_jerarquia char(4),
    desp_cum_plaza integer,
    desp_cum_situacion char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cumple_jefes from "public";

{ TABLE coc_ope_planificada row size = 1070 number of columns = 16 index size = 40 }

create table coc_ope_planificada 
  (
    ope_pla_codigo integer not null ,
    ope_pla_planificar integer not null ,
    ope_pla_area integer not null ,
    ope_pla_operacion integer not null ,
    ope_pla_proposito integer not null ,
    ope_pla_met_ejec integer not null ,
    ope_pla_uni_org integer not null ,
    ope_pla_cat_responsable integer not null ,
    ope_pla_fecha datetime year to second not null ,
    ope_pla_tel_resp integer not null ,
    ope_pla_inicia datetime year to second not null ,
    ope_pla_termina datetime year to second not null ,
    ope_pla_usuario integer not null ,
    ope_pla_dependencia smallint not null ,
    ope_pla_situacion integer not null ,
    ope_pla_observacion char(1000),
    primary key (ope_pla_codigo)  constraint pk_ope_pla_codigo
  );

revoke all on coc_ope_planificada from "public";

{ TABLE aud_opaf_notas19 row size = 864 number of columns = 49 index size = 0 }

create table aud_opaf_notas19 
  (
    not_catalogo integer,
    not_fecha date,
    not_dominadas smallint,
    not_punteo_dom smallint,
    not_abdominales smallint,
    not_punteo_abd smallint,
    not_carrera datetime minute to second,
    not_punteo_car smallint,
    not_promedio decimal(5,2),
    not_obs varchar(255),
    not_tipo varchar(1),
    not_revisado smallint,
    not_dependencia smallint,
    not_peso smallint,
    not_estatura decimal(3,2),
    not_imc decimal(4,2),
    not_perfil varchar(15),
    not_fec_certi date,
    not_grado smallint,
    not_usuario integer,
    not_acta varchar(100),
    not_extemporaneo smallint,
    not_evento smallint,
    desp_not_catalogo integer,
    desp_not_fecha date,
    desp_not_dominadas smallint,
    desp_not_punteo_dom smallint,
    desp_not_abdominales smallint,
    desp_not_punteo_abd smallint,
    desp_not_carrera datetime minute to second,
    desp_not_punteo_car smallint,
    desp_not_promedio decimal(5,2),
    desp_not_obs varchar(255),
    desp_not_tipo varchar(1),
    desp_not_revisado smallint,
    desp_not_dependencia smallint,
    desp_not_peso smallint,
    desp_not_estatura decimal(3,2),
    desp_not_imc decimal(4,2),
    desp_not_perfil varchar(15),
    desp_not_fec_certi date,
    desp_not_grado smallint,
    desp_not_usuario integer,
    desp_not_acta varchar(100),
    desp_not_extemporaneo smallint,
    desp_not_evento smallint,
    accion char(1) not null ,
    usuario integer not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_opaf_notas19 from "public";

{ TABLE acc_correctiva row size = 259 number of columns = 3 index size = 9 }

create table acc_correctiva 
  (
    corr_codigo integer not null ,
    corr_accion integer not null ,
    corr_descripcion varchar(250),
    primary key (corr_codigo) 
  );

revoke all on acc_correctiva from "public";

{ TABLE inmate row size = 156 number of columns = 3 index size = 0 }

create table inmate 
  (
    id_num integer,
    picture blob,
    felony clob
  );

revoke all on inmate from "public";

{ TABLE aud_lmun_ent_sal row size = 120 number of columns = 29 index size = 0 }

create table aud_lmun_ent_sal 
  (
    es_codigo integer,
    es_con_codigo integer,
    es_con_dep_llave smallint,
    es_lote_codigo integer,
    es_uso_codigo integer,
    es_tipo_codigo integer,
    es_cal_codigo integer,
    es_eslabonada integer,
    es_carga integer,
    es_cantidad integer,
    es_status integer,
    es_tipo integer,
    es_situacion integer,
    desp_es_codigo integer,
    desp_es_con_codigo integer,
    desp_es_con_dep_llave smallint,
    desp_es_lote_codigo integer,
    desp_es_uso_codigo integer,
    desp_es_tipo_codigo integer,
    desp_es_cal_codigo integer,
    desp_es_eslabonada integer,
    desp_es_carga integer,
    desp_es_cantidad integer,
    desp_es_status integer,
    desp_es_tipo integer,
    desp_es_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_ent_sal from "public";

{ TABLE toerenglon0 row size = 48 number of columns = 12 index size = 0 }

create table toerenglon0 
  (
    toe_codigo serial not null ,
    toe_dep_llave smallint not null ,
    toe_jerarquia varchar(10) not null ,
    toe_morgtitl varchar(10) not null ,
    toe_plaza integer not null ,
    toe_correlativo smallint not null ,
    toe_corretittulo smallint not null ,
    toe_procodigo smallint not null ,
    toe_subcodigo smallint not null ,
    toe_fecha date not null ,
    toe_sit1 smallint not null ,
    toe_sit2 smallint not null 
  );

revoke all on toerenglon0 from "public";

{ TABLE sig_agregados row size = 12 number of columns = 4 index size = 25 }

create table sig_agregados 
  (
    agr_id serial not null ,
    agr_cat integer,
    agr_dep smallint,
    agr_sit smallint,
    primary key (agr_id) 
  );

revoke all on sig_agregados from "public";

{ TABLE sig_destinos row size = 59 number of columns = 4 index size = 16 }

create table sig_destinos 
  (
    dest_id serial not null ,
    dest_desc varchar(50),
    dest_dep smallint,
    dest_sit smallint,
    primary key (dest_id) 
  );

revoke all on sig_destinos from "public";

{ TABLE sig_unidades row size = 109 number of columns = 4 index size = 16 }

create table sig_unidades 
  (
    uni_id serial not null ,
    uni_desc varchar(100),
    uni_dep smallint,
    uni_sit smallint,
    primary key (uni_id) 
  );

revoke all on sig_unidades from "public";

{ TABLE sig_companias row size = 61 number of columns = 4 index size = 18 }

create table sig_companias 
  (
    com_id serial not null ,
    com_desc varchar(50),
    com_uni integer,
    com_sit smallint,
    primary key (com_id) 
  );

revoke all on sig_companias from "public";

{ TABLE sig_comisiones row size = 484 number of columns = 11 index size = 16 }

create table sig_comisiones 
  (
    com_id serial not null ,
    com_desc varchar(50),
    com_lugar varchar(50),
    com_doc varchar(50),
    com_fec_inicio datetime year to minute,
    com_fec_fin datetime year to minute,
    com_detalle varchar(150),
    com_info varchar(150),
    com_sit smallint,
    com_ing datetime year to minute,
    com_dep smallint,
    primary key (com_id) 
  );

revoke all on sig_comisiones from "public";

{ TABLE sig_com_asig row size = 14 number of columns = 4 index size = 27 }

create table sig_com_asig 
  (
    asi_id serial not null ,
    asi_com integer,
    asi_asig integer,
    asi_sit smallint,
    primary key (asi_id) 
  );

revoke all on sig_com_asig from "public";

{ TABLE sig_fuerza row size = 73 number of columns = 7 index size = 18 }

create table sig_fuerza 
  (
    fue_id serial not null ,
    fue_cat integer not null ,
    fue_hora datetime hour to minute not null ,
    fue_fecha datetime year to day not null ,
    fue_destino integer,
    fue_sit smallint,
    fue_obs varchar(50),
    primary key (fue_id) 
  );

revoke all on sig_fuerza from "public";

{ TABLE sig_asig_companias row size = 14 number of columns = 4 index size = 18 }

create table sig_asig_companias 
  (
    asi_id serial not null ,
    asi_cat integer,
    asi_com integer,
    asi_sit smallint,
    primary key (asi_id) 
  );

revoke all on sig_asig_companias from "public";

{ TABLE sig_marcas row size = 53 number of columns = 2 index size = 7 }

create table sig_marcas 
  (
    mar_id smallint,
    mar_nombre varchar(50),
    primary key (mar_id) 
  );

revoke all on sig_marcas from "public";

{ TABLE sig_soporteotr row size = 728 number of columns = 13 index size = 32 }

create table sig_soporteotr 
  (
    otr_registro serial not null ,
    otr_fecha date,
    otr_oficio varchar(100),
    otr_usuario varchar(100),
    otr_telefono integer,
    otr_tecnico integer,
    otr_dependencia smallint,
    otr_marca smallint,
    otr_modelo varchar(100),
    otr_noserie varchar(100),
    otr_motivo varchar(100),
    otr_trabajo varchar(200),
    otr_situacion smallint,
    primary key (otr_registro) 
  );

revoke all on sig_soporteotr from "public";

{ TABLE sig_soporteimp row size = 544 number of columns = 15 index size = 32 }

create table sig_soporteimp 
  (
    imp_registro serial not null ,
    imp_fecha date,
    imp_oficio varchar(100),
    imp_usuario varchar(100),
    imp_telefono integer,
    imp_tecnico integer,
    imp_dependencia smallint,
    imp_tipo varchar(10),
    imp_marca smallint,
    imp_modelo varchar(100),
    imp_noserie varchar(100),
    imp_cable varchar(2),
    imp_motivo varchar(100),
    imp_cableparalelo varchar(2),
    imp_situacion smallint,
    primary key (imp_registro) 
  );

revoke all on sig_soporteimp from "public";

{ TABLE sig_soportecpu row size = 647 number of columns = 19 index size = 25 }

create table sig_soportecpu 
  (
    cpu_registro serial not null ,
    cpu_fecha date,
    cpu_oficio varchar(100),
    cpu_usuario varchar(100),
    cpu_telefono integer,
    cpu_tecnico integer,
    cpu_dependencia smallint,
    cpu_procesador varchar(100),
    cpu_cdrom varchar(2),
    cpu_tarjetasonido varchar(2),
    cpu_drivers varchar(2),
    cpu_discoduro varchar(100),
    cpu_tarjetavideo varchar(100),
    cpu_teclado varchar(2),
    cpu_mouse varchar(2),
    cpu_fuente varchar(2),
    cpu_cable varchar(2),
    cpu_motivo varchar(100),
    cpu_situacion smallint,
    primary key (cpu_registro) 
  );

revoke all on sig_soportecpu from "public";

{ TABLE sig_soportemon row size = 486 number of columns = 14 index size = 32 }

create table sig_soportemon 
  (
    mon_registro serial not null ,
    mon_fecha date,
    mon_oficio varchar(100),
    mon_usuario varchar(100),
    mon_telefono integer,
    mon_tecnico integer,
    mon_dependencia smallint,
    mon_marca smallint,
    mon_modelo varchar(50),
    mon_noserial varchar(50),
    mon_tipo varchar(5),
    mon_cable varchar(2),
    mon_motivo varchar(150),
    mon_situacion smallint,
    primary key (mon_registro) 
  );

revoke all on sig_soportemon from "public";

{ TABLE sig_novedades row size = 2022 number of columns = 6 index size = 25 }

create table sig_novedades 
  (
    nov_id serial not null ,
    nov_catalogo integer,
    nov_fecha datetime year to minute,
    nov_descripcion lvarchar(2000),
    nov_dependencia smallint,
    nov_sit smallint,
    primary key (nov_id) 
  );

revoke all on sig_novedades from "public";

{ TABLE sig_jefes_servicio row size = 28 number of columns = 7 index size = 39 }

create table sig_jefes_servicio 
  (
    jefe_hist_id serial not null ,
    jefe_grado smallint,
    jefe_arma smallint,
    jefe_fecha_inicial datetime year to minute,
    jefe_fecha_final datetime year to minute,
    jefe_catalogo integer,
    jefe_dependencia smallint,
    primary key (jefe_hist_id) 
  );

revoke all on sig_jefes_servicio from "public";

{ TABLE aud_sig_fuerza row size = 166 number of columns = 17 index size = 0 }

create table aud_sig_fuerza 
  (
    fue_id integer,
    fue_cat integer,
    fue_hora datetime hour to minute,
    fue_fecha datetime year to day,
    fue_destino integer,
    fue_sit smallint,
    fue_obs varchar(50),
    desp_fue_id integer,
    desp_fue_cat integer,
    desp_fue_hora datetime hour to minute,
    desp_fue_fecha datetime year to day,
    desp_fue_destino integer,
    desp_fue_sit smallint,
    desp_fue_obs varchar(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_fuerza from "public";

{ TABLE aud_sig_agregados row size = 44 number of columns = 11 index size = 0 }

create table aud_sig_agregados 
  (
    agr_id integer,
    agr_cat integer,
    agr_dep smallint,
    agr_sit smallint,
    desp_agr_id integer,
    desp_agr_cat integer,
    desp_agr_dep smallint,
    desp_agr_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_agregados from "public";

{ TABLE aud_sig_destinos row size = 138 number of columns = 11 index size = 0 }

create table aud_sig_destinos 
  (
    dest_id integer,
    dest_desc varchar(50),
    dest_dep smallint,
    dest_sit smallint,
    desp_dest_id integer,
    desp_dest_desc varchar(50),
    desp_dest_dep smallint,
    desp_dest_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_destinos from "public";

{ TABLE aud_sig_unidades row size = 238 number of columns = 11 index size = 0 }

create table aud_sig_unidades 
  (
    uni_id integer,
    uni_desc varchar(100),
    uni_dep smallint,
    uni_sit smallint,
    desp_uni_id integer,
    desp_uni_desc varchar(100),
    desp_uni_dep smallint,
    desp_uni_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_unidades from "public";

{ TABLE aud_sig_companias row size = 142 number of columns = 11 index size = 0 }

create table aud_sig_companias 
  (
    com_id integer,
    com_desc varchar(50),
    com_uni integer,
    com_sit smallint,
    desp_com_id integer,
    desp_com_desc varchar(50),
    desp_com_uni integer,
    desp_com_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_companias from "public";

{ TABLE aud_sig_asig_companias row size = 48 number of columns = 11 index size = 0 }

create table aud_sig_asig_companias 
  (
    asi_id integer,
    asi_cat integer,
    asi_com integer,
    asi_sit smallint,
    desp_asi_id integer,
    desp_asi_cat integer,
    desp_asi_com integer,
    desp_asi_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_asig_companias from "public";

{ TABLE aud_sig_com_asig row size = 48 number of columns = 11 index size = 0 }

create table aud_sig_com_asig 
  (
    asi_id integer,
    asi_com integer,
    asi_asig integer,
    asi_sit smallint,
    desp_asi_id integer,
    desp_asi_com integer,
    desp_asi_asig integer,
    desp_asi_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_com_asig from "public";

{ TABLE aud_sig_comisiones row size = 988 number of columns = 25 index size = 0 }

create table aud_sig_comisiones 
  (
    com_id integer,
    com_desc varchar(50),
    com_lugar varchar(50),
    com_doc varchar(50),
    com_fec_inicio datetime year to minute,
    com_fec_fin datetime year to minute,
    com_detalle varchar(150),
    com_info varchar(150),
    com_sit smallint,
    com_ing datetime year to minute,
    com_dep smallint,
    desp_com_id integer,
    desp_com_desc varchar(50),
    desp_com_lugar varchar(50),
    desp_com_doc varchar(50),
    desp_com_fec_inicio datetime year to minute,
    desp_com_fec_fin datetime year to minute,
    desp_com_detalle varchar(150),
    desp_com_info varchar(150),
    desp_com_sit smallint,
    desp_com_ing datetime year to minute,
    desp_com_dep smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_comisiones from "public";

{ TABLE sig_personal_contrato row size = 214 number of columns = 8 index size = 23 }

create table sig_personal_contrato 
  (
    con_catalogo integer not null ,
    con_nom1 varchar(50),
    con_nom2 varchar(50),
    con_ape1 varchar(50),
    con_ape2 varchar(50),
    con_grado smallint,
    con_dep smallint,
    con_sit smallint,
    primary key (con_catalogo) 
  );

revoke all on sig_personal_contrato from "public";

{ TABLE aud_sig_personal_contrato row size = 448 number of columns = 19 index size = 0 }

create table aud_sig_personal_contrato 
  (
    con_catalogo integer,
    con_nom1 varchar(50),
    con_nom2 varchar(50),
    con_ape1 varchar(50),
    con_ape2 varchar(50),
    con_grado smallint,
    con_dep smallint,
    con_sit smallint,
    desp_con_catalogo integer,
    desp_con_nom1 varchar(50),
    desp_con_nom2 varchar(50),
    desp_con_ape1 varchar(50),
    desp_con_ape2 varchar(50),
    desp_con_grado smallint,
    desp_con_dep smallint,
    desp_con_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_personal_contrato from "public";

{ TABLE aud_sig_marcas row size = 126 number of columns = 7 index size = 0 }

create table aud_sig_marcas 
  (
    mar_id smallint,
    mar_nombre varchar(50),
    desp_mar_id smallint,
    desp_mar_nombre varchar(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_marcas from "public";

{ TABLE aud_sig_novedades row size = 4064 number of columns = 15 index size = 0 }

create table aud_sig_novedades 
  (
    nov_id integer,
    nov_catalogo integer,
    nov_fecha datetime year to minute,
    nov_descripcion lvarchar(2000),
    nov_dependencia smallint,
    nov_sit smallint,
    desp_nov_id integer,
    desp_nov_catalogo integer,
    desp_nov_fecha datetime year to minute,
    desp_nov_descripcion lvarchar(2000),
    desp_nov_dependencia smallint,
    desp_nov_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_novedades from "public";

{ TABLE aud_sig_jefes_servicio row size = 76 number of columns = 17 index size = 0 }

create table aud_sig_jefes_servicio 
  (
    jefe_hist_id integer,
    jefe_grado smallint,
    jefe_arma smallint,
    jefe_fecha_inicial datetime year to minute,
    jefe_fecha_final datetime year to minute,
    jefe_catalogo integer,
    jefe_dependencia smallint,
    desp_jefe_hist_id integer,
    desp_jefe_grado smallint,
    desp_jefe_arma smallint,
    desp_jefe_fecha_inicial datetime year to minute,
    desp_jefe_fecha_final datetime year to minute,
    desp_jefe_catalogo integer,
    desp_jefe_dependencia smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_jefes_servicio from "public";

{ TABLE aud_sig_soportecpu row size = 1314 number of columns = 41 index size = 0 }

create table aud_sig_soportecpu 
  (
    cpu_registro integer,
    cpu_fecha date,
    cpu_oficio varchar(100),
    cpu_usuario varchar(100),
    cpu_telefono integer,
    cpu_tecnico integer,
    cpu_dependencia smallint,
    cpu_procesador varchar(100),
    cpu_cdrom varchar(2),
    cpu_tarjetasonido varchar(2),
    cpu_drivers varchar(2),
    cpu_discoduro varchar(100),
    cpu_tarjetavideo varchar(100),
    cpu_teclado varchar(2),
    cpu_mouse varchar(2),
    cpu_fuente varchar(2),
    cpu_cable varchar(2),
    cpu_motivo varchar(100),
    cpu_situacion smallint,
    desp_cpu_registro integer,
    desp_cpu_fecha date,
    desp_cpu_oficio varchar(100),
    desp_cpu_usuario varchar(100),
    desp_cpu_telefono integer,
    desp_cpu_tecnico integer,
    desp_cpu_dependencia smallint,
    desp_cpu_procesador varchar(100),
    desp_cpu_cdrom varchar(2),
    desp_cpu_tarjetasonido varchar(2),
    desp_cpu_drivers varchar(2),
    desp_cpu_discoduro varchar(100),
    desp_cpu_tarjetavideo varchar(100),
    desp_cpu_teclado varchar(2),
    desp_cpu_mouse varchar(2),
    desp_cpu_fuente varchar(2),
    desp_cpu_cable varchar(2),
    desp_cpu_motivo varchar(100),
    desp_cpu_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_soportecpu from "public";

{ TABLE aud_sig_soportemon row size = 992 number of columns = 31 index size = 0 }

create table aud_sig_soportemon 
  (
    mon_registro integer,
    mon_fecha date,
    mon_oficio varchar(100),
    mon_usuario varchar(100),
    mon_telefono integer,
    mon_tecnico integer,
    mon_dependencia smallint,
    mon_marca smallint,
    mon_modelo varchar(50),
    mon_noserial varchar(50),
    mon_tipo varchar(5),
    mon_cable varchar(2),
    mon_motivo varchar(150),
    mon_situacion smallint,
    desp_mon_registro integer,
    desp_mon_fecha date,
    desp_mon_oficio varchar(100),
    desp_mon_usuario varchar(100),
    desp_mon_telefono integer,
    desp_mon_tecnico integer,
    desp_mon_dependencia smallint,
    desp_mon_marca smallint,
    desp_mon_modelo varchar(50),
    desp_mon_noserial varchar(50),
    desp_mon_tipo varchar(5),
    desp_mon_cable varchar(2),
    desp_mon_motivo varchar(150),
    desp_mon_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_soportemon from "public";

{ TABLE aud_sig_soporteimp row size = 1108 number of columns = 33 index size = 0 }

create table aud_sig_soporteimp 
  (
    imp_registro integer,
    imp_fecha date,
    imp_oficio varchar(100),
    imp_usuario varchar(100),
    imp_telefono integer,
    imp_tecnico integer,
    imp_dependencia smallint,
    imp_tipo varchar(10),
    imp_marca smallint,
    imp_modelo varchar(100),
    imp_noserie varchar(100),
    imp_cable varchar(2),
    imp_motivo varchar(100),
    imp_cableparalelo varchar(2),
    imp_situacion smallint,
    desp_imp_registro integer,
    desp_imp_fecha date,
    desp_imp_oficio varchar(100),
    desp_imp_usuario varchar(100),
    desp_imp_telefono integer,
    desp_imp_tecnico integer,
    desp_imp_dependencia smallint,
    desp_imp_tipo varchar(10),
    desp_imp_marca smallint,
    desp_imp_modelo varchar(100),
    desp_imp_noserie varchar(100),
    desp_imp_cable varchar(2),
    desp_imp_motivo varchar(100),
    desp_imp_cableparalelo varchar(2),
    desp_imp_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_soporteimp from "public";

{ TABLE aud_sig_soporteotr row size = 1476 number of columns = 29 index size = 0 }

create table aud_sig_soporteotr 
  (
    otr_registro integer,
    otr_fecha date,
    otr_oficio varchar(100),
    otr_usuario varchar(100),
    otr_telefono integer,
    otr_tecnico integer,
    otr_dependencia smallint,
    otr_marca smallint,
    otr_modelo varchar(100),
    otr_noserie varchar(100),
    otr_motivo varchar(100),
    otr_trabajo varchar(200),
    otr_situacion smallint,
    desp_otr_registro integer,
    desp_otr_fecha date,
    desp_otr_oficio varchar(100),
    desp_otr_usuario varchar(100),
    desp_otr_telefono integer,
    desp_otr_tecnico integer,
    desp_otr_dependencia smallint,
    desp_otr_marca smallint,
    desp_otr_modelo varchar(100),
    desp_otr_noserie varchar(100),
    desp_otr_motivo varchar(100),
    desp_otr_trabajo varchar(200),
    desp_otr_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_soporteotr from "public";

{ TABLE smg_tipos_mantenimiento row size = 208 number of columns = 5 index size = 7 }

create table smg_tipos_mantenimiento 
  (
    mant_id smallint not null ,
    mant_nombre varchar(50),
    mant_desc varchar(150),
    mant_resp smallint,
    mant_sit smallint,
    primary key (mant_id) 
  );

revoke all on smg_tipos_mantenimiento from "public";

{ TABLE smg_motivos row size = 208 number of columns = 4 index size = 9 }

create table smg_motivos 
  (
    mot_id integer not null ,
    mot_nombre varchar(50),
    mot_desc varchar(150),
    mot_sit smallint,
    primary key (mot_id) 
  );

revoke all on smg_motivos from "public";

{ TABLE smg_historial_mantenimiento row size = 122 number of columns = 7 index size = 34 }

create table smg_historial_mantenimiento 
  (
    mant_codigo integer not null ,
    mant_fusil integer,
    mant_cat integer,
    mant_mant smallint,
    mant_fecha datetime year to day,
    mant_det varchar(100),
    mant_sit smallint,
    primary key (mant_codigo) 
  );

revoke all on smg_historial_mantenimiento from "public";

{ TABLE smg_historial_disparos row size = 173 number of columns = 8 index size = 27 }

create table smg_historial_disparos 
  (
    dis_id integer not null ,
    dis_fusil integer,
    dis_cantidad smallint,
    dis_fecha datetime year to day,
    dis_doc varchar(50),
    dis_mot integer,
    dis_det varchar(100),
    dis_sit smallint,
    primary key (dis_id) 
  );

revoke all on smg_historial_disparos from "public";

{ TABLE aud_smg_motivos row size = 436 number of columns = 11 index size = 0 }

create table aud_smg_motivos 
  (
    mot_id integer,
    mot_nombre varchar(50),
    mot_desc varchar(150),
    mot_sit smallint,
    desp_mot_id integer,
    desp_mot_nombre varchar(50,1),
    desp_mot_desc varchar(150),
    desp_mot_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_smg_motivos from "public";

{ TABLE aud_smg_tipos_mantenimiento row size = 436 number of columns = 13 index size = 0 }

create table aud_smg_tipos_mantenimiento 
  (
    mant_id smallint,
    mant_nombre varchar(50),
    mant_desc varchar(150),
    mant_resp smallint,
    mant_sit smallint,
    desp_mant_id smallint,
    desp_mant_nombre varchar(50),
    desp_mant_desc varchar(150),
    desp_mant_resp smallint,
    desp_mant_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_smg_tipos_mantenimiento from "public";

{ TABLE aud_smg_historial_disparos row size = 366 number of columns = 19 index size = 0 }

create table aud_smg_historial_disparos 
  (
    dis_id integer,
    dis_fusil integer,
    dis_cantidad smallint,
    dis_fecha datetime year to day,
    dis_doc varchar(50),
    dis_mot integer,
    dis_det varchar(100),
    dis_sit smallint,
    desp_dis_id integer,
    desp_dis_fusil integer,
    desp_dis_cantidad smallint,
    desp_dis_fecha datetime year to day,
    desp_dis_doc varchar(50),
    desp_dis_mot integer,
    desp_dis_det varchar(100),
    desp_dis_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_smg_historial_disparos from "public";

{ TABLE aud_smg_historial_mantenimiento row size = 264 number of columns = 17 index size = 0 }

create table aud_smg_historial_mantenimiento 
  (
    mant_codigo integer,
    mant_fusil integer,
    mant_cat integer,
    mant_mant smallint,
    mant_fecha datetime year to day,
    mant_det varchar(100),
    mant_sit smallint,
    desp_mant_codigo integer,
    desp_mant_fusil integer,
    desp_mant_cat integer,
    desp_mant_mant smallint,
    desp_mant_fecha datetime year to day,
    desp_mant_det varchar(100),
    desp_mant_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_smg_historial_mantenimiento from "public";

{ TABLE fp_fondo row size = 259 number of columns = 3 index size = 9 }

create table fp_fondo 
  (
    fon_codigo integer not null ,
    fon_desc varchar(250) not null ,
    fon_stat integer not null ,
    primary key (fon_codigo)  constraint pk_codigo_fondo
  );

revoke all on fp_fondo from "public";

{ TABLE fp_uso row size = 259 number of columns = 3 index size = 9 }

create table fp_uso 
  (
    uso_codigo integer not null ,
    uso_desc varchar(250) not null ,
    uso_stat integer not null ,
    primary key (uso_codigo)  constraint pk_codigo_uso
  );

revoke all on fp_uso from "public";

{ TABLE fp_clasificacion row size = 259 number of columns = 3 index size = 9 }

create table fp_clasificacion 
  (
    clas_codigo integer not null ,
    clas_desc varchar(250) not null ,
    clas_stat integer not null ,
    primary key (clas_codigo)  constraint pk_codigo_clas
  );

revoke all on fp_clasificacion from "public";

{ TABLE fp_estado row size = 259 number of columns = 3 index size = 9 }

create table fp_estado 
  (
    est_codigo integer not null ,
    est_desc varchar(250) not null ,
    est_stat integer not null ,
    primary key (est_codigo)  constraint pk_codigo_estado
  );

revoke all on fp_estado from "public";

{ TABLE fp_documentos row size = 2233 number of columns = 23 index size = 45 }

create table fp_documentos 
  (
    doc_codigo integer not null ,
    doc_titulo varchar(250) not null ,
    doc_descripcion varchar(250) not null ,
    doc_tamanio integer not null ,
    doc_tipo varchar(250) not null ,
    doc_nombre_archivo varchar(250) not null ,
    doc_respuesta integer not null ,
    doc_fec_ini datetime year to second not null ,
    doc_fec_print datetime year to second not null ,
    doc_fec_fin datetime year to second not null ,
    doc_obs1 varchar(250) not null ,
    doc_obs2 varchar(250) not null ,
    doc_obs3 varchar(250) not null ,
    doc_fondo integer not null ,
    doc_uso integer not null ,
    doc_estado integer not null ,
    doc_clasificacion integer not null ,
    doc_monto decimal(18,2) not null ,
    doc_prov varchar(250) not null ,
    doc_catalogo integer not null ,
    doc_dependencia integer not null ,
    doc_cantidad integer,
    doc_objeto_uso varchar(150),
    primary key (doc_codigo)  constraint pk_codigo_documento
  );

revoke all on fp_documentos from "public";

{ TABLE fp_seguridad row size = 28 number of columns = 6 index size = 18 }

create table fp_seguridad 
  (
    sec_codigo integer not null ,
    sec_catalogo integer not null ,
    sec_fecha datetime year to second not null ,
    sec_estado integer not null ,
    sec_documento integer not null ,
    sec_respuesta integer not null ,
    primary key (sec_codigo)  constraint pk_codigo_seguro
  );

revoke all on fp_seguridad from "public";

{ TABLE lenguas row size = 35 number of columns = 4 index size = 7 }

create table lenguas 
  (
    leng_id smallint not null ,
    leng_desc char(30) not null ,
    leng_clase char(2) not null ,
    leng_situacion char(1) not null ,
    primary key (leng_id) 
  );

revoke all on lenguas from "public";

{ TABLE etnias row size = 35 number of columns = 4 index size = 7 }

create table etnias 
  (
    etn_id smallint not null ,
    etn_desc char(30) not null ,
    etn_clase char(2) not null ,
    etn_situacion char(1) not null ,
    primary key (etn_id) 
  );

revoke all on etnias from "public";

{ TABLE act_etnia row size = 15 number of columns = 6 index size = 23 }

create table act_etnia 
  (
    et_cat integer not null ,
    et_etnia smallint not null ,
    et_fec date,
    et_leng smallint not null ,
    et_clase char(2) not null ,
    et_sit char(1) not null ,
    primary key (et_cat) 
  );

revoke all on act_etnia from "public";

{ TABLE ep_mper row size = 296 number of columns = 37 index size = 0 }

create table ep_mper 
  (
    per_control serial not null ,
    per_catalogo char(6) not null ,
    per_serie char(8),
    per_grado smallint not null ,
    per_arma smallint not null ,
    per_nom1 char(15) not null ,
    per_nom2 char(15),
    per_ape1 char(15) not null ,
    per_ape2 char(15),
    per_ape3 char(15),
    per_ced_ord char(4) not null ,
    per_ced_reg char(20),
    per_fec_ext_ced date,
    per_ext_ced_lugar char(4) not null ,
    per_est_civil char(1),
    per_direccion char(50),
    per_zona smallint,
    per_dir_lugar char(4) not null ,
    per_telefono integer,
    per_sexo char(1) not null ,
    per_fec_nac date not null ,
    per_nac_lugar char(4) not null ,
    per_promocion smallint,
    per_afil_ipm char(1) not null ,
    per_sangre char(3) not null ,
    per_antiguedad smallint,
    per_bienal smallint not null ,
    per_plaza integer not null ,
    per_desc_empleo char(45) not null ,
    per_fec_nomb date not null ,
    per_ord_gral char(7),
    per_punto_og smallint,
    per_situacion char(2) not null ,
    per_prima_prof smallint,
    per_dpi char(15),
    per_cambio smallint,
    per_fecambio date
  );

revoke all on ep_mper from "public";

{ TABLE controlorgep row size = 611 number of columns = 6 index size = 0 }

create table controlorgep 
  (
    con_codigo serial not null ,
    con_ordeno char(200) not null ,
    con_autorizo char(200) not null ,
    con_plan char(200) not null ,
    con_fecha datetime year to day 
        default current year to day,
    con_situacion smallint
  );

revoke all on controlorgep from "public";

{ TABLE aud_fp_fondo row size = 538 number of columns = 9 index size = 0 }

create table aud_fp_fondo 
  (
    fon_codigo integer,
    fon_desc varchar(250),
    fon_stat integer,
    desp_fon_codigo integer,
    desp_fon_desc varchar(250),
    desp_fon_stat integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fp_fondo from "public";

{ TABLE aud_fp_uso row size = 538 number of columns = 9 index size = 0 }

create table aud_fp_uso 
  (
    uso_codigo integer,
    uso_desc varchar(250),
    uso_stat integer,
    desp_uso_codigo integer,
    desp_uso_desc varchar(250),
    desp_uso_stat integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fp_uso from "public";

{ TABLE aud_fp_estado row size = 538 number of columns = 9 index size = 0 }

create table aud_fp_estado 
  (
    est_codigo integer,
    est_desc varchar(250),
    est_stat integer,
    desp_est_codigo integer,
    desp_est_desc varchar(250),
    desp_est_stat integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fp_estado from "public";

{ TABLE aud_fp_clasificacion row size = 538 number of columns = 9 index size = 0 }

create table aud_fp_clasificacion 
  (
    clas_codigo integer,
    clas_desc varchar(250),
    clas_stat integer,
    desp_clas_codigo integer,
    desp_clas_desc varchar(250),
    desp_clas_stat integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fp_clasificacion from "public";

{ TABLE fp_respuesta row size = 1032 number of columns = 10 index size = 18 }

create table fp_respuesta 
  (
    res_codigo integer not null ,
    res_titulo varchar(250) not null ,
    res_descripcion varchar(250) not null ,
    res_tamanio integer not null ,
    res_tipo varchar(250) not null ,
    res_nombre_archivo varchar(250) not null ,
    res_fec datetime year to second not null ,
    res_status integer not null ,
    res_catalogo integer not null ,
    res_dependencia integer not null ,
    primary key (res_codigo)  constraint pk_codigo_respuesta
  );

revoke all on fp_respuesta from "public";

{ TABLE aud_fp_respuesta row size = 2084 number of columns = 23 index size = 0 }

create table aud_fp_respuesta 
  (
    res_codigo integer,
    res_titulo varchar(250),
    res_descripcion varchar(250),
    res_tamanio integer,
    res_tipo varchar(250),
    res_nombre_archivo varchar(250),
    res_fec datetime year to second,
    res_status integer,
    res_catalogo integer,
    res_dependencia integer,
    desp_res_codigo integer,
    desp_res_titulo varchar(250),
    desp_res_descripcion varchar(250),
    desp_res_tamanio integer,
    desp_res_tipo varchar(250),
    desp_res_nombre_archivo varchar(250),
    desp_res_fec datetime year to second,
    desp_res_status integer,
    desp_res_catalogo integer,
    desp_res_dependencia integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fp_respuesta from "public";

{ TABLE fag_tip_aeronave row size = 65 number of columns = 4 index size = 9 }

create table fag_tip_aeronave 
  (
    aer_tip_registro serial not null ,
    aer_desc_aeronave varchar(50),
    aer_tip_ala varchar(8),
    aer_tip_situacion char(1),
    primary key (aer_tip_registro) 
  );

revoke all on fag_tip_aeronave from "public";

{ TABLE fag_aero_gt row size = 28 number of columns = 5 index size = 25 }

create table fag_aero_gt 
  (
    aero_id serial not null ,
    aero_matricula varchar(10),
    aero_tip_aeronave integer,
    aero_hrs_voladas float,
    aero_situacion char(1),
    primary key (aero_matricula) 
  );

revoke all on fag_aero_gt from "public";

{ TABLE fag_dep_estado row size = 232 number of columns = 4 index size = 9 }

create table fag_dep_estado 
  (
    dep_est_registro serial not null ,
    dep_est_desc_lg varchar(150),
    dep_est_desc_ct varchar(75),
    dep_est_situacion char(1),
    primary key (dep_est_registro) 
  );

revoke all on fag_dep_estado from "public";

{ TABLE fag_hrs_historial_vuelo row size = 54 number of columns = 8 index size = 9 }

create table fag_hrs_historial_vuelo 
  (
    hist_catalogo integer,
    hist_hrs_dia float,
    hist_hrs_noche float,
    hist_hrs_nav float,
    hist_hrs_instrum float,
    hist_horas_total float,
    hist_ala varchar(8),
    hist_situacion char(1),
    primary key (hist_catalogo) 
  );

revoke all on fag_hrs_historial_vuelo from "public";

{ TABLE fag_rep_mision_vuelo row size = 842 number of columns = 22 index size = 34 }

create table fag_rep_mision_vuelo 
  (
    rep_registro serial not null ,
    rep_fecha date,
    rep_matricula varchar(10),
    rep_cat_piloto_mili integer,
    rep_piloto_civ varchar(100),
    rep_cat_copiloto_mili integer,
    rep_copiloto_civ varchar(100),
    rep_cat_3ernav_mili integer,
    rep_3ernav_civ varchar(100),
    rep_invitado varchar(100),
    rep_hrs_voladas_dia float,
    rep_hrs_voladas_noche float,
    rep_hrs_voladas_nvg float,
    rep_hrs_voladas_instrum float,
    rep_hrs_voladas_total float,
    rep_dep_ejercito smallint,
    rep_dep_estado integer,
    rep_cant_pasa integer,
    rep_nom_pasa varchar(250),
    rep_obs varchar(100),
    rep_cat_of_op integer,
    rep_situacion char(1),
    primary key (rep_registro) 
  );

revoke all on fag_rep_mision_vuelo from "public";

{ TABLE fag_dest_vuelos row size = 269 number of columns = 6 index size = 25 }

create table fag_dest_vuelos 
  (
    dest_registro serial not null ,
    dest_pais smallint,
    dest_depto char(4),
    dest_mun char(4),
    dest_otros varchar(250),
    dest_reg_rmv integer,
    primary key (dest_registro) 
  );

revoke all on fag_dest_vuelos from "public";

{ TABLE fag_rep_consumo_combustible row size = 16 number of columns = 3 index size = 18 }

create table fag_rep_consumo_combustible 
  (
    comb_id serial not null ,
    comb_cantidad float,
    comb_reg_vuelo integer,
    primary key (comb_id) 
  );

revoke all on fag_rep_consumo_combustible from "public";

{ TABLE fag_vuelo_mision row size = 85 number of columns = 22 index size = 18 }

create table fag_vuelo_mision 
  (
    mision_id serial not null ,
    mision_reco char(1),
    mision_transporte char(1),
    mision_ferry char(1),
    mision_ev_med char(1),
    mision_cobertura char(1),
    mision_abasto char(1),
    mision_pist_clandest char(1),
    mision_lanz_paraca char(1),
    mision_areas_front char(1),
    mision_sofoc_incend char(1),
    mision_desas_natur char(1),
    mision_comb_narco char(1),
    mision_instruccion char(1),
    mision_manto char(1),
    mision_emerg_nac char(1),
    mision_det_emerg varchar(50),
    mision_estandarizacion char(1),
    mision_patrulla char(1),
    mision_registro_vuelo integer,
    mision_hrs float,
    mision_situacion char(1),
    primary key (mision_id) 
  );

revoke all on fag_vuelo_mision from "public";

{ TABLE aud_fp_documentos row size = 4633 number of columns = 49 index size = 0 }

create table aud_fp_documentos 
  (
    doc_codigo integer,
    doc_titulo varchar(250),
    doc_descripcion varchar(250),
    doc_tamanio integer,
    doc_tipo varchar(250),
    doc_nombre_archivo varchar(250),
    doc_respuesta integer,
    doc_fec_ini datetime year to second,
    doc_fec_print datetime year to second,
    doc_fec_fin datetime year to second,
    doc_obs1 varchar(250),
    doc_obs2 varchar(250),
    doc_obs3 varchar(250),
    doc_fondo integer,
    doc_uso integer,
    doc_estado integer,
    doc_clasificacion integer,
    doc_monto decimal(18,2),
    doc_prov varchar(250),
    doc_catalogo integer,
    doc_dependencia integer,
    doc_cantidad integer,
    doc_objeto_uso varchar(150),
    desp_doc_codigo integer,
    desp_doc_titulo varchar(250),
    desp_doc_descripcion varchar(250),
    desp_doc_tamanio integer,
    desp_doc_tipo varchar(250),
    desp_doc_nombre_archivo varchar(250),
    desp_doc_respuesta integer,
    desp_doc_fec_ini datetime year to second,
    desp_doc_fec_print datetime year to second,
    desp_doc_fec_fin datetime year to second,
    desp_doc_obs1 varchar(250),
    desp_doc_obs2 varchar(250),
    desp_doc_obs3 varchar(250),
    desp_doc_fondo integer,
    desp_doc_uso integer,
    desp_doc_estado integer,
    desp_doc_clasificacion varchar(150),
    desp_doc_monto decimal(18,2),
    desp_doc_prov varchar(250),
    desp_doc_catalogo integer,
    desp_doc_dependencia integer,
    desp_doc_cantidad integer,
    desp_doc_objeto_uso varchar(150),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fp_documentos from "public";

{ TABLE aud_fp_seguridad row size = 76 number of columns = 15 index size = 0 }

create table aud_fp_seguridad 
  (
    sec_codigo integer,
    sec_catalogo integer,
    sec_fecha datetime year to second,
    sec_estado integer,
    sec_documento integer,
    sec_respuesta integer,
    desp_sec_codigo integer,
    desp_sec_catalogo integer,
    desp_sec_fecha datetime year to second,
    desp_sec_estado integer,
    desp_sec_documento integer,
    desp_sec_respuesta integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fp_seguridad from "public";

{ TABLE aud_fag_tip_aeronave row size = 150 number of columns = 11 index size = 0 }

create table aud_fag_tip_aeronave 
  (
    aer_tip_registro integer,
    aer_desc_aeronave varchar(50),
    aer_tip_ala varchar(8),
    aer_tip_situacion char(1),
    desp_aer_tip_registro integer,
    desp_aer_desc_aeronave varchar(50),
    desp_aer_tip_ala varchar(8),
    desp_aer_tip_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_tip_aeronave from "public";

{ TABLE aud_fag_aero_gt row size = 76 number of columns = 13 index size = 0 }

create table aud_fag_aero_gt 
  (
    aero_id integer,
    aero_matricula varchar(10),
    aero_tip_aeronave integer,
    aero_hrs_voladas float,
    aero_situacion char(1),
    desp_aero_id integer,
    desp_aero_matricula varchar(10),
    desp_aero_tip_aeronave integer,
    desp_aero_hrs_voladas float,
    desp_aero_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_aero_gt from "public";

{ TABLE aud_fag_dep_estado row size = 484 number of columns = 11 index size = 0 }

create table aud_fag_dep_estado 
  (
    dep_est_registro integer,
    dep_est_desc_lg varchar(150),
    dep_est_desc_ct varchar(75),
    dep_est_situacion char(1),
    desp_dep_est_registro integer,
    desp_dep_est_desc_lg varchar(150),
    desp_dep_est_desc_ct varchar(75),
    desp_dep_est_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_dep_estado from "public";

{ TABLE aud_fag_hrs_historial_vuelo row size = 128 number of columns = 19 index size = 0 }

create table aud_fag_hrs_historial_vuelo 
  (
    hist_catalogo integer,
    hist_hrs_dia float,
    hist_hrs_noche float,
    hist_hrs_nav float,
    hist_hrs_instrum float,
    hist_horas_total float,
    hist_ala varchar(8),
    hist_situacion char(1),
    desp_hist_catalogo integer,
    desp_hist_hrs_dia float,
    desp_hist_hrs_noche float,
    desp_hist_hrs_nav float,
    desp_hist_hrs_instrum float,
    desp_hist_horas_total float,
    desp_hist_ala varchar(8),
    desp_hist_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_hrs_historial_vuelo from "public";

{ TABLE aud_fag_dest_vuelos row size = 558 number of columns = 15 index size = 0 }

create table aud_fag_dest_vuelos 
  (
    dest_registro integer,
    dest_pais smallint,
    dest_depto char(4),
    dest_mun char(4),
    dest_otros varchar(250),
    dest_reg_rmv integer,
    desp_dest_registro integer,
    desp_dest_pais smallint,
    desp_dest_depto char(4),
    desp_dest_mun char(4),
    desp_dest_otros varchar(250),
    desp_dest_reg_rmv integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_dest_vuelos from "public";

{ TABLE aud_fag_rep_consumo_combustible row size = 52 number of columns = 9 index size = 0 }

create table aud_fag_rep_consumo_combustible 
  (
    comb_id integer,
    comb_cantidad float,
    comb_reg_vuelo integer,
    desp_comb_id integer,
    desp_comb_cantidad float,
    desp_comb_reg_vuelo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_rep_consumo_combustible from "public";

{ TABLE aud_fag_rep_mision_vuelo row size = 1704 number of columns = 47 index size = 0 }

create table aud_fag_rep_mision_vuelo 
  (
    rep_registro integer,
    rep_fecha date,
    rep_matricula varchar(10),
    rep_cat_piloto_mili integer,
    rep_piloto_civ varchar(100),
    rep_cat_copiloto_mili integer,
    rep_copiloto_civ varchar(100),
    rep_cat_3ernav_mili integer,
    rep_3ernav_civ varchar(100),
    rep_invitado varchar(100),
    rep_hrs_voladas_dia float,
    rep_hrs_voladas_noche float,
    rep_hrs_voladas_nvg float,
    rep_hrs_voladas_instrum float,
    rep_hrs_voladas_total float,
    rep_dep_ejercito smallint,
    rep_dep_estado integer,
    rep_cant_pasa integer,
    rep_nom_pasa varchar(250),
    rep_obs varchar(100),
    rep_cat_of_op integer,
    rep_situacion char(1),
    desp_rep_registro integer,
    desp_rep_fecha date,
    desp_rep_matricula varchar(10),
    desp_rep_cat_piloto_mili integer,
    desp_rep_piloto_civ varchar(100),
    desp_rep_cat_copiloto_mili integer,
    desp_rep_copiloto_civ varchar(100),
    desp_rep_cat_3ernav_mili integer,
    desp_rep_3ernav_civ varchar(100),
    desp_rep_invitado varchar(100),
    desp_rep_hrs_voladas_dia float,
    desp_rep_hrs_voladas_noche float,
    desp_rep_hrs_voladas_nvg float,
    desp_rep_hrs_voladas_instrum float,
    desp_rep_hrs_voladas_total float,
    desp_rep_dep_ejercito smallint,
    desp_rep_dep_estado integer,
    desp_rep_cant_pasa integer,
    desp_rep_nom_pasa varchar(250),
    desp_rep_obs varchar(100),
    desp_rep_cat_of_op integer,
    desp_rep_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_rep_mision_vuelo from "public";

{ TABLE aud_fag_vuelo_mision row size = 190 number of columns = 47 index size = 0 }

create table aud_fag_vuelo_mision 
  (
    mision_id integer,
    mision_reco char(1),
    mision_transporte char(1),
    mision_ferry char(1),
    mision_ev_med char(1),
    mision_cobertura char(1),
    mision_abasto char(1),
    mision_pist_clandest char(1),
    mision_lanz_paraca char(1),
    mision_areas_front char(1),
    mision_sofoc_incend char(1),
    mision_desas_natur char(1),
    mision_comb_narco char(1),
    mision_instruccion char(1),
    mision_manto char(1),
    mision_emerg_nac char(1),
    mision_det_emerg varchar(50),
    mision_estandarizacion char(1),
    mision_patrulla char(1),
    mision_registro_vuelo integer,
    mision_hrs float,
    mision_situacion char(1),
    desp_mision_id integer,
    desp_mision_reco char(1),
    desp_mision_transporte char(1),
    desp_mision_ferry char(1),
    desp_mision_ev_med char(1),
    desp_mision_cobertura char(1),
    desp_mision_abasto char(1),
    desp_mision_pist_clandest char(1),
    desp_mision_lanz_paraca char(1),
    desp_mision_areas_front char(1),
    desp_mision_sofoc_incend char(1),
    desp_mision_desas_natur char(1),
    desp_mision_comb_narco char(1),
    desp_mision_instruccion char(1),
    desp_mision_manto char(1),
    desp_mision_emerg_nac char(1),
    desp_mision_det_emerg varchar(50),
    desp_mision_estandarizacion char(1),
    desp_mision_patrulla char(1),
    desp_mision_registro_vuelo integer,
    desp_mision_hrs float,
    desp_mision_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_vuelo_mision from "public";

{ TABLE aud_act_etnia row size = 50 number of columns = 15 index size = 0 }

create table aud_act_etnia 
  (
    et_cat integer,
    et_etnia smallint,
    et_fec date,
    et_leng smallint,
    et_clase char(2),
    et_sit char(1),
    desp_et_cat integer,
    desp_et_etnia smallint,
    desp_et_fec date,
    desp_et_leng smallint,
    desp_et_clase char(2),
    desp_et_sit char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_act_etnia from "public";

{ TABLE aud_etnias row size = 90 number of columns = 11 index size = 0 }

create table aud_etnias 
  (
    etn_id smallint,
    etn_desc char(30),
    etn_clase char(2),
    etn_situacion char(1),
    desp_etn_id smallint,
    desp_etn_desc char(30),
    desp_etn_clase char(2),
    desp_etn_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_etnias from "public";

{ TABLE aud_far_contrato row size = 1040 number of columns = 11 index size = 0 }

create table aud_far_contrato 
  (
    con_id integer,
    con_desc varchar(250),
    con_situacion integer,
    con_observacion varchar(250),
    desp_con_id integer,
    desp_con_desc varchar(250),
    desp_con_situacion integer,
    desp_con_observacion varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_far_contrato from "public";

{ TABLE far_forma_pago row size = 259 number of columns = 3 index size = 9 }

create table far_forma_pago 
  (
    form_id integer not null ,
    form_desc varchar(250),
    form_situacion integer,
    primary key (form_id) 
  );

revoke all on far_forma_pago from "public";

{ TABLE aud_far_proveedor row size = 5088 number of columns = 35 index size = 0 }

create table aud_far_proveedor 
  (
    prov_id integer,
    prov_nom_emp varchar(250),
    prov_dir_emp varchar(250),
    prov_tel1_emp integer,
    prov_tel2_emp integer,
    prov_correo_emp varchar(250),
    prov_nom1_enc varchar(250),
    prov_nom2_enc varchar(250),
    prov_ape1_enc varchar(250),
    prov_ape2_enc varchar(250),
    prov_dir_enc varchar(250),
    prov_tel1_enc integer,
    prov_tel2_enc integer,
    prov_correo_enc varchar(250),
    prov_situacion integer,
    prov_observacion varchar(250),
    desp_prov_id integer,
    desp_prov_nom_emp varchar(250),
    desp_prov_dir_emp varchar(250),
    desp_prov_tel1_emp integer,
    desp_prov_tel2_emp integer,
    desp_prov_correo_emp varchar(250),
    desp_prov_nom1_enc varchar(250),
    desp_prov_nom2_enc varchar(250),
    desp_prov_ape1_enc varchar(250),
    desp_prov_ape2_enc varchar(250),
    desp_prov_dir_enc varchar(250),
    desp_prov_tel1_enc integer,
    desp_prov_tel2_enc integer,
    desp_prov_correo_enc varchar(250),
    desp_prov_situacion integer,
    desp_prov_observacion varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_far_proveedor from "public";

{ TABLE farma_dependencias_asignadas row size = 14 number of columns = 4 index size = 16 }

create table farma_dependencias_asignadas 
  (
    dep_asig_id serial not null ,
    dep_asig_uni_eje integer,
    dep_asig_dep smallint,
    dep_asig_sit integer,
    primary key (dep_asig_id) 
  );

revoke all on farma_dependencias_asignadas from "public";

{ TABLE com_uniejec row size = 489 number of columns = 5 index size = 9 }

create table com_uniejec 
  (
    uni_codigo integer,
    uni_desc_lg varchar(255),
    uni_desc_ct varchar(200),
    uni_obs varchar(25),
    uni_sit varchar(1,1),
    primary key (uni_codigo) 
  );

revoke all on com_uniejec from "public";

{ TABLE aud_com_uniejec row size = 998 number of columns = 13 index size = 0 }

create table aud_com_uniejec 
  (
    uni_codigo integer,
    uni_desc_lg varchar(255),
    uni_desc_ct varchar(200),
    uni_obs varchar(25),
    uni_sit varchar(1,1),
    desp_uni_codigo integer,
    desp_uni_desc_lg varchar(255),
    desp_uni_desc_ct varchar(200),
    desp_uni_obs varchar(25),
    desp_uni_sit varchar(1,1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_com_uniejec from "public";

{ TABLE aud_far_forma_pago row size = 538 number of columns = 9 index size = 0 }

create table aud_far_forma_pago 
  (
    form_id integer,
    form_desc varchar(250),
    form_situacion integer,
    desp_form_id integer,
    desp_form_desc varchar(250),
    desp_form_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_far_forma_pago from "public";

{ TABLE aud_farma_presentaciones row size = 952 number of columns = 13 index size = 0 }

create table aud_farma_presentaciones 
  (
    pres_id integer,
    pres_codigo varchar(100),
    pres_nom varchar(100),
    pres_sit integer,
    pres_obs varchar(255),
    desp_pres_id integer,
    desp_pres_codigo varchar(100),
    desp_pres_nom varchar(100),
    desp_pres_sit integer,
    desp_pres_obs varchar(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_farma_presentaciones from "public";

{ TABLE aud_farma_unidades_medida row size = 952 number of columns = 13 index size = 0 }

create table aud_farma_unidades_medida 
  (
    uni_med_id integer,
    uni_med_desc_lg varchar(100),
    uni_med_desc_ct varchar(100),
    uni_med_sit integer,
    uni_med_obs varchar(255),
    desp_uni_med_id integer,
    desp_uni_med_desc_lg varchar(100),
    desp_uni_med_desc_ct varchar(100),
    desp_uni_med_sit integer,
    desp_uni_med_obs varchar(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_farma_unidades_medida from "public";

{ TABLE aud_farma_tipo_medicamentos row size = 750 number of columns = 11 index size = 0 }

create table aud_farma_tipo_medicamentos 
  (
    tipo_med_id integer,
    tipo_med_nom varchar(100),
    tipo_med_sit integer,
    tipo_med_obs varchar(255),
    desp_tipo_med_id integer,
    desp_tipo_med_nom varchar(100),
    desp_tipo_med_sit integer,
    desp_tipo_med_obs varchar(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_farma_tipo_medicamentos from "public";

{ TABLE aud_farma_renglones_presupuestarios row size = 1068 number of columns = 13 index size = 0 }

create table aud_farma_renglones_presupuestarios 
  (
    ren_pres_id integer,
    ren_pres_num integer,
    ren_pres_desc varchar(255),
    ren_pres_sit integer,
    ren_pres_obs varchar(255),
    desp_ren_pres_id integer,
    desp_ren_pres_num integer,
    desp_ren_pres_desc varchar(255),
    desp_ren_pres_sit integer,
    desp_ren_pres_obs varchar(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_farma_renglones_presupuestarios from "public";

{ TABLE aud_farma_facturacion row size = 1122 number of columns = 19 index size = 0 }

create table aud_farma_facturacion 
  (
    fac_id integer,
    fac_dep smallint,
    fac_dir varchar(255),
    fac_tel1 integer,
    fac_tel2 integer,
    fac_nit varchar(20),
    fac_sit integer,
    fac_obs varchar(255),
    desp_fac_id integer,
    desp_fac_dep smallint,
    desp_fac_dir varchar(255),
    desp_fac_tel1 integer,
    desp_fac_tel2 integer,
    desp_fac_nit varchar(20),
    desp_fac_sit integer,
    desp_fac_obs varchar(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_farma_facturacion from "public";

{ TABLE aud_farma_dependencias_asignadas row size = 48 number of columns = 11 index size = 0 }

create table aud_farma_dependencias_asignadas 
  (
    dep_asig_id integer,
    dep_asig_uni_eje integer,
    dep_asig_dep smallint,
    dep_asig_sit integer,
    desp_dep_asig_id integer,
    desp_dep_asig_uni_eje integer,
    desp_dep_asig_dep smallint,
    desp_dep_asig_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_farma_dependencias_asignadas from "public";

{ TABLE aud_farma_orden_compra row size = 990 number of columns = 21 index size = 0 }

create table aud_farma_orden_compra 
  (
    ord_comp_id integer,
    ord_comp_num varchar(200),
    ord_comp_dep smallint,
    ord_comp_cont integer,
    ord_comp_prov integer,
    ord_comp_sit integer,
    ord_comp_fech_creac datetime year to day,
    ord_comp_fech_impr datetime year to day,
    ord_comp_obs varchar(255),
    desp_ord_comp_id integer,
    desp_ord_comp_num varchar(200),
    desp_ord_comp_dep smallint,
    desp_ord_comp_cont integer,
    desp_ord_comp_prov integer,
    desp_ord_comp_sit integer,
    desp_ord_comp_fech_creac datetime year to day,
    desp_ord_comp_fech_impr datetime year to day,
    desp_ord_comp_obs varchar(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_farma_orden_compra from "public";

{ TABLE aud_farma_compra_asignada row size = 616 number of columns = 21 index size = 0 }

create table aud_farma_compra_asignada 
  (
    comp_asig_id integer,
    comp_asig_ord_id integer,
    comp_asig_ins integer,
    comp_asig_pres integer,
    comp_asig_cant integer,
    comp_asig_prec money(16,2),
    comp_asig_total money(16,2),
    comp_asig_sit integer,
    comp_asig_obs varchar(255),
    desp_comp_asig_id integer,
    desp_comp_asig_ord_id integer,
    desp_comp_asig_ins integer,
    desp_comp_asig_pres integer,
    desp_comp_asig_cant integer,
    desp_comp_asig_prec money(16,2),
    desp_comp_asig_total money(16,2),
    desp_comp_asig_sit integer,
    desp_comp_asig_obs varchar(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_farma_compra_asignada from "public";

{ TABLE aud_farma_presentacion_asignada row size = 876 number of columns = 19 index size = 0 }

create table aud_farma_presentacion_asignada 
  (
    pres_asig_id integer,
    pres_asig_far_id integer,
    pres_asig_cod varchar(50),
    pres_asig_pres integer,
    pres_asig_uni_med integer,
    pres_asig_precio varchar(100),
    pres_asig_sit integer,
    pres_asig_obs varchar(255),
    desp_pres_asig_id integer,
    desp_pres_asig_far_id integer,
    desp_pres_asig_cod varchar(50),
    desp_pres_asig_pres integer,
    desp_pres_asig_uni_med integer,
    desp_pres_asig_precio varchar(100),
    desp_pres_asig_sit integer,
    desp_pres_asig_obs varchar(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_farma_presentacion_asignada from "public";

{ TABLE far_contrato row size = 510 number of columns = 4 index size = 9 }

create table far_contrato 
  (
    con_id integer not null ,
    con_desc varchar(250),
    con_situacion integer,
    con_observacion varchar(250),
    primary key (con_id) 
  );

revoke all on far_contrato from "public";

{ TABLE far_proveedor row size = 2534 number of columns = 16 index size = 9 }

create table far_proveedor 
  (
    prov_id integer not null ,
    prov_nom_emp varchar(250),
    prov_dir_emp varchar(250),
    prov_tel1_emp integer,
    prov_tel2_emp integer,
    prov_correo_emp varchar(250),
    prov_nom1_enc varchar(250),
    prov_nom2_enc varchar(250),
    prov_ape1_enc varchar(250),
    prov_ape2_enc varchar(250),
    prov_dir_enc varchar(250),
    prov_tel1_enc integer,
    prov_tel2_enc integer,
    prov_correo_enc varchar(250),
    prov_situacion integer,
    prov_observacion varchar(250),
    primary key (prov_id) 
  );

revoke all on far_proveedor from "public";

{ TABLE farma_presentaciones row size = 466 number of columns = 5 index size = 9 }

create table farma_presentaciones 
  (
    pres_id serial not null ,
    pres_codigo varchar(100),
    pres_nom varchar(100),
    pres_sit integer,
    pres_obs varchar(255),
    primary key (pres_id) 
  );

revoke all on farma_presentaciones from "public";

{ TABLE farma_unidades_medida row size = 466 number of columns = 5 index size = 9 }

create table farma_unidades_medida 
  (
    uni_med_id serial not null ,
    uni_med_desc_lg varchar(100),
    uni_med_desc_ct varchar(100),
    uni_med_sit integer,
    uni_med_obs varchar(255),
    primary key (uni_med_id) 
  );

revoke all on farma_unidades_medida from "public";

{ TABLE farma_tipo_medicamentos row size = 365 number of columns = 4 index size = 9 }

create table farma_tipo_medicamentos 
  (
    tipo_med_id serial not null ,
    tipo_med_nom varchar(100),
    tipo_med_sit integer,
    tipo_med_obs varchar(255),
    primary key (tipo_med_id) 
  );

revoke all on farma_tipo_medicamentos from "public";

{ TABLE farma_renglones_presupuestarios row size = 524 number of columns = 5 index size = 9 }

create table farma_renglones_presupuestarios 
  (
    ren_pres_id serial not null ,
    ren_pres_num integer,
    ren_pres_desc varchar(255),
    ren_pres_sit integer,
    ren_pres_obs varchar(255),
    primary key (ren_pres_id) 
  );

revoke all on farma_renglones_presupuestarios from "public";

{ TABLE farma_facturacion row size = 551 number of columns = 8 index size = 16 }

create table farma_facturacion 
  (
    fac_id serial not null ,
    fac_dep smallint,
    fac_dir varchar(255),
    fac_tel1 integer,
    fac_tel2 integer,
    fac_nit varchar(20),
    fac_sit integer,
    fac_obs varchar(255),
    primary key (fac_id) 
  );

revoke all on farma_facturacion from "public";

{ TABLE farma_orden_compra row size = 485 number of columns = 9 index size = 34 }

create table farma_orden_compra 
  (
    ord_comp_id serial not null ,
    ord_comp_num varchar(200),
    ord_comp_dep smallint,
    ord_comp_cont integer,
    ord_comp_prov integer,
    ord_comp_sit integer,
    ord_comp_fech_creac datetime year to day,
    ord_comp_fech_impr datetime year to day,
    ord_comp_obs varchar(255),
    primary key (ord_comp_id) 
  );

revoke all on farma_orden_compra from "public";

{ TABLE farma_compra_asignada row size = 298 number of columns = 9 index size = 27 }

create table farma_compra_asignada 
  (
    comp_asig_id serial not null ,
    comp_asig_ord_id integer,
    comp_asig_ins integer,
    comp_asig_pres integer,
    comp_asig_cant integer,
    comp_asig_prec money(16,2),
    comp_asig_total money(16,2),
    comp_asig_sit integer,
    comp_asig_obs varchar(255),
    primary key (comp_asig_id) 
  );

revoke all on farma_compra_asignada from "public";

{ TABLE farma_presentacion_asignada row size = 428 number of columns = 8 index size = 27 }

create table farma_presentacion_asignada 
  (
    pres_asig_id serial not null ,
    pres_asig_far_id integer,
    pres_asig_cod varchar(50),
    pres_asig_pres integer,
    pres_asig_uni_med integer,
    pres_asig_precio varchar(100),
    pres_asig_sit integer,
    pres_asig_obs varchar(255),
    primary key (pres_asig_id) 
  );

revoke all on farma_presentacion_asignada from "public";

{ TABLE res_situacion row size = 108 number of columns = 4 index size = 9 }

create table res_situacion 
  (
    sit_res_id integer not null ,
    sit_res_situacion varchar(50) not null ,
    sit_res_obs varchar(50),
    sit_res_sit char(2),
    primary key (sit_res_id) 
  );

revoke all on res_situacion from "public";

{ TABLE aud_res_situacion row size = 236 number of columns = 11 index size = 0 }

create table aud_res_situacion 
  (
    sit_res_id integer,
    sit_res_situacion varchar(50),
    sit_res_obs varchar(50),
    sit_res_sit char(2),
    desp_sit_res_id integer,
    desp_sit_res_situacion varchar(50),
    desp_sit_res_obs varchar(50),
    desp_sit_res_sit char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_res_situacion from "public";

{ TABLE res_tipo row size = 108 number of columns = 4 index size = 9 }

create table res_tipo 
  (
    tip_id integer not null ,
    tip_descripcion varchar(50) not null ,
    tip_obs varchar(50) 
        default null,
    tip_situacion char(2) 
        default null,
    primary key (tip_id) 
  );

revoke all on res_tipo from "public";

{ TABLE aud_res_tipo row size = 236 number of columns = 11 index size = 0 }

create table aud_res_tipo 
  (
    tip_id integer,
    tip_descripcion varchar(50),
    tip_obs varchar(50),
    tip_situacion char(2),
    desp_tip_id integer,
    desp_tip_descripcion varchar(50),
    desp_tip_obs varchar(50),
    desp_tip_situacion char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_res_tipo from "public";

{ TABLE mprof row size = 178 number of columns = 4 index size = 7 }

create table mprof 
  (
    prof_codigo smallint not null ,
    prof_desc_lg char(100),
    prof_desc_ct char(75),
    prof_clase char(1),
    primary key (prof_codigo) 
  );

revoke all on mprof from "public";

{ TABLE aud_mprof row size = 376 number of columns = 11 index size = 0 }

create table aud_mprof 
  (
    prof_codigo smallint,
    prof_desc_lg char(100),
    prof_desc_ct char(75),
    prof_clase char(1),
    desp_prof_codigo smallint,
    desp_prof_desc_lg char(100),
    desp_prof_desc_ct char(75),
    desp_prof_clase char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mprof from "public";

{ TABLE personalc row size = 280 number of columns = 25 index size = 52 }

create table personalc 
  (
    cper_id integer not null ,
    cper_dpi char(15) not null ,
    cper_nombre1 char(15),
    cper_nombre2 char(15),
    cper_nombre3 char(15),
    cper_apellido1 char(15),
    cper_apellido2 char(15),
    cper_apellido3 char(15),
    cper_direccion char(50),
    cper_estado_civil char(1),
    cper_sexo char(1),
    cper_sangre smallint,
    cper_profesion smallint,
    cper_telefono integer,
    cper_celular integer,
    cper_email varchar(50),
    cper_fecha_nacimiento date,
    cper_dep_nacimiento char(4),
    cper_muni_nacimiento char(4),
    cper_religion smallint,
    cper_nit varchar(12),
    cper_situacion smallint,
    cper_app varchar(4),
    cper_na1 varchar(10),
    cper_na2 varchar(10),
    primary key (cper_dpi) 
  );

revoke all on personalc from "public";

{ TABLE res_fam row size = 130 number of columns = 11 index size = 29 }

create table res_fam 
  (
    fam_id serial not null ,
    fam_dpi_parentesco char(15),
    fam_dpi char(15),
    fam_nom1 char(15),
    fam_nom2 char(15),
    fam_nom3 char(15),
    fam_ape1 char(15),
    fam_ape2 char(15),
    fam_ape3 char(15),
    fam_tel integer,
    fam_parentezco smallint,
    primary key (fam_id) 
  );

revoke all on res_fam from "public";

{ TABLE res_mdep row size = 128 number of columns = 8 index size = 16 }

create table res_mdep 
  (
    dep_id smallint not null ,
    dep_departamento char(4) not null ,
    dep_direccion varchar(50) 
        default null,
    dep_coord_lat decimal(9,7) 
        default null,
    dep_coord_long decimal(9,7) 
        default null,
    dep_telefono integer 
        default null,
    dep_email varchar(50) not null ,
    dep_situacion char(4) not null ,
    primary key (dep_id) 
  );

revoke all on res_mdep from "public";

{ TABLE res_reservas row size = 117 number of columns = 19 index size = 75 }

create table res_reservas 
  (
    reg_id serial not null ,
    reg_codigo integer,
    reg_catalogo integer 
        default null,
    reg_fec_ext_dpi date 
        default null,
    reg_dpi_dep char(4) not null ,
    reg_dpi_mun char(4) 
        default null,
    reg_escol_grado integer 
        default null,
    reg_fec_ingreso_rm date 
        default null,
    reg_lugar_entren smallint not null ,
    reg_fec_fin_curso date 
        default null,
    reg_no_cert integer 
        default null,
    reg_dep smallint 
        default null,
    reg_fech_alta date 
        default null,
    reg_fech_baja date 
        default null,
    reg_profesion smallint,
    reg_tipo integer 
        default null,
    reg_situacion integer 
        default null,
    reg_obs varchar(50) 
        default null,
    reg_det_sit integer,
    primary key (reg_id) 
  );

revoke all on res_reservas from "public";

{ TABLE res_asig_per row size = 14 number of columns = 4 index size = 25 }

create table res_asig_per 
  (
    ape_id serial not null ,
    ape_catalogo integer not null ,
    ape_dep smallint not null ,
    ape_situacion integer not null ,
    primary key (ape_id) 
  );

revoke all on res_asig_per from "public";

{ TABLE ddhh_gest row size = 310 number of columns = 17 index size = 18 }

create table ddhh_gest 
  (
    gest_id serial not null ,
    gest_cat integer,
    gest_edad char(2),
    gest_grav_inic date,
    gest_grav_fin date,
    gest_pren_inic date,
    gest_pren_fin date,
    gest_fech_parto date,
    gest_post_inic date,
    gest_post_fin date,
    gest_lact_inic date,
    gest_lact_fin date,
    gest_region integer,
    gest_tip_embarazo integer,
    gest_tip_parto integer,
    gest_obs varchar(250),
    gest_situacion char(1),
    primary key (gest_id) 
  );

revoke all on ddhh_gest from "public";

{ TABLE ddhh_gest_cont row size = 310 number of columns = 17 index size = 18 }

create table ddhh_gest_cont 
  (
    gest_cont_id integer,
    gest_cont_perc_id integer,
    gest_cont_edad char(2),
    gest_cont_grav_inic date,
    gest_cont_grav_fin date,
    gest_cont_pren_inic date,
    gest_cont_pren_fin date,
    gest_cont_fech_parto date,
    gest_cont_post_inic date,
    gest_cont_post_fin date,
    gest_cont_lact_inic date,
    gest_cont_lact_fin date,
    gest_cont_region integer,
    gest_cont_tip_embarazo integer,
    gest_cont_tip_parto integer,
    gest_cont_obs varchar(250),
    gest_cont_situacion char(1),
    primary key (gest_cont_id) 
  );

revoke all on ddhh_gest_cont from "public";

{ TABLE aud_personalc row size = 580 number of columns = 53 index size = 0 }

create table aud_personalc 
  (
    cper_id integer,
    cper_dpi char(15),
    cper_nombre1 char(15),
    cper_nombre2 char(15),
    cper_nombre3 char(15),
    cper_apellido1 char(15),
    cper_apellido2 char(15),
    cper_apellido3 char(15),
    cper_direccion char(50),
    cper_estado_civil char(1),
    cper_sexo char(1),
    cper_sangre smallint,
    cper_profesion smallint,
    cper_telefono integer,
    cper_celular integer,
    cper_email varchar(50),
    cper_fecha_nacimiento date,
    cper_dep_nacimiento char(4),
    cper_muni_nacimiento char(4),
    cper_religion smallint,
    cper_nit varchar(12),
    cper_situacion smallint,
    cper_app varchar(4),
    cper_na1 varchar(10),
    cper_na2 varchar(10),
    desp_cper_id integer,
    desp_cper_dpi char(15),
    desp_cper_nombre1 char(15),
    desp_cper_nombre2 char(15),
    desp_cper_nombre3 char(15),
    desp_cper_apellido1 char(15),
    desp_cper_apellido2 char(15),
    desp_cper_apellido3 char(15),
    desp_cper_direccion char(50),
    desp_cper_estado_civil char(1),
    desp_cper_sexo char(1),
    desp_cper_sangre smallint,
    desp_cper_profesion smallint,
    desp_cper_telefono integer,
    desp_cper_celular integer,
    desp_cper_email varchar(50),
    desp_cper_fecha_nacimiento date,
    desp_cper_dep_nacimiento char(4),
    desp_cper_muni_nacimiento char(4),
    desp_cper_religion smallint,
    desp_cper_nit varchar(12),
    desp_cper_situacion smallint,
    desp_cper_app varchar(4),
    desp_cper_na1 varchar(10),
    desp_cper_na2 varchar(10),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_personalc from "public";

{ TABLE aud_res_fam row size = 280 number of columns = 25 index size = 0 }

create table aud_res_fam 
  (
    fam_id integer,
    fam_dpi_parentesco char(15),
    fam_dpi char(15),
    fam_nom1 char(15),
    fam_nom2 char(15),
    fam_nom3 char(15),
    fam_ape1 char(15),
    fam_ape2 char(15),
    fam_ape3 char(15),
    fam_tel integer,
    fam_parentezco smallint,
    desp_fam_id integer,
    desp_fam_dpi_parentesco char(15),
    desp_fam_dpi char(15),
    desp_fam_nom1 char(15),
    desp_fam_nom2 char(15),
    desp_fam_nom3 char(15),
    desp_fam_ape1 char(15),
    desp_fam_ape2 char(15),
    desp_fam_ape3 char(15),
    desp_fam_tel integer,
    desp_fam_parentezco smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_res_fam from "public";

{ TABLE aud_res_reservas row size = 254 number of columns = 41 index size = 0 }

create table aud_res_reservas 
  (
    reg_id integer,
    reg_codigo integer,
    reg_catalogo integer,
    reg_fec_ext_dpi date,
    reg_dpi_dep char(4),
    reg_dpi_mun char(4),
    reg_escol_grado integer,
    reg_fec_ingreso_rm date,
    reg_lugar_entren smallint,
    reg_fec_fin_curso date,
    reg_no_cert integer,
    reg_dep smallint,
    reg_fech_alta date,
    reg_fech_baja date,
    reg_profesion smallint,
    reg_tipo integer,
    reg_situacion integer,
    reg_obs varchar(50),
    reg_det_sit integer,
    desp_reg_id integer,
    desp_reg_codigo integer,
    desp_reg_catalogo integer,
    desp_reg_fec_ext_dpi date,
    desp_reg_dpi_dep char(4),
    desp_reg_dpi_mun char(4),
    desp_reg_escol_grado integer,
    desp_reg_fec_ingreso_rm date,
    desp_reg_lugar_entren smallint,
    desp_reg_fec_fin_curso date,
    desp_reg_no_cert integer,
    desp_reg_dep smallint,
    desp_reg_fech_alta date,
    desp_reg_fech_baja date,
    desp_reg_profesion smallint,
    desp_reg_tipo integer,
    desp_reg_situacion integer,
    desp_reg_obs varchar(50),
    desp_reg_det_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_res_reservas from "public";

{ TABLE aud_res_asig_per row size = 48 number of columns = 11 index size = 0 }

create table aud_res_asig_per 
  (
    ape_id integer,
    ape_catalogo integer,
    ape_dep smallint,
    ape_situacion integer,
    desp_ape_id integer,
    desp_ape_catalogo integer,
    desp_ape_dep smallint,
    desp_ape_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_res_asig_per from "public";

{ TABLE aud_res_mdep row size = 276 number of columns = 19 index size = 0 }

create table aud_res_mdep 
  (
    dep_id smallint,
    dep_departamento char(4),
    dep_direccion varchar(50),
    dep_coord_lat decimal(9,7),
    dep_coord_long decimal(9,7),
    dep_telefono integer,
    dep_email varchar(50),
    dep_situacion char(4),
    desp_dep_id smallint,
    desp_dep_departamento char(4),
    desp_dep_direccion varchar(50),
    desp_dep_coord_lat decimal(9,7),
    desp_dep_coord_long decimal(9,7),
    desp_dep_telefono integer,
    desp_dep_email varchar(50),
    desp_dep_situacion char(4),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_res_mdep from "public";

{ TABLE aud_ddhh_gest row size = 640 number of columns = 37 index size = 0 }

create table aud_ddhh_gest 
  (
    gest_id integer,
    gest_cat integer,
    gest_edad char(2),
    gest_grav_inic date,
    gest_grav_fin date,
    gest_pren_inic date,
    gest_pren_fin date,
    gest_fech_parto date,
    gest_post_inic date,
    gest_post_fin date,
    gest_lact_inic date,
    gest_lact_fin date,
    gest_region integer,
    gest_tip_embarazo integer,
    gest_tip_parto integer,
    gest_obs varchar(250),
    gest_situacion char(1),
    desp_gest_id integer,
    desp_gest_cat integer,
    desp_gest_edad char(2),
    desp_gest_grav_inic date,
    desp_gest_grav_fin date,
    desp_gest_pren_inic date,
    desp_gest_pren_fin date,
    desp_gest_fech_parto date,
    desp_gest_post_inic date,
    desp_gest_post_fin date,
    desp_gest_lact_inic date,
    desp_gest_lact_fin date,
    desp_gest_region integer,
    desp_gest_tip_embarazo integer,
    desp_gest_tip_parto integer,
    desp_gest_obs varchar(250),
    desp_gest_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ddhh_gest from "public";

{ TABLE aud_ddhh_gest_cont row size = 640 number of columns = 37 index size = 0 }

create table aud_ddhh_gest_cont 
  (
    gest_cont_id integer,
    gest_cont_perc_id integer,
    gest_cont_edad char(2),
    gest_cont_grav_inic date,
    gest_cont_grav_fin date,
    gest_cont_pren_inic date,
    gest_cont_pren_fin date,
    gest_cont_fech_parto date,
    gest_cont_post_inic date,
    gest_cont_post_fin date,
    gest_cont_lact_inic date,
    gest_cont_lact_fin date,
    gest_cont_region integer,
    gest_cont_tip_embarazo integer,
    gest_cont_tip_parto integer,
    gest_cont_obs varchar(250),
    gest_cont_situacion char(1),
    desp_gest_cont_id integer,
    desp_gest_cont_perc_id integer,
    desp_gest_cont_edad char(2),
    desp_gest_cont_grav_inic date,
    desp_gest_cont_grav_fin date,
    desp_gest_cont_pren_inic date,
    desp_gest_cont_pren_fin date,
    desp_gest_cont_fech_parto date,
    desp_gest_cont_post_inic date,
    desp_gest_cont_post_fin date,
    desp_gest_cont_lact_inic date,
    desp_gest_cont_lact_fin date,
    desp_gest_cont_region integer,
    desp_gest_cont_tip_embarazo integer,
    desp_gest_cont_tip_parto integer,
    desp_gest_cont_obs varchar(250),
    desp_gest_cont_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ddhh_gest_cont from "public";

{ TABLE prueba row size = 20 number of columns = 2 index size = 0 }

create table prueba 
  (
    codigo integer not null ,
    desc varchar(15)
  );

revoke all on prueba from "public";

{ TABLE re22_areas row size = 107 number of columns = 3 index size = 9 }

create table re22_areas 
  (
    area_id integer not null ,
    area_desc varchar(100),
    area_sit smallint,
    primary key (area_id) 
  );

revoke all on re22_areas from "public";

{ TABLE re22_bancos row size = 107 number of columns = 3 index size = 9 }

create table re22_bancos 
  (
    banco_id integer not null ,
    banco_desc varchar(100),
    banco_sit smallint,
    primary key (banco_id) 
  );

revoke all on re22_bancos from "public";

{ TABLE re22_bono_escolar row size = 17 number of columns = 4 index size = 9 }

create table re22_bono_escolar 
  (
    bono_id integer,
    bono_year smallint,
    bono_cant money(16,2),
    bono_sit smallint,
    primary key (bono_id) 
  );

revoke all on re22_bono_escolar from "public";

{ TABLE re22_bono_vacacional row size = 17 number of columns = 4 index size = 9 }

create table re22_bono_vacacional 
  (
    bono_id integer,
    bono_year smallint,
    bono_cant money(16,2),
    bono_sit smallint,
    primary key (bono_id) 
  );

revoke all on re22_bono_vacacional from "public";

{ TABLE re22_tipos_descuentos row size = 30 number of columns = 3 index size = 7 }

create table re22_tipos_descuentos 
  (
    tip_id smallint,
    tip_desc varchar(25),
    tip_sit smallint,
    primary key (tip_id) 
  );

revoke all on re22_tipos_descuentos from "public";

{ TABLE re22_ocupaciones row size = 107 number of columns = 3 index size = 9 }

create table re22_ocupaciones 
  (
    ocupacion_id integer,
    ocupacion_desc varchar(100),
    ocupacion_sit smallint,
    primary key (ocupacion_id) 
  );

revoke all on re22_ocupaciones from "public";

{ TABLE re22_unidades_ejecutoras row size = 55 number of columns = 3 index size = 7 }

create table re22_unidades_ejecutoras 
  (
    ue_codigo smallint,
    ue_desc varchar(50),
    ue_sit smallint,
    primary key (ue_codigo) 
  );

revoke all on re22_unidades_ejecutoras from "public";

{ TABLE re22_puestos row size = 57 number of columns = 3 index size = 9 }

create table re22_puestos 
  (
    pue_id integer,
    pue_desc varchar(50),
    pue_sit smallint,
    primary key (pue_id) 
  );

revoke all on re22_puestos from "public";

{ TABLE re22_obras row size = 127 number of columns = 6 index size = 16 }

create table re22_obras 
  (
    obra_id integer not null ,
    obra_desc varchar(100),
    obra_dep smallint,
    obra_subproducto varchar(15),
    obra_grupo smallint,
    obra_sit smallint,
    primary key (obra_id) 
  );

revoke all on re22_obras from "public";

{ TABLE dot_entrega row size = 105 number of columns = 13 index size = 34 }

create table dot_entrega 
  (
    ent_id serial not null ,
    ent_conocimiento varchar(15),
    ent_recibe integer,
    ent_entrega integer,
    ent_dep smallint,
    ent_dotacion smallint,
    ent_year datetime year to year,
    ent_articulo integer,
    ent_talla integer,
    ent_cantidad integer,
    ent_situacion smallint,
    ent_fecha datetime year to day,
    ent_mensaje varchar(50),
    primary key (ent_id) 
  );

revoke all on dot_entrega from "public";

{ TABLE re22_subareas row size = 138 number of columns = 7 index size = 18 }

create table re22_subareas 
  (
    sub_id integer not null ,
    sub_descripcion varchar(100),
    sub_salario money(16,2),
    sub_bono money(16,2),
    sub_base money(16,2),
    sub_area integer,
    sub_situacion smallint,
    primary key (sub_id) 
  );

revoke all on re22_subareas from "public";

{ TABLE re22_asignaciones row size = 159 number of columns = 9 index size = 27 }

create table re22_asignaciones 
  (
    asig_id integer not null ,
    asig_cat integer,
    asig_cantidad money(16,2),
    asig_fecha datetime year to day,
    asig_motivo varchar(75),
    asig_ordeno integer,
    asig_documento varchar(50),
    asig_sit smallint,
    asig_tipo integer,
    primary key (asig_id) 
  );

revoke all on re22_asignaciones from "public";

{ TABLE re22_control_pagos_isr row size = 32 number of columns = 6 index size = 9 }

create table re22_control_pagos_isr 
  (
    pago_id serial not null ,
    pago_catalogo integer,
    pago_total money(16,2),
    pago_abonado money(16,2),
    pago_fecha datetime year to month,
    pago_sit smallint,
    primary key (pago_id) 
  );

revoke all on re22_control_pagos_isr from "public";

{ TABLE re22_fianzas row size = 24 number of columns = 5 index size = 9 }

create table re22_fianzas 
  (
    fia_id integer,
    fia_cat integer,
    fia_cantidad money(16,2),
    fia_fecha datetime year to day,
    fia_sit smallint,
    primary key (fia_id) 
  );

revoke all on re22_fianzas from "public";

{ TABLE re22_obras_bono row size = 19 number of columns = 4 index size = 18 }

create table re22_obras_bono 
  (
    bono_id integer,
    bono_obra integer,
    bono_cantidad money(16,2),
    bono_sit smallint,
    primary key (bono_id) 
  );

revoke all on re22_obras_bono from "public";

{ TABLE re22_partidas row size = 63 number of columns = 5 index size = 25 }

create table re22_partidas 
  (
    part_id integer,
    part_obra integer,
    part_numero varchar(50),
    part_ue smallint,
    part_sit smallint,
    primary key (part_id) 
  );

revoke all on re22_partidas from "public";

{ TABLE re22_personal_isr row size = 63 number of columns = 5 index size = 9 }

create table re22_personal_isr 
  (
    isr_id integer,
    isr_catalogo integer,
    isr_cantidad varchar(50),
    isr_year smallint,
    isr_sit smallint,
    primary key (isr_id) 
  );

revoke all on re22_personal_isr from "public";

{ TABLE re22_historial_pagos row size = 101 number of columns = 15 index size = 24 }

create table re22_historial_pagos 
  (
    pago_id serial not null ,
    pago_cat integer,
    pago_fecha datetime year to month,
    pago_salario money(16,2),
    pago_bono66 money(16,2),
    pago_asig money(16,2),
    pago_igss money(16,2),
    pago_pio money(16,2),
    pago_fianza money(16,2),
    pago_desc money(16,2),
    pago_isr money(16,2),
    pago_total money(16,2),
    pago_valido integer,
    pago_validacion smallint,
    pago_tipo smallint,
    primary key (pago_cat,pago_fecha,pago_tipo) 
  );

revoke all on re22_historial_pagos from "public";

{ TABLE re22_historial_situaciones row size = 116 number of columns = 5 index size = 16 }

create table re22_historial_situaciones 
  (
    sit_id integer,
    sit_catalogo integer,
    sit_situacion char(2),
    sit_observaciones varchar(100),
    sit_fecha datetime year to day,
    primary key (sit_id) 
  );

revoke all on re22_historial_situaciones from "public";

{ TABLE re22_mper row size = 667 number of columns = 35 index size = 77 }

create tab 
  (
    per_catalogo integer,
    per_nom1 varchar(50),
    per_nom2 varchar(50),
    per_nom3 varchar(50),
    per_ape1 varchar(50),
    per_ape2 varchar(50),
    per_ape3 varchar(50),
    per_sexo char(1),
    per_estado_civil char(1),
    per_religion smallint,
    per_nacimiento datetime year to day,
    per_lugar_nac char(4),
    per_dpi varchar(13),
    per_fecha_ext datetime year to day,
    per_lugar_ext char(4),
    per_iggs bigint,
    per_nit varchar(15),
    per_pio smallint,
    per_ocupacion integer,
    per_empleo smallint,
    per_obra integer,
    per_subarea integer,
    per_horas smallint,
    per_bono_prof smallint,
    per_direccion varchar(70),
    per_telefono integer,
    per_celular integer,
    per_email varchar(50),
    per_contrato varchar(25),
    per_inicio datetime year to day,
    per_fin datetime year to day,
    per_situacion char(2),
    per_peisol integer,
    per_puesto integer,
    per_obs varchar(100),
    primary key (per_catalogo) 
  );

revoke all on re22_mper from "public";

{ TABLE aud_re22_areas row size = 234 number of columns = 9 index size = 0 }

create table aud_re22_areas 
  (
    area_id integer,
    area_desc varchar(100),
    area_sit smallint,
    desp_area_id integer,
    desp_area_desc varchar(100),
    desp_area_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_areas from "public";

{ TABLE aud_re22_bancos row size = 234 number of columns = 9 index size = 0 }

create table aud_re22_bancos 
  (
    banco_id integer,
    banco_desc varchar(100),
    banco_sit smallint,
    desp_banco_id integer,
    desp_banco_desc varchar(100),
    desp_banco_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_bancos from "public";

{ TABLE aud_re22_bono_escolar row size = 54 number of columns = 11 index size = 0 }

create table aud_re22_bono_escolar 
  (
    bono_id integer,
    bono_year smallint,
    bono_cant money(16,2),
    bono_sit smallint,
    desp_bono_id integer,
    desp_bono_year smallint,
    desp_bono_cant money(16,2),
    desp_bono_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_bono_escolar from "public";

{ TABLE aud_re22_bono_vacacional row size = 54 number of columns = 11 index size = 0 }

create table aud_re22_bono_vacacional 
  (
    bono_id integer,
    bono_year smallint,
    bono_cant money(16,2),
    bono_sit smallint,
    desp_bono_id integer,
    desp_bono_year smallint,
    desp_bono_cant money(16,2),
    desp_bono_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_bono_vacacional from "public";

{ TABLE aud_re22_tipos_descuentos row size = 80 number of columns = 9 index size = 0 }

create table aud_re22_tipos_descuentos 
  (
    tip_id smallint,
    tip_desc varchar(25),
    tip_sit smallint,
    desp_tip_id smallint,
    desp_tip_desc varchar(25),
    desp_tip_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_tipos_descuentos from "public";

{ TABLE aud_re22_ocupaciones row size = 234 number of columns = 9 index size = 0 }

create table aud_re22_ocupaciones 
  (
    ocupacion_id integer,
    ocupacion_desc varchar(100),
    ocupacion_sit smallint,
    desp_ocupacion_id integer,
    desp_ocupacion_desc varchar(100),
    desp_ocupacion_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_ocupaciones from "public";

{ TABLE aud_re22_unidades_ejecutoras row size = 130 number of columns = 9 index size = 0 }

create table aud_re22_unidades_ejecutoras 
  (
    ue_codigo smallint,
    ue_desc varchar(50),
    ue_sit smallint,
    desp_ue_codigo smallint,
    desp_ue_desc varchar(50),
    desp_ue_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_unidades_ejecutoras from "public";

{ TABLE aud_re22_puestos row size = 134 number of columns = 9 index size = 0 }

create table aud_re22_puestos 
  (
    pue_id integer,
    pue_desc varchar(50),
    pue_sit smallint,
    desp_pue_id integer,
    desp_pue_desc varchar(50),
    desp_pue_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_puestos from "public";

{ TABLE aud_re22_mper row size = 1354 number of columns = 73 index size = 0 }

create table aud_re22_mper 
  (
    per_catalogo integer,
    per_nom1 varchar(50),
    per_nom2 varchar(50),
    per_nom3 varchar(50),
    per_ape1 varchar(50),
    per_ape2 varchar(50),
    per_ape3 varchar(50),
    per_sexo char(1),
    per_estado_civil char(1),
    per_religion smallint,
    per_nacimiento datetime year to day,
    per_lugar_nac char(4),
    per_dpi varchar(13),
    per_fecha_ext datetime year to day,
    per_lugar_ext char(4),
    per_iggs bigint,
    per_nit varchar(15),
    per_pio smallint,
    per_ocupacion integer,
    per_empleo smallint,
    per_obra integer,
    per_subarea integer,
    per_horas smallint,
    per_bono_prof smallint,
    per_direccion varchar(70),
    per_telefono integer,
    per_celular integer,
    per_email varchar(50),
    per_contrato varchar(25),
    per_inicio datetime year to day,
    per_fin datetime year to day,
    per_situacion char(2),
    per_peisol integer,
    per_puesto integer,
    per_obs varchar(100),
    desp_per_catalogo integer,
    desp_per_nom1 varchar(50),
    desp_per_nom2 varchar(50),
    desp_per_nom3 varchar(50),
    desp_per_ape1 varchar(50),
    desp_per_ape2 varchar(50),
    desp_per_ape3 varchar(50),
    desp_per_sexo char(1),
    desp_per_estado_civil char(1),
    desp_per_religion smallint,
    desp_per_nacimiento datetime year to day,
    desp_per_lugar_nac char(4),
    desp_per_dpi varchar(13),
    desp_per_fecha_ext datetime year to day,
    desp_per_lugar_ext char(4),
    desp_per_iggs bigint,
    desp_per_nit varchar(15),
    desp_per_pio smallint,
    desp_per_ocupacion integer,
    desp_per_empleo smallint,
    desp_per_obra integer,
    desp_per_subarea integer,
    desp_per_horas smallint,
    desp_per_bono_prof smallint,
    desp_per_direccion varchar(70),
    desp_per_telefono integer,
    desp_per_celular integer,
    desp_per_email varchar(50),
    desp_per_contrato varchar(25),
    desp_per_inicio datetime year to day,
    desp_per_fin datetime year to day,
    desp_per_situacion char(2),
    desp_per_peisol integer,
    desp_per_puesto integer,
    desp_per_obs varchar(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_mper from "public";

{ TABLE aud_re22_asignaciones row size = 338 number of columns = 21 index size = 0 }

create table aud_re22_asignaciones 
  (
    asig_id integer,
    asig_cat integer,
    asig_cantidad money(16,2),
    asig_fecha datetime year to day,
    asig_motivo varchar(75),
    asig_ordeno integer,
    asig_documento varchar(50),
    asig_sit smallint,
    asig_tipo integer,
    desp_asig_id integer,
    desp_asig_cat integer,
    desp_asig_cantidad money(16,2),
    desp_asig_fecha datetime year to day,
    desp_asig_motivo varchar(75),
    desp_asig_ordeno integer,
    desp_asig_documento varchar(50),
    desp_asig_sit smallint,
    desp_asig_tipo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_asignaciones from "public";

{ TABLE aud_re22_control_pagos_isr row size = 84 number of columns = 15 index size = 0 }

create table aud_re22_control_pagos_isr 
  (
    pago_id integer,
    pago_catalogo integer,
    pago_total money(16,2),
    pago_abonado money(16,2),
    pago_fecha datetime year to month,
    pago_sit smallint,
    desp_pago_id integer,
    desp_pago_catalogo integer,
    desp_pago_total money(16,2),
    desp_pago_abonado money(16,2),
    desp_pago_fecha datetime year to month,
    desp_pago_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_control_pagos_isr from "public";

{ TABLE aud_re22_fianzas row size = 68 number of columns = 13 index size = 0 }

create table aud_re22_fianzas 
  (
    fia_id integer,
    fia_cat integer,
    fia_cantidad money(16,2),
    fia_fecha datetime year to day,
    fia_sit smallint,
    desp_fia_id integer,
    desp_fia_cat integer,
    desp_fia_cantidad money(16,2),
    desp_fia_fecha datetime year to day,
    desp_fia_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_fianzas from "public";

{ TABLE aud_re22_historial_pagos row size = 222 number of columns = 33 index size = 0 }

create table aud_re22_historial_pagos 
  (
    pago_id integer,
    pago_cat integer,
    pago_fecha datetime year to month,
    pago_salario money(16,2),
    pago_bono66 money(16,2),
    pago_asig money(16,2),
    pago_igss money(16,2),
    pago_pio money(16,2),
    pago_fianza money(16,2),
    pago_desc money(16,2),
    pago_isr money(16,2),
    pago_total money(16,2),
    pago_valido integer,
    pago_validacion smallint,
    pago_tipo smallint,
    desp_pago_id integer,
    desp_pago_cat integer,
    desp_pago_fecha datetime year to month,
    desp_pago_salario money(16,2),
    desp_pago_bono66 money(16,2),
    desp_pago_asig money(16,2),
    desp_pago_igss money(16,2),
    desp_pago_pio money(16,2),
    desp_pago_fianza money(16,2),
    desp_pago_desc money(16,2),
    desp_pago_isr money(16,2),
    desp_pago_total money(16,2),
    desp_pago_valido integer,
    desp_pago_validacion smallint,
    desp_pago_tipo smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_historial_pagos from "public";

{ TABLE aud_re22_historial_situaciones row size = 252 number of columns = 13 index size = 0 }

create table aud_re22_historial_situaciones 
  (
    sit_id integer,
    sit_catalogo integer,
    sit_situacion char(2),
    sit_observaciones varchar(100),
    sit_fecha datetime year to day,
    desp_sit_id integer,
    desp_sit_catalogo integer,
    desp_sit_situacion char(2),
    desp_sit_observaciones varchar(100),
    desp_sit_fecha datetime year to day,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_historial_situaciones from "public";

{ TABLE aud_re22_obras row size = 274 number of columns = 15 index size = 0 }

create table aud_re22_obras 
  (
    obra_id integer,
    obra_desc varchar(100),
    obra_dep smallint,
    obra_subproducto varchar(15),
    obra_grupo smallint,
    obra_sit smallint,
    desp_obra_id integer,
    desp_obra_desc varchar(100),
    desp_obra_dep smallint,
    desp_obra_subproducto varchar(15),
    desp_obra_grupo smallint,
    desp_obra_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_obras from "public";

{ TABLE aud_re22_partidas row size = 146 number of columns = 13 index size = 0 }

create table aud_re22_partidas 
  (
    part_id integer,
    part_obra integer,
    part_numero varchar(50),
    part_ue smallint,
    part_sit smallint,
    desp_part_id integer,
    desp_part_obra integer,
    desp_part_numero varchar(50),
    desp_part_ue smallint,
    desp_part_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_partidas from "public";

{ TABLE aud_re22_personal_isr row size = 146 number of columns = 13 index size = 0 }

create table aud_re22_personal_isr 
  (
    isr_id integer,
    isr_catalogo integer,
    isr_cantidad varchar(50),
    isr_year smallint,
    isr_sit smallint,
    desp_isr_id integer,
    desp_isr_catalogo integer,
    desp_isr_cantidad varchar(50),
    desp_isr_year smallint,
    desp_isr_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_personal_isr from "public";

{ TABLE aud_re22_subareas row size = 296 number of columns = 17 index size = 0 }

create table aud_re22_subareas 
  (
    sub_id integer,
    sub_descripcion varchar(100),
    sub_salario money(16,2),
    sub_bono money(16,2),
    sub_base money(16,2),
    sub_area integer,
    sub_situacion smallint,
    desp_sub_id integer,
    desp_sub_descripcion varchar(100),
    desp_sub_salario money(16,2),
    desp_sub_bono money(16,2),
    desp_sub_base money(16,2),
    desp_sub_area integer,
    desp_sub_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_subareas from "public";

{ TABLE aud_re22_obras_bono row size = 58 number of columns = 11 index size = 0 }

create table aud_re22_obras_bono 
  (
    bono_id integer,
    bono_obra integer,
    bono_cantidad money(16,2),
    bono_sit smallint,
    desp_bono_id integer,
    desp_bono_obra integer,
    desp_bono_cantidad money(16,2),
    desp_bono_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_obras_bono from "public";

{ TABLE re22_descuentos row size = 385 number of columns = 10 index size = 16 }

create table re22_descuentos 
  (
    desc_id integer,
    desc_cat integer,
    desc_doc varchar(250),
    desc_inicio datetime year to day,
    desc_fin datetime year to day,
    desc_cuota money(16,2),
    desc_tipo smallint,
    desc_duracion smallint,
    desc_sit smallint,
    desc_beneficiario varchar(100),
    primary key (desc_id) 
  );

revoke all on re22_descuentos from "public";

{ TABLE aud_re22_descuentos row size = 790 number of columns = 23 index size = 0 }

create table aud_re22_descuentos 
  (
    desc_id integer,
    desc_cat integer,
    desc_doc varchar(250),
    desc_inicio datetime year to day,
    desc_fin datetime year to day,
    desc_cuota money(16,2),
    desc_tipo smallint,
    desc_duracion smallint,
    desc_sit smallint,
    desc_beneficiario varchar(100),
    desp_desc_id integer,
    desp_desc_cat integer,
    desp_desc_doc varchar(250),
    desp_desc_inicio datetime year to day,
    desp_desc_fin datetime year to day,
    desp_desc_cuota money(16,2),
    desp_desc_tipo smallint,
    desp_desc_duracion smallint,
    desp_desc_sit smallint,
    desp_desc_beneficiario varchar(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_descuentos from "public";

{ TABLE dot_articulos row size = 57 number of columns = 3 index size = 9 }

create table dot_articulos 
  (
    art_id integer,
    art_desc varchar(50),
    art_sit smallint 
        default 1,
    primary key (art_id) 
  );

revoke all on dot_articulos from "public";

{ TABLE aud_dot_articulos row size = 134 number of columns = 9 index size = 0 }

create table aud_dot_articulos 
  (
    art_id integer,
    art_desc varchar(50),
    art_sit smallint 
        default 1,
    desp_art_id integer,
    desp_art_desc varchar(50),
    desp_art_sit smallint 
        default 1,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dot_articulos from "public";

{ TABLE dot_tallas row size = 31 number of columns = 4 index size = 18 }

create table dot_tallas 
  (
    talla_id integer,
    talla_desc varchar(20),
    talla_art integer,
    talla_sit smallint,
    primary key (talla_id) 
  );

revoke all on dot_tallas from "public";

{ TABLE aud_dot_tallas row size = 82 number of columns = 11 index size = 0 }

create table aud_dot_tallas 
  (
    talla_id integer,
    talla_desc varchar(20),
    talla_art integer,
    talla_sit smallint,
    desp_talla_id integer,
    desp_talla_desc varchar(20),
    desp_talla_art integer,
    desp_talla_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dot_tallas from "public";

{ TABLE dot_tallas_oficiales row size = 276 number of columns = 8 index size = 9 }

create table dot_tallas_oficiales 
  (
    talla_catalogo integer,
    talla_uniforme integer,
    talla_botas integer,
    talla_boina integer,
    talla_overol integer,
    talla_obs varchar(250),
    talla_ult_fec_act date,
    talla_situacion char(1),
    primary key (talla_catalogo) 
  );

revoke all on dot_tallas_oficiales from "public";

{ TABLE aud_dot_tallas_oficiales row size = 572 number of columns = 19 index size = 0 }

create table aud_dot_tallas_oficiales 
  (
    talla_catalogo integer,
    talla_uniforme integer,
    talla_botas integer,
    talla_boina integer,
    talla_overol integer,
    talla_obs varchar(250),
    talla_ult_fec_act date,
    talla_situacion char(1),
    desp_talla_catalogo integer,
    desp_talla_uniforme integer,
    desp_talla_botas integer,
    desp_talla_boina integer,
    desp_talla_overol integer,
    desp_talla_obs varchar(250),
    desp_talla_ult_fec_act date,
    desp_talla_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dot_tallas_oficiales from "public";

{ TABLE dot_tallas_cadetropa row size = 272 number of columns = 7 index size = 9 }

create table dot_tallas_cadetropa 
  (
    talla_plaza2 integer not null ,
    talla_uniforme2 integer,
    talla_botas2 integer,
    talla_boina2 integer,
    talla_obs2 varchar(250),
    talla_ult_fec_act2 date,
    talla_situacion2 char(1),
    primary key (talla_plaza2) 
  );

revoke all on dot_tallas_cadetropa from "public";

{ TABLE aud_dot_tallas_cadetropa row size = 564 number of columns = 17 index size = 0 }

create table aud_dot_tallas_cadetropa 
  (
    talla_plaza2 integer,
    talla_uniforme2 integer,
    talla_botas2 integer,
    talla_boina2 integer,
    talla_obs2 varchar(250),
    talla_ult_fec_act2 date,
    talla_situacion2 char(1),
    desp_talla_plaza2 integer,
    desp_talla_uniforme2 integer,
    desp_talla_botas2 integer,
    desp_talla_boina2 integer,
    desp_talla_obs2 varchar(250),
    desp_talla_ult_fec_act2 date,
    desp_talla_situacion2 char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dot_tallas_cadetropa from "public";

{ TABLE dot_tallas_perscontrato row size = 280 number of columns = 9 index size = 9 }

create table dot_tallas_perscontrato 
  (
    talla_catalogo3 integer not null ,
    talla_uniforme3 integer,
    talla_botas3 integer,
    talla_boina3 integer,
    talla_cofia3 integer,
    talla_bata3 integer,
    talla_obs3 varchar(250),
    talla_ult_fec_act3 date,
    talla_situacion3 char(1),
    primary key (talla_catalogo3) 
  );

revoke all on dot_tallas_perscontrato from "public";

{ TABLE aud_dot_tallas_perscontrato row size = 580 number of columns = 21 index size = 0 }

create table aud_dot_tallas_perscontrato 
  (
    talla_catalogo3 integer,
    talla_uniforme3 integer,
    talla_botas3 integer,
    talla_boina3 integer,
    talla_cofia3 integer,
    talla_bata3 integer,
    talla_obs3 varchar(250),
    talla_ult_fec_act3 date,
    talla_situacion3 char(1),
    desp_talla_catalogo3 integer,
    desp_talla_uniforme3 integer,
    desp_talla_botas3 integer,
    desp_talla_boina3 integer,
    desp_talla_cofia3 integer,
    desp_talla_bata3 integer,
    desp_talla_obs3 varchar(250),
    desp_talla_ult_fec_act3 date,
    desp_talla_situacion3 char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dot_tallas_perscontrato from "public";

{ TABLE esip_mis_necesidad row size = 49 number of columns = 13 index size = 9 }

create table esip_mis_necesidad 
  (
    esi_id integer,
    esi_nec_id integer,
    esi_mision1 integer,
    esi_mision2 integer,
    esi_mision3 integer,
    esi_mision4 integer,
    esi_mision5 integer,
    esi_mision6 integer,
    esi_mision7 integer,
    esi_mision8 integer,
    esi_mision9 integer,
    esi_mision10 integer,
    esi_sit char(1),
    primary key (esi_id) 
  );

revoke all on esip_mis_necesidad from "public";

{ TABLE aud_esip_mis_necesidad row size = 118 number of columns = 29 index size = 0 }

create table aud_esip_mis_necesidad 
  (
    esi_id integer,
    esi_nec_id integer,
    esi_mision1 integer,
    esi_mision2 integer,
    esi_mision3 integer,
    esi_mision4 integer,
    esi_mision5 integer,
    esi_mision6 integer,
    esi_mision7 integer,
    esi_mision8 integer,
    esi_mision9 integer,
    esi_mision10 integer,
    esi_sit char(1),
    desp_esi_id integer,
    desp_esi_nec_id integer,
    desp_esi_mision1 integer,
    desp_esi_mision2 integer,
    desp_esi_mision3 integer,
    desp_esi_mision4 integer,
    desp_esi_mision5 integer,
    desp_esi_mision6 integer,
    desp_esi_mision7 integer,
    desp_esi_mision8 integer,
    desp_esi_mision9 integer,
    desp_esi_mision10 integer,
    desp_esi_sit char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esip_mis_necesidad from "public";

{ TABLE esip_areas_mision row size = 264 number of columns = 5 index size = 9 }

create table esip_areas_mision 
  (
    mis_id integer,
    mis_no_mision integer,
    mis_descripcion varchar(250),
    mis_fecha date,
    mis_sit char(1),
    primary key (mis_id) 
  );

revoke all on esip_areas_mision from "public";

{ TABLE aud_esip_areas_mision row size = 548 number of columns = 13 index size = 0 }

create table aud_esip_areas_mision 
  (
    mis_id integer,
    mis_no_mision integer,
    mis_descripcion varchar(250),
    mis_fecha date,
    mis_sit char(1),
    desp_mis_id integer,
    desp_mis_no_mision integer,
    desp_mis_descripcion varchar(250),
    desp_mis_fecha date,
    desp_mis_sit char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esip_areas_mision from "public";

{ TABLE esip_necesidad row size = 787 number of columns = 11 index size = 16 }

create table esip_necesidad 
  (
    nec_id integer,
    nec_nom_proy varchar(250),
    nec_fecha date,
    nec_periodo integer,
    nec_dep smallint,
    nec_costo float,
    nec_cuantia integer,
    nec_prioridad integer,
    nec_justificacion varchar(250),
    nec_obs varchar(250),
    nec_situacion integer,
    primary key (nec_id) 
  );

revoke all on esip_necesidad from "public";

{ TABLE aud_esip_necesidad row size = 1594 number of columns = 25 index size = 0 }

create table aud_esip_necesidad 
  (
    nec_id integer,
    nec_nom_proy varchar(250),
    nec_fecha date,
    nec_periodo integer,
    nec_dep smallint,
    nec_costo float,
    nec_cuantia integer,
    nec_prioridad integer,
    nec_justificacion varchar(250),
    nec_obs varchar(250),
    nec_situacion integer,
    desp_nec_id integer,
    desp_nec_nom_proy varchar(250),
    desp_nec_fecha date,
    desp_nec_periodo integer,
    desp_nec_dep smallint,
    desp_nec_costo float,
    desp_nec_cuantia integer,
    desp_nec_prioridad integer,
    desp_nec_justificacion varchar(250),
    desp_nec_obs varchar(250),
    desp_nec_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esip_necesidad from "public";

{ TABLE esip_recup_capacidades row size = 787 number of columns = 11 index size = 16 }

create table esip_recup_capacidades 
  (
    rec_id integer,
    rec_nom_proy varchar(250),
    rec_fecha date,
    rec_periodo integer,
    rec_dep smallint,
    rec_costo float,
    rec_modalidad integer,
    rec_prioridad integer,
    rec_justificacion varchar(250),
    rec_obs varchar(250),
    rec_situacion integer,
    primary key (rec_id) 
  );

revoke all on esip_recup_capacidades from "public";

{ TABLE aud_esip_recup_capacidades row size = 1594 number of columns = 25 index size = 0 }

create table aud_esip_recup_capacidades 
  (
    rec_id integer,
    rec_nom_proy varchar(250),
    rec_fecha date,
    rec_periodo integer,
    rec_dep smallint,
    rec_costo float,
    rec_modalidad integer,
    rec_prioridad integer,
    rec_justificacion varchar(250),
    rec_obs varchar(250),
    rec_situacion integer,
    desp_rec_id integer,
    desp_rec_nom_proy varchar(250),
    desp_rec_fecha date,
    desp_rec_periodo integer,
    desp_rec_dep smallint,
    desp_rec_costo float,
    desp_rec_modalidad integer,
    desp_rec_prioridad integer,
    desp_rec_justificacion varchar(250),
    desp_rec_obs varchar(250),
    desp_rec_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esip_recup_capacidades from "public";

{ TABLE aud_esip_doc_pdf2 row size = 540 number of columns = 11 index size = 0 }

create table aud_esip_doc_pdf2 
  (
    docs_registro integer,
    docs_necesidad integer,
    docs_ruta varchar(250),
    docs_sit char(1),
    desp_docs_registro integer,
    desp_docs_necesidad integer,
    desp_docs_ruta varchar(250),
    desp_docs_sit char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esip_doc_pdf2 from "public";

{ TABLE aud_esip_doc_pdf row size = 540 number of columns = 11 index size = 0 }

create table aud_esip_doc_pdf 
  (
    doc_registro integer,
    doc_necesidad integer,
    doc_ruta varchar(250),
    doc_sit char(1),
    desp_doc_registro integer,
    desp_doc_necesidad integer,
    desp_doc_ruta varchar(250),
    desp_doc_sit char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esip_doc_pdf from "public";

{ TABLE sie_inventarioclase2 row size = 244 number of columns = 12 index size = 0 }

create table sie_inventarioclase2 
  (
    inv_id serial not null ,
    inv_correlativo char(11),
    inv_articulo integer,
    inv_talla integer,
    inv_cantidad smallint,
    inv_movimiento char(1),
    inv_cat_ingreso integer,
    inv_cat_recibio integer,
    inv_fec_movimiento date,
    inv_dependencia integer,
    inv_obs varchar(200),
    inv_situacion char(1)
  );

revoke all on sie_inventarioclase2 from "public";

{ TABLE aud_sie_inventarioclase2 row size = 508 number of columns = 27 index size = 0 }

create table aud_sie_inventarioclase2 
  (
    inv_id integer,
    inv_correlativo char(11),
    inv_articulo integer,
    inv_talla integer,
    inv_cantidad smallint,
    inv_movimiento char(1),
    inv_cat_ingreso integer,
    inv_cat_recibio integer,
    inv_fec_movimiento date,
    inv_dependencia integer,
    inv_obs varchar(200),
    inv_situacion char(1),
    desp_inv_id integer,
    desp_inv_correlativo char(11),
    desp_inv_articulo integer,
    desp_inv_talla integer,
    desp_inv_cantidad smallint,
    desp_inv_movimiento char(1),
    desp_inv_cat_ingreso integer,
    desp_inv_cat_recibio integer,
    desp_inv_fec_movimiento date,
    desp_inv_dependencia integer,
    desp_inv_obs varchar(200),
    desp_inv_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sie_inventarioclase2 from "public";

{ TABLE esip_doc_pdf row size = 260 number of columns = 4 index size = 9 }

create table esip_doc_pdf 
  (
    doc_registro integer not null ,
    doc_necesidad integer,
    doc_ruta varchar(250),
    doc_sit char(1),
    primary key (doc_registro)  constraint pk23ws
  );

revoke all on esip_doc_pdf from "public";

{ TABLE esip_doc_pdf2 row size = 260 number of columns = 4 index size = 9 }

create table esip_doc_pdf2 
  (
    docs_registro integer not null ,
    docs_necesidad integer,
    docs_ruta varchar(250),
    docs_sit char(1),
    primary key (docs_registro)  constraint pk56bv
  );

revoke all on esip_doc_pdf2 from "public";

{ TABLE tropa_movimientos row size = 22 number of columns = 6 index size = 25 }

create table tropa_movimientos 
  (
    mov_id serial not null ,
    mov_catalogo integer,
    mov_dependencia smallint,
    mov_accion char(4),
    mov_fecha date,
    mov_situacion integer,
    primary key (mov_id) 
  );

revoke all on tropa_movimientos from "public";

{ TABLE tropa_disponibilidad row size = 12 number of columns = 4 index size = 25 }

create table tropa_disponibilidad 
  (
    disp_id serial not null ,
    disp_catalogo integer,
    disp_dependencia smallint,
    disp_situaicon smallint,
    primary key (disp_id) 
  );

revoke all on tropa_disponibilidad from "public";

{ TABLE aud_tropa_movimientos row size = 64 number of columns = 15 index size = 0 }

create table aud_tropa_movimientos 
  (
    mov_id integer,
    mov_catalogo integer,
    mov_dependencia smallint,
    mov_accion char(4),
    mov_fecha date,
    mov_situacion integer,
    desp_mov_id integer,
    desp_mov_catalogo integer,
    desp_mov_dependencia smallint,
    desp_mov_accion char(4),
    desp_mov_fecha date,
    desp_mov_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tropa_movimientos from "public";

{ TABLE aud_tropa_foto row size = 750 number of columns = 15 index size = 0 }

create table aud_tropa_foto 
  (
    fot_id integer,
    fot_catalogo integer,
    fot_descr char(25),
    fot_doc blob,
    fot_tipo varchar(255),
    fot_situacion smallint,
    desp_fot_id integer,
    desp_fot_catalogo integer,
    desp_fot_descr char(25),
    desp_fot_doc blob,
    desp_fot_tipo varchar(255),
    desp_fot_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tropa_foto from "public";

{ TABLE aud_tropa_disponibilidad row size = 44 number of columns = 11 index size = 0 }

create table aud_tropa_disponibilidad 
  (
    disp_id integer,
    disp_catalogo integer,
    disp_dependencia smallint,
    disp_situaicon smallint,
    desp_disp_id integer,
    desp_disp_catalogo integer,
    desp_disp_dependencia smallint,
    desp_disp_situaicon smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tropa_disponibilidad from "public";

{ TABLE solicitud_usuarios row size = 352 number of columns = 12 index size = 7 }

create table solicitud_usuarios 
  (
    usu_id smallint not null ,
    usu_mensaje char(150) not null ,
    usu_fechadoc date,
    usu_fechaac date not null ,
    usu_fechaautori date,
    usu_catusuario integer not null ,
    usu_usuario char(20) not null ,
    usu_observa char(150),
    usu_comando integer,
    usu_catrecibe integer,
    usu_fecharecibe date,
    usu_situacion smallint not null ,
    primary key (usu_id) 
  );

revoke all on solicitud_usuarios from "public";

{ TABLE aud_solicitud_usuarios row size = 724 number of columns = 27 index size = 0 }

create table aud_solicitud_usuarios 
  (
    usu_id smallint,
    usu_mensaje char(150),
    usu_fechadoc date,
    usu_fechaac date,
    usu_fechaautori date,
    usu_catusuario integer,
    usu_usuario char(20),
    usu_observa char(150),
    usu_comando integer,
    usu_catrecibe integer,
    usu_fecharecibe date,
    usu_situacion smallint,
    desp_usu_id smallint,
    desp_usu_mensaje char(150),
    desp_usu_fechadoc date,
    desp_usu_fechaac date,
    desp_usu_fechaautori date,
    desp_usu_catusuario integer,
    desp_usu_usuario char(20),
    desp_usu_observa char(150),
    desp_usu_comando integer,
    desp_usu_catrecibe integer,
    desp_usu_fecharecibe date,
    desp_usu_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_solicitud_usuarios from "public";

{ TABLE tropa_foto row size = 347 number of columns = 6 index size = 18 }

create table tropa_foto 
  (
    fot_id serial not null ,
    fot_catalogo integer,
    fot_descr char(25),
    fot_doc byte in blobdbs,
    fot_tipo varchar(255),
    fot_situacion smallint,
    primary key (fot_id) 
  );

revoke all on tropa_foto from "public";

{ TABLE aud_fag_metodo_adquisicion row size = 58 number of columns = 9 index size = 0 }

create table aud_fag_metodo_adquisicion 
  (
    met_id integer,
    met_metodo varchar(10),
    met_sit integer,
    desp_met_id integer,
    desp_met_metodo varchar(10),
    desp_met_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_metodo_adquisicion from "public";

{ TABLE aud_fag_dependencia row size = 58 number of columns = 9 index size = 0 }

create table aud_fag_dependencia 
  (
    dep_id integer,
    dep_desc varchar(10),
    dep_sit integer,
    desp_dep_id integer,
    desp_dep_desc varchar(10),
    desp_dep_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_dependencia from "public";

{ TABLE aud_fag_condicion_rep row size = 58 number of columns = 9 index size = 0 }

create table aud_fag_condicion_rep 
  (
    con_id integer,
    con_desc varchar(10),
    con_sit integer,
    desp_con_id integer,
    desp_con_desc varchar(10),
    desp_con_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_condicion_rep from "public";

{ TABLE aud_fag_unidad_medida row size = 58 number of columns = 9 index size = 0 }

create table aud_fag_unidad_medida 
  (
    uni_id integer,
    uni_desc varchar(10),
    uni_sit integer,
    desp_uni_id integer,
    desp_uni_desc varchar(10),
    desp_uni_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_unidad_medida from "public";

{ TABLE aud_fag_tipo_articulos row size = 58 number of columns = 9 index size = 0 }

create table aud_fag_tipo_articulos 
  (
    tip_id integer,
    tip_desc varchar(10),
    tip_sit integer,
    desp_tip_id integer,
    desp_tip_desc varchar(10),
    desp_tip_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_tipo_articulos from "public";

{ TABLE aud_fag_seccion row size = 58 number of columns = 9 index size = 0 }

create table aud_fag_seccion 
  (
    sec_id integer,
    sec_desc varchar(10),
    sec_sit integer,
    desp_sec_id integer,
    desp_sec_desc varchar(10),
    desp_sec_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_seccion from "public";

{ TABLE aud_fag_estanterias row size = 58 number of columns = 9 index size = 0 }

create table aud_fag_estanterias 
  (
    est_id integer,
    est_desc varchar(10),
    est_sit integer,
    desp_est_id integer,
    desp_est_desc varchar(10),
    desp_est_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_estanterias from "public";

{ TABLE aud_fag_columnas row size = 58 number of columns = 9 index size = 0 }

create table aud_fag_columnas 
  (
    col_id integer,
    col_desc varchar(10),
    col_sit integer,
    desp_col_id integer,
    desp_col_desc varchar(10),
    desp_col_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_columnas from "public";

{ TABLE aud_fag_niveles row size = 58 number of columns = 9 index size = 0 }

create table aud_fag_niveles 
  (
    niv_id integer,
    niv_desc varchar(10),
    niv_sit integer,
    desp_niv_id integer,
    desp_niv_desc varchar(10),
    desp_niv_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_niveles from "public";

{ TABLE aud_fag_caja row size = 58 number of columns = 9 index size = 0 }

create table aud_fag_caja 
  (
    caj_id integer,
    caj_desc varchar(10),
    caj_sit integer,
    desp_caj_id integer,
    desp_caj_desc varchar(10),
    desp_caj_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_caja from "public";

{ TABLE aud_fag_almacen row size = 66 number of columns = 11 index size = 0 }

create table aud_fag_almacen 
  (
    alm_id integer,
    alm_nom varchar(10),
    alm_num integer,
    alm_sit integer,
    desp_alm_id integer,
    desp_alm_nom varchar(10),
    desp_alm_num integer,
    desp_alm_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_almacen from "public";

{ TABLE aud_fag_articulos row size = 302 number of columns = 13 index size = 0 }

create table aud_fag_articulos 
  (
    art_id integer,
    art_desc varchar(30),
    art_part_num varchar(50),
    art_nat_stock_number varchar(50),
    art_sit integer,
    desp_art_id integer,
    desp_art_desc varchar(30),
    desp_art_part_num varchar(50),
    desp_art_nat_stock_number varchar(50),
    desp_art_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_articulos from "public";

{ TABLE aud_fag_inventario row size = 1314 number of columns = 71 index size = 0 }

create table aud_fag_inventario 
  (
    inv_id integer,
    inv_formulario varchar(20),
    inv_registros varchar(20),
    inv_autorizo integer,
    inv_reviso integer,
    inv_entrego integer,
    inv_asigno integer,
    inv_solicito integer,
    inv_recibio integer,
    inv_articulo integer,
    inv_numero_serie varchar(60),
    inv_alterno varchar(60),
    inv_unidad_medida integer,
    inv_cantidad integer,
    inv_metodo_adquisicion integer,
    inv_condicion integer,
    inv_tipo_repuesto integer,
    inv_fecha_venc date,
    inv_fech_ing date,
    inv_fech_egre date,
    inv_aeronave smallint,
    inv_factura varchar(50),
    inv_nit_proveedor varchar(20),
    inv_almacen integer,
    inv_seccion integer,
    inv_estanteria integer,
    inv_columna integer,
    inv_nivel integer,
    inv_caja integer,
    inv_obs varchar(200),
    inv_orden_trab varchar(100),
    inv_dependencia integer,
    inv_proceso varchar(10),
    inv_sit integer,
    desp_inv_id integer,
    desp_inv_formulario varchar(20),
    desp_inv_registros varchar(20),
    desp_inv_autorizo integer,
    desp_inv_reviso integer,
    desp_inv_entrego integer,
    desp_inv_asigno integer,
    desp_inv_solicito integer,
    desp_inv_recibio integer,
    desp_inv_articulo integer,
    desp_inv_numero_serie varchar(60),
    desp_inv_alterno varchar(60),
    desp_inv_unidad_medida integer,
    desp_inv_cantidad integer,
    desp_inv_metodo_adquisicion integer,
    desp_inv_condicion integer,
    desp_inv_tipo_repuesto integer,
    desp_inv_fecha_venc date,
    desp_inv_fech_ing date,
    desp_inv_fech_egre date,
    desp_inv_aeronave smallint,
    desp_inv_factura varchar(50),
    desp_inv_nit_proveedor varchar(20),
    desp_inv_almacen integer,
    desp_inv_seccion integer,
    desp_inv_estanteria integer,
    desp_inv_columna integer,
    desp_inv_nivel integer,
    desp_inv_caja integer,
    desp_inv_obs varchar(200),
    desp_inv_orden_trab varchar(100),
    desp_inv_dependencia integer,
    desp_inv_proceso varchar(10),
    desp_inv_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_inventario from "public";

{ TABLE cov_oficios row size = 161 number of columns = 4 index size = 9 }

create table cov_oficios 
  (
    ofi_id serial not null ,
    ofi_cat integer not null ,
    ofi_ruta varchar(150) not null ,
    ofi_sit smallint not null ,
    primary key (ofi_id) 
  );

revoke all on cov_oficios from "public";

{ TABLE aud_cov_oficios row size = 342 number of columns = 11 index size = 0 }

create table aud_cov_oficios 
  (
    ofi_id integer,
    ofi_cat integer,
    ofi_ruta varchar(150),
    ofi_sit smallint,
    desp_ofi_id integer,
    desp_ofi_cat integer,
    desp_ofi_ruta varchar(150),
    desp_ofi_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cov_oficios from "public";

{ TABLE cov_registro row size = 16 number of columns = 5 index size = 9 }

create table cov_registro 
  (
    reg_id serial not null ,
    reg_catalogo integer not null ,
    reg_vacuna integer,
    reg_dosis smallint,
    reg_situacion smallint,
    primary key (reg_id) 
  );

revoke all on cov_registro from "public";

{ TABLE aud_cov_registro row size = 52 number of columns = 13 index size = 0 }

create table aud_cov_registro 
  (
    reg_id integer,
    reg_catalogo integer,
    reg_vacuna integer,
    reg_dosis smallint,
    reg_situacion smallint,
    desp_reg_id integer,
    desp_reg_catalogo integer,
    desp_reg_vacuna integer,
    desp_reg_dosis smallint,
    desp_reg_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cov_registro from "public";

{ TABLE cov_vacunas row size = 33 number of columns = 4 index size = 9 }

create table cov_vacunas 
  (
    vac_cod integer not null ,
    vac_nombre char(25) not null ,
    vac_dosis smallint not null ,
    vac_situacion smallint not null ,
    primary key (vac_cod) 
  );

revoke all on cov_vacunas from "public";

{ TABLE aud_cov_vacunas row size = 86 number of columns = 11 index size = 0 }

create table aud_cov_vacunas 
  (
    vac_cod integer,
    vac_nombre char(25),
    vac_dosis smallint,
    vac_situacion smallint,
    desp_vac_cod integer,
    desp_vac_nombre char(25),
    desp_vac_dosis smallint,
    desp_vac_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cov_vacunas from "public";

{ TABLE dfdes_bindustrial row size = 163 number of columns = 17 index size = 55 }

create table dfdes_bindustrial 
  (
    dfdi_catalogo integer not null ,
    dfdi_codigo smallint not null ,
    dfdi_nu_reg smallint not null ,
    dfdi_tipo_desc char(1) not null ,
    dfdi_fec_ini date,
    dfdi_mes_act date,
    dfdi_fin_pres date,
    dfdi_monto money(16,2) not null ,
    dfdi_saldo money(16,2) not null ,
    dfdi_mensual money(16,2) not null ,
    dfdi_tot_cuotas smallint,
    dfdi_num_cuotas smallint,
    dfdi_nom_banco char(6),
    dfdi_codeudor integer,
    dfdi_nom_bene char(50),
    dfdi_no_prest char(50) not null ,
    dfdi_si_no char(1),
    primary key (dfdi_no_prest) 
  );

revoke all on dfdes_bindustrial from "public";

{ TABLE aud_dfdes_bindustrial row size = 346 number of columns = 37 index size = 0 }

create table aud_dfdes_bindustrial 
  (
    dfdi_catalogo integer,
    dfdi_codigo smallint,
    dfdi_nu_reg smallint,
    dfdi_tipo_desc char(1),
    dfdi_fec_ini date,
    dfdi_mes_act date,
    dfdi_fin_pres date,
    dfdi_monto money(16,2),
    dfdi_saldo money(16,2),
    dfdi_mensual money(16,2),
    dfdi_tot_cuotas smallint,
    dfdi_num_cuotas smallint,
    dfdi_nom_banco char(6),
    dfdi_codeudor integer,
    dfdi_nom_bene char(50),
    dfdi_no_prest char(50),
    dfdi_si_no char(1),
    desp_dfdi_catalogo integer,
    desp_dfdi_codigo smallint,
    desp_dfdi_nu_reg smallint,
    desp_dfdi_tipo_desc char(1),
    desp_dfdi_fec_ini date,
    desp_dfdi_mes_act date,
    desp_dfdi_fin_pres date,
    desp_dfdi_monto money(16,2),
    desp_dfdi_saldo money(16,2),
    desp_dfdi_mensual money(16,2),
    desp_dfdi_tot_cuotas smallint,
    desp_dfdi_num_cuotas smallint,
    desp_dfdi_nom_banco char(6),
    desp_dfdi_codeudor integer,
    desp_dfdi_nom_bene char(50),
    desp_dfdi_no_prest char(50),
    desp_dfdi_si_no char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dfdes_bindustrial from "public";

{ TABLE aud_psan_sanciones row size = 570 number of columns = 23 index size = 0 }

create table aud_psan_sanciones 
  (
    san_codigo integer,
    san_descripcion varchar(255),
    san_clasificacion char(2),
    san_tipo char(2),
    san_cantidad smallint,
    san_reglamento smallint,
    san_articulo smallint,
    san_literal char(1),
    san_numeral smallint,
    san_inciso char(2),
    desp_san_codigo integer,
    desp_san_descripcion varchar(255),
    desp_san_clasificacion char(2),
    desp_san_tipo char(2),
    desp_san_cantidad smallint,
    desp_san_reglamento smallint,
    desp_san_articulo smallint,
    desp_san_literal char(1),
    desp_san_numeral smallint,
    desp_san_inciso char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_psan_sanciones from "public";

{ TABLE re22_cuentas row size = 40 number of columns = 5 index size = 18 }

create table re22_cuentas 
  (
    cue_id integer not null ,
    cue_cat integer,
    cue_cuenta varchar(25),
    cue_banco integer,
    cue_sit smallint,
    primary key (cue_id) 
  );

revoke all on re22_cuentas from "public";

{ TABLE aud_re22_cuentas row size = 100 number of columns = 13 index size = 0 }

create table aud_re22_cuentas 
  (
    cue_id integer,
    cue_cat integer,
    cue_cuenta varchar(25),
    cue_banco integer,
    cue_sit smallint,
    desp_cue_id integer,
    desp_cue_cat integer,
    desp_cue_cuenta varchar(25),
    desp_cue_banco integer,
    desp_cue_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_cuentas from "public";

{ TABLE psan_boleta_restore row size = 234 number of columns = 16 index size = 15 }

create table psan_boleta_restore 
  (
    bol_det_catalogo integer not null  disabled ,
    bol_det_fecha date not null  disabled ,
    bol_det_sancion smallint not null  disabled ,
    bol_det_grado smallint,
    bol_dependencia smallint,
    bol_desc_empleo char(45) not null  disabled ,
    bol_jerarquia_sancionado char(100) not null  disabled ,
    bol_sancionador integer not null  disabled ,
    bol_gra_sancionador smallint not null  disabled ,
    bol_empleo_sancionador char(45) not null  disabled ,
    bol_justicia integer not null  disabled ,
    bol_gra_justicia smallint not null  disabled ,
    bol_comte integer not null  disabled ,
    bol_gra_comte smallint not null  disabled ,
    bol_fech_cumple datetime year to second,
    bol_det_status integer,
    primary key (bol_det_catalogo,bol_det_fecha,bol_det_sancion)  disabled 
  );

revoke all on psan_boleta_restore from "public";

{ TABLE dot_asignadas row size = 21 number of columns = 6 index size = 17 }

create table dot_asignadas 
  (
    asig_catalogo integer not null ,
    asig_num_dotacion integer not null ,
    asig_year_dotacion integer not null ,
    asig_cat_entrego integer,
    asig_fec_entrego date,
    asig_situacion char(1),
    primary key (asig_catalogo,asig_num_dotacion,asig_year_dotacion) 
  );

revoke all on dot_asignadas from "public";

{ TABLE dot_asignadas_cadtropa row size = 21 number of columns = 6 index size = 17 }

create table dot_asignadas_cadtropa 
  (
    asig_plaza integer not null ,
    asig_num_dotacion2 integer not null ,
    asig_year_dotacion2 integer not null ,
    asig_cat_entrego2 integer,
    asig_fec_entrego2 date,
    asig_situacion2 char(1),
    primary key (asig_plaza,asig_num_dotacion2,asig_year_dotacion2) 
  );

revoke all on dot_asignadas_cadtropa from "public";

{ TABLE aud_dot_asignadas row size = 62 number of columns = 15 index size = 0 }

create table aud_dot_asignadas 
  (
    asig_catalogo integer,
    asig_num_dotacion integer,
    asig_year_dotacion integer,
    asig_cat_entrego integer,
    asig_fec_entrego date,
    asig_situacion char(1),
    desp_asig_catalogo integer,
    desp_asig_num_dotacion integer,
    desp_asig_year_dotacion integer,
    desp_asig_cat_entrego integer,
    desp_asig_fec_entrego date,
    desp_asig_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dot_asignadas from "public";

{ TABLE aud_dot_asignadas_cadtropa row size = 62 number of columns = 15 index size = 0 }

create table aud_dot_asignadas_cadtropa 
  (
    asig_plaza integer,
    asig_num_dotacion2 integer,
    asig_year_dotacion2 integer,
    asig_cat_entrego2 integer,
    asig_fec_entrego2 date,
    asig_situacion2 char(1),
    desp_asig_plaza integer,
    desp_asig_num_dotacion2 integer,
    desp_asig_year_dotacion2 integer,
    desp_asig_cat_entrego2 integer,
    desp_asig_fec_entrego2 date,
    desp_asig_situacion2 char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dot_asignadas_cadtropa from "public";

{ TABLE fdes_fund_sold row size = 54 number of columns = 8 index size = 9 }

create table fdes_fund_sold 
  (
    sold_catalogo integer,
    sold_codigo smallint,
    sold_fec_ini date,
    sold_fec_fin date,
    sold_registro varchar(20),
    sold_mensual money(16,2),
    sold_saldo money(16,2),
    sold_control char(1),
    primary key (sold_catalogo) 
  );

revoke all on fdes_fund_sold from "public";

{ TABLE aud_fdes_fund_sold row size = 128 number of columns = 19 index size = 0 }

create table aud_fdes_fund_sold 
  (
    sold_catalogo integer,
    sold_codigo smallint,
    sold_fec_ini date,
    sold_fec_fin date,
    sold_registro varchar(20),
    sold_mensual money(16,2),
    sold_saldo money(16,2),
    sold_control char(1),
    desp_sold_catalogo integer,
    desp_sold_codigo smallint,
    desp_sold_fec_ini date,
    desp_sold_fec_fin date,
    desp_sold_registro varchar(20),
    desp_sold_mensual money(16,2),
    desp_sold_saldo money(16,2),
    desp_sold_control char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fdes_fund_sold from "public";

{ TABLE sat_duca row size = 792 number of columns = 29 index size = 21 }

create table sat_duca 
  (
    duc_id serial not null ,
    duc_nom varchar(35),
    duc_nit varchar(35),
    duc_domicilio varchar(150),
    duc_linea integer,
    duc_inc_aran varchar(10),
    duc_merca varchar(100),
    duc_cant_bul decimal(10,2),
    duc_cla_bul decimal(10,2),
    duc_bruto decimal(10,2),
    duc_neto decimal(10,2),
    duc_uni_med char(3),
    duc_pais_or char(2),
    duc_manifiesto varchar(15),
    duc_marca varchar(3),
    duc_emb_tip char(3),
    duc_emb_tip_desc varchar(50),
    duc_linea_emb varchar(50),
    duc_anio integer,
    duc_motores integer,
    duc_mot1 varchar(50),
    duc_mot2 varchar(50),
    duc_mot3 varchar(50),
    duc_mot4 varchar(50),
    duc_serie_hin varchar(17),
    duc_eslora integer,
    duc_cant_mot_fb char(2),
    duc_fecha_ing datetime year to second,
    duc_user_ing varchar(50),
    primary key (duc_manifiesto) 
  );

revoke all on sat_duca from "public";

{ TABLE aud_sat_duca row size = 1604 number of columns = 61 index size = 0 }

create table aud_sat_duca 
  (
    duc_id integer,
    duc_nom varchar(35),
    duc_nit varchar(35),
    duc_domicilio varchar(150),
    duc_linea integer,
    duc_inc_aran varchar(10),
    duc_merca varchar(100),
    duc_cant_bul decimal(10,2),
    duc_cla_bul decimal(10,2),
    duc_bruto decimal(10,2),
    duc_neto decimal(10,2),
    duc_uni_med char(3),
    duc_pais_or char(2),
    duc_manifiesto varchar(15),
    duc_marca varchar(3),
    duc_emb_tip char(3),
    duc_emb_tip_desc varchar(50),
    duc_linea_emb varchar(50),
    duc_anio integer,
    duc_motores integer,
    duc_mot1 varchar(50),
    duc_mot2 varchar(50),
    duc_mot3 varchar(50),
    duc_mot4 varchar(50),
    duc_serie_hin varchar(17),
    duc_eslora integer,
    duc_cant_mot_fb char(2),
    duc_fecha_ing datetime year to second,
    duc_user_ing varchar(50),
    desp_duc_id integer,
    desp_duc_nom varchar(35),
    desp_duc_nit varchar(35),
    desp_duc_domicilio varchar(150),
    desp_duc_linea integer,
    desp_duc_inc_aran varchar(10),
    desp_duc_merca varchar(100),
    desp_duc_cant_bul decimal(10,2),
    desp_duc_cla_bul decimal(10,2),
    desp_duc_bruto decimal(10,2),
    desp_duc_neto decimal(10,2),
    desp_duc_uni_med char(3),
    desp_duc_pais_or char(2),
    desp_duc_manifiesto varchar(15),
    desp_duc_marca varchar(3),
    desp_duc_emb_tip char(3),
    desp_duc_emb_tip_desc varchar(50),
    desp_duc_linea_emb varchar(50),
    desp_duc_anio integer,
    desp_duc_motores integer,
    desp_duc_mot1 varchar(50),
    desp_duc_mot2 varchar(50),
    desp_duc_mot3 varchar(50),
    desp_duc_mot4 varchar(50),
    desp_duc_serie_hin varchar(17),
    desp_duc_eslora integer,
    desp_duc_cant_mot_fb char(2),
    desp_duc_fecha_ing datetime year to second,
    desp_duc_user_ing varchar(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sat_duca from "public";

{ TABLE api_keys row size = 168 number of columns = 6 index size = 9 }

create table api_keys 
  (
    api_id serial not null ,
    api_nombre varchar(50),
    api_key varchar(100),
    api_fecha_generacion datetime year to second,
    api_sit smallint,
    api_tipo smallint,
    primary key (api_id) 
  );

revoke all on api_keys from "public";

{ TABLE aud_api_keys row size = 356 number of columns = 15 index size = 0 }

create table aud_api_keys 
  (
    api_id integer,
    api_nombre varchar(50),
    api_key varchar(100),
    api_fecha_generacion datetime year to second,
    api_sit smallint,
    api_tipo smallint,
    desp_api_id integer,
    desp_api_nombre varchar(50),
    desp_api_key varchar(100),
    desp_api_fecha_generacion datetime year to second,
    desp_api_sit smallint,
    desp_api_tipo smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_api_keys from "public";

{ TABLE sat_cuscar row size = 2270 number of columns = 6 index size = 156 }

create table sat_cuscar 
  (
    cus_id serial not null ,
    cus_manifiesto varchar(150),
    cus_cuscar lvarchar,
    cus_fech_envio datetime year to day,
    cus_fecha_ing datetime year to second,
    cus_user_ing varchar(50),
    primary key (cus_manifiesto) 
  );

revoke all on sat_cuscar from "public";

{ TABLE aud_sat_cuscar row size = 4560 number of columns = 15 index size = 0 }

create table aud_sat_cuscar 
  (
    cus_id integer,
    cus_manifiesto varchar(150),
    cus_cuscar lvarchar,
    cus_fech_envio datetime year to day,
    cus_fecha_ing datetime year to second,
    cus_user_ing varchar(50),
    desp_cus_id integer,
    desp_cus_manifiesto varchar(150),
    desp_cus_cuscar lvarchar,
    desp_cus_fech_envio datetime year to day,
    desp_cus_fecha_ing datetime year to second,
    desp_cus_user_ing varchar(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sat_cuscar from "public";

{ TABLE veteranos_comparacion row size = 1207 number of columns = 30 index size = 9 }

create table veteranos_comparacion 
  (
    vet_id serial not null ,
    vet_nom_real varchar(250) not null ,
    vet_fec_alta varchar(10),
    vet_fec_baja varchar(10),
    vet_dpi char(15),
    vet_cedula char(25),
    vet_beneficiario varchar(250),
    vet_dependencia char(200),
    vet_num_listado integer not null ,
    vet_nom1 varchar(50),
    vet_nom2 varchar(50),
    vet_nom3 varchar(50),
    vet_ape1 varchar(50),
    vet_ape2 varchar(50),
    vet_ape3 varchar(50),
    vet_fam_nom1 varchar(20),
    vet_fam_nom2 varchar(20),
    vet_fam_ape1 varchar(20),
    vet_fam_ape2 varchar(20),
    vet_coin_nom integer,
    vet_coin_fec_alta integer,
    vet_coin_fec_baja integer,
    vet_coin_2fechas integer,
    vet_coin_cedula integer,
    vet_coin_dpi integer,
    vet_coin_beneficiario integer,
    vet_cat_coincidencia integer,
    vet_vac2 integer,
    vet_vac3 integer,
    vet_situacion char(5),
    primary key (vet_id) 
  );

revoke all on veteranos_comparacion from "public";

{ TABLE bin_estado row size = 109 number of columns = 3 index size = 9 }

create table bin_estado 
  (
    est_id serial not null ,
    est_desc varchar(100),
    est_situacion integer,
    primary key (est_id) 
  );

revoke all on bin_estado from "public";

{ TABLE bin_inventariado row size = 109 number of columns = 3 index size = 9 }

create table bin_inventariado 
  (
    inv_id serial not null ,
    inv_desc varchar(100),
    inv_situacion integer,
    primary key (inv_id) 
  );

revoke all on bin_inventariado from "public";

{ TABLE bin_valor_inmueble row size = 23 number of columns = 4 index size = 18 }

create table bin_valor_inmueble 
  (
    val_id integer not null ,
    val_id_inm integer,
    val_valor decimal(20,2),
    val_situacion integer,
    primary key (val_id) 
  );

revoke all on bin_valor_inmueble from "public";

{ TABLE bin_edificaciones row size = 4835 number of columns = 21 index size = 54 }

create table bin_edificaciones 
  (
    edi_id integer not null ,
    edi_nombre varchar(250),
    edi_desc lvarchar(2000),
    edi_dep smallint,
    edi_uso integer,
    edi_valor decimal(20,2),
    edi_inv integer,
    edi_adqui integer,
    edi_estado integer,
    edi_obs_estado lvarchar(2000),
    edi_departamento char(4),
    edi_mun char(4),
    edi_direccion varchar(250),
    edi_situacion integer,
    edi_situacion_bi integer,
    edi_situacion_ige integer,
    edi_situacion_fin integer,
    edi_situacion_jur integer,
    edi_remozamiento varchar(250),
    edi_fecha_remozamiento date,
    edi_valor_remozamiento decimal(20,2),
    primary key (edi_id) 
  );

revoke all on bin_edificaciones from "public";

{ TABLE bin_obs_aprobaciones row size = 1016 number of columns = 7 index size = 18 }

create table bin_obs_aprobaciones 
  (
    apro_id integer not null ,
    apro_edi_id integer,
    apro_obs_bi varchar(250),
    apro_obs_ige varchar(250),
    apro_obs_fin varchar(250),
    apro_obs_jur varchar(250),
    apro_situacion integer,
    primary key (apro_id) 
  );

revoke all on bin_obs_aprobaciones from "public";

{ TABLE bin_pdf_edificaciones row size = 263 number of columns = 4 index size = 18 }

create table bin_pdf_edificaciones 
  (
    pdf_registro_edi integer not null ,
    pdf_catalogo_edi integer,
    pdf_ruta_edi varchar(250),
    pdf_sit_edi integer,
    primary key (pdf_registro_edi) 
  );

revoke all on bin_pdf_edificaciones from "public";

{ TABLE bin_solicitudes row size = 510 number of columns = 4 index size = 18 }

create table bin_solicitudes 
  (
    sol_id integer not null ,
    sol_edi_id integer,
    sol_desc varchar(250),
    sol_obs varchar(250),
    primary key (sol_id) 
  );

revoke all on bin_solicitudes from "public";

{ TABLE com_vales row size = 357 number of columns = 13 index size = 9 }

create table com_vales 
  (
    val_codigo integer not null ,
    val_es integer not null ,
    val_vehiculo varchar(15) not null ,
    val_cat_autoriza integer not null ,
    val_cat_entrego integer not null ,
    val_cat_recibio integer not null ,
    val_recibio_nombre char(50) not null ,
    val_uso integer not null ,
    val_despacho integer not null ,
    val_mision integer not null ,
    val_situacion integer not null ,
    val_razon varchar(250,4),
    val_tipo integer,
    primary key (val_codigo) 
  );

revoke all on com_vales from "public";

{ TABLE aud_com_vales row size = 734 number of columns = 29 index size = 0 }

create table aud_com_vales 
  (
    val_codigo integer,
    val_es integer,
    val_vehiculo varchar(15),
    val_cat_autoriza integer,
    val_cat_entrego integer,
    val_cat_recibio integer,
    val_recibio_nombre char(50),
    val_uso integer,
    val_despacho integer,
    val_mision integer,
    val_situacion integer,
    val_razon varchar(250,4),
    val_tipo integer,
    desp_val_codigo integer,
    desp_val_es integer,
    desp_val_vehiculo varchar(15),
    desp_val_cat_autoriza integer,
    desp_val_cat_entrego integer,
    desp_val_cat_recibio integer,
    desp_val_recibio_nombre char(50),
    desp_val_uso integer,
    desp_val_despacho integer,
    desp_val_mision integer,
    desp_val_situacion integer,
    desp_val_razon varchar(250,4),
    desp_val_tipo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_com_vales from "public";

{ TABLE aud_bin_obs_aprobaciones row size = 2052 number of columns = 17 index size = 0 }

create table aud_bin_obs_aprobaciones 
  (
    apro_id integer,
    apro_edi_id integer,
    apro_obs_bi varchar(250),
    apro_obs_ige varchar(250),
    apro_obs_fin varchar(250),
    apro_obs_jur varchar(250),
    apro_situacion integer,
    desp_apro_id integer,
    desp_apro_edi_id integer,
    desp_apro_obs_bi varchar(250),
    desp_apro_obs_ige varchar(250),
    desp_apro_obs_fin varchar(250),
    desp_apro_obs_jur varchar(250),
    desp_apro_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_obs_aprobaciones from "public";

{ TABLE aud_bin_pdf_edificaciones row size = 546 number of columns = 11 index size = 0 }

create table aud_bin_pdf_edificaciones 
  (
    pdf_registro_edi integer,
    pdf_catalogo_edi integer,
    pdf_ruta_edi varchar(250),
    pdf_sit_edi integer,
    desp_pdf_registro_edi integer,
    desp_pdf_catalogo_edi integer,
    desp_pdf_ruta_edi varchar(250),
    desp_pdf_sit_edi integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_pdf_edificaciones from "public";

{ TABLE aud_bin_solicitudes row size = 1040 number of columns = 11 index size = 0 }

create table aud_bin_solicitudes 
  (
    sol_id integer,
    sol_edi_id integer,
    sol_desc varchar(250),
    sol_obs varchar(250),
    desp_sol_id integer,
    desp_sol_edi_id integer,
    desp_sol_desc varchar(250),
    desp_sol_obs varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_solicitudes from "public";

{ TABLE aud_bin_inventariado row size = 238 number of columns = 9 index size = 0 }

create table aud_bin_inventariado 
  (
    inv_id integer,
    inv_desc varchar(100),
    inv_situacion integer,
    desp_inv_id integer,
    desp_inv_desc varchar(100),
    desp_inv_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_inventariado from "public";

{ TABLE aud_bin_valor_inmueble row size = 66 number of columns = 11 index size = 0 }

create table aud_bin_valor_inmueble 
  (
    val_id integer,
    val_id_inm integer,
    val_valor decimal(20,2),
    val_situacion integer,
    desp_val_id integer,
    desp_val_id_inm integer,
    desp_val_valor decimal(20,2),
    desp_val_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_valor_inmueble from "public";

{ TABLE aud_bin_estado row size = 238 number of columns = 9 index size = 0 }

create table aud_bin_estado 
  (
    est_id integer,
    est_desc varchar(100),
    est_situacion integer,
    desp_est_id integer,
    desp_est_desc varchar(100),
    desp_est_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_estado from "public";

{ TABLE aud_bin_edificaciones row size = 9690 number of columns = 45 index size = 0 }

create table aud_bin_edificaciones 
  (
    edi_id integer,
    edi_nombre varchar(250),
    edi_desc lvarchar(2000),
    edi_dep smallint,
    edi_uso integer,
    edi_valor decimal(20,2),
    edi_inv integer,
    edi_adqui integer,
    edi_estado integer,
    edi_obs_estado lvarchar(2000),
    edi_departamento char(4),
    edi_mun char(4),
    edi_direccion varchar(250),
    edi_situacion integer,
    edi_situacion_bi integer,
    edi_situacion_ige integer,
    edi_situacion_fin integer,
    edi_situacion_jur integer,
    edi_remozamiento varchar(250),
    edi_fecha_remozamiento date,
    edi_valor_remozamiento decimal(20,2),
    desp_edi_id integer,
    desp_edi_nombre varchar(250),
    desp_edi_desc lvarchar(2000),
    desp_edi_dep smallint,
    desp_edi_uso integer,
    desp_edi_valor decimal(20,2),
    desp_edi_inv integer,
    desp_edi_adqui integer,
    desp_edi_estado integer,
    desp_edi_obs_estado lvarchar(2000),
    desp_edi_departamento char(4),
    desp_edi_mun char(4),
    desp_edi_direccion varchar(250),
    desp_edi_situacion integer,
    desp_edi_situacion_bi integer,
    desp_edi_situacion_ige integer,
    desp_edi_situacion_fin integer,
    desp_edi_situacion_jur integer,
    desp_edi_remozamiento varchar(250),
    desp_edi_fecha_remozamiento date,
    desp_edi_valor_remozamiento decimal(20,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bin_edificaciones from "public";

{ TABLE evaluacion_docente_clase row size = 87 number of columns = 26 index size = 9 }

create table evaluacion_docente_clase 
  (
    eva_id integer not null ,
    eva_extencion integer,
    eva_docente integer,
    eva_materia smallint,
    eva_fecha varchar(30),
    eva_planificacion_general smallint,
    eva_motivacion smallint,
    eva_presentacion smallint,
    eva_recursos_educativos smallint,
    eva_dominio_del_tema smallint,
    eva_capta_atencion_alumno smallint,
    eva_comunicacion smallint,
    eva_organizacion smallint,
    eva_fijacion smallint,
    eva_evaluacion_constante smallint,
    eva_promueve_expresion_estudiante smallint,
    eva_resuelve_dudas smallint,
    eva_metodologia smallint,
    eva_resuelve_evaluaciones_con_alumno smallint,
    eva_informa_zona_acumulada smallint,
    eva_dosificacion_de_los_temas smallint,
    eva_puntualidad smallint,
    eva_higiene_personal smallint,
    eva_infunde_respeto smallint,
    eva_informa_acerca_evaluaciones_mineduc smallint,
    eva_situacion smallint,
    primary key (eva_id) 
  );

revoke all on evaluacion_docente_clase from "public";

{ TABLE aud_evaluacion_docente_clase row size = 194 number of columns = 55 index size = 0 }

create table aud_evaluacion_docente_clase 
  (
    eva_id integer,
    eva_extencion integer,
    eva_docente integer,
    eva_materia smallint,
    eva_fecha varchar(30),
    eva_planificacion_general smallint,
    eva_motivacion smallint,
    eva_presentacion smallint,
    eva_recursos_educativos smallint,
    eva_dominio_del_tema smallint,
    eva_capta_atencion_alumno smallint,
    eva_comunicacion smallint,
    eva_organizacion smallint,
    eva_fijacion smallint,
    eva_evaluacion_constante smallint,
    eva_promueve_expresion_estudiante smallint,
    eva_resuelve_dudas smallint,
    eva_metodologia smallint,
    eva_resuelve_evaluaciones_con_alumno smallint,
    eva_informa_zona_acumulada smallint,
    eva_dosificacion_de_los_temas smallint,
    eva_puntualidad smallint,
    eva_higiene_personal smallint,
    eva_infunde_respeto smallint,
    eva_informa_acerca_evaluaciones_mineduc smallint,
    eva_situacion smallint,
    desp_id integer,
    desp_extencion integer,
    desp_docente integer,
    desp_materia smallint,
    desp_fecha varchar(30),
    desp_planificacion_general smallint,
    desp_motivacion smallint,
    desp_presentacion smallint,
    desp_recursos_educativos smallint,
    desp_dominio_del_tema smallint,
    desp_capta_atencion_alumno smallint,
    desp_comunicacion smallint,
    desp_organizacion smallint,
    desp_fijacion smallint,
    desp_evaluacion_constante smallint,
    desp_promueve_expresion_estudiante smallint,
    desp_resuelve_dudas smallint,
    desp_metodologia smallint,
    desp_resuelve_evaluaciones_con_alumno smallint,
    desp_informa_zona_acumulada smallint,
    desp_dosificacion_de_los_temas smallint,
    desp_puntualidad smallint,
    desp_higiene_personal smallint,
    desp_infunde_respeto smallint,
    desp_informa_acerca_evaluaciones_mineduc smallint,
    desp_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_evaluacion_docente_clase from "public";

{ TABLE informacion_general_peisol row size = 297 number of columns = 26 index size = 9 }

create table informacion_general_peisol 
  (
    info_id integer not null ,
    info_extencion smallint,
    info_plan varchar(15),
    info_jornada varchar(15),
    info_semestre varchar(5),
    info_codigo varchar(15),
    info_tipo smallint,
    info_catalogo integer,
    info_nom1 varchar(20),
    info_nom2 varchar(20),
    info_ape1 varchar(20),
    info_ape2 varchar(20),
    info_dpi varchar(20),
    info_fecha_nac date,
    info_sexo varchar(5),
    info_encargado varchar(25),
    info_telefono_encar integer,
    info_antes_estudios smallint,
    info_extencion_antes smallint,
    info_semestre_antes varchar(15),
    info_ano_antes date,
    info_especialidad varchar(30),
    info_tele_pers integer,
    info_correo varchar(20),
    info_fecha_inscrip date,
    info_situacion smallint,
    primary key (info_id) 
  );

revoke all on informacion_general_peisol from "public";

{ TABLE aud_informacion_general_peisol row size = 614 number of columns = 55 index size = 0 }

create table aud_informacion_general_peisol 
  (
    info_id integer,
    info_extencion smallint,
    info_plan varchar(15),
    info_jornada varchar(15),
    info_semestre varchar(5),
    info_codigo varchar(15),
    info_tipo smallint,
    info_catalogo integer,
    info_nom1 varchar(20),
    info_nom2 varchar(20),
    info_ape1 varchar(20),
    info_ape2 varchar(20),
    info_dpi varchar(20),
    info_fecha_nac date,
    info_sexo varchar(5),
    info_encargado varchar(25),
    info_telefono_encar integer,
    info_antes_estudios smallint,
    info_extencion_antes smallint,
    info_semestre_antes varchar(15),
    info_ano_antes date,
    info_especialidad varchar(30),
    info_tele_pers integer,
    info_correo varchar(20),
    info_fecha_inscrip date,
    info_situacion smallint,
    desp_id integer,
    desp_extencion smallint,
    desp_plan varchar(15),
    desp_jornada varchar(15),
    desp_semestre varchar(5),
    desp_codigo varchar(15),
    desp_tipo smallint,
    desp_catalogo integer,
    desp_nom1 varchar(20),
    desp_nom2 varchar(20),
    desp_ape1 varchar(20),
    desp_ape2 varchar(20),
    desp_dpi varchar(20),
    desp_fecha_nac date,
    desp_sexo varchar(5),
    desp_encargado varchar(25),
    desp_telefono_encar integer,
    desp_antes_estudios smallint,
    desp_extencion_antes smallint,
    desp_semestre_antes varchar(15),
    desp_ano_antes date,
    desp_especialidad varchar(30),
    desp_tele_pers integer,
    desp_correo varchar(20),
    desp_fecha_inscrip date,
    desp_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_informacion_general_peisol from "public";

{ TABLE evaluacion_docente row size = 89 number of columns = 26 index size = 9 }

create table evaluacion_docente 
  (
    eva_id integer not null ,
    eva_extencion integer,
    eva_docente integer,
    eva_fecha varchar(30),
    eva_programa_convenientemente_sus_actividades smallint,
    eva_demuestra_seguridad_habilidad_en_su_trabajo smallint,
    eva_planeamientos_bien_definidos smallint,
    eva_fomenta_en_los_estudiantes_reflexion_critica smallint,
    eva_promueve_interaccion_entre_estudiantes smallint,
    eva_utiliza_materiales_ayudas_para_impartir_clase smallint,
    eva_demuestra_interes_entusiasmo_al_impartir_clases smallint,
    eva_promueve_participacion_de_los_estudiantes smallint,
    eva_se_comunica_con_fluidez_propiedad smallint,
    eva_mantiene_orden_disciplina_en_clase smallint,
    eva_relaciones_humanas smallint,
    eva_puntualidad smallint,
    eva_presentacion_personal smallint,
    eva_cumplimiento_procedimientos_administrativos smallint,
    eva_se_ausenta_frecuentemente_con_sin_justificacion smallint,
    eva_interes_colaborar_actividades_extra_aula smallint,
    eva_interes_aprender_cosas_nuevas smallint,
    eva_acepta_sugerencia_o_recomendacion smallint,
    eva_capacidad_integracion_colaboracion smallint,
    eva_demuestra_hablidad_organizar_dirigir_actividades smallint,
    eva_muestra_interes_por_el_manteniemiento_area_de_trabajo smallint,
    eva_situacion integer,
    primary key (eva_id) 
  );

revoke all on evaluacion_docente from "public";

{ TABLE aud_evaluacion_docente row size = 198 number of columns = 55 index size = 0 }

create table aud_evaluacion_docente 
  (
    eva_id integer,
    eva_extencion integer,
    eva_docente integer,
    eva_fecha varchar(30),
    eva_programa_convenientemente_sus_actividades smallint,
    eva_demuestra_seguridad_habilidad_en_su_trabajo smallint,
    eva_planeamientos_bien_definidos smallint,
    eva_fomenta_en_los_estudiantes_reflexion_critica smallint,
    eva_promueve_interaccion_entre_estudiantes smallint,
    eva_utiliza_materiales_ayudas_para_impartir_clase smallint,
    eva_demuestra_interes_entusiasmo_al_impartir_clases smallint,
    eva_promueve_participacion_de_los_estudiantes smallint,
    eva_se_comunica_con_fluidez_propiedad smallint,
    eva_mantiene_orden_disciplina_en_clase smallint,
    eva_relaciones_humanas smallint,
    eva_puntualidad smallint,
    eva_presentacion_personal smallint,
    eva_cumplimiento_procedimientos_administrativos smallint,
    eva_se_ausenta_frecuentemente_con_sin_justificacion smallint,
    eva_interes_colaborar_actividades_extra_aula smallint,
    eva_interes_aprender_cosas_nuevas smallint,
    eva_acepta_sugerencia_o_recomendacion smallint,
    eva_capacidad_integracion_colaboracion smallint,
    eva_demuestra_hablidad_organizar_dirigir_actividades smallint,
    eva_muestra_interes_por_el_manteniemiento_area_de_trabajo smallint,
    eva_situacion integer,
    desp_id integer,
    desp_extencion integer,
    desp_docente integer,
    desp_fecha varchar(30),
    desp_programa_convenientemente_sus_actividades smallint,
    desp_demuestra_seguridad_habilidad_en_su_trabajo smallint,
    desp_planeamientos_bien_definidos smallint,
    desp_fomenta_en_los_estudiantes_reflexion_critica smallint,
    desp_promueve_interaccion_entre_estudiantes smallint,
    desp_utiliza_materiales_ayudas_para_impartir_clase smallint,
    desp_demuestra_interes_entusiasmo_al_impartir_clases smallint,
    desp_promueve_participacion_de_los_estudiantes smallint,
    desp_se_comunica_con_fluidez_propiedad smallint,
    desp_mantiene_orden_disciplina_en_clase smallint,
    desp_relaciones_humanas smallint,
    desp_puntualidad smallint,
    desp_presentacion_personal smallint,
    desp_cumplimiento_procedimientos_administrativos smallint,
    desp_se_ausenta_frecuentemente_con_sin_justificacion smallint,
    desp_interes_colaborar_actividades_extra_aula smallint,
    desp_interes_aprender_cosas_nuevas smallint,
    desp_acepta_sugerencia_o_recomendacion smallint,
    desp_capacidad_integracion_colaboracion smallint,
    desp_demuestra_hablidad_organizar_dirigir_actividades smallint,
    desp_muestra_interes_por_el_manteniemiento_area_de_trabajo smallint,
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_evaluacion_docente from "public";

{ TABLE notas_finales_peisol row size = 113 number of columns = 13 index size = 9 }

create table notas_finales_peisol 
  (
    not_id integer not null ,
    not_extencion integer,
    not_docente integer,
    not_alumno smallint,
    not_semestre float,
    not_clase1 float,
    not_clase2 float,
    not_clase3 float,
    not_clase4 float,
    not_clase5 float,
    not_clase6 float,
    not_fecha varchar(40),
    not_situacion smallint,
    primary key (not_id) 
  );

revoke all on notas_finales_peisol from "public";

{ TABLE aud_notas_finales_peisol row size = 246 number of columns = 29 index size = 0 }

create table aud_notas_finales_peisol 
  (
    not_id integer,
    not_extencion integer,
    not_docente integer,
    not_alumno smallint,
    not_semestre float,
    not_clase1 float,
    not_clase2 float,
    not_clase3 float,
    not_clase4 float,
    not_clase5 float,
    not_clase6 float,
    not_fecha varchar(40),
    not_situacion smallint,
    desp_not_id integer,
    desp_not_extencion integer,
    desp_not_docente integer,
    desp_not_alumno smallint,
    desp_not_semestre float,
    desp_not_clase1 float,
    desp_not_clase2 float,
    desp_not_clase3 float,
    desp_not_clase4 float,
    desp_not_clase5 float,
    desp_not_clase6 float,
    desp_not_fecha varchar(40),
    desp_not_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_notas_finales_peisol from "public";

{ TABLE maga_actividades row size = 484 number of columns = 11 index size = 9 }

create table maga_actividades 
  (
    com_id serial not null ,
    com_desc varchar(50),
    com_lugar varchar(50),
    com_doc varchar(50),
    com_fec_inicio datetime year to minute,
    com_fec_fin datetime year to minute,
    com_detalle varchar(150),
    com_info varchar(150),
    com_sit smallint,
    com_ing datetime year to minute,
    com_dep smallint,
    primary key (com_id) 
  );

revoke all on maga_actividades from "public";

{ TABLE aud_maga_actividades row size = 988 number of columns = 25 index size = 0 }

create table aud_maga_actividades 
  (
    com_id integer,
    com_desc varchar(50),
    com_lugar varchar(50),
    com_doc varchar(50),
    com_fec_inicio datetime year to minute,
    com_fec_fin datetime year to minute,
    com_detalle varchar(150),
    com_info varchar(150),
    com_sit smallint,
    com_ing datetime year to minute,
    com_dep smallint,
    desp_com_id integer,
    desp_com_desc varchar(50),
    desp_com_lugar varchar(50),
    desp_com_doc varchar(50),
    desp_com_fec_inicio datetime year to minute,
    desp_com_fec_fin datetime year to minute,
    desp_com_detalle varchar(150),
    desp_com_info varchar(150),
    desp_com_sit smallint,
    desp_com_ing datetime year to minute,
    desp_com_dep smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_maga_actividades from "public";

{ TABLE materi_peisol row size = 164 number of columns = 9 index size = 9 }

create table materi_peisol 
  (
    mat_id integer not null ,
    mat_semestre smallint,
    mat_clase_1 varchar(25),
    mat_clase_2 varchar(25),
    mat_clase_3 varchar(25),
    mat_clase_4 varchar(25),
    mat_clase_5 varchar(25),
    mat_clase_6 varchar(25),
    mat_situacion smallint,
    primary key (mat_id) 
  );

revoke all on materi_peisol from "public";

{ TABLE aud_materi_peisol row size = 348 number of columns = 21 index size = 0 }

create table aud_materi_peisol 
  (
    mat_id integer,
    mat_semestre smallint,
    mat_clase_1 varchar(25),
    mat_clase_2 varchar(25),
    mat_clase_3 varchar(25),
    mat_clase_4 varchar(25),
    mat_clase_5 varchar(25),
    mat_clase_6 varchar(25),
    mat_situacion smallint,
    desp_mat_id integer,
    desp_mat_semestre smallint,
    desp_mat_clase_1 varchar(25),
    desp_mat_clase_2 varchar(25),
    desp_mat_clase_3 varchar(25),
    desp_mat_clase_4 varchar(25),
    desp_mat_clase_5 varchar(25),
    desp_mat_clase_6 varchar(25),
    desp_mat_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_materi_peisol from "public";

{ TABLE maga_personal_asignado row size = 14 number of columns = 4 index size = 9 }

create table maga_personal_asignado 
  (
    asi_id serial not null ,
    asi_com integer,
    asi_asig integer,
    asi_sit smallint,
    primary key (asi_id) 
  );

revoke all on maga_personal_asignado from "public";

{ TABLE aud_maga_personal_asignado row size = 48 number of columns = 11 index size = 0 }

create table aud_maga_personal_asignado 
  (
    asi_id integer,
    asi_com integer,
    asi_asig integer,
    asi_sit smallint,
    desp_asi_id integer,
    desp_asi_com integer,
    desp_asi_asig integer,
    desp_asi_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_maga_personal_asignado from "public";

{ TABLE vlh_maquinaria row size = 3294 number of columns = 15 index size = 9 }

create table vlh_maquinaria 
  (
    maqu_id integer not null ,
    maqu_catalogo integer,
    maqu_tanque decimal(10,2),
    maqu_tipo_combustible varchar(250),
    maqu_consumo_hora decimal(10,2),
    maqu_dependencia smallint,
    maqu_caballos_fuerza integer,
    maqu_tipo_maquinaria varchar(250),
    maqu_serie varchar(250),
    maqu_modelo integer,
    maqu_estado smallint,
    maqu_obser lvarchar(2000),
    maqu_situacion integer,
    maqu_obser1 varchar(250),
    maqu_obser2 varchar(250),
    primary key (maqu_id) 
  );

revoke all on vlh_maquinaria from "public";

{ TABLE aud_vlh_maquinaria row size = 6608 number of columns = 33 index size = 0 }

create table aud_vlh_maquinaria 
  (
    maqu_id integer,
    maqu_catalogo integer,
    maqu_tanque decimal(10,2),
    maqu_tipo_combustible varchar(250),
    maqu_consumo_hora decimal(10,2),
    maqu_dependencia smallint,
    maqu_caballos_fuerza integer,
    maqu_tipo_maquinaria varchar(250),
    maqu_serie varchar(250),
    maqu_modelo integer,
    maqu_estado smallint,
    maqu_obser lvarchar(2000),
    maqu_situacion integer,
    maqu_obser1 varchar(250),
    maqu_obser2 varchar(250),
    desp_maqu_id integer,
    desp_maqu_catalogo integer,
    desp_maqu_tanque decimal(10,2),
    desp_maqu_tipo_combustible varchar(250),
    desp_maqu_consumo_hora decimal(10,2),
    desp_maqu_dependencia smallint,
    desp_maqu_caballos_fuerza integer,
    desp_maqu_tipo_maquinaria varchar(250),
    desp_maqu_serie varchar(250),
    desp_maqu_modelo integer,
    desp_maqu_estado smallint,
    desp_maqu_obser lvarchar(2000),
    desp_maqu_situacion integer,
    desp_maqu_obser1 varchar(250),
    desp_maqu_obser2 varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_maquinaria from "public";

{ TABLE vlh_validaciones_fag row size = 60 number of columns = 10 index size = 7 }

create table vlh_validaciones_fag 
  (
    val_id_fag smallint not null ,
    val_catalogo_fag varchar(30),
    val_catalogo_equ_fag integer,
    val_revisor_fag integer,
    val_comte_fag integer,
    val_fecha_fag date,
    val_situacion_fag varchar(1),
    val_dependencia_fag smallint,
    val_fecha_emision_fag date,
    val_tipo_fag varchar(2),
    primary key (val_id_fag) 
  );

revoke all on vlh_validaciones_fag from "public";

{ TABLE aud_vlh_validaciones_fag row size = 140 number of columns = 23 index size = 0 }

create table aud_vlh_validaciones_fag 
  (
    val_id_fag smallint,
    val_catalogo_fag varchar(30),
    val_catalogo_equ_fag integer,
    val_revisor_fag integer,
    val_comte_fag integer,
    val_fecha_fag date,
    val_situacion_fag varchar(1),
    val_dependencia_fag smallint,
    val_fecha_emision_fag date,
    val_tipo_fag varchar(2),
    desp_val_id_fag smallint,
    desp_val_catalogo_fag varchar(30),
    desp_val_catalogo_equ_fag integer,
    desp_val_revisor_fag integer,
    desp_val_comte_fag integer,
    desp_val_fecha_fag date,
    desp_val_situacion_fag varchar(1),
    desp_val_dependencia_fag smallint,
    desp_val_fecha_emision_fag date,
    desp_val_tipo_fag varchar(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_validaciones_fag from "public";

{ TABLE vlh_desc_elimina row size = 2323 number of columns = 9 index size = 9 }

create table vlh_desc_elimina 
  (
    eli_id integer not null ,
    eli_catalogo integer,
    eli_matricula varchar(30),
    eli_tipo_trasporte varchar(10),
    eli_descripcion lvarchar(2000),
    eli_fecha date,
    eli_tipo_transaccion varchar(10),
    eli_situacion integer,
    eli_obs varchar(250),
    primary key (eli_id) 
  );

revoke all on vlh_desc_elimina from "public";

{ TABLE aud_vlh_desc_elimina row size = 4666 number of columns = 21 index size = 0 }

create table aud_vlh_desc_elimina 
  (
    eli_id integer,
    eli_catalogo integer,
    eli_matricula varchar(30),
    eli_tipo_trasporte varchar(10),
    eli_descripcion lvarchar(2000),
    eli_fecha date,
    eli_tipo_transaccion varchar(10),
    eli_situacion integer,
    eli_obs varchar(250),
    desp_eli_id integer,
    desp_eli_catalogo integer,
    desp_eli_matricula varchar(30),
    desp_eli_tipo_trasporte varchar(10),
    desp_eli_descripcion lvarchar(2000),
    desp_eli_fecha date,
    desp_eli_tipo_transaccion varchar(10),
    desp_eli_situacion integer,
    desp_eli_obs varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_desc_elimina from "public";

{ TABLE vlh_retorno_cal row size = 1527 number of columns = 7 index size = 9 }

create table vlh_retorno_cal 
  (
    ret_id integer not null ,
    ret_fecha date,
    ret_catalogo_vehiculo integer,
    ret_catalogo_carreton integer,
    ret_descripcion lvarchar(1500),
    ret_user integer,
    ret_situacion integer,
    primary key (ret_id) 
  );

revoke all on vlh_retorno_cal from "public";

{ TABLE aud_vlh_retorno_cal row size = 3074 number of columns = 17 index size = 0 }

create table aud_vlh_retorno_cal 
  (
    ret_id integer,
    ret_fecha date,
    ret_catalogo_vehiculo integer,
    ret_catalogo_carreton integer,
    ret_descripcion lvarchar(1500),
    ret_user integer,
    ret_situacion integer,
    desp_ret_id integer,
    desp_ret_fecha date,
    desp_ret_catalogo_vehiculo integer,
    desp_ret_catalogo_carreton integer,
    desp_ret_descripcion lvarchar(1500),
    desp_ret_user integer,
    desp_ret_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_retorno_cal from "public";

{ TABLE vlh_pdf row size = 263 number of columns = 4 index size = 9 }

create table vlh_pdf 
  (
    pdf_registro integer not null ,
    pdf_catalogo integer,
    pdf_ruta varchar(250),
    pdf_sit integer,
    primary key (pdf_registro) 
  );

revoke all on vlh_pdf from "public";

{ TABLE aud_vlh_pdf row size = 546 number of columns = 11 index size = 0 }

create table aud_vlh_pdf 
  (
    pdf_registro integer,
    pdf_catalogo integer,
    pdf_ruta varchar(250),
    pdf_sit integer,
    desp_pdf_registro integer,
    desp_pdf_catalogo integer,
    desp_pdf_ruta varchar(250),
    desp_pdf_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_pdf from "public";

{ TABLE vlh_pdf_embarcaciones row size = 263 number of columns = 4 index size = 9 }

create table vlh_pdf_embarcaciones 
  (
    pdf_registro_emb integer,
    pdf_catalogo_emb integer,
    pdf_ruta_emb varchar(250),
    pdf_sit_emb integer,
    primary key (pdf_registro_emb) 
  );

revoke all on vlh_pdf_embarcaciones from "public";

{ TABLE aud_vlh_pdf_embarcaciones row size = 546 number of columns = 11 index size = 0 }

create table aud_vlh_pdf_embarcaciones 
  (
    pdf_registro_emb integer,
    pdf_catalogo_emb integer,
    pdf_ruta_emb varchar(250),
    pdf_sit_emb integer,
    desp_pdf_registro_emb integer,
    desp_pdf_catalogo_emb integer,
    desp_pdf_ruta_emb varchar(250),
    desp_pdf_sit_emb integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_pdf_embarcaciones from "public";

{ TABLE vlh_pdf_fag row size = 290 number of columns = 4 index size = 9 }

create table vlh_pdf_fag 
  (
    pdf_registro_fag integer not null ,
    pdf_catalogo_fag varchar(30),
    pdf_ruta_fag varchar(250),
    pdf_sit_fag integer,
    primary key (pdf_registro_fag) 
  );

revoke all on vlh_pdf_fag from "public";

{ TABLE aud_vlh_pdf_fag row size = 546 number of columns = 11 index size = 0 }

create table aud_vlh_pdf_fag 
  (
    pdf_registro_fag integer,
    pdf_catalogo_fag integer,
    pdf_ruta_fag varchar(250),
    pdf_sit_fag integer,
    desp_pdf_registro_fag integer,
    desp_pdf_catalogo_fag integer,
    desp_pdf_ruta_fag varchar(250),
    desp_pdf_sit_fag integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_pdf_fag from "public";

{ TABLE vlh_pdf_maquinaria row size = 290 number of columns = 4 index size = 9 }

create table vlh_pdf_maquinaria 
  (
    pdf_registro_maqu integer not null ,
    pdf_catalogo_maqu varchar(30),
    pdf_ruta_maqu varchar(250),
    pdf_sit_maqu integer,
    primary key (pdf_registro_maqu) 
  );

revoke all on vlh_pdf_maquinaria from "public";

{ TABLE aud_vlh_pdf_maquinaria row size = 546 number of columns = 11 index size = 0 }

create table aud_vlh_pdf_maquinaria 
  (
    pdf_registro_maqu integer,
    pdf_catalogo_maqu integer,
    pdf_ruta_maqu varchar(250),
    pdf_sit_maqu integer,
    desp_pdf_registro_maqu integer,
    desp_pdf_catalogo_maqu integer,
    desp_pdf_ruta_maqu varchar(250),
    desp_pdf_sit_maqu integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_pdf_maquinaria from "public";

{ TABLE vt_mper1 row size = 522 number of columns = 9 index size = 9 }

create table vt_mper1 
  (
    vt_catalogo integer not null ,
    vt_grado char(100),
    vt_ape1 char(100),
    vt_ape2 char(100),
    vt_nom1 char(100),
    vt_nom2 char(100),
    vt_ord_cel char(10),
    vt_no_ced integer,
    vt_fecha date,
    primary key (vt_catalogo) 
  );

revoke all on vt_mper1 from "public";

{ TABLE vt_tab_ls_12 row size = 201 number of columns = 1 index size = 0 }

create table vt_tab_ls_12 
  (
    vt12_nombre varchar(200)
  );

revoke all on vt_tab_ls_12 from "public";

{ TABLE vt_mper3 row size = 518 number of columns = 3 index size = 0 }

create table vt_mper3 
  (
    vt_cat integer,
    vt_grado varchar(100),
    vt_nombre lvarchar(410)
  );

revoke all on vt_mper3 from "public";

{ TABLE vt_tab_ls_1 row size = 201 number of columns = 1 index size = 0 }

create table vt_tab_ls_1 
  (
    vt1_nombre varchar(200)
  );

revoke all on vt_tab_ls_1 from "public";

{ TABLE vt_tab_ls_2 row size = 201 number of columns = 1 index size = 0 }

create table vt_tab_ls_2 
  (
    vt2_nombre varchar(200)
  );

revoke all on vt_tab_ls_2 from "public";

{ TABLE vt_tab_ls_3 row size = 201 number of columns = 1 index size = 0 }

create table vt_tab_ls_3 
  (
    vt3_nombre varchar(200)
  );

revoke all on vt_tab_ls_3 from "public";

{ TABLE vt_tab_ls_4 row size = 201 number of columns = 1 index size = 0 }

create table vt_tab_ls_4 
  (
    vt4_nombre varchar(200)
  );

revoke all on vt_tab_ls_4 from "public";

{ TABLE vt_tab_ls_5 row size = 201 number of columns = 1 index size = 0 }

create table vt_tab_ls_5 
  (
    vt5_nombre varchar(200)
  );

revoke all on vt_tab_ls_5 from "public";

{ TABLE vt_tab_ls_6 row size = 201 number of columns = 1 index size = 0 }

create table vt_tab_ls_6 
  (
    vt6_nombre varchar(200)
  );

revoke all on vt_tab_ls_6 from "public";

{ TABLE vt_tab_ls_7 row size = 201 number of columns = 1 index size = 0 }

create table vt_tab_ls_7 
  (
    vt7_nombre varchar(200)
  );

revoke all on vt_tab_ls_7 from "public";

{ TABLE vt_tab_ls_8 row size = 201 number of columns = 1 index size = 0 }

create table vt_tab_ls_8 
  (
    vt8_nombre varchar(200)
  );

revoke all on vt_tab_ls_8 from "public";

{ TABLE vt_tab_ls_9 row size = 201 number of columns = 1 index size = 0 }

create table vt_tab_ls_9 
  (
    vt9_nombre varchar(200)
  );

revoke all on vt_tab_ls_9 from "public";

{ TABLE vt_tab_ls_10 row size = 201 number of columns = 1 index size = 0 }

create table vt_tab_ls_10 
  (
    vt10_nombre varchar(200)
  );

revoke all on vt_tab_ls_10 from "public";

{ TABLE vt_tab_ls_11 row size = 201 number of columns = 1 index size = 0 }

create table vt_tab_ls_11 
  (
    vt11_nombre varchar(200)
  );

revoke all on vt_tab_ls_11 from "public";

{ TABLE vt_tab_ls_13 row size = 201 number of columns = 1 index size = 0 }

create table vt_tab_ls_13 
  (
    vt13_nombre varchar(200)
  );

revoke all on vt_tab_ls_13 from "public";

{ TABLE aud_fin_programa row size = 48 number of columns = 11 index size = 0 }

create table aud_fin_programa 
  (
    pro_id integer,
    pro_nombre varchar(1,1),
    pro_fecha date,
    pro_situacion integer,
    desp_pro_id integer,
    desp_pro_nombre varchar(1,1),
    desp_pro_fecha date,
    desp_pro_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fin_programa from "public";

{ TABLE aud_fin_subproducto row size = 88 number of columns = 15 index size = 0 }

create table aud_fin_subproducto 
  (
    subp_id integer,
    subp_nombre varchar(1,1),
    subp_fecha date,
    subp_producto integer,
    subp_politica varchar(15),
    subp_situacion integer,
    desp_subp_id integer,
    desp_subp_nombre varchar(1,1),
    desp_subp_fecha date,
    desp_subp_producto integer,
    desp_subp_politica varchar(15),
    desp_subp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fin_subproducto from "public";

{ TABLE aud_fin_producto row size = 56 number of columns = 13 index size = 0 }

create table aud_fin_producto 
  (
    prod_id integer,
    prod_nombre varchar(1,1),
    prod_fecha date,
    prod_actividades integer,
    prod_situacion integer,
    desp_prod_id integer,
    desp_prod_nombre varchar(1,1),
    desp_prod_fecha date,
    desp_prod_actividades integer,
    desp_prod_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fin_producto from "public";

{ TABLE aud_fin_actividades row size = 56 number of columns = 13 index size = 0 }

create table aud_fin_actividades 
  (
    act_id integer,
    act_nombre varchar(1,1),
    act_fecha date,
    act_programa integer,
    act_situacion integer,
    desp_act_id integer,
    desp_act_nombre varchar(1,1),
    desp_act_fecha date,
    desp_act_programa integer,
    desp_act_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fin_actividades from "public";

{ TABLE aud_fin_subpro_desc row size = 84 number of columns = 13 index size = 0 }

create table aud_fin_subpro_desc 
  (
    subpro_plaza integer,
    subpro_politica varchar(15),
    subpro_situacion integer,
    subpro_fecha date,
    subpro_subproducto integer,
    desp_subpro_plaza integer,
    desp_subpro_politica varchar(15),
    desp_subpro_situacion integer,
    desp_subpro_fecha date,
    desp_subpro_subproducto integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fin_subpro_desc from "public";

{ TABLE fin_subpro_desc row size = 32 number of columns = 5 index size = 18 }

create table fin_subpro_desc 
  (
    subpro_plaza integer,
    subpro_politica varchar(15),
    subpro_situacion integer,
    subpro_fecha date,
    subpro_subproducto integer,
    primary key (subpro_plaza) 
  );

revoke all on fin_subpro_desc from "public";

{ TABLE fin_programa row size = 263 number of columns = 4 index size = 9 }

create table fin_programa 
  (
    pro_id integer,
    pro_nombre varchar(250),
    pro_fecha date,
    pro_situacion integer,
    primary key (pro_id) 
  );

revoke all on fin_programa from "public";

{ TABLE fin_actividades row size = 267 number of columns = 5 index size = 18 }

create table fin_actividades 
  (
    act_id integer,
    act_nombre varchar(250),
    act_fecha date,
    act_programa integer,
    act_situacion integer,
    primary key (act_id) 
  );

revoke all on fin_actividades from "public";

{ TABLE fin_producto row size = 267 number of columns = 5 index size = 18 }

create table fin_producto 
  (
    prod_id integer,
    prod_nombre varchar(250),
    prod_fecha date,
    prod_actividades integer,
    prod_situacion integer,
    primary key (prod_id) 
  );

revoke all on fin_producto from "public";

{ TABLE fin_subproducto row size = 283 number of columns = 6 index size = 18 }

create table fin_subproducto 
  (
    subp_id integer,
    subp_nombre varchar(250),
    subp_fecha date,
    subp_producto integer,
    subp_politica varchar(15),
    subp_situacion integer,
    primary key (subp_id) 
  );

revoke all on fin_subproducto from "public";

{ TABLE sig_asig_grupos row size = 11 number of columns = 4 index size = 9 }

create table sig_asig_grupos 
  (
    asi_id serial not null ,
    asi_cat integer,
    asi_grupo char(1),
    asi_sit smallint,
    primary key (asi_id) 
  );

revoke all on sig_asig_grupos from "public";

{ TABLE cau_situaciones row size = 105 number of columns = 2 index size = 9 }

create table cau_situaciones 
  (
    sit_id integer,
    sit_descripcion varchar(100),
    primary key (sit_id) 
  );

revoke all on cau_situaciones from "public";

{ TABLE aud_cau_situaciones row size = 230 number of columns = 7 index size = 0 }

create table aud_cau_situaciones 
  (
    sit_id integer,
    sit_descripcion varchar(100),
    desp_sit_id integer,
    desp_sit_descripcion varchar(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cau_situaciones from "public";

{ TABLE cau_permisos row size = 1007 number of columns = 10 index size = 18 }

create table cau_permisos 
  (
    per_id integer,
    per_catalogo_usuario integer,
    per_contrasena varchar(230),
    per_fecha date,
    per_aplicaciones varchar(250),
    per_observaciones varchar(250),
    per_mensaje varchar(250),
    per_dependencia smallint,
    per_situacion_permiso integer,
    per_usuario char(5),
    primary key (per_id) 
  );

revoke all on cau_permisos from "public";

{ TABLE aud_cau_permisos row size = 2034 number of columns = 23 index size = 0 }

create table aud_cau_permisos 
  (
    per_id integer,
    per_catalogo_usuario integer,
    per_contrasena varchar(230),
    per_fecha date,
    per_aplicaciones varchar(250),
    per_observaciones varchar(250),
    per_mensaje varchar(250),
    per_dependencia smallint,
    per_situacion_permiso integer,
    per_usuario char(5),
    desp_per_id integer,
    desp_per_catalogo_usuario integer,
    desp_per_contrasena varchar(230),
    desp_per_fecha date,
    desp_per_aplicaciones varchar(250),
    desp_per_observaciones varchar(250),
    desp_per_mensaje varchar(250),
    desp_per_dependencia smallint,
    desp_per_situacion_permiso integer,
    desp_per_usuario char(5),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cau_permisos from "public";

{ TABLE aud_opaf_notas1 row size = 872 number of columns = 49 index size = 0 }

create table aud_opaf_notas1 
  (
    not_catalogo integer,
    not_fecha date,
    not_dominadas smallint,
    not_punteo_dom smallint,
    not_abdominales smallint,
    not_punteo_abd smallint,
    not_carrera datetime minute to second,
    not_punteo_car smallint,
    not_promedio decimal(5,2),
    not_obs varchar(255),
    not_tipo varchar(1),
    not_revisado smallint,
    not_dependencia smallint,
    not_peso smallint,
    not_estatura decimal(3,2),
    not_imc decimal(4,2),
    not_perfil varchar(15),
    not_fec_certi date,
    not_grado smallint,
    not_usuario integer,
    not_acta varchar(100),
    not_extemporaneo smallint,
    not_evento smallint,
    desp_not_catalogo integer,
    desp_not_fecha date,
    desp_not_dominadas smallint,
    desp_not_punteo_dom smallint,
    desp_not_abdominales smallint,
    desp_not_punteo_abd smallint,
    desp_not_carrera datetime minute to second,
    desp_not_punteo_car smallint,
    desp_not_promedio decimal(5,2),
    desp_not_obs varchar(255),
    desp_not_tipo varchar(1),
    desp_not_revisado smallint,
    desp_not_dependencia smallint,
    desp_not_peso smallint,
    desp_not_estatura decimal(3,2),
    desp_not_imc decimal(4,2),
    desp_not_perfil varchar(15),
    desp_not_fec_certi date,
    desp_not_grado smallint,
    desp_not_usuario integer,
    desp_not_acta varchar(100),
    desp_not_extemporaneo smallint,
    desp_not_evento smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_opaf_notas1 from "public";

{ TABLE cat_permisos row size = 210 number of columns = 4 index size = 0 }

create table cat_permisos 
  (
    p_emisor varchar(100),
    p_receptor integer,
    p_t_id integer,
    p_permiso varchar(100)
  );

revoke all on cat_permisos from "public";

{ TABLE sol_tarjetaunica row size = 581 number of columns = 11 index size = 9 }

create table sol_tarjetaunica 
  (
    sol_id serial not null ,
    sol_fecha date,
    sol_catalogo integer not null ,
    sol_cat_reviso integer,
    sol_cat_autoriza integer,
    sol_dep integer,
    sol_motivo char(1),
    sol_desc varchar(200),
    sol_obs_denegada varchar(200),
    sol_ruta varchar(150),
    sol_situacion char(3),
    primary key (sol_id) 
  );

revoke all on sol_tarjetaunica from "public";

{ TABLE aud_sol_tarjetaunica row size = 1182 number of columns = 25 index size = 0 }

create table aud_sol_tarjetaunica 
  (
    sol_id integer,
    sol_fecha date,
    sol_catalogo integer,
    sol_cat_reviso integer,
    sol_cat_autoriza integer,
    sol_dep integer,
    sol_motivo char(1),
    sol_desc varchar(200),
    sol_obs_denegada varchar(200),
    sol_ruta varchar(150),
    sol_situacion char(3),
    desp_sol_id integer,
    desp_sol_fecha date,
    desp_sol_catalogo integer,
    desp_sol_cat_reviso integer,
    desp_sol_cat_autoriza integer,
    desp_sol_dep integer,
    desp_sol_motivo char(1),
    desp_sol_desc varchar(200),
    desp_sol_obs_denegada varchar(200),
    desp_sol_ruta varchar(150),
    desp_sol_situacion char(3),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sol_tarjetaunica from "public";

{ TABLE tropa_cuenta row size = 101 number of columns = 8 index size = 27 }

create table tropa_cuenta 
  (
    cuenta_id serial not null ,
    cuenta_usu integer,
    cuenta_cat integer,
    cuenta_fech date,
    cuenta_ban smallint,
    cuenta_no char(25),
    cuenta_doc byte,
    cuenta_sit smallint,
    primary key (cuenta_id) 
  );

revoke all on tropa_cuenta from "public";

{ TABLE aud_tropa_cuenta row size = 258 number of columns = 19 index size = 0 }

create table aud_tropa_cuenta 
  (
    cuenta_id integer,
    cuenta_usu integer,
    cuenta_cat integer,
    cuenta_fech date,
    cuenta_ban smallint,
    cuenta_no char(25),
    cuenta_doc blob,
    cuenta_sit smallint,
    desp_cuenta_id integer,
    desp_cuenta_usu integer,
    desp_cuenta_cat integer,
    desp_cuenta_fech date,
    desp_cuenta_ban smallint,
    desp_cuenta_no char(25),
    desp_cuenta_doc blob,
    desp_cuenta_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tropa_cuenta from "public";

{ TABLE sig_rancho row size = 25 number of columns = 7 index size = 18 }

create table sig_rancho 
  (
    rancho_id serial not null ,
    rancho_compania integer,
    rancho_grado integer,
    rancho_fecha datetime year to day,
    rancho_tiempo smallint,
    rancho_cantidad integer,
    rancho_situacion smallint,
    primary key (rancho_id) 
  );

revoke all on sig_rancho from "public";

{ TABLE aud_sig_rancho row size = 70 number of columns = 17 index size = 0 }

create table aud_sig_rancho 
  (
    rancho_id integer,
    rancho_compania integer,
    rancho_grado integer,
    rancho_fecha datetime year to day,
    rancho_tiempo smallint,
    rancho_cantidad integer,
    rancho_situacion smallint,
    desp_rancho_id integer,
    desp_rancho_compania integer,
    desp_rancho_grado integer,
    desp_rancho_fecha datetime year to day,
    desp_rancho_tiempo smallint,
    desp_rancho_cantidad integer,
    desp_rancho_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_rancho from "public";

{ TABLE rm_registros row size = 262 number of columns = 30 index size = 73 }

create table rm_registros 
  (
    reg_catalogo integer not null ,
    reg_dpi char(15) not null ,
    reg_nombre1 char(15),
    reg_nombre2 char(15),
    reg_nombre3 char(15),
    reg_apellido1 char(15),
    reg_apellido2 char(15),
    reg_direccion char(50),
    reg_estado_civil char(1),
    reg_sexo char(1),
    reg_sangre smallint,
    reg_celular integer,
    reg_email varchar(50),
    reg_fecha_nacimiento date,
    reg_dep_nacimiento char(4),
    reg_muni_nacimiento char(4),
    reg_religion smallint,
    reg_nit varchar(12),
    reg_grado_escolar smallint,
    reg_fech_ingreso date,
    reg_lugar_entrenamiento smallint,
    reg_profesion integer,
    reg_situacion smallint,
    reg_fecha_baja date,
    reg_etnia smallint,
    reg_grado smallint,
    reg_fuerza smallint,
    reg_edad smallint,
    reg_plaza integer,
    reg_arma smallint,
    primary key (reg_catalogo) 
  );

revoke all on rm_registros from "public";

{ TABLE aud_rm_registros row size = 548 number of columns = 63 index size = 0 }

create table aud_rm_registros 
  (
    reg_catalogo integer,
    reg_dpi char(15),
    reg_nombre1 char(15),
    reg_nombre2 char(15),
    reg_nombre3 char(15),
    reg_apellido1 char(15),
    reg_apellido2 char(15),
    reg_direccion char(50),
    reg_estado_civil char(1),
    reg_sexo char(1),
    reg_sangre smallint,
    reg_celular integer,
    reg_email varchar(50),
    reg_fecha_nacimiento date,
    reg_dep_nacimiento char(4),
    reg_muni_nacimiento char(4),
    reg_religion smallint,
    reg_nit varchar(12),
    reg_grado_escolar smallint,
    reg_fech_ingreso date,
    reg_lugar_entrenamiento smallint,
    reg_profesion integer,
    reg_situacion smallint,
    reg_fecha_baja date,
    reg_etnia smallint,
    reg_grado smallint,
    reg_fuerza smallint,
    reg_edad smallint,
    reg_plaza integer,
    reg_arma integer,
    desp_reg_catalogo integer,
    desp_reg_dpi char(15),
    desp_reg_nombre1 char(15),
    desp_reg_nombre2 char(15),
    desp_reg_nombre3 char(15),
    desp_reg_apellido1 char(15),
    desp_reg_apellido2 char(15),
    desp_reg_direccion char(50),
    desp_reg_estado_civil char(1),
    desp_reg_sexo char(1),
    desp_reg_sangre smallint,
    desp_reg_celular integer,
    desp_reg_email varchar(50),
    desp_reg_fecha_nacimiento date,
    desp_reg_dep_nacimiento char(4),
    desp_reg_muni_nacimiento char(4),
    desp_reg_religion smallint,
    desp_reg_nit varchar(12),
    desp_reg_grado_escolar smallint,
    desp_reg_fech_ingreso date,
    desp_reg_lugar_entrenamiento smallint,
    desp_reg_profesion integer,
    desp_reg_situacion smallint,
    desp_reg_fecha_baja date,
    desp_reg_etnia smallint,
    desp_reg_grado smallint,
    desp_reg_fuerza smallint,
    desp_reg_edad smallint,
    desp_reg_plaza integer,
    desp_reg_arma integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rm_registros from "public";

{ TABLE rm_beneficiarios row size = 135 number of columns = 9 index size = 16 }

create table rm_beneficiarios 
  (
    ben_catalogo integer not null ,
    ben_dpi char(15) not null ,
    ben_nombre1 char(15),
    ben_nombre2 char(15),
    ben_apellido1 char(15),
    ben_apellido2 char(15),
    ben_direccion char(50),
    ben_celular integer,
    ben_parentesco smallint
  );

revoke all on rm_beneficiarios from "public";

{ TABLE aud_rm_beneficiarios row size = 290 number of columns = 21 index size = 0 }

create table aud_rm_beneficiarios 
  (
    ben_catalogo integer,
    ben_dpi char(15),
    ben_nombre1 char(15),
    ben_nombre2 char(15),
    ben_apellido1 char(15),
    ben_apellido2 char(15),
    ben_direccion char(50),
    ben_celular integer,
    ben_parentesco smallint,
    desp_ben_catalogo integer,
    desp_ben_dpi char(15),
    desp_ben_nombre1 char(15),
    desp_ben_nombre2 char(15),
    desp_ben_apellido1 char(15),
    desp_ben_apellido2 char(15),
    desp_ben_direccion char(50),
    desp_ben_celular integer,
    desp_ben_parentesco smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rm_beneficiarios from "public";

{ TABLE rm_cuenta row size = 151 number of columns = 9 index size = 18 }

create table rm_cuenta 
  (
    cuenta_id serial not null ,
    cuenta_usu integer,
    cuenta_cat integer,
    cuenta_fech date,
    cuenta_ban smallint,
    cuenta_no char(25),
    cuenta_doc byte,
    cuenta_sit smallint,
    cuenta_obs char(50),
    primary key (cuenta_id) 
  );

revoke all on rm_cuenta from "public";

{ TABLE aud_rm_cuenta row size = 322 number of columns = 21 index size = 0 }

create table aud_rm_cuenta 
  (
    cuenta_id integer,
    cuenta_usu integer,
    cuenta_cat integer,
    cuenta_fech date,
    cuenta_ban smallint,
    cuenta_no char(25),
    cuenta_doc byte,
    cuenta_sit smallint,
    cuenta_obs char(50),
    desp_cuenta_id integer,
    desp_cuenta_usu integer,
    desp_cuenta_cat integer,
    desp_cuenta_fech date,
    desp_cuenta_ban smallint,
    desp_cuenta_no char(25),
    desp_cuenta_doc byte,
    desp_cuenta_sit smallint,
    desp_cuenta_obs char(50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rm_cuenta from "public";

{ TABLE rm_asistencia row size = 12 number of columns = 4 index size = 9 }

create table rm_asistencia 
  (
    asi_catalogo integer not null ,
    asi_fecha date,
    asi_horas smallint,
    asi_situacion smallint
  );

revoke all on rm_asistencia from "public";

{ TABLE aud_rm_asistencia row size = 44 number of columns = 11 index size = 0 }

create table aud_rm_asistencia 
  (
    asi_catalogo integer,
    asi_fecha date,
    asi_horas smallint,
    asi_situacion smallint,
    desp_asi_catalogo integer,
    desp_asi_fecha date,
    desp_asi_horas smallint,
    desp_asi_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rm_asistencia from "public";

{ TABLE ciber_office row size = 109 number of columns = 3 index size = 9 }

create table ciber_office 
  (
    off_id integer not null ,
    off_desc_2 varchar(100) not null ,
    off_situacion integer not null ,
    primary key (off_id) 
  );

revoke all on ciber_office from "public";

{ TABLE aud_ciber_office row size = 238 number of columns = 9 index size = 0 }

create table aud_ciber_office 
  (
    off_id integer,
    off_desc_2 varchar(100),
    off_situacion integer,
    desp_off_id integer,
    desp_off_desc_2 varchar(100),
    desp_off_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ciber_office from "public";

{ TABLE ciber_ram row size = 59 number of columns = 3 index size = 9 }

create table ciber_ram 
  (
    ram_id integer not null ,
    ram_desc varchar(50) not null ,
    ram_situacion integer not null ,
    primary key (ram_id) 
  );

revoke all on ciber_ram from "public";

{ TABLE aud_ciber_ram row size = 138 number of columns = 9 index size = 0 }

create table aud_ciber_ram 
  (
    ram_id integer,
    ram_desc varchar(50),
    ram_situacion integer,
    desp_ram_id integer,
    desp_ram_desc varchar(50),
    desp_ram_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ciber_ram from "public";

{ TABLE ciber_antivirus row size = 109 number of columns = 3 index size = 9 }

create table ciber_antivirus 
  (
    ant_id integer not null ,
    ant_desc_3 varchar(100) not null ,
    ant_situacion integer not null ,
    primary key (ant_id) 
  );

revoke all on ciber_antivirus from "public";

{ TABLE aud_ciber_antivirus row size = 238 number of columns = 9 index size = 0 }

create table aud_ciber_antivirus 
  (
    ant_id integer,
    ant_desc_3 varchar(100),
    ant_situacion integer,
    desp_ant_id integer,
    desp_ant_desc_3 varchar(100),
    desp_ant_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ciber_antivirus from "public";

{ TABLE ciber_disco_duro row size = 109 number of columns = 3 index size = 9 }

create table ciber_disco_duro 
  (
    disc_id integer not null ,
    disc_desc varchar(100) not null ,
    disc_situacion integer not null ,
    primary key (disc_id) 
  );

revoke all on ciber_disco_duro from "public";

{ TABLE aud_ciber_disco_duro row size = 238 number of columns = 9 index size = 0 }

create table aud_ciber_disco_duro 
  (
    disc_id integer,
    disc_desc varchar(100),
    disc_situacion integer,
    desp_disc_id integer,
    desp_disc_desc varchar(100),
    desp_disc_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ciber_disco_duro from "public";

{ TABLE ciber_procesador row size = 109 number of columns = 3 index size = 9 }

create table ciber_procesador 
  (
    proc_id integer not null ,
    proc_desc varchar(100) not null ,
    proc_situacion integer not null ,
    primary key (proc_id) 
  );

revoke all on ciber_procesador from "public";

{ TABLE aud_ciber_procesador row size = 238 number of columns = 9 index size = 0 }

create table aud_ciber_procesador 
  (
    proc_id integer,
    proc_desc varchar(100),
    proc_situacion integer,
    desp_proc_id integer,
    desp_proc_desc varchar(100),
    desp_proc_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ciber_procesador from "public";

{ TABLE ciber_sistema_operativo row size = 109 number of columns = 3 index size = 9 }

create table ciber_sistema_operativo 
  (
    so_id integer not null ,
    so_desc_1 varchar(100) not null ,
    so_situacion integer not null ,
    primary key (so_id) 
  );

revoke all on ciber_sistema_operativo from "public";

{ TABLE aud_ciber_sistema_operativo row size = 238 number of columns = 9 index size = 0 }

create table aud_ciber_sistema_operativo 
  (
    so_id integer,
    so_desc_1 varchar(100),
    so_situacion integer,
    desp_so_id integer,
    desp_so_desc_1 varchar(100),
    desp_so_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ciber_sistema_operativo from "public";

{ TABLE ciber_evento row size = 2262 number of columns = 16 index size = 9 }

create table ciber_evento 
  (
    evento_id integer not null ,
    evento_dia date,
    evento_numero integer not null ,
    evento_ident varchar(50) not null ,
    evento_catalogo integer not null ,
    evento_grado integer not null ,
    evento_telefono integer not null ,
    evento_correo varchar(50) not null ,
    evento_observacion char(2000) not null ,
    evento_ocurriofecha datetime year to minute,
    evento_descubriofecha datetime year to minute,
    evento_informofecha datetime year to minute,
    evento_si varchar(5) not null ,
    evento_duracion varchar(100) not null ,
    evento_dependencia integer not null ,
    evento_situacion integer not null ,
    primary key (evento_id) 
  );

revoke all on ciber_evento from "public";

{ TABLE aud_ciber_evento row size = 4544 number of columns = 35 index size = 0 }

create table aud_ciber_evento 
  (
    evento_id integer,
    evento_dia date,
    evento_numero integer,
    evento_ident varchar(50),
    evento_catalogo integer,
    evento_grado integer,
    evento_telefono integer,
    evento_correo varchar(50),
    evento_observacion char(2000),
    evento_ocurriofecha datetime year to minute,
    evento_descubriofecha datetime year to minute,
    evento_informofecha datetime year to minute,
    evento_si varchar(5),
    evento_duracion varchar(100),
    evento_dependencia integer,
    evento_situacion integer,
    desp_evento_id integer,
    desp_evento_dia date,
    desp_evento_numero integer,
    desp_evento_ident varchar(50),
    desp_evento_catalogo integer,
    desp_evento_grado integer,
    desp_evento_telefono integer,
    desp_evento_correo varchar(50),
    desp_evento_observacion char(2000),
    desp_evento_ocurriofecha datetime year to minute,
    desp_evento_descubriofecha datetime year to minute,
    desp_evento_informofecha datetime year to minute,
    desp_evento_si varchar(5),
    desp_evento_duracion varchar(100),
    desp_evento_dependencia integer,
    desp_evento_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ciber_evento from "public";

{ TABLE ciber_inventario row size = 2219 number of columns = 19 index size = 63 }

create table ciber_inventario 
  (
    inv_id integer,
    inv_catalogo integer,
    inv_oficina integer,
    inv_nombre varchar(50),
    inv_mac varchar(50),
    inv_catresp integer,
    inv_detalle char(2000),
    inv_pertenece varchar(50),
    inv_so integer,
    inv_solic varchar(5),
    inv_procesador integer,
    inv_almacenamiento integer,
    inv_ram integer,
    inv_office integer,
    inv_officelic varchar(5),
    inv_antivirus integer,
    inv_antiviruslic varchar(5),
    inv_dependencia integer,
    inv_situacion integer,
    primary key (inv_id) 
  );

revoke all on ciber_inventario from "public";

{ TABLE aud_ciber_inventario row size = 4458 number of columns = 41 index size = 0 }

create table aud_ciber_inventario 
  (
    inv_id integer,
    inv_catalogo integer,
    inv_oficina integer,
    inv_nombre varchar(50),
    inv_mac varchar(50),
    inv_catresp integer,
    inv_detalle char(2000),
    inv_pertenece varchar(50),
    inv_so integer,
    inv_solic varchar(5),
    inv_procesador integer,
    inv_almacenamiento integer,
    inv_ram integer,
    inv_office integer,
    inv_officelic varchar(5),
    inv_antivirus integer,
    inv_antiviruslic varchar(5),
    inv_dependencia integer,
    inv_situacion integer,
    desp_inv_id integer,
    desp_inv_catalogo integer,
    desp_inv_oficina integer,
    desp_inv_nombre varchar(50),
    desp_inv_mac varchar(50),
    desp_inv_catresp integer,
    desp_inv_detalle char(2000),
    desp_inv_pertenece varchar(50),
    desp_inv_so integer,
    desp_inv_solic varchar(5),
    desp_inv_procesador integer,
    desp_inv_almacenamiento integer,
    desp_inv_ram integer,
    desp_inv_office integer,
    desp_inv_officelic varchar(5),
    desp_inv_antivirus integer,
    desp_inv_antiviruslic varchar(5),
    desp_inv_dependencia integer,
    desp_inv_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ciber_inventario from "public";

{ TABLE tropa_beneficiarios row size = 233 number of columns = 9 index size = 25 }

create table tropa_beneficiarios 
  (
    ben_id serial not null ,
    ben_catalogo integer not null ,
    ben_dpi char(15) not null ,
    ben_nombre char(150),
    ben_direccion char(50),
    ben_celular integer,
    ben_parentesco smallint,
    ben_porcentaje smallint,
    ben_situacion smallint,
    primary key (ben_id) 
  );

revoke all on tropa_beneficiarios from "public";

{ TABLE aud_tropa_beneficiarios row size = 486 number of columns = 21 index size = 0 }

create table aud_tropa_beneficiarios 
  (
    ben_id integer,
    ben_catalogo integer,
    ben_dpi char(15),
    ben_nombre char(150),
    ben_direccion char(50),
    ben_celular integer,
    ben_parentesco smallint,
    ben_porcentaje smallint,
    ben_situacion smallint,
    desp_ben_id integer,
    desp_ben_catalogo integer,
    desp_ben_dpi char(15),
    desp_ben_nombre char(150),
    desp_ben_direccion char(50),
    desp_ben_celular integer,
    desp_ben_parentesco smallint,
    desp_ben_porcentaje smallint,
    desp_ben_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tropa_beneficiarios from "public";

{ TABLE rm_historial_pagos row size = 27 number of columns = 6 index size = 27 }

create table rm_historial_pagos 
  (
    pago_id serial not null ,
    pago_cat integer,
    pago_fecha date,
    pago_estipendio money(16,2),
    pago_cat_valido integer,
    pago_situacion smallint,
    primary key (pago_id) 
  );

revoke all on rm_historial_pagos from "public";

{ TABLE aud_rm_historial_pagos row size = 74 number of columns = 15 index size = 0 }

create table aud_rm_historial_pagos 
  (
    pago_id integer,
    pago_cat integer,
    pago_fecha date,
    pago_estipendio money(16,2),
    pago_cat_valido integer,
    pago_situacion smallint,
    desp_pago_id integer,
    desp_pago_cat integer,
    desp_pago_fecha date,
    desp_pago_estipendio money(16,2),
    desp_pago_cat_valido integer,
    desp_pago_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rm_historial_pagos from "public";

{ TABLE aud_bd_permisos row size = 440 number of columns = 15 index size = 0 }

create table aud_bd_permisos 
  (
    grantor char(32),
    grantee char(32),
    tabauth char(9),
    tabid integer,
    tabname varchar(128),
    nrows integer,
    desp_grantor char(32),
    desp_grantee char(32),
    desp_tabauth char(9),
    desp_tabid integer,
    desp_tabname varchar(128),
    desp_nrows integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bd_permisos from "public";

{ TABLE esip_unidades_ejecutoras row size = 1022 number of columns = 9 index size = 16 }

create table esip_unidades_ejecutoras 
  (
    ue_id integer,
    ue_numero integer,
    ue_desc_lg varchar(250),
    ue_desc_md varchar(250),
    ue_desc_ct varchar(250),
    ue_dep smallint,
    ue_obs varchar(250),
    ue_fecha date,
    ue_situacion integer,
    primary key (ue_id) 
  );

revoke all on esip_unidades_ejecutoras from "public";

{ TABLE aud_esip_unidades_ejecutoras row size = 2064 number of columns = 21 index size = 0 }

create table aud_esip_unidades_ejecutoras 
  (
    ue_id integer,
    ue_numero integer,
    ue_desc_lg varchar(250),
    ue_desc_md varchar(250),
    ue_desc_ct varchar(250),
    ue_dep smallint,
    ue_obs varchar(250),
    ue_fecha date,
    ue_situacion integer,
    desp_ue_id integer,
    desp_ue_numero integer,
    desp_ue_desc_lg varchar(250),
    desp_ue_desc_md varchar(250),
    desp_ue_desc_ct varchar(250),
    desp_ue_dep smallint,
    desp_ue_obs varchar(250),
    desp_ue_fecha date,
    desp_ue_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esip_unidades_ejecutoras from "public";

{ TABLE aud_registro_puestos_vacunacion row size = 52 number of columns = 15 index size = 0 }

create table aud_registro_puestos_vacunacion 
  (
    reg_id integer,
    reg_comando smallint,
    reg_puesto integer,
    reg_dep smallint,
    reg_mun smallint,
    reg_situacion smallint,
    desp_reg_id integer,
    desp_reg_comando smallint,
    desp_reg_puesto integer,
    desp_reg_dep smallint,
    desp_reg_mun smallint,
    desp_reg_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_registro_puestos_vacunacion from "public";

{ TABLE aud_resumen_vacuna_ssm row size = 58 number of columns = 17 index size = 0 }

create table aud_resumen_vacuna_ssm 
  (
    res_id integer,
    res_fecha date,
    res_comando smallint,
    res_vacuna smallint,
    res_dosis smallint,
    res_cantidad smallint,
    res_situacion smallint,
    desp_res_id integer,
    desp_res_fecha date,
    desp_res_comando smallint,
    desp_res_vacuna smallint,
    desp_res_dosis smallint,
    desp_res_cantidad smallint,
    desp_res_situacion smallint,
    accion char(1) not null ,
    usuario char(14) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_resumen_vacuna_ssm from "public";

{ TABLE registro_puestos_vacunacion row size = 115 number of columns = 7 index size = 9 }

create table registro_puestos_vacunacion 
  (
    reg_id serial not null ,
    reg_comando smallint,
    reg_puesto varchar(100),
    reg_dep smallint,
    reg_mun smallint,
    reg_region smallint,
    reg_situacion smallint,
    primary key (reg_id) 
  );

revoke all on registro_puestos_vacunacion from "public";

{ TABLE resumen_vacuna_ssm row size = 22 number of columns = 9 index size = 9 }

create table resumen_vacuna_ssm 
  (
    res_id serial not null ,
    res_fecha date,
    res_comando smallint,
    res_puesto smallint,
    res_region smallint,
    res_vacuna smallint,
    res_dosis smallint,
    res_cantidad smallint,
    res_situacion smallint,
    primary key (res_id) 
  );

revoke all on resumen_vacuna_ssm from "public";

{ TABLE psan_sanciones row size = 822 number of columns = 10 index size = 16 }

create table psan_sanciones 
  (
    san_codigo integer not null ,
    san_descripcion lvarchar(800),
    san_clasificacion char(2),
    san_tipo char(2),
    san_cantidad smallint not null ,
    san_reglamento smallint,
    san_articulo smallint,
    san_literal char(1),
    san_numeral smallint,
    san_inciso char(2),
    primary key (san_codigo)  constraint pk_sanciones
  );

revoke all on psan_sanciones from "public";

{ TABLE sub18_acciones row size = 37 number of columns = 9 index size = 9 }

create table sub18_acciones 
  (
    sub18_ac_id serial not null ,
    sub18_id_contrato integer not null ,
    sub_18_cat_ingreso integer not null ,
    sub18_ac_catg1 integer,
    sub18_ac_cat_uejec integer,
    sub18_ac_cat_d1 integer,
    sub18_ac_cat_juridico integer,
    sub18_ac_cat_dgamdn integer,
    sub18_ac_situacion char(5) not null ,
    primary key (sub18_ac_id) 
  );

revoke all on sub18_acciones from "public";

{ TABLE aud_sub18_acciones row size = 94 number of columns = 21 index size = 0 }

create table aud_sub18_acciones 
  (
    sub18_ac_id integer,
    sub18_id_contrato integer,
    sub_18_cat_ingreso integer,
    sub18_ac_catg1 integer,
    sub18_ac_cat_uejec integer,
    sub18_ac_cat_d1 integer,
    sub18_ac_cat_juridico integer,
    sub18_ac_cat_dgamdn integer,
    sub18_ac_situacion char(5),
    desp_sub18_ac_id integer,
    desp_sub18_id_contrato integer,
    desp_sub_18_cat_ingreso integer,
    desp_sub18_ac_catg1 integer,
    desp_sub18_ac_cat_uejec integer,
    desp_sub18_ac_cat_d1 integer,
    desp_sub18_ac_cat_juridico integer,
    desp_sub18_ac_cat_dgamdn integer,
    desp_sub18_ac_situacion char(5),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sub18_acciones from "public";

{ TABLE sub18_boleta row size = 2076 number of columns = 8 index size = 9 }

create table sub18_boleta 
  (
    sub18_bol_id serial not null ,
    sub18_bol_id_contrato integer not null ,
    sub18_bol_fecha_emi date not null ,
    sub18_bol_fecha_rev date not null ,
    sub18_bol_cat_revisor integer not null ,
    sub18_bol_cat_comandante integer not null ,
    sub18_bol_anotaciones lvarchar not null ,
    sub18_bol_situacion char(1) not null ,
    primary key (sub18_bol_id) 
  );

revoke all on sub18_boleta from "public";

{ TABLE aud_sub18_boleta row size = 4172 number of columns = 19 index size = 0 }

create table aud_sub18_boleta 
  (
    sub18_bol_id integer,
    sub18_bol_id_contrato integer,
    sub18_bol_fecha_emi date,
    sub18_bol_fecha_rev date,
    sub18_bol_cat_revisor integer,
    sub18_bol_cat_comandante integer,
    sub18_bol_anotaciones lvarchar,
    sub18_bol_situacion char(1),
    desp_sub18_bol_id integer,
    desp_sub18_bol_id_contrato integer,
    desp_sub18_bol_fecha_emi date,
    desp_sub18_bol_fecha_rev date,
    desp_sub18_bol_cat_revisor integer,
    desp_sub18_bol_cat_comandante integer,
    desp_sub18_bol_anotaciones lvarchar,
    desp_sub18_bol_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sub18_boleta from "public";

{ TABLE sub18_detalles row size = 264 number of columns = 5 index size = 9 }

create table sub18_detalles 
  (
    sub18_det_id serial not null ,
    sub18_det_id_contrato integer not null ,
    sub18_det_fecha date not null ,
    sub18_det_obs varchar(250) not null ,
    sub18_det_situacion char(1) not null ,
    primary key (sub18_det_id) 
  );

revoke all on sub18_detalles from "public";

{ TABLE aud_sub18_detalles row size = 548 number of columns = 13 index size = 0 }

create table aud_sub18_detalles 
  (
    sub18_det_id integer,
    sub18_det_id_contrato integer,
    sub18_det_fecha date,
    sub18_det_obs varchar(250),
    sub18_det_situacion char(1),
    desp_sub18_det_id integer,
    desp_sub18_det_id_contrato integer,
    desp_sub18_det_fecha date,
    desp_sub18_det_obs varchar(250),
    desp_sub18_det_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sub18_detalles from "public";

{ TABLE aud_coc_area_mision row size = 738 number of columns = 13 index size = 0 }

create table aud_coc_area_mision 
  (
    are_codigo integer,
    are_descripcion varchar(50,25),
    are_responsabilidad varchar(250,50),
    are_tipo_seg varchar(50,25),
    are_situacion smallint,
    desp_are_codigo integer,
    desp_are_descripcion varchar(50,25),
    desp_are_responsabilidad varchar(250,50),
    desp_are_tipo_seg varchar(50,25),
    desp_are_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_area_mision from "public";

{ TABLE aud_coc_ope_planificada row size = 2160 number of columns = 35 index size = 0 }

create table aud_coc_ope_planificada 
  (
    ope_pla_codigo integer,
    ope_pla_planificar integer,
    ope_pla_area integer,
    ope_pla_operacion integer,
    ope_pla_proposito integer,
    ope_pla_met_ejec integer,
    ope_pla_uni_org integer,
    ope_pla_cat_responsable integer,
    ope_pla_fecha datetime year to second,
    ope_pla_tel_resp integer,
    ope_pla_inicia datetime year to second,
    ope_pla_termina datetime year to second,
    ope_pla_usuario integer,
    ope_pla_dependencia smallint,
    ope_pla_situacion integer,
    ope_pla_observacion char(1000),
    desp_ope_pla_codigo integer,
    desp_ope_pla_planificar integer,
    desp_ope_pla_area integer,
    desp_ope_pla_operacion integer,
    desp_ope_pla_proposito integer,
    desp_ope_pla_met_ejec integer,
    desp_ope_pla_uni_org integer,
    desp_ope_pla_cat_responsable integer,
    desp_ope_pla_fecha datetime year to second,
    desp_ope_pla_tel_resp integer,
    desp_ope_pla_inicia datetime year to second,
    desp_ope_pla_termina datetime year to second,
    desp_ope_pla_usuario integer,
    desp_ope_pla_dependencia smallint,
    desp_ope_pla_situacion integer,
    desp_ope_pla_observacion char(1000),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_ope_planificada from "public";

{ TABLE aud_coc_coordenadas2 row size = 430 number of columns = 33 index size = 0 }

create table aud_coc_coordenadas2 
  (
    coo_reporte integer,
    coo_anio smallint,
    coo_dep smallint,
    coo_id integer,
    coo_lat_gra smallint,
    coo_lat_min smallint,
    coo_lat_seg smallint,
    coo_long_gra smallint,
    coo_long_min smallint,
    coo_long_seg smallint,
    coo_decimal_lat decimal(20,18),
    coo_decimal_long decimal(20,18),
    coo_utm_x integer,
    coo_utm_y integer,
    coo_lugar varchar(150,50),
    desp_coo_reporte integer,
    desp_coo_anio smallint,
    desp_coo_dep smallint,
    desp_coo_id integer,
    desp_coo_lat_gra smallint,
    desp_coo_lat_min smallint,
    desp_coo_lat_seg smallint,
    desp_coo_long_gra smallint,
    desp_coo_long_min smallint,
    desp_coo_long_seg smallint,
    desp_coo_decimal_lat decimal(20,18),
    desp_coo_decimal_long decimal(20,18),
    desp_coo_utm_x integer,
    desp_coo_utm_y integer,
    desp_coo_lugar varchar(150,50),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_coordenadas2 from "public";

{ TABLE aud_coc_control row size = 164 number of columns = 17 index size = 0 }

create table aud_coc_control 
  (
    con_codigo integer,
    con_catalogo integer,
    con_grado smallint,
    con_arma smallint,
    con_nombre char(50),
    con_dependencia smallint,
    con_hora_ingreso datetime year to second,
    desp_con_codigo integer,
    desp_con_catalogo integer,
    desp_con_grado smallint,
    desp_con_arma smallint,
    desp_con_nombre char(50),
    desp_con_dependencia smallint,
    desp_con_hora_ingreso datetime year to second,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_control from "public";

{ TABLE aud_coc_dep_orden row size = 52 number of columns = 11 index size = 0 }

create table aud_coc_dep_orden 
  (
    dep_ord_codigo integer,
    dep_ord_orden integer,
    dep_ord_dependencia integer,
    dep_ord_situacion integer,
    desp_dep_ord_codigo integer,
    desp_dep_ord_orden integer,
    desp_dep_ord_dependencia integer,
    desp_dep_ord_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_dep_orden from "public";

{ TABLE aud_coc_mensaje row size = 3950 number of columns = 29 index size = 0 }

create table aud_coc_mensaje 
  (
    men_codigo integer,
    men_ope_pla_cod integer,
    men_dependencia smallint,
    men_fecha datetime year to second,
    men_lugar varchar(50,25),
    men_numero_men varchar(50,25),
    men_contenido char(1500),
    men_cat_comte integer,
    men_comte_empleo varchar(50,25),
    men_cat_resp integer,
    men_resp_empleo varchar(50,25),
    men_situacion integer,
    men_observacion varchar(230,60),
    desp_men_codigo integer,
    desp_men_ope_pla_cod integer,
    desp_men_dependencia smallint,
    desp_men_fecha datetime year to second,
    desp_men_lugar varchar(50,25),
    desp_men_numero_men varchar(50,25),
    desp_men_contenido char(1500),
    desp_men_cat_comte integer,
    desp_men_comte_empleo varchar(50,25),
    desp_men_cat_resp integer,
    desp_men_resp_empleo varchar(50,25),
    desp_men_situacion integer,
    desp_men_observacion varchar(230,60),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_mensaje from "public";

{ TABLE aud_coc_metas row size = 56 number of columns = 15 index size = 0 }

create table aud_coc_metas 
  (
    met_codigo integer,
    met_anio smallint,
    met_dep smallint,
    met_mes integer,
    met_cantidad integer,
    met_situacion smallint,
    desp_met_codigo integer,
    desp_met_anio smallint,
    desp_met_dep smallint,
    desp_met_mes integer,
    desp_met_cantidad integer,
    desp_met_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_metas from "public";

{ TABLE aud_coc_metodo_ejec row size = 134 number of columns = 9 index size = 0 }

create table aud_coc_metodo_ejec 
  (
    met_ejec_codigo integer,
    met_ejec_descripcion varchar(50,25),
    met_ejec_situacion smallint,
    desp_met_ejec_codigo integer,
    desp_met_ejec_descripcion varchar(50,25),
    desp_met_ejec_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_metodo_ejec from "public";

{ TABLE aud_coc_operaciones row size = 904 number of columns = 13 index size = 0 }

create table aud_coc_operaciones 
  (
    ope_codigo integer,
    ope_area_codigo integer,
    ope_descripcion varchar(200,50),
    ope_observacion varchar(230,50),
    ope_situacion smallint,
    desp_ope_codigo integer,
    desp_ope_area_codigo integer,
    desp_ope_descripcion varchar(200,50),
    desp_ope_observacion varchar(230,50),
    desp_ope_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_operaciones from "public";

{ TABLE aud_coc_ordenes row size = 1040 number of columns = 11 index size = 0 }

create table aud_coc_ordenes 
  (
    ord_codigo integer,
    ord_referencia varchar(250,1),
    ord_descripcion varchar(250,1),
    ord_situacion integer,
    desp_ord_codigo integer,
    desp_ord_referencia varchar(250,1),
    desp_ord_descripcion varchar(250,1),
    desp_ord_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_ordenes from "public";

{ TABLE aud_coc_personal2 row size = 52 number of columns = 15 index size = 0 }

create table aud_coc_personal2 
  (
    per_id integer,
    per_reporte integer,
    per_anio smallint,
    per_dep smallint,
    per_tipo smallint,
    per_cantidad smallint,
    desp_per_id integer,
    desp_per_reporte integer,
    desp_per_anio smallint,
    desp_per_dep smallint,
    desp_per_tipo smallint,
    desp_per_cantidad smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_personal2 from "public";

{ TABLE aud_coc_proposito row size = 342 number of columns = 11 index size = 0 }

create table aud_coc_proposito 
  (
    prop_codigo integer,
    prop_ope_codigo integer,
    prop_descripcion varchar(150,35),
    prop_situacion smallint,
    desp_prop_codigo integer,
    desp_prop_ope_codigo integer,
    desp_prop_descripcion varchar(150,35),
    desp_prop_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_proposito from "public";

{ TABLE aud_coc_unidad_organica row size = 134 number of columns = 9 index size = 0 }

create table aud_coc_unidad_organica 
  (
    uni_org_codigo integer,
    uni_org_descripcion varchar(50,20),
    uni_org_situacion smallint,
    desp_uni_org_codigo integer,
    desp_uni_org_descripcion varchar(50,20),
    desp_uni_org_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_unidad_organica from "public";

{ TABLE aud_coc_vehiculo_rep2 row size = 60 number of columns = 17 index size = 0 }

create table aud_coc_vehiculo_rep2 
  (
    veh_id integer,
    veh_reporte integer,
    veh_anio smallint,
    veh_dep smallint,
    veh_tipo integer,
    veh_propiedad smallint,
    veh_cantidad smallint,
    desp_veh_id integer,
    desp_veh_reporte integer,
    desp_veh_anio smallint,
    desp_veh_dep smallint,
    desp_veh_tipo integer,
    desp_veh_propiedad smallint,
    desp_veh_cantidad smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_vehiculo_rep2 from "public";

{ TABLE aud_opaf_carrera2 row size = 44 number of columns = 11 index size = 0 }

create table aud_opaf_carrera2 
  (
    car_edad integer,
    car_sexo char(1),
    car_tiempo datetime hour to minute,
    car_punteo integer,
    desp_car_edad integer,
    desp_car_sexo char(1),
    desp_car_tiempo datetime hour to minute,
    desp_car_punteo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_opaf_carrera2 from "public";

{ TABLE certificaciones row size = 1645 number of columns = 33 index size = 13 }

create table certificaciones 
  (
    cert_id bigint,
    cert_dpi varchar(15) not null ,
    cert_nom1 varchar(20) not null ,
    cert_nom2 varchar(20),
    cert_nom3 varchar(20),
    cert_ape1 varchar(20) not null ,
    cert_ape2 varchar(20),
    cert_ape3 varchar(20),
    cert_sexo varchar(2) not null ,
    cert_catalogo varchar(10) not null ,
    cert_empleo varchar(200),
    cert_fecha_alta date not null ,
    cert_grado_alta varchar(30),
    cert_dep_alta varchar(200),
    cert_fecha_baja date not null ,
    cert_grado_baja varchar(30),
    cert_dep_baja varchar(200),
    cert_motivo_baja varchar(200),
    cert_doc_respaldo varchar(60),
    cert_num_referencia varchar(10),
    cert_cat_jefecerti varchar(10) not null ,
    cert_graarm_certi varchar(40),
    cert_nom_certi varchar(60),
    cert_cat_jefesage varchar(10) not null ,
    cert_graarm_jefesage varchar(40),
    cert_nom_jefesage varchar(60),
    cert_fecha_transac date not null ,
    cert_plaza_certi varchar(20) not null ,
    cert_plaza_jefe varchar(20) not null ,
    cert_cat_hizo varchar(8) not null ,
    cert_motivo_cambio varchar(250),
    cert_gen_solicito varchar(1),
    cert_situacion char(1),
    primary key (cert_id) 
  );

revoke all on certificaciones from "public";

{ TABLE aud_certificaciones row size = 3310 number of columns = 69 index size = 0 }

create table aud_certificaciones 
  (
    cert_id bigint,
    cert_dpi varchar(15),
    cert_nom1 varchar(20),
    cert_nom2 varchar(20),
    cert_nom3 varchar(20),
    cert_ape1 varchar(20),
    cert_ape2 varchar(20),
    cert_ape3 varchar(20),
    cert_sexo varchar(2),
    cert_catalogo varchar(10),
    cert_empleo varchar(200),
    cert_fecha_alta date,
    cert_grado_alta varchar(30),
    cert_dep_alta varchar(200),
    cert_fecha_baja date,
    cert_grado_baja varchar(30),
    cert_dep_baja varchar(200),
    cert_motivo_baja varchar(200),
    cert_doc_respaldo varchar(60),
    cert_num_referencia varchar(10),
    cert_cat_jefecerti varchar(10),
    cert_graarm_certi varchar(40),
    cert_nom_certi varchar(60),
    cert_cat_jefesage varchar(10),
    cert_graarm_jefesage varchar(40),
    cert_nom_jefesage varchar(60),
    cert_fecha_transac date,
    cert_plaza_certi varchar(20),
    cert_plaza_jefe varchar(20),
    cert_cat_hizo varchar(8),
    cert_motivo_cambio varchar(250),
    cert_gen_solicito varchar(1),
    cert_situacion char(1),
    desp_cert_id bigint,
    desp_cert_dpi varchar(15),
    desp_cert_nom1 varchar(20),
    desp_cert_nom2 varchar(20),
    desp_cert_nom3 varchar(20),
    desp_cert_ape1 varchar(20),
    desp_cert_ape2 varchar(20),
    desp_cert_ape3 varchar(20),
    desp_cert_sexo varchar(2),
    desp_cert_catalogo varchar(10),
    desp_cert_empleo varchar(200),
    desp_cert_fecha_alta date,
    desp_cert_grado_alta varchar(30),
    desp_cert_dep_alta varchar(200),
    desp_cert_fecha_baja date,
    desp_cert_grado_baja varchar(30),
    desp_cert_dep_baja varchar(200),
    desp_cert_motivo_baja varchar(200),
    desp_cert_doc_respaldo varchar(60),
    desp_cert_num_referencia varchar(10),
    desp_cert_cat_jefecerti varchar(10),
    desp_cert_graarm_certi varchar(40),
    desp_cert_nom_certi varchar(60),
    desp_cert_cat_jefesage varchar(10),
    desp_cert_graarm_jefesage varchar(40),
    desp_cert_nom_jefesage varchar(60),
    desp_cert_fecha_transac date,
    desp_cert_plaza_certi varchar(20),
    desp_cert_plaza_jefe varchar(20),
    desp_cert_cat_hizo varchar(8),
    desp_cert_motivo_cambio varchar(250),
    desp_cert_gen_solicito varchar(1),
    desp_cert_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_certificaciones from "public";

{ TABLE fag_compras row size = 378 number of columns = 16 index size = 25 }

create table fag_compras 
  (
    com_id integer not null ,
    com_registro varchar(20),
    com_cat_solicito integer not null ,
    com_no_parte varchar(30) not null ,
    com_nombre_articulo varchar(50),
    com_no_nac_existencia varchar(50),
    com_no_alterno varchar(50),
    com_unidad_medida integer not null ,
    com_matricula smallint,
    com_dependencia integer not null ,
    com_orden_trabajo varchar(30),
    com_cantidad integer not null ,
    com_fecha date,
    com_obs varchar(100),
    com_proceso varchar(10) not null ,
    com_sit integer not null ,
    primary key (com_id) 
  );

revoke all on fag_compras from "public";

{ TABLE aud_fag_compras row size = 776 number of columns = 35 index size = 0 }

create table aud_fag_compras 
  (
    com_id integer,
    com_registro varchar(20),
    com_cat_solicito integer,
    com_no_parte varchar(30),
    com_nombre_articulo varchar(50),
    com_no_nac_existencia varchar(50),
    com_no_alterno varchar(50),
    com_unidad_medida integer,
    com_matricula smallint,
    com_dependencia integer,
    com_orden_trabajo varchar(30),
    com_cantidad integer,
    com_fecha date,
    com_obs varchar(100),
    com_proceso varchar(10),
    com_sit integer,
    desp_com_id integer,
    desp_com_registro varchar(20),
    desp_com_cat_solicito integer,
    desp_com_no_parte varchar(30),
    desp_com_nombre_articulo varchar(50),
    desp_com_no_nac_existencia varchar(50),
    desp_com_no_alterno varchar(50),
    desp_com_unidad_medida integer,
    desp_com_matricula smallint,
    desp_com_dependencia integer,
    desp_com_orden_trabajo varchar(30),
    desp_com_cantidad integer,
    desp_com_fecha date,
    desp_com_obs varchar(100),
    desp_com_proceso varchar(10),
    desp_com_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fag_compras from "public";

{ TABLE sub_18_contrato row size = 755 number of columns = 23 index size = 9 }

create table sub_18_contrato 
  (
    sub18_id serial not null ,
    sub18_num_contrato varchar(30) not null ,
    sub18_renglon integer not null ,
    sub18_fuentefin integer not null ,
    sub18_minuta integer not null ,
    sub18_cuentadancia varchar(30) not null ,
    sub18_colegiado integer not null ,
    sub18_nombres varchar(80) not null ,
    sub18_apellidos varchar(80) not null ,
    sub18_dpi char(15) not null ,
    sub18_dependencia_con_dep integer not null ,
    sub18_uejec_con_unidades integer not null ,
    sub18_sexo char(1) not null ,
    sub18_fec_creacion date,
    sub18_fec_inicio date,
    sub18_fec_fin date,
    sub18_mesestrabaja integer not null ,
    sub18_sueldo money(16,2) not null ,
    sub18_observaciones varchar(150) not null ,
    sub18_rutapdf_contrato varchar(150) not null ,
    sub18_rutapdf_documentos varchar(150) not null ,
    sub18_dependencia_mdep integer not null ,
    sub18_situacion char(5) not null ,
    primary key (sub18_id) 
  );

revoke all on sub_18_contrato from "public";

{ TABLE aud_sub_18_contrato row size = 1530 number of columns = 49 index size = 0 }

create table aud_sub_18_contrato 
  (
    sub18_id integer,
    sub18_num_contrato varchar(30),
    sub18_renglon integer,
    sub18_fuentefin integer,
    sub18_minuta integer,
    sub18_cuentadancia varchar(30),
    sub18_colegiado integer,
    sub18_nombres varchar(80),
    sub18_apellidos varchar(80),
    sub18_dpi char(15),
    sub18_dependencia_con_dep integer,
    sub18_uejec_con_unidades integer,
    sub18_sexo char(1),
    sub18_fec_creacion date,
    sub18_fec_inicio date,
    sub18_fec_fin date,
    sub18_mesestrabaja integer,
    sub18_sueldo money(16,2),
    sub18_observaciones varchar(150),
    sub18_rutapdf_contrato varchar(150),
    sub18_rutapdf_documentos varchar(150),
    sub18_dependencia_mdep integer,
    sub18_situacion char(5),
    desp_sub18_id integer,
    desp_sub18_num_contrato varchar(30),
    desp_sub18_renglon integer,
    desp_sub18_fuentefin integer,
    desp_sub18_minuta integer,
    desp_sub18_cuentadancia varchar(30),
    desp_sub18_colegiado integer,
    desp_sub18_nombres varchar(80),
    desp_sub18_apellidos varchar(80),
    desp_sub18_dpi char(15),
    desp_sub18_dependencia_con_dep integer,
    desp_sub18_uejec_con_unidades integer,
    desp_sub18_sexo char(1),
    desp_sub18_fec_creacion date,
    desp_sub18_fec_inicio date,
    desp_sub18_fec_fin date,
    desp_sub18_mesestrabaja integer,
    desp_sub18_sueldo money(16,2),
    desp_sub18_observaciones varchar(150),
    desp_sub18_rutapdf_contrato varchar(150),
    desp_sub18_rutapdf_documentos varchar(150),
    desp_sub18_dependencia_mdep integer,
    desp_sub18_situacion char(5),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sub_18_contrato from "public";

{ TABLE fag_metodo_adquisicion row size = 19 number of columns = 3 index size = 9 }

create table fag_metodo_adquisicion 
  (
    met_id integer not null ,
    met_metodo varchar(10) not null ,
    met_sit integer not null ,
    primary key (met_id) 
  );

revoke all on fag_metodo_adquisicion from "public";

{ TABLE fag_dependencia row size = 49 number of columns = 3 index size = 9 }

create table fag_dependencia 
  (
    dep_id integer not null ,
    dep_desc varchar(40) not null ,
    dep_sit integer not null ,
    primary key (dep_id) 
  );

revoke all on fag_dependencia from "public";

{ TABLE fag_condicion_rep row size = 39 number of columns = 3 index size = 9 }

create table fag_condicion_rep 
  (
    con_id integer not null ,
    con_desc varchar(30) not null ,
    con_sit integer not null ,
    primary key (con_id) 
  );

revoke all on fag_condicion_rep from "public";

{ TABLE fag_unidad_medida row size = 39 number of columns = 3 index size = 9 }

create table fag_unidad_medida 
  (
    uni_id integer not null ,
    uni_desc varchar(30) not null ,
    uni_sit integer not null ,
    primary key (uni_id) 
  );

revoke all on fag_unidad_medida from "public";

{ TABLE fag_tipo_articulos row size = 59 number of columns = 3 index size = 9 }

create table fag_tipo_articulos 
  (
    tip_id integer not null ,
    tip_desc varchar(50),
    tip_sit integer not null ,
    primary key (tip_id) 
  );

revoke all on fag_tipo_articulos from "public";

{ TABLE fag_articulos row size = 141 number of columns = 5 index size = 9 }

create table fag_articulos 
  (
    art_id integer not null ,
    art_desc varchar(30) not null ,
    art_part_num varchar(50) not null ,
    art_nat_stock_number varchar(50),
    art_sit integer not null ,
    primary key (art_id) 
  );

revoke all on fag_articulos from "public";

{ TABLE fag_almacen row size = 28 number of columns = 4 index size = 9 }

create table fag_almacen 
  (
    alm_id integer not null ,
    alm_nom varchar(15) not null ,
    alm_num integer not null ,
    alm_sit integer not null ,
    primary key (alm_id) 
  );

revoke all on fag_almacen from "public";

{ TABLE fag_seccion row size = 29 number of columns = 3 index size = 9 }

create table fag_seccion 
  (
    sec_id integer not null ,
    sec_desc varchar(20) not null ,
    sec_sit integer not null ,
    primary key (sec_id) 
  );

revoke all on fag_seccion from "public";

{ TABLE fag_estanterias row size = 19 number of columns = 3 index size = 9 }

create table fag_estanterias 
  (
    est_id integer not null ,
    est_desc varchar(10) not null ,
    est_sit integer not null ,
    primary key (est_id) 
  );

revoke all on fag_estanterias from "public";

{ TABLE fag_columnas row size = 19 number of columns = 3 index size = 9 }

create table fag_columnas 
  (
    col_id integer not null ,
    col_desc varchar(10) not null ,
    col_sit integer not null ,
    primary key (col_id) 
  );

revoke all on fag_columnas from "public";

{ TABLE fag_niveles row size = 19 number of columns = 3 index size = 9 }

create table fag_niveles 
  (
    niv_id integer not null ,
    niv_desc varchar(10) not null ,
    niv_sit integer not null ,
    primary key (niv_id) 
  );

revoke all on fag_niveles from "public";

{ TABLE fag_caja row size = 29 number of columns = 3 index size = 9 }

create table fag_caja 
  (
    caj_id integer not null ,
    caj_desc varchar(20) not null ,
    caj_sit integer not null ,
    primary key (caj_id) 
  );

revoke all on fag_caja from "public";

{ TABLE fag_inventario row size = 647 number of columns = 34 index size = 9 }

create table fag_inventario 
  (
    inv_id integer not null ,
    inv_formulario varchar(20),
    inv_registros varchar(20) not null ,
    inv_autorizo integer,
    inv_reviso integer,
    inv_entrego integer,
    inv_asigno integer,
    inv_solicito integer,
    inv_recibio integer,
    inv_articulo integer not null ,
    inv_numero_serie varchar(60),
    inv_alterno varchar(60),
    inv_unidad_medida integer not null ,
    inv_cantidad integer not null ,
    inv_metodo_adquisicion integer,
    inv_condicion integer not null ,
    inv_tipo_repuesto integer,
    inv_fecha_venc date,
    inv_fech_ing date,
    inv_fech_egre date,
    inv_aeronave smallint,
    inv_factura varchar(50),
    inv_nit_proveedor varchar(20),
    inv_almacen integer,
    inv_seccion integer,
    inv_estanteria integer,
    inv_columna integer,
    inv_nivel integer,
    inv_caja integer,
    inv_obs varchar(200),
    inv_orden_trab varchar(100),
    inv_dependencia integer,
    inv_proceso varchar(10) not null ,
    inv_sit integer not null ,
    primary key (inv_id) 
  );

revoke all on fag_inventario from "public";

{ TABLE mdep_otros row size = 308 number of columns = 5 index size = 9 }

create table mdep_otros 
  (
    odep_codigo integer not null ,
    odep_direccion varchar(255),
    odep_telefono integer,
    odep_email char(40),
    odep_fec_crea date,
    primary key (odep_codigo) 
  );

revoke all on mdep_otros from "public";

{ TABLE aud_mdep_otros row size = 636 number of columns = 13 index size = 0 }

create table aud_mdep_otros 
  (
    odep_codigo integer,
    odep_direccion varchar(255),
    odep_telefono integer,
    odep_email char(40),
    odep_fec_crea date,
    desp_odep_codigo integer,
    desp_odep_direccion varchar(255),
    desp_odep_telefono integer,
    desp_odep_email char(40),
    desp_odep_fec_crea date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mdep_otros from "public";

{ TABLE permisos_bdmdn row size = 17 number of columns = 3 index size = 0 }

create table permisos_bdmdn 
  (
    perm_usuario integer,
    perm_id_tab integer,
    perm_permiso char(9)
  );

revoke all on permisos_bdmdn from "public";

{ TABLE far_insumos_dependencias row size = 2815 number of columns = 17 index size = 9 }

create table far_insumos_dependencias 
  (
    ins_id_depen integer not null ,
    ins_id_datos_depen integer not null ,
    ins_nombre_farmaco_depen integer,
    ins_presentacion_farmaco_depen integer,
    ins_cantidad_depen integer,
    ins_cantidad_existente_lote_depen integer,
    ins_cantidad_existente_depen integer,
    ins_id_tabla_suma integer,
    ins_lote_depen varchar(250),
    ins_fecha_vence_depen date,
    ins_dependencia_depen smallint,
    ins_asig_prec_depen varchar(250),
    ins_asig_total_depend decimal(20,5),
    ins_tipo_movimiento_depend char(5),
    ins_obser1_depend varchar(250),
    ins_obser2_depend lvarchar(2000),
    ins_situacion_depend integer,
    primary key (ins_id_depen) 
  );

revoke all on far_insumos_dependencias from "public";

{ TABLE aud_far_insumos_dependencias row size = 5650 number of columns = 37 index size = 0 }

create table aud_far_insumos_dependencias 
  (
    ins_id_depen integer,
    ins_id_datos_depen integer,
    ins_nombre_farmaco_depen integer,
    ins_presentacion_farmaco_depen integer,
    ins_cantidad_depen integer,
    ins_cantidad_existente_lote_depen integer,
    ins_cantidad_existente_depen integer,
    ins_id_tabla_suma integer,
    ins_lote_depen varchar(250),
    ins_fecha_vence_depen date,
    ins_dependencia_depen smallint,
    ins_asig_prec_depen varchar(250),
    ins_asig_total_depend decimal(20,5),
    ins_tipo_movimiento_depend char(5),
    ins_obser1_depend varchar(250),
    ins_obser2_depend lvarchar(2000),
    ins_situacion_depend integer,
    desp_ins_id_depen integer,
    desp_ins_id_datos_depen integer,
    desp_ins_nombre_farmaco_depen integer,
    desp_ins_presentacion_farmaco_depen integer,
    desp_ins_cantidad_depen integer,
    desp_ins_cantidad_existente_lote_depen integer,
    desp_ins_cantidad_existente_depen integer,
    desp_ins_id_tabla_suma integer,
    desp_ins_lote_depen varchar(250),
    desp_ins_fecha_vence_depen date,
    desp_ins_dependencia_depen smallint,
    desp_ins_asig_prec_depen varchar(250),
    desp_ins_asig_total_depend decimal(20,5),
    desp_ins_tipo_movimiento_depend char(5),
    desp_ins_obser1_depend varchar(250),
    desp_ins_obser2_depend lvarchar(2000),
    desp_ins_situacion_depend integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_far_insumos_dependencias from "public";

{ TABLE far_insumos_datos_dependencias row size = 2568 number of columns = 19 index size = 9 }

create table far_insumos_datos_dependencias 
  (
    ins_id_dat_depend integer not null ,
    ins_fecha_dat_depend date,
    ins_cat_entrega_depend integer,
    ins_grado_entrega_depend smallint,
    ins_arma_entrega_depend smallint,
    ins_cat_recibe_depend integer,
    ins_grado_recibe_depend smallint,
    ins_arma_recibe_depend smallint,
    ins_tipo_enfermedad_depend integer,
    ins_categoria_enfermedad_depend integer,
    ins_enfermedad_depend integer,
    ins_total_dat_depens decimal(20,5),
    ins_dependencia_dat_depend smallint,
    ins_observacion_dat_depend lvarchar(2000),
    ins_situacion_dat_depend integer,
    ins_obser1_dat_depend varchar(250),
    ins_obser2_dat_depend varchar(250),
    ins_tipo_mov_dat_depend char(5),
    ins_id_tabla_suma_depend integer,
    primary key (ins_id_dat_depend) 
  );

revoke all on far_insumos_datos_dependencias from "public";

{ TABLE aud_far_insumos_datos_dependencias row size = 5156 number of columns = 41 index size = 0 }

create table aud_far_insumos_datos_dependencias 
  (
    ins_id_dat_depend integer,
    ins_fecha_dat_depend date,
    ins_cat_entrega_depend integer,
    ins_grado_entrega_depend smallint,
    ins_arma_entrega_depend smallint,
    ins_cat_recibe_depend integer,
    ins_grado_recibe_depend smallint,
    ins_arma_recibe_depend smallint,
    ins_tipo_enfermedad_depend integer,
    ins_categoria_enfermedad_depend integer,
    ins_enfermedad_depend integer,
    ins_total_dat_depens decimal(20,5),
    ins_dependencia_dat_depend smallint,
    ins_observacion_dat_depend lvarchar(2000),
    ins_situacion_dat_depend integer,
    ins_obser1_dat_depend varchar(250),
    ins_obser2_dat_depend varchar(250),
    ins_tipo_mov_dat_depend char(5),
    ins_id_tabla_suma_depend integer,
    desp_ins_id_dat_depend integer,
    desp_ins_fecha_dat_depend date,
    desp_ins_cat_entrega_depend integer,
    desp_ins_grado_entrega_depend smallint,
    desp_ins_arma_entrega_depend smallint,
    desp_ins_cat_recibe_depend integer,
    desp_ins_grado_recibe_depend smallint,
    desp_ins_arma_recibe_depend smallint,
    desp_ins_tipo_enfermedad_depend integer,
    desp_ins_categoria_enfermedad_depend integer,
    desp_ins_enfermedad_depend integer,
    desp_ins_total_dat_depens decimal(20,5),
    desp_ins_dependencia_dat_depend smallint,
    desp_ins_observacion_dat_depend lvarchar(2000),
    desp_ins_situacion_dat_depend integer,
    desp_ins_obser1_dat_depend varchar(250),
    desp_ins_obser2_dat_depend varchar(250),
    desp_ins_tipo_mov_dat_depend char(5),
    desp_ins_id_tabla_suma_depend integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_far_insumos_datos_dependencias from "public";

{ TABLE far_enfermedades row size = 2286 number of columns = 6 index size = 9 }

create table far_enfermedades 
  (
    enferm_id integer not null ,
    enferm_cod char(20),
    enferm_id_cat_enf integer not null ,
    enferm_nomb varchar(250),
    enferm_descripcion lvarchar(2000),
    enferm_situacion integer,
    primary key (enferm_id) 
  );

revoke all on far_enfermedades from "public";

{ TABLE aud_far_enfermedades row size = 4592 number of columns = 15 index size = 0 }

create table aud_far_enfermedades 
  (
    enferm_id integer,
    enferm_cod char(20),
    enferm_id_cat_enf integer,
    enferm_nomb varchar(250),
    enferm_descripcion lvarchar(2000),
    enferm_situacion integer,
    desp_enferm_id integer,
    desp_enferm_cod char(20),
    desp_enferm_id_cat_enf integer,
    desp_enferm_nomb varchar(250),
    desp_enferm_descripcion lvarchar(2000),
    desp_enferm_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_far_enfermedades from "public";

{ TABLE far_categorias_enfermedades row size = 2286 number of columns = 6 index size = 9 }

create table far_categorias_enfermedades 
  (
    cat_enf_id integer not null ,
    cat_enf_cod char(20),
    cat_enf_id_tip_enf integer not null ,
    cat_enf_nomb varchar(250),
    cat_enf_descripcion lvarchar(2000),
    cat_enf_situacion integer,
    primary key (cat_enf_id) 
  );

revoke all on far_categorias_enfermedades from "public";

{ TABLE aud_far_categorias_enfermedades row size = 4592 number of columns = 15 index size = 0 }

create table aud_far_categorias_enfermedades 
  (
    cat_enf_id integer,
    cat_enf_cod char(20),
    cat_enf_id_tip_enf integer,
    cat_enf_nomb varchar(250),
    cat_enf_descripcion lvarchar(2000),
    cat_enf_situacion integer,
    desp_cat_enf_id integer,
    desp_cat_enf_cod char(20),
    desp_cat_enf_id_tip_enf integer,
    desp_cat_enf_nomb varchar(250),
    desp_cat_enf_descripcion lvarchar(2000),
    desp_cat_enf_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_far_categorias_enfermedades from "public";

{ TABLE far_tipos_enfermedades row size = 2282 number of columns = 5 index size = 9 }

create table far_tipos_enfermedades 
  (
    tip_enf_id integer not null ,
    tip_enf_cod char(20),
    tip_enf_nomb varchar(250),
    tip_enf_descripcion lvarchar(2000),
    tip_enf_situacion integer,
    primary key (tip_enf_id) 
  );

revoke all on far_tipos_enfermedades from "public";

{ TABLE aud_far_tipos_enfermedades row size = 4584 number of columns = 13 index size = 0 }

create table aud_far_tipos_enfermedades 
  (
    tip_enf_id integer,
    tip_enf_cod char(20),
    tip_enf_nomb varchar(250),
    tip_enf_descripcion lvarchar(2000),
    tip_enf_situacion integer,
    desp_tip_enf_id integer,
    desp_tip_enf_cod char(20),
    desp_tip_enf_nomb varchar(250),
    desp_tip_enf_descripcion lvarchar(2000),
    desp_tip_enf_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_far_tipos_enfermedades from "public";

{ TABLE constancias_sage row size = 1929 number of columns = 33 index size = 13 }

create table constancias_sage 
  (
    cons_id bigint,
    cons_dpi varchar(15),
    cons_nom1 varchar(20) not null ,
    cons_nom2 varchar(40),
    cons_ape1 varchar(20) not null ,
    cons_ape2 varchar(40),
    cons_sexo varchar(1) not null ,
    cons_fecha_doc date not null ,
    cons_nombre_not varchar(250) not null ,
    cons_numero_col varchar(20) not null ,
    cons_sexo_not char(2) not null ,
    cons_fecha_alta date not null ,
    cons_grado_alta varchar(90) not null ,
    cons_dep_alta varchar(200) not null ,
    cons_fecha_baja date not null ,
    cons_grado_baja varchar(30) not null ,
    cons_dep_baja varchar(200) not null ,
    cons_motivo_baja varchar(200) not null ,
    cons_doc_respaldo varchar(60),
    cons_num_recibo varchar(10),
    cons_cat_jefecerti varchar(10) not null ,
    cons_graarm_certi varchar(80),
    cons_nom_certi varchar(100) not null ,
    cons_cat_jefesage varchar(10) not null ,
    cons_graarm_jefesage varchar(80) not null ,
    cons_nom_jefesage varchar(100) not null ,
    cons_fecha_transac date not null ,
    cons_plaza_certi varchar(20) not null ,
    cons_plaza_jefe varchar(20) not null ,
    cons_cat_hizo varchar(10) not null ,
    cons_motivo_cambio varchar(250) not null ,
    cons_tip_documento char(1) not null ,
    cons_situacion char(1) not null ,
    primary key (cons_id) 
  );

revoke all on constancias_sage from "public";

{ TABLE aud_constancias_sage row size = 3878 number of columns = 69 index size = 0 }

create table aud_constancias_sage 
  (
    cons_id bigint,
    cons_dpi varchar(15),
    cons_nom1 varchar(20),
    cons_nom2 varchar(40),
    cons_ape1 varchar(20),
    cons_ape2 varchar(40),
    cons_sexo varchar(1),
    cons_fecha_doc date,
    cons_nombre_not varchar(250),
    cons_numero_col varchar(20),
    cons_sexo_not char(2),
    cons_fecha_alta date,
    cons_grado_alta varchar(90),
    cons_dep_alta varchar(200),
    cons_fecha_baja date,
    cons_grado_baja varchar(30),
    cons_dep_baja varchar(200),
    cons_motivo_baja varchar(200),
    cons_doc_respaldo varchar(60),
    cons_num_recibo varchar(10),
    cons_cat_jefecerti varchar(10),
    cons_graarm_certi varchar(80),
    cons_nom_certi varchar(100),
    cons_cat_jefesage varchar(10),
    cons_graarm_jefesage varchar(80),
    cons_nom_jefesage varchar(100),
    cons_fecha_transac date,
    cons_plaza_certi varchar(20),
    cons_plaza_jefe varchar(20),
    cons_cat_hizo varchar(10),
    cons_motivo_cambio varchar(250),
    cons_tip_documento char(1),
    cons_situacion char(1),
    desp_cons_id bigint,
    desp_cons_dpi varchar(15),
    desp_cons_nom1 varchar(20),
    desp_cons_nom2 varchar(40),
    desp_cons_ape1 varchar(20),
    desp_cons_ape2 varchar(40),
    desp_cons_sexo varchar(1),
    desp_cons_fecha_doc date,
    desp_cons_nombre_not varchar(250),
    desp_cons_numero_col varchar(20),
    desp_cons_sexo_not char(2),
    desp_cons_fecha_alta date,
    desp_cons_grado_alta varchar(90),
    desp_cons_dep_alta varchar(200),
    desp_cons_fecha_baja date,
    desp_cons_grado_baja varchar(30),
    desp_cons_dep_baja varchar(200),
    desp_cons_motivo_baja varchar(200),
    desp_cons_doc_respaldo varchar(60),
    desp_cons_num_recibo varchar(10),
    desp_cons_cat_jefecerti varchar(10),
    desp_cons_graarm_certi varchar(80),
    desp_cons_nom_certi varchar(100),
    desp_cons_cat_jefesage varchar(10),
    desp_cons_graarm_jefesage varchar(80),
    desp_cons_nom_jefesage varchar(100),
    desp_cons_fecha_transac date,
    desp_cons_plaza_certi varchar(20),
    desp_cons_plaza_jefe varchar(20),
    desp_cons_cat_hizo varchar(10),
    desp_cons_motivo_cambio varchar(250),
    desp_cons_tip_documento char(1),
    desp_cons_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_constancias_sage from "public";

{ TABLE aud_fmper row size = 556 number of columns = 71 index size = 0 }

create table aud_fmper 
  (
    per_catalogo integer,
    per_serie char(8),
    per_grado smallint,
    per_arma smallint,
    per_nom1 char(15),
    per_nom2 char(15),
    per_ape1 char(15),
    per_ape2 char(15),
    per_ape3 char(15),
    per_ced_ord char(4),
    per_ced_reg integer,
    per_fec_ext_ced date,
    per_ext_ced_lugar char(4),
    per_est_civil char(1),
    per_direccion char(50),
    per_zona smallint,
    per_dir_lugar char(4),
    per_telefono integer,
    per_sexo char(1),
    per_fec_nac date,
    per_nac_lugar char(4),
    per_promocion smallint,
    per_afil_ipm char(1),
    per_sangre char(3),
    per_antiguedad smallint,
    per_bienal smallint,
    per_plaza integer,
    per_desc_empleo char(45),
    per_fec_nomb date,
    per_ord_gral char(7),
    per_punto_og smallint,
    per_situacion char(2),
    per_prima_prof smallint,
    per_dpi char(15),
    desp_per_catalogo integer,
    desp_per_serie char(8),
    desp_per_grado smallint,
    desp_per_arma smallint,
    desp_per_nom1 char(15),
    desp_per_nom2 char(15),
    desp_per_ape1 char(15),
    desp_per_ape2 char(15),
    desp_per_ape3 char(15),
    desp_per_ced_ord char(4),
    desp_per_ced_reg integer,
    desp_per_fec_ext_ced date,
    desp_per_ext_ced_lugar char(4),
    desp_per_est_civil char(1),
    desp_per_direccion char(50),
    desp_per_zona smallint,
    desp_per_dir_lugar char(4),
    desp_per_telefono integer,
    desp_per_sexo char(1),
    desp_per_fec_nac date,
    desp_per_nac_lugar char(4),
    desp_per_promocion smallint,
    desp_per_afil_ipm char(1),
    desp_per_sangre char(3),
    desp_per_antiguedad smallint,
    desp_per_bienal smallint,
    desp_per_plaza integer,
    desp_per_desc_empleo char(45),
    desp_per_fec_nomb date,
    desp_per_ord_gral char(7),
    desp_per_punto_og smallint,
    desp_per_situacion char(2),
    desp_per_prima_prof smallint,
    desp_per_dpi char(15),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_fmper from "public";

{ TABLE f_cat_eliminados row size = 267 number of columns = 5 index size = 27 }

create table f_cat_eliminados 
  (
    fin_elim_id integer,
    fin_elim_cat_finanzas integer,
    fin_elim_fecha date,
    fin_elim_observaciones varchar(250),
    fin_elim_cat_quitado integer,
    primary key (fin_elim_id) 
  );

revoke all on f_cat_eliminados from "public";

{ TABLE aud_f_cat_eliminados row size = 554 number of columns = 13 index size = 0 }

create table aud_f_cat_eliminados 
  (
    fin_elim_id integer,
    fin_elim_cat_finanzas integer,
    fin_elim_fecha date,
    fin_elim_observaciones varchar(250),
    fin_elim_cat_quitado integer,
    desp_fin_elim_id integer,
    desp_fin_elim_cat_finanzas integer,
    desp_fin_elim_fecha date,
    desp_fin_elim_observaciones varchar(250),
    desp_fin_elim_cat_quitado integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_f_cat_eliminados from "public";

{ TABLE aud_lmun_conocimiento row size = 2196 number of columns = 47 index size = 0 }

create table aud_lmun_conocimiento 
  (
    con_codigo integer,
    con_dep_llave smallint,
    con_numero_libro varchar(255,1),
    con_folio_libro varchar(255,1),
    con_conocimiento_libro varchar(255,1),
    con_tipo_libro integer,
    con_grado_entrego integer,
    con_catalogo_entrego integer,
    con_dep_llave_entrego smallint,
    con_org_plaza_entrego integer,
    con_grado_recibio integer,
    con_catalogo_recibio integer,
    con_dep_llave_recibio smallint,
    con_org_plaza_recibio integer,
    con_grado_autorizo integer,
    con_catalogo_autorizo integer,
    con_dep_llave_autorizo smallint,
    con_org_plaza_autorizo integer,
    con_mensaje varchar(255,1),
    con_fecha_mensaje date,
    con_fecha_conocimiento date,
    con_situacion integer,
    desp_con_codigo integer,
    desp_con_dep_llave smallint,
    desp_con_numero_libro varchar(255,1),
    desp_con_folio_libro varchar(255,1),
    desp_con_conocimiento_libro varchar(255,1),
    desp_con_tipo_libro integer,
    desp_con_grado_entrego integer,
    desp_con_catalogo_entrego integer,
    desp_con_dep_llave_entrego smallint,
    desp_con_org_plaza_entrego integer,
    desp_con_grado_recibio integer,
    desp_con_catalogo_recibio integer,
    desp_con_dep_llave_recibio smallint,
    desp_con_org_plaza_recibio integer,
    desp_con_grado_autorizo integer,
    desp_con_catalogo_autorizo integer,
    desp_con_dep_llave_autorizo smallint,
    desp_con_org_plaza_autorizo integer,
    desp_con_mensaje varchar(255,1),
    desp_con_fecha_mensaje date,
    desp_con_fecha_conocimiento date,
    desp_con_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lmun_conocimiento from "public";

{ TABLE tiro_totales row size = 76 number of columns = 9 index size = 9 }

create table tiro_totales 
  (
    tir_id integer,
    tir_catalogo integer,
    tir_total_disparo integer,
    tir_total_tiempo decimal(20,5),
    tir_total decimal(20,5),
    tir_situacion integer,
    tir_montaje decimal(20,5),
    tir_precision decimal(20,5),
    tir_sit decimal(20,5),
    primary key (tir_id) 
  );

revoke all on tiro_totales from "public";

{ TABLE aud_tiro_totales row size = 156 number of columns = 21 index size = 0 }

create table aud_tiro_totales 
  (
    tir_id integer,
    tir_catalogo integer,
    tir_total_disparo integer,
    tir_total_tiempo decimal(20,5),
    tir_total decimal(20,5),
    tir_situacion integer,
    tir_montaje integer,
    tir_precision decimal(20,5),
    tir_sit decimal(20,5),
    desp_tir_id integer,
    desp_tir_catalogo integer,
    desp_tir_total_disparo integer,
    desp_tir_total_tiempo decimal(20,5),
    desp_tir_total decimal(20,5),
    desp_tir_situacion integer,
    desp_tir_montaje integer,
    desp_tir_precision decimal(20,5),
    desp_tir_sit decimal(20,5),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tiro_totales from "public";

{ TABLE tiro_equipos row size = 16 number of columns = 4 index size = 9 }

create table tiro_equipos 
  (
    equip_id integer,
    equip_equipo integer,
    equip_cantidad integer,
    equip_situacion integer,
    primary key (equip_id) 
  );

revoke all on tiro_equipos from "public";

{ TABLE aud_tiro_equipos row size = 52 number of columns = 11 index size = 0 }

create table aud_tiro_equipos 
  (
    equip_id integer,
    equip_equipo integer,
    equip_cantidad integer,
    equip_situacion integer,
    desp_equip_id integer,
    desp_equip_equipo integer,
    desp_equip_cantidad integer,
    desp_equip_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tiro_equipos from "public";

{ TABLE tiro_resultados_equipo row size = 24 number of columns = 4 index size = 9 }

create table tiro_resultados_equipo 
  (
    resul_id integer,
    resul_punteo decimal(20,5),
    resul_equipo integer,
    resul_situacion integer,
    primary key (resul_id) 
  );

revoke all on tiro_resultados_equipo from "public";

{ TABLE aud_tiro_resultados_equipo row size = 68 number of columns = 11 index size = 0 }

create table aud_tiro_resultados_equipo 
  (
    resul_id integer,
    resul_punteo decimal(20,5),
    resul_equipo integer,
    resul_situacion integer,
    desp_resul_id integer,
    desp_resul_punteo decimal(20,5),
    desp_resul_equipo integer,
    desp_resul_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tiro_resultados_equipo from "public";

{ TABLE con_boleta_dp row size = 126 number of columns = 8 index size = 18 }

create table con_boleta_dp 
  (
    bol_id serial not null ,
    bol_id_con integer not null ,
    bol_id_foto varchar(100) not null ,
    bol_ue integer not null ,
    bol_fecha_revision date,
    bol_tipo integer not null ,
    bol_fuente integer not null ,
    bol_situacion char(1) not null ,
    primary key (bol_id) 
  );

revoke all on con_boleta_dp from "public";

{ TABLE aud_con_boleta_dp row size = 272 number of columns = 19 index size = 0 }

create table aud_con_boleta_dp 
  (
    bol_id integer,
    bol_id_con integer,
    bol_id_foto varchar(100),
    bol_ue integer,
    bol_fecha_revision date,
    bol_tipo integer,
    bol_fuente integer,
    bol_situacion char(1),
    desp_bol_id integer,
    desp_bol_id_con integer,
    desp_bol_id_foto varchar(100),
    desp_bol_ue integer,
    desp_bol_fecha_revision date,
    desp_bol_tipo integer,
    desp_bol_fuente integer,
    desp_bol_situacion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_con_boleta_dp from "public";

{ TABLE emer_julia row size = 45 number of columns = 14 index size = 25 }

create table emer_julia 
  (
    emer_id serial not null ,
    emer_comando smallint,
    emer_municipio char(4),
    emer_latitud decimal(12,10),
    emer_longitud decimal(17,14),
    emer_lluvia smallint,
    emer_viento smallint,
    emer_inundaciones smallint,
    emer_derrumbe smallint,
    emer_carretera smallint,
    emer_desbordamiento smallint,
    emer_evacuacion smallint,
    emer_puentes smallint 
        default 0,
    emer_situacion smallint 
        default 1,
    primary key (emer_id) 
  );

revoke all on emer_julia from "public";

{ TABLE aud_emer_julia row size = 110 number of columns = 31 index size = 0 }

create table aud_emer_julia 
  (
    emer_id integer,
    emer_comando smallint,
    emer_municipio char(4),
    emer_latitud decimal(12,10),
    emer_longitud decimal(17,14),
    emer_lluvia smallint,
    emer_viento smallint,
    emer_inundaciones smallint,
    emer_derrumbe smallint,
    emer_carretera smallint,
    emer_desbordamiento smallint,
    emer_evacuacion smallint,
    emer_puentes smallint 
        default 0,
    emer_situacion smallint,
    desp_emer_id integer,
    desp_emer_comando smallint,
    desp_emer_municipio char(4),
    desp_emer_latitud decimal(12,10),
    desp_emer_longitud decimal(17,14),
    desp_emer_lluvia smallint,
    desp_emer_viento smallint,
    desp_emer_inundaciones smallint,
    desp_emer_derrumbe smallint,
    desp_emer_carretera smallint,
    desp_emer_desbordamiento smallint,
    desp_emer_evacuacion smallint,
    desp_emer_puentes smallint 
        default 0,
    desp_emer_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_emer_julia from "public";

{ TABLE pro_ord_gral row size = 476 number of columns = 13 index size = 9 }

create table pro_ord_gral 
  (
    pro_id serial not null ,
    pro_catalogo varchar(100),
    pro_grado smallint,
    pro_fechanomb date not null ,
    pro_arma smallint,
    pro_plazacese varchar(100),
    pro_motivo varchar(150) not null ,
    pro_plazapropuesta varchar(100),
    pro_fuerza smallint,
    pro_cese smallint,
    pro_p smallint,
    pro_nombra smallint,
    pro_punto smallint,
    primary key (pro_id) 
  );

revoke all on pro_ord_gral from "public";

{ TABLE aud_pro_ord_gral row size = 968 number of columns = 27 index size = 0 }

create table aud_pro_ord_gral 
  (
    pro_id integer,
    pro_catalogo varchar(100),
    pro_grado smallint,
    pro_fechanomb date,
    pro_arma smallint,
    pro_plazacese varchar(100),
    pro_motivo varchar(150),
    pro_plazapropuesta varchar(100),
    pro_fuerza smallint,
    pro_cese smallint,
    pro_nombra smallint,
    pro_punto smallint,
    desp_pro_id integer,
    desp_pro_catalogo varchar(100),
    desp_pro_grado smallint,
    desp_pro_fechanomb date,
    desp_pro_arma smallint,
    desp_pro_plazacese varchar(100),
    desp_pro_motivo varchar(150),
    desp_pro_plazapropuesta varchar(100),
    desp_pro_fuerza smallint,
    desp_pro_cese smallint,
    desp_pro_nombra smallint,
    desp_pro_punto smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_pro_ord_gral from "public";

{ TABLE per_plazas_orden row size = 2156 number of columns = 3 index size = 9 }

create table per_plazas_orden 
  (
    plaza_num integer not null ,
    plaza_desc_ct varchar(100),
    plaza_desc_lg lvarchar,
    primary key (plaza_num) 
  );

revoke all on per_plazas_orden from "public";

{ TABLE aud_per_plazas_orden row size = 4332 number of columns = 9 index size = 0 }

create table aud_per_plazas_orden 
  (
    plaza_num integer,
    plaza_desc_ct varchar(100),
    plaza_desc_lg lvarchar,
    desp_plaza_num integer,
    desp_plaza_desc_ct varchar(100),
    desp_plaza_desc_lg lvarchar,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_per_plazas_orden from "public";

{ TABLE pro_ord_gral_h row size = 214 number of columns = 6 index size = 9 }

create table pro_ord_gral_h 
  (
    prh_id serial not null ,
    prh_catalogo varchar(100),
    prh_fechanomb date not null ,
    prh_plazacese varchar(100),
    prh_punto smallint,
    prh_situacion smallint,
    primary key (prh_id) 
  );

revoke all on pro_ord_gral_h from "public";

{ TABLE aud_pro_ord_gral_h row size = 448 number of columns = 15 index size = 0 }

create table aud_pro_ord_gral_h 
  (
    prh_id integer,
    prh_catalogo varchar(100),
    prh_fechanomb date,
    prh_plazacese varchar(100),
    prh_punto smallint,
    prh_situacion smallint,
    desp_prh_id integer,
    desp_prh_catalogo varchar(100),
    desp_prh_fechanomb date,
    desp_prh_plazacese varchar(100),
    desp_prh_punto smallint,
    desp_prh_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_pro_ord_gral_h from "public";

{ TABLE dfdes_vivibanco row size = 398 number of columns = 18 index size = 16 }

create table dfdes_vivibanco 
  (
    dfvivi_catalogo integer,
    dfvivi_codigo smallint,
    dfvivi_nu_reg integer,
    dfvivi_cod_control integer,
    dfvivi_tipo_desc integer,
    dfvivi_fec_ini date,
    dfvivi_ult_act date,
    dfvivi_fec_cer date,
    dfvivi_monto money(16,2),
    dfvivi_saldo money(16,2),
    dfvivi_mensual money(16,2),
    dfvivi_tot_cuotas integer,
    dfvivi_num_cuotas integer,
    dfvivi_documen varchar(25),
    dfvivi_codeudor integer,
    dfvivi_nom_bene varchar(250),
    dfvivi_juz_con varchar(50),
    dfvivi_si_no char(1),
    primary key (dfvivi_catalogo) 
  );

revoke all on dfdes_vivibanco from "public";

{ TABLE aud_dfdes_vivibanco row size = 816 number of columns = 39 index size = 0 }

create table aud_dfdes_vivibanco 
  (
    dfvivi_catalogo integer,
    dfvivi_codigo smallint,
    dfvivi_nu_reg integer,
    dfvivi_cod_control integer,
    dfvivi_tipo_desc integer,
    dfvivi_fec_ini date,
    dfvivi_ult_act date,
    dfvivi_fec_cer date,
    dfvivi_monto money(16,2),
    dfvivi_saldo money(16,2),
    dfvivi_mensual money(16,2),
    dfvivi_tot_cuotas integer,
    dfvivi_num_cuotas integer,
    dfvivi_documen varchar(25),
    dfvivi_codeudor integer,
    dfvivi_nom_bene varchar(250),
    dfvivi_juz_con varchar(50),
    dfvivi_si_no char(1),
    desp_dfvivi_catalogo integer,
    desp_dfvivi_codigo smallint,
    desp_dfvivi_nu_reg integer,
    desp_dfvivi_cod_control integer,
    desp_dfvivi_tipo_desc integer,
    desp_dfvivi_fec_ini date,
    desp_dfvivi_ult_act date,
    desp_dfvivi_fec_cer date,
    desp_dfvivi_monto money(16,2),
    desp_dfvivi_saldo money(16,2),
    desp_dfvivi_mensual money(16,2),
    desp_dfvivi_tot_cuotas integer,
    desp_dfvivi_num_cuotas integer,
    desp_dfvivi_documen varchar(25),
    desp_dfvivi_codeudor integer,
    desp_dfvivi_nom_bene varchar(250),
    desp_dfvivi_juz_con varchar(50),
    desp_dfvivi_si_no char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dfdes_vivibanco from "public";

{ TABLE emer_lisa row size = 45 number of columns = 14 index size = 25 }

create table emer_lisa 
  (
    emer_id serial not null ,
    emer_comando smallint,
    emer_municipio char(4),
    emer_latitud decimal(12,10),
    emer_longitud decimal(17,14),
    emer_lluvia smallint,
    emer_viento smallint,
    emer_inundaciones smallint,
    emer_derrumbe smallint,
    emer_carretera smallint,
    emer_desbordamiento smallint,
    emer_evacuacion smallint,
    emer_puentes smallint,
    emer_situacion smallint 
        default 1,
    primary key (emer_id) 
  );

revoke all on emer_lisa from "public";

{ TABLE aud_emer_lisa row size = 110 number of columns = 31 index size = 0 }

create table aud_emer_lisa 
  (
    emer_id integer,
    emer_comando smallint,
    emer_municipio char(4),
    emer_latitud decimal(12,10),
    emer_longitud decimal(17,14),
    emer_lluvia smallint,
    emer_viento smallint,
    emer_inundaciones smallint,
    emer_derrumbe smallint,
    emer_carretera smallint,
    emer_desbordamiento smallint,
    emer_evacuacion smallint,
    emer_puentes smallint,
    emer_situacion smallint 
        default 1,
    desp_emer_id integer,
    desp_emer_comando smallint,
    desp_emer_municipio char(4),
    desp_emer_latitud decimal(12,10),
    desp_emer_longitud decimal(17,14),
    desp_emer_lluvia smallint,
    desp_emer_viento smallint,
    desp_emer_inundaciones smallint,
    desp_emer_derrumbe smallint,
    desp_emer_carretera smallint,
    desp_emer_desbordamiento smallint,
    desp_emer_evacuacion smallint,
    desp_emer_puentes smallint,
    desp_emer_situacion smallint 
        default 1,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_emer_lisa from "public";

{ TABLE aud_hisfin row size = 1290 number of columns = 173 index size = 0 }

create table aud_hisfin 
  (
    omeses char(4),
    oprograma char(2),
    ogrupo char(2),
    ounidad char(8),
    odepen char(2),
    obatallon char(2),
    ocompa�ia char(2),
    opeloton char(2),
    oseccion char(2),
    oescuadra char(2),
    otipo char(1),
    ogrado char(2),
    ocatalogo integer,
    onombres char(45),
    oempleo char(30),
    oorden char(7),
    osueldo money(16,2),
    oalimentacion money(16,2),
    omontepio money(16,2),
    oipm1 money(16,2),
    otimbres1 money(16,2),
    ofianza money(16,2),
    oliquido1 money(16,2),
    odias char(2),
    oa�os char(2),
    obienal money(16,2),
    oespecialidad money(16,2),
    orepresenta money(16,2),
    oresponsabili money(16,2),
    ototal2 money(16,2),
    oalimenpc money(16,2),
    oipm2 money(16,2),
    otimbres2 money(16,2),
    oliquido2 money(16,2),
    oemergencia money(16,2),
    bil100 char(3),
    bil50 char(3),
    bil20 char(3),
    bil10 char(3),
    bil5 char(3),
    bil1 char(3),
    bil05 char(3),
    mon25 char(3),
    mon10 char(3),
    mon5 char(3),
    mon1 char(3),
    tota_liqui money(16,2),
    osueldopc money(16,2),
    omontepiopc money(16,2),
    obienalpc money(16,2),
    oipm1pc money(16,2),
    ofianzapc money(16,2),
    oliquido1pc money(16,2),
    oalimentr money(16,2),
    oprimapc money(16,2),
    orepresenpc money(16,2),
    oresponsapc money(16,2),
    ototal2pc money(16,2),
    ocontruccion money(16,2),
    oipm2pc money(16,2),
    oliquido2pc money(16,2),
    obonemerg money(16,2),
    ocomplemento money(16,2),
    oipmcomple money(16,2),
    oliquicomple money(16,2),
    onomcorto char(45),
    oprimaings money(16,2),
    oprimaprofe money(16,2),
    oaguinaldo money(16,2),
    obon50 money(16,2),
    opar char(1),
    ohoras char(1),
    oaumento money(16,2),
    ovaciones money(16,2),
    oplaza char(9),
    omes char(2),
    omonte char(1),
    osaldoase char(8),
    oceom char(5),
    oarma char(2),
    osexo char(1),
    omeomserie char(3),
    obtaop money(16,2),
    omeomnivel char(1),
    ovarios char(15),
    desp_omeses char(4),
    desp_oprograma char(2),
    desp_ogrupo char(2),
    desp_ounidad char(8),
    desp_odepen char(2),
    desp_obatallon char(2),
    desp_ocompa�ia char(2),
    desp_opeloton char(2),
    desp_oseccion char(2),
    desp_oescuadra char(2),
    desp_otipo char(1),
    desp_ogrado char(2),
    desp_ocatalogo integer,
    desp_onombres char(45),
    desp_oempleo char(30),
    desp_oorden char(7),
    desp_osueldo money(16,2),
    desp_oalimentacion money(16,2),
    desp_omontepio money(16,2),
    desp_oipm1 money(16,2),
    desp_otimbres1 money(16,2),
    desp_ofianza money(16,2),
    desp_oliquido1 money(16,2),
    desp_odias char(2),
    desp_oa�os char(2),
    desp_obienal money(16,2),
    desp_oespecialidad money(16,2),
    desp_orepresenta money(16,2),
    desp_oresponsabili money(16,2),
    desp_ototal2 money(16,2),
    desp_oalimenpc money(16,2),
    desp_oipm2 money(16,2),
    desp_otimbres2 money(16,2),
    desp_oliquido2 money(16,2),
    desp_oemergencia money(16,2),
    desp_bil100 char(3),
    desp_bil50 char(3),
    desp_bil20 char(3),
    desp_bil10 char(3),
    desp_bil5 char(3),
    desp_bil1 char(3),
    desp_bil05 char(3),
    desp_mon25 char(3),
    desp_mon10 char(3),
    desp_mon5 char(3),
    desp_mon1 char(3),
    desp_tota_liqui money(16,2),
    desp_osueldopc money(16,2),
    desp_omontepiopc money(16,2),
    desp_obienalpc money(16,2),
    desp_oipm1pc money(16,2),
    desp_ofianzapc money(16,2),
    desp_oliquido1pc money(16,2),
    desp_oalimentr money(16,2),
    desp_oprimapc money(16,2),
    desp_orepresenpc money(16,2),
    desp_oresponsapc money(16,2),
    desp_ototal2pc money(16,2),
    desp_ocontruccion money(16,2),
    desp_oipm2pc money(16,2),
    desp_oliquido2pc money(16,2),
    desp_obonemerg money(16,2),
    desp_ocomplemento money(16,2),
    desp_oipmcomple money(16,2),
    desp_oliquicomple money(16,2),
    desp_onomcorto char(45),
    desp_oprimaings money(16,2),
    desp_oprimaprofe money(16,2),
    desp_oaguinaldo money(16,2),
    desp_obon50 money(16,2),
    desp_opar char(1),
    desp_ohoras char(1),
    desp_oaumento money(16,2),
    desp_ovaciones money(16,2),
    desp_oplaza char(9),
    desp_omes char(2),
    desp_omonte char(1),
    desp_osaldoase char(8),
    desp_oceom char(5),
    desp_oarma char(2),
    desp_osexo char(1),
    desp_omeomserie char(3),
    desp_obtaop money(16,2),
    desp_omeomnivel char(1),
    desp_ovarios char(15),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_hisfin from "public";

{ TABLE aud_tmper row size = 576 number of columns = 79 index size = 0 }

create table aud_tmper 
  (
    tper_catalogo integer,
    tper_serie char(8),
    tper_grado smallint,
    tper_arma smallint,
    tper_nom1 char(15),
    tper_nom2 char(15),
    tper_ape1 char(15),
    tper_ape2 char(15),
    tper_ape3 char(15),
    tper_ced_ord char(4),
    tper_ced_reg integer,
    tper_fec_ext_ced date,
    tper_ext_ced_lugar char(4),
    tper_est_civil char(1),
    tper_direccion char(50),
    tper_zona smallint,
    tper_dir_lugar char(4),
    tper_telefono integer,
    tper_sexo char(1),
    tper_fec_nac date,
    tper_nac_lugar char(4),
    tper_promocion smallint,
    tper_afil_ipm char(1),
    tper_sangre char(3),
    tper_antiguedad smallint,
    tper_bienal smallint,
    tper_plaza integer,
    tper_desc_empleo char(45),
    tper_fec_nomb date,
    tper_ord_gral char(7),
    tper_punto_og smallint,
    tper_situacion char(2),
    tper_prima_prof smallint,
    tper_usuario char(8),
    tper_cat_usuario integer,
    tper_fec_hora datetime year to minute,
    tper_terminal char(5),
    tper_accion char(1),
    desp_tper_catalogo integer,
    desp_tper_serie char(8),
    desp_tper_grado smallint,
    desp_tper_arma smallint,
    desp_tper_nom1 char(15),
    desp_tper_nom2 char(15),
    desp_tper_ape1 char(15),
    desp_tper_ape2 char(15),
    desp_tper_ape3 char(15),
    desp_tper_ced_ord char(4),
    desp_tper_ced_reg integer,
    desp_tper_fec_ext_ced date,
    desp_tper_ext_ced_lugar char(4),
    desp_tper_est_civil char(1),
    desp_tper_direccion char(50),
    desp_tper_zona smallint,
    desp_tper_dir_lugar char(4),
    desp_tper_telefono integer,
    desp_tper_sexo char(1),
    desp_tper_fec_nac date,
    desp_tper_nac_lugar char(4),
    desp_tper_promocion smallint,
    desp_tper_afil_ipm char(1),
    desp_tper_sangre char(3),
    desp_tper_antiguedad smallint,
    desp_tper_bienal smallint,
    desp_tper_plaza integer,
    desp_tper_desc_empleo char(45),
    desp_tper_fec_nomb date,
    desp_tper_ord_gral char(7),
    desp_tper_punto_og smallint,
    desp_tper_situacion char(2),
    desp_tper_prima_prof smallint,
    desp_tper_usuario char(8),
    desp_tper_cat_usuario integer,
    desp_tper_fec_hora datetime year to minute,
    desp_tper_terminal char(5),
    desp_tper_accion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tmper from "public";

{ TABLE aud_ep_mper row size = 612 number of columns = 77 index size = 0 }

create table aud_ep_mper 
  (
    per_control integer,
    per_catalogo char(6),
    per_serie char(8),
    per_grado smallint,
    per_arma smallint,
    per_nom1 char(15),
    per_nom2 char(15),
    per_ape1 char(15),
    per_ape2 char(15),
    per_ape3 char(15),
    per_ced_ord char(4),
    per_ced_reg char(20),
    per_fec_ext_ced date,
    per_ext_ced_lugar char(4),
    per_est_civil char(1),
    per_direccion char(50),
    per_zona smallint,
    per_dir_lugar char(4),
    per_telefono integer,
    per_sexo char(1),
    per_fec_nac date,
    per_nac_lugar char(4),
    per_promocion smallint,
    per_afil_ipm char(1),
    per_sangre char(3),
    per_antiguedad smallint,
    per_bienal smallint,
    per_plaza integer,
    per_desc_empleo char(45),
    per_fec_nomb date,
    per_ord_gral char(7),
    per_punto_og smallint,
    per_situacion char(2),
    per_prima_prof smallint,
    per_dpi char(15),
    per_cambio smallint,
    per_fecambio date,
    desp_per_control integer,
    desp_per_catalogo char(6),
    desp_per_serie char(8),
    desp_per_grado smallint,
    desp_per_arma smallint,
    desp_per_nom1 char(15),
    desp_per_nom2 char(15),
    desp_per_ape1 char(15),
    desp_per_ape2 char(15),
    desp_per_ape3 char(15),
    desp_per_ced_ord char(4),
    desp_per_ced_reg char(20),
    desp_per_fec_ext_ced date,
    desp_per_ext_ced_lugar char(4),
    desp_per_est_civil char(1),
    desp_per_direccion char(50),
    desp_per_zona smallint,
    desp_per_dir_lugar char(4),
    desp_per_telefono integer,
    desp_per_sexo char(1),
    desp_per_fec_nac date,
    desp_per_nac_lugar char(4),
    desp_per_promocion smallint,
    desp_per_afil_ipm char(1),
    desp_per_sangre char(3),
    desp_per_antiguedad smallint,
    desp_per_bienal smallint,
    desp_per_plaza integer,
    desp_per_desc_empleo char(45),
    desp_per_fec_nomb date,
    desp_per_ord_gral char(7),
    desp_per_punto_og smallint,
    desp_per_situacion char(2),
    desp_per_prima_prof smallint,
    desp_per_dpi char(15),
    desp_per_cambio smallint,
    desp_per_fecambio date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ep_mper from "public";

{ TABLE aud_vlh_tow row size = 3148 number of columns = 71 index size = 0 }

create table aud_vlh_tow 
  (
    tow_id smallint,
    tow_sicoin varchar(50),
    tow_catalogo integer,
    tow_ubicacion smallint,
    tow_adquisicion smallint,
    tow_modelo smallint,
    tow_serie varchar(80),
    tow_pais smallint,
    tow_proposito varchar(50),
    tow_dependencia smallint,
    tow_tipo varchar(80),
    tow_estado smallint,
    tow_marca smallint,
    tow_linea smallint,
    tow_cap_libras smallint,
    tow_traccion varchar(50),
    tow_cant_motor smallint,
    tow_t_motor varchar(50),
    tow_marca_motor varchar(80),
    tow_serie_motor varchar(80),
    tow_actuadores varchar(80),
    tow_cant_bat smallint,
    tow_t_bat varchar(80),
    tow_amperaje smallint,
    tow_voltaje smallint,
    tow_placas smallint,
    tow_acum varchar(80),
    tow_fuentes varchar(80),
    tow_tiempo varchar(80),
    tow_combustible varchar(80),
    tow_neumaticos smallint,
    tow_lubri varchar(255),
    tow_lubri_esp varchar(255),
    tow_situacion smallint,
    desp_tow_id smallint,
    desp_tow_sicoin varchar(50),
    desp_tow_catalogo integer,
    desp_tow_ubicacion smallint,
    desp_tow_adquisicion smallint,
    desp_tow_modelo smallint,
    desp_tow_serie varchar(80),
    desp_tow_pais smallint,
    desp_tow_proposito varchar(50),
    desp_tow_dependencia smallint,
    desp_tow_tipo varchar(80),
    desp_tow_estado smallint,
    desp_tow_marca smallint,
    desp_tow_linea smallint,
    desp_tow_cap_libras smallint,
    desp_tow_traccion varchar(50),
    desp_tow_cant_motor smallint,
    desp_tow_t_motor varchar(50),
    desp_tow_marca_motor varchar(80),
    desp_tow_serie_motor varchar(80),
    desp_tow_actuadores varchar(80),
    desp_tow_cant_bat smallint,
    desp_tow_t_bat varchar(80),
    desp_tow_amperaje smallint,
    desp_tow_voltaje smallint,
    desp_tow_placas smallint,
    desp_tow_acum varchar(80),
    desp_tow_fuentes varchar(80),
    desp_tow_tiempo varchar(80),
    desp_tow_combustible varchar(80),
    desp_tow_neumaticos smallint,
    desp_tow_lubri varchar(255),
    desp_tow_lubri_esp varchar(255),
    desp_tow_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_tow from "public";

{ TABLE aud_veteranos_comparacion row size = 2434 number of columns = 63 index size = 0 }

create table aud_veteranos_comparacion 
  (
    vet_id integer,
    vet_nom_real varchar(250),
    vet_fec_alta varchar(10),
    vet_fec_baja varchar(10),
    vet_dpi char(15),
    vet_cedula char(25),
    vet_beneficiario varchar(250),
    vet_dependencia char(200),
    vet_num_listado integer,
    vet_nom1 varchar(50),
    vet_nom2 varchar(50),
    vet_nom3 varchar(50),
    vet_ape1 varchar(50),
    vet_ape2 varchar(50),
    vet_ape3 varchar(50),
    vet_fam_nom1 varchar(20),
    vet_fam_nom2 varchar(20),
    vet_fam_ape1 varchar(20),
    vet_fam_ape2 varchar(20),
    vet_coin_nom integer,
    vet_coin_fec_alta integer,
    vet_coin_fec_baja integer,
    vet_coin_2fechas integer,
    vet_coin_cedula integer,
    vet_coin_dpi integer,
    vet_coin_beneficiario integer,
    vet_cat_coincidencia integer,
    vet_vac2 integer,
    vet_vac3 integer,
    vet_situacion char(5),
    desp_vet_id serial not null ,
    desp_vet_nom_real varchar(250),
    desp_vet_fec_alta varchar(10),
    desp_vet_fec_baja varchar(10),
    desp_vet_dpi char(15),
    desp_vet_cedula char(25),
    desp_vet_beneficiario varchar(250),
    desp_vet_dependencia char(200),
    desp_vet_num_listado integer,
    desp_vet_nom1 varchar(50),
    desp_vet_nom2 varchar(50),
    desp_vet_nom3 varchar(50),
    desp_vet_ape1 varchar(50),
    desp_vet_ape2 varchar(50),
    desp_vet_ape3 varchar(50),
    desp_vet_fam_nom1 varchar(20),
    desp_vet_fam_nom2 varchar(20),
    desp_vet_fam_ape1 varchar(20),
    desp_vet_fam_ape2 varchar(20),
    desp_vet_coin_nom integer,
    desp_vet_coin_fec_alta integer,
    desp_vet_coin_fec_baja integer,
    desp_vet_coin_2fechas integer,
    desp_vet_coin_cedula integer,
    desp_vet_coin_dpi integer,
    desp_vet_coin_beneficiario integer,
    desp_vet_cat_coincidencia integer,
    desp_vet_vac2 integer,
    desp_vet_vac3 integer,
    desp_vet_situacion char(5),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_veteranos_comparacion from "public";

{ TABLE aud_n_mper row size = 526 number of columns = 69 index size = 0 }

create table aud_n_mper 
  (
    per_catalogo integer,
    per_serie char(8),
    per_grado smallint,
    per_arma smallint,
    per_nom1 char(15),
    per_nom2 char(15),
    per_ape1 char(15),
    per_ape2 char(15),
    per_ape3 char(15),
    per_ced_ord char(4),
    per_ced_reg integer,
    per_fec_ext_ced date,
    per_ext_ced_lugar char(4),
    per_est_civil char(1),
    per_direccion char(50),
    per_zona smallint,
    per_dir_lugar char(4),
    per_telefono integer,
    per_sexo char(1),
    per_fec_nac date,
    per_nac_lugar char(4),
    per_promocion smallint,
    per_afil_ipm char(1),
    per_sangre char(3),
    per_antiguedad smallint,
    per_bienal smallint,
    per_plaza integer,
    per_desc_empleo char(45),
    per_fec_nomb date,
    per_ord_gral char(7),
    per_punto_og smallint,
    per_situacion char(2),
    per_prima_prof smallint,
    desp_per_catalogo integer,
    desp_per_serie char(8),
    desp_per_grado smallint,
    desp_per_arma smallint,
    desp_per_nom1 char(15),
    desp_per_nom2 char(15),
    desp_per_ape1 char(15),
    desp_per_ape2 char(15),
    desp_per_ape3 char(15),
    desp_per_ced_ord char(4),
    desp_per_ced_reg integer,
    desp_per_fec_ext_ced date,
    desp_per_ext_ced_lugar char(4),
    desp_per_est_civil char(1),
    desp_per_direccion char(50),
    desp_per_zona smallint,
    desp_per_dir_lugar char(4),
    desp_per_telefono integer,
    desp_per_sexo char(1),
    desp_per_fec_nac date,
    desp_per_nac_lugar char(4),
    desp_per_promocion smallint,
    desp_per_afil_ipm char(1),
    desp_per_sangre char(3),
    desp_per_antiguedad smallint,
    desp_per_bienal smallint,
    desp_per_plaza integer,
    desp_per_desc_empleo char(45),
    desp_per_fec_nomb date,
    desp_per_ord_gral char(7),
    desp_per_punto_og smallint,
    desp_per_situacion char(2),
    desp_per_prima_prof smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_n_mper from "public";

{ TABLE aud_temp_fin_personal row size = 532 number of columns = 57 index size = 0 }

create table aud_temp_fin_personal 
  (
    fper_catalogo integer,
    fper_grado smallint,
    fper_arma smallint,
    fper_nom1 char(15),
    fper_nom2 char(15),
    fper_ape1 char(15),
    fper_ape2 char(15),
    fper_ape3 char(15),
    fper_ced_ord char(4),
    fper_ced_reg char(20),
    fper_fec_ext_ced date,
    fper_ext_ced_lugar char(4),
    fper_est_civil char(1),
    fper_direccion varchar(75,10),
    fper_zona smallint,
    fper_dir_lugar char(4),
    fper_telefono integer,
    fper_sexo char(1),
    fper_fec_nac date,
    fper_nac_lugar char(4),
    fper_sangre char(3),
    fper_profesion smallint,
    fper_banco smallint,
    fper_cuenta char(20),
    fper_tip_cuenta char(1),
    fper_situacion char(2),
    fper_dpi char(15),
    desp_fper_catalogo integer,
    desp_fper_grado smallint,
    desp_fper_arma smallint,
    desp_fper_nom1 char(15),
    desp_fper_nom2 char(15),
    desp_fper_ape1 char(15),
    desp_fper_ape2 char(15),
    desp_fper_ape3 char(15),
    desp_fper_ced_ord char(4),
    desp_fper_ced_reg char(20),
    desp_fper_fec_ext_ced date,
    desp_fper_ext_ced_lugar char(4),
    desp_fper_est_civil char(1),
    desp_fper_direccion varchar(75,10),
    desp_fper_zona smallint,
    desp_fper_dir_lugar char(4),
    desp_fper_telefono integer,
    desp_fper_sexo char(1),
    desp_fper_fec_nac date,
    desp_fper_nac_lugar char(4),
    desp_fper_sangre char(3),
    desp_fper_profesion smallint,
    desp_fper_banco smallint,
    desp_fper_cuenta char(20),
    desp_fper_tip_cuenta char(1),
    desp_fper_situacion char(2),
    desp_fper_dpi char(15),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_temp_fin_personal from "public";

{ TABLE aud_ipm_cart row size = 432 number of columns = 57 index size = 0 }

create table aud_ipm_cart 
  (
    ipm_credito char(9),
    ipm_catalogo integer,
    ipm_nombre char(40),
    ipm_total_cuotas smallint,
    ipm_cuotas_van smallint,
    ipm_cod_unidad integer,
    ipm_saldo_capital money(16,2),
    ipm_int_mora money(16,2),
    ipm_int_anio_ant money(16,2),
    ipm_int_mes_ant money(16,2),
    ipm_int_mes money(16,2),
    ipm_g_admon_ant money(16,2),
    ipm_seg_viv_ant money(16,2),
    ipm_g_admon money(16,2),
    ipm_seg_vivienda money(16,2),
    ipm_capital money(16,2),
    ipm_iva_mes_ant money(16,2),
    ipm_iva_mes money(16,2),
    ipm_total_desc money(16,2),
    ipm_fecha6 date,
    ipm_fecha8 date,
    ipm_hora8 char(10),
    ipm_usuario char(3),
    ipm_terminal char(3),
    ipm_cod smallint,
    ipm_paga1 char(1),
    ipm_paga2 char(1),
    desp_ipm_credito char(9),
    desp_ipm_catalogo integer,
    desp_ipm_nombre char(40),
    desp_ipm_total_cuotas smallint,
    desp_ipm_cuotas_van smallint,
    desp_ipm_cod_unidad integer,
    desp_ipm_saldo_capital money(16,2),
    desp_ipm_int_mora money(16,2),
    desp_ipm_int_anio_ant money(16,2),
    desp_ipm_int_mes_ant money(16,2),
    desp_ipm_int_mes money(16,2),
    desp_ipm_g_admon_ant money(16,2),
    desp_ipm_seg_viv_ant money(16,2),
    desp_ipm_g_admon money(16,2),
    desp_ipm_seg_vivienda money(16,2),
    desp_ipm_capital money(16,2),
    desp_ipm_iva_mes_ant money(16,2),
    desp_ipm_iva_mes money(16,2),
    desp_ipm_total_desc money(16,2),
    desp_ipm_fecha6 date,
    desp_ipm_fecha8 date,
    desp_ipm_hora8 char(10),
    desp_ipm_usuario char(3),
    desp_ipm_terminal char(3),
    desp_ipm_cod smallint,
    desp_ipm_paga1 char(1),
    desp_ipm_paga2 char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ipm_cart from "public";

{ TABLE aud_ipm_dfam_temp row size = 474 number of columns = 55 index size = 0 }

create table aud_ipm_dfam_temp 
  (
    fam_cat_militar integer,
    fam_cat_familiar integer,
    fam_nom1 char(15),
    fam_nom2 char(15),
    fam_ape1 char(15),
    fam_ape2 char(15),
    fam_parentesco smallint,
    fam_sexo char(1),
    fam_sangre char(3),
    fam_est_civil char(1),
    fam_fec_nac date,
    fam_nac_lugar char(4),
    fam_ced_ord char(4),
    fam_ced_reg integer,
    fam_fec_ext_ced date,
    fam_lugar_ext_ced char(4),
    fam_direccion char(50),
    fam_zona smallint,
    fam_dir_lugar char(4),
    fam_telefono integer,
    fam_ocupacion char(30),
    fam_empresa char(30),
    fam_cheque smallint,
    fam_beneficiario smallint,
    fam_emergencia smallint,
    fam_clase_pasiva smallint,
    desp_fam_cat_militar integer,
    desp_fam_cat_familiar integer,
    desp_fam_nom1 char(15),
    desp_fam_nom2 char(15),
    desp_fam_ape1 char(15),
    desp_fam_ape2 char(15),
    desp_fam_parentesco smallint,
    desp_fam_sexo char(1),
    desp_fam_sangre char(3),
    desp_fam_est_civil char(1),
    desp_fam_fec_nac date,
    desp_fam_nac_lugar char(4),
    desp_fam_ced_ord char(4),
    desp_fam_ced_reg integer,
    desp_fam_fec_ext_ced date,
    desp_fam_lugar_ext_ced char(4),
    desp_fam_direccion char(50),
    desp_fam_zona smallint,
    desp_fam_dir_lugar char(4),
    desp_fam_telefono integer,
    desp_fam_ocupacion char(30),
    desp_fam_empresa char(30),
    desp_fam_cheque smallint,
    desp_fam_beneficiario smallint,
    desp_fam_emergencia smallint,
    desp_fam_clase_pasiva smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ipm_dfam_temp from "public";

{ TABLE aud_exp_solicitud row size = 1696 number of columns = 43 index size = 0 }

create table aud_exp_solicitud 
  (
    sol_codigo integer,
    sol_dep_llave smallint,
    sol_solicito_dep_llave smallint,
    sol_solicito_grado integer,
    sol_solicito_catalogo integer,
    sol_solicito_mensaje varchar(255,1),
    sol_solicito_fecha datetime year to second,
    sol_autorizo_dep_llave smallint,
    sol_autorizo_grado integer,
    sol_autorizo_catalogo integer,
    sol_autorizo_mensaje varchar(255,1),
    sol_autorizo_fecha datetime year to second,
    sol_ordeno_dep_llave smallint,
    sol_ordeno_grado integer,
    sol_ordeno_catalogo integer,
    sol_ordeno_mensaje varchar(255,1),
    sol_ordeno_fecha datetime year to second,
    sol_pro_codigo integer,
    sol_dep_llave2 smallint,
    sol_situacion integer,
    desp_sol_codigo integer,
    desp_sol_dep_llave smallint,
    desp_sol_solicito_dep_llave smallint,
    desp_sol_solicito_grado integer,
    desp_sol_solicito_catalogo integer,
    desp_sol_solicito_mensaje varchar(255,1),
    desp_sol_solicito_fecha datetime year to second,
    desp_sol_autorizo_dep_llave smallint,
    desp_sol_autorizo_grado integer,
    desp_sol_autorizo_catalogo integer,
    desp_sol_autorizo_mensaje varchar(255,1),
    desp_sol_autorizo_fecha datetime year to second,
    desp_sol_ordeno_dep_llave smallint,
    desp_sol_ordeno_grado integer,
    desp_sol_ordeno_catalogo integer,
    desp_sol_ordeno_mensaje varchar(255,1),
    desp_sol_ordeno_fecha datetime year to second,
    desp_sol_pro_codigo integer,
    desp_sol_dep_llave2 smallint,
    desp_sol_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_exp_solicitud from "public";

{ TABLE aud_exp_conocimiento row size = 2676 number of columns = 41 index size = 0 }

create table aud_exp_conocimiento 
  (
    con_dep_llave smallint,
    con_codigo integer,
    con_libro_numero varchar(255,1),
    con_libro_folio varchar(255,1),
    con_libro_tipo varchar(255,1),
    con_libro_conocimiento varchar(255,1),
    con_libro_conocimiento_fecha date,
    con_mensaje varchar(255,1),
    con_mensaje_fecha date,
    con_entrego_dep_llave smallint,
    con_entrego_grado integer,
    con_entrego_catalogo integer,
    con_recibio_dep_llave smallint,
    con_recibio_grado integer,
    con_recibio_catalogo integer,
    con_autorizo_dep_llave smallint,
    con_autorizo_grado integer,
    con_autorizo_catalogo integer,
    con_situacion integer,
    desp_con_dep_llave smallint,
    desp_con_codigo integer,
    desp_con_libro_numero varchar(255,1),
    desp_con_libro_folio varchar(255,1),
    desp_con_libro_tipo varchar(255,1),
    desp_con_libro_conocimiento varchar(255,1),
    desp_con_libro_conocimiento_fecha date,
    desp_con_mensaje varchar(255,1),
    desp_con_mensaje_fecha date,
    desp_con_entrego_dep_llave smallint,
    desp_con_entrego_grado integer,
    desp_con_entrego_catalogo integer,
    desp_con_recibio_dep_llave smallint,
    desp_con_recibio_grado integer,
    desp_con_recibio_catalogo integer,
    desp_con_autorizo_dep_llave smallint,
    desp_con_autorizo_grado integer,
    desp_con_autorizo_catalogo integer,
    desp_con_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_exp_conocimiento from "public";

{ TABLE aud_cgsifldd row size = 1076 number of columns = 53 index size = 0 }

create table aud_cgsifldd 
  (
    module char(8),
    prog char(8),
    scrid char(7),
    cust_key char(12),
    input_num smallint,
    seqno smallint,
    field_tag char(6),
    tabname char(18),
    fldname char(18),
    fldtype char(42),
    f_autonext char(1),
    f_comments char(74),
    f_default char(30),
    f_display_like char(42),
    f_downshift char(1),
    f_format char(50),
    f_include char(100),
    f_picture char(50),
    f_noentry char(1),
    f_required char(1),
    f_upshift char(1),
    f_valid_like char(42),
    f_verify char(1),
    f_trans char(10),
    f_skip char(1),
    desp_module char(8),
    desp_prog char(8),
    desp_scrid char(7),
    desp_cust_key char(12),
    desp_input_num smallint,
    desp_seqno smallint,
    desp_field_tag char(6),
    desp_tabname char(18),
    desp_fldname char(18),
    desp_fldtype char(42),
    desp_f_autonext char(1),
    desp_f_comments char(74),
    desp_f_default char(30),
    desp_f_display_like char(42),
    desp_f_downshift char(1),
    desp_f_format char(50),
    desp_f_include char(100),
    desp_f_picture char(50),
    desp_f_noentry char(1),
    desp_f_required char(1),
    desp_f_upshift char(1),
    desp_f_valid_like char(42),
    desp_f_verify char(1),
    desp_f_trans char(10),
    desp_f_skip char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cgsifldd from "public";

{ TABLE aud_tdfdes row size = 390 number of columns = 45 index size = 0 }

create table aud_tdfdes 
  (
    tdfd_catalogo integer,
    tdfd_codigo smallint,
    tdfd_nu_reg smallint,
    tdfd_cod_control smallint,
    tdfd_tipo_desc char(1),
    tdfd_fec_ini date,
    tdfd_ult_act date,
    tdfd_fec_cer date,
    tdfd_monto money(16,2),
    tdfd_saldo money(16,2),
    tdfd_mensual money(16,2),
    tdfd_tot_cuotas smallint,
    tdfd_num_cuotas smallint,
    tdfd_documen char(6),
    tdfd_codeudor integer,
    tdfd_nom_bene char(50),
    tdfd_juz_con char(50),
    tdfd_usuario char(8),
    tdfd_fec_hora datetime year to minute,
    tdfd_terminal char(5),
    tdfd_accion char(1),
    desp_tdfd_catalogo integer,
    desp_tdfd_codigo smallint,
    desp_tdfd_nu_reg smallint,
    desp_tdfd_cod_control smallint,
    desp_tdfd_tipo_desc char(1),
    desp_tdfd_fec_ini date,
    desp_tdfd_ult_act date,
    desp_tdfd_fec_cer date,
    desp_tdfd_monto money(16,2),
    desp_tdfd_saldo money(16,2),
    desp_tdfd_mensual money(16,2),
    desp_tdfd_tot_cuotas smallint,
    desp_tdfd_num_cuotas smallint,
    desp_tdfd_documen char(6),
    desp_tdfd_codeudor integer,
    desp_tdfd_nom_bene char(50),
    desp_tdfd_juz_con char(50),
    desp_tdfd_usuario char(8),
    desp_tdfd_fec_hora datetime year to minute,
    desp_tdfd_terminal char(5),
    desp_tdfd_accion char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tdfdes from "public";

{ TABLE aud_psan_boleta_restore row size = 488 number of columns = 35 index size = 0 }

create table aud_psan_boleta_restore 
  (
    bol_det_catalogo integer,
    bol_det_fecha date,
    bol_det_sancion smallint,
    bol_det_grado smallint,
    bol_dependencia smallint,
    bol_desc_empleo char(45),
    bol_jerarquia_sancionado char(100),
    bol_sancionador integer,
    bol_gra_sancionador smallint,
    bol_empleo_sancionador char(45),
    bol_justicia integer,
    bol_gra_justicia smallint,
    bol_comte integer,
    bol_gra_comte smallint,
    bol_fech_cumple datetime year to second,
    bol_det_status integer,
    desp_bol_det_catalogo integer,
    desp_bol_det_fecha date,
    desp_bol_det_sancion smallint,
    desp_bol_det_grado smallint,
    desp_bol_dependencia smallint,
    desp_bol_desc_empleo char(45),
    desp_bol_jerarquia_sancionado char(100),
    desp_bol_sancionador integer,
    desp_bol_gra_sancionador smallint,
    desp_bol_empleo_sancionador char(45),
    desp_bol_justicia integer,
    desp_bol_gra_justicia smallint,
    desp_bol_comte integer,
    desp_bol_gra_comte smallint,
    desp_bol_fech_cumple datetime year to second,
    desp_bol_det_status integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_psan_boleta_restore from "public";

{ TABLE aud_stxparmd row size = 870 number of columns = 43 index size = 0 }

create table aud_stxparmd 
  (
    language char(3),
    module char(8),
    user_id char(8),
    access_key char(30),
    line_no integer,
    userdef char(1),
    sbd_flag char(1),
    parm_desc char(30),
    is_rule char(1),
    is_fatal char(1),
    help_num smallint,
    val_table char(30),
    val_column char(60),
    val_filter char(60),
    val_join char(60),
    val_switchbox char(8),
    val_description char(18),
    zoom_filter char(60),
    zoom_switchbox char(8),
    parm_value char(32),
    desp_language char(3),
    desp_module char(8),
    desp_user_id char(8),
    desp_access_key char(30),
    desp_line_no integer,
    desp_userdef char(1),
    desp_sbd_flag char(1),
    desp_parm_desc char(30),
    desp_is_rule char(1),
    desp_is_fatal char(1),
    desp_help_num smallint,
    desp_val_table char(30),
    desp_val_column char(60),
    desp_val_filter char(60),
    desp_val_join char(60),
    desp_val_switchbox char(8),
    desp_val_description char(18),
    desp_zoom_filter char(60),
    desp_zoom_switchbox char(8),
    desp_parm_value char(32),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_stxparmd from "public";

{ TABLE aud_com_ent_sal2 row size = 766 number of columns = 35 index size = 0 }

create table aud_com_ent_sal2 
  (
    es_codigo integer,
    es_documento varchar(55,5),
    es_dep_llave_entrada smallint,
    es_dep_llave_salida smallint,
    es_forma smallint,
    es_fecha datetime year to second,
    es_galones integer,
    es_cargo integer,
    es_tipo integer,
    es_saldo decimal(18,2),
    es_precio decimal(18,2),
    es_lugar integer,
    es_situacion integer,
    es_catalogo integer,
    es_dependencia integer,
    es_obs varchar(250,4),
    desp_es_codigo integer,
    desp_es_documento varchar(55,5),
    desp_es_dep_llave_entrada smallint,
    desp_es_dep_llave_salida smallint,
    desp_es_forma smallint,
    desp_es_fecha datetime year to second,
    desp_es_galones integer,
    desp_es_cargo integer,
    desp_es_tipo integer,
    desp_es_saldo decimal(18,2),
    desp_es_precio decimal(18,2),
    desp_es_lugar integer,
    desp_es_situacion integer,
    desp_es_catalogo integer,
    desp_es_dependencia integer,
    desp_es_obs varchar(250,4),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_com_ent_sal2 from "public";

{ TABLE slc_matrimonio row size = 1828 number of columns = 26 index size = 9 }

create table slc_matrimonio 
  (
    mat_id integer not null ,
    mat_comando smallint not null ,
    mat_cat1 integer not null ,
    mat_gra1 smallint,
    mat_arm1 smallint,
    mat_emp1 varchar(250),
    mat_lugar_civil varchar(250),
    mat_lugar_fecha1 datetime year to second,
    mat_lugar_religioso varchar(125),
    mat_lugar_fecha2 datetime year to second,
    mat_cat2 integer not null ,
    mat_gra2 smallint,
    mat_arm2 smallint,
    mat_emp2 varchar(250),
    mat_cat3 integer not null ,
    mat_gra3 smallint,
    mat_arm3 smallint,
    mat_emp3 varchar(250),
    mat_con_prof varchar(125),
    mat_comando2 smallint,
    mat_con_civil varchar(250),
    mat_dias_fecha1 datetime year to second,
    mat_dias_fecha2 datetime year to second,
    mat_sit char(2),
    mat_obs varchar(250),
    mat_phone integer not null ,
    primary key (mat_id) 
  );

revoke all on slc_matrimonio from "public";

{ TABLE aud_slc_matrimonio row size = 3676 number of columns = 55 index size = 0 }

create table aud_slc_matrimonio 
  (
    mat_id integer,
    mat_comando smallint,
    mat_cat1 integer,
    mat_gra1 smallint,
    mat_arm1 smallint,
    mat_emp1 varchar(250),
    mat_lugar_civil varchar(250),
    mat_lugar_fecha1 datetime year to second,
    mat_lugar_religioso varchar(125),
    mat_lugar_fecha2 datetime year to second,
    mat_cat2 integer,
    mat_gra2 smallint,
    mat_arm2 smallint,
    mat_emp2 varchar(250),
    mat_cat3 integer,
    mat_gra3 smallint,
    mat_arm3 smallint,
    mat_emp3 varchar(250),
    mat_con_prof varchar(125),
    mat_comando2 smallint,
    mat_con_civil varchar(250),
    mat_dias_fecha1 datetime year to second,
    mat_dias_fecha2 datetime year to second,
    mat_sit char(2),
    mat_obs varchar(250),
    mat_phone integer,
    desp_mat_id integer,
    desp_mat_comando smallint,
    desp_mat_cat1 integer,
    desp_mat_gra1 smallint,
    desp_mat_arm1 smallint,
    desp_mat_emp1 varchar(250),
    desp_mat_lugar_civil varchar(250),
    desp_mat_lugar_fecha1 datetime year to second,
    desp_mat_lugar_religioso varchar(125),
    desp_mat_lugar_fecha2 datetime year to second,
    desp_mat_cat2 integer,
    desp_mat_gra2 smallint,
    desp_mat_arm2 smallint,
    desp_mat_emp2 varchar(250),
    desp_mat_cat3 integer,
    desp_mat_gra3 smallint,
    desp_mat_arm3 smallint,
    desp_mat_emp3 varchar(250),
    desp_mat_con_prof varchar(125),
    desp_mat_comando2 smallint,
    desp_mat_con_civil varchar(250),
    desp_mat_dias_fecha1 datetime year to second,
    desp_mat_dias_fecha2 datetime year to second,
    desp_mat_sit char(2),
    desp_mat_obs varchar(250),
    desp_mat_phone integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_slc_matrimonio from "public";

{ TABLE slc_mb row size = 779 number of columns = 11 index size = 9 }

create table slc_mb 
  (
    mb_id integer not null ,
    mb_per varchar(250),
    mb_cel integer not null ,
    mb_direc varchar(150),
    mb_fec datetime year to second,
    mb_ini varchar(50),
    mb_fin varchar(50),
    mb_just varchar(250),
    mb_tipo integer not null ,
    mb_cmv char(2),
    mb_sit char(2),
    primary key (mb_id) 
  );

revoke all on slc_mb from "public";

{ TABLE slc_cmv row size = 510 number of columns = 5 index size = 9 }

create table slc_cmv 
  (
    cmv_id integer,
    cmv_desc varchar(250),
    cmv_tip char(2),
    cmv_obs varchar(250),
    cmv_sit char(2),
    primary key (cmv_id) 
  );

revoke all on slc_cmv from "public";

{ TABLE aud_slc_cmv row size = 1040 number of columns = 13 index size = 0 }

create table aud_slc_cmv 
  (
    cmv_id integer,
    cmv_desc varchar(250),
    cmv_tip char(2),
    cmv_obs varchar(250),
    cmv_sit char(2),
    desp_cmv_id integer,
    desp_cmv_desc varchar(250),
    desp_cmv_tip char(2),
    desp_cmv_obs varchar(250),
    desp_cmv_sit char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_slc_cmv from "public";

{ TABLE slc_autorizado row size = 284 number of columns = 11 index size = 17 }

create table slc_autorizado 
  (
    aut_id integer not null ,
    aut_tipo integer not null ,
    aut_solicitud integer not null ,
    aut_comando smallint not null ,
    aut_cat1 integer not null ,
    aut_gra1 smallint not null ,
    aut_arm1 smallint not null ,
    aut_emp varchar(125),
    aut_fecha_hora datetime year to second,
    aut_sit smallint,
    aut_obs varchar(125),
    primary key (aut_id,aut_tipo,aut_solicitud) 
  );

revoke all on slc_autorizado from "public";

{ TABLE slc_licencia_temporal row size = 1237 number of columns = 20 index size = 9 }

create table slc_licencia_temporal 
  (
    lit_id integer not null ,
    lit_comando smallint,
    lit_cat1 integer not null ,
    lit_cat2 integer not null ,
    lit_gra1 smallint,
    lit_gra2 smallint,
    lit_arm1 smallint,
    lit_arm2 smallint,
    lit_emp varchar(125),
    lit_emp2 varchar(125),
    lit_mes_saldo integer,
    lit_mes_sinsaldo integer not null ,
    lit_fecha1 datetime year to second,
    lit_fecha2 datetime year to second,
    lit_legal smallint,
    lit_just lvarchar(800),
    lit_salir char(2),
    lit_sit char(2),
    lit_obs varchar(125),
    lit_phone integer not null ,
    primary key (lit_id) 
  );

revoke all on slc_licencia_temporal from "public";

{ TABLE aud_slc_licencia_temporal row size = 2494 number of columns = 43 index size = 0 }

create table aud_slc_licencia_temporal 
  (
    lit_id integer,
    lit_comando smallint,
    lit_cat1 integer,
    lit_cat2 integer,
    lit_gra1 smallint,
    lit_gra2 smallint,
    lit_arm1 smallint,
    lit_arm2 smallint,
    lit_emp varchar(125),
    lit_emp2 varchar(125),
    lit_mes_saldo integer,
    lit_mes_sinsaldo integer,
    lit_fecha1 datetime year to second,
    lit_fecha2 datetime year to second,
    lit_legal smallint,
    lit_just lvarchar(800),
    lit_salir char(2),
    lit_sit char(2),
    lit_obs varchar(125),
    lit_phone integer,
    desp_lit_id integer,
    desp_lit_comando smallint,
    desp_lit_cat1 integer,
    desp_lit_cat2 integer,
    desp_lit_gra1 smallint,
    desp_lit_gra2 smallint,
    desp_lit_arm1 smallint,
    desp_lit_arm2 smallint,
    desp_lit_emp varchar(125),
    desp_lit_emp2 varchar(125),
    desp_lit_mes_saldo integer,
    desp_lit_mes_sinsaldo integer,
    desp_lit_fecha1 datetime year to second,
    desp_lit_fecha2 datetime year to second,
    desp_lit_legal smallint,
    desp_lit_just lvarchar(800),
    desp_lit_salir char(2),
    desp_lit_sit char(2),
    desp_lit_obs varchar(125),
    desp_lit_phone integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_slc_licencia_temporal from "public";

{ TABLE slc_protocolo row size = 3704 number of columns = 20 index size = 9 }

create table slc_protocolo 
  (
    pco_id integer not null ,
    pco_comando smallint not null ,
    pco_cat1 integer not null ,
    pco_cat2 integer not null ,
    pco_gra1 smallint,
    pco_gra2 smallint not null ,
    pco_arm1 smallint,
    pco_arm2 smallint not null ,
    pco_emp1 varchar(250),
    pco_emp2 varchar(250),
    pco_cmbv integer not null ,
    pco_civil varchar(250),
    pco_hr1 varchar(250),
    pco_hr2 varchar(250),
    pco_fecha datetime year to second,
    pco_dir lvarchar(800),
    pco_just lvarchar(800),
    pco_sit char(2),
    pco_obs lvarchar(800),
    pco_phone integer not null ,
    primary key (pco_id) 
  );

revoke all on slc_protocolo from "public";

{ TABLE aud_slc_autorizado row size = 588 number of columns = 25 index size = 0 }

create table aud_slc_autorizado 
  (
    aut_id integer,
    aut_tipo integer,
    aut_solicitud integer,
    aut_comando smallint,
    aut_cat1 integer,
    aut_gra1 smallint,
    aut_arm1 smallint,
    aut_emp varchar(125),
    aut_fecha_hora datetime year to second,
    aut_sit smallint,
    aut_obs varchar(125),
    desp_aut_id integer,
    desp_aut_tipo integer,
    desp_aut_solicitud integer,
    desp_aut_comando smallint,
    desp_aut_cat1 integer,
    desp_aut_gra1 smallint,
    desp_aut_arm1 smallint,
    desp_aut_emp varchar(125),
    desp_aut_fecha_hora datetime year to second,
    desp_aut_sit smallint,
    desp_aut_obs varchar(125),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_slc_autorizado from "public";

{ TABLE aud_slc_protocolo row size = 7428 number of columns = 43 index size = 0 }

create table aud_slc_protocolo 
  (
    pco_id integer,
    pco_comando smallint,
    pco_cat1 integer,
    pco_cat2 integer,
    pco_gra1 smallint,
    pco_gra2 smallint,
    pco_arm1 smallint,
    pco_arm2 smallint,
    pco_emp1 varchar(250),
    pco_emp2 varchar(250),
    pco_cmbv integer,
    pco_civil varchar(250),
    pco_hr1 varchar(250),
    pco_hr2 varchar(250),
    pco_fecha datetime year to second,
    pco_dir lvarchar(800),
    pco_just lvarchar(800),
    pco_sit char(2),
    pco_obs lvarchar(800),
    pco_phone integer,
    desp_pco_id integer,
    desp_pco_comando smallint,
    desp_pco_cat1 integer,
    desp_pco_cat2 integer,
    desp_pco_gra1 smallint,
    desp_pco_gra2 smallint,
    desp_pco_arm1 smallint,
    desp_pco_arm2 smallint,
    desp_pco_emp1 varchar(250),
    desp_pco_emp2 varchar(250),
    desp_pco_cmbv integer,
    desp_pco_civil varchar(250),
    desp_pco_hr1 varchar(250),
    desp_pco_hr2 varchar(250),
    desp_pco_fecha datetime year to second,
    desp_pco_dir lvarchar(800),
    desp_pco_just lvarchar(800),
    desp_pco_sit char(2),
    desp_pco_obs lvarchar(800),
    desp_pco_phone integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_slc_protocolo from "public";

{ TABLE aud_slc_mb row size = 1578 number of columns = 25 index size = 0 }

create table aud_slc_mb 
  (
    mb_id integer,
    mb_per varchar(250),
    mb_cel integer,
    mb_direc varchar(150),
    mb_fec datetime year to second,
    mb_ini varchar(50),
    mb_fin varchar(50),
    mb_just varchar(250),
    mb_tipo integer,
    mb_cmv char(2),
    mb_sit char(2),
    desp_mb_id integer,
    desp_mb_per varchar(250),
    desp_mb_cel integer,
    desp_mb_direc varchar(150),
    desp_mb_fec datetime year to second,
    desp_mb_ini varchar(50),
    desp_mb_fin varchar(50),
    desp_mb_just varchar(250),
    desp_mb_tipo integer,
    desp_mb_cmv char(2),
    desp_mb_sit char(2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_slc_mb from "public";

{ TABLE aud_slc_dsal_fechas row size = 586 number of columns = 23 index size = 0 }

create table aud_slc_dsal_fechas 
  (
    dsal_id integer,
    dsal_tip_uso char(2),
    dsal_sol_cod integer,
    dsal_salida datetime year to second,
    dsal_ingreso datetime year to second,
    dsal_ciudad varchar(125,25),
    dsal_pais smallint,
    dsal_via char(2),
    dsal_obs varchar(125,25),
    dsal_sit char(1),
    desp_dsal_id integer,
    desp_dsal_tip_uso char(2),
    desp_dsal_sol_cod integer,
    desp_dsal_salida datetime year to second,
    desp_dsal_ingreso datetime year to second,
    desp_dsal_ciudad varchar(125,25),
    desp_dsal_pais smallint,
    desp_dsal_via char(2),
    desp_dsal_obs varchar(125,25),
    desp_dsal_sit char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_slc_dsal_fechas from "public";

{ TABLE slc_sal_pais row size = 1343 number of columns = 15 index size = 9 }

create table slc_sal_pais 
  (
    sal_id integer not null ,
    sal_comando smallint not null ,
    sal_cat1 integer not null ,
    sal_cat2 integer not null ,
    sal_gra1 smallint,
    sal_gra2 smallint,
    sal_arm1 smallint,
    sal_arm2 smallint,
    sal_emp varchar(250),
    sal_emp2 varchar(250),
    sal_sit char(2),
    sal_obs lvarchar(800),
    sal_phone integer not null ,
    sal_fecha_autorizado datetime year to second,
    sal_goce smallint,
    primary key (sal_id) 
  );

revoke all on slc_sal_pais from "public";

{ TABLE aud_slc_sal_pais row size = 2706 number of columns = 33 index size = 0 }

create table aud_slc_sal_pais 
  (
    sal_id integer,
    sal_comando smallint,
    sal_cat1 integer,
    sal_cat2 integer,
    sal_gra1 smallint,
    sal_gra2 smallint,
    sal_arm1 smallint,
    sal_arm2 smallint,
    sal_emp varchar(250),
    sal_emp2 varchar(250),
    sal_sit char(2),
    sal_obs lvarchar(800),
    sal_phone integer,
    sal_fecha_autorizado datetime year to second,
    sal_goce smallint,
    desp_sal_id integer,
    desp_sal_comando smallint,
    desp_sal_cat1 integer,
    desp_sal_cat2 integer,
    desp_sal_gra1 smallint,
    desp_sal_gra2 smallint,
    desp_sal_arm1 smallint,
    desp_sal_arm2 smallint,
    desp_sal_emp varchar(250),
    desp_sal_emp2 varchar(250),
    desp_sal_sit char(2),
    desp_sal_obs lvarchar(800),
    desp_sal_phone integer,
    desp_sal_fecha_autorizado datetime year to second,
    desp_sal_goce smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_slc_sal_pais from "public";

{ TABLE slc_dsal_fechas row size = 275 number of columns = 10 index size = 0 }

create table slc_dsal_fechas 
  (
    dsal_id serial not null ,
    dsal_tip_uso char(2) not null ,
    dsal_sol_cod integer not null ,
    dsal_salida date,
    dsal_ingreso date,
    dsal_ciudad varchar(125,25) not null ,
    dsal_pais smallint,
    dsal_via char(2) not null ,
    dsal_obs varchar(125,25) not null ,
    dsal_sit char(1) not null 
  );

revoke all on slc_dsal_fechas from "public";

{ TABLE seg_aspirantes row size = 1286 number of columns = 16 index size = 0 }

create table seg_aspirantes 
  (
    id integer not null ,
    nombres varchar(30) not null ,
    apellidos varchar(30) not null ,
    nacionalidad integer not null ,
    genero integer not null ,
    documento_id varchar(250) not null ,
    edad integer not null ,
    profesion varchar(30) not null ,
    entidad_laboral varchar(250) not null ,
    departamento_laboral varchar(250) not null ,
    fecha_registro date not null ,
    motivo varchar(250) not null ,
    imagen byte not null ,
    usuario varchar(30) not null ,
    password varchar(50) not null ,
    conpassword varchar(30) not null 
  );

revoke all on seg_aspirantes from "public";

{ TABLE seg_evaluacion row size = 32 number of columns = 8 index size = 0 }

create table seg_evaluacion 
  (
    id integer not null ,
    id_aspirante integer not null ,
    id_examen integer not null ,
    evaluacion integer not null ,
    total_preguntas integer not null ,
    positivas integer not null ,
    negativas integer not null ,
    fecha date not null 
  );

revoke all on seg_evaluacion from "public";

{ TABLE seg_examen row size = 75 number of columns = 7 index size = 0 }

create table seg_examen 
  (
    id_examen integer not null ,
    id_tema integer not null ,
    nombre varchar(50) not null ,
    int_p integer not null ,
    int_n integer not null ,
    total_preguntas integer not null ,
    duracion integer not null 
  );

revoke all on seg_examen from "public";

{ TABLE seg_genero row size = 155 number of columns = 2 index size = 0 }

create table seg_genero 
  (
    id integer not null ,
    genero varchar(150) not null 
  );

revoke all on seg_genero from "public";

{ TABLE seg_nacionalidad row size = 306 number of columns = 3 index size = 0 }

create table seg_nacionalidad 
  (
    id integer not null ,
    codigo varchar(150) not null ,
    pais varchar(150) not null 
  );

revoke all on seg_nacionalidad from "public";

{ TABLE seg_preguntas row size = 515 number of columns = 4 index size = 0 }

create table seg_preguntas 
  (
    id integer not null ,
    id_examen integer not null ,
    pregunta lvarchar(500),
    num_preg integer not null 
  );

revoke all on seg_preguntas from "public";

{ TABLE seg_respuestas row size = 511 number of columns = 3 index size = 0 }

create table seg_respuestas 
  (
    id integer not null ,
    pregunta integer not null ,
    respuesta lvarchar(500)
  );

revoke all on seg_respuestas from "public";

{ TABLE seg_respuesta_correcta row size = 8 number of columns = 2 index size = 0 }

create table seg_respuesta_correcta 
  (
    id_pregunta integer not null ,
    id_respuesta_correcta integer not null 
  );

revoke all on seg_respuesta_correcta from "public";

{ TABLE seg_subtemas row size = 259 number of columns = 3 index size = 0 }

create table seg_subtemas 
  (
    id integer not null ,
    tema integer not null ,
    subtema varchar(250) not null 
  );

revoke all on seg_subtemas from "public";

{ TABLE seg_temas row size = 255 number of columns = 2 index size = 0 }

create table seg_temas 
  (
    id integer not null ,
    titulo varchar(250) not null 
  );

revoke all on seg_temas from "public";

{ TABLE usuarios_prueba row size = 98 number of columns = 5 index size = 0 }

create table usuarios_prueba 
  (
    id integer not null ,
    usuario varchar(30) not null ,
    pass varchar(20) not null ,
    grado varchar(20) not null ,
    nombre varchar(20) not null 
  );

revoke all on usuarios_prueba from "public";

{ TABLE ciber_temas row size = 82 number of columns = 3 index size = 9 }

create table ciber_temas 
  (
    tema_id serial not null ,
    tema_nombre varchar(75),
    tema_situacion smallint 
        default 1,
    primary key (tema_id) 
  );

revoke all on ciber_temas from "public";

{ TABLE aud_ciber_temas row size = 184 number of columns = 9 index size = 0 }

create table aud_ciber_temas 
  (
    tema_id integer,
    tema_nombre varchar(75),
    tema_situacion smallint,
    desp_tema_id integer,
    desp_tema_nombre varchar(75),
    desp_tema_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ciber_temas from "public";

{ TABLE ciber_subtemas row size = 86 number of columns = 4 index size = 18 }

create table ciber_subtemas 
  (
    subtema_id serial not null ,
    subtema_tema integer,
    subtema_nombre varchar(75),
    subtema_situacion smallint 
        default 1,
    primary key (subtema_id) 
  );

revoke all on ciber_subtemas from "public";

{ TABLE aud_ciber_subtemas row size = 192 number of columns = 11 index size = 0 }

create table aud_ciber_subtemas 
  (
    subtema_id integer,
    subtema_tema integer,
    subtema_nombre varchar(75),
    subtema_situacion smallint,
    desp_subtema_id integer,
    desp_subtema_tema integer,
    desp_subtema_nombre varchar(75),
    desp_subtema_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ciber_subtemas from "public";

{ TABLE ciber_preguntas row size = 2061 number of columns = 4 index size = 18 }

create table ciber_preguntas 
  (
    pregunta_id serial not null ,
    pregunta_subtema integer,
    pregunta_descripcion lvarchar,
    pregunta_situacion smallint 
        default 1,
    primary key (pregunta_id) 
  );

revoke all on ciber_preguntas from "public";

{ TABLE aud_ciber_preguntas row size = 4142 number of columns = 11 index size = 0 }

create table aud_ciber_preguntas 
  (
    pregunta_id integer,
    pregunta_subtema integer,
    pregunta_descripcion lvarchar,
    pregunta_situacion smallint,
    desp_pregunta_id integer,
    desp_pregunta_subtema integer,
    desp_pregunta_descripcion lvarchar,
    desp_pregunta_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ciber_preguntas from "public";

{ TABLE ciber_respuestas row size = 2063 number of columns = 5 index size = 18 }

create table ciber_respuestas 
  (
    respuesta_id serial not null ,
    respuesta_pregunta integer,
    respuesta_descripcion lvarchar,
    respuesta_correcta smallint,
    respuesta_situacion smallint 
        default 1,
    primary key (respuesta_id) 
  );

revoke all on ciber_respuestas from "public";

{ TABLE aud_ciber_respuestas row size = 4146 number of columns = 13 index size = 0 }

create table aud_ciber_respuestas 
  (
    respuesta_id integer,
    respuesta_pregunta integer,
    respuesta_descripcion lvarchar,
    respuesta_correcta smallint,
    respuesta_situacion smallint,
    desp_respuesta_id integer,
    desp_respuesta_pregunta integer,
    desp_respuesta_descripcion lvarchar,
    desp_respuesta_correcta smallint,
    desp_respuesta_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ciber_respuestas from "public";

{ TABLE ciber_evaluaciones row size = 19 number of columns = 5 index size = 18 }

create table ciber_evaluaciones 
  (
    evaluacion_id serial not null ,
    evaluacion_usuario integer,
    evaluacion_fecha datetime year to minute 
        default current year to minute not null ,
    evaluacion_modulo smallint,
    evaluacion_situacion smallint 
        default 1,
    primary key (evaluacion_id) 
  );

revoke all on ciber_evaluaciones from "public";

{ TABLE aud_ciber_evaluaciones row size = 58 number of columns = 13 index size = 0 }

create table aud_ciber_evaluaciones 
  (
    evaluacion_id integer,
    evaluacion_usuario integer,
    evaluacion_fecha datetime year to minute,
    evaluacion_modulo smallint,
    evaluacion_situacion smallint,
    desp_evaluacion_id integer,
    desp_evaluacion_usuario integer,
    desp_evaluacion_fecha datetime year to minute,
    desp_evaluacion_modulo smallint,
    desp_evaluacion_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ciber_evaluaciones from "public";

{ TABLE ciber_detalle_evaluaciones row size = 14 number of columns = 4 index size = 27 }

create table ciber_detalle_evaluaciones 
  (
    detalle_id serial not null ,
    detalle_evaluacion integer,
    detalle_respuesta integer,
    detalle_situacion smallint 
        default 1,
    primary key (detalle_id) 
  );

revoke all on ciber_detalle_evaluaciones from "public";

{ TABLE aud_ciber_detalle_evaluaciones row size = 48 number of columns = 11 index size = 0 }

create table aud_ciber_detalle_evaluaciones 
  (
    detalle_id integer,
    detalle_evaluacion integer,
    detalle_respuesta integer,
    detalle_situacion smallint,
    desp_detalle_id integer,
    desp_detalle_evaluacion integer,
    desp_detalle_respuesta integer,
    desp_detalle_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ciber_detalle_evaluaciones from "public";

{ TABLE ciber_usuarios row size = 214 number of columns = 10 index size = 18 }

create table ciber_usuarios 
  (
    usu_id serial not null ,
    usu_correo varchar(100),
    usu_password varchar(60),
    usu_rol smallint 
        default 1,
    usu_catalogo integer,
    usu_registro datetime year to minute 
        default current year to minute not null ,
    usu_token char(13),
    usu_diploma char(13) 
        default null,
    usu_fecha_diploma datetime year to minute,
    usu_situacion smallint 
        default 1,
    primary key (usu_id) 
  );

revoke all on ciber_usuarios from "public";

{ TABLE aud_ciber_usuarios row size = 448 number of columns = 23 index size = 0 }

create table aud_ciber_usuarios 
  (
    usu_id integer,
    usu_correo varchar(100),
    usu_password varchar(60),
    usu_rol smallint,
    usu_catalogo integer,
    usu_registro datetime year to minute,
    usu_token char(13),
    usu_diploma char(13),
    usu_fecha_diploma datetime year to minute,
    usu_situacion smallint,
    desp_usu_id integer,
    desp_usu_correo varchar(100),
    desp_usu_password varchar(60),
    desp_usu_rol smallint,
    desp_usu_catalogo integer,
    desp_usu_registro datetime year to minute,
    desp_usu_token char(13),
    desp_usu_diploma char(13),
    desp_usu_fecha_diploma datetime year to minute,
    desp_usu_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ciber_usuarios from "public";

{ TABLE pruebas_tiempo row size = 37 number of columns = 7 index size = 0 }

create table pruebas_tiempo 
  (
    pru_id serial not null ,
    pru_d_yearminute datetime year to minute,
    pru_d_yearfraction datetime year to fraction(3),
    pru_d_hoursecond datetime hour to second,
    pru_d_hourminute datetime hour to minute,
    pru_d_hourfraction datetime hour to fraction(3),
    pru_d_minutesecond datetime minute to second
  );

revoke all on pruebas_tiempo from "public";

{ TABLE smm_banda row size = 158 number of columns = 3 index size = 9 }

create table smm_banda 
  (
    smm_banda_id serial not null ,
    smm_banda_banda char(150),
    smm_banda_situacion integer,
    primary key (smm_banda_id) 
  );

revoke all on smm_banda from "public";

{ TABLE aud_smm_banda row size = 336 number of columns = 9 index size = 0 }

create table aud_smm_banda 
  (
    smm_banda_id integer,
    smm_banda_banda char(150),
    smm_banda_situacion integer,
    desp_smm_banda_id integer,
    desp_smm_banda_banda char(150),
    desp_smm_banda_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_smm_banda from "public";

{ TABLE smm_actividad row size = 158 number of columns = 3 index size = 9 }

create table smm_actividad 
  (
    smm_actividad_id serial not null ,
    smm_actividad_actividad char(150),
    smm_actividad_situacion integer,
    primary key (smm_actividad_id) 
  );

revoke all on smm_actividad from "public";

{ TABLE aud_smm_actividad row size = 336 number of columns = 9 index size = 0 }

create table aud_smm_actividad 
  (
    smm_actividad_id integer,
    smm_actividad_actividad char(150),
    smm_actividad_situacion integer,
    desp_smm_actividad_id integer,
    desp_smm_actividad_actividad char(150),
    desp_smm_actividad_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_smm_actividad from "public";

{ TABLE opaf_carrera1 row size = 12 number of columns = 4 index size = 0 }

create table opaf_carrera1 
  (
    car_edad integer,
    car_sexo char(1),
    car_tiempo datetime minute to second,
    car_punteo integer
  );

revoke all on opaf_carrera1 from "public";

{ TABLE aud_opaf_carrera1 row size = 44 number of columns = 11 index size = 0 }

create table aud_opaf_carrera1 
  (
    car_edad integer,
    car_sexo char(1),
    car_tiempo datetime minute to second,
    car_punteo integer,
    desp_car_edad integer,
    desp_car_sexo char(1),
    desp_car_tiempo datetime minute to second,
    desp_car_punteo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_opaf_carrera1 from "public";

{ TABLE smm_reporte row size = 182 number of columns = 10 index size = 0 }

create table smm_reporte 
  (
    smm_reporte_id serial not null ,
    smm_reporte_nombre integer,
    smm_reporte_comision smallint,
    smm_reporte_civil char(150),
    smm_reporte_motivo integer,
    smm_reporte_cantidad integer,
    smm_reporte_fecha date,
    smm_reporte_horain datetime hour to minute,
    smm_reporte_horafin datetime hour to minute,
    smm_reporte_situacion integer
  );

revoke all on smm_reporte from "public";

{ TABLE aud_smm_reporte row size = 384 number of columns = 23 index size = 0 }

create table aud_smm_reporte 
  (
    smm_reporte_id integer,
    smm_reporte_nombre integer,
    smm_reporte_comision smallint,
    smm_reporte_civil char(150),
    smm_reporte_motivo integer,
    smm_reporte_cantidad integer,
    smm_reporte_fecha date,
    smm_reporte_horain datetime hour to minute,
    smm_reporte_horafin datetime hour to minute,
    smm_reporte_situacion integer,
    desp_smm_reporte_id integer,
    desp_smm_reporte_nombre integer,
    desp_smm_reporte_comision smallint,
    desp_smm_reporte_civil char(150),
    desp_smm_reporte_motivo integer,
    desp_smm_reporte_cantidad integer,
    desp_smm_reporte_fecha date,
    desp_smm_reporte_horain datetime hour to minute,
    desp_smm_reporte_horafin datetime hour to minute,
    desp_smm_reporte_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_smm_reporte from "public";

{ TABLE esip_fuente_financiamiento row size = 518 number of columns = 4 index size = 9 }

create table esip_fuente_financiamiento 
  (
    fuentefi_fuente integer,
    fuentefi_descripcion varchar(254),
    fuentefi_observaciones varchar(254),
    fuentefi_situacion integer,
    primary key (fuentefi_fuente) 
  );

revoke all on esip_fuente_financiamiento from "public";

{ TABLE aud_esip_fuente_financiamiento row size = 1056 number of columns = 11 index size = 0 }

create table aud_esip_fuente_financiamiento 
  (
    fuentefi_fuente integer,
    fuentefi_descripcion varchar(254),
    fuentefi_observaciones varchar(254),
    fuentefi_situacion integer,
    desp_fuentefi_fuente integer,
    desp_fuentefi_descripcion varchar(254),
    desp_fuentefi_observaciones varchar(254),
    desp_fuentefi_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esip_fuente_financiamiento from "public";

{ TABLE esip_grupo_gasto row size = 518 number of columns = 4 index size = 9 }

create table esip_grupo_gasto 
  (
    grupoga_grupo integer,
    grupoga_descripcion varchar(254),
    grupoga_observaciones varchar(254),
    grupoga_situacion integer,
    primary key (grupoga_grupo) 
  );

revoke all on esip_grupo_gasto from "public";

{ TABLE aud_esip_grupo_gasto row size = 1056 number of columns = 11 index size = 0 }

create table aud_esip_grupo_gasto 
  (
    grupoga_grupo integer,
    grupoga_descripcion varchar(254),
    grupoga_observaciones varchar(254),
    grupoga_situacion integer,
    desp_grupoga_grupo integer,
    desp_grupoga_descripcion varchar(254),
    desp_grupoga_observaciones varchar(254),
    desp_grupoga_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esip_grupo_gasto from "public";

{ TABLE esip_planes_basicos row size = 788 number of columns = 11 index size = 16 }

create table esip_planes_basicos 
  (
    planb_id integer,
    planb_nombre_proyecto varchar(250),
    planb_fecha date,
    planb_periodo integer,
    planb_dep smallint,
    planb_costo money(16,2),
    planb_prioridad integer,
    planb_justificacion varchar(250),
    planb_observaciones varchar(250),
    planb_plan_basico integer,
    planb_situacion integer,
    primary key (planb_id) 
  );

revoke all on esip_planes_basicos from "public";

{ TABLE aud_esip_planes_basicos row size = 1596 number of columns = 25 index size = 0 }

create table aud_esip_planes_basicos 
  (
    planb_id integer,
    planb_nombre_proyecto varchar(250),
    planb_fecha date,
    planb_periodo integer,
    planb_dep smallint,
    planb_costo money(16,2),
    planb_prioridad integer,
    planb_justificacion varchar(250),
    planb_observaciones varchar(250),
    planb_plan_basico integer,
    planb_situacion integer,
    desp_planb_id integer,
    desp_planb_nombre_proyecto varchar(250),
    desp_planb_fecha date,
    desp_planb_periodo integer,
    desp_planb_dep smallint,
    desp_planb_costo money(16,2),
    desp_planb_prioridad integer,
    desp_planb_justificacion varchar(250),
    desp_planb_observaciones varchar(250),
    desp_planb_plan_basico integer,
    desp_planb_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esip_planes_basicos from "public";

{ TABLE esip_paquetes_logisticos row size = 520 number of columns = 5 index size = 16 }

create table esip_paquetes_logisticos 
  (
    paquetes_id integer,
    paquetes_plan_basico varchar(254),
    paquetes_unidad_tecnica smallint,
    paquetes_observaciones varchar(254),
    paquetes_situacion integer,
    primary key (paquetes_id) 
  );

revoke all on esip_paquetes_logisticos from "public";

{ TABLE aud_esip_paquetes_logisticos row size = 1060 number of columns = 13 index size = 0 }

create table aud_esip_paquetes_logisticos 
  (
    paquetes_id integer,
    paquetes_plan_basico varchar(254),
    paquetes_unidad_tecnica smallint,
    paquetes_observaciones varchar(254),
    paquetes_situacion integer,
    desp_paquetes_id integer,
    desp_paquetes_plan_basico varchar(254),
    desp_paquetes_unidad_tecnica smallint,
    desp_paquetes_observaciones varchar(254),
    desp_paquetes_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esip_paquetes_logisticos from "public";

{ TABLE esip_unidad_medida row size = 375 number of columns = 5 index size = 9 }

create table esip_unidad_medida 
  (
    unidad_id integer,
    unidad_descripcion_larga varchar(90),
    unidad_descripcion_corta varchar(20),
    unidad_observacion varchar(254),
    unidad_situacion integer,
    primary key (unidad_id) 
  );

revoke all on esip_unidad_medida from "public";

{ TABLE aud_esip_unidad_medida row size = 770 number of columns = 13 index size = 0 }

create table aud_esip_unidad_medida 
  (
    unidad_id integer,
    unidad_descripcion_larga varchar(90),
    unidad_descripcion_corta varchar(20),
    unidad_observacion varchar(254),
    unidad_situacion integer,
    desp_unidad_id integer,
    desp_unidad_descripcion_larga varchar(90),
    desp_unidad_descripcion_corta varchar(20),
    desp_unidad_observacion varchar(254),
    desp_unidad_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esip_unidad_medida from "public";

{ TABLE esip_renglon_presupuestario row size = 518 number of columns = 4 index size = 9 }

create table esip_renglon_presupuestario 
  (
    renglonpre_renglon integer,
    renglonpre_descripcion varchar(254),
    renglonpre_observaciones varchar(254),
    renglonpre_situacion integer,
    primary key (renglonpre_renglon) 
  );

revoke all on esip_renglon_presupuestario from "public";

{ TABLE aud_esip_renglon_presupuestario row size = 1056 number of columns = 11 index size = 0 }

create table aud_esip_renglon_presupuestario 
  (
    renglonpre_renglon integer,
    renglonpre_descripcion varchar(254),
    renglonpre_observaciones varchar(254),
    renglonpre_situacion integer,
    desp_renglonpre_renglon integer,
    desp_renglonpre_descripcion varchar(254),
    desp_renglonpre_observaciones varchar(254),
    desp_renglonpre_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esip_renglon_presupuestario from "public";

{ TABLE esip_matriz_presupuestaria row size = 841 number of columns = 17 index size = 45 }

create table esip_matriz_presupuestaria 
  (
    matriz_id integer,
    matriz_plan_basico integer,
    matriz_fuente integer,
    matriz_grupo integer,
    matriz_renglon integer,
    matriz_descripcion varchar(254),
    matriz_justificacion varchar(254),
    matriz_cantidad integer,
    matriz_unidad_medida integer,
    matriz_costo money(16,2),
    matriz_subtotal money(16,2),
    matriz_suma_grupo money(16,2),
    matriz_total_fuente money(16,2),
    matriz_observaciones varchar(254),
    matriz_situacion integer,
    matriz_fecha_envio date,
    matriz_fecha_regreso date,
    primary key (matriz_id) 
  );

revoke all on esip_matriz_presupuestaria from "public";

{ TABLE aud_esip_matriz_presupuestaria row size = 1702 number of columns = 37 index size = 0 }

create table aud_esip_matriz_presupuestaria 
  (
    matriz_id integer,
    matriz_plan_basico integer,
    matriz_fuente integer,
    matriz_grupo integer,
    matriz_renglon integer,
    matriz_descripcion varchar(254),
    matriz_justificacion varchar(254),
    matriz_cantidad integer,
    matriz_unidad_medida integer,
    matriz_costo money(16,2),
    matriz_subtotal money(16,2),
    matriz_suma_grupo money(16,2),
    matriz_total_fuente money(16,2),
    matriz_observaciones varchar(254),
    matriz_situacion integer,
    matriz_fecha_envio date,
    matriz_fecha_regreso date,
    desp_matriz_id integer,
    desp_matriz_plan_basico integer,
    desp_matriz_fuente integer,
    desp_matriz_grupo integer,
    desp_matriz_renglon integer,
    desp_matriz_descripcion varchar(254),
    desp_matriz_justificacion varchar(254),
    desp_matriz_cantidad integer,
    desp_matriz_unidad_medida integer,
    desp_matriz_costo money(16,2),
    desp_matriz_subtotal money(16,2),
    desp_matriz_suma_grupo money(16,2),
    desp_matriz_total_fuente money(16,2),
    desp_matriz_observaciones varchar(254),
    desp_matriz_situacion integer,
    desp_matriz_fecha_envio date,
    desp_matriz_fecha_regreso date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_esip_matriz_presupuestaria from "public";

{ TABLE aud_capta_documentos row size = 48 number of columns = 11 index size = 0 }

create table aud_capta_documentos 
  (
    capta_id integer,
    capta_ingreso integer,
    capta_documento integer,
    capta_situacion smallint,
    desp_capta_id integer,
    desp_capta_ingreso integer,
    desp_capta_documento integer,
    desp_capta_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_capta_documentos from "public";

{ TABLE aud_capta_evaluaciones row size = 64 number of columns = 17 index size = 0 }

create table aud_capta_evaluaciones 
  (
    eva_id integer,
    eva_ingreso integer,
    eva_tipo integer,
    eva_lugar smallint,
    eva_fecha date,
    eva_nota smallint,
    eva_situacion smallint,
    desp_eva_id integer,
    desp_eva_ingreso integer,
    desp_eva_tipo integer,
    desp_eva_lugar smallint,
    desp_eva_fecha date,
    desp_eva_nota smallint,
    desp_eva_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_capta_evaluaciones from "public";

{ TABLE capta_evaluados row size = 152 number of columns = 7 index size = 18 }

create table capta_evaluados 
  (
    captae_id char(13),
    captae_nombre1 varchar(30),
    captae_nombre2 varchar(30),
    captae_apellido1 varchar(30),
    captae_apellido2 varchar(30),
    captae_catalogo char(13),
    captae_situacion smallint,
    primary key (captae_id) 
  );

revoke all on capta_evaluados from "public";

{ TABLE aud_capta_evaluados row size = 324 number of columns = 17 index size = 0 }

create table aud_capta_evaluados 
  (
    captae_id char(13),
    captae_nombre1 varchar(30),
    captae_nombre2 varchar(30),
    captae_apellido1 varchar(30),
    captae_apellido2 varchar(30),
    captae_catalogo char(13),
    captae_situacion smallint,
    desp_captae_id char(13),
    desp_captae_nombre1 varchar(30),
    desp_captae_nombre2 varchar(30),
    desp_captae_apellido1 varchar(30),
    desp_captae_apellido2 varchar(30),
    desp_captae_catalogo char(13),
    desp_captae_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_capta_evaluados from "public";

{ TABLE aud_capta_tipoeva row size = 94 number of columns = 9 index size = 0 }

create table aud_capta_tipoeva 
  (
    tipo_id integer,
    tipo_descripcion varchar(30),
    tipo_situacion smallint,
    desp_tipo_id integer,
    desp_tipo_descripcion varchar(30),
    desp_tipo_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_capta_tipoeva from "public";

{ TABLE aud_capta_feriados row size = 102 number of columns = 11 index size = 0 }

create table aud_capta_feriados 
  (
    feriado_id integer,
    feriado_fecha date,
    feriado_descripcion varchar(30),
    feriado_situacion smallint,
    antes_feriado_id integer,
    antes_feriado_fecha date,
    antes_feriado_descripcion varchar(30),
    antes_feriado_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_capta_feriados from "public";

{ TABLE capta_documentos row size = 14 number of columns = 4 index size = 0 }

create table capta_documentos 
  (
    capta_id serial not null ,
    capta_ingreso integer,
    capta_documento integer,
    capta_situacion smallint
  );

revoke all on capta_documentos from "public";

{ TABLE capta_evaluaciones row size = 22 number of columns = 7 index size = 7 }

create table capta_evaluaciones 
  (
    eva_id serial not null ,
    eva_ingreso integer,
    eva_tipo integer,
    eva_lugar smallint,
    eva_fecha date,
    eva_nota smallint,
    eva_situacion smallint
  );

revoke all on capta_evaluaciones from "public";

{ TABLE capta_tipoeva row size = 37 number of columns = 3 index size = 0 }

create table capta_tipoeva 
  (
    tipo_id serial not null ,
    tipo_descripcion varchar(30),
    tipo_situacion smallint
  );

revoke all on capta_tipoeva from "public";

{ TABLE capta_feriados row size = 41 number of columns = 4 index size = 0 }

create table capta_feriados 
  (
    feriado_id serial not null ,
    feriado_fecha date,
    feriado_descripcion varchar(30),
    feriado_situacion smallint
  );

revoke all on capta_feriados from "public";

{ TABLE aud_asig_requisitos row size = 546 number of columns = 11 index size = 0 }

create table aud_asig_requisitos 
  (
    asig_id integer,
    asig_plaza varchar(250),
    asig_requisito integer,
    asig_situacion integer,
    desp_asig_id integer,
    desp_asig_plaza varchar(250),
    desp_asig_requisito integer,
    desp_asig_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_asig_requisitos from "public";

{ TABLE asig_requisitos row size = 263 number of columns = 4 index size = 0 }

create table asig_requisitos 
  (
    asig_id serial not null ,
    asig_plaza varchar(250),
    asig_requisito integer,
    asig_situacion integer
  );

revoke all on asig_requisitos from "public";

{ TABLE capta_ingresos row size = 61 number of columns = 6 index size = 9 }

create table capta_ingresos 
  (
    ingre_id serial not null ,
    ingre_plaza integer,
    ingre_dpi char(13),
    ingre_situacion smallint,
    ingre_fecha datetime year to minute,
    ingre_ceom varchar(30),
    primary key (ingre_id) 
  );

revoke all on capta_ingresos from "public";

{ TABLE aud_capta_ingresos row size = 142 number of columns = 15 index size = 0 }

create table aud_capta_ingresos 
  (
    ingre_id integer,
    ingre_plaza integer,
    ingre_dpi char(13),
    ingre_situacion smallint,
    ingre_fecha datetime year to minute,
    ingre_ceom varchar(30),
    desp_ingre_id integer,
    desp_ingre_plaza integer,
    desp_ingre_dpi char(13),
    desp_ingre_situacion smallint,
    desp_ingre_fecha datetime year to minute,
    desp_ingre_ceom varchar(30),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_capta_ingresos from "public";

{ TABLE tri_eventos row size = 107 number of columns = 3 index size = 9 }

create table tri_eventos 
  (
    id serial not null ,
    nombre varchar(100),
    situacion smallint,
    primary key (id) 
  );

revoke all on tri_eventos from "public";

{ TABLE aud_tri_eventos row size = 234 number of columns = 9 index size = 0 }

create table aud_tri_eventos 
  (
    id integer,
    nombre varchar(100),
    situacion smallint,
    desp_id integer,
    desp_nombre varchar(100),
    desp_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tri_eventos from "public";

{ TABLE tri_etapas row size = 109 number of columns = 4 index size = 9 }

create table tri_etapas 
  (
    id serial not null ,
    nombre varchar(100),
    situacion smallint,
    ponderacion smallint,
    primary key (id) 
  );

revoke all on tri_etapas from "public";

{ TABLE aud_tri_etapas row size = 238 number of columns = 11 index size = 0 }

create table aud_tri_etapas 
  (
    id integer,
    nombre varchar(100),
    situacion smallint,
    ponderacion smallint,
    desp_id integer,
    desp_nombre varchar(100),
    desp_situacion smallint,
    desp_ponderacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tri_etapas from "public";

{ TABLE tri_detalle row size = 14 number of columns = 4 index size = 27 }

create table tri_detalle 
  (
    id serial not null ,
    evento integer,
    etapa integer,
    situacion smallint,
    primary key (id) 
  );

revoke all on tri_detalle from "public";

{ TABLE aud_tri_detalle row size = 48 number of columns = 11 index size = 0 }

create table aud_tri_detalle 
  (
    id integer,
    evento integer,
    etapa integer,
    situacion smallint,
    desp_id integer,
    desp_evento integer,
    desp_etapa integer,
    desp_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tri_detalle from "public";

{ TABLE tri_participantes row size = 14 number of columns = 4 index size = 27 }

create table tri_participantes 
  (
    id serial not null ,
    evento integer,
    catalogo integer,
    situacion smallint,
    primary key (id) 
  );

revoke all on tri_participantes from "public";

{ TABLE aud_tri_participantes row size = 48 number of columns = 11 index size = 0 }

create table aud_tri_participantes 
  (
    id integer,
    evento integer,
    catalogo integer,
    situacion smallint,
    desp_id integer,
    desp_evento integer,
    desp_catalogo integer,
    desp_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tri_participantes from "public";

{ TABLE tri_puntaje row size = 25 number of columns = 6 index size = 18 }

create table tri_puntaje 
  (
    id serial not null ,
    participante integer,
    etapa integer,
    punteo decimal(10,3),
    tiempo interval hour to second,
    situacion smallint
  );

revoke all on tri_puntaje from "public";

{ TABLE aud_tri_puntaje row size = 70 number of columns = 15 index size = 0 }

create table aud_tri_puntaje 
  (
    id integer,
    participante integer,
    etapa integer,
    punteo decimal(10,3),
    tiempo interval hour to second,
    situacion smallint,
    desp_id integer,
    desp_participante integer,
    desp_etapa integer,
    desp_punteo decimal(10,3),
    desp_tiempo interval hour to second,
    desp_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tri_puntaje from "public";

{ TABLE resp_perm_220323 row size = 77 number of columns = 4 index size = 0 }

create table resp_perm_220323 
  (
    grantor char(32),
    grantee char(32),
    tabid integer,
    tabauth char(9)
  );

revoke all on resp_perm_220323 from "public";

{ TABLE coc_instituciones row size = 306 number of columns = 4 index size = 7 }

create table coc_instituciones 
  (
    inst_codigo smallint,
    inst_descripcion varchar(150),
    inst_observacion varchar(150),
    ins_situacion smallint,
    primary key (inst_codigo) 
  );

revoke all on coc_instituciones from "public";

{ TABLE aud_coc_instituciones row size = 632 number of columns = 11 index size = 0 }

create table aud_coc_instituciones 
  (
    inst_codigo smallint,
    inst_descripcion varchar(150),
    inst_observacion varchar(150),
    ins_situacion smallint,
    desp_inst_codigo smallint,
    desp_inst_descripcion varchar(150),
    desp_inst_observacion varchar(150),
    desp_ins_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_instituciones from "public";

{ TABLE aud_coc_detalle_instituciones row size = 346 number of columns = 13 index size = 0 }

create table aud_coc_detalle_instituciones 
  (
    det_ins_codigo integer,
    det_ins_reporte integer,
    det_ins_cod_institucion smallint,
    det_ins_observacion varchar(150),
    det_ins_situacion smallint,
    desp_det_ins_codigo integer,
    desp_det_ins_reporte integer,
    desp_det_ins_cod_institucion smallint,
    desp_det_ins_observacion varchar(150),
    desp_det_ins_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_detalle_instituciones from "public";

{ TABLE amc_desastre_natural row size = 60 number of columns = 15 index size = 36 }

create table amc_desastre_natural 
  (
    id serial not null ,
    topico integer,
    tipo integer,
    nombre_desastre integer,
    per_fallecida integer,
    per_evacuada integer,
    per_afectada integer,
    albergues integer,
    est_colapsadas integer,
    inundaciones integer,
    derrumbes integer,
    carre_colap integer,
    hectareas_quemadas integer,
    rios integer,
    situacion integer,
    primary key (id) 
  );

revoke all on amc_desastre_natural from "public";

{ TABLE aud_amc_desastre_natural row size = 140 number of columns = 33 index size = 0 }

create table aud_amc_desastre_natural 
  (
    id integer,
    topico integer,
    tipo integer,
    nombre_desastre integer,
    per_fallecida integer,
    per_evacuada integer,
    per_afectada integer,
    albergues integer,
    est_colapsadas integer,
    inundaciones integer,
    derrumbes integer,
    carre_colap integer,
    hectareas_quemadas integer,
    rios integer,
    situacion integer,
    desp_id integer,
    desp_topico integer,
    desp_tipo integer,
    desp_nombre_desastre integer,
    desp_per_fallecida integer,
    desp_per_evacuada integer,
    desp_per_afectada integer,
    desp_albergues integer,
    desp_est_colapsadas integer,
    desp_inundaciones integer,
    desp_derrumbes integer,
    desp_carre_colap integer,
    desp_hectareas_quemadas integer,
    desp_rios integer,
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_desastre_natural from "public";

{ TABLE amc_topico row size = 4206 number of columns = 15 index size = 52 }

create table amc_topico 
  (
    id serial not null ,
    fecha datetime year to minute,
    lugar varchar(30),
    departamento integer,
    municipio integer,
    tipo integer,
    latitud varchar(15),
    longitud varchar(15),
    actividad integer,
    situacion integer,
    info lvarchar,
    dependencia smallint,
    fuente integer,
    link lvarchar,
    usuario integer,
    primary key (id) 
  );

revoke all on amc_topico from "public";

{ TABLE aud_amc_topico row size = 8432 number of columns = 33 index size = 0 }

create table aud_amc_topico 
  (
    id integer,
    fecha datetime year to minute,
    lugar varchar(30),
    departamento integer,
    municipio integer,
    tipo integer,
    latitud varchar(15),
    longitud varchar(15),
    actividad integer,
    situacion integer,
    info lvarchar,
    dependencia smallint,
    fuente integer,
    link lvarchar,
    usuario integer,
    desp_id integer,
    desp_fecha datetime year to minute,
    desp_lugar varchar(30),
    desp_departamento integer,
    desp_municipio integer,
    desp_tipo integer,
    desp_latitud varchar(15),
    desp_longitud varchar(15),
    desp_actividad integer,
    desp_situacion integer,
    desp_info lvarchar,
    desp_dependencia smallint,
    desp_fuente integer,
    desp_link lvarchar,
    desp_usuario integer,
    accion char(1) not null ,
    usuario1 char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_topico from "public";

{ TABLE amc_incautacion_droga row size = 74 number of columns = 10 index size = 36 }

create table amc_incautacion_droga 
  (
    id serial not null ,
    topico integer,
    tipo_droga integer,
    transporte integer,
    matricula varchar(20),
    tipo_transporte varchar(20),
    cantidad integer,
    tip_droga_plantacion integer,
    cantidad_plantacion integer,
    situacion integer,
    primary key (id) 
  );

revoke all on amc_incautacion_droga from "public";

{ TABLE aud_amc_incautacion_droga row size = 168 number of columns = 23 index size = 0 }

create table aud_amc_incautacion_droga 
  (
    id integer,
    topico integer,
    tipo_droga integer,
    transporte integer,
    matricula varchar(20),
    tipo_transporte varchar(20),
    cantidad integer,
    tip_droga_plantacion integer,
    cantidad_plantacion integer,
    situacion integer,
    desp_id integer,
    desp_topico integer,
    desp_tipo_droga integer,
    desp_transporte integer,
    desp_matricula varchar(20),
    desp_tipo_transporte varchar(20),
    desp_cantidad integer,
    desp_tip_droga_plantacion integer,
    desp_cantidad_plantacion integer,
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_incautacion_droga from "public";

{ TABLE amc_per_capturadas row size = 73 number of columns = 9 index size = 36 }

create table amc_per_capturadas 
  (
    id serial not null ,
    topico integer,
    nacionalidad integer,
    sexo integer,
    nombre varchar(40),
    edad integer,
    delito integer,
    vinculo integer,
    situacion integer,
    primary key (id) 
  );

revoke all on amc_per_capturadas from "public";

{ TABLE aud_amc_per_capturadas row size = 166 number of columns = 21 index size = 0 }

create table aud_amc_per_capturadas 
  (
    id integer,
    topico integer,
    nacionalidad integer,
    sexo integer,
    nombre varchar(40),
    edad integer,
    delito integer,
    vinculo integer,
    situacion integer,
    desp_id integer,
    desp_topico integer,
    desp_nacionalidad integer,
    desp_sexo integer,
    desp_nombre varchar(40),
    desp_edad integer,
    desp_delito integer,
    desp_vinculo integer,
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_per_capturadas from "public";

{ TABLE amc_migrantes row size = 66 number of columns = 9 index size = 52 }

create table amc_migrantes 
  (
    id serial not null ,
    topic integer,
    pais_migrante integer,
    edad integer,
    cantidad integer,
    sexo integer,
    lugar_ingreso varchar(35),
    destino smallint,
    situacion integer,
    primary key (id) 
  );

revoke all on amc_migrantes from "public";

{ TABLE aud_amc_migrantes row size = 152 number of columns = 21 index size = 0 }

create table aud_amc_migrantes 
  (
    id integer,
    topic integer,
    pais_migrante integer,
    edad integer,
    cantidad integer,
    sexo integer,
    lugar_ingreso varchar(35),
    destino smallint,
    situacion integer,
    desp_id integer,
    desp_topic integer,
    desp_pais_migrante integer,
    desp_edad integer,
    desp_cantidad integer,
    desp_sexo integer,
    desp_lugar_ingreso varchar(35),
    desp_destino smallint,
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_migrantes from "public";

{ TABLE amc_movimiento_social row size = 24 number of columns = 6 index size = 36 }

create table amc_movimiento_social 
  (
    id serial not null ,
    topico integer,
    tipo_movimiento integer,
    organizacion integer,
    cantidad integer,
    situacion integer,
    primary key (id) 
  );

revoke all on amc_movimiento_social from "public";

{ TABLE aud_amc_movimiento_social row size = 68 number of columns = 15 index size = 0 }

create table aud_amc_movimiento_social 
  (
    id integer,
    topico integer,
    tipo_movimiento integer,
    organizacion integer,
    cantidad integer,
    situacion integer,
    desp_id integer,
    desp_topico integer,
    desp_tipo_movimiento integer,
    desp_organizacion integer,
    desp_cantidad integer,
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_movimiento_social from "public";

{ TABLE amc_colores row size = 530 number of columns = 7 index size = 18 }

create table amc_colores 
  (
    id serial not null ,
    descripcion varchar(254),
    cantidad bigint,
    color varchar(254),
    nivel smallint,
    topico integer,
    situacion smallint,
    primary key (id) 
  );

revoke all on amc_colores from "public";

{ TABLE aud_amc_colores row size = 1080 number of columns = 17 index size = 0 }

create table aud_amc_colores 
  (
    id integer,
    descripcion varchar(254),
    cantidad bigint,
    color varchar(254),
    nivel smallint,
    topico integer,
    situacion smallint,
    desp_id integer,
    desp_descripcion varchar(254),
    desp_cantidad bigint,
    desp_color varchar(254),
    desp_nivel smallint,
    desp_topico integer,
    desp_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_colores from "public";

{ TABLE amc_incautacion_dinero row size = 31 number of columns = 6 index size = 27 }

create table amc_incautacion_dinero 
  (
    id serial not null ,
    topico integer,
    cantidad decimal(12,2),
    moneda integer,
    conversion float,
    situacion integer,
    primary key (id) 
  );

revoke all on amc_incautacion_dinero from "public";

{ TABLE aud_amc_incautacion_dinero row size = 82 number of columns = 15 index size = 0 }

create table aud_amc_incautacion_dinero 
  (
    id integer,
    topico integer,
    cantidad decimal(12,2),
    moneda integer,
    conversion float,
    situacion integer,
    desp_id integer,
    desp_topico integer,
    desp_cantidad decimal(12,2),
    desp_moneda integer,
    desp_conversion float,
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_incautacion_dinero from "public";

{ TABLE amc_detalle_arma row size = 24 number of columns = 6 index size = 36 }

create table amc_detalle_arma 
  (
    id serial not null ,
    topico integer,
    tipo_arma integer,
    calibre integer,
    cantidad integer,
    situacion integer,
    primary key (id) 
  );

revoke all on amc_detalle_arma from "public";

{ TABLE aud_amc_detalle_arma row size = 68 number of columns = 15 index size = 0 }

create table aud_amc_detalle_arma 
  (
    id integer,
    topico integer,
    tipo_arma integer,
    calibre integer,
    cantidad integer,
    situacion integer,
    desp_id integer,
    desp_topico integer,
    desp_tipo_arma integer,
    desp_calibre integer,
    desp_cantidad integer,
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_detalle_arma from "public";

{ TABLE amc_detalle_municion row size = 20 number of columns = 5 index size = 27 }

create table amc_detalle_municion 
  (
    id serial not null ,
    topico integer,
    calibre integer,
    cantidad integer,
    situacion integer,
    primary key (id) 
  );

revoke all on amc_detalle_municion from "public";

{ TABLE aud_amc_detalle_municion row size = 60 number of columns = 13 index size = 0 }

create table aud_amc_detalle_municion 
  (
    id integer,
    topico integer,
    calibre integer,
    cantidad integer,
    situacion integer,
    desp_id integer,
    desp_topico integer,
    desp_calibre integer,
    desp_cantidad integer,
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_detalle_municion from "public";

{ TABLE amc_asesinato row size = 16 number of columns = 4 index size = 9 }

create table amc_asesinato 
  (
    id serial not null ,
    topico integer,
    cant_per_asesinadas integer,
    situacion integer,
    primary key (id) 
  );

revoke all on amc_asesinato from "public";

{ TABLE aud_amc_asesinato row size = 52 number of columns = 11 index size = 0 }

create table aud_amc_asesinato 
  (
    id integer,
    topico integer,
    cant_per_asesinadas integer,
    situacion integer,
    desp_id integer,
    desp_topico integer,
    desp_cant_per_asesinadas integer,
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_asesinato from "public";

{ TABLE amc_destruccion_pista row size = 22 number of columns = 4 index size = 18 }

create table amc_destruccion_pista 
  (
    id serial not null ,
    topico integer,
    distancia decimal(16),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_destruccion_pista from "public";

{ TABLE aud_amc_destruccion_pista row size = 64 number of columns = 11 index size = 0 }

create table aud_amc_destruccion_pista 
  (
    id integer,
    topico integer,
    distancia decimal(16),
    situacion integer,
    desp_id integer,
    desp_topico integer,
    desp_distancia decimal(16),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_destruccion_pista from "public";

{ TABLE amc_incautacion_armas row size = 2063 number of columns = 4 index size = 18 }

create table amc_incautacion_armas 
  (
    id serial not null ,
    topico integer,
    info lvarchar,
    situacion integer,
    primary key (id) 
  );

revoke all on amc_incautacion_armas from "public";

{ TABLE aud_amc_incautacion_armas row size = 4146 number of columns = 11 index size = 0 }

create table aud_amc_incautacion_armas 
  (
    id integer,
    topico integer,
    info lvarchar,
    situacion integer,
    desp_id integer,
    desp_topico integer,
    desp_info lvarchar,
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_incautacion_armas from "public";

{ TABLE amc_nacionalidad row size = 41 number of columns = 4 index size = 16 }

create table amc_nacionalidad 
  (
    id serial not null ,
    desc varchar(30),
    pais smallint,
    situacion integer,
    primary key (id) 
  );

revoke all on amc_nacionalidad from "public";

{ TABLE aud_amc_nacionalidad row size = 102 number of columns = 11 index size = 0 }

create table aud_amc_nacionalidad 
  (
    id integer,
    desc varchar(30),
    pais smallint,
    situacion integer,
    desp_id integer,
    desp_desc varchar(30),
    desp_pais smallint,
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_nacionalidad from "public";

{ TABLE amc_organizacion_mov_social row size = 39 number of columns = 3 index size = 9 }

create table amc_organizacion_mov_social 
  (
    id serial not null ,
    desc varchar(30),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_organizacion_mov_social from "public";

{ TABLE aud_amc_organizacion_mov_social row size = 98 number of columns = 9 index size = 0 }

create table aud_amc_organizacion_mov_social 
  (
    id integer,
    desc varchar(30),
    situacion integer,
    desp_id integer,
    desp_desc varchar(30),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_organizacion_mov_social from "public";

{ TABLE amc_tipo_movimiento_social row size = 39 number of columns = 3 index size = 9 }

create table amc_tipo_movimiento_social 
  (
    id serial not null ,
    desc varchar(30),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_tipo_movimiento_social from "public";

{ TABLE aud_amc_tipo_movimiento_social row size = 98 number of columns = 9 index size = 0 }

create table aud_amc_tipo_movimiento_social 
  (
    id integer,
    desc varchar(30),
    situacion integer,
    desp_id integer,
    desp_desc varchar(30),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_tipo_movimiento_social from "public";

{ TABLE amc_tipo_desastre_natural row size = 29 number of columns = 3 index size = 9 }

create table amc_tipo_desastre_natural 
  (
    id serial not null ,
    desc varchar(20),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_tipo_desastre_natural from "public";

{ TABLE aud_amc_tipo_desastre_natural row size = 78 number of columns = 9 index size = 0 }

create table aud_amc_tipo_desastre_natural 
  (
    id integer,
    desc varchar(20),
    situacion integer,
    desp_id integer,
    desp_desc varchar(20),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_tipo_desastre_natural from "public";

{ TABLE amc_capturas row size = 2063 number of columns = 4 index size = 18 }

create table amc_capturas 
  (
    id serial not null ,
    topico integer,
    info lvarchar,
    situacion integer,
    primary key (id) 
  );

revoke all on amc_capturas from "public";

{ TABLE aud_amc_capturas row size = 4146 number of columns = 11 index size = 0 }

create table aud_amc_capturas 
  (
    id integer,
    topico integer,
    info lvarchar,
    situacion integer,
    desp_id integer,
    desp_topico integer,
    desp_info lvarchar,
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_capturas from "public";

{ TABLE amc_actividad_vinculada row size = 29 number of columns = 3 index size = 9 }

create table amc_actividad_vinculada 
  (
    id serial not null ,
    desc varchar(20),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_actividad_vinculada from "public";

{ TABLE aud_amc_actividad_vinculada row size = 78 number of columns = 9 index size = 0 }

create table aud_amc_actividad_vinculada 
  (
    id integer,
    desc varchar(20),
    situacion integer,
    desp_id integer,
    desp_desc varchar(20),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_actividad_vinculada from "public";

{ TABLE amc_moneda row size = 42 number of columns = 4 index size = 9 }

create table amc_moneda 
  (
    id serial not null ,
    desc varchar(25),
    cambio float,
    situacion integer,
    primary key (id) 
  );

revoke all on amc_moneda from "public";

{ TABLE aud_amc_moneda row size = 104 number of columns = 11 index size = 0 }

create table aud_amc_moneda 
  (
    id integer,
    desc varchar(25),
    cambio float,
    situacion integer,
    desp_id integer,
    desp_desc varchar(25),
    desp_cambio float,
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_moneda from "public";

{ TABLE amc_fenomeno_natural row size = 39 number of columns = 3 index size = 9 }

create table amc_fenomeno_natural 
  (
    id serial not null ,
    desc varchar(30),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_fenomeno_natural from "public";

{ TABLE aud_amc_fenomeno_natural row size = 98 number of columns = 9 index size = 0 }

create table aud_amc_fenomeno_natural 
  (
    id integer,
    desc varchar(30),
    situacion integer,
    desp_id integer,
    desp_desc varchar(30),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_fenomeno_natural from "public";

{ TABLE amc_tipo_topics row size = 39 number of columns = 3 index size = 9 }

create table amc_tipo_topics 
  (
    id serial not null ,
    desc varchar(30),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_tipo_topics from "public";

{ TABLE aud_amc_tipo_topics row size = 98 number of columns = 9 index size = 0 }

create table aud_amc_tipo_topics 
  (
    id integer,
    desc varchar(30),
    situacion integer,
    desp_id integer,
    desp_desc varchar(30),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_tipo_topics from "public";

{ TABLE amc_tipo_armas row size = 29 number of columns = 3 index size = 9 }

create table amc_tipo_armas 
  (
    id serial not null ,
    desc varchar(20),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_tipo_armas from "public";

{ TABLE aud_amc_tipo_armas row size = 78 number of columns = 9 index size = 0 }

create table aud_amc_tipo_armas 
  (
    id integer,
    desc varchar(20),
    situacion integer,
    desp_id integer,
    desp_desc varchar(20),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_tipo_armas from "public";

{ TABLE amc_transporte row size = 29 number of columns = 3 index size = 9 }

create table amc_transporte 
  (
    id serial not null ,
    desc varchar(20),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_transporte from "public";

{ TABLE aud_amc_transporte row size = 78 number of columns = 9 index size = 0 }

create table aud_amc_transporte 
  (
    id integer,
    desc varchar(20),
    situacion integer,
    desp_id integer,
    desp_desc varchar(20),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_transporte from "public";

{ TABLE amc_prioridad row size = 29 number of columns = 3 index size = 9 }

create table amc_prioridad 
  (
    id integer,
    desc varchar(20),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_prioridad from "public";

{ TABLE aud_amc_prioridad row size = 78 number of columns = 9 index size = 0 }

create table aud_amc_prioridad 
  (
    id integer,
    desc varchar(20),
    situacion integer,
    desp_id integer,
    desp_desc varchar(20),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_prioridad from "public";

{ TABLE amc_tendencia row size = 29 number of columns = 3 index size = 9 }

create table amc_tendencia 
  (
    id integer,
    desc varchar(20),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_tendencia from "public";

{ TABLE aud_amc_tendencia row size = 78 number of columns = 9 index size = 0 }

create table aud_amc_tendencia 
  (
    id integer,
    desc varchar(20),
    situacion integer,
    desp_id integer,
    desp_desc varchar(20),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_tendencia from "public";

{ TABLE amc_usuarios row size = 59 number of columns = 3 index size = 9 }

create table amc_usuarios 
  (
    id serial not null ,
    desc varchar(50),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_usuarios from "public";

{ TABLE aud_amc_usuarios row size = 138 number of columns = 9 index size = 0 }

create table aud_amc_usuarios 
  (
    id integer,
    desc varchar(50),
    situacion integer,
    desp_id integer,
    desp_desc varchar(50),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_usuarios from "public";

{ TABLE amc_calibre row size = 29 number of columns = 3 index size = 9 }

create table amc_calibre 
  (
    id serial not null ,
    desc varchar(20),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_calibre from "public";

{ TABLE aud_amc_calibre row size = 78 number of columns = 9 index size = 0 }

create table aud_amc_calibre 
  (
    id integer,
    desc varchar(20),
    situacion integer,
    desp_id integer,
    desp_desc varchar(20),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_calibre from "public";

{ TABLE amc_fuentes row size = 59 number of columns = 3 index size = 9 }

create table amc_fuentes 
  (
    id serial not null ,
    desc varchar(50),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_fuentes from "public";

{ TABLE aud_amc_fuentes row size = 138 number of columns = 9 index size = 0 }

create table aud_amc_fuentes 
  (
    id integer,
    desc varchar(50),
    situacion integer,
    desp_id integer,
    desp_desc varchar(50),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_fuentes from "public";

{ TABLE amc_edades row size = 29 number of columns = 3 index size = 9 }

create table amc_edades 
  (
    id serial not null ,
    edades varchar(20),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_edades from "public";

{ TABLE aud_amc_edades row size = 78 number of columns = 9 index size = 0 }

create table aud_amc_edades 
  (
    id integer,
    edades varchar(20),
    situacion integer,
    desp_id integer,
    desp_edades varchar(20),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_edades from "public";

{ TABLE amc_factor row size = 29 number of columns = 3 index size = 9 }

create table amc_factor 
  (
    id integer,
    desc varchar(20),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_factor from "public";

{ TABLE aud_amc_factor row size = 78 number of columns = 9 index size = 0 }

create table aud_amc_factor 
  (
    id integer,
    desc varchar(20),
    situacion integer,
    desp_id integer,
    desp_desc varchar(20),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_factor from "public";

{ TABLE amc_delito row size = 59 number of columns = 3 index size = 9 }

create table amc_delito 
  (
    id serial not null ,
    desc varchar(50),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_delito from "public";

{ TABLE aud_amc_delito row size = 138 number of columns = 9 index size = 0 }

create table aud_amc_delito 
  (
    id integer,
    desc varchar(50),
    situacion integer,
    desp_id integer,
    desp_desc varchar(50),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_delito from "public";

{ TABLE amc_drogas row size = 29 number of columns = 3 index size = 9 }

create table amc_drogas 
  (
    id serial not null ,
    desc varchar(20),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_drogas from "public";

{ TABLE aud_amc_drogas row size = 78 number of columns = 9 index size = 0 }

create table aud_amc_drogas 
  (
    id integer,
    desc varchar(20),
    situacion integer,
    desp_id integer,
    desp_desc varchar(20),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_drogas from "public";

{ TABLE amc_sexo row size = 29 number of columns = 3 index size = 9 }

create table amc_sexo 
  (
    id serial not null ,
    desc varchar(20),
    situacion integer,
    primary key (id) 
  );

revoke all on amc_sexo from "public";

{ TABLE aud_amc_sexo row size = 78 number of columns = 9 index size = 0 }

create table aud_amc_sexo 
  (
    id integer,
    desc varchar(20),
    situacion integer,
    desp_id integer,
    desp_desc varchar(20),
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_sexo from "public";

{ TABLE amc_per_asesinadas row size = 51 number of columns = 6 index size = 18 }

create table amc_per_asesinadas 
  (
    id serial not null ,
    topico integer,
    nombre varchar(30),
    edad integer,
    sexo integer,
    situacion integer,
    primary key (id) 
  );

revoke all on amc_per_asesinadas from "public";

{ TABLE aud_amc_per_asesinadas row size = 122 number of columns = 15 index size = 0 }

create table aud_amc_per_asesinadas 
  (
    id integer,
    topico integer,
    nombre varchar(30),
    edad integer,
    sexo integer,
    situacion integer,
    desp_id integer,
    desp_topico integer,
    desp_nombre varchar(30),
    desp_edad integer,
    desp_sexo integer,
    desp_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_amc_per_asesinadas from "public";

{ TABLE larm_asentamiento row size = 14 number of columns = 5 index size = 24 }

create table larm_asentamiento 
  (
    asen_catalogo integer not null ,
    asen_cuatrimestre smallint not null ,
    asen_year integer not null ,
    asen_estado smallint,
    asen_situacion smallint,
    primary key (asen_catalogo,asen_cuatrimestre,asen_year) 
  );

revoke all on larm_asentamiento from "public";

{ TABLE aud_larm_asentamiento row size = 48 number of columns = 13 index size = 0 }

create table aud_larm_asentamiento 
  (
    asen_catalogo integer,
    asen_cuatrimestre smallint,
    asen_year integer,
    asen_estado smallint,
    asen_situacion smallint,
    desp_asen_catalogo integer,
    desp_asen_cuatrimestre smallint,
    desp_asen_year integer,
    desp_asen_estado smallint,
    desp_asen_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_larm_asentamiento from "public";

{ TABLE coc_departamentos row size = 259 number of columns = 5 index size = 9 }

create table coc_departamentos 
  (
    dep_codigo integer,
    dep_desc_lg varchar(150),
    dep_desc_md varchar(75),
    dep_desc_ct varchar(25),
    dep_situacion smallint,
    primary key (dep_codigo) 
  );

revoke all on coc_departamentos from "public";

{ TABLE aud_coc_departamentos row size = 538 number of columns = 13 index size = 0 }

create table aud_coc_departamentos 
  (
    dep_codigo integer,
    dep_desc_lg varchar(150),
    dep_desc_md varchar(75),
    dep_desc_ct varchar(25),
    dep_situacion smallint,
    desp_dep_codigo integer,
    desp_dep_desc_lg varchar(150),
    desp_dep_desc_md varchar(75),
    desp_dep_desc_ct varchar(25),
    desp_dep_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_departamentos from "public";

{ TABLE coc_municipios row size = 263 number of columns = 6 index size = 18 }

create table coc_municipios 
  (
    mun_codigo integer,
    mun_cod_dep integer,
    mun_desc_lg varchar(150),
    mun_desc_md varchar(75),
    mun_desc_ct varchar(25),
    mun_situacion smallint,
    primary key (mun_codigo) 
  );

revoke all on coc_municipios from "public";

{ TABLE aud_coc_municipios row size = 546 number of columns = 15 index size = 0 }

create table aud_coc_municipios 
  (
    mun_codigo integer,
    mun_cod_dep integer,
    mun_desc_lg varchar(150),
    mun_desc_md varchar(75),
    mun_desc_ct varchar(25),
    mun_situacion smallint,
    desp_mun_codigo integer,
    desp_mun_cod_dep integer,
    desp_mun_desc_lg varchar(150),
    desp_mun_desc_md varchar(75),
    desp_mun_desc_ct varchar(25),
    desp_mun_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_municipios from "public";

{ TABLE coc_lugar row size = 448 number of columns = 11 index size = 18 }

create table coc_lugar 
  (
    lug_codigo integer,
    lug_cod_mun integer,
    lug_descripcion varchar(150),
    lug_latitud decimal(16),
    lug_longitud decimal(16),
    lug_hombres integer,
    lug_mujeres integer,
    lug_menores_masc integer,
    lug_menores_fem integer,
    lug_observaciones varchar(250),
    lug_situacion smallint,
    primary key (lug_codigo) 
  );

revoke all on coc_lugar from "public";

{ TABLE aud_coc_lugar row size = 916 number of columns = 25 index size = 0 }

create table aud_coc_lugar 
  (
    lug_codigo integer,
    lug_cod_mun integer,
    lug_descripcion varchar(150),
    lug_latitud decimal(16),
    lug_longitud decimal(16),
    lug_hombres integer,
    lug_mujeres integer,
    lug_menores_masc integer,
    lug_menores_fem integer,
    lug_observaciones varchar(250),
    lug_situacion smallint,
    desp_lug_codigo integer,
    desp_lug_cod_mun integer,
    desp_lug_descripcion varchar(150),
    desp_lug_latitud decimal(16),
    desp_lug_longitud decimal(16),
    desp_lug_hombres integer,
    desp_lug_mujeres integer,
    desp_lug_menores_masc integer,
    desp_lug_menores_fem integer,
    desp_lug_observaciones varchar(250),
    desp_lug_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_lugar from "public";

{ TABLE coc_detalle_lugar row size = 165 number of columns = 5 index size = 27 }

create table coc_detalle_lugar 
  (
    det_lug_codigo integer,
    det_lug_reporte integer,
    det_lug_cod_lugar integer,
    det_lug_observacion varchar(150),
    det_lug_situacion smallint,
    primary key (det_lug_codigo) 
  );

revoke all on coc_detalle_lugar from "public";

{ TABLE aud_coc_detalle_lugar row size = 350 number of columns = 13 index size = 0 }

create table aud_coc_detalle_lugar 
  (
    det_lug_codigo integer,
    det_lug_reporte integer,
    det_lug_cod_lugar integer,
    det_lug_observacion varchar(150),
    det_lug_situacion smallint,
    desp_det_lug_codigo integer,
    desp_det_lug_reporte integer,
    desp_det_lug_cod_lugar integer,
    desp_det_lug_observacion varchar(150),
    desp_det_lug_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_detalle_lugar from "public";

{ TABLE aud_capta_requisitos row size = 1638 number of columns = 9 index size = 0 }

create table aud_capta_requisitos 
  (
    regi_id integer,
    regi_nombre lvarchar(800),
    regi_situacion smallint,
    desp_regi_id integer,
    desp_regi_nombre lvarchar(800),
    desp_regi_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_capta_requisitos from "public";

{ TABLE capta_requisitos row size = 809 number of columns = 3 index size = 0 }

create table capta_requisitos 
  (
    regi_id serial not null ,
    regi_nombre lvarchar(800),
    regi_situacion smallint
  );

revoke all on capta_requisitos from "public";

{ TABLE far_insumos_asignados row size = 793 number of columns = 11 index size = 0 }

create table far_insumos_asignados 
  (
    ins_asig_id integer not null ,
    ins_asig_ins_id integer,
    ins_asig_ins integer,
    ins_asig_pres integer,
    ins_asig_prec varchar(250),
    ins_asig_cantidad integer,
    ins_asig_total decimal(20,5),
    ins_asig_situacion integer,
    ins_desc_insumo varchar(250),
    ins_fecha_vence date,
    ins_lote varchar(250)
  );

revoke all on far_insumos_asignados from "public";

{ TABLE far_insumos_datos row size = 3555 number of columns = 17 index size = 0 }

create table far_insumos_datos 
  (
    ins_id integer not null ,
    ins_id_ingreso integer,
    ins_id_egresos integer,
    ins_proveedor integer,
    ins_fecha varchar(250),
    ins_num_factura varchar(250),
    ins_num_serie varchar(250),
    ins_forma_pago integer,
    ins_fecha_pago varchar(250),
    ins_totales decimal(20,5),
    ins_situacion integer,
    ins_dependencia smallint,
    ins_otra_dependencia varchar(250),
    ins_persona_recibe integer,
    ins_persona_entrega integer,
    ins_tipo varchar(250),
    ins_observaciones lvarchar(2000)
  );

revoke all on far_insumos_datos from "public";

{ TABLE far_insumos_suma row size = 291 number of columns = 11 index size = 0 }

create table far_insumos_suma 
  (
    ins_id_suma integer not null ,
    ins_nombre_farmaco_suma integer,
    ins_presentacion_farmaco_suma integer,
    ins_cantidad_suma integer,
    ins_situacion integer,
    ins_situacion_existencia integer,
    ins_cantidad_existente integer,
    ins_id_tabla_egresos integer,
    ins_lote_suma varchar(250),
    ins_fecha_vence_suma date,
    ins_dependencia_suma integer
  );

revoke all on far_insumos_suma from "public";

{ TABLE farma_farmacos row size = 931 number of columns = 9 index size = 0 }

create table farma_farmacos 
  (
    farmaco_id serial not null ,
    farmaco_cod varchar(50),
    farmaco_nom varchar(100),
    farmaco_desc varchar(255),
    farmaco_desc_ct varchar(250),
    farmaco_tipo integer,
    farmaco_ren integer,
    farmaco_sit integer,
    farmaco_obs varchar(255)
  );

revoke all on farma_farmacos from "public";

{ TABLE aud_farma_farmacos row size = 1882 number of columns = 21 index size = 0 }

create table aud_farma_farmacos 
  (
    farmaco_id integer,
    farmaco_cod varchar(50),
    farmaco_nom varchar(100),
    farmaco_desc varchar(255),
    farmaco_desc_ct varchar(250),
    farmaco_tipo integer,
    farmaco_ren integer,
    farmaco_sit integer,
    farmaco_obs varchar(255),
    desp_farmaco_id integer,
    desp_farmaco_cod varchar(50),
    desp_farmaco_nom varchar(100),
    desp_farmaco_desc varchar(255),
    desp_farmaco_desc_ct varchar(250),
    desp_farmaco_tipo integer,
    desp_farmaco_ren integer,
    desp_farmaco_sit integer,
    desp_farmaco_obs varchar(255),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_farma_farmacos from "public";

{ TABLE aud_far_insumos_suma row size = 602 number of columns = 25 index size = 0 }

create table aud_far_insumos_suma 
  (
    ins_id_suma integer,
    ins_nombre_farmaco_suma integer,
    ins_presentacion_farmaco_suma integer,
    ins_cantidad_suma integer,
    ins_situacion integer,
    ins_situacion_existencia integer,
    ins_cantidad_existente integer,
    ins_id_tabla_egresos integer,
    ins_lote_suma varchar(250),
    ins_fecha_vence_suma date,
    ins_dependencia_suma integer,
    desp_ins_id_suma integer,
    desp_ins_nombre_farmaco_suma integer,
    desp_ins_presentacion_farmaco_suma integer,
    desp_ins_cantidad_suma integer,
    desp_ins_situacion integer,
    desp_ins_situacion_existencia integer,
    desp_ins_cantidad_existente integer,
    desp_ins_id_tabla_egresos integer,
    desp_ins_lote_suma varchar(250),
    desp_ins_fecha_vence_suma date,
    desp_ins_dependencia_suma integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_far_insumos_suma from "public";

{ TABLE aud_far_insumos_datos row size = 7130 number of columns = 37 index size = 0 }

create table aud_far_insumos_datos 
  (
    ins_id integer,
    ins_id_ingreso integer,
    ins_id_egresos integer,
    ins_proveedor integer,
    ins_fecha varchar(250),
    ins_num_factura varchar(250),
    ins_num_serie varchar(250),
    ins_forma_pago integer,
    ins_fecha_pago varchar(250),
    ins_totales decimal(20,5),
    ins_situacion integer,
    ins_dependencia smallint,
    ins_otra_dependencia varchar(250),
    ins_persona_recibe integer,
    ins_persona_entrega integer,
    ins_tipo varchar(250),
    ins_observaciones lvarchar(2000),
    desp_ins_id integer,
    desp_ins_id_ingreso integer,
    desp_ins_id_egresos integer,
    desp_ins_proveedor integer,
    desp_ins_fecha varchar(250),
    desp_ins_num_factura varchar(250),
    desp_ins_num_serie varchar(250),
    desp_ins_forma_pago integer,
    desp_ins_fecha_pago varchar(250),
    desp_ins_totales decimal(20,5),
    desp_ins_situacion integer,
    desp_ins_dependencia smallint,
    desp_ins_otra_dependencia varchar(250),
    desp_ins_persona_recibe integer,
    desp_ins_persona_entrega integer,
    desp_ins_tipo varchar(250),
    desp_ins_observaciones lvarchar(2000),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_far_insumos_datos from "public";

{ TABLE aud_far_insumos_asignados row size = 1606 number of columns = 25 index size = 0 }

create table aud_far_insumos_asignados 
  (
    ins_asig_id integer,
    ins_asig_ins_id integer,
    ins_asig_ins integer,
    ins_asig_pres integer,
    ins_asig_prec varchar(250),
    ins_asig_cantidad integer,
    ins_asig_total decimal(20,5),
    ins_asig_situacion integer,
    ins_desc_insumo varchar(250),
    ins_fecha_vence date,
    ins_lote varchar(250),
    desp_ins_asig_id integer,
    desp_ins_asig_ins_id integer,
    desp_ins_asig_ins integer,
    desp_ins_asig_pres integer,
    desp_ins_asig_prec varchar(250),
    desp_ins_asig_cantidad integer,
    desp_ins_asig_total decimal(20,5),
    desp_ins_asig_situacion integer,
    desp_ins_desc_insumo varchar(250),
    desp_ins_fecha_vence date,
    desp_ins_lote varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_far_insumos_asignados from "public";

{ TABLE sanciones_asc row size = 20 number of columns = 4 index size = 13 }

create table sanciones_asc 
  (
    est_orden bigint,
    est_catalogo bigint,
    est_horas smallint,
    est_demeritos smallint,
    primary key (est_orden) 
  );

revoke all on sanciones_asc from "public";

{ TABLE aud_sanciones_asc row size = 60 number of columns = 11 index size = 0 }

create table aud_sanciones_asc 
  (
    est_orden bigint,
    est_catalogo bigint,
    est_horas smallint,
    est_demeritos smallint,
    desp_est_orden bigint,
    desp_est_catalogo bigint,
    desp_est_horas smallint,
    desp_est_demeritos smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sanciones_asc from "public";

{ TABLE ficha_medica_asc row size = 417 number of columns = 4 index size = 13 }

create table ficha_medica_asc 
  (
    fic_orden bigint,
    fic_catalogo bigint,
    fic_desc varchar(150),
    fic_observacion char(250),
    primary key (fic_orden) 
  );

revoke all on ficha_medica_asc from "public";

{ TABLE aud_ficha_medica_asc row size = 854 number of columns = 11 index size = 0 }

create table aud_ficha_medica_asc 
  (
    fic_orden bigint,
    fic_catalogo bigint,
    fic_desc varchar(150),
    fic_observacion char(250),
    desp_fic_orden bigint,
    desp_fic_catalogo bigint,
    desp_fic_desc varchar(150),
    desp_fic_observacion char(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ficha_medica_asc from "public";

{ TABLE tiempo_comando_asc row size = 267 number of columns = 3 index size = 13 }

create table tiempo_comando_asc 
  (
    com_orden bigint,
    com_catalogo bigint,
    com_comando varchar(250),
    primary key (com_orden) 
  );

revoke all on tiempo_comando_asc from "public";

{ TABLE aud_tiempo_comando_asc row size = 554 number of columns = 9 index size = 0 }

create table aud_tiempo_comando_asc 
  (
    com_orden bigint,
    com_catalogo bigint,
    com_comando varchar(250),
    desp_com_orden bigint,
    desp_com_catalogo bigint,
    desp_com_comando varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tiempo_comando_asc from "public";

{ TABLE evaluaciones_perfil_asc row size = 227 number of columns = 6 index size = 13 }

create table evaluaciones_perfil_asc 
  (
    e_orden bigint,
    e_catalogo bigint,
    e_diagnost smallint,
    e_fecha date,
    e_puntuacion decimal(5,2),
    e_estado varchar(200),
    primary key (e_orden) 
  );

revoke all on evaluaciones_perfil_asc from "public";

{ TABLE aud_evaluaciones_perfil_asc row size = 474 number of columns = 15 index size = 0 }

create table aud_evaluaciones_perfil_asc 
  (
    e_orden bigint,
    e_catalogo bigint,
    e_diagnost smallint,
    e_fecha date,
    e_puntuacion decimal(5,2),
    e_estado varchar(200),
    desp_e_orden bigint,
    desp_e_catalogo bigint,
    desp_e_diagnost smallint,
    desp_e_fecha date,
    desp_e_puntuacion decimal(5,2),
    desp_e_estado varchar(200),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_evaluaciones_perfil_asc from "public";

{ TABLE opaf_notas_asc row size = 26 number of columns = 5 index size = 13 }

create table opaf_notas_asc 
  (
    not_orden bigint,
    not_catalogo bigint,
    not_fecha date,
    not_promedio decimal(5,2),
    not_tipo varchar(1),
    primary key (not_orden) 
  );

revoke all on opaf_notas_asc from "public";

{ TABLE aud_opaf_notas_asc row size = 72 number of columns = 13 index size = 0 }

create table aud_opaf_notas_asc 
  (
    not_orden bigint,
    not_catalogo bigint,
    not_fecha date,
    not_promedio decimal(5,2),
    not_tipo varchar(1),
    desp_not_orden bigint,
    desp_not_catalogo bigint,
    desp_not_fecha date,
    desp_not_promedio decimal(5,2),
    desp_not_tipo varchar(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_opaf_notas_asc from "public";

{ TABLE eva_evaluacion_asc row size = 44 number of columns = 6 index size = 13 }

create table eva_evaluacion_asc 
  (
    eva_orden bigint,
    eva_id bigint,
    eva_periodo varchar(15),
    eva_renglon smallint,
    eva_catalogo bigint,
    eva_grado smallint,
    primary key (eva_orden) 
  );

revoke all on eva_evaluacion_asc from "public";

{ TABLE aud_eva_evaluacion_asc row size = 108 number of columns = 15 index size = 0 }

create table aud_eva_evaluacion_asc 
  (
    eva_orden bigint,
    eva_id bigint,
    eva_periodo varchar(15),
    eva_renglon smallint,
    eva_catalogo bigint,
    eva_grado smallint,
    desp_eva_orden bigint,
    desp_eva_id bigint,
    desp_eva_periodo varchar(15),
    desp_eva_renglon smallint,
    desp_eva_catalogo bigint,
    desp_eva_grado smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_evaluacion_asc from "public";

{ TABLE eva_notas_asc row size = 44 number of columns = 9 index size = 13 }

create table eva_notas_asc 
  (
    no_orden bigint,
    no_id bigint,
    no_factores smallint,
    no_evaluacion bigint,
    no_pregunta smallint,
    no_nota smallint,
    no_tipo smallint,
    no_fecha date,
    no_usuario bigint,
    primary key (no_orden) 
  );

revoke all on eva_notas_asc from "public";

{ TABLE aud_eva_notas_asc row size = 108 number of columns = 21 index size = 0 }

create table aud_eva_notas_asc 
  (
    no_orden bigint,
    no_id bigint,
    no_factores smallint,
    no_evaluacion bigint,
    no_pregunta smallint,
    no_nota smallint,
    no_tipo smallint,
    no_fecha date,
    no_usuario bigint,
    desp_no_orden bigint,
    desp_no_id bigint,
    desp_no_factores smallint,
    desp_no_evaluacion bigint,
    desp_no_pregunta smallint,
    desp_no_nota smallint,
    desp_no_tipo smallint,
    desp_no_fecha date,
    desp_no_usuario bigint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_notas_asc from "public";

{ TABLE cursos_asc row size = 180 number of columns = 7 index size = 13 }

create table cursos_asc 
  (
    cur_orden bigint,
    cur_catalogo bigint,
    cur_desc_lg varchar(150),
    cur_fec_inicio date,
    cur_fec_fin date,
    cur_punteo decimal(4,2),
    cur_curso smallint,
    primary key (cur_orden) 
  );

revoke all on cursos_asc from "public";

{ TABLE aud_cursos_asc row size = 380 number of columns = 17 index size = 0 }

create table aud_cursos_asc 
  (
    cur_orden bigint,
    cur_catalogo bigint,
    cur_desc_lg varchar(150),
    cur_fec_inicio date,
    cur_fec_fin date,
    cur_punteo decimal(4,2),
    cur_curso smallint,
    desp_cur_orden bigint,
    desp_cur_catalogo bigint,
    desp_cur_desc_lg varchar(150),
    desp_cur_fec_inicio date,
    desp_cur_fec_fin date,
    desp_cur_punteo decimal(4,2),
    desp_cur_curso smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_cursos_asc from "public";

{ TABLE creditos_asc row size = 38 number of columns = 9 index size = 13 }

create table creditos_asc 
  (
    cre_orden bigint,
    cre_catalogo bigint,
    cre_fecha date,
    cre_cur_mil decimal(4,2),
    cre_cur_uni decimal(4,2),
    cre_cur_cap decimal(4,2),
    cre_idiomas decimal(4,2),
    cre_conde decimal(4,2),
    not_total decimal(4,2),
    primary key (cre_orden) 
  );

revoke all on creditos_asc from "public";

{ TABLE aud_creditos_asc row size = 96 number of columns = 21 index size = 0 }

create table aud_creditos_asc 
  (
    cre_orden bigint,
    cre_catalogo bigint,
    cre_fecha date,
    cre_cur_mil decimal(4,2),
    cre_cur_uni decimal(4,2),
    cre_cur_cap decimal(4,2),
    cre_idiomas decimal(4,2),
    cre_conde decimal(4,2),
    not_total decimal(4,2),
    desp_cre_orden bigint,
    desp_cre_catalogo bigint,
    desp_cre_fecha date,
    desp_cre_cur_mil decimal(4,2),
    desp_cre_cur_uni decimal(4,2),
    desp_cre_cur_cap decimal(4,2),
    desp_cre_idiomas decimal(4,2),
    desp_cre_conde decimal(4,2),
    desp_not_total decimal(4,2),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_creditos_asc from "public";

{ TABLE mper_asc row size = 414 number of columns = 13 index size = 13 }

create table mper_asc 
  (
    per_catalogo bigint,
    per_grado smallint,
    per_arma smallint,
    per_nom1 varchar(40),
    per_nom2 varchar(40),
    per_ape1 varchar(40),
    per_ape2 varchar(40),
    per_promocion smallint,
    per_plaza varchar(12),
    per_desc_empleo varchar(200),
    per_fec_nomb date,
    per_dpi varchar(15),
    per_orden_puesto smallint,
    primary key (per_catalogo) 
  );

revoke all on mper_asc from "public";

{ TABLE aud_mper_asc row size = 848 number of columns = 29 index size = 0 }

create table aud_mper_asc 
  (
    per_catalogo bigint,
    per_grado smallint,
    per_arma smallint,
    per_nom1 varchar(40),
    per_nom2 varchar(40),
    per_ape1 varchar(40),
    per_ape2 varchar(40),
    per_promocion smallint,
    per_plaza varchar(12),
    per_desc_empleo varchar(200),
    per_fec_nomb date,
    per_dpi varchar(15),
    per_orden_puesto smallint,
    desp_per_catalogo bigint,
    desp_per_grado smallint,
    desp_per_arma smallint,
    desp_per_nom1 varchar(40),
    desp_per_nom2 varchar(40),
    desp_per_ape1 varchar(40),
    desp_per_ape2 varchar(40),
    desp_per_promocion smallint,
    desp_per_plaza varchar(12),
    desp_per_desc_empleo varchar(200),
    desp_per_fec_nomb date,
    desp_per_dpi varchar(15),
    desp_per_orden_puesto smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mper_asc from "public";

{ TABLE observaciones_asc row size = 267 number of columns = 3 index size = 13 }

create table observaciones_asc 
  (
    obs_orden bigint,
    obs_catalogo bigint,
    obs_descripcion varchar(250),
    primary key (obs_orden) 
  );

revoke all on observaciones_asc from "public";

{ TABLE aud_observaciones_asc row size = 554 number of columns = 9 index size = 0 }

create table aud_observaciones_asc 
  (
    obs_orden bigint,
    obs_catalogo bigint,
    obs_descripcion varchar(250),
    desp_obs_orden bigint,
    desp_obs_catalogo bigint,
    desp_obs_descripcion varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_observaciones_asc from "public";

{ TABLE coc_coordenadas3 row size = 181 number of columns = 6 index size = 9 }

create table coc_coordenadas3 
  (
    coo_id serial not null ,
    coo_reporte integer,
    coo_lat decimal(16),
    coo_long decimal(16),
    coo_lugar varchar(150),
    coo_situacion smallint,
    primary key (coo_id) 
  );

revoke all on coc_coordenadas3 from "public";

{ TABLE coc_dep_orden row size = 16 number of columns = 4 index size = 0 }

create table coc_dep_orden 
  (
    dep_ord_codigo serial not null ,
    dep_ord_orden integer not null ,
    dep_ord_dependencia integer not null ,
    dep_ord_situacion integer not null 
  );

revoke all on coc_dep_orden from "public";

{ TABLE coc_operaciones row size = 442 number of columns = 5 index size = 18 }

create table coc_operaciones 
  (
    ope_codigo serial not null ,
    ope_area_codigo integer not null ,
    ope_descripcion varchar(200,50) not null ,
    ope_observacion varchar(230,50) not null ,
    ope_situacion smallint not null ,
    primary key (ope_codigo) 
  );

revoke all on coc_operaciones from "public";

{ TABLE coc_personal2 row size = 16 number of columns = 6 index size = 9 }

create table coc_personal2 
  (
    per_id serial not null ,
    per_reporte integer 
        default null,
    per_anio smallint not null ,
    per_dep smallint not null ,
    per_tipo smallint not null ,
    per_cantidad smallint not null 
  );

revoke all on coc_personal2 from "public";

{ TABLE coc_ordenes row size = 510 number of columns = 4 index size = 0 }

create table coc_ordenes 
  (
    ord_codigo serial not null ,
    ord_referencia varchar(250,1) not null ,
    ord_descripcion varchar(250,1) not null ,
    ord_situacion integer not null 
  );

revoke all on coc_ordenes from "public";

{ TABLE coc_proposito row size = 161 number of columns = 4 index size = 0 }

create table coc_proposito 
  (
    prop_codigo serial not null ,
    prop_ope_codigo integer not null ,
    prop_descripcion varchar(150,35) not null ,
    prop_situacion smallint not null 
  );

revoke all on coc_proposito from "public";

{ TABLE coc_detalle_instituciones row size = 163 number of columns = 5 index size = 16 }

create table coc_detalle_instituciones 
  (
    det_ins_codigo serial not null ,
    det_ins_reporte integer,
    det_ins_cod_institucion smallint,
    det_ins_observacion varchar(150),
    det_ins_situacion smallint
  );

revoke all on coc_detalle_instituciones from "public";

{ TABLE coc_producto_operacion row size = 14 number of columns = 4 index size = 27 }

create table coc_producto_operacion 
  (
    prod_ope_id serial not null ,
    prod_ope_producto integer,
    prod_ope_operacion integer,
    prod_ope_situacion smallint,
    primary key (prod_ope_id) 
  );

revoke all on coc_producto_operacion from "public";

{ TABLE aud_coc_producto_operacion row size = 48 number of columns = 11 index size = 0 }

create table aud_coc_producto_operacion 
  (
    prod_ope_id integer,
    prod_ope_producto integer,
    prod_ope_operacion integer,
    prod_ope_situacion smallint,
    desp_prod_ope_id integer,
    desp_prod_ope_producto integer,
    desp_prod_ope_operacion integer,
    desp_prod_ope_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_producto_operacion from "public";

{ TABLE coc_productos row size = 82 number of columns = 3 index size = 9 }

create table coc_productos 
  (
    prod_id serial not null ,
    prod_descripcion varchar(75),
    prod_situacion smallint,
    primary key (prod_id) 
  );

revoke all on coc_productos from "public";

{ TABLE aud_coc_productos row size = 184 number of columns = 9 index size = 0 }

create table aud_coc_productos 
  (
    prod_id integer,
    prod_descripcion varchar(75),
    prod_situacion smallint,
    desp_prod_id integer,
    desp_prod_descripcion varchar(75),
    desp_prod_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_productos from "public";

{ TABLE aud_coc_coordenadas3 row size = 386 number of columns = 15 index size = 0 }

create table aud_coc_coordenadas3 
  (
    coo_id integer,
    coo_reporte integer 
        default null,
    coo_lat decimal(20,18) 
        default null,
    coo_long decimal(20,18) 
        default null,
    coo_lugar varchar(150,50) 
        default null,
    coo_situacion smallint,
    desp_coo_id integer,
    desp_coo_reporte integer 
        default null,
    desp_coo_lat decimal(20,18) 
        default null,
    desp_coo_long decimal(20,18) 
        default null,
    desp_coo_lugar varchar(150,50) 
        default null,
    desp_coo_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_coordenadas3 from "public";

{ TABLE aud_opaf_evento_per row size = 344 number of columns = 15 index size = 0 }

create table aud_opaf_evento_per 
  (
    eve_codigo integer,
    eve_catalogo integer,
    eve_evento smallint,
    eve_acta char(50),
    eve_situacion smallint,
    eve_observacion char(100),
    desp_eve_codigo integer,
    desp_eve_catalogo integer,
    desp_eve_evento smallint,
    desp_eve_acta char(50),
    desp_eve_situacion smallint,
    desp_eve_observacion char(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_opaf_evento_per from "public";

{ TABLE coc_detalle_vehiculos row size = 165 number of columns = 5 index size = 9 }

create table coc_detalle_vehiculos 
  (
    det_veh_codigo serial not null ,
    det_veh_reporte integer,
    det_veh_catalogo integer,
    det_veh_observacion varchar(150),
    det_veh_situacion smallint,
    primary key (det_veh_codigo) 
  );

revoke all on coc_detalle_vehiculos from "public";

{ TABLE aud_coc_detalle_vehiculos row size = 350 number of columns = 13 index size = 0 }

create table aud_coc_detalle_vehiculos 
  (
    det_veh_codigo integer,
    det_veh_reporte integer,
    det_veh_catalogo integer,
    det_veh_observacion varchar(150),
    det_veh_situacion smallint,
    desp_det_veh_codigo integer,
    desp_det_veh_reporte integer,
    desp_det_veh_catalogo integer,
    desp_det_veh_observacion varchar(150),
    desp_det_veh_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_coc_detalle_vehiculos from "public";

{ TABLE tri_penalizaciones row size = 109 number of columns = 4 index size = 9 }

create table tri_penalizaciones 
  (
    id serial not null ,
    descripcion varchar(100),
    valor smallint,
    situacion smallint,
    primary key (id) 
  );

revoke all on tri_penalizaciones from "public";

{ TABLE aud_tri_penalizaciones row size = 238 number of columns = 11 index size = 0 }

create table aud_tri_penalizaciones 
  (
    id integer,
    descripcion varchar(100),
    valor smallint,
    situacion smallint,
    desp_id integer,
    desp_descripcion varchar(100),
    desp_valor smallint,
    desp_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tri_penalizaciones from "public";

{ TABLE tri_det_penalizacion row size = 16 number of columns = 5 index size = 18 }

create table tri_det_penalizacion 
  (
    id serial not null ,
    participante integer,
    penalizacion integer,
    etapa smallint,
    situacion smallint,
    primary key (id) 
  );

revoke all on tri_det_penalizacion from "public";

{ TABLE aud_tri_det_penalizacion row size = 52 number of columns = 13 index size = 0 }

create table aud_tri_det_penalizacion 
  (
    id integer,
    participante integer,
    penalizacion integer,
    etapa smallint,
    situacion smallint,
    desp_id integer,
    desp_participante integer,
    desp_penalizacion integer,
    desp_etapa smallint,
    desp_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tri_det_penalizacion from "public";

{ TABLE tri_detalle_tiro row size = 22 number of columns = 9 index size = 9 }

create table tri_detalle_tiro 
  (
    id serial not null ,
    participante integer,
    cinco_x smallint,
    cinco smallint,
    cuatro smallint,
    tres smallint,
    dos smallint,
    uno smallint,
    situacion smallint,
    primary key (id) 
  );

revoke all on tri_detalle_tiro from "public";

{ TABLE aud_tri_detalle_tiro row size = 64 number of columns = 21 index size = 0 }

create table aud_tri_detalle_tiro 
  (
    id integer,
    participante integer,
    cinco_x smallint,
    cinco smallint,
    cuatro smallint,
    tres smallint,
    dos smallint,
    uno smallint,
    situacion smallint,
    desp_id integer,
    desp_participante integer,
    desp_cinco_x smallint,
    desp_cinco smallint,
    desp_cuatro smallint,
    desp_tres smallint,
    desp_dos smallint,
    desp_uno smallint,
    desp_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_tri_detalle_tiro from "public";

{ TABLE ssm_registro_vacuna row size = 21 number of columns = 6 index size = 9 }

create table ssm_registro_vacuna 
  (
    registro_id serial not null ,
    registro_catalogo integer,
    registro_vacuna integer,
    registro_dosis smallint,
    registro_fecha datetime year to day,
    registro_situacion smallint,
    primary key (registro_id) 
  );

revoke all on ssm_registro_vacuna from "public";

{ TABLE aud_ssm_registro_vacuna row size = 62 number of columns = 15 index size = 0 }

create table aud_ssm_registro_vacuna 
  (
    registro_id integer,
    registro_catalogo integer,
    registro_vacuna integer,
    registro_dosis smallint,
    registro_fecha datetime year to day,
    registro_situacion smallint,
    desp_registro_id integer,
    desp_registro_catalogo integer,
    desp_registro_vacuna integer,
    desp_registro_dosis smallint,
    desp_registro_fecha datetime year to day,
    desp_registro_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ssm_registro_vacuna from "public";

{ TABLE ssm_vacunas row size = 61 number of columns = 5 index size = 9 }

create table ssm_vacunas 
  (
    vacuna_id serial not null ,
    vacuna_desc varchar(50),
    vacuna_dosis smallint,
    vacuna_refuerzo smallint,
    vacuna_sit smallint,
    primary key (vacuna_id) 
  );

revoke all on ssm_vacunas from "public";

{ TABLE aud_ssm_vacunas row size = 142 number of columns = 13 index size = 0 }

create table aud_ssm_vacunas 
  (
    vacuna_id integer,
    vacuna_desc varchar(50),
    vacuna_dosis smallint,
    vacuna_refuerzo smallint,
    vacuna_sit smallint,
    desp_vacuna_id integer,
    desp_vacuna_desc varchar(50),
    desp_vacuna_dosis smallint,
    desp_vacuna_refuerzo smallint,
    desp_vacuna_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ssm_vacunas from "public";

{ TABLE ssm_validacion_vacuna row size = 19 number of columns = 5 index size = 9 }

create table ssm_validacion_vacuna 
  (
    validacion_id serial not null ,
    validacion_registro integer,
    validacion_fecha datetime year to day,
    validacion_catalogo integer,
    validacion_situacion smallint,
    primary key (validacion_id) 
  );

revoke all on ssm_validacion_vacuna from "public";

{ TABLE aud_ssm_validacion_vacuna row size = 58 number of columns = 13 index size = 0 }

create table aud_ssm_validacion_vacuna 
  (
    validacion_id integer,
    validacion_registro integer,
    validacion_fecha datetime year to day,
    validacion_catalogo integer,
    validacion_situacion smallint,
    desp_validacion_id integer,
    desp_validacion_registro integer,
    desp_validacion_fecha datetime year to day,
    desp_validacion_catalogo integer,
    desp_validacion_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_ssm_validacion_vacuna from "public";

{ TABLE dfdes_coop_amat row size = 165 number of columns = 18 index size = 71 }

create table dfdes_coop_amat 
  (
    dfcoop_catalogo integer not null ,
    dfcoop_codigo smallint not null ,
    dfcoop_nu_reg smallint not null ,
    dfcoop_cod_control smallint not null ,
    dfcoop_tipo_desc char(1) not null ,
    dfcoop_fec_ini date,
    dfcoop_ult_act date,
    dfcoop_fec_cer date,
    dfcoop_monto money(16,2) not null ,
    dfcoop_saldo money(16,2) not null ,
    dfcoop_mensual money(16,2) not null ,
    dfcoop_tot_cuotas smallint,
    dfcoop_num_cuotas smallint,
    dfcoop_documen char(6),
    dfcoop_codeudor integer,
    dfcoop_nom_bene char(50),
    dfcoop_juz_con char(50) not null ,
    dfcoop_si_no char(1),
    primary key (dfcoop_juz_con) 
  );

revoke all on dfdes_coop_amat from "public";

{ TABLE aud_dfdes_coop_amat row size = 350 number of columns = 39 index size = 0 }

create table aud_dfdes_coop_amat 
  (
    dfcoop_catalogo integer,
    dfcoop_codigo smallint,
    dfcoop_nu_reg smallint,
    dfcoop_cod_control smallint,
    dfcoop_tipo_desc char(1),
    dfcoop_fec_ini date,
    dfcoop_ult_act date,
    dfcoop_fec_cer date,
    dfcoop_monto money(16,2),
    dfcoop_saldo money(16,2),
    dfcoop_mensual money(16,2),
    dfcoop_tot_cuotas smallint,
    dfcoop_num_cuotas smallint,
    dfcoop_documen char(6),
    dfcoop_codeudor integer,
    dfcoop_nom_bene char(50),
    dfcoop_juz_con char(50),
    dfcoop_si_no char(1),
    desp_dfcoop_catalogo integer,
    desp_dfcoop_codigo smallint,
    desp_dfcoop_nu_reg smallint,
    desp_dfcoop_cod_control smallint,
    desp_dfcoop_tipo_desc char(1),
    desp_dfcoop_fec_ini date,
    desp_dfcoop_ult_act date,
    desp_dfcoop_fec_cer date,
    desp_dfcoop_monto money(16,2),
    desp_dfcoop_saldo money(16,2),
    desp_dfcoop_mensual money(16,2),
    desp_dfcoop_tot_cuotas smallint,
    desp_dfcoop_num_cuotas smallint,
    desp_dfcoop_documen char(6),
    desp_dfcoop_codeudor integer,
    desp_dfcoop_nom_bene char(50),
    desp_dfcoop_juz_con char(50),
    desp_dfcoop_si_no char(1),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dfdes_coop_amat from "public";

{ TABLE mper_firma row size = 66 number of columns = 4 index size = 18 }

create table mper_firma 
  (
    fir_id serial not null ,
    fir_catalogo integer not null ,
    fir_rubrica byte not null ,
    fir_situacion smallint,
    primary key (fir_id) 
  );

revoke all on mper_firma from "public";

{ TABLE aud_mper_firma row size = 152 number of columns = 11 index size = 0 }

create table aud_mper_firma 
  (
    fir_id integer,
    fir_catalogo integer,
    fir_rubrica byte,
    fir_situacion smallint,
    desp_fir_id integer,
    desp_fir_catalogo integer,
    desp_fir_rubrica byte,
    desp_fir_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mper_firma from "public";

{ TABLE f_asig_desc row size = 284 number of columns = 9 index size = 41 }

create table f_asig_desc 
  (
    asig_desc_id serial not null ,
    asig_desc_cat integer,
    asig_desc_plaza integer,
    asig_desc_monto money(16,2),
    asig_desc_codigo_des smallint,
    asig_desc_codigo_as smallint,
    asig_desc_observaciones varchar(250),
    asig_desc_tipo integer,
    asig_desc_situacion integer,
    primary key (asig_desc_id) 
  );

revoke all on f_asig_desc from "public";

{ TABLE aud_f_asig_desc row size = 588 number of columns = 21 index size = 0 }

create table aud_f_asig_desc 
  (
    asig_desc_id integer,
    asig_desc_cat integer,
    asig_desc_plaza integer,
    asig_desc_monto money(16,2),
    asig_desc_codigo_des smallint,
    asig_desc_codigo_as smallint,
    asig_desc_observaciones varchar(250),
    asig_desc_tipo integer,
    asig_desc_situacion integer,
    desp_asig_desc_id integer,
    desp_asig_desc_cat integer,
    desp_asig_desc_plaza integer,
    desp_asig_desc_monto money(16,2),
    desp_asig_desc_codigo_des smallint,
    desp_asig_desc_codigo_as smallint,
    desp_asig_desc_observaciones varchar(250),
    desp_asig_desc_tipo integer,
    desp_asig_desc_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_f_asig_desc from "public";

{ TABLE aud_mper_otros row size = 1140 number of columns = 23 index size = 0 }

create table aud_mper_otros 
  (
    oper_catalogo integer,
    oper_nit varchar(16),
    oper_celular_personal integer,
    oper_celular_servicio integer,
    oper_correo_institucional varchar(50),
    oper_correo_personal varchar(50),
    oper_obs varchar(125),
    oper_desc1 varchar(100),
    oper_desc2 varchar(100),
    oper_desc3 varchar(100),
    desp_oper_catalogo integer,
    desp_oper_nit varchar(16),
    desp_oper_celular_personal integer,
    desp_oper_celular_servicio integer,
    desp_oper_correo_institucional varchar(50),
    desp_oper_correo_personal varchar(50),
    desp_oper_obs varchar(125),
    desp_oper_desc1 varchar(100),
    desp_oper_desc2 varchar(100),
    desp_oper_desc3 varchar(100),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_mper_otros from "public";

{ TABLE mper_otros row size = 560 number of columns = 10 index size = 9 }

create table mper_otros 
  (
    oper_catalogo integer not null ,
    oper_nit varchar(16),
    oper_celular_personal integer,
    oper_celular_servicio integer,
    oper_correo_institucional varchar(50),
    oper_correo_personal varchar(50),
    oper_obs varchar(125),
    oper_desc1 varchar(100),
    oper_desc2 varchar(100),
    oper_desc3 varchar(100),
    primary key (oper_catalogo)  constraint pk_oper_catalogo
  );

revoke all on mper_otros from "public";

{ TABLE sig_tiempo_alimentacion row size = 17 number of columns = 3 index size = 9 }

create table sig_tiempo_alimentacion 
  (
    tiempo_codigo serial not null ,
    tiempo_descripcion varchar(10),
    tiempo_situacion smallint,
    primary key (tiempo_codigo) 
  );

revoke all on sig_tiempo_alimentacion from "public";

{ TABLE aud_sig_tiempo_alimentacion row size = 54 number of columns = 9 index size = 0 }

create table aud_sig_tiempo_alimentacion 
  (
    tiempo_codigo integer,
    tiempo_descripcion varchar(10),
    tiempo_situacion smallint,
    desp_tiempo_codigo integer,
    desp_tiempo_descripcion varchar(10),
    desp_tiempo_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_tiempo_alimentacion from "public";

{ TABLE sig_menu row size = 266 number of columns = 4 index size = 18 }

create table sig_menu 
  (
    menu_codigo serial not null ,
    menu_tipo integer,
    menu_descripcion varchar(255),
    menu_situacion smallint,
    primary key (menu_codigo) 
  );

revoke all on sig_menu from "public";

{ TABLE aud_sig_menu row size = 552 number of columns = 11 index size = 0 }

create table aud_sig_menu 
  (
    menu_codigo integer,
    menu_tipo integer,
    menu_descripcion varchar(255),
    menu_situacion smallint,
    desp_menu_codigo integer,
    desp_menu_tipo integer,
    desp_menu_descripcion varchar(255),
    desp_menu_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_menu from "public";

{ TABLE sig_programa_alimentacion row size = 12 number of columns = 3 index size = 18 }

create table sig_programa_alimentacion 
  (
    alim_codigo serial not null ,
    alim_menu integer,
    alim_fecha date,
    primary key (alim_codigo) 
  );

revoke all on sig_programa_alimentacion from "public";

{ TABLE aud_sig_programa_alimentacion row size = 44 number of columns = 9 index size = 0 }

create table aud_sig_programa_alimentacion 
  (
    alim_codigo integer,
    alim_menu integer,
    alim_fecha date,
    desp_alim_codigo integer,
    desp_alim_menu integer,
    desp_alim_fecha date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_programa_alimentacion from "public";

{ TABLE sig_asignacion row size = 18 number of columns = 5 index size = 18 }

create table sig_asignacion 
  (
    asig_codigo serial not null ,
    asig_menu integer,
    asig_catalogo integer,
    asig_fecha date,
    asig_situacion smallint,
    primary key (asig_codigo) 
  );

revoke all on sig_asignacion from "public";

{ TABLE aud_sig_asignacion row size = 56 number of columns = 13 index size = 0 }

create table aud_sig_asignacion 
  (
    asig_codigo integer,
    asig_menu integer,
    asig_catalogo integer,
    asig_fecha date,
    asig_situacion smallint,
    desp_asig_codigo integer,
    desp_asig_menu integer,
    desp_asig_catalogo integer,
    desp_asig_fecha date,
    desp_asig_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_sig_asignacion from "public";

{ TABLE municion_situacion row size = 157 number of columns = 3 index size = 0 }

create table municion_situacion 
  (
    sit_id serial not null ,
    sit_descripcion varchar(150) not null ,
    sit_situacion smallint
  );

revoke all on municion_situacion from "public";

{ TABLE aud_municion_situacion row size = 334 number of columns = 9 index size = 0 }

create table aud_municion_situacion 
  (
    sit_id integer,
    sit_descripcion varchar(150),
    sit_situacion smallint,
    desp_sit_id integer,
    desp_sit_descripcion varchar(150),
    desp_sit_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_municion_situacion from "public";

{ TABLE municion_organizacion row size = 115 number of columns = 5 index size = 9 }

create table municion_organizacion 
  (
    org_id serial not null ,
    org_id_dependencia integer,
    org_jerarquia integer,
    org_nombre varchar(100),
    org_situacion smallint,
    primary key (org_id) 
  );

revoke all on municion_organizacion from "public";

{ TABLE aud_municion_organizacion row size = 250 number of columns = 13 index size = 0 }

create table aud_municion_organizacion 
  (
    org_id integer,
    org_id_dependencia integer,
    org_jerarquia integer,
    org_nombre varchar(100),
    org_situacion smallint,
    desp_org_id integer,
    desp_org_id_dependencia integer,
    desp_org_jerarquia integer,
    desp_org_nombre varchar(100),
    desp_org_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_municion_organizacion from "public";

{ TABLE municion_lote row size = 157 number of columns = 3 index size = 0 }

create table municion_lote 
  (
    lot_id serial not null ,
    lot_descripcion varchar(150) not null ,
    lot_situacion smallint
  );

revoke all on municion_lote from "public";

{ TABLE aud_municion_lote row size = 334 number of columns = 9 index size = 0 }

create table aud_municion_lote 
  (
    lot_id integer,
    lot_descripcion varchar(150),
    lot_situacion smallint,
    desp_lot_id integer,
    desp_lot_descripcion varchar(150),
    desp_lot_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_municion_lote from "public";

{ TABLE municion_calibre row size = 157 number of columns = 3 index size = 0 }

create table municion_calibre 
  (
    cal_id serial not null ,
    cal_descripcion varchar(150) not null ,
    cal_situacion smallint
  );

revoke all on municion_calibre from "public";

{ TABLE aud_municion_calibre row size = 334 number of columns = 9 index size = 0 }

create table aud_municion_calibre 
  (
    cal_id integer,
    cal_descripcion varchar(150),
    cal_situacion smallint,
    desp_cal_id integer,
    desp_cal_descripcion varchar(150),
    desp_cal_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_municion_calibre from "public";

{ TABLE municion_ingresofab row size = 445 number of columns = 14 index size = 16 }

create table municion_ingresofab 
  (
    ifab_id serial not null ,
    ifab_lote integer,
    ifab_calibre integer,
    ifab_cantidad integer,
    ifab_motivo integer,
    ifab_documento varchar(150),
    ifab_observaciones varchar(250),
    ifab_movimiento smallint,
    ifab_fecha datetime year to minute,
    ifab_departamentosalida smallint,
    ifab_departamento smallint,
    ifab_catalogo integer not null ,
    ifab_catalogosalida integer not null ,
    ifab_situacion smallint
  );

revoke all on municion_ingresofab from "public";

{ TABLE aud_municion_ingresofab row size = 910 number of columns = 31 index size = 0 }

create table aud_municion_ingresofab 
  (
    ifab_id integer,
    ifab_lote integer,
    ifab_calibre integer,
    ifab_cantidad integer,
    ifab_motivo integer,
    ifab_documento varchar(150),
    ifab_observaciones varchar(250),
    ifab_movimiento smallint,
    ifab_fecha datetime year to minute,
    ifab_departamentosalida smallint,
    ifab_departamento smallint,
    ifab_catalogo integer,
    ifab_catalogosalida integer,
    ifab_situacion smallint,
    desp_ifab_id integer,
    desp_ifab_lote integer,
    desp_ifab_calibre integer,
    desp_ifab_cantidad integer,
    desp_ifab_motivo integer,
    desp_ifab_documento varchar(150),
    desp_ifab_observaciones varchar(250),
    desp_ifab_movimiento smallint,
    desp_ifab_fecha datetime year to minute,
    desp_ifab_departamentosalida smallint,
    desp_ifab_departamento smallint,
    desp_ifab_catalogo integer,
    desp_ifab_catalogosalida integer,
    desp_ifab_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_municion_ingresofab from "public";

{ TABLE eva_bol_asimilado row size = 368 number of columns = 18 index size = 107 }

create table eva_bol_asimilado 
  (
    asim_cat_evaluado integer not null ,
    asim_anio varchar(50) not null ,
    asim_cat_evaluador integer not null ,
    asim_ceom char(6),
    asim_perfil integer not null ,
    asim_pafe integer not null ,
    asim_eva1 integer,
    asim_eva2 integer,
    asim_eva3 integer,
    asim_eva4 integer,
    asim_demeritos integer not null ,
    asim_arrestos integer not null ,
    asim_total_salud integer not null ,
    asim_total_concep integer not null ,
    asim_total integer not null ,
    asim_cat_g1 integer not null ,
    asim_cat_comte integer not null ,
    asim_obs varchar(250),
    primary key (asim_cat_evaluado,asim_anio) 
  );

revoke all on eva_bol_asimilado from "public";

{ TABLE aud_eva_bol_asimilado row size = 756 number of columns = 39 index size = 0 }

create table aud_eva_bol_asimilado 
  (
    asim_cat_evaluado integer,
    asim_anio varchar(50),
    asim_cat_evaluador integer,
    asim_ceom char(6),
    asim_perfil integer,
    asim_pafe integer,
    asim_eva1 integer,
    asim_eva2 integer,
    asim_eva3 integer,
    asim_eva4 integer,
    asim_demeritos integer,
    asim_arrestos integer,
    asim_total_salud integer,
    asim_total_concep integer,
    asim_total integer,
    asim_cat_g1 integer,
    asim_cat_comte integer,
    asim_obs varchar(250),
    desp_asim_cat_evaluado integer,
    desp_asim_anio varchar(50),
    desp_asim_cat_evaluador integer,
    desp_asim_ceom char(6),
    desp_asim_perfil integer,
    desp_asim_pafe integer,
    desp_asim_eva1 integer,
    desp_asim_eva2 integer,
    desp_asim_eva3 integer,
    desp_asim_eva4 integer,
    desp_asim_demeritos integer,
    desp_asim_arrestos integer,
    desp_asim_total_salud integer,
    desp_asim_total_concep integer,
    desp_asim_total integer,
    desp_asim_cat_g1 integer,
    desp_asim_cat_comte integer,
    desp_asim_obs varchar(250),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_bol_asimilado from "public";

{ TABLE inv_estado row size = 82 number of columns = 3 index size = 9 }

create table inv_estado 
  (
    est_id serial not null ,
    est_descripcion varchar(75),
    est_situacion smallint 
        default 1,
    primary key (est_id) 
  );

revoke all on inv_estado from "public";

{ TABLE aud_inv_estado row size = 184 number of columns = 9 index size = 0 }

create table aud_inv_estado 
  (
    est_id integer,
    est_descripcion varchar(75),
    est_situacion smallint,
    desp_est_id integer,
    desp_est_descripcion varchar(75),
    desp_est_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_estado from "public";

{ TABLE manto_equipo_estado row size = 107 number of columns = 3 index size = 9 }

create table manto_equipo_estado 
  (
    equipo_estado_codigo serial not null ,
    equipo_estado_descripcion varchar(100),
    equipo_estado_detalle_situacion smallint 
        default 1,
    primary key (equipo_estado_codigo) 
  );

revoke all on manto_equipo_estado from "public";

{ TABLE aud_manto_equipo_estado row size = 234 number of columns = 9 index size = 0 }

create table aud_manto_equipo_estado 
  (
    equipo_estado_codigo integer,
    equipo_estado_descripcion varchar(100),
    equipo_estado_detalle_situacion smallint,
    desp_equipo_estado_codigo integer,
    desp_equipo_estado_descripcion varchar(100),
    desp_equipo_estado_detalle_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_manto_equipo_estado from "public";

{ TABLE manto_marca_equipo row size = 107 number of columns = 3 index size = 9 }

create table manto_marca_equipo 
  (
    marca_equipo_codigo serial not null ,
    marca_equipo_descripcion varchar(100),
    marca_equipo_situacion smallint,
    primary key (marca_equipo_codigo) 
  );

revoke all on manto_marca_equipo from "public";

{ TABLE aud_manto_marca_equipo row size = 234 number of columns = 9 index size = 0 }

create table aud_manto_marca_equipo 
  (
    marca_equipo_codigo integer,
    marca_equipo_descripcion varchar(100),
    marca_equipo_situacion smallint,
    desp_marca_equipo_codigo integer,
    desp_marca_equipo_descripcion varchar(100),
    desp_marca_equipo_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_manto_marca_equipo from "public";

{ TABLE manto_tipo_equipo row size = 107 number of columns = 3 index size = 9 }

create table manto_tipo_equipo 
  (
    tipo_equipo_codigo serial not null ,
    tipo_equipo_descripcion varchar(100),
    tipo_equipo_detalle_situacion smallint 
        default 1,
    primary key (tipo_equipo_codigo) 
  );

revoke all on manto_tipo_equipo from "public";

{ TABLE aud_manto_tipo_equipo row size = 234 number of columns = 9 index size = 0 }

create table aud_manto_tipo_equipo 
  (
    tipo_equipo_codigo integer,
    tipo_equipo_descripcion varchar(100),
    tipo_equipo_detalle_situacion smallint,
    desp_tipo_equipo_codigo integer,
    desp_tipo_equipo_descripcion varchar(100),
    desp_tipo_equipo_detalle_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_manto_tipo_equipo from "public";

{ TABLE manto_equipo row size = 1367 number of columns = 26 index size = 43 }

create table manto_equipo 
  (
    equipo_codigo serial not null ,
    equipo_oficio varchar(255),
    equipo_dependencia smallint,
    equipo_motivo varchar(255),
    equipo_modelo varchar(50),
    equipo_serial varchar(50),
    equipo_lector_cd varchar(2) 
        default null,
    equipo_tarjeta_sonido varchar(2) 
        default null,
    equipo_drivers varchar(2) 
        default null,
    equipo_tarjeta_grafica varchar(2) 
        default null,
    equipo_fuente_poder varchar(2) 
        default null,
    equipo_tipo_disco_duro varchar(50) 
        default null,
    equipo_capacidad_disco_duro varchar(50) 
        default null,
    equipo_tipo_memoria_ram varchar(50) 
        default null,
    equipo_capacidad_memoria_ram varchar(50) 
        default null,
    equipo_velocidad_memoria_ram varchar(50) 
        default null,
    equipo_tipo_procesador varchar(50) 
        default null,
    equipo_velocidad_procesador varchar(50) 
        default null,
    equipo_targeta_red varchar(50) 
        default null,
    equipo_tipo_impresora varchar(50) 
        default null,
    equipo_con_cable varchar(2),
    equipo_marca integer,
    equipo_tipo integer,
    equipo_descripcion varchar(255),
    equipo_estado integer,
    equipo_detalle_situacion smallint 
        default 1,
    primary key (equipo_codigo) 
  );

revoke all on manto_equipo from "public";

{ TABLE aud_manto_equipo row size = 2754 number of columns = 55 index size = 0 }

create table aud_manto_equipo 
  (
    equipo_codigo integer,
    equipo_oficio varchar(255),
    equipo_dependencia smallint,
    equipo_motivo varchar(255),
    equipo_modelo varchar(50),
    equipo_serial varchar(50),
    equipo_lector_cd varchar(2),
    equipo_tarjeta_sonido varchar(2),
    equipo_drivers varchar(2),
    equipo_tarjeta_grafica varchar(2),
    equipo_fuente_poder varchar(2),
    equipo_tipo_disco_duro varchar(50),
    equipo_capacidad_disco_duro varchar(50),
    equipo_tipo_memoria_ram varchar(50),
    equipo_capacidad_memoria_ram varchar(50),
    equipo_velocidad_memoria_ram varchar(50),
    equipo_tipo_procesador varchar(50),
    equipo_velocidad_procesador varchar(50),
    equipo_targeta_red varchar(50),
    equipo_tipo_impresora varchar(50),
    equipo_con_cable varchar(2),
    equipo_marca integer,
    equipo_tipo integer,
    equipo_descripcion varchar(255),
    equipo_estado integer,
    equipo_detalle_situacion smallint,
    desp_equipo_codigo integer,
    desp_equipo_oficio varchar(255),
    desp_equipo_dependencia smallint,
    desp_equipo_motivo varchar(255),
    desp_equipo_modelo varchar(50),
    desp_equipo_serial varchar(50),
    desp_equipo_lector_cd varchar(2),
    desp_equipo_tarjeta_sonido varchar(2),
    desp_equipo_drivers varchar(2),
    desp_equipo_tarjeta_grafica varchar(2),
    desp_equipo_fuente_poder varchar(2),
    desp_equipo_tipo_disco_duro varchar(50),
    desp_equipo_capacidad_disco_duro varchar(50),
    desp_equipo_tipo_memoria_ram varchar(50),
    desp_equipo_capacidad_memoria_ram varchar(50),
    desp_equipo_velocidad_memoria_ram varchar(50),
    desp_equipo_tipo_procesador varchar(50),
    desp_equipo_velocidad_procesador varchar(50),
    desp_equipo_targeta_red varchar(50),
    desp_equipo_tipo_impresora varchar(50),
    desp_equipo_con_cable varchar(2),
    desp_equipo_marca integer,
    desp_equipo_tipo integer,
    desp_equipo_descripcion varchar(255),
    desp_equipo_estado integer,
    desp_equipo_detalle_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_manto_equipo from "public";

{ TABLE manto_entrega row size = 29 number of columns = 7 index size = 36 }

create table manto_entrega 
  (
    ent_codigo serial not null ,
    ent_fecha datetime year to minute 
        default current year to minute,
    ent_usuario_catalogo integer,
    ent_usuario_numero integer,
    ent_tecnico_catalogo integer,
    ent_equipo_codigo integer,
    ent_detalle_situacion smallint 
        default 1,
    primary key (ent_codigo) 
  );

revoke all on manto_entrega from "public";

{ TABLE aud_manto_entrega row size = 78 number of columns = 17 index size = 0 }

create table aud_manto_entrega 
  (
    ent_codigo integer,
    ent_fecha datetime year to minute 
        default current year to minute,
    ent_usuario_catalogo integer,
    ent_usuario_numero integer,
    ent_tecnico_catalogo integer,
    ent_equipo_codigo integer,
    ent_detalle_situacion smallint,
    desp_ent_codigo integer,
    desp_ent_fecha datetime year to minute 
        default current year to minute,
    desp_ent_usuario_catalogo integer,
    desp_ent_usuario_numero integer,
    desp_ent_tecnico_catalogo integer,
    desp_ent_equipo_codigo integer,
    desp_ent_detalle_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_manto_entrega from "public";

{ TABLE manto_solicitud row size = 285 number of columns = 8 index size = 36 }

create table manto_solicitud 
  (
    sol_codigo serial not null ,
    sol_fecha datetime year to minute 
        default current year to minute,
    sol_usuario_catalogo integer,
    sol_usuario_telefono integer,
    sol_tecnico_catalogo integer,
    sol_observacion varchar(255),
    sol_detalle_situacion smallint 
        default 1,
    sol_equipo_codigo integer,
    primary key (sol_codigo) 
  );

revoke all on manto_solicitud from "public";

{ TABLE aud_manto_solicitud row size = 590 number of columns = 19 index size = 0 }

create table aud_manto_solicitud 
  (
    sol_codigo integer,
    sol_fecha datetime year to minute 
        default current year to minute,
    sol_usuario_catalogo integer,
    sol_usuario_telefono integer,
    sol_tecnico_catalogo integer,
    sol_observacion varchar(255),
    sol_detalle_situacion smallint,
    sol_equipo_codigo integer,
    desp_sol_codigo integer,
    desp_sol_fecha datetime year to minute 
        default current year to minute,
    desp_sol_usuario_catalogo integer,
    desp_sol_usuario_telefono integer,
    desp_sol_tecnico_catalogo integer,
    desp_sol_observacion varchar(255),
    desp_sol_detalle_situacion smallint,
    desp_sol_equipo_codigo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_manto_solicitud from "public";

{ TABLE manto_reparacion row size = 533 number of columns = 7 index size = 27 }

create table manto_reparacion 
  (
    rep_codigo serial not null ,
    rep_fecha datetime year to minute 
        default current year to minute,
    rep_tecnico_catalogo integer,
    rep_descripcion varchar(255),
    rep_notificacion varchar(255),
    rep_detalle_situacion smallint 
        default 1,
    rep_equipo_codigo integer,
    primary key (rep_codigo) 
  );

revoke all on manto_reparacion from "public";

{ TABLE aud_manto_reparacion row size = 1086 number of columns = 17 index size = 0 }

create table aud_manto_reparacion 
  (
    rep_codigo integer,
    rep_fecha datetime year to minute 
        default current year to minute,
    rep_tecnico_catalogo integer,
    rep_descripcion varchar(255),
    rep_notificacion varchar(255),
    rep_detalle_situacion smallint,
    rep_equipo_codigo integer,
    desp_rep_codigo integer,
    desp_rep_fecha datetime year to minute 
        default current year to minute,
    desp_rep_tecnico_catalogo integer,
    desp_rep_descripcion varchar(255),
    desp_rep_notificacion varchar(255),
    desp_rep_detalle_situacion smallint,
    desp_rep_equipo_codigo integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_manto_reparacion from "public";

{ TABLE manto_equipo_historial row size = 23 number of columns = 6 index size = 27 }

create table manto_equipo_historial 
  (
    equi_his_codigo serial not null ,
    equi_his_codigo_equipo integer,
    equi_his_codigo_solicitud integer,
    equi_his_fecha datetime year to minute 
        default current year to minute,
    equi_his_estado smallint,
    equi_his_situacion smallint 
        default 1,
    primary key (equi_his_codigo) 
  );

revoke all on manto_equipo_historial from "public";

{ TABLE aud_manto_equipo_historial row size = 66 number of columns = 15 index size = 0 }

create table aud_manto_equipo_historial 
  (
    equi_his_codigo integer,
    equi_his_codigo_equipo integer,
    equi_his_codigo_solicitud integer,
    equi_his_fecha datetime year to minute 
        default current year to minute,
    equi_his_estado smallint,
    equi_his_situacion smallint,
    desp_equi_his_codigo integer,
    desp_equi_his_codigo_equipo integer,
    desp_equi_his_codigo_solicitud integer,
    desp_equi_his_fecha datetime year to minute 
        default current year to minute,
    desp_equi_his_estado smallint,
    desp_equi_his_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_manto_equipo_historial from "public";

{ TABLE municion_almacencomando row size = 445 number of columns = 14 index size = 25 }

create table municion_almacencomando 
  (
    acom_id serial not null ,
    acom_lote integer,
    acom_calibre integer,
    acom_cantidad integer,
    acom_motivo integer,
    acom_documento varchar(150),
    acom_observaciones varchar(250),
    acom_movimiento smallint,
    acom_fecha datetime year to minute not null ,
    acom_departamentosalida smallint,
    acom_departamento smallint,
    acom_catalogo integer,
    acom_catalogosalida integer,
    acom_situacion smallint
  );

revoke all on municion_almacencomando from "public";

{ TABLE aud_municion_almacencomando row size = 910 number of columns = 31 index size = 0 }

create table aud_municion_almacencomando 
  (
    acom_id integer,
    acom_lote integer,
    acom_calibre integer,
    acom_cantidad integer,
    acom_motivo integer,
    acom_documento varchar(150),
    acom_observaciones varchar(250),
    acom_movimiento smallint,
    acom_fecha datetime year to minute,
    acom_departamentosalida smallint,
    acom_departamento smallint,
    acom_catalogo integer,
    acom_catalogosalida integer,
    acom_situacion smallint,
    desp_acom_id integer,
    desp_acom_lote integer,
    desp_acom_calibre integer,
    desp_acom_cantidad integer,
    desp_acom_motivo integer,
    desp_acom_documento varchar(150),
    desp_acom_observaciones varchar(250),
    desp_acom_movimiento smallint,
    desp_acom_fecha datetime year to minute,
    desp_acom_departamentosalida smallint,
    desp_acom_departamento smallint,
    desp_acom_catalogo integer,
    desp_acom_catalogosalida integer,
    desp_acom_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_municion_almacencomando from "public";

{ TABLE municion_batallon row size = 445 number of columns = 14 index size = 25 }

create table municion_batallon 
  (
    bat_id serial not null ,
    bat_lote integer,
    bat_calibre integer,
    bat_cantidad integer,
    bat_motivo integer,
    bat_documento varchar(150),
    bat_observaciones varchar(250),
    bat_movimiento smallint,
    bat_fecha datetime year to minute not null ,
    bat_departamento smallint,
    bat_batallon smallint,
    bat_catalogo integer,
    bat_catalogosalida integer,
    bat_situacion smallint
  );

revoke all on municion_batallon from "public";

{ TABLE aud_municion_batallon row size = 910 number of columns = 31 index size = 0 }

create table aud_municion_batallon 
  (
    bat_id integer,
    bat_lote integer,
    bat_calibre integer,
    bat_cantidad integer,
    bat_motivo integer,
    bat_documento varchar(150),
    bat_observaciones varchar(250),
    bat_movimiento smallint,
    bat_fecha datetime year to minute,
    bat_departamento smallint,
    bat_batallon smallint,
    bat_catalogo integer,
    bat_catalogosalida integer,
    bat_situacion smallint,
    desp_bat_id integer,
    desp_bat_lote integer,
    desp_bat_calibre integer,
    desp_bat_cantidad integer,
    desp_bat_motivo integer,
    desp_bat_documento varchar(150),
    desp_bat_observaciones varchar(250),
    desp_bat_movimiento smallint,
    desp_bat_fecha datetime year to minute,
    desp_bat_departamento smallint,
    desp_bat_batallon smallint,
    desp_bat_catalogo integer,
    desp_bat_catalogosalida integer,
    desp_bat_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_municion_batallon from "public";

{ TABLE municion_ingresoalmacen row size = 445 number of columns = 14 index size = 16 }

create table municion_ingresoalmacen 
  (
    ialm_id serial not null ,
    ialm_lote integer,
    ialm_calibre integer,
    ialm_cantidad integer,
    ialm_motivo integer,
    ialm_documento varchar(150),
    ialm_observaciones varchar(250),
    ialm_movimiento smallint,
    ialm_fecha datetime year to minute,
    ialm_departamentosalida smallint,
    ialm_departamento smallint,
    ialm_catalogo integer,
    ialm_catalogosalida integer,
    ialm_situacion smallint
  );

revoke all on municion_ingresoalmacen from "public";

{ TABLE aud_municion_ingresoalmacen row size = 910 number of columns = 31 index size = 0 }

create table aud_municion_ingresoalmacen 
  (
    ialm_id integer,
    ialm_lote integer,
    ialm_calibre integer,
    ialm_cantidad integer,
    ialm_motivo integer,
    ialm_documento varchar(150),
    ialm_observaciones varchar(250),
    ialm_movimiento smallint,
    ialm_fecha datetime year to minute,
    ialm_departamentosalida smallint,
    ialm_departamento smallint,
    ialm_catalogo integer,
    ialm_catalogosalida integer,
    ialm_situacion smallint,
    desp_ialm_id integer,
    desp_ialm_lote integer,
    desp_ialm_calibre integer,
    desp_ialm_cantidad integer,
    desp_ialm_motivo integer,
    desp_ialm_documento varchar(150),
    desp_ialm_observaciones varchar(250),
    desp_ialm_movimiento smallint,
    desp_ialm_fecha datetime year to minute,
    desp_ialm_departamentosalida smallint,
    desp_ialm_departamento smallint,
    desp_ialm_catalogo integer,
    desp_ialm_catalogosalida integer,
    desp_ialm_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_municion_ingresoalmacen from "public";

{ TABLE f_cat_eliminado_r22 row size = 172 number of columns = 5 index size = 27 }

create table f_cat_eliminado_r22 
  (
    fin_elim_id serial not null ,
    fin_elim_cat_finanzas integer,
    fin_elim_fecha date,
    fin_elim_observaciones varchar(155),
    fin_elim_cat_quitado integer,
    primary key (fin_elim_id) 
  );

revoke all on f_cat_eliminado_r22 from "public";

{ TABLE aud_f_cat_eliminado_r22 row size = 364 number of columns = 13 index size = 0 }

create table aud_f_cat_eliminado_r22 
  (
    fin_elim_id integer,
    fin_elim_cat_finanzas integer,
    fin_elim_fecha date,
    fin_elim_observaciones varchar(155),
    fin_elim_cat_quitado integer,
    desp_fin_elim_id integer,
    desp_fin_elim_cat_finanzas integer,
    desp_fin_elim_fecha date,
    desp_fin_elim_observaciones varchar(155),
    desp_fin_elim_cat_quitado integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_f_cat_eliminado_r22 from "public";

{ TABLE inv_almacenes row size = 522 number of columns = 6 index size = 23 }

create table inv_almacenes 
  (
    alma_id serial not null ,
    alma_nombre varchar(255) not null ,
    alma_clase smallint,
    alma_descripcion varchar(255),
    alma_unidad smallint not null ,
    alma_situacion smallint 
        default 1,
    primary key (alma_id) 
  );

revoke all on inv_almacenes from "public";

{ TABLE aud_inv_almacenes row size = 1064 number of columns = 15 index size = 0 }

create table aud_inv_almacenes 
  (
    alma_id integer,
    alma_nombre varchar(255),
    alma_clase smallint,
    alma_descripcion varchar(255),
    alma_unidad smallint,
    alma_situacion smallint,
    desp_alma_id integer,
    desp_alma_nombre varchar(255),
    desp_alma_clase smallint,
    desp_alma_descripcion varchar(255),
    desp_alma_unidad smallint,
    desp_alma_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_almacenes from "public";

{ TABLE inv_movimientos row size = 286 number of columns = 11 index size = 52 }

create table inv_movimientos 
  (
    mov_id serial not null ,
    mov_tipo_mov char(1),
    mov_tipo_trans char(1),
    mov_alma_id integer not null ,
    mov_perso_entrega integer not null ,
    mov_perso_recibe integer not null ,
    mov_perso_respon integer,
    mov_fecha date not null ,
    mov_proce_destino smallint,
    mov_descrip varchar(255),
    mov_situacion smallint 
        default 1,
    primary key (mov_id) 
  );

revoke all on inv_movimientos from "public";

{ TABLE aud_inv_movimientos row size = 592 number of columns = 25 index size = 0 }

create table aud_inv_movimientos 
  (
    mov_id integer,
    mov_tipo_mov char(1),
    mov_tipo_trans char(1),
    mov_alma_id integer,
    mov_perso_entrega integer,
    mov_perso_recibe integer,
    mov_perso_respon integer,
    mov_fecha date,
    mov_proce_destino smallint,
    mov_descrip varchar(255),
    mov_situacion smallint,
    desp_mov_id integer,
    desp_mov_tipo_mov char(1),
    desp_mov_tipo_trans char(1),
    desp_mov_alma_id integer,
    desp_mov_perso_entrega integer,
    desp_mov_perso_recibe integer,
    desp_mov_perso_respon integer,
    desp_mov_fecha date,
    desp_mov_proce_destino smallint,
    desp_mov_descrip varchar(255),
    desp_mov_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_movimientos from "public";

{ TABLE inv_producto row size = 2315 number of columns = 5 index size = 16 }

create table inv_producto 
  (
    pro_id serial not null ,
    pro_clase_id smallint not null ,
    pro_nom_articulo varchar(255) not null ,
    pro_descripcion lvarchar,
    pro_situacion smallint 
        default 1,
    primary key (pro_id) 
  );

revoke all on inv_producto from "public";

{ TABLE aud_inv_producto row size = 4650 number of columns = 13 index size = 0 }

create table aud_inv_producto 
  (
    pro_id integer,
    pro_clase_id smallint,
    pro_nom_articulo varchar(255),
    pro_descripcion lvarchar,
    pro_situacion smallint,
    desp_pro_id integer,
    desp_pro_clase_id smallint,
    desp_pro_nom_articulo varchar(255),
    desp_pro_descripcion lvarchar,
    desp_pro_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_producto from "public";

{ TABLE inv_uni_med row size = 264 number of columns = 4 index size = 16 }

create table inv_uni_med 
  (
    uni_id serial not null ,
    uni_nombre varchar(255),
    uni_clase smallint,
    uni_situacion smallint 
        default 1,
    primary key (uni_id) 
  );

revoke all on inv_uni_med from "public";

{ TABLE aud_inv_uni_med row size = 548 number of columns = 11 index size = 0 }

create table aud_inv_uni_med 
  (
    uni_id integer,
    uni_nombre varchar(255),
    uni_clase smallint,
    uni_situacion smallint,
    desp_uni_id integer,
    desp_uni_nombre varchar(255),
    desp_uni_clase smallint,
    desp_uni_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_uni_med from "public";

{ TABLE inv_guarda_almacen row size = 14 number of columns = 4 index size = 27 }

create table inv_guarda_almacen 
  (
    guarda_id serial not null ,
    guarda_catalogo integer not null ,
    guarda_almacen integer not null ,
    guarda_situacion smallint 
        default 1,
    primary key (guarda_id) 
  );

revoke all on inv_guarda_almacen from "public";

{ TABLE aud_inv_guarda_almacen row size = 48 number of columns = 11 index size = 0 }

create table aud_inv_guarda_almacen 
  (
    guarda_id integer,
    guarda_catalogo integer,
    guarda_almacen integer,
    guarda_situacion smallint,
    desp_guarda_id integer,
    desp_guarda_catalogo integer,
    desp_guarda_almacen integer,
    desp_guarda_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_guarda_almacen from "public";

{ TABLE inv_deta_movimientos row size = 2146 number of columns = 12 index size = 45 }

create table inv_deta_movimientos 
  (
    det_id serial not null ,
    det_mov_id integer not null ,
    det_pro_id integer not null ,
    det_uni_med integer not null ,
    det_lote varchar(50),
    det_fecha_vence date,
    det_estado integer,
    det_cantidad decimal(10,2) not null ,
    det_cantidad_existente decimal(10,2),
    det_cantidad_lote decimal(10,2),
    det_observaciones lvarchar,
    det_situacion smallint 
        default 1,
    primary key (det_id) 
  );

revoke all on inv_deta_movimientos from "public";

{ TABLE aud_inv_deta_movimientos row size = 4312 number of columns = 27 index size = 0 }

create table aud_inv_deta_movimientos 
  (
    det_id integer,
    det_mov_id integer,
    det_pro_id integer,
    det_uni_med integer,
    det_lote varchar(50),
    det_fecha_vence date,
    det_estado integer,
    det_cantidad decimal(10,2),
    det_cantidad_existente decimal(10,2),
    det_cantidad_lote decimal(10,2),
    det_observaciones lvarchar,
    det_situacion smallint,
    desp_det_id integer,
    desp_det_mov_id integer,
    desp_det_pro_id integer,
    desp_det_uni_med integer,
    desp_det_lote varchar(50),
    desp_det_fecha_vence date,
    desp_det_estado integer,
    desp_det_cantidad decimal(10,2),
    desp_det_cantidad_existente decimal(10,2),
    desp_det_cantidad_lote decimal(10,2),
    desp_det_observaciones lvarchar,
    desp_det_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_inv_deta_movimientos from "public";

{ TABLE firma_registro row size = 12 number of columns = 4 index size = 18 }

create table firma_registro 
  (
    fir_reg_id serial not null ,
    fir_reg_cat integer,
    fir_reg_tipo smallint,
    fir_reg_sit smallint,
    primary key (fir_reg_id) 
  );

revoke all on firma_registro from "public";

{ TABLE aud_firma_registro row size = 44 number of columns = 11 index size = 0 }

create table aud_firma_registro 
  (
    fir_reg_id integer,
    fir_reg_cat integer,
    fir_reg_tipo smallint,
    fir_reg_sit smallint,
    desp_fir_reg_id integer,
    desp_fir_reg_cat integer,
    desp_fir_reg_tipo smallint,
    desp_fir_reg_sit smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_firma_registro from "public";

{ TABLE coc_unidad_organica row size = 57 number of columns = 3 index size = 0 }

create table coc_unidad_organica 
  (
    uni_org_codigo serial not null ,
    uni_org_descripcion varchar(50,20) not null ,
    uni_org_situacion smallint not null 
  );

revoke all on coc_unidad_organica from "public";

{ TABLE municion_cuatrimestral row size = 458 number of columns = 16 index size = 25 }

create table municion_cuatrimestral 
  (
    cuat_id serial not null ,
    cuat_lote integer,
    cuat_calibre integer,
    cuat_cantidad integer,
    cuat_motivo integer,
    cuat_documento varchar(150),
    cuat_observaciones varchar(250),
    cuat_movimiento smallint,
    cuat_fecha datetime year to minute not null ,
    cuat_fecharegistro datetime year to minute not null ,
    cuat_departamento smallint,
    cuat_batallon integer,
    cuat_catalogoasignado integer,
    cuat_catalogoasignadopor integer,
    cuat_catalogoregistradopor integer,
    cuat_situacion smallint
  );

revoke all on municion_cuatrimestral from "public";

{ TABLE aud_municion_cuatrimestral row size = 936 number of columns = 35 index size = 0 }

create table aud_municion_cuatrimestral 
  (
    cuat_id integer,
    cuat_lote integer,
    cuat_calibre integer,
    cuat_cantidad integer,
    cuat_motivo integer,
    cuat_documento varchar(150),
    cuat_observaciones varchar(250),
    cuat_movimiento smallint,
    cuat_fecha datetime year to minute,
    cuat_fecharegistro datetime year to minute,
    cuat_departamento smallint,
    cuat_batallon integer,
    cuat_catalogoasignado integer,
    cuat_catalogoasignadopor integer,
    cuat_catalogoregistradopor integer,
    cuat_situacion smallint,
    desp_cuat_id integer,
    desp_cuat_lote integer,
    desp_cuat_calibre integer,
    desp_cuat_cantidad integer,
    desp_cuat_motivo integer,
    desp_cuat_documento varchar(150),
    desp_cuat_observaciones varchar(250),
    desp_cuat_movimiento smallint,
    desp_cuat_fecha datetime year to minute,
    desp_cuat_fecharegistro datetime year to minute,
    desp_cuat_departamento smallint,
    desp_cuat_batallon integer,
    desp_cuat_catalogoasignado integer,
    desp_cuat_catalogoasignadopor integer,
    desp_cuat_catalogoregistradopor integer,
    desp_cuat_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_municion_cuatrimestral from "public";

{ TABLE apresto_asesor row size = 270 number of columns = 5 index size = 27 }

create table apresto_asesor 
  (
    ase_id serial not null ,
    ase_catalogo integer,
    ase_funcion integer,
    ase_curriculum varchar(255),
    ase_situacion smallint,
    primary key (ase_id) 
  );

revoke all on apresto_asesor from "public";

{ TABLE apresto_asignacion_dependencia row size = 12 number of columns = 4 index size = 25 }

create table apresto_asignacion_dependencia 
  (
    asig_id serial not null ,
    asig_dep smallint,
    asig_asesor integer,
    asig_situacion smallint,
    primary key (asig_id) 
  );

revoke all on apresto_asignacion_dependencia from "public";

{ TABLE apresto_ambito row size = 82 number of columns = 3 index size = 9 }

create table apresto_ambito 
  (
    amb_id serial not null ,
    amb_ambito varchar(75),
    amb_situacion smallint 
        default 1,
    primary key (amb_id) 
  );

revoke all on apresto_ambito from "public";

{ TABLE apresto_modalidad row size = 82 number of columns = 3 index size = 9 }

create table apresto_modalidad 
  (
    mod_id serial not null ,
    mod_modalidad varchar(75),
    mod_situacion smallint 
        default 1,
    primary key (mod_id) 
  );

revoke all on apresto_modalidad from "public";

{ TABLE apresto_asigna_tarea row size = 21 number of columns = 5 index size = 27 }

create table apresto_asigna_tarea 
  (
    asig_tar_id serial not null ,
    asig_tar_tarea integer not null ,
    asig_tar_asesor integer not null ,
    asig_tar_fecha datetime year to minute,
    asig_tar_situacion smallint 
        default 1,
    primary key (asig_tar_id) 
  );

revoke all on apresto_asigna_tarea from "public";

{ TABLE apresto_respuesta row size = 273 number of columns = 5 index size = 18 }

create table apresto_respuesta 
  (
    res_id serial not null ,
    res_asignacion integer not null ,
    res_documento varchar(255),
    res_fecha datetime year to minute,
    res_situacion smallint 
        default 1,
    primary key (res_id) 
  );

revoke all on apresto_respuesta from "public";

{ TABLE aud_apresto_asesor row size = 560 number of columns = 13 index size = 0 }

create table aud_apresto_asesor 
  (
    ase_id integer,
    ase_catalogo integer,
    ase_funcion integer,
    ase_curriculum varchar(255),
    ase_situacion smallint,
    desp_ase_id integer,
    desp_ase_catalogo integer,
    desp_ase_funcion integer,
    desp_ase_curriculum varchar(255),
    desp_ase_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_apresto_asesor from "public";

{ TABLE aud_apresto_asignacion_dependencia row size = 44 number of columns = 11 index size = 0 }

create table aud_apresto_asignacion_dependencia 
  (
    asig_id integer,
    asig_dep smallint,
    asig_asesor integer,
    asig_situacion smallint,
    desp_asig_id integer,
    desp_asig_dep smallint,
    desp_asig_asesor integer,
    desp_asig_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_apresto_asignacion_dependencia from "public";

{ TABLE aud_apresto_ambito row size = 184 number of columns = 9 index size = 0 }

create table aud_apresto_ambito 
  (
    amb_id integer,
    amb_ambito varchar(75),
    amb_situacion smallint,
    desp_amb_id integer,
    desp_amb_ambito varchar(75),
    desp_amb_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_apresto_ambito from "public";

{ TABLE aud_apresto_modalidad row size = 184 number of columns = 9 index size = 0 }

create table aud_apresto_modalidad 
  (
    mod_id integer,
    mod_modalidad varchar(75),
    mod_situacion smallint,
    desp_mod_id integer,
    desp_mod_modalidad varchar(75),
    desp_mod_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_apresto_modalidad from "public";

{ TABLE aud_apresto_asigna_tarea row size = 62 number of columns = 13 index size = 0 }

create table aud_apresto_asigna_tarea 
  (
    asig_tar_id integer,
    asig_tar_tarea integer,
    asig_tar_asesor integer,
    asig_tar_fecha datetime year to minute,
    asig_tar_situacion smallint,
    desp_asig_tar_id integer,
    desp_asig_tar_tarea integer,
    desp_asig_tar_asesor integer,
    desp_asig_tar_fecha datetime year to minute,
    desp_asig_tar_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_apresto_asigna_tarea from "public";

{ TABLE aud_apresto_respuesta row size = 566 number of columns = 13 index size = 0 }

create table aud_apresto_respuesta 
  (
    res_id integer,
    res_asignacion integer,
    res_documento varchar(255),
    res_fecha datetime year to minute,
    res_situacion smallint,
    desp_res_id integer,
    desp_res_asignacion integer,
    desp_res_documento varchar(255),
    desp_res_fecha datetime year to minute,
    desp_res_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_apresto_respuesta from "public";

{ TABLE codemar_asig_personal row size = 14 number of columns = 4 index size = 9 }

create table codemar_asig_personal 
  (
    asi_id serial not null ,
    asi_operacion integer,
    asi_catalogo integer,
    asi_sit smallint,
    primary key (asi_id) 
  );

revoke all on codemar_asig_personal from "public";

{ TABLE aud_codemar_asig_personal row size = 48 number of columns = 11 index size = 0 }

create table aud_codemar_asig_personal 
  (
    asi_id integer,
    asi_operacion integer,
    asi_catalogo integer,
    asi_sit smallint,
    desp_asi_id integer,
    desp_asi_operacion integer,
    desp_asi_catalogo integer,
    desp_asi_sit smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_asig_personal from "public";

{ TABLE codemar_tipos_operaciones row size = 57 number of columns = 3 index size = 9 }

create table codemar_tipos_operaciones 
  (
    tipo_id serial not null ,
    tipo_desc varchar(50),
    tipo_situacion smallint,
    primary key (tipo_id) 
  );

revoke all on codemar_tipos_operaciones from "public";

{ TABLE aud_codemar_tipos_operaciones row size = 134 number of columns = 9 index size = 0 }

create table aud_codemar_tipos_operaciones 
  (
    tipo_id integer,
    tipo_desc varchar(50),
    tipo_situacion smallint,
    desp_tipo_id integer,
    desp_tipo_desc varchar(50),
    desp_tipo_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_tipos_operaciones from "public";

{ TABLE codemar_operaciones row size = 24655 number of columns = 14 index size = 25 }

create table codemar_operaciones 
  (
    ope_id serial not null ,
    ope_tipo integer,
    ope_fecha_zarpe datetime year to minute,
    ope_fecha_atraque datetime year to minute,
    ope_situacion lvarchar(8192),
    ope_mision lvarchar(8192),
    ope_ejecucion lvarchar(8192),
    ope_identificador varchar(30),
    ope_dependencia smallint,
    ope_reutilizar smallint,
    ope_distancia decimal(10,2),
    ope_nacional char(1) 
        default 'N',
    ope_sit smallint,
    ope_reservados integer,
    primary key (ope_id) 
  );

revoke all on codemar_operaciones from "public";

{ TABLE aud_codemar_operaciones row size = 12466 number of columns = 31 index size = 0 }

create table aud_codemar_operaciones 
  (
    ope_id integer,
    ope_tipo integer,
    ope_fecha_zarpe datetime year to minute,
    ope_fecha_atraque datetime year to minute,
    ope_situacion lvarchar,
    ope_mision lvarchar,
    ope_ejecucion lvarchar,
    ope_identificador varchar(30),
    ope_dependencia smallint,
    ope_reutilizar smallint,
    ope_distancia decimal(10,2),
    ope_nacional char(1),
    ope_sit smallint,
    ope_reservados integer,
    desp_ope_id integer,
    desp_ope_tipo integer,
    desp_ope_fecha_zarpe datetime year to minute,
    desp_ope_fecha_atraque datetime year to minute,
    desp_ope_situacion lvarchar,
    desp_ope_mision lvarchar,
    desp_ope_ejecucion lvarchar,
    desp_ope_identificador varchar(30),
    desp_ope_dependencia smallint,
    desp_ope_reutilizar smallint,
    desp_ope_distancia decimal(10,2),
    desp_ope_nacional char(1),
    desp_ope_sit smallint,
    desp_ope_reservados integer,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_operaciones from "public";

{ TABLE codemar_tipos_embarcaciones row size = 57 number of columns = 3 index size = 9 }

create table codemar_tipos_embarcaciones 
  (
    tipo_id serial not null ,
    tipo_desc varchar(50),
    tipo_situacion smallint,
    primary key (tipo_id) 
  );

revoke all on codemar_tipos_embarcaciones from "public";

{ TABLE aud_codemar_tipos_embarcaciones row size = 134 number of columns = 9 index size = 0 }

create table aud_codemar_tipos_embarcaciones 
  (
    tipo_id integer,
    tipo_desc varchar(50),
    tipo_situacion smallint,
    desp_tipo_id integer,
    desp_tipo_desc varchar(50),
    desp_tipo_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_tipos_embarcaciones from "public";

{ TABLE codemar_embarcaciones row size = 61 number of columns = 4 index size = 18 }

create table codemar_embarcaciones 
  (
    emb_id serial not null ,
    emb_nombre varchar(50),
    emb_tipo integer,
    emb_situacion smallint,
    primary key (emb_id) 
  );

revoke all on codemar_embarcaciones from "public";

{ TABLE aud_codemar_embarcaciones row size = 142 number of columns = 11 index size = 0 }

create table aud_codemar_embarcaciones 
  (
    emb_id integer,
    emb_nombre varchar(50),
    emb_tipo integer,
    emb_situacion smallint,
    desp_emb_id integer,
    desp_emb_nombre varchar(50),
    desp_emb_tipo integer,
    desp_emb_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_embarcaciones from "public";

{ TABLE codemar_informacion row size = 2061 number of columns = 4 index size = 18 }

create table codemar_informacion 
  (
    info_id serial not null ,
    info_operacion integer,
    info_descripcion lvarchar,
    info_situacion smallint,
    primary key (info_id) 
  );

revoke all on codemar_informacion from "public";

{ TABLE aud_codemar_informacion row size = 4142 number of columns = 11 index size = 0 }

create table aud_codemar_informacion 
  (
    info_id integer,
    info_operacion integer,
    info_descripcion lvarchar,
    info_situacion smallint,
    desp_info_id integer,
    desp_info_operacion integer,
    desp_info_descripcion lvarchar,
    desp_info_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_informacion from "public";

{ TABLE codemar_asig_unidad row size = 14 number of columns = 4 index size = 27 }

create table codemar_asig_unidad 
  (
    asi_id serial not null ,
    asi_operacion integer,
    asi_unidad integer,
    asi_sit smallint,
    primary key (asi_id) 
  );

revoke all on codemar_asig_unidad from "public";

{ TABLE aud_codemar_asig_unidad row size = 48 number of columns = 11 index size = 0 }

create table aud_codemar_asig_unidad 
  (
    asi_id integer,
    asi_operacion integer,
    asi_unidad integer,
    asi_sit smallint,
    desp_asi_id integer,
    desp_asi_operacion integer,
    desp_asi_unidad integer,
    desp_asi_sit smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_asig_unidad from "public";

{ TABLE codemar_medios_comunicacion row size = 57 number of columns = 3 index size = 9 }

create table codemar_medios_comunicacion 
  (
    medio_id serial not null ,
    medio_desc varchar(50),
    medio_situacion smallint,
    primary key (medio_id) 
  );

revoke all on codemar_medios_comunicacion from "public";

{ TABLE aud_codemar_medios_comunicacion row size = 134 number of columns = 9 index size = 0 }

create table aud_codemar_medios_comunicacion 
  (
    medio_id integer,
    medio_desc varchar(50),
    medio_situacion smallint,
    desp_medio_id integer,
    desp_medio_desc varchar(50),
    desp_medio_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_medios_comunicacion from "public";

{ TABLE aud_codemar_motores row size = 142 number of columns = 11 index size = 0 }

create table aud_codemar_motores 
  (
    mot_id integer,
    mot_serie varchar(50),
    mot_embarcacion integer,
    mot_situacion smallint,
    desp_mot_id integer,
    desp_mot_serie varchar(50),
    desp_mot_embarcacion integer,
    desp_mot_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_motores from "public";

{ TABLE codemar_motores row size = 61 number of columns = 4 index size = 18 }

create table codemar_motores 
  (
    mot_id serial not null ,
    mot_serie varchar(50),
    mot_embarcacion integer,
    mot_situacion smallint,
    primary key (mot_id) 
  );

revoke all on codemar_motores from "public";

{ TABLE codemar_novedades row size = 2068 number of columns = 5 index size = 18 }

create table codemar_novedades 
  (
    nov_id serial not null ,
    nov_operacion integer,
    nov_fechahora datetime year to minute,
    nov_novedad lvarchar,
    nov_situacion smallint,
    primary key (nov_id) 
  );

revoke all on codemar_novedades from "public";

{ TABLE aud_codemar_novedades row size = 4156 number of columns = 13 index size = 0 }

create table aud_codemar_novedades 
  (
    nov_id integer,
    nov_operacion integer,
    nov_fechahora datetime year to minute,
    nov_novedad lvarchar,
    nov_situacion smallint,
    desp_nov_id integer,
    desp_nov_operacion integer,
    desp_nov_fechahora datetime year to minute,
    desp_nov_novedad lvarchar,
    desp_nov_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_novedades from "public";

{ TABLE codemar_receptor_comunicacion row size = 57 number of columns = 3 index size = 9 }

create table codemar_receptor_comunicacion 
  (
    rec_id serial not null ,
    rec_desc varchar(50),
    rec_situacion smallint,
    primary key (rec_id) 
  );

revoke all on codemar_receptor_comunicacion from "public";

{ TABLE aud_codemar_receptor_comunicacion row size = 134 number of columns = 9 index size = 0 }

create table aud_codemar_receptor_comunicacion 
  (
    rec_id integer,
    rec_desc varchar(50),
    rec_situacion smallint,
    desp_rec_id integer,
    desp_rec_desc varchar(50),
    desp_rec_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_receptor_comunicacion from "public";

{ TABLE codemar_recomendaciones row size = 2061 number of columns = 4 index size = 18 }

create table codemar_recomendaciones 
  (
    rec_id serial not null ,
    rec_operacion integer,
    rec_recomendacion lvarchar,
    rec_situacion smallint,
    primary key (rec_id) 
  );

revoke all on codemar_recomendaciones from "public";

{ TABLE aud_codemar_recomendaciones row size = 4142 number of columns = 11 index size = 0 }

create table aud_codemar_recomendaciones 
  (
    rec_id integer,
    rec_operacion integer,
    rec_recomendacion lvarchar,
    rec_situacion smallint,
    desp_rec_id integer,
    desp_rec_operacion integer,
    desp_rec_recomendacion lvarchar,
    desp_rec_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_recomendaciones from "public";

{ TABLE codemar_unidades_medida row size = 57 number of columns = 3 index size = 9 }

create table codemar_unidades_medida 
  (
    uni_id serial not null ,
    uni_desc varchar(50),
    uni_situacion smallint,
    primary key (uni_id) 
  );

revoke all on codemar_unidades_medida from "public";

{ TABLE aud_codemar_unidades_medida row size = 134 number of columns = 9 index size = 0 }

create table aud_codemar_unidades_medida 
  (
    uni_id integer,
    uni_desc varchar(50),
    uni_situacion smallint,
    desp_uni_id integer,
    desp_uni_desc varchar(50),
    desp_uni_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_unidades_medida from "public";

{ TABLE codemar_trabajo_motores row size = 320 number of columns = 8 index size = 27 }

create table codemar_trabajo_motores 
  (
    tra_id serial not null ,
    tra_operacion integer,
    tra_motor integer,
    tra_horas smallint,
    tra_rpm smallint,
    tra_fallas varchar(150),
    tra_observacion varchar(150),
    tra_situacion smallint,
    primary key (tra_id) 
  );

revoke all on codemar_trabajo_motores from "public";

{ TABLE aud_codemar_trabajo_motores row size = 660 number of columns = 19 index size = 0 }

create table aud_codemar_trabajo_motores 
  (
    tra_id integer,
    tra_operacion integer,
    tra_motor integer,
    tra_horas smallint,
    tra_rpm smallint,
    tra_fallas varchar(150),
    tra_observacion varchar(150),
    tra_situacion smallint,
    desp_tra_id integer,
    desp_tra_operacion integer,
    desp_tra_motor integer,
    desp_tra_horas smallint,
    desp_tra_rpm smallint,
    desp_tra_fallas varchar(150),
    desp_tra_observacion varchar(150),
    desp_tra_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_trabajo_motores from "public";

{ TABLE codemar_clasificacion row size = 37 number of columns = 3 index size = 9 }

create table codemar_clasificacion 
  (
    id serial not null ,
    desc varchar(30),
    situacion smallint not null ,
    primary key (id) 
  );

revoke all on codemar_clasificacion from "public";

{ TABLE aud_codemar_clasificacion row size = 94 number of columns = 9 index size = 0 }

create table aud_codemar_clasificacion 
  (
    id integer,
    desc varchar(30),
    situacion smallint,
    desp_id integer,
    desp_desc varchar(30),
    desp_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_clasificacion from "public";

{ TABLE codemar_comunicaciones row size = 171 number of columns = 7 index size = 36 }

create table codemar_comunicaciones 
  (
    com_id serial not null ,
    com_operacion integer,
    com_medio integer,
    com_receptor integer,
    com_calidad smallint,
    com_observacion varchar(150),
    com_situacion smallint,
    primary key (com_id) 
  );

revoke all on codemar_comunicaciones from "public";

{ TABLE aud_codemar_comunicaciones row size = 362 number of columns = 17 index size = 0 }

create table aud_codemar_comunicaciones 
  (
    com_id integer,
    com_operacion integer,
    com_medio integer,
    com_receptor integer,
    com_calidad smallint,
    com_observacion varchar(150),
    com_situacion smallint,
    desp_com_id integer,
    desp_com_operacion integer,
    desp_com_medio integer,
    desp_com_receptor integer,
    desp_com_calidad smallint,
    desp_com_observacion varchar(150),
    desp_com_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_comunicaciones from "public";

{ TABLE codemar_derrota row size = 33 number of columns = 6 index size = 18 }

create table codemar_derrota 
  (
    der_id serial not null ,
    der_ope integer,
    der_latitud decimal(12,9),
    der_longitud decimal(12,9),
    der_fecha datetime year to minute,
    der_situacion smallint,
    primary key (der_id) 
  );

revoke all on codemar_derrota from "public";

{ TABLE aud_codemar_derrota row size = 86 number of columns = 15 index size = 0 }

create table aud_codemar_derrota 
  (
    der_id integer,
    der_ope integer,
    der_latitud decimal(12,9),
    der_longitud decimal(12,9),
    der_fecha datetime year to minute,
    der_situacion smallint,
    desp_der_id integer,
    desp_der_ope integer,
    desp_der_latitud decimal(12,9),
    desp_der_longitud decimal(12,9),
    desp_der_fecha datetime year to minute,
    desp_der_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_derrota from "public";

{ TABLE codemar_insumos_operaciones row size = 68 number of columns = 5 index size = 18 }

create table codemar_insumos_operaciones 
  (
    insumo_id serial not null ,
    insumo_desc varchar(50),
    insumo_unidad integer,
    insumo_color char(7) 
        default '#000000',
    insumo_situacion smallint,
    primary key (insumo_id) 
  );

revoke all on codemar_insumos_operaciones from "public";

{ TABLE aud_codemar_insumos_operaciones row size = 156 number of columns = 13 index size = 0 }

create table aud_codemar_insumos_operaciones 
  (
    insumo_id integer,
    insumo_desc varchar(50),
    insumo_unidad integer,
    insumo_color char(7),
    insumo_situacion smallint,
    desp_insumo_id integer,
    desp_insumo_desc varchar(50),
    desp_insumo_unidad integer,
    desp_insumo_color char(7),
    desp_insumo_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_insumos_operaciones from "public";

{ TABLE codemar_internacionales row size = 2059 number of columns = 4 index size = 16 }

create table codemar_internacionales 
  (
    int_ope integer not null ,
    int_pais smallint,
    int_documento lvarchar,
    int_situacion smallint 
        default 1,
    primary key (int_ope) 
  );

revoke all on codemar_internacionales from "public";

{ TABLE aud_codemar_internacionales row size = 4138 number of columns = 11 index size = 0 }

create table aud_codemar_internacionales 
  (
    int_ope integer,
    int_pais smallint,
    int_documento lvarchar,
    int_situacion smallint,
    desp_int_ope integer,
    desp_int_pais smallint,
    desp_int_documento lvarchar,
    desp_int_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_codemar_internacionales from "public";

{ TABLE arco_historial row size = 4366 number of columns = 25 index size = 32 }

create table arco_historial 
  (
    hist_id serial not null ,
    hist_catalogo integer,
    hist_grado smallint,
    hist_arma smallint,
    hist_nom_certificado varchar(100),
    hist_codigo varchar(10),
    hist_observaciones lvarchar,
    hist_fecha_ascenso date,
    hist_fecha_inicio date,
    hist_fecha_fin date,
    hist_cap_profesional decimal(10,2),
    hist_des_profesional decimal(10,2),
    hist_conducta_militar decimal(10,2),
    hist_aptitud_fisica decimal(10,2),
    hist_per_biofisico decimal(10,2),
    hist_creditos decimal(10,2),
    hist_ficha_medica varchar(10),
    hist_total_nota decimal(10,2),
    hist_notacurso decimal(10,2),
    hist_notades decimal(10,2),
    hist_notapafe decimal(10,2),
    hist_demeritos integer,
    hist_diagnostico varchar(50),
    hist_dictamen lvarchar,
    hist_situacion smallint,
    primary key (hist_id) 
  );

revoke all on arco_historial from "public";

{ TABLE validacion_pagadores row size = 6 number of columns = 2 index size = 0 }

create table validacion_pagadores 
  (
    vali_catalogo integer,
    vali_situacion smallint
  );

revoke all on validacion_pagadores from "public";

{ TABLE detalle_validaciones row size = 18 number of columns = 5 index size = 9 }

create table detalle_validaciones 
  (
    det_id serial not null ,
    det_cat integer,
    det_depen integer,
    det_tipo smallint,
    det_fecha date,
    primary key (det_id) 
  );

revoke all on detalle_validaciones from "public";

{ TABLE aud_detalle_validaciones row size = 56 number of columns = 13 index size = 0 }

create table aud_detalle_validaciones 
  (
    det_id integer,
    det_cat integer,
    det_depen integer,
    det_tipo smallint,
    det_fecha date,
    desp_det_id integer,
    desp_det_cat integer,
    desp_det_depen integer,
    desp_det_tipo smallint,
    desp_det_fecha date,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_detalle_validaciones from "public";

{ TABLE aud_validacion_pagadores row size = 32 number of columns = 7 index size = 0 }

create table aud_validacion_pagadores 
  (
    vali_catalogo integer,
    vali_situacion smallint,
    desp_vali_catalogo integer,
    desp_vali_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_validacion_pagadores from "public";

{ TABLE est_destinos row size = 259 number of columns = 3 index size = 9 }

create table est_destinos 
  (
    destino_id serial not null ,
    destino_desc varchar(250),
    destino_sit integer,
    primary key (destino_id) 
  );

revoke all on est_destinos from "public";

{ TABLE aud_est_destinos row size = 538 number of columns = 9 index size = 0 }

create table aud_est_destinos 
  (
    destino_id integer,
    destino_desc varchar(250),
    destino_sit integer,
    desp_destino_id integer,
    desp_destino_desc varchar(250),
    desp_destino_sit integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_est_destinos from "public";

{ TABLE est_regiones row size = 237 number of columns = 3 index size = 9 }

create table est_regiones 
  (
    est_reg_id serial not null ,
    est_reg_desc varchar(230),
    est_reg_situacion smallint,
    primary key (est_reg_id) 
  );

revoke all on est_regiones from "public";

{ TABLE aud_est_regiones row size = 494 number of columns = 9 index size = 0 }

create table aud_est_regiones 
  (
    est_reg_id integer,
    est_reg_desc varchar(230),
    est_reg_situacion smallint,
    desp_est_reg_id integer,
    desp_est_reg_desc varchar(230),
    desp_est_reg_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_est_regiones from "public";

{ TABLE est_fuerza row size = 37 number of columns = 9 index size = 9 }

create table est_fuerza 
  (
    ef_id serial not null ,
    ef_dep integer not null ,
    ef_unidad integer not null ,
    ef_fecha datetime year to minute,
    ef_vacan_toe integer,
    ef_disp_toe integer,
    ef_usuario integer,
    ef_region integer,
    ef_situacion smallint,
    primary key (ef_id) 
  );

revoke all on est_fuerza from "public";

{ TABLE aud_est_fuerza row size = 94 number of columns = 21 index size = 0 }

create table aud_est_fuerza 
  (
    ef_id integer,
    ef_dep integer,
    ef_unidad integer,
    ef_fecha datetime year to minute,
    ef_vacan_toe integer,
    ef_disp_toe integer,
    ef_usuario integer,
    ef_region integer,
    ef_situacion smallint,
    desp_ef_id integer,
    desp_ef_dep integer,
    desp_ef_unidad integer,
    desp_ef_fecha datetime year to minute,
    desp_ef_vacan_toe integer,
    desp_ef_disp_toe integer,
    desp_ef_usuario integer,
    desp_ef_region integer,
    desp_ef_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_est_fuerza from "public";

{ TABLE est_fuerza_detalle row size = 48 number of columns = 20 index size = 18 }

create table est_fuerza_detalle 
  (
    ef_det_id serial not null ,
    ef_cod_ef integer not null ,
    ef_destino smallint not null ,
    ef_gd smallint,
    ef_gb smallint,
    ef_ofsup_cr smallint,
    ef_ofsup_rsvas smallint,
    ef_ofsup_as smallint,
    ef_ofsub_cr smallint,
    ef_ofsub_rsvas smallint,
    ef_ofsub_as smallint,
    ef_esptas smallint,
    ef_sgtosmay smallint,
    ef_tropa smallint,
    ef_tropa_a smallint,
    ef_tropa_n smallint,
    ef_cadetes smallint,
    ef_contrato smallint,
    ef_total_destinos integer,
    ef_det_situacion integer,
    primary key (ef_det_id) 
  );

revoke all on est_fuerza_detalle from "public";

{ TABLE aud_est_fuerza_detalle row size = 116 number of columns = 43 index size = 0 }

create table aud_est_fuerza_detalle 
  (
    ef_det_id integer,
    ef_cod_ef integer,
    ef_destino smallint,
    ef_gd smallint,
    ef_gb smallint,
    ef_ofsup_cr smallint,
    ef_ofsup_rsvas smallint,
    ef_ofsup_as smallint,
    ef_ofsub_cr smallint,
    ef_ofsub_rsvas smallint,
    ef_ofsub_as smallint,
    ef_esptas smallint,
    ef_sgtosmay smallint,
    ef_tropa smallint,
    ef_tropa_a smallint,
    ef_tropa_n smallint,
    ef_cadetes smallint,
    ef_contrato smallint,
    ef_total_destinos integer,
    ef_det_situacion integer,
    desp_ef_det_id integer,
    desp_ef_cod_ef integer,
    desp_ef_destino smallint,
    desp_ef_gd smallint,
    desp_ef_gb smallint,
    desp_ef_ofsup_cr smallint,
    desp_ef_ofsup_rsvas smallint,
    desp_ef_ofsup_as smallint,
    desp_ef_ofsub_cr smallint,
    desp_ef_ofsub_rsvas smallint,
    desp_ef_ofsub_as smallint,
    desp_ef_esptas smallint,
    desp_ef_sgtosmay smallint,
    desp_ef_tropa smallint,
    desp_ef_tropa_a smallint,
    desp_ef_tropa_n smallint,
    desp_ef_cadetes smallint,
    desp_ef_contrato smallint,
    desp_ef_total_destinos integer,
    desp_ef_det_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_est_fuerza_detalle from "public";

{ TABLE est_fuerza_alum_y_rsrv row size = 284 number of columns = 8 index size = 18 }

create table est_fuerza_alum_y_rsrv 
  (
    alrs_id serial not null ,
    alrs_est_fuerza_id integer,
    alrs_al_masculinos integer,
    alrs_al_femeninos integer,
    alrs_rs_masculinos integer,
    alrs_rs_femeninos integer,
    alrs_obervacion varchar(255),
    alrs_situacion integer,
    primary key (alrs_id) 
  );

revoke all on est_fuerza_alum_y_rsrv from "public";

{ TABLE aud_est_fuerza_alum_y_rsrv row size = 588 number of columns = 19 index size = 0 }

create table aud_est_fuerza_alum_y_rsrv 
  (
    alrs_id integer,
    alrs_est_fuerza_id integer,
    alrs_al_masculinos integer,
    alrs_al_femeninos integer,
    alrs_rs_masculinos integer,
    alrs_rs_femeninos integer,
    alrs_obervacion varchar(255),
    alrs_situacion integer,
    desp_alrs_id integer,
    desp_alrs_est_fuerza_id integer,
    desp_alrs_al_masculinos integer,
    desp_alrs_al_femeninos integer,
    desp_alrs_rs_masculinos integer,
    desp_alrs_rs_femeninos integer,
    desp_alrs_obervacion varchar(255),
    desp_alrs_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_est_fuerza_alum_y_rsrv from "public";

{ TABLE est_reg_dep row size = 18 number of columns = 5 index size = 18 }

create table est_reg_dep 
  (
    est_rdep_id serial not null ,
    est_rdep_regid integer,
    est_rdep_unidad integer,
    est_rdep_dep integer,
    est_rdep_situacion smallint,
    primary key (est_rdep_id) 
  );

revoke all on est_reg_dep from "public";

{ TABLE aud_est_reg_dep row size = 56 number of columns = 13 index size = 0 }

create table aud_est_reg_dep 
  (
    est_rdep_id integer,
    est_rdep_regid integer,
    est_rdep_unidad integer,
    est_rdep_dep integer,
    est_rdep_situacion smallint,
    desp_est_rdep_id integer,
    desp_est_rdep_regid integer,
    desp_est_rdep_unidad integer,
    desp_est_rdep_dep integer,
    desp_est_rdep_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_est_reg_dep from "public";

{ TABLE est_dest_det row size = 2557 number of columns = 16 index size = 27 }

create table est_dest_det 
  (
    dest_de_id serial not null ,
    dest_de_detid integer,
    dest_de_destino integer,
    dest_de_of integer,
    dest_de_esp integer,
    dest_de_tropa integer,
    dest_de_cad integer,
    dest_de_pla integer,
    dest_de_catalogo integer,
    dest_de_obs lvarchar(2000),
    dest_de_comando integer,
    dest_de_grado integer,
    dest_de_cantidad integer,
    dest_de_tiempo varchar(250),
    dest_de_desc_tiempo varchar(250),
    dest_de_situacion integer,
    primary key (dest_de_id) 
  );

revoke all on est_dest_det from "public";

{ TABLE aud_est_dest_det row size = 5134 number of columns = 35 index size = 0 }

create table aud_est_dest_det 
  (
    dest_de_id integer,
    dest_de_detid integer,
    dest_de_destino integer,
    dest_de_of integer,
    dest_de_esp integer,
    dest_de_tropa integer,
    dest_de_cad integer,
    dest_de_pla integer,
    dest_de_catalogo integer,
    dest_de_obs lvarchar(2000),
    dest_de_comando integer,
    dest_de_grado integer,
    dest_de_cantidad integer,
    dest_de_tiempo varchar(250),
    dest_de_desc_tiempo varchar(250),
    dest_de_situacion integer,
    desp_dest_de_id integer,
    desp_dest_de_detid integer,
    desp_dest_de_destino integer,
    desp_dest_de_of integer,
    desp_dest_de_esp integer,
    desp_dest_de_tropa integer,
    desp_dest_de_cad integer,
    desp_dest_de_pla integer,
    desp_dest_de_catalogo integer,
    desp_dest_de_obs lvarchar(2000),
    desp_dest_de_comando integer,
    desp_dest_de_grado integer,
    desp_dest_de_cantidad integer,
    desp_dest_de_tiempo varchar(250),
    desp_dest_de_desc_tiempo varchar(250),
    desp_dest_de_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_est_dest_det from "public";

{ TABLE vlh_det_plaza row size = 2525 number of columns = 7 index size = 18 }

create table vlh_det_plaza 
  (
    det_plaza_id serial not null ,
    det_plaza_catalogo integer,
    det_plaza_responsable integer,
    det_plaza_asignado integer,
    det_plaza_fecha date,
    det_plaza_situacion smallint,
    det_plaza_observaciones lvarchar(2500),
    primary key (det_plaza_id) 
  );

revoke all on vlh_det_plaza from "public";

{ TABLE aud_vlh_det_plaza row size = 5070 number of columns = 17 index size = 0 }

create table aud_vlh_det_plaza 
  (
    det_plaza_id integer,
    det_plaza_catalogo integer,
    det_plaza_responsable integer,
    det_plaza_asignado integer,
    det_plaza_fecha date,
    det_plaza_situacion smallint,
    det_plaza_observaciones lvarchar(2500),
    desp_det_plaza_id integer,
    desp_det_plaza_catalogo integer,
    desp_det_plaza_responsable integer,
    desp_det_plaza_asignado integer,
    desp_det_plaza_fecha date,
    desp_det_plaza_situacion smallint,
    desp_det_plaza_observaciones lvarchar(2500),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_vlh_det_plaza from "public";

{ TABLE apresto_asistencia row size = 2068 number of columns = 5 index size = 18 }

create table apresto_asistencia 
  (
    asis_id serial not null ,
    asis_catalogo integer,
    asis_fecha datetime year to minute,
    asis_observacion lvarchar,
    asis_situacion smallint 
        default 1,
    primary key (asis_id) 
  );

revoke all on apresto_asistencia from "public";

{ TABLE aud_apresto_asistencia row size = 4156 number of columns = 13 index size = 0 }

create table aud_apresto_asistencia 
  (
    asis_id integer,
    asis_catalogo integer,
    asis_fecha datetime year to minute,
    asis_observacion lvarchar,
    asis_situacion smallint,
    desp_asis_id integer,
    desp_asis_catalogo integer,
    desp_asis_fecha datetime year to minute,
    desp_asis_observacion lvarchar,
    desp_asis_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_apresto_asistencia from "public";

{ TABLE aud_arco_historial row size = 8752 number of columns = 53 index size = 0 }

create table aud_arco_historial 
  (
    hist_id integer,
    hist_catalogo integer,
    hist_grado smallint,
    hist_arma smallint,
    hist_nom_certificado varchar(100),
    hist_codigo varchar(10),
    hist_observaciones lvarchar,
    hist_fecha_ascenso date,
    hist_fecha_inicio date,
    hist_fecha_fin date,
    hist_cap_profesional decimal(10,2),
    hist_des_profesional decimal(10,2),
    hist_conducta_militar decimal(10,2),
    hist_aptitud_fisica decimal(10,2),
    hist_per_biofisico decimal(10,2),
    hist_creditos decimal(10,2),
    hist_ficha_medica varchar(10),
    hist_total_nota decimal(10,2),
    hist_notacurso decimal(10,2),
    hist_notades decimal(10,2),
    hist_notapafe decimal(10,2),
    hist_demeritos integer,
    hist_diagnostico varchar(50),
    hist_dictamen lvarchar,
    hist_situacion smallint,
    desp_hist_id integer,
    desp_hist_catalogo integer,
    desp_hist_grado smallint,
    desp_hist_arma smallint,
    desp_hist_nom_certificado varchar(100),
    desp_hist_codigo varchar(10),
    desp_hist_observaciones lvarchar,
    desp_hist_fecha_ascenso date,
    desp_hist_fecha_inicio date,
    desp_hist_fecha_fin date,
    desp_hist_cap_profesional decimal(10,2),
    desp_hist_des_profesional decimal(10,2),
    desp_hist_conducta_militar decimal(10,2),
    desp_hist_aptitud_fisica decimal(10,2),
    desp_hist_per_biofisico decimal(10,2),
    desp_hist_creditos decimal(10,2),
    desp_hist_ficha_medica varchar(10),
    desp_hist_total_nota decimal(10,2),
    desp_hist_notacurso decimal(10,2),
    desp_hist_notades decimal(10,2),
    desp_hist_notapafe decimal(10,2),
    desp_hist_demeritos integer,
    desp_hist_diagnostico varchar(50),
    desp_hist_dictamen lvarchar,
    desp_hist_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_arco_historial from "public";

{ TABLE registro_busqueda row size = 4131 number of columns = 7 index size = 18 }

create table registro_busqueda 
  (
    busqueda_id serial not null ,
    busqueda_latitud decimal(11,8),
    busqueda_longitud decimal(11,8),
    busqueda_parametros lvarchar,
    busqueda_motivo lvarchar,
    busqueda_usuario integer,
    busqueda_fecha_hora datetime year to minute 
        default current year to minute,
    primary key (busqueda_id) 
  );

revoke all on registro_busqueda from "public";

{ TABLE aud_registro_busqueda row size = 8282 number of columns = 17 index size = 0 }

create table aud_registro_busqueda 
  (
    busqueda_id integer,
    busqueda_latitud decimal(11,8),
    busqueda_longitud decimal(11,8),
    busqueda_parametros lvarchar,
    busqueda_motivo lvarchar,
    busqueda_usuario integer,
    busqueda_fecha_hora datetime year to minute 
        default current year to minute,
    desp_busqueda_id integer,
    desp_busqueda_latitud decimal(11,8),
    desp_busqueda_longitud decimal(11,8),
    desp_busqueda_parametros lvarchar,
    desp_busqueda_motivo lvarchar,
    desp_busqueda_usuario integer,
    desp_busqueda_fecha_hora datetime year to minute 
        default current year to minute,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_registro_busqueda from "public";

{ TABLE dfdes_chn row size = 163 number of columns = 17 index size = 55 }

create table dfdes_chn 
  (
    dfdc_catalogo integer,
    dfdc_codigo smallint,
    dfdc_nu_reg smallint,
    dfdc_tipo_desc char(1),
    dfdc_fec_ini date,
    dfdc_mes_act date,
    dfdc_fin_pres date,
    dfdc_monto money(16,2),
    dfdc_saldo money(16,2),
    dfdc_mensual money(16,2),
    dfdc_tot_cuotas smallint,
    dfdc_num_cuotas smallint,
    dfdc_nom_banco char(6),
    dfdc_codeudor integer,
    dfdc_nom_bene char(50),
    dfdc_no_prest char(50),
    dfdc_si_no char(1),
    primary key (dfdc_no_prest) 
  );

revoke all on dfdes_chn from "public";

{ TABLE aud_dfdes_chn row size = 347 number of columns = 37 index size = 0 }

create table aud_dfdes_chn 
  (
    dfdc_catalogo integer,
    dfdc_codigo smallint,
    dfdc_nu_reg smallint,
    dfdc_tipo_desc char(1),
    dfdc_fec_ini date,
    dfdc_mes_act date,
    dfdc_fin_pres date,
    dfdc_monto money(16,2),
    dfdc_saldo money(16,2),
    dfdc_mensual money(16,2),
    dfdc_tot_cuotas smallint,
    dfdc_num_cuotas smallint,
    dfdc_nom_banco char(6),
    dfdc_codeudor integer,
    dfdc_nom_bene char(50),
    dfdc_no_prest char(50),
    dfdc_si_no char(1),
    aud_dfdc_catalogo integer,
    aud_dfdc_codigo smallint,
    aud_dfdc_nu_reg smallint,
    aud_dfdc_tipo_desc char(1),
    aud_dfdc_fec_ini date,
    aud_dfdc_mes_act date,
    aud_dfdc_fin_pres date,
    aud_dfdc_monto money(16,2),
    aud_dfdc_saldo money(16,2),
    aud_dfdc_mensual money(16,2),
    aud_dfdc_tot_cuotas smallint,
    aud_dfdc_num_cuotas smallint,
    aud_dfdc_nom_banco char(6),
    aud_dfdc_codeudor integer,
    aud_dfdc_nom_bene char(50),
    aud_dfdc_no_prest char(50),
    aud_dfdc_si_no char(1),
    accion char(1) not null ,
    usuario varchar(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_dfdes_chn from "public";

{ TABLE novedades_finanzas row size = 2071 number of columns = 8 index size = 18 }

create table novedades_finanzas 
  (
    nov_id serial not null ,
    nov_grupo smallint,
    nov_cat_pagador integer,
    nov_fecha date,
    nov_renglon smallint,
    nov_novedad smallint,
    nov_descripcion lvarchar,
    nov_situacion smallint,
    primary key (nov_id) 
  );

revoke all on novedades_finanzas from "public";

{ TABLE aud_novedades_finanzas row size = 4162 number of columns = 19 index size = 0 }

create table aud_novedades_finanzas 
  (
    nov_id integer,
    nov_grupo smallint,
    nov_cat_pagador integer,
    nov_fecha date,
    nov_renglon smallint,
    nov_novedad smallint,
    nov_descripcion lvarchar,
    nov_situacion smallint,
    desp_nov_id integer,
    desp_nov_grupo smallint,
    desp_nov_cat_pagador integer,
    desp_nov_fecha date,
    desp_nov_renglon smallint,
    desp_nov_novedad smallint,
    desp_nov_descripcion lvarchar,
    desp_nov_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_novedades_finanzas from "public";

{ TABLE historial_conexiones row size = 84 number of columns = 5 index size = 0 }

create table historial_conexiones 
  (
    usuarios varchar(20),
    ultima_conexion datetime year to second,
    hostname varchar(20),
    latitudes decimal(32,6),
    longitudes decimal(32,6)
  );

revoke all on historial_conexiones from "public";

{ TABLE aud_historial_conexiones row size = 189 number of columns = 13 index size = 0 }

create table aud_historial_conexiones 
  (
    usuarios varchar(20),
    ultima_conexion datetime year to second,
    hostname varchar(20),
    latitudes decimal(32,6),
    longitudes decimal(32,6),
    desp_usuarios varchar(20),
    desp_ultima_conexion datetime year to second,
    desp_hostname varchar(20),
    desp_latitudes decimal(32,6),
    desp_longitudes decimal(32,6),
    accion char(1) not null ,
    usuario varchar(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_historial_conexiones from "public";

{ TABLE historial_boletaspago row size = 32 number of columns = 6 index size = 27 }

create table historial_boletaspago 
  (
    impresion_id serial not null ,
    usuario_boleta integer,
    fecha_impresion datetime year to second,
    latitud_impresion decimal(9,6),
    longitud_impresion decimal(9,6),
    usuario_login integer,
    primary key (impresion_id) 
  );

revoke all on historial_boletaspago from "public";

{ TABLE apresto_tareas row size = 2420 number of columns = 11 index size = 34 }

create table apresto_tareas 
  (
    tar_id serial not null ,
    tar_dependencia smallint not null ,
    tar_descripcion lvarchar not null ,
    tar_ambito integer not null ,
    tar_modalidad integer not null ,
    tar_forma varchar(75),
    tar_fecha_ini datetime year to minute,
    tar_fecha_fin datetime year to minute,
    tar_fecha_creacion datetime year to minute,
    tar_documento varchar(255),
    tar_situacion smallint 
        default 1,
    primary key (tar_id) 
  );

revoke all on apresto_tareas from "public";

{ TABLE apresto_funciones row size = 107 number of columns = 3 index size = 9 }

create table apresto_funciones 
  (
    func_id serial not null ,
    func_funcion varchar(100),
    func_situacion smallint,
    primary key (func_id) 
  );

revoke all on apresto_funciones from "public";

{ TABLE aud_apresto_tareas row size = 4860 number of columns = 25 index size = 0 }

create table aud_apresto_tareas 
  (
    tar_id integer,
    tar_dependencia smallint,
    tar_descripcion lvarchar,
    tar_ambito integer,
    tar_modalidad integer,
    tar_forma varchar(75),
    tar_fecha_ini datetime year to minute,
    tar_fecha_fin datetime year to minute,
    tar_fecha_creacion datetime year to minute,
    tar_documento varchar(255),
    tar_situacion smallint,
    desp_tar_id integer,
    desp_tar_dependencia smallint,
    desp_tar_descripcion lvarchar,
    desp_tar_ambito integer,
    desp_tar_modalidad integer,
    desp_tar_forma varchar(75),
    desp_tar_fecha_ini datetime year to minute,
    desp_tar_fecha_fin datetime year to minute,
    desp_tar_fecha_creacion datetime year to minute,
    desp_tar_documento varchar(255),
    desp_tar_situacion smallint,
    usuario char(12) not null ,
    accion char(1) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_apresto_tareas from "public";

{ TABLE eva_pdf row size = 117 number of columns = 5 index size = 27 }

create table eva_pdf 
  (
    evapdf_id serial not null ,
    evapdf_evaluacion integer,
    evapdf_catalogo integer,
    evapdf_ruta varchar(100),
    evapdf_situacion integer,
    primary key (evapdf_id) 
  );

revoke all on eva_pdf from "public";

{ TABLE aud_eva_pdf row size = 254 number of columns = 13 index size = 0 }

create table aud_eva_pdf 
  (
    evapdf_id integer,
    evapdf_evaluacion integer,
    evapdf_catalogo integer,
    evapdf_ruta varchar(100),
    evapdf_situacion integer,
    desp_evapdf_id integer,
    desp_evapdf_evaluacion integer,
    desp_evapdf_catalogo integer,
    desp_evapdf_ruta varchar(100),
    desp_evapdf_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_eva_pdf from "public";

{ TABLE aud_apresto_funciones row size = 234 number of columns = 9 index size = 0 }

create table aud_apresto_funciones 
  (
    func_id integer,
    func_funcion varchar(100),
    func_situacion smallint,
    desp_func_id integer,
    desp_func_funcion varchar(100),
    desp_func_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_apresto_funciones from "public";

{ TABLE comb_contratos row size = 79 number of columns = 7 index size = 18 }

create table comb_contratos 
  (
    cont_id serial not null ,
    cont_nog varchar(50),
    cont_fecha_fin datetime year to day,
    cont_precio_galon money(16,2),
    cont_tipo_combustible integer,
    cont_cantidad integer,
    cont_situacion smallint,
    primary key (cont_id) 
  );

revoke all on comb_contratos from "public";

{ TABLE aud_comb_contratos row size = 178 number of columns = 17 index size = 0 }

create table aud_comb_contratos 
  (
    cont_id integer,
    cont_nog varchar(50),
    cont_fecha_fin datetime year to day,
    cont_precio_galon money(16,2),
    cont_tipo_combustible integer,
    cont_cantidad integer,
    cont_situacion smallint,
    desp_cont_id integer,
    desp_cont_nog varchar(50),
    desp_cont_fecha_fin datetime year to day,
    desp_cont_precio_galon money(16,2),
    desp_cont_tipo_combustible integer,
    desp_cont_cantidad integer,
    desp_cont_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_comb_contratos from "public";

{ TABLE comb_mensuales row size = 19 number of columns = 6 index size = 18 }

create table comb_mensuales 
  (
    men_id serial not null ,
    men_contrato integer,
    men_fecha datetime year to month,
    men_cantidad integer,
    men_tipo char(1),
    men_situacion smallint,
    primary key (men_id) 
  );

revoke all on comb_mensuales from "public";

{ TABLE aud_comb_mensuales row size = 58 number of columns = 15 index size = 0 }

create table aud_comb_mensuales 
  (
    men_id integer,
    men_contrato integer,
    men_fecha datetime year to month,
    men_cantidad integer,
    men_tipo char(1),
    men_situacion smallint,
    desp_men_id integer,
    desp_men_contrato integer,
    desp_men_fecha datetime year to month,
    desp_men_cantidad integer,
    desp_men_tipo char(1),
    desp_men_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_comb_mensuales from "public";

{ TABLE aud_comb_proyectos row size = 142 number of columns = 11 index size = 0 }

create table aud_comb_proyectos 
  (
    pro_id integer,
    pro_mensual integer,
    pro_documento varchar(50),
    pro_situacion smallint,
    desp_pro_id integer,
    desp_pro_mensual integer,
    desp_pro_documento varchar(50),
    desp_pro_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_comb_proyectos from "public";

{ TABLE comb_asignaciones_saldos row size = 15 number of columns = 5 index size = 18 }

create table comb_asignaciones_saldos 
  (
    sal_id serial not null ,
    sal_fecha datetime year to month,
    sal_cuota char(1),
    sal_tipo integer,
    sal_situacion smallint,
    primary key (sal_id) 
  );

revoke all on comb_asignaciones_saldos from "public";

{ TABLE aud_comb_asignaciones_saldos row size = 50 number of columns = 13 index size = 0 }

create table aud_comb_asignaciones_saldos 
  (
    sal_id integer,
    sal_fecha datetime year to month,
    sal_cuota char(1),
    sal_tipo integer,
    sal_situacion smallint,
    desp_sal_id integer,
    desp_sal_fecha datetime year to month,
    desp_sal_cuota char(1),
    desp_sal_tipo integer,
    desp_sal_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_comb_asignaciones_saldos from "public";

{ TABLE comb_dependencias row size = 300 number of columns = 9 index size = 16 }

create table comb_dependencias 
  (
    dep_id serial not null ,
    dep_desc_lg varchar(150),
    dep_desc_md varchar(75),
    dep_desc_ct varchar(50),
    dep_dependencia smallint,
    dep_latitud decimal(10,8),
    dep_longitud decimal(10,8),
    dep_gasolinera smallint,
    dep_situacion smallint,
    primary key (dep_id) 
  );

revoke all on comb_dependencias from "public";

{ TABLE aud_comb_dependencias row size = 620 number of columns = 21 index size = 0 }

create table aud_comb_dependencias 
  (
    dep_id integer,
    dep_desc_lg varchar(150),
    dep_desc_md varchar(75),
    dep_desc_ct varchar(50),
    dep_dependencia smallint,
    dep_latitud decimal(10,8),
    dep_longitud decimal(10,8),
    dep_gasolinera smallint,
    dep_situacion smallint,
    desp_dep_id integer,
    desp_dep_desc_lg varchar(150),
    desp_dep_desc_md varchar(75),
    desp_dep_desc_ct varchar(50),
    desp_dep_dependencia smallint,
    desp_dep_latitud decimal(10,8),
    desp_dep_longitud decimal(10,8),
    desp_dep_gasolinera smallint,
    desp_dep_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_comb_dependencias from "public";

{ TABLE comb_gas_capacidades row size = 70 number of columns = 7 index size = 27 }

create table comb_gas_capacidades 
  (
    cap_id serial not null ,
    cap_gasolinera integer,
    cap_tanque varchar(50),
    cap_tipo integer,
    cap_cantidad integer,
    cap_cuota char(1),
    cap_situacion smallint,
    primary key (cap_id) 
  );

revoke all on comb_gas_capacidades from "public";

{ TABLE aud_comb_gas_capacidades row size = 160 number of columns = 17 index size = 0 }

create table aud_comb_gas_capacidades 
  (
    cap_id integer,
    cap_gasolinera integer,
    cap_tanque varchar(50),
    cap_tipo integer,
    cap_cantidad integer,
    cap_cuota char(1),
    cap_situacion smallint,
    desp_cap_id integer,
    desp_cap_gasolinera integer,
    desp_cap_tanque varchar(50),
    desp_cap_tipo integer,
    desp_cap_cantidad integer,
    desp_cap_cuota char(1),
    desp_cap_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_comb_gas_capacidades from "public";

{ TABLE comb_hist_asignaciones row size = 2068 number of columns = 5 index size = 18 }

create table comb_hist_asignaciones 
  (
    hist_id serial not null ,
    hist_proyecto integer,
    hist_detalle lvarchar,
    hist_fecha datetime year to minute,
    hist_situacion smallint,
    primary key (hist_id) 
  );

revoke all on comb_hist_asignaciones from "public";

{ TABLE aud_comb_hist_asignaciones row size = 4156 number of columns = 13 index size = 0 }

create table aud_comb_hist_asignaciones 
  (
    hist_id integer,
    hist_proyecto integer,
    hist_detalle lvarchar,
    hist_fecha datetime year to minute,
    hist_situacion smallint,
    desp_hist_id integer,
    desp_hist_proyecto integer,
    desp_hist_detalle lvarchar,
    desp_hist_fecha datetime year to minute,
    desp_hist_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_comb_hist_asignaciones from "public";

{ TABLE comb_asignaciones row size = 2069 number of columns = 6 index size = 27 }

create table comb_asignaciones 
  (
    asig_id serial not null ,
    asig_dep integer,
    asig_proyecto integer,
    asig_cantidad integer,
    asig_doc_recepcion lvarchar,
    asig_situacion smallint,
    primary key (asig_id) 
  );

revoke all on comb_asignaciones from "public";

{ TABLE aud_comb_asignaciones row size = 4158 number of columns = 15 index size = 0 }

create table aud_comb_asignaciones 
  (
    asig_id integer,
    asig_dep integer,
    asig_proyecto integer,
    asig_cantidad integer,
    asig_doc_recepcion lvarchar,
    asig_situacion smallint,
    desp_asig_id integer,
    desp_asig_dep integer,
    desp_asig_proyecto integer,
    desp_asig_cantidad integer,
    desp_asig_doc_recepcion lvarchar,
    desp_asig_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_comb_asignaciones from "public";

{ TABLE comb_solicitudes row size = 80 number of columns = 8 index size = 36 }

create table comb_solicitudes 
  (
    sol_id serial not null ,
    sol_asignacion integer,
    sol_entrega integer,
    sol_recibe integer,
    sol_documento varchar(50),
    sol_cantidad integer,
    sol_fecha datetime year to minute,
    sol_situacion smallint,
    primary key (sol_id) 
  );

revoke all on comb_solicitudes from "public";

{ TABLE aud_comb_solicitudes row size = 180 number of columns = 19 index size = 0 }

create table aud_comb_solicitudes 
  (
    sol_id integer,
    sol_asignacion integer,
    sol_entrega integer,
    sol_recibe integer,
    sol_documento varchar(50),
    sol_cantidad integer,
    sol_fecha datetime year to minute,
    sol_situacion smallint,
    desp_sol_id integer,
    desp_sol_asignacion integer,
    desp_sol_entrega integer,
    desp_sol_recibe integer,
    desp_sol_documento varchar(50),
    desp_sol_cantidad integer,
    desp_sol_fecha datetime year to minute,
    desp_sol_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_comb_solicitudes from "public";

{ TABLE comb_permisos row size = 14 number of columns = 4 index size = 27 }

create table comb_permisos 
  (
    perm_id serial not null ,
    perm_catalogo integer,
    perm_dependencia integer,
    perm_situacion smallint,
    primary key (perm_id) 
  );

revoke all on comb_permisos from "public";

{ TABLE comb_movimientos row size = 38 number of columns = 10 index size = 54 }

create table comb_movimientos 
  (
    mov_id serial not null ,
    mov_dep integer,
    mov_tipo char(1),
    mov_cantidad integer,
    mov_fecha datetime year to minute,
    mov_asignacion integer,
    mov_solicitud integer,
    mov_vale integer,
    mov_traslado integer,
    mov_situacion smallint,
    primary key (mov_id) 
  );

revoke all on comb_movimientos from "public";

{ TABLE aud_comb_movimientos row size = 96 number of columns = 23 index size = 0 }

create table aud_comb_movimientos 
  (
    mov_id integer,
    mov_dep integer,
    mov_tipo char(1),
    mov_cantidad integer,
    mov_fecha datetime year to minute,
    mov_asignacion integer,
    mov_solicitud integer,
    mov_vale integer,
    mov_traslado integer,
    mov_situacion smallint,
    desp_mov_id integer,
    desp_mov_dep integer,
    desp_mov_tipo char(1),
    desp_mov_cantidad integer,
    desp_mov_fecha datetime year to minute,
    desp_mov_asignacion integer,
    desp_mov_solicitud integer,
    desp_mov_vale integer,
    desp_mov_traslado integer,
    desp_mov_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_comb_movimientos from "public";

{ TABLE aud_comb_permisos row size = 48 number of columns = 11 index size = 0 }

create table aud_comb_permisos 
  (
    perm_id integer,
    perm_catalogo integer,
    perm_dependencia integer,
    perm_situacion smallint,
    desp_perm_id integer,
    desp_perm_catalogo integer,
    desp_perm_dependencia integer,
    desp_perm_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_comb_permisos from "public";

{ TABLE lib_arrestados row size = 4144 number of columns = 11 index size = 9 }

create table lib_arrestados 
  (
    are_id serial not null ,
    are_gra_a integer,
    are_catalogo integer,
    are_ordeno integer,
    are_gra_o integer,
    are_motivo lvarchar,
    are_fecha_ini datetime year to minute,
    are_fecha_fin datetime year to minute,
    are_obs lvarchar,
    are_estado integer,
    are_situacion integer,
    primary key (are_id) 
  );

revoke all on lib_arrestados from "public";

{ TABLE aud_lib_arrestados row size = 8308 number of columns = 25 index size = 0 }

create table aud_lib_arrestados 
  (
    are_id integer,
    are_gra_a integer,
    are_catalogo integer,
    are_ordeno integer,
    are_gra_o integer,
    are_motivo lvarchar,
    are_fecha_ini datetime year to minute,
    are_fecha_fin datetime year to minute,
    are_obs lvarchar,
    are_estado integer,
    are_situacion integer,
    desp_are_id integer,
    desp_are_gra_a integer,
    desp_are_catalogo integer,
    desp_are_ordeno integer,
    desp_are_gra_o integer,
    desp_are_motivo lvarchar,
    desp_are_fecha_ini datetime year to minute,
    desp_are_fecha_fin datetime year to minute,
    desp_are_obs lvarchar,
    desp_are_estado integer,
    desp_are_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lib_arrestados from "public";

{ TABLE lib_articulos row size = 263 number of columns = 4 index size = 9 }

create table lib_articulos 
  (
    art_id serial not null ,
    art_desc varchar(250),
    art_estado integer,
    art_situacion integer,
    primary key (art_id) 
  );

revoke all on lib_articulos from "public";

{ TABLE aud_lib_articulos row size = 546 number of columns = 11 index size = 0 }

create table aud_lib_articulos 
  (
    art_id integer,
    art_desc varchar(250),
    art_estado integer,
    art_situacion integer,
    desp_art_id integer,
    desp_art_desc varchar(250),
    desp_art_estado integer,
    desp_art_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lib_articulos from "public";

{ TABLE lib_consignas row size = 2071 number of columns = 6 index size = 9 }

create table lib_consignas 
  (
    cons_id serial not null ,
    cons_cat_ordeno integer,
    cons_cat_ingreso integer,
    cons_fecha date,
    cons_desc lvarchar,
    cons_situacion integer,
    primary key (cons_id) 
  );

revoke all on lib_consignas from "public";

{ TABLE aud_lib_consignas row size = 4162 number of columns = 15 index size = 0 }

create table aud_lib_consignas 
  (
    cons_id integer,
    cons_cat_ordeno integer,
    cons_cat_ingreso integer,
    cons_fecha date,
    cons_desc lvarchar,
    cons_situacion integer,
    desp_cons_id integer,
    desp_cons_cat_ordeno integer,
    desp_cons_cat_ingreso integer,
    desp_cons_fecha date,
    desp_cons_desc lvarchar,
    desp_cons_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lib_consignas from "public";

{ TABLE lib_estado_art row size = 259 number of columns = 3 index size = 9 }

create table lib_estado_art 
  (
    estado_id serial not null ,
    estado_desc varchar(250),
    estado_situacion integer,
    primary key (estado_id) 
  );

revoke all on lib_estado_art from "public";

{ TABLE aud_lib_estado_art row size = 538 number of columns = 9 index size = 0 }

create table aud_lib_estado_art 
  (
    estado_id integer,
    estado_desc varchar(250),
    estado_situacion integer,
    desp_estado_id integer,
    desp_estado_desc varchar(250),
    desp_estado_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lib_estado_art from "public";

{ TABLE lib_inventario row size = 16 number of columns = 4 index size = 9 }

create table lib_inventario 
  (
    inv_id serial not null ,
    inv_articulos integer,
    inv_cantidad integer,
    inv_situacion integer,
    primary key (inv_id) 
  );

revoke all on lib_inventario from "public";

{ TABLE aud_lib_inventario row size = 52 number of columns = 11 index size = 0 }

create table aud_lib_inventario 
  (
    inv_id integer,
    inv_articulos integer,
    inv_cantidad integer,
    inv_situacion integer,
    desp_inv_id integer,
    desp_inv_articulos integer,
    desp_inv_cantidad integer,
    desp_inv_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lib_inventario from "public";

{ TABLE lib_permisos row size = 177 number of columns = 6 index size = 9 }

create table lib_permisos 
  (
    perm_id serial not null ,
    perm_cat integer,
    perm_fecha_ini datetime year to minute,
    perm_fecha_fin datetime year to minute,
    perm_motivo varchar(150),
    perm_situacion integer,
    primary key (perm_id) 
  );

revoke all on lib_permisos from "public";

{ TABLE aud_lib_permisos row size = 374 number of columns = 15 index size = 0 }

create table aud_lib_permisos 
  (
    perm_id integer,
    perm_cat integer,
    perm_fecha_ini datetime year to minute,
    perm_fecha_fin datetime year to minute,
    perm_motivo varchar(150),
    perm_situacion integer,
    desp_perm_id integer,
    desp_perm_cat integer,
    desp_perm_fecha_ini datetime year to minute,
    desp_perm_fecha_fin datetime year to minute,
    desp_perm_motivo varchar(150),
    desp_perm_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lib_permisos from "public";

{ TABLE lib_vehiculos row size = 1030 number of columns = 9 index size = 9 }

create table lib_vehiculos 
  (
    veh_id serial not null ,
    veh_cat_veh varchar(250),
    veh_cond_cat integer,
    veh_hora_salida datetime year to minute,
    veh_hora_entrada datetime year to minute,
    veh_destino varchar(250),
    veh_procedencia varchar(250),
    veh_obs varchar(250),
    veh_situacion integer,
    primary key (veh_id) 
  );

revoke all on lib_vehiculos from "public";

{ TABLE aud_lib_vehiculos row size = 2080 number of columns = 21 index size = 0 }

create table aud_lib_vehiculos 
  (
    veh_id integer,
    veh_cat_veh varchar(250),
    veh_cond_cat integer,
    veh_hora_salida datetime year to minute,
    veh_hora_entrada datetime year to minute,
    veh_destino varchar(250),
    veh_procedencia varchar(250),
    veh_obs varchar(250),
    veh_situacion integer,
    desp_veh_id integer,
    desp_veh_cat_veh varchar(250),
    desp_veh_cond_cat integer,
    desp_veh_hora_salida datetime year to minute,
    desp_veh_hora_entrada datetime year to minute,
    desp_veh_destino varchar(250),
    desp_veh_procedencia varchar(250),
    desp_veh_obs varchar(250),
    desp_veh_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_lib_vehiculos from "public";

{ TABLE asig_menuautocom row size = 20 number of columns = 5 index size = 18 }

create table asig_menuautocom 
  (
    asig_id serial not null ,
    asig_catalogo integer not null ,
    asig_app integer not null ,
    asig_fecha datetime year to minute,
    asig_situacion char(1) 
        default '1',
    primary key (asig_id) 
  );

revoke all on asig_menuautocom from "public";

{ TABLE aud_asig_menuautocom row size = 60 number of columns = 13 index size = 0 }

create table aud_asig_menuautocom 
  (
    asig_id integer,
    asig_catalogo integer,
    asig_app integer,
    asig_fecha datetime year to minute,
    asig_situacion char(1) 
        default '1',
    desp_asig_id integer,
    desp_asig_catalogo integer,
    desp_asig_app integer,
    desp_asig_fecha datetime year to minute,
    desp_asig_situacion char(1) 
        default '1',
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_asig_menuautocom from "public";

{ TABLE grupo_menuautocom row size = 2164 number of columns = 5 index size = 0 }

create table grupo_menuautocom 
  (
    gma_codigo serial not null ,
    gma_desc varchar(100,1) not null ,
    gma_fecha_creada datetime year to minute,
    gma_descripcion lvarchar,
    gma_situacion char(1) 
        default '1'
  );

revoke all on grupo_menuautocom from "public";

{ TABLE aud_grupo_menuautocom row size = 4348 number of columns = 13 index size = 0 }

create table aud_grupo_menuautocom 
  (
    gma_codigo integer,
    gma_desc varchar(100,1),
    gma_fecha_creada datetime year to minute,
    gma_descripcion lvarchar,
    gma_situacion char(1) 
        default '1',
    desp_gma_codigo integer,
    desp_gma_desc varchar(100,1),
    desp_gma_fecha_creada datetime year to minute,
    desp_gma_descripcion lvarchar,
    desp_gma_situacion char(1) 
        default '1',
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_grupo_menuautocom from "public";

{ TABLE niveles_autocom row size = 4137 number of columns = 10 index size = 18 }

create table niveles_autocom 
  (
    aut_codigo serial not null ,
    aut_plaza integer not null ,
    aut_permiso integer not null ,
    aut_fecha_asignada datetime year to minute,
    aut_fecha_eliminada datetime year to minute,
    aut_asigno_per integer,
    aut_elimino_per integer,
    aut_descripcion_del lvarchar,
    aut_descripcion lvarchar,
    aut_situacion char(1) 
        default '1'
  );

revoke all on niveles_autocom from "public";

{ TABLE aud_niveles_autocom row size = 8294 number of columns = 23 index size = 0 }

create table aud_niveles_autocom 
  (
    aut_codigo integer,
    aut_plaza integer,
    aut_permiso integer,
    aut_fecha_asignada datetime year to minute,
    aut_fecha_eliminada datetime year to minute,
    aut_asigno_per integer,
    aut_elimino_per integer,
    aut_descripcion_del lvarchar,
    aut_descripcion lvarchar,
    aut_situacion char(1) 
        default '1',
    desp_aut_codigo integer,
    desp_aut_plaza integer,
    desp_aut_permiso integer,
    desp_aut_fecha_asignada datetime year to minute,
    desp_aut_fecha_eliminada datetime year to minute,
    desp_aut_asigno_per integer,
    desp_aut_elimino_per integer,
    desp_aut_descripcion_del lvarchar,
    desp_aut_descripcion lvarchar,
    desp_aut_situacion char(1) 
        default '1',
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_niveles_autocom from "public";

{ TABLE menuautocom row size = 2178 number of columns = 6 index size = 9 }

create table menuautocom 
  (
    menu_codigo integer not null ,
    menu_descr varchar(100) not null ,
    menu_clave varchar(15) not null ,
    menu_grupo integer,
    menu_detalle lvarchar,
    menu_situacion smallint,
    primary key (menu_codigo) 
  );

revoke all on menuautocom from "public";

{ TABLE aud_menuautocom row size = 4374 number of columns = 15 index size = 0 }

create table aud_menuautocom 
  (
    menu_codigo integer,
    menu_descr varchar(100),
    menu_clave varchar(15),
    menu_grupo integer,
    menu_detalle lvarchar,
    menu_situacion smallint,
    desp_menu_codigo integer,
    desp_menu_descr varchar(100),
    desp_menu_clave varchar(15),
    desp_menu_grupo integer,
    desp_menu_detalle lvarchar,
    desp_menu_situacion smallint,
    accion char(1),
    usuario char(10),
    hora datetime year to minute
  );

revoke all on aud_menuautocom from "public";

{ TABLE comb_proyectos row size = 2112 number of columns = 5 index size = 18 }

create table comb_proyectos 
  (
    pro_id serial not null ,
    pro_mensual integer,
    pro_documento varchar(50),
    pro_archivo lvarchar,
    pro_situacion smallint,
    primary key (pro_id) 
  );

revoke all on comb_proyectos from "public";

{ TABLE comb_hist_varcontrato row size = 43 number of columns = 8 index size = 18 }

create table comb_hist_varcontrato 
  (
    var_id serial not null ,
    var_contrato integer not null ,
    var_precio_actual money(16,2) not null ,
    var_nuevo_precio money(16,2) not null ,
    var_cant_actual integer not null ,
    var_nueva_cant_actualiza integer not null ,
    var_fecha_actualiza datetime year to minute not null ,
    var_situacion smallint 
        default 1 not null ,
    primary key (var_id) 
  );

revoke all on comb_hist_varcontrato from "public";

{ TABLE comb_histo_rep row size = 23 number of columns = 7 index size = 18 }

create table comb_histo_rep 
  (
    hist_id integer,
    hist_catalogo integer,
    hist_reporte char(1),
    hist_dependencia integer,
    hist_ejercito char(1),
    hist_fecha datetime year to minute,
    hist_situacion smallint 
        default 1
  );

revoke all on comb_histo_rep from "public";

{ TABLE aud_comb_histo_rep row size = 66 number of columns = 17 index size = 0 }

create table aud_comb_histo_rep 
  (
    hist_id integer,
    hist_catalogo integer,
    hist_reporte char(1),
    hist_dependencia integer,
    hist_ejercito char(1),
    hist_fecha datetime year to minute,
    hist_situacion smallint,
    desp_hist_id integer,
    desp_hist_catalogo integer,
    desp_hist_reporte char(1),
    desp_hist_dependencia integer,
    desp_hist_ejercito char(1),
    desp_hist_fecha datetime year to minute,
    desp_hist_situacion smallint 
        default 1,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_comb_histo_rep from "public";

{ TABLE aud_comb_hist_varcontrato row size = 106 number of columns = 19 index size = 0 }

create table aud_comb_hist_varcontrato 
  (
    var_id integer,
    var_contrato integer,
    var_precio_actual money(16,2),
    var_nuevo_precio money(16,2),
    var_cant_actual integer,
    var_nueva_cant_actualiza integer,
    var_fecha_actualiza datetime year to minute,
    var_situacion smallint 
        default 1,
    desp_var_id integer,
    desp_var_contrato integer,
    desp_var_precio_actual money(16,2),
    desp_var_nuevo_precio money(16,2),
    desp_var_cant_actual integer,
    desp_var_nueva_cant_actualiza integer,
    desp_var_fecha_actualiza datetime year to minute,
    desp_var_situacion smallint 
        default 1,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_comb_hist_varcontrato from "public";

{ TABLE ofi_fiesta row size = 36 number of columns = 7 index size = 9 }

create table ofi_fiesta 
  (
    fie_id serial not null ,
    fie_cat integer,
    fie_cod varchar(10),
    fie_estado integer,
    fie_data datetime year to minute,
    fie_situacion integer,
    fie_registro smallint,
    primary key (fie_id) 
  );

revoke all on ofi_fiesta from "public";

{ TABLE resultado_procedimiento row size = 105 number of columns = 2 index size = 9 }

create table resultado_procedimiento 
  (
    id serial not null ,
    mensaje varchar(100),
    primary key (id) 
  );

revoke all on resultado_procedimiento from "public";

{ TABLE re22_tipo_asignaciones row size = 259 number of columns = 3 index size = 9 }

create table re22_tipo_asignaciones 
  (
    tipo_id serial not null ,
    tipo_descripcion varchar(250) not null ,
    tipo_situacion integer,
    primary key (tipo_id) 
  );

revoke all on re22_tipo_asignaciones from "public";

{ TABLE aud_re22_tipo_asignaciones row size = 538 number of columns = 9 index size = 0 }

create table aud_re22_tipo_asignaciones 
  (
    tipo_id integer,
    tipo_descripcion varchar(250),
    tipo_situacion integer,
    desp_tipo_id integer,
    desp_tipo_descripcion varchar(250),
    desp_tipo_situacion integer,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_re22_tipo_asignaciones from "public";

{ TABLE fmorg row size = 77 number of columns = 13 index size = 79 }

create table fmorg 
  (
    org_plaza integer not null ,
    org_ceom char(6) not null ,
    org_dependencia smallint not null ,
    org_jerarquia char(12) not null ,
    org_grado smallint not null ,
    org_plaza_desc char(30) not null ,
    org_situacion char(1),
    org_cod_pago char(1),
    org_hrs_trab smallint not null ,
    org_fec_ult_mod date,
    org_ord_gral char(7),
    org_nominas char(1),
    org_categoria varchar(4),
    primary key (org_plaza)  constraint u2128_1172
  );

revoke all on fmorg from "public";

{ TABLE fmper row size = 268 number of columns = 34 index size = 198 }

create table fmper 
  (
    per_catalogo integer not null ,
    per_serie char(8),
    per_grado smallint not null ,
    per_arma smallint not null ,
    per_nom1 char(15) not null ,
    per_nom2 char(15),
    per_ape1 char(15) not null ,
    per_ape2 char(15),
    per_ape3 char(15),
    per_ced_ord char(4),
    per_ced_reg integer,
    per_fec_ext_ced date,
    per_ext_ced_lugar char(4) not null ,
    per_est_civil char(1),
    per_direccion char(50),
    per_zona smallint,
    per_dir_lugar char(4) not null ,
    per_telefono integer,
    per_sexo char(1),
    per_fec_nac date,
    per_nac_lugar char(4) not null ,
    per_promocion smallint,
    per_afil_ipm char(1),
    per_sangre char(3),
    per_antiguedad smallint,
    per_bienal smallint not null ,
    per_plaza integer not null ,
    per_desc_empleo char(45) not null ,
    per_fec_nomb date,
    per_ord_gral char(7),
    per_punto_og smallint,
    per_situacion char(2) not null ,
    per_prima_prof smallint,
    per_dpi char(15),
    primary key (per_catalogo)  constraint u1417_795
  );

revoke all on fmper from "public";

{ TABLE fdpue row size = 85 number of columns = 13 index size = 26 }

create table fdpue 
  (
    pue_catalogo integer,
    pue_grado smallint not null ,
    pue_arma smallint not null ,
    pue_dependencia smallint not null ,
    pue_jerarquia char(3),
    pue_plaza integer not null ,
    pue_ceom char(6) not null ,
    pue_desc char(45) not null ,
    pue_situacion char(2) not null ,
    pue_fec_nomb date not null ,
    pue_ord_gral char(5) not null ,
    pue_punto_og smallint not null ,
    pue_fec_cese date not null ,
    primary key (pue_catalogo,pue_plaza,pue_fec_nomb)  constraint pk_fdpue
  );

revoke all on fdpue from "public";

{ TABLE fdfam row size = 227 number of columns = 26 index size = 38 }

create table fdfam 
  (
    fam_cat_militar integer not null ,
    fam_cat_familiar integer not null ,
    fam_nom1 char(15) not null ,
    fam_nom2 char(15),
    fam_ape1 char(15) not null ,
    fam_ape2 char(15),
    fam_parentesco smallint not null ,
    fam_sexo char(1),
    fam_sangre char(3),
    fam_est_civil char(1),
    fam_fec_nac date,
    fam_nac_lugar char(4),
    fam_ced_ord char(4),
    fam_ced_reg integer,
    fam_fec_ext_ced date,
    fam_lugar_ext_ced char(4),
    fam_direccion char(50),
    fam_zona smallint,
    fam_dir_lugar char(4) not null ,
    fam_telefono integer,
    fam_ocupacion char(30),
    fam_empresa char(30),
    fam_cheque smallint,
    fam_beneficiario smallint,
    fam_emergencia smallint,
    fam_clase_pasiva smallint,
    primary key (fam_cat_militar,fam_cat_familiar)  constraint pk_fdfam
  );

revoke all on fdfam from "public";

{ TABLE fdcur row size = 69 number of columns = 14 index size = 15 }

create table fdcur 
  (
    cur_catalogo integer,
    cur_grado smallint not null ,
    cur_curso smallint not null ,
    cur_fec_inicio date not null ,
    cur_fec_fin date not null ,
    cur_pais smallint not null ,
    cur_escuela smallint not null ,
    cur_valor money(16,2),
    cur_punteo decimal(5,2),
    cur_equi smallint,
    cur_puesto char(3),
    cur_obserba char(20),
    cur_docto_auto char(10),
    cur_nivel_esc char(1),
    primary key (cur_catalogo,cur_curso,cur_fec_inicio)  constraint u2131_1180
  );

revoke all on fdcur from "public";

{ TABLE rm_morg row size = 122 number of columns = 13 index size = 9 }

create table rm_morg 
  (
    org_plaza integer not null ,
    org_ceom char(6) not null ,
    org_dependencia smallint not null ,
    org_jerarquia char(12),
    org_grado smallint not null ,
    org_plaza_desc char(75) not null ,
    org_situacion char(1),
    org_cod_pago char(1),
    org_hrs_trab smallint not null ,
    org_fec_ult_mod date,
    org_ord_gral char(7),
    org_nominas char(1),
    org_categoria varchar(4),
    primary key (org_plaza) 
  );

revoke all on rm_morg from "public";

{ TABLE aud_rm_morg row size = 264 number of columns = 29 index size = 0 }

create table aud_rm_morg 
  (
    org_plaza integer,
    org_ceom char(6),
    org_dependencia smallint,
    org_jerarquia char(12),
    org_grado smallint,
    org_plaza_desc char(75),
    org_situacion char(1),
    org_cod_pago char(1),
    org_hrs_trab smallint,
    org_fec_ult_mod date,
    org_ord_gral char(7),
    org_nominas char(1),
    org_categoria varchar(4),
    desp_org_plaza integer,
    desp_org_ceom char(6),
    desp_org_dependencia smallint,
    desp_org_jerarquia char(12),
    desp_org_grado smallint,
    desp_org_plaza_desc char(75),
    desp_org_situacion char(1),
    desp_org_cod_pago char(1),
    desp_org_hrs_trab smallint,
    desp_org_fec_ult_mod date,
    desp_org_ord_gral char(7),
    desp_org_nominas char(1),
    desp_org_categoria varchar(4),
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_rm_morg from "public";

{ TABLE re22_historial_boletaspago row size = 32 number of columns = 6 index size = 27 }

create table re22_historial_boletaspago 
  (
    impresion_id serial not null ,
    usuario_boleta integer,
    fecha_impresion datetime year to second,
    latitud_impresion decimal(9,6),
    longitud_impresion decimal(9,6),
    usuario_login integer,
    primary key (impresion_id) 
  );

revoke all on re22_historial_boletaspago from "public";

{ TABLE aud_re22_historial_boletaspago row size = 84 number of columns = 15 index size = 0 }

create table aud_re22_historial_boletaspago 
  (
    impresion_id integer,
    usuario_boleta integer,
    fecha_impresion datetime year to second,
    latitud_impresion decimal(9,6),
    longitud_impresion decimal(9,6),
    usuario_login integer,
    desp_impresion_id integer,
    desp_usuario_boleta integer,
    desp_fecha_impresion datetime year to second,
    desp_latitud_impresion decimal(9,6),
    desp_longitud_impresion decimal(9,6),
    desp_usuario_login integer,
    accion char(1),
    usuario char(12),
    hora datetime year to minute
  );

revoke all on aud_re22_historial_boletaspago from "public";

{ TABLE bienes row size = 137 number of columns = 5 index size = 18 }

create table bienes 
  (
    bie_id integer not null ,
    bie_numbien varchar(25),
    bie_descripcion varchar(100),
    bie_marca integer,
    bie_situacion smallint 
        default 1,
    primary key (bie_id) 
  );

revoke all on bienes from "public";

{ TABLE aud_bienes row size = 294 number of columns = 13 index size = 0 }

create table aud_bienes 
  (
    bie_id integer,
    bie_numbien varchar(25),
    bie_descripcion varchar(100),
    bie_marca integer,
    bie_situacion smallint 
        default 1,
    desp_bie_id integer,
    desp_bie_numbien varchar(25),
    desp_bie_descripcion varchar(100),
    desp_bie_marca integer,
    desp_bie_situacion smallint 
        default 1,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_bienes from "public";

{ TABLE conocimientos_bienes row size = 288 number of columns = 8 index size = 18 }

create table conocimientos_bienes 
  (
    con_numero integer not null ,
    con_catalogo_entrega integer,
    con_catalogo_recibe integer,
    con_catalogo_devolu integer,
    con_fecha_entrega datetime year to minute 
        default current year to minute,
    con_fecha_devolucion datetime year to minute 
        default current year to minute,
    con_observaciones varchar(255),
    con_situacion smallint 
        default 1,
    primary key (con_numero) 
  );

revoke all on conocimientos_bienes from "public";

{ TABLE aud_conocimientos_bienes row size = 596 number of columns = 19 index size = 0 }

create table aud_conocimientos_bienes 
  (
    con_numero integer,
    con_catalogo_entrega integer,
    con_catalogo_recibe integer,
    con_catalogo_devolu integer,
    con_fecha_entrega datetime year to minute 
        default current year to minute,
    con_fecha_devolucion datetime year to minute 
        default current year to minute,
    con_observaciones varchar(255),
    con_situacion smallint 
        default 1,
    desp_con_numero integer not null ,
    desp_con_catalogo_entrega integer,
    desp_con_catalogo_recibe integer,
    desp_con_catalogo_devolu integer,
    desp_con_fecha_entrega datetime year to minute 
        default current year to minute,
    desp_con_fecha_devolucion datetime year to minute 
        default current year to minute,
    desp_con_observaciones varchar(255),
    desp_con_situacion smallint 
        default 1,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_conocimientos_bienes from "public";

{ TABLE detalle_conocimiento_bienes row size = 14 number of columns = 4 index size = 27 }

create table detalle_conocimiento_bienes 
  (
    det_numero serial not null ,
    det_numero_conocimiento integer,
    det_idbien integer,
    det_situacion smallint 
        default 1,
    primary key (det_numero) 
  );

revoke all on detalle_conocimiento_bienes from "public";

{ TABLE aud_detalle_conocimiento_bienes row size = 48 number of columns = 11 index size = 0 }

create table aud_detalle_conocimiento_bienes 
  (
    det_numero integer,
    det_numero_conocimiento integer,
    det_idbien integer,
    det_situacion smallint 
        default 1,
    desp_det_numero integer,
    desp_det_numero_conocimiento integer,
    desp_det_idbien integer,
    desp_det_situacion smallint 
        default 1,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_detalle_conocimiento_bienes from "public";

{ TABLE comb_vales row size = 4204 number of columns = 21 index size = 72 }

create table comb_vales 
  (
    val_id serial not null ,
    val_fecha datetime year to minute,
    val_correlativo varchar(25),
    val_dep integer,
    val_militar smallint,
    val_tipo_vehiculo char(1),
    val_placa varchar(15),
    val_catalogo_vehiculo integer,
    val_catalogo_011 integer,
    val_catalogo_022 integer,
    val_asignacion integer,
    val_traslado integer,
    val_cantidad integer,
    val_autorizo integer,
    val_sirvio integer,
    val_despacho integer,
    val_uso smallint,
    val_area smallint,
    val_razon lvarchar,
    val_razonamiento lvarchar,
    val_situacion smallint,
    primary key (val_id) 
  );

revoke all on comb_vales from "public";

{ TABLE aud_comb_vales row size = 8452 number of columns = 45 index size = 0 }

create table aud_comb_vales 
  (
    val_id integer,
    val_fecha datetime year to minute,
    val_correlativo varchar(25),
    val_dep integer,
    val_militar smallint,
    val_tipo_vehiculo char(1),
    val_placa varchar(15),
    val_catalogo_vehiculo varchar(15),
    val_catalogo_011 integer,
    val_catalogo_022 integer,
    val_asignacion integer,
    val_traslado integer,
    val_cantidad integer,
    val_autorizo integer,
    val_sirvio integer,
    val_despacho integer,
    val_uso smallint,
    val_area smallint,
    val_razon lvarchar,
    val_razonamiento lvarchar,
    val_situacion smallint,
    desp_val_id integer,
    desp_val_fecha datetime year to minute,
    desp_val_correlativo varchar(25),
    desp_val_dep integer,
    desp_val_militar smallint,
    desp_val_tipo_vehiculo char(1),
    desp_val_placa varchar(15),
    desp_val_catalogo_vehiculo varchar(15),
    desp_val_catalogo_011 integer,
    desp_val_catalogo_022 integer,
    desp_val_asignacion integer,
    desp_val_traslado integer,
    desp_val_cantidad integer,
    desp_val_autorizo integer,
    desp_val_sirvio integer,
    desp_val_despacho integer,
    desp_val_uso smallint,
    desp_val_area smallint,
    desp_val_razon lvarchar,
    desp_val_razonamiento lvarchar,
    desp_val_situacion smallint,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_comb_vales from "public";

{ TABLE comb_notificaciones row size = 2323 number of columns = 8 index size = 18 }

create table comb_notificaciones 
  (
    not_id serial not null ,
    not_fecha datetime year to minute,
    not_dep integer,
    not_mensaje lvarchar,
    not_tipo smallint,
    not_url varchar(250) 
        default '/combustible',
    not_todos smallint 
        default 0,
    not_situacion smallint 
        default 1,
    primary key (not_id) 
  );

revoke all on comb_notificaciones from "public";

{ TABLE aud_comb_notificaciones row size = 4666 number of columns = 19 index size = 0 }

create table aud_comb_notificaciones 
  (
    not_id integer,
    not_fecha datetime year to minute,
    not_dep integer,
    not_mensaje lvarchar,
    not_tipo smallint,
    not_url varchar(250) 
        default '/combustible',
    not_todos smallint 
        default 0,
    not_situacion smallint 
        default 1,
    desp_not_id integer,
    desp_not_fecha datetime year to minute,
    desp_not_dep integer,
    desp_not_mensaje lvarchar,
    desp_not_tipo smallint,
    desp_not_url varchar(250) 
        default '/combustible',
    desp_not_todos smallint 
        default 0,
    desp_not_situacion smallint 
        default 1,
    accion char(1) not null ,
    usuario char(12) not null ,
    hora datetime year to minute not null 
  );

revoke all on aud_comb_notificaciones from "public";


create view v_gra (gra_codigo,gra_desc_ct,gra_desc_md,gra_desc_lg,gra_clase) as 
  select x0.gra_codigo ,x0.gra_desc_ct ,x0.gra_desc_md ,x0.gra_desc_lg 
    ,x0.gra_clase from "informix".grados x0 ;                 
                                          
create view vmper (per_catalogo,per_serie,per_grado,per_arma,per_nom1,per_nom2,per_ape1,per_ape2,per_ape3,per_ced_ord,per_ced_reg,per_fec_ext_ced,per_ext_ced_lugar,per_est_civil,per_direccion,per_zona,per_dir_lugar,per_telefono,per_sexo,per_fec_nac,per_nac_lugar,per_promocion,per_afil_ipm,per_sangre,per_antiguedad,per_bienal,per_plaza,per_desc_empleo,per_fec_nomb,per_ord_gral,per_punto_og,per_situacion,per_prima_prof) as 
  select x0.per_catalogo ,x0.per_serie ,x1.gra_desc_md ,x2.arm_desc_md 
    ,x0.per_nom1 ,x0.per_nom2 ,x0.per_ape1 ,x0.per_ape2 ,x0.per_ape3 
    ,x0.per_ced_ord ,x0.per_ced_reg ,x0.per_fec_ext_ced ,x0.per_ext_ced_lugar 
    ,x0.per_est_civil ,x0.per_direccion ,x0.per_zona ,x0.per_dir_lugar 
    ,x0.per_telefono ,x0.per_sexo ,x0.per_fec_nac ,x0.per_nac_lugar 
    ,x0.per_promocion ,x0.per_afil_ipm ,x0.per_sangre ,x0.per_antiguedad 
    ,x0.per_bienal ,x0.per_plaza ,x0.per_desc_empleo ,x0.per_fec_nomb 
    ,x0.per_ord_gral ,x0.per_punto_og ,x0.per_situacion ,x0.per_prima_prof 
    from "informix".mper x0 ,"informix".grados x1 ,"informix".armas 
    x2 where ((x0.per_grado = x1.gra_codigo ) AND (x2.arm_codigo 
    = x0.per_arma ) ) ;                                      
                                                             
                                                             
       
create view v_division (gra_desc_md,arm_desc_md,per_nom1,per_nom2,per_ape1,per_ape2,division,per_observacion,fecha_inicio,fecha_fin,h_salida,h_entrada,gra_codigo,codigo,catalogo) as 
  select x1.gra_desc_md ,x2.arm_desc_md ,x0.per_nom1 ,x0.per_nom2 
    ,x0.per_ape1 ,x0.per_ape2 ,x4.division ,x3.per_observacion 
    ,x3.fecha_inicio ,x3.fecha_fin ,x3.h_salida ,x3.h_entrada 
    ,x1.gra_codigo ,x4.codigo ,x3.catalogo from "informix".mper 
    x0 ,"informix".grados x1 ,"informix".armas x2 ,"informix".permiso 
    x3 ,"informix".divisiones x4 where ((((x0.per_grado = x1.gra_codigo 
    ) AND (x0.per_arma = x2.arm_codigo ) ) AND (x0.per_catalogo 
    = x3.catalogo ) ) AND (x3.per_division = x4.codigo ) ) ; 
                                                             
                              
create view v_174 (pue_catalogo,pue_grado,pue_desc,pue_fec_nomb,pue_fec_cese,gra_desc_lg,arm_desc_lg,per_nom1,per_nom2,per_ape1,per_ape2,per_desc_empleo,per_fec_nomb,per_ced_ord,per_ced_reg,per_fec_ext_ced,dm_mun_dep) as 
  select x0.pue_catalogo ,x0.pue_grado ,x0.pue_desc ,x0.pue_fec_nomb 
    ,x0.pue_fec_cese ,x2.gra_desc_lg ,x3.arm_desc_lg ,x1.per_nom1 
    ,x1.per_nom2 ,x1.per_ape1 ,x1.per_ape2 ,x1.per_desc_empleo 
    ,x1.per_fec_nomb ,x1.per_ced_ord ,x1.per_ced_reg ,x1.per_fec_ext_ced 
    ,x4.dm_mun_dep from "informix".dpue x0 ,"informix".mper x1 
    ,"informix".grados x2 ,"informix".armas x3 ,"informix".depmun 
    x4 where (((((((x0.pue_fec_nomb >= '1982/12/01' ) AND (x0.pue_fec_nomb 
    <= '1982/12/31' ) ) AND (x0.pue_dependencia = 174 ) ) AND 
    (x1.per_catalogo = x0.pue_catalogo ) ) AND (x0.pue_arma = 
    x3.arm_codigo ) ) AND (x0.pue_grado = x2.gra_codigo ) ) AND 
    (x1.per_ext_ced_lugar = x4.dm_codigo ) )  union all select 
    x5.pue_catalogo ,x5.pue_grado ,x5.pue_desc ,x5.pue_fec_nomb 
    ,x5.pue_fec_cese ,x7.gra_desc_lg ,x8.arm_desc_lg ,x6.per_nom1 
    ,x6.per_nom2 ,x6.per_ape1 ,x6.per_ape2 ,x6.per_desc_empleo 
    ,x6.per_fec_nomb ,x6.per_ced_ord ,x6.per_ced_reg ,x6.per_fec_ext_ced 
    ,x9.dm_mun_dep from "informix".dpue x5 ,"informix".mper x6 
    ,"informix".grados x7 ,"informix".armas x8 ,"informix".depmun 
    x9 where (((((((x5.pue_fec_cese >= '1982/12/01' ) AND (x5.pue_fec_cese 
    <= '1982/12/31' ) ) AND (x5.pue_dependencia = 174 ) ) AND 
    (x6.per_catalogo = x5.pue_catalogo ) ) AND (x5.pue_arma = 
    x8.arm_codigo ) ) AND (x5.pue_grado = x7.gra_codigo ) ) AND 
    (x6.per_ext_ced_lugar = x9.dm_codigo ) ) ;               
                                                             
                                                             
                                                             
                                  
create view v_174u (pue_catalogo,pue_grado,pue_desc,pue_fec_nomb,pue_fec_cese,gra_desc_lg,arm_desc_lg,per_nom1,per_nom2,per_ape1,per_ape2,per_desc_empleo,per_fec_nomb,per_ced_ord,per_ced_reg,per_fec_ext_ced,dm_mun_dep) as 
  select distinct x0.pue_catalogo ,x0.pue_grado ,x0.pue_desc ,
    x0.pue_fec_nomb ,x0.pue_fec_cese ,x0.gra_desc_lg ,x0.arm_desc_lg 
    ,x0.per_nom1 ,x0.per_nom2 ,x0.per_ape1 ,x0.per_ape2 ,x0.per_desc_empleo 
    ,x0.per_fec_nomb ,x0.per_ced_ord ,x0.per_ced_reg ,x0.per_fec_ext_ced 
    ,x0.dm_mun_dep from "informix".v_174 x0 ;                 
                                                             
                                                             
                                                             
                                            
create view v_dpue1980 (pue_catalogo,pue_grado,pue_fecha) as 
  select x0.pue_catalogo ,x0.pue_grado ,max(x0.pue_fec_nomb ) 
    from "informix".dpue x0 where ((x0.pue_fec_nomb >= '1980/01/01'
     ) AND (x0.pue_fec_nomb <= '1980/12/31' ) ) group by x0.pue_catalogo 
    ,x0.pue_grado ;                                          
                                                             
                                                             
                                                             
                        
create view v_dpue1985 (pue_catalogo,pue_grado,pue_fecha) as 
  select x0.pue_catalogo ,x0.pue_grado ,max(x0.pue_fec_nomb ) 
    from "informix".dpue x0 where ((x0.pue_fec_nomb >= '1985/01/01'
     ) AND (x0.pue_fec_nomb <= '1985/12/31' ) ) group by x0.pue_catalogo 
    ,x0.pue_grado ;                                          
                                                             
                                                             
                                                             
                        
create view v_dpue1990 (pue_catalogo,pue_grado,pue_fecha) as 
  select x0.pue_catalogo ,x0.pue_grado ,max(x0.pue_fec_nomb ) 
    from "informix".dpue x0 where ((x0.pue_fec_nomb >= '1990/01/01'
     ) AND (x0.pue_fec_nomb <= '1990/12/31' ) ) group by x0.pue_catalogo 
    ,x0.pue_grado ;                                          
                                                             
                                                             
                                                             
                        
create view v_dpue1995 (pue_catalogo,pue_grado,pue_fecha) as 
  select x0.pue_catalogo ,x0.pue_grado ,max(x0.pue_fec_nomb ) 
    from "informix".dpue x0 where ((x0.pue_fec_nomb >= '1995/01/01'
     ) AND (x0.pue_fec_nomb <= '1995/12/31' ) ) group by x0.pue_catalogo 
    ,x0.pue_grado ;                                          
                                                             
                                                             
                                                             
                        
create view v_dpue1999 (pue_catalogo,pue_grado,pue_fecha) as 
  select x0.pue_catalogo ,x0.pue_grado ,max(x0.pue_fec_nomb ) 
    from "informix".dpue x0 where ((x0.pue_fec_nomb >= '1999/01/01'
     ) AND (x0.pue_fec_nomb <= '1999/12/31' ) ) group by x0.pue_catalogo 
    ,x0.pue_grado ;                                          
                                                             
                                                             
                                                             
                        
create view v_emp2000 (pue_catalogo,pue_grado,pue_desc,pue_fec_nomb,pue_fec_cese,gra_desc_lg,arm_desc_lg,per_nom1,per_nom2,per_ape1,per_ape2,per_desc_empleo,per_fec_nomb,per_ced_ord,per_ced_reg,per_fec_ext_ced,dm_mun_dep) as 
  select x0.pue_catalogo ,x0.pue_grado ,x0.pue_desc ,x0.pue_fec_nomb 
    ,x0.pue_fec_cese ,x2.gra_desc_lg ,x3.arm_desc_lg ,x1.per_nom1 
    ,x1.per_nom2 ,x1.per_ape1 ,x1.per_ape2 ,x1.per_desc_empleo 
    ,x1.per_fec_nomb ,x1.per_ced_ord ,x1.per_ced_reg ,x1.per_fec_ext_ced 
    ,x4.dm_mun_dep from "informix".dpue x0 ,"informix".mper x1 
    ,"informix".grados x2 ,"informix".armas x3 ,"informix".depmun 
    x4 where (((((((x0.pue_fec_nomb >= '2000/01/01' ) AND (x0.pue_fec_nomb 
    <= '2003/12/31' ) ) AND (x0.pue_dependencia IN (40 ,43 )) 
    ) AND (x1.per_catalogo = x0.pue_catalogo ) ) AND (x0.pue_arma 
    = x3.arm_codigo ) ) AND (x0.pue_grado = x2.gra_codigo ) ) 
    AND (x1.per_ext_ced_lugar = x4.dm_codigo ) )  union all select 
    x5.pue_catalogo ,x5.pue_grado ,x5.pue_desc ,x5.pue_fec_nomb 
    ,x5.pue_fec_cese ,x7.gra_desc_lg ,x8.arm_desc_lg ,x6.per_nom1 
    ,x6.per_nom2 ,x6.per_ape1 ,x6.per_ape2 ,x6.per_desc_empleo 
    ,x6.per_fec_nomb ,x6.per_ced_ord ,x6.per_ced_reg ,x6.per_fec_ext_ced 
    ,x9.dm_mun_dep from "informix".dpue x5 ,"informix".mper x6 
    ,"informix".grados x7 ,"informix".armas x8 ,"informix".depmun 
    x9 where (((((((x5.pue_fec_cese >= '2000/01/01' ) AND (x5.pue_fec_cese 
    <= '2003/12/31' ) ) AND (x5.pue_dependencia IN (40 ,43 )) 
    ) AND (x6.per_catalogo = x5.pue_catalogo ) ) AND (x5.pue_arma 
    = x8.arm_codigo ) ) AND (x5.pue_grado = x7.gra_codigo ) ) 
    AND (x6.per_ext_ced_lugar = x9.dm_codigo ) ) ;           
                                                             
                                                             
                                                             
                      
create view v_emp2000a (pue_catalogo,pue_grado,pue_desc,pue_fec_nomb,pue_fec_cese,gra_desc_lg,arm_desc_lg,per_nom1,per_nom2,per_ape1,per_ape2,per_desc_empleo,per_fec_nomb,per_ced_ord,per_ced_reg,per_fec_ext_ced,dm_mun_dep,per_direccion,per_telefono,per_est_civil) as 
  select x0.pue_catalogo ,x0.pue_grado ,x0.pue_desc ,x0.pue_fec_nomb 
    ,x0.pue_fec_cese ,x2.gra_desc_lg ,x3.arm_desc_lg ,x1.per_nom1 
    ,x1.per_nom2 ,x1.per_ape1 ,x1.per_ape2 ,x1.per_desc_empleo 
    ,x1.per_fec_nomb ,x1.per_ced_ord ,x1.per_ced_reg ,x1.per_fec_ext_ced 
    ,x4.dm_mun_dep ,x1.per_direccion ,x1.per_telefono ,x1.per_est_civil 
    from "informix".dpue x0 ,"informix".mper x1 ,"informix".grados 
    x2 ,"informix".armas x3 ,"informix".depmun x4 where (((((((x0.pue_fec_nomb 
    >= '2000/01/01' ) AND (x0.pue_fec_nomb <= '2003/12/31' ) ) 
    AND (x0.pue_dependencia IN (40 ,43 )) ) AND (x1.per_catalogo 
    = x0.pue_catalogo ) ) AND (x0.pue_arma = x3.arm_codigo ) 
    ) AND (x0.pue_grado = x2.gra_codigo ) ) AND (x1.per_ext_ced_lugar 
    = x4.dm_codigo ) )  union all select x5.pue_catalogo ,x5.pue_grado 
    ,x5.pue_desc ,x5.pue_fec_nomb ,x5.pue_fec_cese ,x7.gra_desc_lg 
    ,x8.arm_desc_lg ,x6.per_nom1 ,x6.per_nom2 ,x6.per_ape1 ,x6.per_ape2 
    ,x6.per_desc_empleo ,x6.per_fec_nomb ,x6.per_ced_ord ,x6.per_ced_reg 
    ,x6.per_fec_ext_ced ,x9.dm_mun_dep ,x6.per_direccion ,x6.per_telefono 
    ,x6.per_est_civil from "informix".dpue x5 ,"informix".mper 
    x6 ,"informix".grados x7 ,"informix".armas x8 ,"informix".depmun 
    x9 where (((((((x5.pue_fec_cese >= '2000/01/01' ) AND (x5.pue_fec_cese 
    <= '2003/12/31' ) ) AND (x5.pue_dependencia IN (40 ,43 )) 
    ) AND (x6.per_catalogo = x5.pue_catalogo ) ) AND (x5.pue_arma 
    = x8.arm_codigo ) ) AND (x5.pue_grado = x7.gra_codigo ) ) 
    AND (x6.per_ext_ced_lugar = x9.dm_codigo ) ) ;           
                                             
create view v_emp2000u (pue_catalogo,pue_grado,pue_desc,pue_fec_nomb,pue_fec_cese,gra_desc_lg,arm_desc_lg,per_nom1,per_nom2,per_ape1,per_ape2,per_desc_empleo,per_fec_nomb,per_ced_ord,per_ced_reg,per_fec_ext_ced,dm_mun_dep) as 
  select distinct x0.pue_catalogo ,x0.pue_grado ,x0.pue_desc ,
    x0.pue_fec_nomb ,x0.pue_fec_cese ,x0.gra_desc_lg ,x0.arm_desc_lg 
    ,x0.per_nom1 ,x0.per_nom2 ,x0.per_ape1 ,x0.per_ape2 ,x0.per_desc_empleo 
    ,x0.per_fec_nomb ,x0.per_ced_ord ,x0.per_ced_reg ,x0.per_fec_ext_ced 
    ,x0.dm_mun_dep from "informix".v_174 x0 ;                 
                                                             
                                                             
                                                             
                                        
create view vf_datosfza (dependencia,clase,cgrado,grado,totales,llenas,vacantes) as 
  select x0.df_dependencia ,x0.df_dclase ,x0.df_cgrado ,x1.gra_desc_lg 
    ,sum(x0.df_totales ) ,sum(x0.df_llenas ) ,sum(x0.df_vacantes 
    ) from "informix".f_datosfza x0 ,"informix".grados x1 where 
    (x0.df_cgrado = x1.gra_codigo ) group by x0.df_dependencia 
    ,x0.df_dclase ,x0.df_cgrado ,x1.gra_desc_lg ;            
                                                             
                                                          
create view vf_liquidez (catalogo,asignaciones,descuentos) as 
  select x0.hfa_catalogo ,(((((((((((x0.hfa_bon_bienal + x0.hfa_prima_resp 
    ) + x0.hfa_gastos_rep ) + x0.hfa_bon_emerg ) + x0.hfa_dividendos 
    ) + x0.hfa_bono_trans ) + x0.hfa_prima_ing ) + x0.hfa_prima_prof 
    ) + x0.hfa_complemento ) + x0.hfa_prima_ext ) + x0.hfa_bono_ali 
    ) + x0.hfa_sueldo ) ,(((((x0.hfa_ipm + x0.hfa_montepio ) 
    + x0.hfa_fianza ) + x0.hfa_hos_mil ) + x0.hfa_club_ofi ) 
    + x0.hfa_club_esp ) from "informix".hfasig x0 where ((((x0.hfa_corrida 
    = 'R' ) AND (YEAR (x0.hfa_fecha ) = 2004 ) ) AND (MONTH (x0.hfa_fecha 
    ) = 9 ) ) AND (x0.hfa_clase IN ('1' ,'2' ,'3' ,'4' )) )  union 
    all select x1.hfa_catalogo ,sum(x1.hfa_mensual ) ,0 from 
    "informix".hfasigc x1 where ((((x1.hfa_corrida = 'R' ) AND 
    (YEAR (x1.hfa_fecha ) = 2004 ) ) AND (MONTH (x1.hfa_fecha 
    ) = 9 ) ) AND (x1.hfa_catalogo = ANY (select x2.hfa_catalogo 
    from "informix".hfasig x2 where (((x2.hfa_clase IN ('1' ,'2'
     ,'3' ,'4' )) AND (YEAR (x2.hfa_fecha ) = 2004 ) ) AND (MONTH 
    (x2.hfa_fecha ) = 9 ) ) ) ) ) group by x1.hfa_catalogo ; 
                                                             
                                                             
                                                             
                                         
create view vususigma (catalogo) as 
  select distinct x1.per_catalogo from "informix".usumenu x0 ,"informix"
    .mper x1 where (x0.um_nombre = x1.per_catalogo ) ;       
                                                             
                             
create view vp_pilotos (per_catalogo,per_grado,gra_desc_lg,arm_desc_lg,per_nom1,per_nom2,per_ape1,per_ape2,per_desc_empleo,cur_desc_lg,cur_fec_inicio,cur_fec_fin,cur_puesto,cur_punteo) as 
  select x0.per_catalogo ,x0.per_grado ,x1.gra_desc_lg ,x2.arm_desc_lg 
    ,x0.per_nom1 ,x0.per_nom2 ,x0.per_ape1 ,x0.per_ape2 ,x0.per_desc_empleo 
    ,x4.cur_desc_lg ,x3.cur_fec_inicio ,x3.cur_fec_fin ,x3.cur_puesto 
    ,x3.cur_punteo from "informix".mper x0 ,"informix".grados x1 
    ,"informix".armas x2 ,"informix".dcur x3 ,"informix".cursos 
    x4 where ((((((x0.per_grado = x1.gra_codigo ) AND (x0.per_arma 
    = x2.arm_codigo ) ) AND (x0.per_plaza NOT IN (9999 ,99999 
    )) ) AND (x0.per_arma IN (5 ,7 )) ) AND (x3.cur_curso = x4.cur_codigo 
    ) ) AND (x3.cur_catalogo = x0.per_catalogo ) ) ;  
create view tables (table_schema,table_name,table_type,remarks) as 
  select TRIM ( BOTH ' ' FROM x0.owner ) ,TRIM ( BOTH ' ' FROM x0.tabname 
    ) ,TRIM ( BOTH ' ' FROM ansitabtype(x0.tabtype )) ,null()from 
    "informix".systables x0 where ((x0.tabtype IN ('T' ,'V' )) AND 
    ((x0.owner = USER ) OR EXISTS (select x1.grantor ,x1.grantee 
    ,x1.tabid ,x1.tabauth from "informix".systabauth x1 where 
    ((x0.tabid = x1.tabid ) AND (x1.grantee IN (USER ,'public'
     )) ) ) ) ) ;                                            
       
create view columns (table_schema,table_name,column_name,ordinal_position,data_type,char_max_length,numeric_precision,numeric_prec_radix,numeric_scale,datetime_precision,is_nullable,remarks) as 
  select TRIM ( BOTH ' ' FROM x0.owner ) ,TRIM ( BOTH ' ' FROM x0.tabname 
    ) ,TRIM ( BOTH ' ' FROM x1.colname ) ,x1.colno ,TRIM ( BOTH 
    ' ' FROM ansicoltype(x1.coltype )) ,ansimaxlen(x1.coltype 
    ,x1.collength ),ansinumprec(x1.coltype ,x1.collength ),ansinumprecradix(x1.coltype 
    ),ansinumscale(x1.coltype ,x1.collength ),ansidatprec(x1.coltype 
    ,x1.collength ),TRIM ( BOTH ' ' FROM ansinullable(x1.coltype 
    )) ,null()from "informix".systables x0 ,"informix".syscolumns 
    x1 where (((x0.tabtype IN ('T' ,'V' )) AND (x0.tabid = x1.tabid 
    ) ) AND ((((x0.owner = USER ) OR EXISTS (select x2.username 
    ,x2.usertype ,x2.priority ,x2.password from "informix".sysusers 
    x2 where ((x2.username = USER ) AND (x2.usertype = 'D' ) ) 
    ) ) OR EXISTS (select x3.grantor ,x3.grantee ,x3.tabid ,x3.tabauth 
    from "informix".systabauth x3 where (((x0.tabid = x3.tabid 
    ) AND (x3.grantee IN (USER ,'public' )) ) AND (x3.tabauth 
    != '--*-----' ) ) ) ) OR EXISTS (select x4.grantor ,x4.grantee 
    ,x4.tabid ,x4.colno ,x4.colauth from "informix".syscolauth 
    x4 where (((x0.tabid = x4.tabid ) AND (x4.colno = x1.colno 
    ) ) AND (x4.grantee IN (USER ,'public' )) ) ) ) ) ;       
                                                             
                                                             
                                                             
                                 
create view sql_languages (source,source_year,conformance,integrity,implementation,binding_style,programming_lang) as 
  select TRIM ( BOTH ' ' FROM x0.source ) ,TRIM ( BOTH ' ' FROM 
    x0.source_year ) ,TRIM ( BOTH ' ' FROM x0.conformance ) ,TRIM 
    ( BOTH ' ' FROM x0.integrity ) ,TRIM ( BOTH ' ' FROM x0.implementation 
    ) ,TRIM ( BOTH ' ' FROM x0.binding_style ) ,TRIM ( BOTH ' '
     FROM x0.programming_lang ) from "informix".xsql_languages 
    x0 ;                                                     
                 
create view server_info (server_attribute,attribute_value) as 
  select TRIM ( BOTH ' ' FROM x0.server_attribute ) ,TRIM ( BOTH 
    ' ' FROM x0.attribute_value ) from "informix".xserver_info 
    x0 ;                                                     
        
create view v_arco_dcon (concatalogo,concod,condescr,convalor,conesca,conclase) as 
  select x0.acon_catalogo ,x1.conm_codigo ,x1.conm_desc ,x0.acon_valor 
    ,x0.acon_esca ,x2.con_clase from "informix".arco_dcon x0 ,
    "informix".arco_cond x1 ,"informix".cond x2 where ((x0.acon_codigo 
    = x1.conm_codigo ) AND (x1.conm_codigo = x2.con_codigo ) 
    ) ;                                                      
                                                             
                                                         
create view v_arco_evads (catalogo,periodo_cod,fecha_inicio,desc_grado,gra_codigo,evad_nota,fec_esca,periodo) as 
  select x0.evad_catalogo ,x0.evad_periodo ,x3.per_fecha_inicio 
    ,x1.gra_desc_md ,x2.adm_grado ,x0.evad_nota ,x0.evad_fecha 
    ,CASE WHEN (MONTH (x3.per_fecha_inicio ) < 7 )  THEN '1ER. PERIODO'
      ELSE '2DO. PERIODO'  END from "informix".arco_evads x0 ,"informix"
    .grados x1 ,"informix".peva_admin x2 ,"informix".peva_periodos 
    x3 where ((((x2.adm_catalogo = x0.evad_catalogo ) AND (x2.adm_periodo 
    = x0.evad_periodo ) ) AND (x2.adm_grado = x1.gra_codigo ) 
    ) AND (x3.per_codigo = x2.adm_periodo ) ) ;              
                                                             
                                                             
                              
create view v_arco_pafes (pcatalogo,pafe_fecha,desc_grado,gra_codigo,pafe_nota,fec_esca,tipo) as 
  select x0.pafe_catalogo ,x0.pafe_fecha ,x1.gra_desc_md ,x0.pafe_grado 
    ,x0.pafe_nota ,x0.pafe_esca ,CASE WHEN (x0.pafe_tipo = 'Z'
     )  THEN 'ZONA'  WHEN (x0.pafe_tipo = 'A' )  THEN 'ASCENSO' 
     ELSE 'RUITNA'  END from "informix".arco_pafes x0 ,"informix"
    .grados x1 where (x0.pafe_grado = x1.gra_codigo ) ;      
                                                             
                                             
create view v_arco_capacitaciones (capcatalogo,captipo,capclasifica,capvalor,capesc,capdescri) as 
  select x0.acap_catalogo ,x0.acap_tipo ,x0.acap_clasifica ,x0.acap_valor 
    ,x0.acap_esca ,x1.eru_descripcion from "informix".arco_capacitaciones 
    x0 ,"informix".arco_erudiccion x1 where ((x0.acap_tipo = x1.eru_tipo 
    ) AND (x0.acap_clasifica = x1.eru_clasifica ) ) ;        
                                                             
                                                             
                         
create view v_arco_escainfop (catalogo,serie,per_grado,grado,per_arma,arma,nombre1,nombre2,apellido1,apellido2,nacimiento,lugarnacimiento,cedorden,cedula,dpi,estcivil,empleo,situacion,taltaof,nombramiento,plaza,promocion,clase) as 
  select x3.per_catalogo ,x3.per_serie ,x3.per_grado ,x1.gra_desc_md 
    ,x3.per_arma ,CASE WHEN (x3.per_grado > 89 )  THEN ''  WHEN 
    (x3.per_arma = 7 )  THEN ''  WHEN (x3.per_arma = 6 )  THEN 
    ''  WHEN (x3.per_arma = 0 )  THEN ''  WHEN (x3.per_arma = 99 
    )  THEN ''  ELSE x2.arm_desc_md  END ,x3.per_nom1 ,x3.per_nom2 
    ,x3.per_ape1 ,x3.per_ape2 ,x3.per_fec_nac ,x0.dm_mun_dep 
    ,x3.per_ced_ord ,x3.per_ced_reg ,x3.per_dpi ,x3.per_est_civil 
    ,x3.per_desc_empleo ,x3.per_situacion ,x4.t_oficial ,x3.per_fec_nomb 
    ,x3.per_plaza ,x3.per_promocion ,x1.gra_clase from "informix"
    .depmun x0 ,"informix".grados x1 ,"informix".armas x2 ,"informix"
    .mper x3 ,"informix".tiempos x4 where ((((((x3.per_arma = 
    x2.arm_codigo ) AND (x3.per_catalogo = x4.t_catalogo ) ) 
    AND (x3.per_grado = x1.gra_codigo ) ) AND (x3.per_nac_lugar 
    = x0.dm_codigo ) ) AND (x3.per_plaza NOT IN (9999 ,99999 
    )) ) AND (x1.gra_clase IN ('1' ,'2' ,'3' ,'4' )) ) ;         
                                                             
                                                             
           
create view mag_movimientos (egr_id,egr_fecha,egr_usuario,egr_dependencia,egr_departamento,egr_municipio,egr_situacion,det_id_eg,det_id_egreso,det_insumo_eg,det_cantidad_eg,ing_id,ing_fecha,ing_usuario,ing_dependencia,ing_departamento,ing_municipio,ing_situacion,det_id,det_id_ingreso,det_insumo,det_cantidad,inv_id,inv_dependencia,inv_departamento,inv_municipio,inv_insumo,inv_cantidad,ins_id,ins_descripcion,dm_codigo,dm_desc_ct,dm_desc_md,dep_llave,dep_desc_ct,gra_desc_ct,arm_desc_ct,per_catalogo,per_nom1,per_nom2,per_ape1,per_ape2) as 
  select x0.egr_id ,x0.egr_fecha ,x0.egr_usuario ,x0.egr_dependencia 
    ,x0.egr_departamento ,x0.egr_municipio ,x0.egr_situacion 
    ,x1.det_id_eg ,x1.det_id_egreso ,x1.det_insumo_eg ,x1.det_cantidad_eg 
    ,x2.ing_id ,x2.ing_fecha ,x2.ing_usuario ,x2.ing_dependencia 
    ,x2.ing_departamento ,x2.ing_municipio ,x2.ing_situacion 
    ,x3.det_id ,x3.det_id_ingreso ,x3.det_insumo ,x3.det_cantidad 
    ,x7.inv_id ,x7.inv_dependencia ,x7.inv_departamento ,x7.inv_municipio 
    ,x7.inv_insumo ,x7.inv_cantidad ,x5.ins_id ,x5.ins_descripcion 
    ,x4.dm_codigo ,x4.dm_desc_ct ,x4.dm_desc_md ,x6.dep_llave 
    ,x6.dep_desc_ct ,x10.gra_desc_ct ,x9.arm_desc_ct ,x8.per_catalogo 
    ,x8.per_nom1 ,x8.per_nom2 ,x8.per_ape1 ,x8.per_ape2 from 
    "informix".mag_egresos x0 ,"informix".mag_det_egreso x1 ,"informix"
    .mag_ingresos x2 ,"informix".mag_det_ingreso x3 ,"informix"
    .dep_mun x4 ,"informix".mag_insumos x5 ,"informix".mdep x6 
    ,"informix".mag_inventario x7 ,"informix".mper x8 ,"informix"
    .armas x9 ,"informix".grados x10 where ((((((((((((((x1.det_id_egreso 
    = x0.egr_id ) AND (x8.per_grado = x10.gra_codigo ) ) AND 
    (x1.det_insumo_eg = x5.ins_id ) ) AND (x5.ins_id = x7.inv_insumo 
    ) ) AND (x0.egr_dependencia = x6.dep_llave ) ) AND (x7.inv_dependencia 
    = x6.dep_llave ) ) AND (x0.egr_usuario = x8.per_catalogo 
    ) ) AND (x8.per_arma = x9.arm_codigo ) ) AND (x0.egr_departamento 
    = x4.dm_codigo ) ) AND (x3.det_id_ingreso = x2.ing_id ) ) 
    AND (x2.ing_dependencia = x6.dep_llave ) ) AND (x2.ing_dependencia 
    = x7.inv_dependencia ) ) AND (x2.ing_departamento = x7.inv_departamento 
    ) ) AND (x2.ing_municipio = x7.inv_municipio ) ) ;       
                                                             
                                                             
                                                             
           
create view v_arco_escalafon (ubicacion,catalogo,grado,arma,nombre1,nombre2,apellido1,apellido2,empleo,fecha_ascenso,fecha_prox_ascenso,nota,fecha_esca,per_grado,tiempo,anterior,per_arma,nivel_esca,per_promocion) as 
  select x0.esca_ubica ,x0.esca_cat ,x1.gra_desc_md ,CASE WHEN 
    (x3.per_grado > 89 )  THEN ''  WHEN (x3.per_arma = 7 )  THEN 
    ''  WHEN (x3.per_arma = 6 )  THEN ''  ELSE x2.arm_desc_md  
    END ,TRIM ( BOTH ' ' FROM x3.per_nom1 ) ,TRIM ( BOTH ' ' FROM 
    x3.per_nom2 ) ,TRIM ( BOTH ' ' FROM x3.per_ape1 ) ,TRIM ( 
    BOTH ' ' FROM x3.per_ape2 ) ,x3.per_desc_empleo ,x0.esca_fec_asc 
    ,x0.esca_fec_prox_asc ,x0.esca_nota ,x0.esca_fec ,x3.per_grado 
    ,x5.t_grado ,x4.arcgra_anterior ,x3.per_arma ,CASE WHEN (x0.esca_plaza_nivel 
    = 1 )  THEN 'MINISTRO'  WHEN (x0.esca_plaza_nivel = 2 )  THEN 
    'JEFE DE ESTADO MAYOR'  WHEN (x0.esca_plaza_nivel = 3 )  THEN 
    'VICEMINISTROS'  WHEN (x0.esca_plaza_nivel = 4 )  THEN 'SUBJEFE DE ESTADO MAYOR'
      WHEN (x0.esca_plaza_nivel = 5 )  THEN 'INSPECTOR GENERAL'
      WHEN (x0.esca_plaza_nivel = 6 )  THEN 'COMTES. DE FUERZA'
      WHEN (x0.esca_plaza_nivel = 10 )  THEN 'COMANDANTES'  WHEN 
    (x0.esca_plaza_nivel = 30 )  THEN 'JEFES, DIRECTORES Y DIPLOMAT.'
      ELSE 'PLAZA NO ESCALONADA'  END ,x3.per_promocion from "informix"
    .arco_escalafon x0 ,"informix".grados x1 ,"informix".armas 
    x2 ,"informix".mper x3 ,"informix".arco_grados x4 ,"informix"
    .tiempos x5 where (((((x0.esca_cat = x3.per_catalogo ) AND 
    (x3.per_arma = x2.arm_codigo ) ) AND (x3.per_grado = x1.gra_codigo 
    ) ) AND (x4.arcgra_codigo = x1.gra_codigo ) ) AND (x5.t_catalogo 
    = x3.per_catalogo ) ) ;                                  
                                                             
                                                             
                                                             
         
create view v_arco_disponibilidad (catalogo,grado,arma,nombre1,nombre2,apellido1,apellido2,empleo,fecha_ascenso,fecha_prox_ascenso,nota,fecha_esca,per_grado,tiempo,anterior,per_arma,nivel_esca,per_promocion) as 
  select x0.esca_cat ,x1.gra_desc_md ,CASE WHEN (x3.per_grado 
    > 89 )  THEN ''  WHEN (x3.per_arma = 7 )  THEN ''  WHEN (x3.per_arma 
    = 6 )  THEN ''  ELSE x2.arm_desc_md  END ,TRIM ( BOTH ' ' FROM 
    x3.per_nom1 ) ,TRIM ( BOTH ' ' FROM x3.per_nom2 ) ,TRIM ( 
    BOTH ' ' FROM x3.per_ape1 ) ,TRIM ( BOTH ' ' FROM x3.per_ape2 
    ) ,x3.per_desc_empleo ,x0.esca_fec_asc ,x0.esca_fec_prox_asc 
    ,x0.esca_nota ,x0.esca_fec ,x3.per_grado ,x5.t_grado ,x4.arcgra_anterior 
    ,x3.per_arma ,CASE WHEN (x0.esca_plaza_nivel = 1 )  THEN 
    'MINISTRO'  WHEN (x0.esca_plaza_nivel = 2 )  THEN 'JEFE DE ESTADO MAYOR'
      WHEN (x0.esca_plaza_nivel = 3 )  THEN 'VICEMINISTROS'  WHEN 
    (x0.esca_plaza_nivel = 4 )  THEN 'SUBJEFE DE ESTADO MAYOR'
      WHEN (x0.esca_plaza_nivel = 5 )  THEN 'INSPECTOR GENERAL'
      WHEN (x0.esca_plaza_nivel = 6 )  THEN 'COMTES. DE FUERZA'
      WHEN (x0.esca_plaza_nivel = 10 )  THEN 'COMANDANTES'  WHEN 
    (x0.esca_plaza_nivel = 30 )  THEN 'JEFES, DIRECTORES Y DIPLOMAT.'
      ELSE 'PLAZA NO ESCALONADA'  END ,x3.per_promocion from "informix"
    .arco_escalafon1 x0 ,"informix".grados x1 ,"informix".armas 
    x2 ,"informix".mper x3 ,"informix".arco_grados x4 ,"informix"
    .tiempos x5 where ((((((x0.esca_cat = x3.per_catalogo ) AND 
    (x3.per_arma = x2.arm_codigo ) ) AND (x3.per_grado = x1.gra_codigo 
    ) ) AND (x4.arcgra_codigo = x1.gra_codigo ) ) AND (x5.t_catalogo 
    = x3.per_catalogo ) ) AND (x3.per_desc_empleo LIKE '%DISPONIBILIDAD%'
     ) ) ;                                                   
                                                             
                                                             
               
create view v_arco_escalafon1 (catalogo,grado,equivalente,arma,nombre1,nombre2,apellido1,apellido2,empleo,fecha_ascenso,fecha_prox_ascenso,nota,fecha_esca,per_grado,tiempo,anterior,per_arma,nivel_esca,per_promocion) as 
  select x0.esca_cat ,x1.gra_desc_md ,x0.esca_grado_equi ,CASE 
    WHEN (x3.per_grado > 89 )  THEN ''  WHEN (x3.per_arma = 7 
    )  THEN ''  WHEN (x3.per_arma = 6 )  THEN ''  ELSE x2.arm_desc_md 
     END ,TRIM ( BOTH ' ' FROM x3.per_nom1 ) ,TRIM ( BOTH ' ' FROM 
    x3.per_nom2 ) ,TRIM ( BOTH ' ' FROM x3.per_ape1 ) ,TRIM ( 
    BOTH ' ' FROM x3.per_ape2 ) ,x3.per_desc_empleo ,x0.esca_fec_asc 
    ,x0.esca_fec_prox_asc ,x0.esca_nota ,x0.esca_fec ,x3.per_grado 
    ,x5.t_grado ,x4.arcgra_anterior ,x3.per_arma ,CASE WHEN (x0.esca_plaza_nivel 
    = 1 )  THEN 'MINISTRO'  WHEN (x0.esca_plaza_nivel = 2 )  THEN 
    'JEFE DE ESTADO MAYOR'  WHEN (x0.esca_plaza_nivel = 3 )  THEN 
    'VICEMINISTROS'  WHEN (x0.esca_plaza_nivel = 4 )  THEN 'SUBJEFE DE ESTADO MAYOR'
      WHEN (x0.esca_plaza_nivel = 5 )  THEN 'INSPECTOR GENERAL'
      WHEN (x0.esca_plaza_nivel = 6 )  THEN 'COMTES. DE FUERZA'
      WHEN (x0.esca_plaza_nivel = 10 )  THEN 'COMANDANTES'  WHEN 
    (x0.esca_plaza_nivel = 30 )  THEN 'JEFES, DIRECTORES Y DIPLOMAT.'
      ELSE 'PLAZA NO ESCALONADA'  END ,x3.per_promocion from "informix"
    .arco_escalafon1 x0 ,"informix".grados x1 ,"informix".armas 
    x2 ,"informix".mper x3 ,"informix".arco_grados x4 ,"informix"
    .tiempos x5 where (((((((x0.esca_cat = x3.per_catalogo ) 
    AND (x3.per_arma = x2.arm_codigo ) ) AND (x3.per_grado = 
    x1.gra_codigo ) ) AND (x4.arcgra_codigo = x1.gra_codigo ) 
    ) AND (x5.t_catalogo = x3.per_catalogo ) ) AND (x0.esca_categoria 
    != 100.0000000000000000 ) ) AND (x3.per_desc_empleo NOT LIKE 
    '%DISPONIBILIDAD%' ) ) order by 3 desc ,12 desc ;         
                                                             
     
create view v_arco_dcur (acur_codigo,acur_catalogo,acur_valor,acur_esca,ubicacion,catalogo,grado,arma,nombre1,nombre2,apellido1,apellido2,empleo,fecha_ascenso,nota,fecha_esca,per_grado,tiempo,anterior,per_arma,nivel_esca,per_promocion,cur_codigo,cur_desc_lg,cur_tipo,cur_clasifica,cur_equi,cur_nivel_esc,cur_creditos) as 
  select x0.acur_codigo ,x0.acur_catalogo ,x0.acur_valor ,x0.acur_esca 
    ,x1.ubicacion ,x1.catalogo ,x1.grado ,x1.arma ,x1.nombre1 
    ,x1.nombre2 ,x1.apellido1 ,x1.apellido2 ,x1.empleo ,x1.fecha_ascenso 
    ,x1.nota ,x1.fecha_esca ,x1.per_grado ,x1.tiempo ,x1.anterior 
    ,x1.per_arma ,x1.nivel_esca ,x1.per_promocion ,x2.cur_codigo 
    ,x2.cur_desc_lg ,x2.cur_tipo ,x2.cur_clasifica ,x2.cur_equi 
    ,x2.cur_nivel_esc ,x2.cur_creditos from "informix".arco_dcur 
    x0 ,"informix".v_arco_escalafon x1 ,"informix".cursos x2 where 
    (((x0.acur_catalogo = x1.catalogo ) AND (x0.acur_codigo = 
    x2.cur_codigo ) ) AND (x0.acur_esca = x1.fecha_esca ) ) ; 
                                                             
                    
create view v_arco_obligatorio (oblicat,oblicurso,oblidesc,oblinota,obliinicio,obligrado,obligradesc,oblipais,obliescuela,obliesca) as 
  select x1.aobli_catalogo ,x1.aobli_curso ,x4.cur_desc_lg ,x1.aobli_punteo 
    ,x5.cur_fec_inicio ,x5.cur_grado ,x0.gra_desc_md ,x3.pai_desc_lg 
    ,x2.esc_desc_md ,x1.aobli_esca from "informix".grados x0 ,
    "informix".arco_obligatorio x1 ,"informix".escuelas x2 ,"informix"
    .paises x3 ,"informix".cursos x4 ,"informix".dcur x5 where 
    (((((((x1.aobli_curso = x5.cur_curso ) AND (x1.aobli_catalogo 
    = x5.cur_catalogo ) ) AND (x0.gra_codigo = x5.cur_grado ) 
    ) AND (x5.cur_pais = x3.pai_codigo ) ) AND (x5.cur_curso 
    = x4.cur_codigo ) ) AND (x5.cur_escuela = x2.esc_codigo ) 
    ) AND (x1.aobli_punteo = x5.cur_punteo ) ) ;             
            
create view v_cmm_personal2 (cmm_catalogo,cmm_nom1,cmm_nom2,cmm_ape1,cmm_ape2,cmm_codigo,cmm_gdesc_lg,cmm_arm_codigo,cmm_adesc_lg,cmm_dem,cmm_desc_empleo,cmm_fec_nac,cmm_est_civil,cmm_dependencia,cmm_ddesc_lg,cmm_situacion,cmm_sdesc_lg,cmm_fec_nomb,cmm_afil_ipm,cmm_hos_mil,cmm_fecha) as 
  select x0.per_catalogo ,x0.per_nom1 ,x0.per_nom2 ,x0.per_ape1 
    ,x0.per_ape2 ,x1.gra_codigo ,x1.gra_desc_lg ,x2.arm_codigo 
    ,x2.arm_desc_lg ,(select distinct x7.cur_curso from "informix"
    .dcur x7 where ((x7.cur_curso IN (710 ,711 ,712 )) AND (x7.cur_catalogo 
    = x0.per_catalogo ) ) ) ,x0.per_desc_empleo ,x0.per_fec_nac 
    ,x0.per_est_civil ,x3.org_dependencia ,x4.dep_desc_lg ,x0.per_situacion 
    ,x5.sit_desc_lg ,x0.per_fec_nomb ,x0.per_afil_ipm ,x6.hfa_hos_mil 
    ,x6.hfa_fecha from "informix".mper x0 ,"informix".grados x1 
    ,"informix".armas x2 ,"informix".morg x3 ,"informix".mdep x4 
    ,"informix".situaciones x5 ,"informix".hfasig x6 where ((((((x0.per_grado 
    = x1.gra_codigo ) AND (x0.per_catalogo = x6.hfa_catalogo 
    ) ) AND (x0.per_arma = x2.arm_codigo ) ) AND (x0.per_plaza 
    = x3.org_plaza ) ) AND (x3.org_dependencia = x4.dep_llave 
    ) ) AND (x0.per_situacion = x5.sit_codigo ) ) ;          
                                                             
                                                 
create view vdpue2 (pue_catalogo,fecha1) as 
  select x0.pue_catalogo ,min(x0.pue_fec_nomb ) from "informix"
    .dpue x0 where (x0.pue_catalogo = ANY (select x1.per_catalogo 
    from "informix".mper x1 where (x1.per_plaza NOT IN (9999 ,
    99999 )) ) ) group by x0.pue_catalogo ;                  
                                                             
                                                             
                                                             
                                                      
create view vnombramientos1 (nombre1,nombre2,apellido1,apellido2,fechanombra,fechaalta) as 
  select x0.per_nom1 ,x0.per_nom2 ,x0.per_ape1 ,x0.per_ape2 ,x0.per_fec_nomb 
    ,x1.fecha1 from "informix".mper x0 ,"594119".vdpue2 x1 where 
    ((x0.per_plaza NOT IN (9999 ,99999 )) AND (x0.per_catalogo 
    = x1.pue_catalogo ) )  union all select x2.per_nom1 ,x2.per_nom2 
    ,x2.per_ape1 ,x2.per_ape2 ,x2.per_fec_nomb ,x2.per_fec_nomb 
    from "informix".mper x2 where ((x2.per_plaza NOT IN (9999 
    ,99999 )) AND (x2.per_catalogo != ALL (select x3.pue_catalogo 
    from "594119".vdpue2 x3 ) ) ) ;                           
                                                             
                                                             
                                                            
create view vdpue5 (pue_catalogo,fecha1) as 
  select x0.pue_catalogo ,min(x0.pue_fec_nomb ) from "informix"
    .dpue x0 where ((x0.pue_dependencia IN (1660 ,2010 ,2070 
    ,2050 ,2040 ,2030 ,2060 ,2140 ,2110 )) AND (x0.pue_catalogo 
    = ANY (select x1.per_catalogo from "informix".mper x1 where 
    (x1.per_plaza NOT IN (9999 ,99999 )) ) ) ) group by x0.pue_catalogo 
    ;                                                        
                                                             
                                           
create view vnombramientos5 (nombre1,nombre2,apellido1,apellido2,fechanombra,fechaalta) as 
  select x0.per_nom1 ,x0.per_nom2 ,x0.per_ape1 ,x0.per_ape2 ,x0.per_fec_nomb 
    ,x1.fecha1 from "informix".mper x0 ,"594119".vdpue5 x1 where 
    ((x0.per_plaza NOT IN (9999 ,99999 )) AND (x0.per_catalogo 
    = x1.pue_catalogo ) )  union all select x2.per_nom1 ,x2.per_nom2 
    ,x2.per_ape1 ,x2.per_ape2 ,x2.per_fec_nomb ,x2.per_fec_nomb 
    from "informix".mper x2 where ((x2.per_plaza NOT IN (9999 
    ,99999 )) AND (x2.per_catalogo != ALL (select x3.pue_catalogo 
    from "594119".vdpue5 x3 ) ) ) ;                           
                                                             
                                                             
                                                            
create view vdpue6 (pue_catalogo,fecha1) as 
  select x0.pue_catalogo ,min(x0.pue_fec_nomb ) from "informix"
    .dpue x0 where ((x0.pue_dependencia IN (1660 ,2010 ,2070 
    ,2050 ,2040 ,2030 ,2060 ,2140 ,2110 )) AND (x0.pue_catalogo 
    = ANY (select x1.per_catalogo from "informix".mper x1 where 
    (x1.per_plaza NOT IN (9999 ,99999 )) ) ) ) group by x0.pue_catalogo 
    ;                                                        
                                                             
                                           
create view vnombramientos6 (nombre1,nombre2,apellido1,apellido2,fechanombra,fechaalta) as 
  select x0.per_nom1 ,x0.per_nom2 ,x0.per_ape1 ,x0.per_ape2 ,x0.per_fec_nomb 
    ,x1.fecha1 from "informix".mper x0 ,"594119".vdpue6 x1 ,"informix"
    .morg x2 where ((((x0.per_plaza NOT IN (9999 ,99999 )) AND 
    (x0.per_plaza = x2.org_plaza ) ) AND (x0.per_catalogo = x1.pue_catalogo 
    ) ) AND (x2.org_dependencia IN (1660 ,2010 ,2070 ,2050 ,2040 
    ,2030 ,2060 ,2140 ,2110 )) )  union all select x3.per_nom1 
    ,x3.per_nom2 ,x3.per_ape1 ,x3.per_ape2 ,x3.per_fec_nomb ,
    x3.per_fec_nomb from "informix".mper x3 ,"informix".morg x4 
    where ((((x3.per_plaza NOT IN (9999 ,99999 )) AND (x3.per_plaza 
    = x4.org_plaza ) ) AND (x4.org_dependencia IN (1660 ,2010 
    ,2070 ,2050 ,2040 ,2030 ,2060 ,2140 ,2110 )) ) AND (x3.per_catalogo 
    != ALL (select x5.pue_catalogo from "594119".vdpue6 x5 ) ) 
    ) ;                                                      
                                                             
                                                        
create view vdpue7 (pue_catalogo,fecha1) as 
  select x0.pue_catalogo ,min(x0.pue_fec_nomb ) from "informix"
    .dpue x0 where (x0.pue_catalogo = ANY (select x1.per_catalogo 
    from "informix".mper x1 where (x1.per_plaza NOT IN (9999 ,
    99999 )) ) ) group by x0.pue_catalogo ;                  
                                                             
                                                             
                                                             
                                                      
create view vnombramientos7 (nombre1,nombre2,apellido1,apellido2,fechanombra,fechaalta,dependencia) as 
  select x0.per_nom1 ,x0.per_nom2 ,x0.per_ape1 ,x0.per_ape2 ,x0.per_fec_nomb 
    ,x1.fecha1 ,x2.org_dependencia from "informix".mper x0 ,"594119"
    .vdpue7 x1 ,"informix".morg x2 where (((x0.per_plaza NOT IN 
    (9999 ,99999 )) AND (x0.per_plaza = x2.org_plaza ) ) AND 
    (x0.per_catalogo = x1.pue_catalogo ) )  union all select 
    x3.per_nom1 ,x3.per_nom2 ,x3.per_ape1 ,x3.per_ape2 ,x3.per_fec_nomb 
    ,x3.per_fec_nomb ,x4.org_dependencia from "informix".mper 
    x3 ,"informix".morg x4 where (((x3.per_plaza NOT IN (9999 
    ,99999 )) AND (x3.per_plaza = x4.org_plaza ) ) AND (x3.per_catalogo 
    != ALL (select x5.pue_catalogo from "594119".vdpue7 x5 ) ) 
    ) ;                             
create view eva_v1_6 (catalogo1,total1) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2016%' ) ) ;                   
                        
create view eva_v2_6 (catalogo2,total2) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2016%' ) ) ;                   
                        
create view eva_v1_7 (catalogo3,total3) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2017%' ) ) ;                   
                        
create view eva_v2_7 (catalogo4,total4) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2017%' ) ) ;                   
                        
create view eva_v1_8 (catalogo5,total5) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2018%' ) ) ;                   
                        
create view eva_ven_2018 (catalogo1,total1,total2,total3,total4,total5) as 
  select x0.catalogo1 ,x0.total1 ,x1.total2 ,x2.total3 ,x3.total4 
    ,x4.total5 from "informix".eva_v1_6 x0 ,"informix".eva_v2_6 
    x1 ,"informix".eva_v1_7 x2 ,"informix".eva_v2_7 x3 ,"informix"
    .eva_v1_8 x4 where ((((x0.catalogo1 = x1.catalogo2 ) AND 
    (x0.catalogo1 = x2.catalogo3 ) ) AND (x0.catalogo1 = x3.catalogo4 
    ) ) AND (x0.catalogo1 = x4.catalogo5 ) ) ;               
                                                             
       
create view lmun_salida_plaza_final (salida_lote,salida_uso,salida_tipo,salida_cal,salida_eslabon,salida_status,salida_cantidad,salida_dep_llave,salida_plaza_entrego) as 
  select x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,NVL (sum(x0.es_cantidad 
    ) ,0 ),x0.es_con_dep_llave ,x1.con_org_plaza_entrego from 
    "informix".lmun_ent_sal x0 ,"informix".lmun_conocimiento x1 
    where (((x0.es_situacion = 2 ) AND (x1.con_codigo = x0.es_con_codigo 
    ) ) AND (x1.con_dep_llave = x0.es_con_dep_llave ) ) group 
    by x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,x0.es_con_dep_llave 
    ,x1.con_org_plaza_entrego ;                              
                       
create view lmun_disparado_plaza_final (disparado_lote,disparado_uso,disparado_tipo,disparado_cal,disparado_eslabon,disparado_status,disparado_cantidad,disparado_dep_llave,disparado_plaza_entrego) as 
  select x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,NVL (sum(x0.es_cantidad 
    ) ,0 ),x0.es_con_dep_llave ,x1.con_org_plaza_entrego from 
    "informix".lmun_ent_sal x0 ,"informix".lmun_conocimiento x1 
    where (((x0.es_situacion = 3 ) AND (x1.con_codigo = x0.es_con_codigo 
    ) ) AND (x1.con_dep_llave = x0.es_con_dep_llave ) ) group 
    by x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,x0.es_con_dep_llave 
    ,x1.con_org_plaza_entrego ;                   
create view lmun_perdido_plaza_final (perdido_lote,perdido_uso,perdido_tipo,perdido_cal,perdido_eslabon,perdido_status,perdido_cantidad,perdido_dep_llave,perdido_plaza_recibio) as 
  select x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,NVL (sum(x0.es_cantidad 
    ) ,0 ),x0.es_con_dep_llave ,x1.con_org_plaza_recibio from 
    "informix".lmun_ent_sal x0 ,"informix".lmun_conocimiento x1 
    where (((x0.es_situacion = 4 ) AND (x1.con_codigo = x0.es_con_codigo 
    ) ) AND (x1.con_dep_llave = x0.es_con_dep_llave ) ) group 
    by x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,x0.es_con_dep_llave 
    ,x1.con_org_plaza_recibio ;                              
             
create view lmun_extraviado_plaza_final (extraviado_lote,extraviado_uso,extraviado_tipo,extraviado_cal,extraviado_eslabon,extraviado_status,extraviado_cantidad,extraviado_dep_llave,extraviado_plaza_recibio) as 
  select x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,NVL (sum(x0.es_cantidad 
    ) ,0 ),x0.es_con_dep_llave ,x1.con_org_plaza_recibio from 
    "informix".lmun_ent_sal x0 ,"informix".lmun_conocimiento x1 
    where (((x0.es_situacion = 5 ) AND (x1.con_codigo = x0.es_con_codigo 
    ) ) AND (x1.con_dep_llave = x0.es_con_dep_llave ) ) group 
    by x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,x0.es_con_dep_llave 
    ,x1.con_org_plaza_recibio ;         
create view lmun_robado_plaza_final (robado_lote,robado_uso,robado_tipo,robado_cal,robado_eslabon,robado_status,robado_cantidad,robado_dep_llave,robado_plaza_recibio) as 
  select x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,NVL (sum(x0.es_cantidad 
    ) ,0 ),x0.es_con_dep_llave ,x1.con_org_plaza_recibio from 
    "informix".lmun_ent_sal x0 ,"informix".lmun_conocimiento x1 
    where (((x0.es_situacion = 6 ) AND (x1.con_codigo = x0.es_con_codigo 
    ) ) AND (x1.con_dep_llave = x0.es_con_dep_llave ) ) group 
    by x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,x0.es_con_dep_llave 
    ,x1.con_org_plaza_recibio ;                              
                       
create view lmun_projudi_plaza_final (projudi_lote,projudi_uso,projudi_tipo,projudi_cal,projudi_eslabon,projudi_status,projudi_cantidad,projudi_dep_llave,projudi_plaza_recibio) as 
  select x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,NVL (sum(x0.es_cantidad 
    ) ,0 ),x0.es_con_dep_llave ,x1.con_org_plaza_recibio from 
    "informix".lmun_ent_sal x0 ,"informix".lmun_conocimiento x1 
    where (((x0.es_situacion = 8 ) AND (x1.con_codigo = x0.es_con_codigo 
    ) ) AND (x1.con_dep_llave = x0.es_con_dep_llave ) ) group 
    by x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,x0.es_con_dep_llave 
    ,x1.con_org_plaza_recibio ;                              
             
create view lmun_total_dep1_final (suma_lote,suma_uso,suma_tipo,suma_cal,suma_eslabon,suma_status,suma_cantidad,suma_dep_llave) as 
  select x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,NVL (sum(x0.es_cantidad 
    ) ,0 ),x0.es_con_dep_llave from "informix".lmun_ent_sal x0 
    where (x0.es_situacion IN (0 ,1 )) group by x0.es_lote_codigo 
    ,x0.es_uso_codigo ,x0.es_tipo_codigo ,x0.es_cal_codigo ,x0.es_eslabonada 
    ,x0.es_status ,x0.es_con_dep_llave ;   
create view lmun_total_dep2_final (resta_lote,resta_uso,resta_tipo,resta_cal,resta_eslabon,resta_status,resta_cantidad,resta_dep_llave) as 
  select x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,NVL (sum(x0.es_cantidad 
    ) ,0 ),x0.es_con_dep_llave from "informix".lmun_ent_sal x0 
    where (x0.es_situacion IN (2 ,3 ,4 ,5 ,6 ,8 )) group by x0.es_lote_codigo 
    ,x0.es_uso_codigo ,x0.es_tipo_codigo ,x0.es_cal_codigo ,x0.es_eslabonada 
    ,x0.es_status ,x0.es_con_dep_llave ;                     
                                                             
                                                             
                                                             
                                                   
create view lmun_entrada_plaza_final (entrada_lote,entrada_uso,entrada_tipo,entrada_cal,entrada_eslabon,entrada_status,entrada_cantidad,entrada_dep_llave,entrada_plaza_recibio) as 
  select x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,NVL (sum(x0.es_cantidad 
    ) ,0 ),x0.es_con_dep_llave ,x1.con_org_plaza_recibio from 
    "informix".lmun_ent_sal x0 ,"informix".lmun_conocimiento x1 
    where (((x0.es_situacion = 1 ) AND (x1.con_codigo = x0.es_con_codigo 
    ) ) AND (x1.con_dep_llave = x0.es_con_dep_llave ) ) group 
    by x0.es_lote_codigo ,x0.es_uso_codigo ,x0.es_tipo_codigo 
    ,x0.es_cal_codigo ,x0.es_eslabonada ,x0.es_status ,x0.es_con_dep_llave 
    ,x1.con_org_plaza_recibio ;                              
             
create view catalogos_ipm_dfam_temp (catalogo_militar) as 
  select distinct x0.fam_cat_militar from "informix".ipm_dfam_temp 
    x0 ;                                                     
                                                             
            
create view baja_esp (hfa_catalogo,hfa_fecha,hfa_prog,hfa_grupo,hfa_clase,hfa_grado,hfa_arma,hfa_sexo,hfa_plaza,hfa_desc_empleo,hfa_ceom,hfa_jerarquia,hfa_hrs_trab,hfa_ord_gral,hfa_bienal,hfa_depen,hfa_sueldo,hfa_bon_bienal,hfa_prima_resp,hfa_prima_esp,hfa_gastos_rep,hfa_bon_emerg,hfa_dividendos,hfa_aguinaldo,hfa_bono_vac,hfa_bono_14,hfa_bono_trans,hfa_prima_ing,hfa_prima_prof,hfa_ipm,hfa_montepio,hfa_fianza,hfa_hos_mil,hfa_club_ofi,hfa_club_esp,hfa_liquido,hfa_corrida,hfa_unidad,hfa_complemento,hfa_cuenta,hfa_prima_ext,hfa_bono_ali) as 
  select x0.hfa_catalogo ,x0.hfa_fecha ,x0.hfa_prog ,x0.hfa_grupo 
    ,x0.hfa_clase ,x0.hfa_grado ,x0.hfa_arma ,x0.hfa_sexo ,x0.hfa_plaza 
    ,x0.hfa_desc_empleo ,x0.hfa_ceom ,x0.hfa_jerarquia ,x0.hfa_hrs_trab 
    ,x0.hfa_ord_gral ,x0.hfa_bienal ,x0.hfa_depen ,x0.hfa_sueldo 
    ,x0.hfa_bon_bienal ,x0.hfa_prima_resp ,x0.hfa_prima_esp ,
    x0.hfa_gastos_rep ,x0.hfa_bon_emerg ,x0.hfa_dividendos ,x0.hfa_aguinaldo 
    ,x0.hfa_bono_vac ,x0.hfa_bono_14 ,x0.hfa_bono_trans ,x0.hfa_prima_ing 
    ,x0.hfa_prima_prof ,x0.hfa_ipm ,x0.hfa_montepio ,x0.hfa_fianza 
    ,x0.hfa_hos_mil ,x0.hfa_club_ofi ,x0.hfa_club_esp ,x0.hfa_liquido 
    ,x0.hfa_corrida ,x0.hfa_unidad ,x0.hfa_complemento ,x0.hfa_cuenta 
    ,x0.hfa_prima_ext ,x0.hfa_bono_ali from "informix".hfasig 
    x0 where (x0.hfa_catalogo IN (421412 ,313775 ,454041 ,433490 
    ,453837 ,392522 ,591057 ,596519 ,596675 ,610824 ,613141 ,
    613943 ,618561 ,619841 ,621722 ,362624 ,309823 ,362418 ,332643 
    ,505396 ,587311 ,592915 ,614099 ,573931 ,439109 ,457192 ,
    323071 ,585430 ,587345 ,587402 ,596741 ,609123 ,611368 ,625160 
    ,605071 ,603308 ,388645 ,578245 ,574343 ,562561 ,519801 ,
    484428 ,303131 ,529925 ,357616 ,327437 ,395350 ,606566 ,553909 
    ,427666 ,598846 ,617472 ,602789 ,542787 ,604256 ,603324 ,
    358283 ,387365 ,597103 ,577346 ,603878 ,612929 ,613794 ,625681 
    ,587709 ,610667 ,610717 ,601898 ,603001 ,585026 ,602128 ,
    628701 ,603506 ,573469 ,479659 ,493213 ,510925 ,494195 ,603084 
    ,605535 ,610907 ,622704 ,627991 ,590414 ,626754 ,621771 ,
    386631 ,506238 ,461814 ,408484 ,554766 ,593640 ,611160 ,603159 
    ,613414 ,468611 ,604017 ,612127 ,603316 ,460295 ,336511 ,
    417170 ,587634 ,597210 ,598622 ,612788 ,619254 ,587659 ,617761 
    ,545681 ,341875 ,253583 ,387902 ,531509 ,596592 ,596955 ,
    609917 ,618694 ,629568 ,630632 ,444133 ,603522 ,609965 ,532853 
    ,357913 ,467811 ,347369 ,413146 ,475145 ,609313 ,619874 ,
    620153 ,625889 ,630905 ,582262 ,613042 ,591859 ,628651 ,631044 
    ,482885 ,512053 ,388819 ,462275 ,513531 ,473231 ,533661 ,
    388199 ,547638 ,610014 ,547877 ,617803 ,626515 ,627273 ,631895 
    ,548669 ,611236 ,619445 ,529776 ,380402 ,467050 ,606517 ,
    626432 ,562629 ,604694 ,609248 ,591388 ,330381 ,335927 ,403477 
    ,447474 ,459156 ,482505 ,576660 ,631010 ,632208 ,572032 ,
    575373 ,610295 ,603340 ,525741 ,562298 ,346932 ,353425 ,574129 
    ,387019 ,518803 ,467977 ,484345 ,494120 ,586289 ,428763 ,
    612838 ,632877 ,621383 ,628321 ,610154 ,611889 ,580829 ,495515 
    ,464669 ,489427 ,523738 ,339697 ,590679 ,599000 ,606038 ,
    629089 ,633321 ,612358 ,603431 ,543462 ,370569 ,537860 ,590620 
    ,632570 ,393652 ,610766 ,604165 ,617498 ,586297 ,626150 ,
    617984 ,340059 ,403220 ,409284 ,597376 ,622027 ,627497 ,592832 
    ,561324 ,625194 ,268573 ,432765 ,518431 ,596543 ,394866 ,
    603845 ,604538 ,613983 ,627281 ,547729 ,573949 ,629162 ,598648 
    ,629626 ,341842 ,427245 ,342758 ,582718 ,619684 ,639138 ,
    639211 ,609289 ,611616 ,619460 ,488098 ,386375 ,410472 ,486233 
    ,491779 ,596352 ,626465 ,636548 ,629790 ,611939 ,342337 ,
    356857 ,451872 ,563106 ,636605 ,619924 ,542647 ,640003 ,632307 
    ,632323 ,452193 ,608224 ,616813 ,529453 ,418038 ,359182 ,
    604009 ,605899 ,586214 ,640227 ,629899 ,381244 ,527333 ,609180 
    ,613737 ,632893 ,640185 ,596691 ,572859 ,604140 ,617845 ,
    626820 ,475376 ,605907 ,618116 ,450684 ,506022 ,485201 ,604504 
    ,610733 ,616219 ,627364 ,630376 ,606327 ,637652 ,487827 ,
    389510 ,562124 ,610519 ,621748 ,622852 ,505701 ,632919 ,629923 
    ,407296 ,459891 ,482331 ,505339 ,586552 ,426858 ,617779 ,
    619734 ,553883 ,610220 ,637074 ,613323 ,591636 ,494823 ,393264 
    ,610170 ,639575 ,598333 ,628479 ,512756 ,573971 ,420828 ,
    409888 ,452987 ,489609 ,606343 ,625848 ,376541 ,382119 ,417444 
    ,469411 ,430512 ,609461 ,630533 ,631143 ,640409 ,608240 ,
    610279 ,492199 ,500405 ,447961 ,469510 ,540962 ,585034 ,606780 
    ,617597 ,641399 ,617530 ,497883 ,376384 ,411561 ,590745 ,
    626390 ,626846 ,603357 ,636209 ,418434 ,445973 ,419606 ,628396 
    ,629667 ,635847 ,413088 ,544098 ,610451 ,630392 ,534973 ,
    574137 ,619767 ,639716 ,642066 ,593020 ,629873 ,610444 ,637363 
    ,450346 ,572933 ,631424 ,640557 ,646372 ,603837 ,626200 ,
    554808 ,638460 ,563585 ,436998 ,358929 ,622050 ,629857 ,645985 
    ,630582 ,473645 ,591651 ,599158 ,609941 ,627729 ,631416 ,
    632975 ,642017 ,531749 ,619296 ,648527 ,417220 ,587469 ,428789 
    ,638767 ,610691 ,440206 ,494609 ,423087 ,501528 ,556183 ,
    636795 ,590083 ,560441 ,435479 ,500801 ,644799 ,645242 ,481572 
    ,499855 ,617282 ,592006 ,636183 ,646521 ,609214 ,419036 ,
    472373 ,427716 ,626341 ,425504 ,573253 ,626283 ,636761 ,638007 
    ,628289 ,631853 ,630517 ,538538 ,425934 ,436766 ,609362 ,
    618066 ,630715 ,383364 ,451575 ,454694 ,461624 ,503409 ,511204 
    ,308445 ,601724 ,620088 ,507863 ,631408 ,617050 ,651364 ,
    341735 ,465666 ,518746 ,639740 ,430082 ,629055 ,465997 ,401174 
    ,575423 ,456277 ,394122 ,627959 ,631951 ,598465 ,653659 ,
    633131 ,481333 ,628123 ,591552 ,447128 ,480020 ,603530 ,618264 
    ,631374 ,647396 ,603266 ,528778 ,530667 ,524041 ,512954 ,
    626036 ,628362 ,627687 ,251116 ,444034 ,582684 ,621986 ,651521 
    ,602375 ,641688 ,641076 ,641753 ,619726 ,453720 ,517383 ,
    524710 ,525303 ,400812 ,525808 ,590943 ,591396 ,622167 ,632539 
    ,641233 ,631317 ,627760 ,573345 ,629584 ,454173 ,598754 ,
    602714 ,630426 ,641845 ,604330 ,628230 ,523159 ,639443 ,628073 
    ,629955 ,521583 ,459685 ,433458 ,448621 ,622217 ,410902 ,
    582239 ,642298 ,650473 ,657718 ,660803 ,659250 ,662411 ,525436 
    ,604314 ,628271 ,610196 ,611897 ,630541 ,662668 ,606772 ,
    514158 ,416032 ,524982 ,658377 ,467845 ,448688 ,442806 ,417907 
    ,596733 ,632967 ,637744 ,660753 ,661330 ,572867 ,629808 ,
    500660 ,609396 ,611079 ,613083 ,609263 ,633214 ,461004 ,574020 
    ,593335 ,628594 ,658229 ,666511 ,592634 ,417857 ,636050 ,
    482679 ,573337 ,575456 ,621292 ,630574 ,638114 ,591792 ,591420 
    ,592188 ,462317 ,457838 ,610543 ,633263 ,603654 ,533828 ,
    460584 ,468728 ,453142 ,658161 ,603779 ,662601 ,410191 ,440792 
    ,464131 ,639708 ,420216 ,420851 ,598770 ,603415 ,630178 ,
    662536 ,517904 ,597038 ,540401 ,667402 ,498816 ,446443 ,596576 
    ,645614 ,658666 ,464883 ,485623 ,431577 ,598291 ,627752 ,
    650747 ,419804 ,450601 ,669283 ,548073 ,667345 ,465864 ,641183 
    ,587790 ,549030 ,459883 ,475822 ,438614 ,533000 )) ;     
                                                             
                                                           
create view fechas_esp (catalogo,fecha) as 
  select distinct x0.hfa_catalogo ,max(x0.hfa_fecha ) from "607325"
    .baja_esp x0 where (x0.hfa_sueldo != 0.00 ) group by x0.hfa_catalogo 
    ;                                                        
                 
create view asigc (cat,hfa_mensual) as 
  select x0.hfa_catalogo ,x0.hfa_mensual from "informix".hfasigc 
    x0 where ((x0.hfa_fecha = '2019/03/13' ) AND (x0.hfa_codigo 
    = 26 ) ) ;                                               
                                
create view riesgo (cata,cantidad) as 
  select x0.hfa_catalogo ,x0.hfa_mensual from "informix".hfasigc 
    x0 where ((x0.hfa_fecha = '2019/03/13' ) AND (x0.hfa_codigo 
    = 31 ) ) ;                                               
                                 
create view cu_iniciales (catalogo,fecha_ini) as 
  select x0.pue_catalogo ,min(x0.pue_fec_nomb ) from "informix"
    .dpue x0 where (x0.pue_grado > 39 ) group by x0.pue_catalogo 
     union all select x1.pue_catalogo ,min(x1.pue_fec_nomb ) 
    from "informix".dpue x1 where (x1.pue_grado = ANY (select 
    x2.gra_codigo from "informix".grados x2 where (x2.gra_clase 
    = '4' ) ) ) group by x1.pue_catalogo ;                    
                                                             
                                              
create view curru_iniciales (catalogo,fecha_ini) as 
  select x0.pue_catalogo ,min(x0.pue_fec_nomb ) from "informix"
    .dpue x0 where (x0.pue_grado = ANY (select x2.gra_codigo 
    from "informix".grados x2 where (x2.gra_clase IN ('1' ,'2' )) 
    ) ) group by x0.pue_catalogo  union all select x1.pue_catalogo 
    ,min(x1.pue_fec_nomb ) from "informix".dpue x1 where (x1.pue_grado 
    = ANY (select x3.gra_codigo from "informix".grados x3 where 
    (x3.gra_clase = '4' ) ) ) group by x1.pue_catalogo ;      
                           
create view v1 (catalogo1,total1) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2016%' ) ) ;                   
                                
create view v2 (catalogo2,total2) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2016%' ) ) ;                   
                                
create view v3 (catalogo3,total3) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2017%' ) ) ;                   
                                
create view v4 (catalogo4,total4) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2017%' ) ) ;                   
                                
create view v5 (catalogo5,total5) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2018%' ) ) ;                   
                                
create view v6 (catalogo6,total6) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2018%' ) ) ;                   
                                
create view v7 (catalogo7,total7) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2019%' ) ) ;                   
                                
create view totalv (catalogo1,total1,total2,total3,total4,total5,total6,total7) as 
  select x0.catalogo1 ,NVL (x0.total1 ,0 ),NVL (x1.total2 ,0 ),
    NVL (x2.total3 ,0 ),NVL (x3.total4 ,0 ),NVL (x4.total5 ,0 
    ),NVL (x5.total6 ,0 ),NVL (x6.total7 ,0 )from "607325".v1 
    x0 ,"607325".v2 x1 ,"607325".v3 x2 ,"607325".v4 x3 ,"607325".v5 
    x4 ,"607325".v6 x5 ,"607325".v7 x6 where ((((((x0.catalogo1 
    = x1.catalogo2 ) AND (x0.catalogo1 = x2.catalogo3 ) ) AND 
    (x0.catalogo1 = x3.catalogo4 ) ) AND (x0.catalogo1 = x4.catalogo5 
    ) ) AND (x0.catalogo1 = x5.catalogo6 ) ) AND (x0.catalogo1 
    = x6.catalogo7 ) ) ;                                     
                                                             
                                                             
                         
create view pafes (cata,gra_desc_md,arm_desc_md,nom1,nom2,ape1,ape2,not_usuario,not_fecha,dep_desc_md,usuario,hora) as 
  select x2.per_catalogo ,x3.gra_desc_md ,x4.arm_desc_md ,x2.per_nom1 
    ,x2.per_nom2 ,x2.per_ape1 ,x2.per_ape2 ,x0.not_usuario ,x0.not_fecha 
    ,x1.dep_desc_md ,x0.usuario ,x0.hora from "informix".aud_opaf_notas 
    x0 ,"informix".mdep x1 ,"informix".mper x2 ,"informix".grados 
    x3 ,"informix".armas x4 where ((((((YEAR (x0.not_fecha ) = 
    2019 ) AND (x0.accion = 'U' ) ) AND (x0.not_dependencia = 
    x1.dep_llave ) ) AND (x0.not_catalogo = x2.per_catalogo ) 
    ) AND (x4.arm_codigo = x2.per_arma ) ) AND (x3.gra_codigo 
    = x2.per_grado ) ) order by 9 ;                          
                                                             
                            
create view pafe2019 (not_catalogo,grado,arm_desc_md,nomof1,nomof2,apeof1,apeof2,dependencia,not_promedio,not_fecha,not_usuario,usuario,hora) as 
  select x4.not_catalogo ,x2.gra_desc_md ,x1.arm_desc_md ,x0.per_nom1 
    ,x0.per_nom2 ,x0.per_ape1 ,x0.per_ape2 ,x3.dep_desc_md ,x4.not_promedio 
    ,x4.not_fecha ,x4.not_usuario ,x4.usuario ,x4.hora from "informix"
    .mper x0 ,"informix".armas x1 ,"informix".grados x2 ,"informix"
    .mdep x3 ,"informix".aud_opaf_notas19 x4 where ((((x0.per_catalogo 
    = x4.not_catalogo ) AND (x1.arm_codigo = x0.per_arma ) ) 
    AND (x2.gra_codigo = x0.per_grado ) ) AND (x3.dep_llave = 
    x4.not_dependencia ) ) ;                                 
                                                             
                                                   
create view opafe2019 (not_catalogo,grado,arm_desc_md,nomof1,nomof2,apeof1,apeof2,dependencia,not_promedio,not_fecha,not_usuario,jerarquia,nom1,nom2,ape1,ape2,alta,usuario,hora) as 
  select x4.not_catalogo ,x4.grado ,x4.arm_desc_md ,x4.nomof1 
    ,x4.nomof2 ,x4.apeof1 ,x4.apeof2 ,x4.dependencia ,x4.not_promedio 
    ,x4.not_fecha ,x4.not_usuario ,x1.gra_desc_lg ,x0.per_nom1 
    ,x0.per_nom2 ,x0.per_ape1 ,x0.per_ape2 ,x2.dep_desc_md ,x4.usuario 
    ,x4.hora from "informix".mper x0 ,"informix".grados x1 ,"informix"
    .mdep x2 ,"informix".morg x3 ,"informix".pafe2019 x4 where 
    ((((x0.per_catalogo = x4.not_usuario ) AND (x0.per_grado 
    = x1.gra_codigo ) ) AND (x0.per_plaza = x3.org_plaza ) ) 
    AND (x3.org_dependencia = x2.dep_llave ) ) ;             
                                
create view pafet2019 (not_catalogo,grado,arm_desc_md,nomof1,nomof2,apeof1,apeof2,not_promedio,not_fecha,dependencia,not_usuario,jerarquia,nom1,nom2,ape1,ape2,alta,usuario,gra_desc_lg,per_nom1,per_nom2,per_ape1,per_ape2,dep_desc_lg,hora) as 
  select x4.not_catalogo ,x4.grado ,x4.arm_desc_md ,x4.nomof1 
    ,x4.nomof2 ,x4.apeof1 ,x4.apeof2 ,x4.not_promedio ,x4.not_fecha 
    ,x4.dependencia ,x4.not_usuario ,x4.jerarquia ,x4.nom1 ,x4.nom2 
    ,x4.ape1 ,x4.ape2 ,x4.alta ,x4.usuario ,x1.gra_desc_lg ,x0.per_nom1 
    ,x0.per_nom2 ,x0.per_ape1 ,x0.per_ape2 ,x2.dep_desc_lg ,x4.hora 
    from "informix".mper x0 ,"informix".grados x1 ,"informix".mdep 
    x2 ,"informix".morg x3 ,"informix".opafe2019 x4 where ((((x0.per_catalogo 
    = x4.usuario ) AND (x0.per_grado = x1.gra_codigo ) ) AND 
    (x0.per_plaza = x3.org_plaza ) ) AND (x3.org_dependencia 
    = x2.dep_llave ) ) ;                                     
                                                             
                                                             
                                  
create view v8 (catalogo8,total8) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2019%' ) ) ;                   
                                
create view totalve (catalogo1,total1,total2,total3,total4,total5,total6,total7,total8) as 
  select x0.catalogo1 ,x0.total1 ,x1.total2 ,x2.total3 ,x3.total4 
    ,x4.total5 ,x5.total6 ,x6.total7 ,x7.total8 from "607325".v1 
    x0 ,"607325".v2 x1 ,"607325".v3 x2 ,"607325".v4 x3 ,"607325".v5 
    x4 ,"607325".v6 x5 ,"607325".v7 x6 ,"607325".v8 x7 where (((((((x0.catalogo1 
    = x1.catalogo2 ) AND (x0.catalogo1 = x2.catalogo3 ) ) AND 
    (x0.catalogo1 = x3.catalogo4 ) ) AND (x0.catalogo1 = x4.catalogo5 
    ) ) AND (x0.catalogo1 = x5.catalogo6 ) ) AND (x0.catalogo1 
    = x6.catalogo7 ) ) AND (x0.catalogo1 = x7.catalogo8 ) ) ; 
                                                             
                                                             
                                                   
create view edades (total,ano) as 
  select count(*) ,YEAR (x1.per_fec_nac ) from "informix".hfasig 
    x0 ,"informix".mper x1 where ((((((x0.hfa_catalogo = x1.per_catalogo 
    ) AND (YEAR (x0.hfa_fecha ) = 2020 ) ) AND (MONTH (x0.hfa_fecha 
    ) = 5 ) ) AND ((YEAR (x1.per_fec_nac ) >= 1960 ) AND (YEAR 
    (x1.per_fec_nac ) <= 2001 ) ) ) AND (x1.per_plaza NOT IN 
    (999 ,9999 ,99999 )) ) AND (x1.per_situacion IN ('11' ,'T0'
     ,'TH' )) ) group by x1.per_fec_nac order by x1.per_fec_nac 
    ;                                     
create view eva_v1_20 (catalogo9,total9) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2020%' ) ) ;                   
                         
create view eva_v2_8 (catalogo6,total6) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2018%' ) ) ;                   
                          
create view eva_v1_9 (catalogo7,total7) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2019%' ) ) ;                   
                          
create view eva_v2_9 (catalogo8,total8) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2019%' ) ) ;                   
                          
create view vista_santos (catalogo1,total1) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2016%' ) ) ;                   
                      
create view vista_santos2 (catalogo2,total2) as 
  select distinct x1.eva_cat2 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2016%' ) ) ;                   
                     
create view vista_santos1 (catalogo2,total2) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2016%' ) ) ;                   
                     
create view vista_navas (catalogo3,total3) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2017%' ) ) ;                   
                       
create view vista_navas1 (catalogo4,total4) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2017%' ) ) ;                   
                      
create view vista_carde (catalogo5,total5) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2018%' ) ) ;                   
                       
create view vista_carde1 (catalogo6,total6) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2018%' ) ) ;                   
                      
create view vista_ventu (catalogo7,total7) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2019%' ) ) ;                   
                       
create view vista_ventu1 (catalogo8,total8) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2019%' ) ) ;                   
                      
create view vista_rey (catalogo9,total) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2020%' ) ) ;                   
                          
create view vista_rey1 (catalogo9,total) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo = '1 - 2020' ) ) ;                        
                         
create view vista_rey2 (catalogo9,total) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo IN ('1 - 2020' ,'1 - 2019' ,'2 - 2019' ,'1 - 2018'
     ,'2 - 2018' ,'1 - 2017' ,'2 - 2017' ,'1 - 2016' ,'2 - 2016' )) 
    ) ;                                                      
                                                             
                                                             
                                      
create view v_usuarios90 (username) as 
  select x0.username from "informix".sysusers x0 where ((LENGTH 
    (x0.username ) = 6 ) AND ((x0.username ::integer >= 111111 
    ) AND (x0.username ::integer <= 999999 ) ) ) ;           
                                  
create view vista_usuarios90 (username) as 
  select x0.username from "informix".sysusers x0 where ((LENGTH 
    (x0.username ) = 6 ) AND ((x0.username >= '111111' ) AND (x0.username 
    <= '999999' ) ) ) ;                                       
                  
create view v_cmm_personal (cmm_catalogo,cmm_nom1,cmm_nom2,cmm_ape1,cmm_ape2,cmm_codigo,cmm_gdesc_lg,cmm_arm_codigo,cmm_adesc_lg,cmm_dem,cmm_desc_empleo,cmm_fec_nac,cmm_est_civil,cmm_dependencia,cmm_ddesc_lg,cmm_situacion,cmm_sdesc_lg,cmm_fec_nomb,cmm_afil_ipm,cmm_hos_mil,cmm_fecha) as 
  select x0.per_catalogo ,x0.per_nom1 ,x0.per_nom2 ,x0.per_ape1 
    ,x0.per_ape2 ,x2.gra_codigo ,x2.gra_desc_lg ,x3.arm_codigo 
    ,x3.arm_desc_lg ,(select count(distinct x7.cur_curso ) from 
    "informix".dcur x7 where ((x7.cur_curso IN (710 ,711 ,712 
    )) AND (x7.cur_catalogo = x0.per_catalogo ) ) ) ,x0.per_desc_empleo 
    ,x0.per_fec_nac ,x0.per_est_civil ,x4.org_dependencia ,x5.dep_desc_lg 
    ,x0.per_situacion ,x6.sit_desc_lg ,x0.per_fec_nomb ,x0.per_afil_ipm 
    ,x1.hfa_hos_mil ,x1.hfa_fecha from (((((("informix".mper x0 
    left join "informix".hfasig x1 on (x0.per_catalogo = x1.hfa_catalogo 
    ) )join "informix".grados x2 on (x0.per_grado = x2.gra_codigo 
    ) )join "informix".armas x3 on (x0.per_arma = x3.arm_codigo 
    ) )join "informix".morg x4 on (x0.per_plaza = x4.org_plaza 
    ) )join "informix".mdep x5 on (x4.org_dependencia = x5.dep_llave 
    ) )join "informix".situaciones x6 on (x0.per_situacion = x6.sit_codigo 
    ) );                                                     
                                      
create view v_cmm_personal1 (cmm_catalogo,cmm_nom1,cmm_nom2,cmm_ape1,cmm_ape2,cmm_codigo,cmm_gdesc_lg,cmm_arm_codigo,cmm_adesc_lg,cmm_dem,cmm_desc_empleo,cmm_fec_nac,cmm_est_civil,cmm_dependencia,cmm_ddesc_lg,cmm_situacion,cmm_sdesc_lg,cmm_fec_nomb,cmm_afil_ipm,cmm_hos_mil,cmm_fecha) as 
  select x0.per_catalogo ,x0.per_nom1 ,x0.per_nom2 ,x0.per_ape1 
    ,x0.per_ape2 ,x1.gra_codigo ,x1.gra_desc_lg ,x2.arm_codigo 
    ,x2.arm_desc_lg ,(select distinct x7.cur_curso from "informix"
    .dcur x7 where ((x7.cur_curso IN (710 ,711 ,712 )) AND (x7.cur_catalogo 
    = x0.per_catalogo ) ) ) ,x0.per_desc_empleo ,x0.per_fec_nac 
    ,x0.per_est_civil ,x3.org_dependencia ,x4.dep_desc_lg ,x0.per_situacion 
    ,x5.sit_desc_lg ,x0.per_fec_nomb ,x0.per_afil_ipm ,x6.hfa_hos_mil 
    ,x6.hfa_fecha from "informix".mper x0 ,"informix".grados x1 
    ,"informix".armas x2 ,"informix".morg x3 ,"informix".mdep x4 
    ,"informix".situaciones x5 ,"informix".hfasig x6 where ((((((x0.per_grado 
    = x1.gra_codigo ) AND (x0.per_catalogo = x6.hfa_catalogo 
    ) ) AND (x0.per_arma = x2.arm_codigo ) ) AND (x0.per_plaza 
    = x3.org_plaza ) ) AND (x3.org_dependencia = x4.dep_llave 
    ) ) AND (x0.per_situacion = x5.sit_codigo ) ) ;          
                                                             
                                                 
create view s_t_l_dpi (catalogo,grado,ape1,ape2,nom1,nom2,situacion,oced,rced,dpi,fecha) as 
  select distinct x1.pue_catalogo ,x2.gra_desc_md ,x0.per_ape1 
    ,x0.per_ape2 ,x0.per_nom1 ,x0.per_nom2 ,x3.sit_desc_lg ,x0.per_ced_ord 
    ,x0.per_ced_reg ,x0.per_dpi ,min(x1.pue_fec_nomb ) from "informix"
    .mper x0 ,"informix".dpue x1 ,"informix".grados x2 ,"informix"
    .situaciones x3 where (((((x0.per_catalogo = x1.pue_catalogo 
    ) AND (x0.per_grado = x2.gra_codigo ) ) AND (x3.sit_codigo 
    = x0.per_situacion ) ) AND ((YEAR (x1.pue_fec_nomb ) >= 1960 
    ) AND (YEAR (x1.pue_fec_nomb ) <= 1996 ) ) ) AND (x2.gra_codigo 
    IN (1 ,3 ,4 ,5 ,6 ,8 ,9 ,10 ,11 ,12 ,16 ,17 ,18 ,21 ,22 ,
    23 ,24 ,26 ,0 ,2 )) ) group by x1.pue_catalogo ,x2.gra_desc_md 
    ,x0.per_ape1 ,x0.per_ape2 ,x0.per_nom1 ,x0.per_nom2 ,x3.sit_desc_lg 
    ,x0.per_ced_ord ,x0.per_ced_reg ,x0.per_dpi order by 3 ; 
                                                             
                                                             
                                                             
      
create view situacion_tropa_lista (ls_catalogo,ls_grado,ls_ape1,ls_ape2,ls_nom1,ls_nom2,ls_ced_o,ls_ced_r,ls_fecha,ls_sit) as 
  select distinct x1.pue_catalogo ,x2.gra_desc_md ,x0.per_ape1 
    ,x0.per_ape2 ,x0.per_nom1 ,x0.per_nom2 ,x0.per_ced_ord ,x0.per_ced_reg 
    ,min(x1.pue_fec_nomb ) ,x3.sit_codigo from "informix".mper 
    x0 ,"informix".dpue x1 ,"informix".grados x2 ,"informix".situaciones 
    x3 where (((((x0.per_catalogo = x1.pue_catalogo ) AND (x0.per_grado 
    = x2.gra_codigo ) ) AND (x0.per_situacion = x3.sit_codigo 
    ) ) AND ((YEAR (x1.pue_fec_nomb ) >= 1960 ) AND (YEAR (x1.pue_fec_nomb 
    ) <= 1996 ) ) ) AND (x2.gra_codigo IN (1 ,3 ,4 ,5 ,6 ,8 ,
    9 ,10 ,11 ,12 ,16 ,17 ,18 ,21 ,22 ,23 ,24 ,26 ,0 ,2 )) ) 
    group by x1.pue_catalogo ,x2.gra_desc_md ,x0.per_ape1 ,x0.per_ape2 
    ,x0.per_nom1 ,x0.per_nom2 ,x0.per_ced_ord ,x0.per_ced_reg 
    ,x3.sit_codigo order by 10 ;                             
                                                             
                                                             
                        
create view vpsupernumerarios (org_plaza,org_ceom,org_dependencia,org_jerarquia,org_grado,org_plaza_desc,org_situacion,org_cod_pago,org_hrs_trab,org_fec_ult_mod,org_ord_gral,org_nominas,org_categoria) as 
  select x0.org_plaza ,x0.org_ceom ,x0.org_dependencia ,x0.org_jerarquia 
    ,x0.org_grado ,x0.org_plaza_desc ,x0.org_situacion ,x0.org_cod_pago 
    ,x0.org_hrs_trab ,x0.org_fec_ult_mod ,x0.org_ord_gral ,x0.org_nominas 
    ,x0.org_categoria from "informix".morg x0 where (((x0.org_jerarquia 
    [1,5] = '12705' ) AND (x0.org_dependencia = 2160 ) ) AND (x0.org_situacion 
    = 'A' ) ) ;                                               
                                                             
                                                             
                                   
create view totalve2 (catalogo1,total1,total2,total3,total4,total5,total6,total7,total8,total9) as 
  select x0.catalogo1 ,x0.total1 ,x1.total2 ,x2.total3 ,x3.total4 
    ,x4.total5 ,x5.total6 ,x6.total7 ,x7.total8 ,x8.total9 from 
    "informix".eva_v1_6 x0 ,"informix".eva_v2_6 x1 ,"informix".eva_v1_7 
    x2 ,"informix".eva_v2_7 x3 ,"informix".eva_v1_8 x4 ,"607325"
    .eva_v2_8 x5 ,"607325".eva_v1_9 x6 ,"607325".eva_v2_9 x7 ,"607325"
    .eva_v1_20 x8 where ((((((((x0.catalogo1 = x1.catalogo2 ) 
    AND (x0.catalogo1 = x2.catalogo3 ) ) AND (x0.catalogo1 = 
    x3.catalogo4 ) ) AND (x0.catalogo1 = x4.catalogo5 ) ) AND 
    (x0.catalogo1 = x5.catalogo6 ) ) AND (x0.catalogo1 = x6.catalogo7 
    ) ) AND (x0.catalogo1 = x7.catalogo8 ) ) AND (x0.catalogo1 
    = x8.catalogo9 ) ) ;                      
create view eva1_152 (cat1,total1) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2017%' ) ) ;                   
                               
create view evaluacion2_2017 (cat2,total2) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2017%' ) ) ;                   
                       
create view evaluacion1_2018 (cat3,total3) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2018%' ) ) ;                   
                       
create view evaluacion2_2018 (cat4,total4) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2018%' ) ) ;                   
                       
create view evaluacion1_2019 (cat5,total5) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2019%' ) ) ;                   
                       
create view evaluacion2_2019 (cat6,total6) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2019%' ) ) ;                   
                       
create view evaluacion1_2020 (cat7,total7) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2020%' ) ) ;                   
                       
create view evaluacion2_2020 (cat8,total8) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2020%' ) ) ;                   
                       
create view evaluacion1_2021 (cat9,total9) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2021%' ) ) ;                   
                       
create view tropa_lista_compara (ls1_catalogo,ls1_nombre,ls1_fecha,ls1_sit) as 
  select x0.ls_catalogo ,((((((TRIM ( BOTH  ' ' FROM x0.ls_nom1 
    ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.ls_nom2 ) ) || ' ' ) 
    || TRIM ( BOTH  ' ' FROM x0.ls_ape1 ) ) || ' ' ) || TRIM ( 
    BOTH  ' ' FROM x0.ls_ape2 ) ) ,x0.ls_fecha ,x0.ls_sit from 
    "informix".situacion_tropa_lista x0 ;                     
                                                             
                                                             
              
create view evaluacion1_2017 (cat1,total1) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2017%' ) ) ;                   
                     
create view vt_ls_12 (nombre12) as 
  select ((((((TRIM ( BOTH  ' ' FROM x0.vet_nom1 ) || ' ' ) || TRIM 
    ( BOTH  ' ' FROM x0.vet_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' '
     FROM x0.vet_ape1 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.vet_ape2 
    ) ) from "informix".veteranos_comparacion x0 where ((x0.vet_nom_real 
    = '' ) AND (x0.vet_num_listado = 12 ) ) ;                 
                                                             
                                                             
                                  
create view vt_ls_3 (nombre3) as 
  select ((((((TRIM ( BOTH  ' ' FROM x0.vet_nom1 ) || ' ' ) || TRIM 
    ( BOTH  ' ' FROM x0.vet_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' '
     FROM x0.vet_ape1 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.vet_ape2 
    ) ) from "informix".veteranos_comparacion x0 where ((x0.vet_nom_real 
    = '' ) AND (x0.vet_num_listado = 3 ) ) ;                  
                                                             
                                                             
                                    
create view vt_ls_4 (nombre4) as 
  select ((((((TRIM ( BOTH  ' ' FROM x0.vet_nom1 ) || ' ' ) || TRIM 
    ( BOTH  ' ' FROM x0.vet_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' '
     FROM x0.vet_ape1 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.vet_ape2 
    ) ) from "informix".veteranos_comparacion x0 where ((x0.vet_nom_real 
    = '' ) AND (x0.vet_num_listado = 4 ) ) ;                  
                                                             
                                                             
                                    
create view vt_ls_5 (nombre5) as 
  select ((((((TRIM ( BOTH  ' ' FROM x0.vet_nom1 ) || ' ' ) || TRIM 
    ( BOTH  ' ' FROM x0.vet_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' '
     FROM x0.vet_ape1 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.vet_ape2 
    ) ) from "informix".veteranos_comparacion x0 where ((x0.vet_nom_real 
    = '' ) AND (x0.vet_num_listado = 5 ) ) ;                  
                                                             
                                                             
                                    
create view vt_ls_6 (nombre6) as 
  select ((((((TRIM ( BOTH  ' ' FROM x0.vet_nom1 ) || ' ' ) || TRIM 
    ( BOTH  ' ' FROM x0.vet_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' '
     FROM x0.vet_ape1 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.vet_ape2 
    ) ) from "informix".veteranos_comparacion x0 where ((x0.vet_nom_real 
    = '' ) AND (x0.vet_num_listado = 6 ) ) ;                  
                                                             
                                                             
                                    
create view vt_ls_7 (nombre7) as 
  select ((((((TRIM ( BOTH  ' ' FROM x0.vet_nom1 ) || ' ' ) || TRIM 
    ( BOTH  ' ' FROM x0.vet_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' '
     FROM x0.vet_ape1 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.vet_ape2 
    ) ) from "informix".veteranos_comparacion x0 where ((x0.vet_nom_real 
    = '' ) AND (x0.vet_num_listado = 7 ) ) ;                  
                                                             
                                                             
                                    
create view vt_ls_8 (nombre8) as 
  select ((((((TRIM ( BOTH  ' ' FROM x0.vet_nom1 ) || ' ' ) || TRIM 
    ( BOTH  ' ' FROM x0.vet_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' '
     FROM x0.vet_ape1 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.vet_ape2 
    ) ) from "informix".veteranos_comparacion x0 where ((x0.vet_nom_real 
    = '' ) AND (x0.vet_num_listado = 8 ) ) ;                  
                                                             
                                                             
                                    
create view vt_ls_9 (nombre9) as 
  select ((((((TRIM ( BOTH  ' ' FROM x0.vet_nom1 ) || ' ' ) || TRIM 
    ( BOTH  ' ' FROM x0.vet_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' '
     FROM x0.vet_ape1 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.vet_ape2 
    ) ) from "informix".veteranos_comparacion x0 where ((x0.vet_nom_real 
    = '' ) AND (x0.vet_num_listado = 9 ) ) ;                  
                                                             
                                                             
                                    
create view vt_ls_10 (nombre10) as 
  select ((((((TRIM ( BOTH  ' ' FROM x0.vet_nom1 ) || ' ' ) || TRIM 
    ( BOTH  ' ' FROM x0.vet_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' '
     FROM x0.vet_ape1 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.vet_ape2 
    ) ) from "informix".veteranos_comparacion x0 where ((x0.vet_nom_real 
    = '' ) AND (x0.vet_num_listado = 10 ) ) ;                 
                                                             
                                                             
                                  
create view vt_ls_11 (nombre11) as 
  select ((((((TRIM ( BOTH  ' ' FROM x0.vet_nom1 ) || ' ' ) || TRIM 
    ( BOTH  ' ' FROM x0.vet_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' '
     FROM x0.vet_ape1 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.vet_ape2 
    ) ) from "informix".veteranos_comparacion x0 where ((x0.vet_nom_real 
    = '' ) AND (x0.vet_num_listado = 11 ) ) ;                 
                                                             
                                                             
                                  
create view vt_ls_13 (nombre13) as 
  select ((((((TRIM ( BOTH  ' ' FROM x0.vet_nom1 ) || ' ' ) || TRIM 
    ( BOTH  ' ' FROM x0.vet_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' '
     FROM x0.vet_ape1 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.vet_ape2 
    ) ) from "informix".veteranos_comparacion x0 where ((x0.vet_nom_real 
    = '' ) AND (x0.vet_num_listado = 13 ) ) ;                 
                                                             
                                                             
                                  
create view vt_ls_1 (nombre1) as 
  select ((((((TRIM ( BOTH  ' ' FROM x0.vet_nom1 ) || ' ' ) || TRIM 
    ( BOTH  ' ' FROM x0.vet_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' '
     FROM x0.vet_ape1 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.vet_ape2 
    ) ) from "informix".veteranos_comparacion x0 where ((x0.vet_nom_real 
    = '' ) AND (x0.vet_num_listado = 1 ) ) ;                  
                                                             
                                                             
                                    
create view vt_ls_2 (nombre2) as 
  select ((((((TRIM ( BOTH  ' ' FROM x0.vet_nom1 ) || ' ' ) || TRIM 
    ( BOTH  ' ' FROM x0.vet_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' '
     FROM x0.vet_ape1 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.vet_ape2 
    ) ) from "informix".veteranos_comparacion x0 where ((x0.vet_nom_real 
    = '' ) AND (x0.vet_num_listado = 2 ) ) ;                  
                                                             
                                                             
                                    
create view vt_mper2 (vt_cat,vt_grado,vt_nombre) as 
  select x0.vt_catalogo ,x0.vt_grado ,((((((TRIM ( BOTH  ' ' FROM 
    x0.vt_nom1 ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.vt_nom2 ) 
    ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.vt_ape1 ) ) || ' ' ) 
    || TRIM ( BOTH  ' ' FROM x0.vt_ape2 ) ) from "informix".vt_mper1 
    x0 ;                                                     
                                                             
                                                             
                                 
create view auditorias (idtab,nametab) as 
  select x0.tabid ,x0.tabname from "informix".systables x0 where 
    (((x0.tabname LIKE '%aud_%' ) AND (x0.tabid != 3310 ) ) AND 
    (x0.tabtype = 'T' ) ) ;                                   
                          
create view tab_principales (p_idtable,p_tabname) as 
  select x0.tabid ,x0.tabname from "informix".systables x0 where 
    ((((x0.tabname NOT LIKE '%aud_%' ) AND (x0.tabname NOT LIKE 
    '%sys%' ) ) AND (x0.tabtype = 'T' ) ) AND (x0.tabid NOT IN 
    (90 ,91 ,99 )) ) ;                                       
                                                             
                                                             
                                                             
                                          
create view auditorias2 (idtab,nametab) as 
  select x0.idtab ,TRIM ( LEADING '_' FROM LTRIM (x0.nametab ,'aud'
     ) ) from "informix".auditorias x0 ;                      
                                                             
                          
create view evaluacion2_2021 (cat10,total10) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2021%' ) ) ;                   
                     
create view prueba12022 (cat2,total2,total3,total4,total5,total6,total7,total8,total9,total10) as 
  select x0.cat2 ,x0.total2 ,x1.total3 ,x2.total4 ,x3.total5 ,
    x4.total6 ,x5.total7 ,x6.total8 ,x7.total9 ,x8.total10 from 
    "615591".evaluacion2_2017 x0 ,"615591".evaluacion1_2018 x1 
    ,"615591".evaluacion2_2018 x2 ,"615591".evaluacion1_2019 x3 
    ,"615591".evaluacion2_2019 x4 ,"615591".evaluacion1_2020 x5 
    ,"615591".evaluacion2_2020 x6 ,"615591".evaluacion1_2021 x7 
    ,"615591".evaluacion2_2021 x8 where ((((((((x0.cat2 = x1.cat3 
    ) AND (x0.cat2 = x2.cat4 ) ) AND (x0.cat2 = x3.cat5 ) ) AND 
    (x0.cat2 = x4.cat6 ) ) AND (x0.cat2 = x5.cat7 ) ) AND (x0.cat2 
    = x6.cat8 ) ) AND (x0.cat2 = x7.cat9 ) ) AND (x0.cat2 = x8.cat10 
    ) ) ;                                               
create view bd_permisos (grantor,grantee,tabauth,tabid,tabname,nrows) as 
  select x0.grantor ,x0.grantee ,x0.tabauth ,x0.tabid ,x1.tabname 
    ,x1.nrows from "informix".systabauth x0 ,"informix".systables 
    x1 where (x0.tabid = x1.tabid ) ;             
create view faltantesdot (org_plaza,dep_llave) as 
  select x0.org_plaza ,x1.dep_llave from "informix".morg x0 ,"informix"
    .mdep x1 ,"informix".grados x2 where ((((((x0.org_dependencia 
    = x1.dep_llave ) AND (x0.org_grado = x2.gra_codigo ) ) AND 
    (x2.gra_clase = '6' ) ) AND (x0.org_situacion = 'A' ) ) AND 
    (x0.org_grado > 0 ) ) AND (x0.org_plaza != ALL (select x3.talla_plaza2 
    from "informix".dot_tallas_cadetropa x3 ,"informix".grados 
    x4 ,"informix".morg x5 where (((((x3.talla_plaza2 = x5.org_plaza 
    ) AND (x5.org_grado = x4.gra_codigo ) ) AND (x4.gra_clase 
    = '6' ) ) AND (x5.org_situacion = 'A' ) ) AND (x5.org_grado 
    > 0 ) ) ) ) ) ;                                          
                                                             
                                    
create view faltantesdot2 (org_plaza,llave) as 
  select x0.org_plaza ,x1.dep_llave from "informix".morg x0 ,"informix"
    .mdep x1 ,"informix".grados x2 where ((((((x0.org_dependencia 
    = x1.dep_llave ) AND (x0.org_grado = x2.gra_codigo ) ) AND 
    (x2.gra_clase = '6' ) ) AND (x0.org_situacion = 'A' ) ) AND 
    (x0.org_grado > 0 ) ) AND (x0.org_plaza != ALL (select x3.talla_plaza2 
    from "informix".dot_tallas_cadetropa x3 ,"informix".grados 
    x4 ,"informix".morg x5 where (((((x3.talla_plaza2 = x5.org_plaza 
    ) AND (x5.org_grado = x4.gra_codigo ) ) AND (x4.gra_clase 
    = '6' ) ) AND (x5.org_situacion = 'A' ) ) AND (x5.org_grado 
    > 0 ) ) ) ) ) ;                                          
                                                             
                                       
create view faltantesdot3 (org_plaza,llave) as 
  select x0.org_plaza ,x1.dep_desc_lg from "informix".morg x0 ,
    "informix".mdep x1 ,"informix".grados x2 where ((((((x0.org_dependencia 
    = x1.dep_llave ) AND (x0.org_grado = x2.gra_codigo ) ) AND 
    (x2.gra_clase = '6' ) ) AND (x0.org_situacion = 'A' ) ) AND 
    (x0.org_grado > 0 ) ) AND (x0.org_plaza != ALL (select x3.talla_plaza2 
    from "informix".dot_tallas_cadetropa x3 ,"informix".grados 
    x4 ,"informix".morg x5 where (((((x3.talla_plaza2 = x5.org_plaza 
    ) AND (x5.org_grado = x4.gra_codigo ) ) AND (x4.gra_clase 
    = '6' ) ) AND (x5.org_situacion = 'A' ) ) AND (x5.org_grado 
    > 0 ) ) ) ) ) ;                                          
                                                             
                                     
create view faltantesdot4 (per_catalogo,dep_desc_lg) as 
  select x0.per_catalogo ,x2.dep_desc_lg from "informix".re22_mper 
    x0 ,"informix".re22_obras x1 ,"informix".mdep x2 where ((((x0.per_situacion 
    IN ('11' ,'13' )) AND (x0.per_obra = x1.obra_id ) ) AND (x1.obra_dep 
    = x2.dep_llave ) ) AND (x0.per_catalogo != ALL (select x3.talla_catalogo3 
    from "informix".dot_tallas_perscontrato x3 ,"informix".re22_mper 
    x4 where ((x3.talla_catalogo3 = x4.per_catalogo ) AND (x4.per_situacion 
    IN ('11' ,'13' )) ) ) ) ) ;                                
                                                             
                                                             
                                                             
                                                        
create view evaluacion1_2022 (cat11,total11) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2022%' ) ) ;                   
                     
create view asciendendici22 (cat3,total3,total4,total5,total6,total7,total8,total9,total10,total11) as 
  select x0.cat3 ,x0.total3 ,x1.total4 ,x2.total5 ,x3.total6 ,
    x4.total7 ,x5.total8 ,x6.total9 ,x7.total10 ,x8.total11 from 
    "615591".evaluacion1_2018 x0 ,"615591".evaluacion2_2018 x1 
    ,"615591".evaluacion1_2019 x2 ,"615591".evaluacion2_2019 x3 
    ,"615591".evaluacion1_2020 x4 ,"615591".evaluacion2_2020 x5 
    ,"615591".evaluacion1_2021 x6 ,"615591".evaluacion2_2021 x7 
    ,"615591".evaluacion1_2022 x8 where ((((((((x0.cat3 = x1.cat4 
    ) AND (x0.cat3 = x2.cat5 ) ) AND (x0.cat3 = x3.cat6 ) ) AND 
    (x0.cat3 = x4.cat7 ) ) AND (x0.cat3 = x5.cat8 ) ) AND (x0.cat3 
    = x6.cat9 ) ) AND (x0.cat3 = x7.cat10 ) ) AND (x0.cat3 = 
    x8.cat11 ) ) ;                                        
create view us_bd (usr_cat,usr_gra,usr_arm,usr_name,usr_dep) as 
  select x1.per_catalogo ,x2.gra_desc_lg ,x3.arm_desc_lg ,((((((TRIM 
    ( BOTH  ' ' FROM x1.per_nom1 ) || ' ' ) || TRIM ( BOTH  ' ' 
    FROM x1.per_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x1.per_ape1 
    ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x1.per_ape2 ) ) ,x5.dep_desc_md 
    from ((((("informix".sysusers x0 join "informix".mper x1 on 
    (TO_NUMBER (x0.username )= x1.per_catalogo ) )join "informix"
    .grados x2 on (x1.per_grado = x2.gra_codigo ) )join "informix"
    .armas x3 on (x1.per_arma = x3.arm_codigo ) )join "informix"
    .morg x4 on (x1.per_plaza = x4.org_plaza ) )join "informix"
    .mdep x5 on (x4.org_dependencia = x5.dep_llave ) )where (x0.username 
    NOT IN ('informix' ,'public' )) order by x2.gra_codigo ,x5.dep_llave 
    ;                                                        
                                                             
                                                             
                                                             
                     
create view view1_existencias (farmaco_id,farmaco_ren,farmaco_cod,ren_pres_desc,farmaco_nom,farmaco_desc,pres_asig_obs,pres_nom,pres_asig_cod) as 
  select x0.farmaco_id ,x0.farmaco_ren ,x0.farmaco_cod ,x3.ren_pres_desc 
    ,x0.farmaco_nom ,x0.farmaco_desc ,x1.pres_asig_obs ,x2.pres_nom 
    ,x1.pres_asig_cod from "informix".farma_farmacos x0 ,"informix"
    .farma_presentacion_asignada x1 ,"informix".farma_presentaciones 
    x2 ,"informix".farma_renglones_presupuestarios x3 where (((x1.pres_asig_pres 
    = x2.pres_id ) AND (x0.farmaco_id = x1.pres_asig_far_id ) 
    ) AND (x0.farmaco_ren = x3.ren_pres_id ) ) ;             
                                                             
                                                             
                                              
create view view30_existencia (farmaco_id,farmaco_ren,farmaco_cod,ren_pres_desc,farmaco_nom,farmaco_desc,pres_asig_obs,pres_nom,pres_asig_cod,total,precio) as 
  select x0.farmaco_id ,x0.farmaco_ren ,x0.farmaco_cod ,x3.ren_pres_desc 
    ,x0.farmaco_nom ,x0.farmaco_desc ,x1.pres_asig_obs ,x2.pres_nom 
    ,x1.pres_asig_cod ,((select NVL (sum(x4.ins_asig_cantidad 
    ) ,0 )from "informix".far_insumos_asignados x4 where ((((x4.ins_asig_situacion 
    = 1 ) AND (x4.ins_desc_insumo = 'I' ) ) AND (x4.ins_asig_ins 
    = x0.farmaco_id ) ) AND (x4.ins_asig_pres = x1.pres_asig_id 
    ) ) ) - (select NVL (sum(x5.ins_asig_cantidad ) ,0 )from 
    "informix".far_insumos_asignados x5 where ((((x5.ins_asig_situacion 
    = 1 ) AND (x5.ins_desc_insumo = 'E' ) ) AND (x5.ins_asig_ins 
    = x0.farmaco_id ) ) AND (x5.ins_asig_pres = x1.pres_asig_id 
    ) ) ) ) ,(select x6.ins_asig_prec from "informix".far_insumos_asignados 
    x6 where (x6.ins_asig_id = ANY (select max(x7.ins_asig_id 
    ) from "informix".far_insumos_asignados x7 where (((x7.ins_asig_ins 
    = x0.farmaco_id ) AND (x7.ins_asig_pres = x1.pres_asig_id 
    ) ) AND (x7.ins_asig_situacion = 1 ) ) group by x7.ins_asig_ins 
    ,x7.ins_asig_pres ) ) ) from "informix".farma_farmacos x0 
    ,"informix".farma_presentacion_asignada x1 ,"informix".farma_presentaciones 
    x2 ,"informix".farma_renglones_presupuestarios x3 where (((x1.pres_asig_pres 
    = x2.pres_id ) AND (x0.farmaco_id = x1.pres_asig_far_id ) 
    ) AND (x0.farmaco_ren = x3.ren_pres_id ) ) ;             
                                                             
                            
create view view30_totalisimo (farmaco_ren,totalisimo) as 
  select x0.farmaco_ren ,(x0.total * x0.precio ) from "informix"
    .view30_existencia x0 ;                                  
                                                             
               
create view evaluacion2_2022 (cat11,total11) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2022%' ) ) ;                   
                     
create view evaluacion2_22 (cat12,total12) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%2 - 2022%' ) ) ;                   
                       
create view asciendenjul23 (cat4,total4,total5,total6,total7,total8,total9,total10,total11,total12) as 
  select x0.cat4 ,x0.total4 ,x1.total5 ,x2.total6 ,x3.total7 ,
    x4.total8 ,x5.total9 ,x6.total10 ,x7.total11 ,x8.total12 
    from "615591".evaluacion2_2018 x0 ,"615591".evaluacion1_2019 
    x1 ,"615591".evaluacion2_2019 x2 ,"615591".evaluacion1_2020 
    x3 ,"615591".evaluacion2_2020 x4 ,"615591".evaluacion1_2021 
    x5 ,"615591".evaluacion2_2021 x6 ,"615591".evaluacion1_2022 
    x7 ,"615591".evaluacion2_22 x8 where ((((((((x0.cat4 = x1.cat5 
    ) AND (x0.cat4 = x2.cat6 ) ) AND (x0.cat4 = x3.cat7 ) ) AND 
    (x0.cat4 = x4.cat8 ) ) AND (x0.cat4 = x5.cat9 ) ) AND (x0.cat4 
    = x6.cat10 ) ) AND (x0.cat4 = x7.cat11 ) ) AND (x0.cat4 = 
    x8.cat12 ) ) ;                                        
create view evaluacion1_23 (cat13,total13) as 
  select distinct x1.eva_cat1 ,(((select (NVL (sum(x2.not_nota 
    ) ,0 )* 0.1 ) from "informix".eva_notas x2 where ((x2.not_evaluacion 
    = x1.eva_id ) AND (x2.not_tipo = 1 ) ) ) + (select (NVL (sum(x3.not_nota 
    ) ,0 )* 0.45 ) from "informix".eva_notas x3 where ((x3.not_evaluacion 
    = x1.eva_id ) AND (x3.not_tipo = 2 ) ) ) ) + (select (NVL 
    (sum(x4.not_nota ) ,0 )* 0.45 ) from "informix".eva_notas 
    x4 where ((x4.not_evaluacion = x1.eva_id ) AND (x4.not_tipo 
    = 3 ) ) ) ) from "informix".eva_notas x0 ,"informix".eva_evaluacion 
    x1 where ((((x0.not_evaluacion = x1.eva_id ) AND (x1.eva_id 
    = x0.not_evaluacion ) ) AND (x1.eva_situacion != 9 ) ) AND 
    (x1.eva_periodo LIKE '%1 - 2023%' ) ) ;                   
                       
create view asciendenene24 (cat5,total5,total6,total7,total8,total9,total10,total11,total21,total13) as 
  select x0.cat5 ,x0.total5 ,x1.total6 ,x2.total7 ,x3.total8 ,
    x4.total9 ,x5.total10 ,x6.total11 ,x7.total12 ,x8.total13 
    from "615591".evaluacion1_2019 x0 ,"615591".evaluacion2_2019 
    x1 ,"615591".evaluacion1_2020 x2 ,"615591".evaluacion2_2020 
    x3 ,"615591".evaluacion1_2021 x4 ,"615591".evaluacion2_2021 
    x5 ,"615591".evaluacion1_2022 x6 ,"615591".evaluacion2_22 x7 
    ,"615591".evaluacion1_23 x8 where ((((((((x0.cat5 = x1.cat6 
    ) AND (x0.cat5 = x2.cat7 ) ) AND (x0.cat5 = x3.cat8 ) ) AND 
    (x0.cat5 = x4.cat9 ) ) AND (x0.cat5 = x5.cat10 ) ) AND (x0.cat5 
    = x6.cat11 ) ) AND (x0.cat5 = x7.cat12 ) ) AND (x0.cat5 = 
    x8.cat13 ) ) ;                                       
create view cursos_cantidad (catalogo,cantidad,tipo) as 
  select x0.cur_catalogo ,count(x1.cur_tipo ) ,x1.cur_tipo from 
    "informix".dcur x0 ,"informix".cursos x1 where ((x0.cur_curso 
    = x1.cur_codigo ) AND (x0.cur_catalogo = ANY (select x2.per_catalogo 
    from "informix".mper x2 where (((x2.per_situacion = '11' ) 
    AND (x2.per_grado >= 88 ) ) AND ((x2.per_promocion >= 118 
    ) AND (x2.per_promocion <= 130 ) ) ) ) ) ) group by x0.cur_catalogo 
    ,x1.cur_tipo order by 1 ;                                
                
create view puestos_catidad (catalogos,grado,arma,nombres,linea,cantidad_p) as 
  select x0.eva_cat1 ,x3.gra_desc_md ,x4.arm_desc_md ,((((((x2.per_nom1 
    || '' ) || x2.per_nom2 ) || '' ) || x2.per_ape1 ) || '' ) || 
    x2.per_ape2 ) ,x1.lin_desc_lg ,count(x1.lin_desc_lg ) from 
    "informix".eva_evaluacion x0 ,"informix".eva_linea x1 ,"informix"
    .mper x2 ,"informix".grados x3 ,"informix".armas x4 where (((((x0.eva_linea 
    = x1.lin_id ) AND (x0.eva_cat1 = x2.per_catalogo ) ) AND 
    (x2.per_arma = x4.arm_codigo ) ) AND (x2.per_grado = x3.gra_codigo 
    ) ) AND (x0.eva_cat1 = ANY (select x5.per_catalogo from "informix"
    .mper x5 where (((x5.per_situacion = '11' ) AND (x5.per_grado 
    >= 88 ) ) AND ((x5.per_promocion >= 118 ) AND (x5.per_promocion 
    <= 130 ) ) ) ) ) ) group by x0.eva_cat1 ,x4.arm_desc_md ,
    x3.gra_desc_md ,4 ,x1.lin_desc_lg order by 1 ;           
                                                             
                                                             
                                                             
        
create view pafes_vista (not_catalogo,gra_desc_ct,not_fecha,not_periodo,not_promedio,not_tipo,observacion,not_grado) as 
  select x0.not_catalogo ,x2.gra_desc_ct ,x0.not_fecha ,x0.not_periodo 
    ,x0.not_promedio ,x0.not_tipo ,x0.not_obs from (("informix"
    .opaf_notas x0 join "informix".mdep x1 on (x1.dep_llave = 
    x0.not_dependencia ) )join "informix".grados x2 on (x0.not_grado 
    = x2.gra_codigo ) )where (((x0.not_catalogo = 634576 ) AND 
    (x0.not_tipo = 'Z' ) ) AND (x0.not_grado = 47 ) ) order by 
    x0.not_grado desc ;                                      
                                                             
                                                             
                                                             
                                              
create view cumpleaneros (gra_codigo,grado,arma,nombre_completo,empleo,dia,per_fec_nac) as 
  select x1.gra_codigo ,x1.gra_desc_lg ,x2.arm_desc_md ,((((((TRIM 
    ( BOTH  ' ' FROM x0.per_nom1 ) || ' ' ) || TRIM ( BOTH  ' ' 
    FROM x0.per_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.per_ape1 
    ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.per_ape2 ) ) ,x0.per_desc_empleo 
    ,DAY (x0.per_fec_nac ) ,x0.per_fec_nac from (("informix".mper 
    x0 join "informix".grados x1 on (x0.per_grado = x1.gra_codigo 
    ) )join "informix".armas x2 on (x0.per_arma = x2.arm_codigo 
    ) )where (x0.per_situacion IN ('11' ,'TH' ,'T0' )) ;        
                                                             
                                                             
                                                
create view buscaroficiales (catalogo,grado,arma,nombres,dependencia,puesto,promocion) as 
  select x0.per_catalogo ,x3.gra_desc_lg ,x4.arm_desc_md ,((((((TRIM 
    ( BOTH  ' ' FROM x0.per_nom1 ) || ' ' ) || TRIM ( BOTH  ' ' 
    FROM x0.per_nom2 ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.per_ape1 
    ) ) || ' ' ) || TRIM ( BOTH  ' ' FROM x0.per_ape2 ) ) ,x1.dep_desc_lg 
    ,x2.org_plaza_desc ,x0.per_promocion from "informix".mper 
    x0 ,"informix".mdep x1 ,"informix".morg x2 ,"informix".grados 
    x3 ,"informix".armas x4 where (((((x0.per_plaza = x2.org_plaza 
    ) AND (x2.org_dependencia = x1.dep_llave ) ) AND (x0.per_grado 
    = x3.gra_codigo ) ) AND (x0.per_arma = x4.arm_codigo ) ) 
    AND (x0.per_situacion IN ('11' ,'TH' ,'T0' )) ) order by x3.gra_codigo 
    desc ;                         
create view vw_plazasllenas_porgrado (vw_dep_llave,vw_dep_desc_lg,vw_soldado_segunda_tropa_esp,vw_soldado_de_segunda,vw_soldado_de_segunda_dup,vw_marinero_de_tercera,vw_soldado_de_2da_especialista,vw_infante,vw_soldado_de_primera,vw_soldado_de_primera_tropa_esp,vw_marinero_de_segunda,vw_soldado_de_1ra_especialista,vw_policia_militar,vw_caballero_alumno,vw_caballero_cadete,vw_dama_cadete,vw_cabo,vw_cabo_tropa_especializada,vw_marinero_de_primera,vw_cabo_especialista,vw_infante_de_primera,vw_sargento_segundo,vw_sargento_segundo_tropa_esp,vw_contra_maestre,vw_sargento_segundo_especialista,vw_sargento_primero,vw_tropa_especializada,vw_sargento_primero_especialista,vw_maestre,vw_maestre_tecnico,vw_sargento_tecnico_especialista,vw_maestre_mayor,vw_sargento_mayor_especialista,vw_sargento_comandante_peloton,vw_especialista_sin_grado,vw_alferez_fragata_asimilado,vw_subteniente_asimilado,vw_alferez_fragata_retirado_infanteria,vw_alferez_fragata_retirado_caballeria,vw_alferez_fragata_retirado_artilleria,vw_alferez_fragata_retirado_ingenieros,vw_alferez_fragata_retirado_aviacion_piloto_aviador,vw_alferez_fragata_retirado_marina,vw_alferez_fragata_retirado_aviacion,vw_alferez_fragata_retirado_intendencia,vw_alferez_fragata_retirado_material_de_guerra,vw_alferez_fragata_retirado_sanidad_militar,vw_alferez_fragata_retirado_transmisiones,vw_alferez_fragata_retirado_policia_militar,vw_subteniente_de_reservas_infanteria,vw_subteniente_de_reservas_caballeria,vw_subteniente_de_reservas_artilleria,vw_subteniente_de_reservas_ingenieros,vw_subteniente_de_reservas_aviacion_piloto_aviador,vw_subteniente_de_reservas_marina,vw_subteniente_de_reservas_aviacion,vw_subteniente_de_reservas_intendencia,vw_subteniente_de_reservas_material_de_guerra,vw_subteniente_de_reservas_sanidad_militar,vw_subteniente_de_reservas_transmisiones,vw_subteniente_de_reservas_policia_militar,vw_alferez_de_fragata_infanteria,vw_alferez_de_fragata_caballeria,vw_alferez_de_fragata_artilleria,vw_alferez_de_fragata_ingenieros,vw_alferez_de_fragata_aviacion_piloto_aviador,vw_alferez_de_fragata_marina,vw_alferez_de_fragata_aviacion,vw_alferez_de_fragata_intendencia,vw_alferez_de_fragata_material_de_guerra,vw_alferez_de_fragata_sanidad_militar,vw_alferez_de_fragata_transmisiones,vw_alferez_de_fragata_policia_militar,vw_subteniente_infanteria,vw_subteniente_caballeria,vw_subteniente_artilleria,vw_subteniente_ingenieros,vw_subteniente_aviacion_piloto_aviador,vw_subteniente_marina,vw_subteniente_aviacion,vw_subteniente_intendencia,vw_subteniente_material_de_guerra,vw_subteniente_sanidad_militar,vw_subteniente_transmisiones,vw_subteniente_policia_militar,vw_alferez_navio_asimilado_infanteria,vw_alferez_navio_asimilado_caballeria,vw_alferez_navio_asimilado_artilleria,vw_alferez_navio_asimilado_ingenieros,vw_alferez_navio_asimilado_aviacion_piloto_aviador,vw_alferez_navio_asimilado_marina,vw_alferez_navio_asimilado_aviacion,vw_alferez_navio_asimilado_intendencia,vw_alferez_navio_asimilado_material_de_guerra,vw_alferez_navio_asimilado_sanidad_militar,vw_alferez_navio_asimilado_transmisiones,vw_alferez_navio_asimilado_policia_militar,vw_teniente_asimilado,vw_alferez_navio_de_reservas_infanteria,vw_alferez_navio_de_reservas_caballeria,vw_alferez_navio_de_reservas_artilleria,vw_alferez_navio_de_reservas_ingenieros,vw_alferez_navio_de_reservas_aviacion_piloto_aviador,vw_alferez_navio_de_reservas_marina,vw_alferez_navio_de_reservas_aviacion,vw_alferez_navio_de_reservas_intendencia,vw_alferez_navio_de_reservas_material_de_guerra,vw_alferez_navio_de_reservas_sanidad_militar,vw_alferez_navio_de_reservas_transmisiones,vw_alferez_navio_de_reservas_policia_militar,vw_teniente_de_reservas_infanteria,vw_teniente_de_reservas_caballeria,vw_teniente_de_reservas_artilleria,vw_teniente_de_reservas_ingenieros,vw_teniente_de_reservas_aviacion_piloto_aviador,vw_teniente_de_reservas_marina,vw_teniente_de_reservas_aviacion,vw_teniente_de_reservas_intendencia,vw_teniente_de_reservas_material_de_guerra,vw_teniente_de_reservas_sanidad_militar,vw_teniente_de_reservas_transmisiones,vw_teniente_de_reservas_policia_militar,vw_alferez_de_navio_infanteria,vw_alferez_de_navio_caballeria,vw_alferez_de_navio_artilleria,vw_alferez_de_navio_ingenieros,vw_alferez_de_navio_aviacion_piloto_aviador,vw_alferez_de_navio_marina,vw_alferez_de_navio_aviacion,vw_alferez_de_navio_intendencia,vw_alferez_de_navio_material_de_guerra,vw_alferez_de_navio_sanidad_militar,vw_alferez_de_navio_transmisiones,vw_alferez_de_navio_policia_militar,vw_teniente_infanteria,vw_teniente_caballeria,vw_teniente_artilleria,vw_teniente_ingenieros,vw_teniente_aviacion_piloto_aviador,vw_teniente_marina,vw_teniente_aviacion,vw_teniente_intendencia,vw_teniente_material_de_guerra,vw_teniente_sanidad_militar,vw_teniente_transmisiones,vw_teniente_policia_militar,vw_capitan_asimilado,vw_capitan_de_reservas_infanteria,vw_capitan_de_reservas_caballeria,vw_capitan_de_reservas_artilleria,vw_capitan_de_reservas_ingenieros,vw_capitan_de_reservas_aviacion_piloto_aviador,vw_capitan_de_reservas_marina,vw_capitan_de_reservas_aviacion,vw_capitan_de_reservas_intendencia,vw_capitan_de_reservas_material_de_guerra,vw_capitan_de_reservas_sanidad_militar,vw_capitan_de_reservas_transmisiones,vw_capitan_de_reservas_policia_militar,vw_capitan_infanteria,vw_capitan_caballeria,vw_capitan_artilleria,vw_capitan_ingenieros,vw_capitan_aviacion_piloto_aviador,vw_capitan_marina,vw_capitan_aviacion,vw_capitan_intendencia,vw_capitan_material_guerra,vw_capitan_sanidad_militar,vw_capitan_transmisiones,vw_capitan_policia_militar,vw_teniente_fragata_asimilado,vw_capitan_segundo_asimilado,vw_teniente_fragata_reserva_infanteria,vw_teniente_fragata_reserva_caballeria,vw_teniente_fragata_reserva_artilleria,vw_teniente_fragata_reserva_ingenieros,vw_teniente_fragata_reserva_aviacion_piloto_aviador,vw_teniente_fragata_reserva_marina,vw_teniente_fragata_reserva_aviacion,vw_teniente_fragata_reserva_intendencia,vw_teniente_fragata_reserva_material_de_guerra,vw_teniente_fragata_reserva_sanidad_militar,vw_teniente_fragata_reserva_transmisiones,vw_teniente_fragata_reserva_policia_militar,vw_capitan_segundo_reservas_infanteria,vw_capitan_segundo_reservas_caballeria,vw_capitan_segundo_reservas_artilleria,vw_capitan_segundo_reservas_ingenieros,vw_capitan_segundo_reservas_aviacion_piloto_aviador,vw_capitan_segundo_reservas_marina,vw_capitan_segundo_reservas_aviacion,vw_capitan_segundo_reservas_intendencia,vw_capitan_segundo_reservas_material_de_guerra,vw_capitan_segundo_reservas_sanidad_militar,vw_capitan_segundo_reservas_transmisiones,vw_capitan_segundo_reservas_policia_militar,vw_teniente_de_fragata_infanteria,vw_teniente_de_fragata_caballeria,vw_teniente_de_fragata_artilleria,vw_teniente_de_fragata_ingenieros,vw_teniente_de_fragata_aviacion_piloto_aviador,vw_teniente_de_fragata_marina,vw_teniente_de_fragata_aviacion,vw_teniente_de_fragata_intendencia,vw_teniente_de_fragata_material_de_guerra,vw_teniente_de_fragata_sanidad_militar,vw_teniente_de_fragata_transmisiones,vw_teniente_de_fragata_policia_militar,vw_capitan_segundo_infanteria,vw_capitan_segundo_caballeria,vw_capitan_segundo_artilleria,vw_capitan_segundo_ingenieros,vw_capitan_segundo_aviacion_piloto_aviador,vw_capitan_segundo_marina,vw_capitan_segundo_aviacion,vw_capitan_segundo_intendencia,vw_capitan_segundo_material_de_guerra,vw_capitan_segundo_sanidad_militar,vw_capitan_segundo_transmisiones,vw_capitan_segundo_policia_militar,vw_teniente_navio_asimilado,vw_capitan_primero_asimilado_infanteria,vw_teniente_navio_reservas_infanteria,vw_teniente_navio_reservas_caballeria,vw_teniente_navio_reservas_artilleria,vw_teniente_navio_reservas_ingenieros,vw_teniente_navio_reservas_aviacion_piloto_aviador,vw_teniente_navio_reservas_marina,vw_teniente_navio_reservas_aviacion,vw_teniente_navio_reservas_intendencia,vw_teniente_navio_reservas_material_de_guerra,vw_teniente_navio_reservas_sanidad_militar,vw_teniente_navio_reservas_transmisiones,vw_teniente_navio_reservas_policia_militar,vw_capitan_primero_reservas_infanteria,vw_capitan_primero_reservas_caballeria,vw_capitan_primero_reservas_artilleria,vw_capitan_primero_reservas_ingenieros,vw_capitan_primero_reservas_aviacion_piloto_aviador,vw_capitan_primero_reservas_marina,vw_capitan_primero_reservas_aviacion,vw_capitan_primero_reservas_intendencia,vw_capitan_primero_reservas_material_de_guerra,vw_capitan_primero_reservas_sanidad_militar,vw_capitan_primero_reservas_transmisiones,vw_capitan_primero_reservas_policia_militar,vw_teniente_de_navio_infanteria,vw_teniente_de_navio_caballeria,vw_teniente_de_navio_artilleria,vw_teniente_de_navio_ingenieros,vw_teniente_de_navio_aviacion_piloto_aviador,vw_teniente_de_navio_marina,vw_teniente_de_navio_aviacion,vw_teniente_de_navio_intendencia,vw_teniente_de_navio_material_de_guerra,vw_teniente_de_navio_sanidad_militar,vw_teniente_de_navio_transmisiones,vw_teniente_de_navio_policia_militar,vw_capitan_primero_infanteria,vw_capitan_primero_caballeria,vw_capitan_primero_artilleria,vw_capitan_primero_ingenieros,vw_capitan_primero_aviacion_piloto_aviador,vw_capitan_primero_marina,vw_capitan_primero_aviacion,vw_capitan_primero_intendencia,vw_capitan_primero_material_de_guerra,vw_capitan_primero_sanidad_militar,vw_capitan_primero_transmisiones,vw_capitan_primero_policia_militar,vw_capitan_corbeta_asimilado,vw_mayor_asimilado_infanteria,vw_mayor_asimilado_caballeria,vw_mayor_asimilado_artilleria,vw_mayor_asimilado_ingenieros,vw_mayor_asimilado_aviacion_piloto_aviador,vw_mayor_asimilado_marina,vw_mayor_asimilado_aviacion,vw_mayor_asimilado_intendencia,vw_mayor_asimilado_material_de_guerra,vw_mayor_asimilado_sanidad_militar,vw_mayor_asimilado_transmisiones,vw_mayor_asimilado_policia_militar,vw_capitan_corbeta_reservas_infanteria,vw_capitan_corbeta_reservas_caballeria,vw_capitan_corbeta_reservas_artilleria,vw_capitan_corbeta_reservas_ingenieros,vw_capitan_corbeta_reservas_aviacion_piloto_aviador,vw_capitan_corbeta_reservas_marina,vw_capitan_corbeta_reservas_aviacion,vw_capitan_corbeta_reservas_intendencia,vw_capitan_corbeta_reservas_material_de_guerra,vw_capitan_corbeta_reservas_sanidad_militar,vw_capitan_corbeta_reservas_transmisiones,vw_capitan_corbeta_reservas_policia_militar,vw_mayor_reservas_infanteria,vw_mayor_reservas_caballeria,vw_mayor_reservas_artilleria,vw_mayor_reservas_ingenieros,vw_mayor_reservas_aviacion_piloto_aviador,vw_mayor_reservas_marina,vw_mayor_reservas_aviacion,vw_mayor_reservas_intendencia,vw_mayor_reservas_material_de_guerra,vw_mayor_reservas_sanidad_militar,vw_mayor_reservas_transmisiones,vw_mayor_reservas_policia_militar,vw_capitan_de_corbeta_infanteria,vw_capitan_de_corbeta_caballeria,vw_capitan_de_corbeta_artilleria,vw_capitan_de_corbeta_ingenieros,vw_capitan_de_corbeta_aviacion_piloto_aviador,vw_capitan_de_corbeta_marina,vw_capitan_de_corbeta_aviacion,vw_capitan_de_corbeta_intendencia,vw_capitan_de_corbeta_material_de_guerra,vw_capitan_de_corbeta_sanidad_militar,vw_capitan_de_corbeta_transmisiones,vw_capitan_de_corbeta_policia_militar,vw_mayor_infanteria,vw_mayor_caballeria,vw_mayor_artilleria,vw_mayor_ingenieros,vw_mayor_aviacion_piloto_aviador,vw_mayor_marina,vw_mayor_aviacion,vw_mayor_intendencia,vw_mayor_material_de_guerra,vw_mayor_sanidad_militar,vw_mayor_transmisiones,vw_mayor_policia_militar,vw_capitan_fragata_asimilado,vw_teniente_coronel_asimilado,vw_capitan_fragata_reservas_infanteria,vw_capitan_fragata_reservas_caballeria,vw_capitan_fragata_reservas_artilleria,vw_capitan_fragata_reservas_ingenieros,vw_capitan_fragata_reservas_aviacion_piloto_aviador,vw_capitan_fragata_reservas_marina,vw_capitan_fragata_reservas_aviacion,vw_capitan_fragata_reservas_intendencia,vw_capitan_fragata_reservas_material_de_guerra,vw_capitan_fragata_reservas_sanidad_militar,vw_capitan_fragata_reservas_transmisiones,vw_capitan_fragata_reservas_policia_militar,vw_teniente_coronel_reservas_infanteria,vw_teniente_coronel_reservas_caballeria,vw_teniente_coronel_reservas_artilleria,vw_teniente_coronel_reservas_ingenieros,vw_teniente_coronel_reservas_aviacion_piloto_aviador,vw_teniente_coronel_reservas_marina,vw_teniente_coronel_reservas_aviacion,vw_teniente_coronel_reservas_intendencia,vw_teniente_coronel_reservas_material_de_guerra,vw_teniente_coronel_reservas_sanidad_militar,vw_teniente_coronel_reservas_transmisiones,vw_teniente_coronel_reservas_policia_militar,vw_capitan_fragata_infanteria,vw_capitan_fragata_caballeria,vw_capitan_fragata_artilleria,vw_capitan_fragata_ingenieros,vw_capitan_fragata_aviacion_piloto_aviador,vw_capitan_fragata_marina,vw_capitan_fragata_aviacion,vw_capitan_fragata_intendencia,vw_capitan_fragata_material_de_guerra,vw_capitan_fragata_sanidad_militar,vw_capitan_fragata_transmisiones,vw_capitan_fragata_policia_militar,vw_teniente_coronel_infanteria,vw_teniente_coronel_caballeria,vw_teniente_coronel_artilleria,vw_teniente_coronel_ingenieros,vw_teniente_coronel_aviacion_piloto_aviador,vw_teniente_coronel_marina,vw_teniente_coronel_aviacion,vw_teniente_coronel_intendencia,vw_teniente_coronel_material_de_guerra,vw_teniente_coronel_sanidad_militar,vw_teniente_coronel_transmisiones,vw_teniente_coronel_policia_militar,vw_capitan_navio_asimilado,vw_coronel_asimilado,vw_oficial_asimilado_sin_grado,vw_capitan_navio_infanteria,vw_capitan_navio_caballeria,vw_capitan_navio_artilleria,vw_capitan_navio_ingenieros,vw_capitan_navio_aviacion_piloto_aviador,vw_capitan_navio_marina,vw_capitan_navio_aviacion,vw_capitan_navio_intendencia,vw_capitan_navio_material_de_guerra,vw_capitan_navio_sanidad_militar,vw_capitan_navio_transmisiones,vw_capitan_navio_policia_militar,vw_coronel_infanteria,vw_coronel_caballeria,vw_coronel_artilleria,vw_coronel_ingenieros,vw_coronel_aviacion_piloto_aviador,vw_coronel_marina,vw_coronel_aviacion,vw_coronel_intendencia,vw_coronel_material_de_guerra,vw_coronel_sanidad_militar,vw_coronel_transmisiones,vw_coronel_policia_militar,vw_vicealmirante,vw_general_brigada,vw_almirante,vw_general_division) as 
  select x0.vw_dep_llave ,x0.vw_dep_desc_lg ,x0.vw_soldado_segunda_tropa_esp 
    ,x0.vw_soldado_de_segunda ,x0.vw_soldado_de_segunda_dup ,
    x0.vw_marinero_de_tercera ,x0.vw_soldado_de_2da_especialista 
    ,x0.vw_infante ,x0.vw_soldado_de_primera ,x0.vw_soldado_de_primera_tropa_esp 
    ,x0.vw_marinero_de_segunda ,x0.vw_soldado_de_1ra_especialista 
    ,x0.vw_policia_militar ,x0.vw_caballero_alumno ,x0.vw_caballero_cadete 
    ,x0.vw_dama_cadete ,x0.vw_cabo ,x0.vw_cabo_tropa_especializada 
    ,x0.vw_marinero_de_primera ,x0.vw_cabo_especialista ,x0.vw_infante_de_primera 
    ,x0.vw_sargento_segundo ,x0.vw_sargento_segundo_tropa_esp 
    ,x0.vw_contra_maestre ,x0.vw_sargento_segundo_especialista 
    ,x0.vw_sargento_primero ,x0.vw_tropa_especializada ,x0.vw_sargento_primero_especialista 
    ,x0.vw_maestre ,x0.vw_maestre_tecnico ,x0.vw_sargento_tecnico_especialista 
    ,x0.vw_maestre_mayor ,x0.vw_sargento_mayor_especialista ,
    x0.vw_sargento_comandante_peloton ,x0.vw_especialista_sin_grado 
    ,x0.vw_alferez_fragata_asimilado ,x0.vw_subteniente_asimilado 
    ,x0.vw_alferez_fragata_retirado_infanteria ,x0.vw_alferez_fragata_retirado_caballeria 
    ,x0.vw_alferez_fragata_retirado_artilleria ,x0.vw_alferez_fragata_retirado_ingenieros 
    ,x0.vw_alferez_fragata_retirado_aviacion_piloto_aviador ,
    x0.vw_alferez_fragata_retirado_marina ,x0.vw_alferez_fragata_retirado_aviacion 
    ,x0.vw_alferez_fragata_retirado_intendencia ,x0.vw_alferez_fragata_retirado_material_de_guerra 
    ,x0.vw_alferez_fragata_retirado_sanidad_militar ,x0.vw_alferez_fragata_retirado_transmisiones 
    ,x0.vw_alferez_fragata_retirado_policia_militar ,x0.vw_subteniente_de_reservas_infanteria 
    ,x0.vw_subteniente_de_reservas_caballeria ,x0.vw_subteniente_de_reservas_artilleria 
    ,x0.vw_subteniente_de_reservas_ingenieros ,x0.vw_subteniente_de_reservas_aviacion_piloto_aviador 
    ,x0.vw_subteniente_de_reservas_marina ,x0.vw_subteniente_de_reservas_aviacion 
    ,x0.vw_subteniente_de_reservas_intendencia ,x0.vw_subteniente_de_reservas_material_de_guerra 
    ,x0.vw_subteniente_de_reservas_sanidad_militar ,x0.vw_subteniente_de_reservas_transmisiones 
    ,x0.vw_subteniente_de_reservas_policia_militar ,x0.vw_alferez_de_fragata_infanteria 
    ,x0.vw_alferez_de_fragata_caballeria ,x0.vw_alferez_de_fragata_artilleria 
    ,x0.vw_alferez_de_fragata_ingenieros ,x0.vw_alferez_de_fragata_aviacion_piloto_aviador 
    ,x0.vw_alferez_de_fragata_marina ,x0.vw_alferez_de_fragata_aviacion 
    ,x0.vw_alferez_de_fragata_intendencia ,x0.vw_alferez_de_fragata_material_de_guerra 
    ,x0.vw_alferez_de_fragata_sanidad_militar ,x0.vw_alferez_de_fragata_transmisiones 
    ,x0.vw_alferez_de_fragata_policia_militar ,x0.vw_subteniente_infanteria 
    ,x0.vw_subteniente_caballeria ,x0.vw_subteniente_artilleria 
    ,x0.vw_subteniente_ingenieros ,x0.vw_subteniente_aviacion_piloto_aviador 
    ,x0.vw_subteniente_marina ,x0.vw_subteniente_aviacion ,x0.vw_subteniente_intendencia 
    ,x0.vw_subteniente_material_de_guerra ,x0.vw_subteniente_sanidad_militar 
    ,x0.vw_subteniente_transmisiones ,x0.vw_subteniente_policia_militar 
    ,x0.vw_alferez_navio_asimilado_infanteria ,x0.vw_alferez_navio_asimilado_caballeria 
    ,x0.vw_alferez_navio_asimilado_artilleria ,x0.vw_alferez_navio_asimilado_ingenieros 
    ,x0.vw_alferez_navio_asimilado_aviacion_piloto_aviador ,x0.vw_alferez_navio_asimilado_marina 
    ,x0.vw_alferez_navio_asimilado_aviacion ,x0.vw_alferez_navio_asimilado_intendencia 
    ,x0.vw_alferez_navio_asimilado_material_de_guerra ,x0.vw_alferez_navio_asimilado_sanidad_militar 
    ,x0.vw_alferez_navio_asimilado_transmisiones ,x0.vw_alferez_navio_asimilado_policia_militar 
    ,x0.vw_teniente_asimilado ,x0.vw_alferez_navio_de_reservas_infanteria 
    ,x0.vw_alferez_navio_de_reservas_caballeria ,x0.vw_alferez_navio_de_reservas_artilleria 
    ,x0.vw_alferez_navio_de_reservas_ingenieros ,x0.vw_alferez_navio_de_reservas_aviacion_piloto_aviador 
    ,x0.vw_alferez_navio_de_reservas_marina ,x0.vw_alferez_navio_de_reservas_aviacion 
    ,x0.vw_alferez_navio_de_reservas_intendencia ,x0.vw_alferez_navio_de_reservas_material_de_guerra 
    ,x0.vw_alferez_navio_de_reservas_sanidad_militar ,x0.vw_alferez_navio_de_reservas_transmisiones 
    ,x0.vw_alferez_navio_de_reservas_policia_militar ,x0.vw_teniente_de_reservas_infanteria 
    ,x0.vw_teniente_de_reservas_caballeria ,x0.vw_teniente_de_reservas_artilleria 
    ,x0.vw_teniente_de_reservas_ingenieros ,x0.vw_teniente_de_reservas_aviacion_piloto_aviador 
    ,x0.vw_teniente_de_reservas_marina ,x0.vw_teniente_de_reservas_aviacion 
    ,x0.vw_teniente_de_reservas_intendencia ,x0.vw_teniente_de_reservas_material_de_guerra 
    ,x0.vw_teniente_de_reservas_sanidad_militar ,x0.vw_teniente_de_reservas_transmisiones 
    ,x0.vw_teniente_de_reservas_policia_militar ,x0.vw_alferez_de_navio_infanteria 
    ,x0.vw_alferez_de_navio_caballeria ,x0.vw_alferez_de_navio_artilleria 
    ,x0.vw_alferez_de_navio_ingenieros ,x0.vw_alferez_de_navio_aviacion_piloto_aviador 
    ,x0.vw_alferez_de_navio_marina ,x0.vw_alferez_de_navio_aviacion 
    ,x0.vw_alferez_de_navio_intendencia ,x0.vw_alferez_de_navio_material_de_guerra 
    ,x0.vw_alferez_de_navio_sanidad_militar ,x0.vw_alferez_de_navio_transmisiones 
    ,x0.vw_alferez_de_navio_policia_militar ,x0.vw_teniente_infanteria 
    ,x0.vw_teniente_caballeria ,x0.vw_teniente_artilleria ,x0.vw_teniente_ingenieros 
    ,x0.vw_teniente_aviacion_piloto_aviador ,x0.vw_teniente_marina 
    ,x0.vw_teniente_aviacion ,x0.vw_teniente_intendencia ,x0.vw_teniente_material_de_guerra 
    ,x0.vw_teniente_sanidad_militar ,x0.vw_teniente_transmisiones 
    ,x0.vw_teniente_policia_militar ,x0.vw_capitan_asimilado 
    ,x0.vw_capitan_de_reservas_infanteria ,x0.vw_capitan_de_reservas_caballeria 
    ,x0.vw_capitan_de_reservas_artilleria ,x0.vw_capitan_de_reservas_ingenieros 
    ,x0.vw_capitan_de_reservas_aviacion_piloto_aviador ,x0.vw_capitan_de_reservas_marina 
    ,x0.vw_capitan_de_reservas_aviacion ,x0.vw_capitan_de_reservas_intendencia 
    ,x0.vw_capitan_de_reservas_material_de_guerra ,x0.vw_capitan_de_reservas_sanidad_militar 
    ,x0.vw_capitan_de_reservas_transmisiones ,x0.vw_capitan_de_reservas_policia_militar 
    ,x0.vw_capitan_infanteria ,x0.vw_capitan_caballeria ,x0.vw_capitan_artilleria 
    ,x0.vw_capitan_ingenieros ,x0.vw_capitan_aviacion_piloto_aviador 
    ,x0.vw_capitan_marina ,x0.vw_capitan_aviacion ,x0.vw_capitan_intendencia 
    ,x0.vw_capitan_material_guerra ,x0.vw_capitan_sanidad_militar 
    ,x0.vw_capitan_transmisiones ,x0.vw_capitan_policia_militar 
    ,x0.vw_teniente_fragata_asimilado ,x0.vw_capitan_segundo_asimilado 
    ,x0.vw_teniente_fragata_reserva_infanteria ,x0.vw_teniente_fragata_reserva_caballeria 
    ,x0.vw_teniente_fragata_reserva_artilleria ,x0.vw_teniente_fragata_reserva_ingenieros 
    ,x0.vw_teniente_fragata_reserva_aviacion_piloto_aviador ,
    x0.vw_teniente_fragata_reserva_marina ,x0.vw_teniente_fragata_reserva_aviacion 
    ,x0.vw_teniente_fragata_reserva_intendencia ,x0.vw_teniente_fragata_reserva_material_de_guerra 
    ,x0.vw_teniente_fragata_reserva_sanidad_militar ,x0.vw_teniente_fragata_reserva_transmisiones 
    ,x0.vw_teniente_fragata_reserva_policia_militar ,x0.vw_capitan_segundo_reservas_infanteria 
    ,x0.vw_capitan_segundo_reservas_caballeria ,x0.vw_capitan_segundo_reservas_artilleria 
    ,x0.vw_capitan_segundo_reservas_ingenieros ,x0.vw_capitan_segundo_reservas_aviacion_piloto_aviador 
    ,x0.vw_capitan_segundo_reservas_marina ,x0.vw_capitan_segundo_reservas_aviacion 
    ,x0.vw_capitan_segundo_reservas_intendencia ,x0.vw_capitan_segundo_reservas_material_de_guerra 
    ,x0.vw_capitan_segundo_reservas_sanidad_militar ,x0.vw_capitan_segundo_reservas_transmisiones 
    ,x0.vw_capitan_segundo_reservas_policia_militar ,x0.vw_teniente_de_fragata_infanteria 
    ,x0.vw_teniente_de_fragata_caballeria ,x0.vw_teniente_de_fragata_artilleria 
    ,x0.vw_teniente_de_fragata_ingenieros ,x0.vw_teniente_de_fragata_aviacion_piloto_aviador 
    ,x0.vw_teniente_de_fragata_marina ,x0.vw_teniente_de_fragata_aviacion 
    ,x0.vw_teniente_de_fragata_intendencia ,x0.vw_teniente_de_fragata_material_de_guerra 
    ,x0.vw_teniente_de_fragata_sanidad_militar ,x0.vw_teniente_de_fragata_transmisiones 
    ,x0.vw_teniente_de_fragata_policia_militar ,x0.vw_capitan_segundo_infanteria 
    ,x0.vw_capitan_segundo_caballeria ,x0.vw_capitan_segundo_artilleria 
    ,x0.vw_capitan_segundo_ingenieros ,x0.vw_capitan_segundo_aviacion_piloto_aviador 
    ,x0.vw_capitan_segundo_marina ,x0.vw_capitan_segundo_aviacion 
    ,x0.vw_capitan_segundo_intendencia ,x0.vw_capitan_segundo_material_de_guerra 
    ,x0.vw_capitan_segundo_sanidad_militar ,x0.vw_capitan_segundo_transmisiones 
    ,x0.vw_capitan_segundo_policia_militar ,x0.vw_teniente_navio_asimilado 
    ,x0.vw_capitan_primero_asimilado_infanteria ,x0.vw_teniente_navio_reservas_infanteria 
    ,x0.vw_teniente_navio_reservas_caballeria ,x0.vw_teniente_navio_reservas_artilleria 
    ,x0.vw_teniente_navio_reservas_ingenieros ,x0.vw_teniente_navio_reservas_aviacion_piloto_aviador 
    ,x0.vw_teniente_navio_reservas_marina ,x0.vw_teniente_navio_reservas_aviacion 
    ,x0.vw_teniente_navio_reservas_intendencia ,x0.vw_teniente_navio_reservas_material_de_guerra 
    ,x0.vw_teniente_navio_reservas_sanidad_militar ,x0.vw_teniente_navio_reservas_transmisiones 
    ,x0.vw_teniente_navio_reservas_policia_militar ,x0.vw_capitan_primero_reservas_infanteria 
    ,x0.vw_capitan_primero_reservas_caballeria ,x0.vw_capitan_primero_reservas_artilleria 
    ,x0.vw_capitan_primero_reservas_ingenieros ,x0.vw_capitan_primero_reservas_aviacion_piloto_aviador 
    ,x0.vw_capitan_primero_reservas_marina ,x0.vw_capitan_primero_reservas_aviacion 
    ,x0.vw_capitan_primero_reservas_intendencia ,x0.vw_capitan_primero_reservas_material_de_guerra 
    ,x0.vw_capitan_primero_reservas_sanidad_militar ,x0.vw_capitan_primero_reservas_transmisiones 
    ,x0.vw_capitan_primero_reservas_policia_militar ,x0.vw_teniente_de_navio_infanteria 
    ,x0.vw_teniente_de_navio_caballeria ,x0.vw_teniente_de_navio_artilleria 
    ,x0.vw_teniente_de_navio_ingenieros ,x0.vw_teniente_de_navio_aviacion_piloto_aviador 
    ,x0.vw_teniente_de_navio_marina ,x0.vw_teniente_de_navio_aviacion 
    ,x0.vw_teniente_de_navio_intendencia ,x0.vw_teniente_de_navio_material_de_guerra 
    ,x0.vw_teniente_de_navio_sanidad_militar ,x0.vw_teniente_de_navio_transmisiones 
    ,x0.vw_teniente_de_navio_policia_militar ,x0.vw_capitan_primero_infanteria 
    ,x0.vw_capitan_primero_caballeria ,x0.vw_capitan_primero_artilleria 
    ,x0.vw_capitan_primero_ingenieros ,x0.vw_capitan_primero_aviacion_piloto_aviador 
    ,x0.vw_capitan_primero_marina ,x0.vw_capitan_primero_aviacion 
    ,x0.vw_capitan_primero_intendencia ,x0.vw_capitan_primero_material_de_guerra 
    ,x0.vw_capitan_primero_sanidad_militar ,x0.vw_capitan_primero_transmisiones 
    ,x0.vw_capitan_primero_policia_militar ,x0.vw_capitan_corbeta_asimilado 
    ,x0.vw_mayor_asimilado_infanteria ,x0.vw_mayor_asimilado_caballeria 
    ,x0.vw_mayor_asimilado_artilleria ,x0.vw_mayor_asimilado_ingenieros 
    ,x0.vw_mayor_asimilado_aviacion_piloto_aviador ,x0.vw_mayor_asimilado_marina 
    ,x0.vw_mayor_asimilado_aviacion ,x0.vw_mayor_asimilado_intendencia 
    ,x0.vw_mayor_asimilado_material_de_guerra ,x0.vw_mayor_asimilado_sanidad_militar 
    ,x0.vw_mayor_asimilado_transmisiones ,x0.vw_mayor_asimilado_policia_militar 
    ,x0.vw_capitan_corbeta_reservas_infanteria ,x0.vw_capitan_corbeta_reservas_caballeria 
    ,x0.vw_capitan_corbeta_reservas_artilleria ,x0.vw_capitan_corbeta_reservas_ingenieros 
    ,x0.vw_capitan_corbeta_reservas_aviacion_piloto_aviador ,
    x0.vw_capitan_corbeta_reservas_marina ,x0.vw_capitan_corbeta_reservas_aviacion 
    ,x0.vw_capitan_corbeta_reservas_intendencia ,x0.vw_capitan_corbeta_reservas_material_de_guerra 
    ,x0.vw_capitan_corbeta_reservas_sanidad_militar ,x0.vw_capitan_corbeta_reservas_transmisiones 
    ,x0.vw_capitan_corbeta_reservas_policia_militar ,x0.vw_mayor_reservas_infanteria 
    ,x0.vw_mayor_reservas_caballeria ,x0.vw_mayor_reservas_artilleria 
    ,x0.vw_mayor_reservas_ingenieros ,x0.vw_mayor_reservas_aviacion_piloto_aviador 
    ,x0.vw_mayor_reservas_marina ,x0.vw_mayor_reservas_aviacion 
    ,x0.vw_mayor_reservas_intendencia ,x0.vw_mayor_reservas_material_de_guerra 
    ,x0.vw_mayor_reservas_sanidad_militar ,x0.vw_mayor_reservas_transmisiones 
    ,x0.vw_mayor_reservas_policia_militar ,x0.vw_capitan_de_corbeta_infanteria 
    ,x0.vw_capitan_de_corbeta_caballeria ,x0.vw_capitan_de_corbeta_artilleria 
    ,x0.vw_capitan_de_corbeta_ingenieros ,x0.vw_capitan_de_corbeta_aviacion_piloto_aviador 
    ,x0.vw_capitan_de_corbeta_marina ,x0.vw_capitan_de_corbeta_aviacion 
    ,x0.vw_capitan_de_corbeta_intendencia ,x0.vw_capitan_de_corbeta_material_de_guerra 
    ,x0.vw_capitan_de_corbeta_sanidad_militar ,x0.vw_capitan_de_corbeta_transmisiones 
    ,x0.vw_capitan_de_corbeta_policia_militar ,x0.vw_mayor_infanteria 
    ,x0.vw_mayor_caballeria ,x0.vw_mayor_artilleria ,x0.vw_mayor_ingenieros 
    ,x0.vw_mayor_aviacion_piloto_aviador ,x0.vw_mayor_marina 
    ,x0.vw_mayor_aviacion ,x0.vw_mayor_intendencia ,x0.vw_mayor_material_de_guerra 
    ,x0.vw_mayor_sanidad_militar ,x0.vw_mayor_transmisiones ,
    x0.vw_mayor_policia_militar ,x0.vw_capitan_fragata_asimilado 
    ,x0.vw_teniente_coronel_asimilado ,x0.vw_capitan_fragata_reservas_infanteria 
    ,x0.vw_capitan_fragata_reservas_caballeria ,x0.vw_capitan_fragata_reservas_artilleria 
    ,x0.vw_capitan_fragata_reservas_ingenieros ,x0.vw_capitan_fragata_reservas_aviacion_piloto_aviador 
    ,x0.vw_capitan_fragata_reservas_marina ,x0.vw_capitan_fragata_reservas_aviacion 
    ,x0.vw_capitan_fragata_reservas_intendencia ,x0.vw_capitan_fragata_reservas_material_de_guerra 
    ,x0.vw_capitan_fragata_reservas_sanidad_militar ,x0.vw_capitan_fragata_reservas_transmisiones 
    ,x0.vw_capitan_fragata_reservas_policia_militar ,x0.vw_teniente_coronel_reservas_infanteria 
    ,x0.vw_teniente_coronel_reservas_caballeria ,x0.vw_teniente_coronel_reservas_artilleria 
    ,x0.vw_teniente_coronel_reservas_ingenieros ,x0.vw_teniente_coronel_reservas_aviacion_piloto_aviador 
    ,x0.vw_teniente_coronel_reservas_marina ,x0.vw_teniente_coronel_reservas_aviacion 
    ,x0.vw_teniente_coronel_reservas_intendencia ,x0.vw_teniente_coronel_reservas_material_de_guerra 
    ,x0.vw_teniente_coronel_reservas_sanidad_militar ,x0.vw_teniente_coronel_reservas_transmisiones 
    ,x0.vw_teniente_coronel_reservas_policia_militar ,x0.vw_capitan_fragata_infanteria 
    ,x0.vw_capitan_fragata_caballeria ,x0.vw_capitan_fragata_artilleria 
    ,x0.vw_capitan_fragata_ingenieros ,x0.vw_capitan_fragata_aviacion_piloto_aviador 
    ,x0.vw_capitan_fragata_marina ,x0.vw_capitan_fragata_aviacion 
    ,x0.vw_capitan_fragata_intendencia ,x0.vw_capitan_fragata_material_de_guerra 
    ,x0.vw_capitan_fragata_sanidad_militar ,x0.vw_capitan_fragata_transmisiones 
    ,x0.vw_capitan_fragata_policia_militar ,x0.vw_teniente_coronel_infanteria 
    ,x0.vw_teniente_coronel_caballeria ,x0.vw_teniente_coronel_artilleria 
    ,x0.vw_teniente_coronel_ingenieros ,x0.vw_teniente_coronel_aviacion_piloto_aviador 
    ,x0.vw_teniente_coronel_marina ,x0.vw_teniente_coronel_aviacion 
    ,x0.vw_teniente_coronel_intendencia ,x0.vw_teniente_coronel_material_de_guerra 
    ,x0.vw_teniente_coronel_sanidad_militar ,x0.vw_teniente_coronel_transmisiones 
    ,x0.vw_teniente_coronel_policia_militar ,x0.vw_capitan_navio_asimilado 
    ,x0.vw_coronel_asimilado ,x0.vw_oficial_asimilado_sin_grado 
    ,x0.vw_capitan_navio_infanteria ,x0.vw_capitan_navio_caballeria 
    ,x0.vw_capitan_navio_artilleria ,x0.vw_capitan_navio_ingenieros 
    ,x0.vw_capitan_navio_aviacion_piloto_aviador ,x0.vw_capitan_navio_marina 
    ,x0.vw_capitan_navio_aviacion ,x0.vw_capitan_navio_intendencia 
    ,x0.vw_capitan_navio_material_de_guerra ,x0.vw_capitan_navio_sanidad_militar 
    ,x0.vw_capitan_navio_transmisiones ,x0.vw_capitan_navio_policia_militar 
    ,x0.vw_coronel_infanteria ,x0.vw_coronel_caballeria ,x0.vw_coronel_artilleria 
    ,x0.vw_coronel_ingenieros ,x0.vw_coronel_aviacion_piloto_aviador 
    ,x0.vw_coronel_marina ,x0.vw_coronel_aviacion ,x0.vw_coronel_intendencia 
    ,x0.vw_coronel_material_de_guerra ,x0.vw_coronel_sanidad_militar 
    ,x0.vw_coronel_transmisiones ,x0.vw_coronel_policia_militar 
    ,x0.vw_vicealmirante ,x0.vw_general_brigada ,x0.vw_almirante 
    ,x0.vw_general_division from table(function fn_plazasllenas_porgrado())x0(vw_dep_llave,
    vw_dep_desc_lg,vw_soldado_segunda_tropa_esp,vw_soldado_de_segunda,
    vw_soldado_de_segunda_dup,vw_marinero_de_tercera,vw_soldado_de_2da_especialista,
    vw_infante,vw_soldado_de_primera,vw_soldado_de_primera_tropa_esp,
    vw_marinero_de_segunda,vw_soldado_de_1ra_especialista,vw_policia_militar,
    vw_caballero_alumno,vw_caballero_cadete,vw_dama_cadete,vw_cabo,
    vw_cabo_tropa_especializada,vw_marinero_de_primera,vw_cabo_especialista,
    vw_infante_de_primera,vw_sargento_segundo,vw_sargento_segundo_tropa_esp,
    vw_contra_maestre,vw_sargento_segundo_especialista,vw_sargento_primero,
    vw_tropa_especializada,vw_sargento_primero_especialista,vw_maestre,
    vw_maestre_tecnico,vw_sargento_tecnico_especialista,vw_maestre_mayor,
    vw_sargento_mayor_especialista,vw_sargento_comandante_peloton,
    vw_especialista_sin_grado,vw_alferez_fragata_asimilado,vw_subteniente_asimilado,
    vw_alferez_fragata_retirado_infanteria,vw_alferez_fragata_retirado_caballeria,
    vw_alferez_fragata_retirado_artilleria,vw_alferez_fragata_retirado_ingenieros,
    vw_alferez_fragata_retirado_aviacion_piloto_aviador,vw_alferez_fragata_retirado_marina,
    vw_alferez_fragata_retirado_aviacion,vw_alferez_fragata_retirado_intendencia,
    vw_alferez_fragata_retirado_material_de_guerra,vw_alferez_fragata_retirado_sanidad_militar,
    vw_alferez_fragata_retirado_transmisiones,vw_alferez_fragata_retirado_policia_militar,
    vw_subteniente_de_reservas_infanteria,vw_subteniente_de_reservas_caballeria,
    vw_subteniente_de_reservas_artilleria,vw_subteniente_de_reservas_ingenieros,
    vw_subteniente_de_reservas_aviacion_piloto_aviador,vw_subteniente_de_reservas_marina,
    vw_subteniente_de_reservas_aviacion,vw_subteniente_de_reservas_intendencia,
    vw_subteniente_de_reservas_material_de_guerra,vw_subteniente_de_reservas_sanidad_militar,
    vw_subteniente_de_reservas_transmisiones,vw_subteniente_de_reservas_policia_militar,
    vw_alferez_de_fragata_infanteria,vw_alferez_de_fragata_caballeria,
    vw_alferez_de_fragata_artilleria,vw_alferez_de_fragata_ingenieros,
    vw_alferez_de_fragata_aviacion_piloto_aviador,vw_alferez_de_fragata_marina,
    vw_alferez_de_fragata_aviacion,vw_alferez_de_fragata_intendencia,
    vw_alferez_de_fragata_material_de_guerra,vw_alferez_de_fragata_sanidad_militar,
    vw_alferez_de_fragata_transmisiones,vw_alferez_de_fragata_policia_militar,
    vw_subteniente_infanteria,vw_subteniente_caballeria,vw_subteniente_artilleria,
    vw_subteniente_ingenieros,vw_subteniente_aviacion_piloto_aviador,
    vw_subteniente_marina,vw_subteniente_aviacion,vw_subteniente_intendencia,
    vw_subteniente_material_de_guerra,vw_subteniente_sanidad_militar,
    vw_subteniente_transmisiones,vw_subteniente_policia_militar,
    vw_alferez_navio_asimilado_infanteria,vw_alferez_navio_asimilado_caballeria,
    vw_alferez_navio_asimilado_artilleria,vw_alferez_navio_asimilado_ingenieros,
    vw_alferez_navio_asimilado_aviacion_piloto_aviador,vw_alferez_navio_asimilado_marina,
    vw_alferez_navio_asimilado_aviacion,vw_alferez_navio_asimilado_intendencia,
    vw_alferez_navio_asimilado_material_de_guerra,vw_alferez_navio_asimilado_sanidad_militar,
    vw_alferez_navio_asimilado_transmisiones,vw_alferez_navio_asimilado_policia_militar,
    vw_teniente_asimilado,vw_alferez_navio_de_reservas_infanteria,
    vw_alferez_navio_de_reservas_caballeria,vw_alferez_navio_de_reservas_artilleria,
    vw_alferez_navio_de_reservas_ingenieros,vw_alferez_navio_de_reservas_aviacion_piloto_aviador,
    vw_alferez_navio_de_reservas_marina,vw_alferez_navio_de_reservas_aviacion,
    vw_alferez_navio_de_reservas_intendencia,vw_alferez_navio_de_reservas_material_de_guerra,
    vw_alferez_navio_de_reservas_sanidad_militar,vw_alferez_navio_de_reservas_transmisiones,
    vw_alferez_navio_de_reservas_policia_militar,vw_teniente_de_reservas_infanteria,
    vw_teniente_de_reservas_caballeria,vw_teniente_de_reservas_artilleria,
    vw_teniente_de_reservas_ingenieros,vw_teniente_de_reservas_aviacion_piloto_aviador,
    vw_teniente_de_reservas_marina,vw_teniente_de_reservas_aviacion,
    vw_teniente_de_reservas_intendencia,vw_teniente_de_reservas_material_de_guerra,
    vw_teniente_de_reservas_sanidad_militar,vw_teniente_de_reservas_transmisiones,
    vw_teniente_de_reservas_policia_militar,vw_alferez_de_navio_infanteria,
    vw_alferez_de_navio_caballeria,vw_alferez_de_navio_artilleria,
    vw_alferez_de_navio_ingenieros,vw_alferez_de_navio_aviacion_piloto_aviador,
    vw_alferez_de_navio_marina,vw_alferez_de_navio_aviacion,vw_alferez_de_navio_intendencia,
    vw_alferez_de_navio_material_de_guerra,vw_alferez_de_navio_sanidad_militar,
    vw_alferez_de_navio_transmisiones,vw_alferez_de_navio_policia_militar,
    vw_teniente_infanteria,vw_teniente_caballeria,vw_teniente_artilleria,
    vw_teniente_ingenieros,vw_teniente_aviacion_piloto_aviador,
    vw_teniente_marina,vw_teniente_aviacion,vw_teniente_intendencia,
    vw_teniente_material_de_guerra,vw_teniente_sanidad_militar,
    vw_teniente_transmisiones,vw_teniente_policia_militar,vw_capitan_asimilado,
    vw_capitan_de_reservas_infanteria,vw_capitan_de_reservas_caballeria,
    vw_capitan_de_reservas_artilleria,vw_capitan_de_reservas_ingenieros,
    vw_capitan_de_reservas_aviacion_piloto_aviador,vw_capitan_de_reservas_marina,
    vw_capitan_de_reservas_aviacion,vw_capitan_de_reservas_intendencia,
    vw_capitan_de_reservas_material_de_guerra,vw_capitan_de_reservas_sanidad_militar,
    vw_capitan_de_reservas_transmisiones,vw_capitan_de_reservas_policia_militar,
    vw_capitan_infanteria,vw_capitan_caballeria,vw_capitan_artilleria,
    vw_capitan_ingenieros,vw_capitan_aviacion_piloto_aviador,
    vw_capitan_marina,vw_capitan_aviacion,vw_capitan_intendencia,
    vw_capitan_material_guerra,vw_capitan_sanidad_militar,vw_capitan_transmisiones,
    vw_capitan_policia_militar,vw_teniente_fragata_asimilado,
    vw_capitan_segundo_asimilado,vw_teniente_fragata_reserva_infanteria,
    vw_teniente_fragata_reserva_caballeria,vw_teniente_fragata_reserva_artilleria,
    vw_teniente_fragata_reserva_ingenieros,vw_teniente_fragata_reserva_aviacion_piloto_aviador,
    vw_teniente_fragata_reserva_marina,vw_teniente_fragata_reserva_aviacion,
    vw_teniente_fragata_reserva_intendencia,vw_teniente_fragata_reserva_material_de_guerra,
    vw_teniente_fragata_reserva_sanidad_militar,vw_teniente_fragata_reserva_transmisiones,
    vw_teniente_fragata_reserva_policia_militar,vw_capitan_segundo_reservas_infanteria,
    vw_capitan_segundo_reservas_caballeria,vw_capitan_segundo_reservas_artilleria,
    vw_capitan_segundo_reservas_ingenieros,vw_capitan_segundo_reservas_aviacion_piloto_aviador,
    vw_capitan_segundo_reservas_marina,vw_capitan_segundo_reservas_aviacion,
    vw_capitan_segundo_reservas_intendencia,vw_capitan_segundo_reservas_material_de_guerra,
    vw_capitan_segundo_reservas_sanidad_militar,vw_capitan_segundo_reservas_transmisiones,
    vw_capitan_segundo_reservas_policia_militar,vw_teniente_de_fragata_infanteria,
    vw_teniente_de_fragata_caballeria,vw_teniente_de_fragata_artilleria,
    vw_teniente_de_fragata_ingenieros,vw_teniente_de_fragata_aviacion_piloto_aviador,
    vw_teniente_de_fragata_marina,vw_teniente_de_fragata_aviacion,
    vw_teniente_de_fragata_intendencia,vw_teniente_de_fragata_material_de_guerra,
    vw_teniente_de_fragata_sanidad_militar,vw_teniente_de_fragata_transmisiones,
    vw_teniente_de_fragata_policia_militar,vw_capitan_segundo_infanteria,
    vw_capitan_segundo_caballeria,vw_capitan_segundo_artilleria,
    vw_capitan_segundo_ingenieros,vw_capitan_segundo_aviacion_piloto_aviador,
    vw_capitan_segundo_marina,vw_capitan_segundo_aviacion,vw_capitan_segundo_intendencia,
    vw_capitan_segundo_material_de_guerra,vw_capitan_segundo_sanidad_militar,
    vw_capitan_segundo_transmisiones,vw_capitan_segundo_policia_militar,
    vw_teniente_navio_asimilado,vw_capitan_primero_asimilado_infanteria,
    vw_teniente_navio_reservas_infanteria,vw_teniente_navio_reservas_caballeria,
    vw_teniente_navio_reservas_artilleria,vw_teniente_navio_reservas_ingenieros,
    vw_teniente_navio_reservas_aviacion_piloto_aviador,vw_teniente_navio_reservas_marina,
    vw_teniente_navio_reservas_aviacion,vw_teniente_navio_reservas_intendencia,
    vw_teniente_navio_reservas_material_de_guerra,vw_teniente_navio_reservas_sanidad_militar,
    vw_teniente_navio_reservas_transmisiones,vw_teniente_navio_reservas_policia_militar,
    vw_capitan_primero_reservas_infanteria,vw_capitan_primero_reservas_caballeria,
    vw_capitan_primero_reservas_artilleria,vw_capitan_primero_reservas_ingenieros,
    vw_capitan_primero_reservas_aviacion_piloto_aviador,vw_capitan_primero_reservas_marina,
    vw_capitan_primero_reservas_aviacion,vw_capitan_primero_reservas_intendencia,
    vw_capitan_primero_reservas_material_de_guerra,vw_capitan_primero_reservas_sanidad_militar,
    vw_capitan_primero_reservas_transmisiones,vw_capitan_primero_reservas_policia_militar,
    vw_teniente_de_navio_infanteria,vw_teniente_de_navio_caballeria,
    vw_teniente_de_navio_artilleria,vw_teniente_de_navio_ingenieros,
    vw_teniente_de_navio_aviacion_piloto_aviador,vw_teniente_de_navio_marina,
    vw_teniente_de_navio_aviacion,vw_teniente_de_navio_intendencia,
    vw_teniente_de_navio_material_de_guerra,vw_teniente_de_navio_sanidad_militar,
    vw_teniente_de_navio_transmisiones,vw_teniente_de_navio_policia_militar,
    vw_capitan_primero_infanteria,vw_capitan_primero_caballeria,
    vw_capitan_primero_artilleria,vw_capitan_primero_ingenieros,
    vw_capitan_primero_aviacion_piloto_aviador,vw_capitan_primero_marina,
    vw_capitan_primero_aviacion,vw_capitan_primero_intendencia,
    vw_capitan_primero_material_de_guerra,vw_capitan_primero_sanidad_militar,
    vw_capitan_primero_transmisiones,vw_capitan_primero_policia_militar,
    vw_capitan_corbeta_asimilado,vw_mayor_asimilado_infanteria,
    vw_mayor_asimilado_caballeria,vw_mayor_asimilado_artilleria,
    vw_mayor_asimilado_ingenieros,vw_mayor_asimilado_aviacion_piloto_aviador,
    vw_mayor_asimilado_marina,vw_mayor_asimilado_aviacion,vw_mayor_asimilado_intendencia,
    vw_mayor_asimilado_material_de_guerra,vw_mayor_asimilado_sanidad_militar,
    vw_mayor_asimilado_transmisiones,vw_mayor_asimilado_policia_militar,
    vw_capitan_corbeta_reservas_infanteria,vw_capitan_corbeta_reservas_caballeria,
    vw_capitan_corbeta_reservas_artilleria,vw_capitan_corbeta_reservas_ingenieros,
    vw_capitan_corbeta_reservas_aviacion_piloto_aviador,vw_capitan_corbeta_reservas_marina,
    vw_capitan_corbeta_reservas_aviacion,vw_capitan_corbeta_reservas_intendencia,
    vw_capitan_corbeta_reservas_material_de_guerra,vw_capitan_corbeta_reservas_sanidad_militar,
    vw_capitan_corbeta_reservas_transmisiones,vw_capitan_corbeta_reservas_policia_militar,
    vw_mayor_reservas_infanteria,vw_mayor_reservas_caballeria,
    vw_mayor_reservas_artilleria,vw_mayor_reservas_ingenieros,
    vw_mayor_reservas_aviacion_piloto_aviador,vw_mayor_reservas_marina,
    vw_mayor_reservas_aviacion,vw_mayor_reservas_intendencia,
    vw_mayor_reservas_material_de_guerra,vw_mayor_reservas_sanidad_militar,
    vw_mayor_reservas_transmisiones,vw_mayor_reservas_policia_militar,
    vw_capitan_de_corbeta_infanteria,vw_capitan_de_corbeta_caballeria,
    vw_capitan_de_corbeta_artilleria,vw_capitan_de_corbeta_ingenieros,
    vw_capitan_de_corbeta_aviacion_piloto_aviador,vw_capitan_de_corbeta_marina,
    vw_capitan_de_corbeta_aviacion,vw_capitan_de_corbeta_intendencia,
    vw_capitan_de_corbeta_material_de_guerra,vw_capitan_de_corbeta_sanidad_militar,
    vw_capitan_de_corbeta_transmisiones,vw_capitan_de_corbeta_policia_militar,
    vw_mayor_infanteria,vw_mayor_caballeria,vw_mayor_artilleria,
    vw_mayor_ingenieros,vw_mayor_aviacion_piloto_aviador,vw_mayor_marina,
    vw_mayor_aviacion,vw_mayor_intendencia,vw_mayor_material_de_guerra,
    vw_mayor_sanidad_militar,vw_mayor_transmisiones,vw_mayor_policia_militar,
    vw_capitan_fragata_asimilado,vw_teniente_coronel_asimilado,
    vw_capitan_fragata_reservas_infanteria,vw_capitan_fragata_reservas_caballeria,
    vw_capitan_fragata_reservas_artilleria,vw_capitan_fragata_reservas_ingenieros,
    vw_capitan_fragata_reservas_aviacion_piloto_aviador,vw_capitan_fragata_reservas_marina,
    vw_capitan_fragata_reservas_aviacion,vw_capitan_fragata_reservas_intendencia,
    vw_capitan_fragata_reservas_material_de_guerra,vw_capitan_fragata_reservas_sanidad_militar,
    vw_capitan_fragata_reservas_transmisiones,vw_capitan_fragata_reservas_policia_militar,
    vw_teniente_coronel_reservas_infanteria,vw_teniente_coronel_reservas_caballeria,
    vw_teniente_coronel_reservas_artilleria,vw_teniente_coronel_reservas_ingenieros,
    vw_teniente_coronel_reservas_aviacion_piloto_aviador,vw_teniente_coronel_reservas_marina,
    vw_teniente_coronel_reservas_aviacion,vw_teniente_coronel_reservas_intendencia,
    vw_teniente_coronel_reservas_material_de_guerra,vw_teniente_coronel_reservas_sanidad_militar,
    vw_teniente_coronel_reservas_transmisiones,vw_teniente_coronel_reservas_policia_militar,
    vw_capitan_fragata_infanteria,vw_capitan_fragata_caballeria,
    vw_capitan_fragata_artilleria,vw_capitan_fragata_ingenieros,
    vw_capitan_fragata_aviacion_piloto_aviador,vw_capitan_fragata_marina,
    vw_capitan_fragata_aviacion,vw_capitan_fragata_intendencia,
    vw_capitan_fragata_material_de_guerra,vw_capitan_fragata_sanidad_militar,
    vw_capitan_fragata_transmisiones,vw_capitan_fragata_policia_militar,
    vw_teniente_coronel_infanteria,vw_teniente_coronel_caballeria,
    vw_teniente_coronel_artilleria,vw_teniente_coronel_ingenieros,
    vw_teniente_coronel_aviacion_piloto_aviador,vw_teniente_coronel_marina,
    vw_teniente_coronel_aviacion,vw_teniente_coronel_intendencia,
    vw_teniente_coronel_material_de_guerra,vw_teniente_coronel_sanidad_militar,
    vw_teniente_coronel_transmisiones,vw_teniente_coronel_policia_militar,
    vw_capitan_navio_asimilado,vw_coronel_asimilado,vw_oficial_asimilado_sin_grado,
    vw_capitan_navio_infanteria,vw_capitan_navio_caballeria,vw_capitan_navio_artilleria,
    vw_capitan_navio_ingenieros,vw_capitan_navio_aviacion_piloto_aviador,
    vw_capitan_navio_marina,vw_capitan_navio_aviacion,vw_capitan_navio_intendencia,
    vw_capitan_navio_material_de_guerra,vw_capitan_navio_sanidad_militar,
    vw_capitan_navio_transmisiones,vw_capitan_navio_policia_militar,
    vw_coronel_infanteria,vw_coronel_caballeria,vw_coronel_artilleria,
    vw_coronel_ingenieros,vw_coronel_aviacion_piloto_aviador,
    vw_coronel_marina,vw_coronel_aviacion,vw_coronel_intendencia,
    vw_coronel_material_de_guerra,vw_coronel_sanidad_militar,
    vw_coronel_transmisiones,vw_coronel_policia_militar,vw_vicealmirante,
    vw_general_brigada,vw_almirante,vw_general_division);    
                                                             
       
create view vw_plazasvacantes_porgrado (vw_dep_llave,vw_dep_desc_lg,vw_soldado_segunda_tropa_esp,vw_soldado_de_segunda,vw_soldado_de_segunda_dup,vw_marinero_de_tercera,vw_soldado_de_2da_especialista,vw_infante,vw_soldado_de_primera,vw_soldado_de_primera_tropa_esp,vw_marinero_de_segunda,vw_soldado_de_1ra_especialista,vw_policia_militar,vw_caballero_alumno,vw_caballero_cadete,vw_dama_cadete,vw_cabo,vw_cabo_tropa_especializada,vw_marinero_de_primera,vw_cabo_especialista,vw_infante_de_primera,vw_sargento_segundo,vw_sargento_segundo_tropa_esp,vw_contra_maestre,vw_sargento_segundo_especialista,vw_sargento_primero,vw_tropa_especializada,vw_sargento_primero_especialista,vw_maestre,vw_maestre_tecnico,vw_sargento_tecnico_especialista,vw_maestre_mayor,vw_sargento_mayor_especialista,vw_sargento_comandante_peloton,vw_especialista_sin_grado,vw_alferez_fragata_asimilado,vw_subteniente_asimilado,vw_alferez_fragata_retirado,vw_subteniente_de_reservas,vw_alferez_de_fragata,vw_subteniente,vw_alferez_navio_asimilado,vw_teniente_asimilado,vw_alferez_navio_de_reservas,vw_teniente_de_reservas,vw_alferez_de_navio,vw_teniente,vw_capitan_asimilado,vw_capitan_de_reservas,vw_capitan,vw_teniente_fragata_asimilado,vw_capitan_segundo_asimilado,vw_teniente_fragata_reserva,vw_capitan_segundo_reservas,vw_teniente_de_fragata,vw_capitan_segundo,vw_teniente_navio_asimilado,vw_capitan_primero_asimilado,vw_teniente_navio_reservas,vw_capitan_primero_reservas,vw_teniente_de_navio,vw_capitan_primero,vw_capitan_corbeta_asimilado,vw_mayor_asimilado,vw_capitan_corbeta_reservas,vw_mayor_reservas,vw_capitan_de_corbeta,vw_mayor,vw_capitan_fragata_asimilado,vw_teniente_coronel_asimilado,vw_capitan_fragata_reservas,vw_teniente_coronel_reservas,vw_capitan_fragata,vw_teniente_coronel,vw_capitan_navio_asimilado,vw_coronel_asimilado,vw_oficial_asimilado_singrado,vw_capitan_navio,vw_coronel,vw_vice_almirante,vw_general_brigada,vw_almirante,vw_general_de_division,vw_oficial_singrado) as 
  select x0.vw_dep_llave ,x0.vw_dep_desc_lg ,x0.vw_soldado_segunda_tropa_esp 
    ,x0.vw_soldado_de_segunda ,x0.vw_soldado_de_segunda_dup ,
    x0.vw_marinero_de_tercera ,x0.vw_soldado_de_2da_especialista 
    ,x0.vw_infante ,x0.vw_soldado_de_primera ,x0.vw_soldado_de_primera_tropa_esp 
    ,x0.vw_marinero_de_segunda ,x0.vw_soldado_de_1ra_especialista 
    ,x0.vw_policia_militar ,x0.vw_caballero_alumno ,x0.vw_caballero_cadete 
    ,x0.vw_dama_cadete ,x0.vw_cabo ,x0.vw_cabo_tropa_especializada 
    ,x0.vw_marinero_de_primera ,x0.vw_cabo_especialista ,x0.vw_infante_de_primera 
    ,x0.vw_sargento_segundo ,x0.vw_sargento_segundo_tropa_esp 
    ,x0.vw_contra_maestre ,x0.vw_sargento_segundo_especialista 
    ,x0.vw_sargento_primero ,x0.vw_tropa_especializada ,x0.vw_sargento_primero_especialista 
    ,x0.vw_maestre ,x0.vw_maestre_tecnico ,x0.vw_sargento_tecnico_especialista 
    ,x0.vw_maestre_mayor ,x0.vw_sargento_mayor_especialista ,
    x0.vw_sargento_comandante_peloton ,x0.vw_especialista_sin_grado 
    ,x0.vw_alferez_fragata_asimilado ,x0.vw_subteniente_asimilado 
    ,x0.vw_alferez_fragata_retirado ,x0.vw_subteniente_de_reservas 
    ,x0.vw_alferez_de_fragata ,x0.vw_subteniente ,x0.vw_alferez_navio_asimilado 
    ,x0.vw_teniente_asimilado ,x0.vw_alferez_navio_de_reservas 
    ,x0.vw_teniente_de_reservas ,x0.vw_alferez_de_navio ,x0.vw_teniente 
    ,x0.vw_capitan_asimilado ,x0.vw_capitan_de_reservas ,x0.vw_capitan 
    ,x0.vw_teniente_fragata_asimilado ,x0.vw_capitan_segundo_asimilado 
    ,x0.vw_teniente_fragata_reserva ,x0.vw_capitan_segundo_reservas 
    ,x0.vw_teniente_de_fragata ,x0.vw_capitan_segundo ,x0.vw_teniente_navio_asimilado 
    ,x0.vw_capitan_primero_asimilado ,x0.vw_teniente_navio_reservas 
    ,x0.vw_capitan_primero_reservas ,x0.vw_teniente_de_navio 
    ,x0.vw_capitan_primero ,x0.vw_capitan_corbeta_asimilado ,
    x0.vw_mayor_asimilado ,x0.vw_capitan_corbeta_reservas ,x0.vw_mayor_reservas 
    ,x0.vw_capitan_de_corbeta ,x0.vw_mayor ,x0.vw_capitan_fragata_asimilado 
    ,x0.vw_teniente_coronel_asimilado ,x0.vw_capitan_fragata_reservas 
    ,x0.vw_teniente_coronel_reservas ,x0.vw_capitan_fragata ,
    x0.vw_teniente_coronel ,x0.vw_capitan_navio_asimilado ,x0.vw_coronel_asimilado 
    ,x0.vw_oficial_asimilado_singrado ,x0.vw_capitan_navio ,x0.vw_coronel 
    ,x0.vw_vice_almirante ,x0.vw_general_brigada ,x0.vw_almirante 
    ,x0.vw_general_de_division ,x0.vw_oficial_singrado from table(function 
    fn_plazasvacantes_porgrado())x0(vw_dep_llave,vw_dep_desc_lg,
    vw_soldado_segunda_tropa_esp,vw_soldado_de_segunda,vw_soldado_de_segunda_dup,
    vw_marinero_de_tercera,vw_soldado_de_2da_especialista,vw_infante,
    vw_soldado_de_primera,vw_soldado_de_primera_tropa_esp,vw_marinero_de_segunda,
    vw_soldado_de_1ra_especialista,vw_policia_militar,vw_caballero_alumno,
    vw_caballero_cadete,vw_dama_cadete,vw_cabo,vw_cabo_tropa_especializada,
    vw_marinero_de_primera,vw_cabo_especialista,vw_infante_de_primera,
    vw_sargento_segundo,vw_sargento_segundo_tropa_esp,vw_contra_maestre,
    vw_sargento_segundo_especialista,vw_sargento_primero,vw_tropa_especializada,
    vw_sargento_primero_especialista,vw_maestre,vw_maestre_tecnico,
    vw_sargento_tecnico_especialista,vw_maestre_mayor,vw_sargento_mayor_especialista,
    vw_sargento_comandante_peloton,vw_especialista_sin_grado,
    vw_alferez_fragata_asimilado,vw_subteniente_asimilado,vw_alferez_fragata_retirado,
    vw_subteniente_de_reservas,vw_alferez_de_fragata,vw_subteniente,
    vw_alferez_navio_asimilado,vw_teniente_asimilado,vw_alferez_navio_de_reservas,
    vw_teniente_de_reservas,vw_alferez_de_navio,vw_teniente,vw_capitan_asimilado,
    vw_capitan_de_reservas,vw_capitan,vw_teniente_fragata_asimilado,
    vw_capitan_segundo_asimilado,vw_teniente_fragata_reserva,
    vw_capitan_segundo_reservas,vw_teniente_de_fragata,vw_capitan_segundo,
    vw_teniente_navio_asimilado,vw_capitan_primero_asimilado,
    vw_teniente_navio_reservas,vw_capitan_primero_reservas,vw_teniente_de_navio,
    vw_capitan_primero,vw_capitan_corbeta_asimilado,vw_mayor_asimilado,
    vw_capitan_corbeta_reservas,vw_mayor_reservas,vw_capitan_de_corbeta,
    vw_mayor,vw_capitan_fragata_asimilado,vw_teniente_coronel_asimilado,
    vw_capitan_fragata_reservas,vw_teniente_coronel_reservas,
    vw_capitan_fragata,vw_teniente_coronel,vw_capitan_navio_asimilado,
    vw_coronel_asimilado,vw_oficial_asimilado_singrado,vw_capitan_navio,
    vw_coronel,vw_vice_almirante,vw_general_brigada,vw_almirante,
    vw_general_de_division,vw_oficial_singrado);             
                                                             
                                                             
                                                             
    

create index id_clase on grados (gra_clase) using btree ;
create unique index sysmenidx on sysmenus (menuname) using btree 
    ;
create unique index meniidx on sysmenuitems (imenuname,itemnum) 
    using btree ;
create index id_pcdtabl_pro_li on pcdtablr (prodid,line_no) 
    using btree ;
create index i1cgdcolmr on cgdcolmr (tabname,colname,language) 
    using btree ;
create index i1cgdtablr on cgdtablr (tabname,language) using 
    btree ;
create index i1cgmcmndd on cgmcmndd (m_name,m_order) using btree 
    ;
create index i1cgmcmndr on cgmcmndr (m_name,m_order) using btree 
    ;
create index i1cgmmenud on cgmmenud (module,prog,scrid) using 
    btree ;
create index i1cgrrimgd on cgrrimgd (rptname,image_name,language,
    line_no) using btree ;
create index i1cgsscrnr on cgsscrnr (module,prog,scrid) using 
    btree ;
create index i1cgxsorcd on cgxsorcd (module,prog,scrid,src_code) 
    using btree ;
create index i1stxacknd on stxacknd (ack_module,ack_program) 
    using btree ;
create unique index i1stxactnr on stxactnr (language,act_key) 
    using btree ;
create unique index i1stxaddld on stxaddld (filename,record_key,
    line_no) using btree ;
create index i1stxaddlr on stxaddlr (filename) using btree ;
    
create index i1stxerord on stxerord (err_module,err_program,
    err_number,a_b,line_no) using btree ;
create index i1stxerorh on stxerorh (err_module,err_program,
    err_number) using btree ;
create index i1stxfuncr on stxfuncr (module,progname,funcname) 
    using btree ;
create index i2stxfuncr on stxfuncr (funcname desc,progname 
    desc,module desc) using btree ;
create index i1stxgropd on stxgropd (group_id,user_id) using 
    btree ;
create index i1stxhelpd on stxhelpd (hlp_module,hlp_program,
    hlp_number,line_no) using btree ;
create unique index i1stxhotkd on stxhotkd (hot_module,hot_program,
    hot_key,hot_user) using btree ;
create unique index i1stxkeysr on stxkeysr (key_code) using 
    btree ;
create index i1stxlangr on stxlangr (language,tr_tab_col,tr_context) 
    using btree ;
create unique cluster index i1stxmssgr on stxmssgr (language,
    mssg_module,mssg_program,mssg_number) using btree ;
create index i1stxnoted on stxnoted (filename,record_key) using 
    btree ;
create unique index i1stxnvgtd on stxnvgtd (nav_module,nav_program,
    act_key,nav_user) using btree ;
create index i1stxparmd on stxparmd (module,access_key) using 
    btree ;
create unique index i1stxpermr on stxpermr (user_id) using btree 
    ;
create index i1stxprogr on stxprogr (module,progname) using 
    btree ;
create index i1stxsecud on stxsecud (user_id,module,progname,
    funcname) using btree ;
create index i2stxsecud on stxsecud (user_id,funcname desc,progname 
    desc,module desc) using btree ;
create unique index i1stxtodod on stxtodod (todo_user,line_no) 
    using btree ;
create unique index i1stxtxtdd on stxtxtdd (txt_key,line_no) 
    using btree ;
create index i1cgsblobr on cgsblobr (module,prog,scrid,input_num) 
    using btree ;
create index i1cgsclipr on cgsclipr (clipname) using btree ;
    
create index i1cgscmdsd on cgscmdsd (cmd_id,line_no) using btree 
    ;
create index i1cgscmdsr on cgscmdsr (module,prog,cust_key,filename) 
    using btree ;
create index i2cgscmdsr on cgscmdsr (module,prog,cust_key,src_file) 
    using btree ;
create index i1cgsdpndd on cgsdpndd (prog,module,scrid) using 
    btree ;
create index i1cgsimged on cgsimged (module,prog,scrid) using 
    btree ;
create index i1cgsinptr on cgsinptr (module,prog,scrid,input_num) 
    using btree ;
create index i1cgsstypr on cgsstypr (set_key) using btree ;
create index i1cgstrigr on cgstrigr (trig_def) using btree ;
    
create index i2cgstrigr on cgstrigr (trig_code) using btree 
    ;
create index i1cgszoomr on cgszoomr (module,prog,scrid,cust_key) 
    using btree ;
create index i1cgxfnamr on cgxfnamr (set_key,func_key) using 
    btree ;
create index i1cgxfsetd on cgxfsetd (set_key,func_key) using 
    btree ;
create index i1cgxlkupr on cgxlkupr (module,prog,scrid,cust_key) 
    using btree ;
create index i1cgxlntod on cgxlntod (module,prog,scrid,cust_key) 
    using btree ;
create index i1cgxmathr on cgxmathr (module,prog,scrid,cust_key) 
    using btree ;
create index tipm_fact01idx on ipm_fact (fact_catalogo,fact_cod_descuento) 
    using btree ;
create unique index ix852_1 on pbienal (catalogo) using btree 
    ;
create index i1cgstrigd on cgstrigd (module,prog,scrid,input_num,
    trig_code,arg_one) using btree ;
create index ipartidas1 on partidas (par_clase,par_fecha,par_depen) 
    using btree ;
create index inoestan1 on noestan (noe_catalogo) using btree 
    ;
create unique index ix1036_1 on fmasi (mas_codigo) using btree 
    ;
create unique index ix1037_1 on fmdes (mde_codigo) using btree 
    ;
create index sysvcomp on syscolval (tabname,colname) using btree 
    ;
create index sysvtabname on syscolval (tabname) using btree 
    ;
create index i1cgsifldd on cgsifldd (module,prog,scrid,input_num) 
    using btree ;
create index i2cgsifldd on cgsifldd (tabname,fldname) using 
    btree ;
create index id_per_usu on permisos (perm_usuario) using btree 
    ;
create index id_nopa_cata on nopagados (catalogo) using btree 
    ;
create index tpvcat on tropa_pv (tpv_catalogo) using btree ;
    
create unique index tcuentas_01idx on cuentas (cta_catalogo,
    cta_numero) using btree ;
create index audis_mftro on aud_mftro (hora) using btree ;
create index audis_mfsue_et on aud_mfsue_et (hora) using btree 
    ;
create index id_process_cin on process (cinta_process) using 
    btree ;
create index id_process_host on process (host_process) using 
    btree ;
create unique index ix1006_1 on process (cod_process) using 
    btree ;
create index idaguiagui on agui (agui_aguinaldo) using btree 
    ;
create index idaguimes on agui (agui_meses) using btree ;
create index id_dfam_cat on dfam (fam_cat_familiar) using btree 
    ;
create index audis_ubica_cerra on aud_ubica_cerra (hora) using 
    btree ;
create index audis_permorga on aud_permorga (hora) using btree 
    ;
create index idabono14 on bono14 (b14_meses) using btree ;
create index idagbono14 on bono14 (b14_cantidad) using btree 
    ;
create index audis_doc_pendientes on aud_doc_pendientes (hora) 
    using btree ;
create index audis_mftror on aud_mftror (hora) using btree ;
    
create index audis_meomeop on aud_meomeop (hora) using btree 
    ;
create index audis_tropabajas on aud_tropabajas (hora) using 
    btree ;
create index audis_doc_cerrados on aud_doc_cerrados (hora) using 
    btree ;
create index audis_dcur on aud_dcur (hora) using btree ;
create unique index ix1578_1 on usuariosnt (catalogo) using 
    btree ;
create index audis_dpue on aud_dpue (hora) using btree ;
create index index_pord on permorden (pero_usuario) using btree 
    ;
create index ida on hfdes1 (hfd_catalogo,hfd_fecha) using btree 
    ;
create index idj on hfdes1 (hfd_fecha) using btree ;
create index ihfdes6 on hfdes1 (hfd_catalogo,hfd_fecha,hfd_mensual,
    hfd_codigo) using btree ;
create index idhfafeccod on hfasigc (hfa_fecha,hfa_codigo) using 
    btree ;
create index inlicdep on dlicen (lic_depen) using btree ;
create index inlicgra on dlicen (lic_grado) using btree ;
create index inlicsit on dlicen (lic_situacion) using btree 
    ;
create index audis_asamblea on aud_asamblea (hora) using btree 
    ;
create index audis_asig_cat on aud_asig_cat (hora) using btree 
    ;
create index audis_asig_plaza on aud_asig_plaza (hora) using 
    btree ;
create index audis_categorias on aud_categorias (hora) using 
    btree ;
create index audis_cmm_rebajados on aud_cmm_rebajados (hora) 
    using btree ;
create index audis_depmun on aud_depmun (hora) using btree ;
    
create index audis_des_no_efec on aud_des_no_efec (hora) using 
    btree ;
create index audis_descripciones on aud_descripciones (hora) 
    using btree ;
create index audis_eva_detalle on aud_eva_detalle (hora) using 
    btree ;
create index audis_disr on aud_disr (hora) using btree ;
create index audis_insp_nueva on aud_insp_nueva (hora) using 
    btree ;
create index audis_insp_situacion on aud_insp_situacion (hora) 
    using btree ;
create index audis_insp_estado on aud_insp_estado (hora) using 
    btree ;
create index audis_insp_tipos on aud_insp_tipos (hora) using 
    btree ;
create index audis_insp_anotaciones on aud_insp_anotaciones 
    (hora) using btree ;
create index audis_insp_ianota on aud_insp_ianota (hora) using 
    btree ;
create index audis_cc_divisiones on aud_cc_divisiones (hora) 
    using btree ;
create index audis_cc_problemas on aud_cc_problemas (hora) using 
    btree ;
create index audis_cc_situaciones on aud_cc_situaciones (hora) 
    using btree ;
create index audis_cc_tip_requerimiento on aud_cc_tip_requerimiento 
    (hora) using btree ;
create index audis_dfdes_inv on aud_dfdes_inv (hora) using btree 
    ;
create index audis_dfdes_invt on aud_dfdes_invt (hora) using 
    btree ;
create index audis_dfdes_ipm on aud_dfdes_ipm (hora) using btree 
    ;
create index audis_accesos on aud_accesos (hora) using btree 
    ;
create index audis_chunk on aud_chunk (hora) using btree ;
create index audis_cla_cond on aud_cla_cond (hora) using btree 
    ;
create index audis_empresas on aud_empresas (hora) using btree 
    ;
create index audis_fbitacora on aud_fbitacora (hora) using btree 
    ;
create index audis_fmasi on aud_fmasi (hora) using btree ;
create index audis_fmdes on aud_fmdes (hora) using btree ;
create index audis_fnosalta on aud_fnosalta (hora) using btree 
    ;
create index audis_fuerza on aud_fuerza (hora) using btree ;
    
create index audis_hdareal on aud_hdareal (hora) using btree 
    ;
create index audis_hist_rep on aud_hist_rep (hora) using btree 
    ;
create index audis_indice_dau on aud_indice_dau (hora) using 
    btree ;
create index audis_insp_observaciones on aud_insp_observaciones 
    (hora) using btree ;
create index audis_lsm_equipo on aud_lsm_equipo (hora) using 
    btree ;
create index audis_lsm_marca on aud_lsm_marca (hora) using btree 
    ;
create index audis_maestro on aud_maestro (hora) using btree 
    ;
create index audis_mcols on aud_mcols (hora) using btree ;
create index audis_mlins on aud_mlins (hora) using btree ;
create index audis_mnums on aud_mnums (hora) using btree ;
create index audis_mreps on aud_mreps (hora) using btree ;
create index audis_rh_aspecto on aud_rh_aspecto (hora) using 
    btree ;
create index audis_rh_categoria on aud_rh_categoria (hora) using 
    btree ;
create index audis_rh_det_evaluacion on aud_rh_det_evaluacion 
    (hora) using btree ;
create index audis_rh_evaluacion on aud_rh_evaluacion (hora) 
    using btree ;
create index audis_rh_tipo_aspecto on aud_rh_tipo_aspecto (hora) 
    using btree ;
create index audis_noestan on aud_noestan (hora) using btree 
    ;
create index audis_nopagados on aud_nopagados (hora) using btree 
    ;
create index audis_orden_h on aud_orden_h (hora) using btree 
    ;
create index audis_pdinero on aud_pdinero (hora) using btree 
    ;
create index audis_permorden on aud_permorden (hora) using btree 
    ;
create index audis_process on aud_process (hora) using btree 
    ;
create index audis_retencion on aud_retencion (hora) using btree 
    ;
create index audis_sinefecto on aud_sinefecto (hora) using btree 
    ;
create index audis_sistemas on aud_sistemas (hora) using btree 
    ;
create index audis_sitrasla on aud_sitrasla (hora) using btree 
    ;
create index audis_t_org on aud_t_org (hora) using btree ;
create index audis_tablas on aud_tablas (hora) using btree ;
    
create index audis_tconec on aud_tconec (hora) using btree ;
    
create index audis_tauth on aud_tauth (hora) using btree ;
create index audis_telefonos on aud_telefonos (hora) using btree 
    ;
create index audis_tempdpue on aud_tempdpue (hora) using btree 
    ;
create index audis_tr_armas on aud_tr_armas (hora) using btree 
    ;
create index audis_tusuar on aud_tusuar (hora) using btree ;
    
create index audis_usuarios on aud_usuarios (hora) using btree 
    ;
create index audis_usuarios_sistema on aud_usuarios_sistema 
    (hora) using btree ;
create index audis_usuariosnt on aud_usuariosnt (hora) using 
    btree ;
create index audis_usumenu on aud_usumenu (hora) using btree 
    ;
create index audis_cc_mticket on aud_cc_mticket (hora) using 
    btree ;
create index audis_cc_dticket on aud_cc_dticket (hora) using 
    btree ;
create index audis_insp_inmuebles on aud_insp_inmuebles (hora) 
    using btree ;
create index audis_c_proposito on aud_c_proposito (hora) using 
    btree ;
create index audis_c_empresas on aud_c_empresas (hora) using 
    btree ;
create index audis_c_oficinas on aud_c_oficinas (hora) using 
    btree ;
create index audis_c_tipo_docum on aud_c_tipo_docum (hora) using 
    btree ;
create index audis_c_corr_seg on aud_c_corr_seg (hora) using 
    btree ;
create index audis_pcdtablr on aud_pcdtablr (hora) using btree 
    ;
create index audis_armas on aud_armas (hora) using btree ;
create index audis_asignaciones on aud_asignaciones (hora) using 
    btree ;
create index audis_banderas on aud_banderas (hora) using btree 
    ;
create index audis_cond on aud_cond (hora) using btree ;
create index audis_cursos on aud_cursos (hora) using btree ;
    
create index audis_dep_mun on aud_dep_mun (hora) using btree 
    ;
create index audis_descuentos on aud_descuentos (hora) using 
    btree ;
create index audis_dlicen on aud_dlicen (hora) using btree ;
    
create index audis_escuelas on aud_escuelas (hora) using btree 
    ;
create index audis_evaluacion on aud_evaluacion (hora) using 
    btree ;
create index audis_grados on aud_grados (hora) using btree ;
    
create index audis_marginado on aud_marginado (hora) using btree 
    ;
create index audis_mdep on aud_mdep (hora) using btree ;
create index audis_menu_det on aud_menu_det (hora) using btree 
    ;
create index audis_menu_master on aud_menu_master (hora) using 
    btree ;
create index audis_menus on aud_menus (hora) using btree ;
create index audis_meom on aud_meom (hora) using btree ;
create index audis_meop on aud_meop (hora) using btree ;
create index audis_mfdep on aud_mfdep (hora) using btree ;
create index audis_mfsub on aud_mfsub (hora) using btree ;
create index audis_mfsue_e on aud_mfsue_e (hora) using btree 
    ;
create index audis_mfsue_o on aud_mfsue_o (hora) using btree 
    ;
create index audis_oficina on aud_oficina (hora) using btree 
    ;
create index audis_paises on aud_paises (hora) using btree ;
    
create index audis_parentescos on aud_parentescos (hora) using 
    btree ;
create index audis_pbienal on aud_pbienal (hora) using btree 
    ;
create index audis_permisos on aud_permisos (hora) using btree 
    ;
create index audis_permper on aud_permper (hora) using btree 
    ;
create index audis_permtropa on aud_permtropa (hora) using btree 
    ;
create index audis_situaciones on aud_situaciones (hora) using 
    btree ;
create index audis_tipo_docum on aud_tipo_docum (hora) using 
    btree ;
create index audis_tropa_pv on aud_tropa_pv (hora) using btree 
    ;
create index audis_tropa_sp on aud_tropa_sp (hora) using btree 
    ;
create index audis_tsan on aud_tsan (hora) using btree ;
create index audis_jefes on aud_jefes (hora) using btree ;
create index audis_corr_seg on aud_corr_seg (hora) using btree 
    ;
create index audis_sand on aud_sand (hora) using btree ;
create index audis_r_programas on aud_r_programas (hora) using 
    btree ;
create index audis_r_papel on aud_r_papel (hora) using btree 
    ;
create index audis_r_det_requerimientos on aud_r_det_requerimientos 
    (hora) using btree ;
create index audis_f_hreal on aud_f_hreal (hora) using btree 
    ;
create index audis_r_requerimientos on aud_r_requerimientos 
    (hora) using btree ;
create index audis_vocales on aud_vocales (hora) using btree 
    ;
create index id_c_codigo on c_control (c_codigo) using btree 
    ;
create index audis_usu_opera on aud_usu_opera (hora) using btree 
    ;
create index audis_opera_menu on aud_opera_menu (hora) using 
    btree ;
create index audis_co_mper on aud_co_mper (hora) using btree 
    ;
create index audis_sysmenus on aud_sysmenus (hora) using btree 
    ;
create index audis_diagnosticos on aud_diagnosticos (hora) using 
    btree ;
create index audis_ingreso on aud_ingreso (hora) using btree 
    ;
create index audis_busqueda on aud_busqueda (hora) using btree 
    ;
create index audis_documento on aud_documento (hora) using btree 
    ;
create index audis_ubica_docum on aud_ubica_docum (hora) using 
    btree ;
create index audis_msan on aud_msan (hora) using btree ;
create index audis_f_hfag on aud_f_hfag (hora) using btree ;
    
create index hfasig02idx on hfasig (hfa_grupo,hfa_depen,hfa_unidad,
    hfa_clase,hfa_grado) using btree ;
create index idhfacatfecpla on hfasig (hfa_catalogo,hfa_fecha,
    hfa_plaza) using btree ;
create index idhfadpfecpla on hfasig (hfa_depen,hfa_fecha,hfa_plaza) 
    using btree ;
create index idhfafec on hfasig (hfa_fecha) using btree ;
create index idhfafechfpla on hfasig (hfa_fecha,hfa_plaza) using 
    btree ;
create index idhfagru on hfasig (hfa_grupo) using btree ;
create index idhfapla on hfasig (hfa_plaza) using btree ;
create index idhfaunid on hfasig (hfa_unidad) using btree ;
create index id_hf_corr on hfdes (hfd_corrida) using btree ;
    
create index id_hfd_cat_fe on hfdes (hfd_catalogo,hfd_fecha) 
    using btree ;
create index id_hfd_cat_fe_co on hfdes (hfd_catalogo,hfd_fecha,
    hfd_codigo) using btree ;
create index id_hfd_cod_hfdva on hfdes (hfd_codigo,hfd_varios) 
    using btree ;
create index id_hfd_fec on hfdes (hfd_fecha) using btree ;
create index thfdes_01idx on hfdes (hfd_catalogo,hfd_codigo) 
    using btree ;
create index audis_f_bac on aud_f_bac (hora) using btree ;
create index audis_f_amt on aud_f_amt (hora) using btree ;
create index audis_icombus on aud_icombus (hora) using btree 
    ;
create index audis_icorep on aud_icorep (hora) using btree ;
    
create index audis_icodetrep on aud_icodetrep (hora) using btree 
    ;
create index audis_icobsrep on aud_icobsrep (hora) using btree 
    ;
create index audis_chn on aud_chn (hora) using btree ;
create index audis_fceom on aud_fceom (hora) using btree ;
create index audis_ftempo on aud_ftempo (hora) using btree ;
    
create index audis_f_mulfar on aud_f_mulfar (hora) using btree 
    ;
create index idaud_mjkjkpusu on aud_yakis (usuario) using btree 
    ;
create index idaud_mpawwjjjcc on aud_yakis (accion) using btree 
    ;
create index idaud_mpcatdxxxjjescat on aud_yakis (catalogo,desp_catalogo) 
    using btree ;
create index idaudxxx_mphor on aud_yakis (hora) using btree 
    ;
create index audis_evaluaciones on aud_evaluaciones_ant (hora) 
    using btree ;
create index audis_pdocumento on aud_pdocumento (hora) using 
    btree ;
create index audis_ptipo on aud_ptipo (hora) using btree ;
create index audis_pestado on aud_pestado (hora) using btree 
    ;
create index audis_pnegociado on aud_pnegociado (hora) using 
    btree ;
create index audis_pacceso on aud_pacceso (hora) using btree 
    ;
create index audis_ptiempos on aud_ptiempos (hora) using btree 
    ;
create index audis_fincas on aud_fincas (hora) using btree ;
    
create index audis_ret_desc_hr on aud_ret_desc_hr (hora) using 
    btree ;
create index audis_ret_desc_im on aud_ret_desc_im (hora) using 
    btree ;
create index audis_ret_desc_ipm_esptas on aud_ret_desc_ipm_esptas 
    (hora) using btree ;
create index audis_ret_desc_ipm_of on aud_ret_desc_ipm_of (hora) 
    using btree ;
create index audis_ret_desc_ipm_sgtos_may on aud_ret_desc_ipm_sgtos_may 
    (hora) using btree ;
create index audis_ret_of_asim on aud_ret_of_asim (hora) using 
    btree ;
create index audis_ret_of_carre_res on aud_ret_of_carre_res 
    (hora) using btree ;
create index audis_ret_sgtos_may on aud_ret_sgtos_may (hora) 
    using btree ;
create index audis_ret_desc_ipm_asim on aud_ret_desc_ipm_asim 
    (hora) using btree ;
create index audis_asigna on aud_asigna (hora) using btree ;
    
create index audis_c_control on aud_c_control (hora) using btree 
    ;
create index audis_usuapli on aud_usuapli (hora) using btree 
    ;
create index audis_cmm_hospitalizados on aud_cmm_hospitalizados 
    (hora) using btree ;
create index audis_retiro on aud_retiro (hora) using btree ;
    
create index audis_aplicaciones on aud_aplicaciones (hora) using 
    btree ;
create index audis_divisiones on aud_divisiones (hora) using 
    btree ;
create index audis_negociados on aud_negociados (hora) using 
    btree ;
create index audis_u_comisiones on aud_u_comisiones (hora) using 
    btree ;
create index id_ape2 on mper (per_ape2) using btree ;
create index id_fec_nom on mper (per_fec_nomb) using btree ;
    
create index id_nom2 on mper (per_nom2) using btree ;
create index id_nom3 on mper (per_nom1,per_ape1) using btree 
    ;
create index id_nom4 on mper (per_nom1,per_nom2) using btree 
    ;
create index id_nom5 on mper (per_nom1,per_ape2) using btree 
    ;
create index id_nom6 on mper (per_ape1,per_ape2) using btree 
    ;
create index id_ord on mper (per_ord_gral) using btree ;
create index id_promo on mper (per_promocion) using btree ;
create index audis_permiso on aud_permiso (hora) using btree 
    ;
create index audis_fn_motivos on aud_fn_motivos (hora) using 
    btree ;
create index audis_f_cmm on aud_f_cmm (hora) using btree ;
create index audis_ft_asigna on aud_ft_asigna (hora) using btree 
    ;
create index audis_fcatnop on aud_fcatnop (hora) using btree 
    ;
create index audis_religiones on aud_religiones (hora) using 
    btree ;
create index audis_rel_detalle on aud_rel_detalle (hora) using 
    btree ;
create index audis_mtit on aud_mtit (hora) using btree ;
create index audis_resofi on aud_resofi (hora) using btree ;
    
create index audis_f_resumen on aud_f_resumen (hora) using btree 
    ;
create index audis_ret_esptas on aud_ret_esptas (hora) using 
    btree ;
create index audis_findustria on aud_findustria (hora) using 
    btree ;
create index audis_banejer_acc on aud_banejer_acc (hora) using 
    btree ;
create index audis_resutro on aud_resutro (hora) using btree 
    ;
create index audis_hftro_des on aud_hftro_des (hora) using btree 
    ;
create index audis_partidas on aud_partidas (hora) using btree 
    ;
create index audis_orden on aud_orden (hora) using btree ;
create index audis_ret_tropa on aud_ret_tropa (hora) using btree 
    ;
create index id_f_datosfza on aud_f_datosfza (hora) using btree 
    ;
create index audis_f_asgral on aud_f_asgral (hora) using btree 
    ;
create index audis_f_combust on aud_f_combust (hora) using btree 
    ;
create index audis_hftro on aud_hftro (hora) using btree ;
create index id_dfa_cant on dfasig (dfa_cantidad) using btree 
    ;
create unique index tdfasig_01idx on dfasig (dfa_catalogo,dfa_codigo,
    dfa_cantidad) using btree ;
create index audis_c_tareas on aud_c_tareas (hora) using btree 
    ;
create index ix1044_16 on recepcion (rec_obs) using btree ;
create index audis_tiempos on aud_tiempos (hora) using btree 
    ;
create index audis_freforma on aud_freforma (hora) using btree 
    ;
create index idaud_mpacc on aud_mper (accion) using btree ;
create index idaud_mpcatdescat on aud_mper (catalogo,desp_catalogo) 
    using btree ;
create index idaud_mphor on aud_mper (hora) using btree ;
create index idaud_mpusu on aud_mper (usuario) using btree ;
    
create index audis_agtsa on aud_agtsa (hora) using btree ;
create index audis_f_seguros_gt on aud_f_seguros_gt (hora) using 
    btree ;
create index audis_banejer_car on aud_banejer_car (hora) using 
    btree ;
create index audis_economato on aud_economato (hora) using btree 
    ;
create index audis_ipm_fact on aud_ipm_fact (hora) using btree 
    ;
create index ix772_5 on insti (idep) using btree ;
create index audis_insti on aud_insti (hora) using btree ;
create unique index ix137_1 on dper (cod_conf,catalogo) using 
    btree ;
create unique index ix875_1 on fmdescue (mde_codigo) using btree 
    ;
create index id_hisfgra on hisfin (ogrado) using btree ;
create index id_hisfmeses on hisfin (omeses) using btree ;
create index n_id_ape2 on n_mper (per_ape2) using btree ;
create index n_id_fec_nom on n_mper (per_fec_nomb) using btree 
    ;
create index n_id_nom2 on n_mper (per_nom2) using btree ;
create index n_id_nom3 on n_mper (per_nom1,per_ape1) using btree 
    ;
create index n_id_nom4 on n_mper (per_nom1,per_nom2) using btree 
    ;
create index n_id_nom5 on n_mper (per_nom1,per_ape2) using btree 
    ;
create index n_id_nom6 on n_mper (per_ape1,per_ape2) using btree 
    ;
create index n_id_ord on n_mper (per_ord_gral) using btree ;
    
create index n_id_promo on n_mper (per_promocion) using btree 
    ;
create index n_id_llave on n_mtit (tit_llave) using btree ;
create index audis_conyugues on aud_conyugues (hora) using btree 
    ;
create index id_jeraplar on morg (org_jerarquia,org_situacion) 
    using btree ;
create index id_jerar on morg (org_jerarquia) using btree ;
create index id_nom on morg (org_nominas) using btree ;
create index id_pago on morg (org_cod_pago) using btree ;
create index id_plaza on morg (org_plaza_desc) using btree ;
    
create index id_sit on morg (org_situacion) using btree ;
create index id_hftro_cat_f on hftro (hft_catalogo,hft_fecha) 
    using btree ;
create index id_hftro_fec on hftro (hft_fecha) using btree ;
    
create index id_hftro_grup on hftro (hft_grupo) using btree 
    ;
create index ida3 on aud_morg (accion) using btree ;
create index ida5 on aud_morg (usuario,accion) using btree ;
    
create index ida6 on aud_morg (hora) using btree ;
create index audis_dfdes_grat on aud_dfdes_grat (hora) using 
    btree ;
create index id_arm_lote on lmarmas (arm_lote) using btree ;
    
create index ix786_4 on lmarmas (arm_numero) using btree ;
create index audis_hfasig on aud_hfasig (hora) using btree ;
    
create index audis_c_documento on aud_c_documento (hora) using 
    btree ;
create index audis_hfasigc on aud_hfasigc (hora) using btree 
    ;
create index audis_dfdes_btrab on aud_dfdes_btrab (hora) using 
    btree ;
create index audis_hfdes1 on aud_hfdes1 (hora) using btree ;
    
create index audis_dfasig on aud_dfasig (hora) using btree ;
    
create index audis_hfdes on aud_hfdes (hora) using btree ;
create index audis_c_ubicacion_docum on aud_c_ubicacion_docum 
    (hora) using btree ;
create index audis_f_ipm_cart on aud_f_ipm_cart (hora) using 
    btree ;
create index audis_dfdes_tro on aud_dfdes_tro (hora) using btree 
    ;
create index audis_cuentas on aud_cuentas (hora) using btree 
    ;
create index audis_bono14 on aud_bono14 (hora) using btree ;
    
create index audis_dfdes_gra on aud_dfdes_gra (hora) using btree 
    ;
create index audis_agui on aud_agui (hora) using btree ;
create index audis_dcon on aud_dcon (hora) using btree ;
create unique index rnb_modifica on rnb_modificacion (mod_codigo) 
    using btree ;
create index rnb_modificacion_emb on rnb_modificacion (mod_embarcacion) 
    using btree ;
create index xif1rnb_impuesto on rnb_impuesto (imp_embarcacion) 
    using btree ;
create index rnb_color on rnb_color (col_embarcacion) using 
    btree ;
create index rnb_embarcacion on rnb_embarcacion (emb_propietario) 
    using btree ;
create index rnb_embarcacionn on rnb_embarcacion (emb_tipo) 
    using btree ;
create index rnnb_embarcacion on rnb_embarcacion (emb_mat_casco) 
    using btree ;
create index rrnb_embarcacion on rnb_embarcacion (emb_marca) 
    using btree ;
create index xif1rnb_licencia on rnb_licencia (lic_embarcacion) 
    using btree ;
create index xif2rnb_licencia on rnb_licencia (lic_dependencia) 
    using btree ;
create index xif1rnb_usuario on rnb_usuario (usu_dependencia) 
    using btree ;
create index xif1rnb_matricula on rnb_matricula (mat_embarcacion) 
    using btree ;
create index xif2rnb_matricula on rnb_matricula (mat_dependencia) 
    using btree ;
create index iddfddfdreg on dfdes (dfd_nu_reg) using btree ;
    
create index audis_dfdes on aud_dfdes (hora) using btree ;
create index lmun_lote on lmun_lote1 (lot_lote) using btree 
    ;
create index audis_lmun_tipo on aud_lmun_tipo (hora) using btree 
    ;
create index audis_lmun_calibre on aud_lmun_calibre (hora) using 
    btree ;
create index audis_lmun_marca on aud_lmun_marca (hora) using 
    btree ;
create index audis_lmun_color on aud_lmun_color (hora) using 
    btree ;
create index audis_lmun_modelo on aud_lmun_modelo (hora) using 
    btree ;
create index audis_lmun_fabrica on aud_lmun_fabrica (hora) using 
    btree ;
create index audis_lmun_lote on aud_lmun_lote (hora) using btree 
    ;
create index audis_lmun_situacion on aud_lmun_situacion (hora) 
    using btree ;
create index audis_l_municion on aud_l_municion (hora) using 
    btree ;
create index audis_lmun_uso on aud_lmun_uso (hora) using btree 
    ;
create index audis_lmun_carga on aud_lmun_carga (hora) using 
    btree ;
create index audis_lmun_solicitud on aud_lmun_solicitud (hora) 
    using btree ;
create index audis_lmun_det_solicitud on aud_lmun_det_solicitud 
    (hora) using btree ;
create index audis_lmun_det_solasigna on aud_lmun_det_solasigna 
    (hora) using btree ;
create index audis_lmun_det_cambiosit on aud_lmun_det_cambiosit 
    (hora) using btree ;
create index audis_lmun_devolentre on aud_lmun_devolentre (hora) 
    using btree ;
create index audis_lmun_mov_solicitud on aud_lmun_mov_solicitud 
    (hora) using btree ;
create index audis_lmun_correla on aud_lmun_correla (hora) using 
    btree ;
create index audis_lmun_movimientos on aud_lmun_movimientos 
    (hora) using btree ;
create index audis_lmun_asignacion on aud_lmun_asignacion (hora) 
    using btree ;
create index audis_lmun_cambio_sit on aud_lmun_cambio_sit (hora) 
    using btree ;
create index audis_lmun_trasint on aud_lmun_trasint (hora) using 
    btree ;
create index audis_lmun_det_conocimiento on aud_lmun_det_conocimiento 
    (hora) using btree ;
create index audis_lmun_conoc_fab on aud_lmun_conoc_fab (hora) 
    using btree ;
create index audis_lmun_det_conoc_fab on aud_lmun_det_conoc_fab 
    (hora) using btree ;
create index audis_pcapa_det_solicitud on aud_pcapa_det_solicitud 
    (hora) using btree ;
create index audis_pocur_solicitud on aud_pocur_solicitud (hora) 
    using btree ;
create index audis_pdcapacitacion on aud_pdcapacitacion (hora) 
    using btree ;
create unique index coc_mision on coc_mision (mis_codigo) using 
    btree ;
alter table coc_mision add constraint primary key (mis_codigo) 
    constraint pk_mision  ;
create unique index ix694_1 on coc_tipo_veh (tve_codigo) using 
    btree ;
alter table coc_tipo_veh add constraint primary key (tve_codigo) 
    constraint pk_tipoveh  ;
create index audis_dfam on aud_dfam (hora) using btree ;
create index ix1386_3 on lmun_lote_asig (asig_lote_situacion) 
    using btree ;
create unique index ix1562_1 on religion_segcontalu (rel_id) 
    using btree ;
create unique index ix323_1 on gpl_asig_mision (ami_id) using 
    btree ;
alter table gpl_asig_mision add constraint primary key (ami_id) 
    constraint pk32  ;
create index idx_ope_pla_inicia on coc_ope_planificada (ope_pla_inicia) 
    using btree ;
create unique index ix501_1 on niveles_autocom (aut_codigo) 
    using btree ;
alter table niveles_autocom add constraint primary key (aut_codigo) 
    constraint cod  ;
create index idfm_orgjerar on fmorg (org_jerarquia) using btree 
    ;
create index idfm_orgnom on fmorg (org_nominas) using btree 
    ;
create index idfm_orgpago on fmorg (org_cod_pago) using btree 
    ;
create index idfm_orgplazades on fmorg (org_plaza_desc) using 
    btree ;
create index idfm_orgsit on fmorg (org_situacion) using btree 
    ;
create index idfm_ape2 on fmper (per_ape2) using btree ;
create index idfm_fec_nom on fmper (per_fec_nomb) using btree 
    ;
create index idfm_nom2 on fmper (per_nom2) using btree ;
create index idfm_nopeape1 on fmper (per_nom1,per_ape1) using 
    btree ;
create index idfm_noperap2 on fmper (per_nom1,per_ape2) using 
    btree ;
create index idfm_noperno2 on fmper (per_nom1,per_nom2) using 
    btree ;
create index idfm_pape1_2 on fmper (per_ape1,per_ape2) using 
    btree ;
create index id_fd464_1 on fdpue (pue_catalogo) using btree 
    ;
create index ff1021 on fdfam (fam_cat_militar) using btree ;
    
create index ff1022 on fdfam (fam_cat_familiar) using btree 
    ;
create index ff1023 on fdfam (fam_parentesco) using btree ;


alter table mfsue_e 
add constraint 
(foreign key (sue_grado) 
    references grados  constraint fk_mfsuee_gra);
alter table tdfasig add constraint (foreign key (tdfa_codigo) 
    references asignaciones  constraint fk_tdfasig_asigna);
alter table dcur add constraint (foreign key (cur_grado) references 
    grados  constraint fk_dcur_gra);
alter table dcur add constraint (foreign key (cur_pais) references 
    paises  constraint fk_dcur_pais);
alter table dcur add constraint (foreign key (cur_escuela) references 
    escuelas  constraint fk_dcur_escu);
alter table dcur add constraint (foreign key (cur_curso) references 
    cursos  constraint fk_dcur_cur);
alter table dfdes_btrab add constraint (foreign key (dfdt_codigo) 
    references descuentos  constraint fk_dfdesdescuen);
alter table dfam add constraint (foreign key (fam_parentesco) 
    references parentescos  constraint fk_dfam_paren);
alter table coc_planificar add constraint (foreign key (pla_dep_llave) 
    references mdep  constraint pla_dep_llave);
alter table dfam add constraint (foreign key (fam_nac_lugar) 
    references dep_mun  constraint fk_dfan_depmun);
alter table morg add constraint (foreign key (org_grado) references 
    grados  constraint fk_morg_gra);
alter table morg add constraint (foreign key (org_ceom) references 
    meom  constraint fk_morg_meo);
alter table menu_det add constraint (foreign key (md_menu) references 
    menu_master  constraint fk_menudet_menuma);
alter table insp_anotaciones add constraint (foreign key (a_anota) 
    references insp_ianota  constraint fk_ano_ian);
alter table insp_inmuebles add constraint (foreign key (i_situacion) 
    references insp_situacion  constraint fk_sit);
alter table insp_inmuebles add constraint (foreign key (i_estado) 
    references insp_estado  constraint fk_est);
alter table insp_inmuebles add constraint (foreign key (i_tipo) 
    references insp_tipos  constraint fk_inm_tip);
alter table morg add constraint (foreign key (org_dependencia) 
    references mdep  constraint fk_morg_mde);
alter table oerq_entrena add constraint (foreign key (req_tipo_req) 
    references oetr_entrena  constraint tipr_codigo);
alter table oedr_entrena add constraint (foreign key (der_requerimiento) 
    references oerq_entrena  constraint req_codigo);
alter table oede_entrena add constraint (foreign key (de_trans) 
    references oema_entrena  constraint me_trans);
alter table oema_entrena add constraint (foreign key (me_tipo) 
    references oetd_entrena  constraint tipd_codigo);
alter table c_corr_seg add constraint (foreign key (seg_dep) 
    references mdep  constraint fk_c_corr_seg_mdep);
alter table oede_entrena add constraint (foreign key (de_actividad) 
    references oeac_entrena  constraint acti_codigo);
alter table mper add constraint (foreign key (per_plaza) references 
    morg  constraint org_plaza);
alter table pcon_detalle add constraint (foreign key (dcon_catalogo) 
    references mper  constraint fk_dcon_catalogo);
alter table pcon_detalle add constraint (foreign key (dcon_grado) 
    references grados  constraint fk_dcon_grado);
alter table pcon_detalle add constraint (foreign key (dcon_condecoracion) 
    references pcon_maestra  constraint fk_dcon_condecoracion);
    
alter table pcon_detalle add constraint (foreign key (dcon_catalogo) 
    references pcon_personalidad );
alter table pcon_detalle add constraint (foreign key (dcon_condecoracion) 
    references pcond_especial );
alter table hftro add constraint (foreign key (hft_grado) references 
    grados  constraint fk_hftro_grados);
alter table hftro_des add constraint (foreign key (htd_codigo) 
    references descuentos  constraint fk_hftrdesdesc);
alter table hftro add constraint (foreign key (hft_depen) references 
    mdep  constraint fk_hfto_grado);
alter table ft_asigna add constraint (foreign key (ta_codigo) 
    references asignaciones );
alter table dfdes add constraint (foreign key (dfd_codigo) references 
    descuentos  constraint fk_dfdes_descue);
alter table peva_concept add constraint (foreign key (con_periodo) 
    references peva_periodos_ant );
alter table jefes add constraint (foreign key (jef_categoria) 
    references categorias  constraint fk_jefes_categ);
alter table fuerza add constraint (foreign key (f_grado) references 
    grados  constraint fk_fuerza_grados);
alter table fuerza add constraint (foreign key (f_dep) references 
    mdep  constraint fk_fuerza_mdep);
alter table peva_concept add constraint (foreign key (con_proy_carrera) 
    references peva_proyeccion );
alter table peva_control_dep add constraint (foreign key (depc_dependencia) 
    references mdep );
alter table c_documento add constraint (foreign key (doc_proposito) 
    references c_proposito  constraint fk_c_documento_prop);
alter table c_documento add constraint (foreign key (doc_tipo) 
    references c_tipo_docum  constraint fk_c_documento_tip);
alter table r_requerimientos add constraint (foreign key (req_destino) 
    references mdep  constraint fk_r_requerimientos2);
alter table icorep add constraint (foreign key (rep_depen) references 
    mdep  constraint fk_icorep_mdep);
alter table pdocumento add constraint (foreign key (doctipo) 
    references ptipo );
alter table pdocumento add constraint (foreign key (docestado) 
    references pestado );
alter table pdocumento add constraint (foreign key (docnegociado) 
    references pnegociado );
alter table mper add constraint (foreign key (per_arma) references 
    armas  constraint fk_mper_arm);
alter table mper add constraint (foreign key (per_grado) references 
    grados  constraint fk_mer_grad);
alter table mper add constraint (foreign key (per_nac_lugar) 
    references dep_mun  constraint fk_mper_dep_m2);
alter table mper add constraint (foreign key (per_dir_lugar) 
    references dep_mun  constraint fk_mper_dep_mu);
alter table mper add constraint (foreign key (per_ext_ced_lugar) 
    references dep_mun  constraint fk_mper_dep_m);
alter table mper add constraint (foreign key (per_situacion) 
    references situaciones  constraint fk_mper_situ);
alter table fcatnop add constraint (foreign key (fcat_catalogo) 
    references mper  constraint fk_fcat_mper);
alter table evaluaciones add constraint (foreign key (e_diagnost) 
    references diagnostico );
alter table mfsue_o add constraint (foreign key (mfs_grado) 
    references grados  constraint fk_mfsueo_gra);
alter table mfsue_o add constraint (foreign key (mfs_arma) references 
    armas  constraint fk_mfsueo_arm);
alter table cmm_hospitalizados add constraint (foreign key (hos_depen) 
    references mdep  constraint fk_cmmhos_mdep);
alter table cmm_hospitalizados add constraint (foreign key (hos_grado) 
    references grados  constraint fk_cmmhos_grad);
alter table documento add constraint (foreign key (doc_tipo) 
    references tipo_docum  constraint fk_documento_tip);
alter table documento add constraint (foreign key (doc_procedencia) 
    references mdep  constraint fk_documento_mdep1);
alter table documento add constraint (foreign key (doc_destino) 
    references mdep  constraint fk_documento_mdep);
alter table icodetrep add constraint (foreign key (dr_comb) 
    references icombus  constraint fk_icodetrep_icorep1);
alter table icodetrep add constraint (foreign key (dr_numero) 
    references icorep  constraint fk_icodetrep_icorep);
alter table usumenu add constraint (foreign key (um_cod_menu) 
    references menus  constraint fk_usumen_menus);
alter table cmm_rebajados add constraint (foreign key (reb_grado) 
    references grados  constraint fk_cmmreb_grad);
alter table cmm_rebajados add constraint (foreign key (reb_depen) 
    references mdep  constraint fk_cmmreb_mdep);
alter table c_oficinas add constraint (foreign key (of_dep) 
    references mdep  constraint fk_c_oficinas_mdep);
alter table t_org add constraint (foreign key (torg_grado) references 
    grados  constraint fk_torg_grados);
alter table oficina add constraint (foreign key (of_dep) references 
    mdep  constraint fk_oficina_mdep);
alter table r_det_req add constraint (foreign key (dre_nomprog) 
    references r_programas );
alter table r_det_req add constraint (foreign key (dre_clapapel) 
    references r_papel );
alter table ptiempos add constraint (foreign key (tiempodoc) 
    references pdocumento  constraint fk_pdocu_ptiempos);
alter table cns add constraint (foreign key (sis_catalogo) references 
    mper  constraint usu_sistema);
alter table dfam add constraint (foreign key (fam_cat_militar) 
    references mper  constraint fam_mper);
alter table des_no_efec add constraint (foreign key (no_efec_codigo) 
    references descuentos  constraint fk_desnoef_escue);
alter table dcon add constraint (foreign key (con_grado) references 
    grados  constraint fk_dcon_gra);
alter table dcon add constraint (foreign key (con_condecoracion) 
    references cond  constraint fk_dcon_cond);
alter table fceom add constraint (foreign key (fc_ceom) references 
    meom );
alter table msan add constraint (foreign key (san_grado) references 
    grados  constraint fk_msan_gra);
alter table msan add constraint (foreign key (san_depen) references 
    mdep  constraint fk_msan_mdep);
alter table msan add constraint (foreign key (san_sancion) references 
    tsan  constraint fk_msan_tsan);
alter table mftro add constraint (foreign key (tro_grado) references 
    grados  constraint fk_mftro_gra);
alter table insp_observaciones add constraint (foreign key (obs_cat) 
    references insp_inmuebles );
alter table usu_opera add constraint (foreign key (usu_codigo) 
    references opera_menu  constraint fk_usu_opera_menu);
alter table dpue add constraint (foreign key (pue_grado) references 
    grados  constraint fk_dpue_gra);
alter table dpue add constraint (foreign key (pue_arma) references 
    armas  constraint fk_dpue_arms);
alter table f_datosfza add constraint (foreign key (df_cdep) 
    references mdep );
alter table f_datosfza add constraint (foreign key (df_cgrado) 
    references grados );
alter table tropabajas add constraint (foreign key (tb_situacion) 
    references situaciones  constraint fk_tbajas_situa);
alter table tropa_sp add constraint (foreign key (tsp_grado) 
    references grados  constraint fk_tropsp_gra);
alter table corr_seg add constraint (foreign key (seg_dep) references 
    mdep  constraint fk_corr_seg_mdep);
alter table lsm_equipo add constraint (foreign key (equi_dep) 
    references mdep  constraint fk_equidep_lsmequp);
alter table hfasig add constraint (foreign key (hfa_arma) references 
    armas  constraint fk_hfasig_armas);
alter table hfasig add constraint (foreign key (hfa_depen) references 
    mdep  constraint fk_hfas_mdep);
alter table hfdes add constraint (foreign key (hfd_codigo) references 
    descuentos  constraint fk_hfdes_desc);
alter table dfasig add constraint (foreign key (dfa_codigo) 
    references asignaciones  constraint fk_dfasi_asig);
alter table meomeop add constraint (foreign key (meop) references 
    meop  constraint fk_meomeop_meop);
alter table meomeop add constraint (foreign key (meom) references 
    meom  constraint fk_meomeop_meom);
alter table doc_cerrados add constraint (foreign key (doc_tipo) 
    references tipo_docum  constraint fk_doc_cerados_tip);
alter table doc_cerrados add constraint (foreign key (doc_destino) 
    references mdep  constraint fk_doc_cerados_mde);
alter table doc_cerrados add constraint (foreign key (doc_procedencia) 
    references mdep  constraint fk_doc_cerados_md1);
alter table permiso add constraint (foreign key (catalogo) references 
    mper  constraint fk_perm_mper);
alter table permiso add constraint (foreign key (autorizo) references 
    mper  constraint fk_perm_mper1);
alter table permiso add constraint (foreign key (per_division) 
    references divisiones  constraint fk_perm_divi);
alter table tablas add constraint (foreign key (sistema) references 
    sistemas  constraint fk_tabla_sistema);
alter table dfdes_tro add constraint (foreign key (dtd_codigo) 
    references descuentos  constraint fk_dfdetro_desc);
alter table f_resumen add constraint (foreign key (r_cgrado) 
    references grados  constraint fk_f_resuemen_grad);
alter table recepcion add constraint (foreign key (rec_dependencia) 
    references mdep  constraint dep_llave);
alter table recepcion add constraint (foreign key (rec_tecnico) 
    references mper  constraint catalogo);
alter table recepcion add constraint (foreign key (rec_equipo) 
    references equipos  constraint eq_codigo);
alter table recepcion add constraint (foreign key (rec_marca) 
    references marca  constraint mar_codigo);
alter table eacciones add constraint (foreign key (e_grado) 
    references grados  constraint gra_codigo);
alter table paf_detalle add constraint (foreign key (det_actanumero) 
    references paf_actas  constraint act_codigo);
alter table paf_programador add constraint (foreign key (pro_nperiodo) 
    references paf_periodos  constraint per_periodo);
alter table psan_sanciones add constraint (foreign key (san_reglamento) 
    references psan_registro  constraint registro);
alter table psan_estadistica add constraint (foreign key (est_catalogo) 
    references mper  constraint per_catalogos);
alter table psan_detalle add constraint (foreign key (det_dependencia) 
    references mdep  constraint dep_llaves);
alter table psan_detalle add constraint (foreign key (det_catalogo) 
    references mper  constraint per_catalogo);
alter table ing_maq_servicios add constraint (foreign key (mser_maquina) 
    references ing_maquinas );
alter table psan_detalle add constraint (foreign key (det_grado) 
    references grados  constraint gra_codigos);
alter table evaluaciones_ant add constraint (foreign key (e_diagnost) 
    references diagnosticos  constraint d_codigo);
alter table opaf_notas add constraint (foreign key (not_catalogo) 
    references mper  constraint per_catalogo1);
alter table opaf_notas add constraint (foreign key (not_dependencia) 
    references mdep  constraint dep_llave1);
alter table sop_soporte add constraint (foreign key (sop_marca) 
    references sop_marcas  constraint mar_codigo2);
alter table sop_soporte add constraint (foreign key (sop_recibetec) 
    references mper  constraint per_catalogo2);
alter table sop_soporte add constraint (foreign key (sop_equipo) 
    references sop_equipos  constraint equ_codigo);
alter table tiempos add constraint (foreign key (t_catalogo) 
    references mper  constraint per_catalogo4);
alter table sop_soporte add constraint (foreign key (sop_dependencia) 
    references mdep  constraint dep_llave2);
alter table dep_ubicacion add constraint (foreign key (cod_dm) 
    references depmun  constraint fk_ubica_depmun);
alter table det_consolicit add constraint (foreign key (con_condecoracion) 
    references cond );
alter table eva_especialistas add constraint (foreign key (esp_tipo) 
    references eva_tipo  constraint tip_codigo);
alter table evaluaciones add constraint (foreign key (e_diagnost) 
    references diagnosticos  constraint n_codigo);
alter table jefes_ant add constraint (foreign key (jef_categoria) 
    references categorias );
alter table cond add constraint (foreign key (con_pais) references 
    paises  constraint fk_pais_con);
alter table ef_usuarios add constraint (foreign key (efu_usuario) 
    references mper  constraint fk_efu_usuario);
alter table con_permisos add constraint (foreign key (con_per_dep) 
    references con_mdep );
alter table hfasig add constraint (foreign key (hfa_depen) references 
    fmdep  constraint fk_hfas_fmdephfa_depen);
alter table ef_usuarios add constraint (foreign key (efu_depen) 
    references mdep  constraint fk_efu_depen);
alter table det_consolicit add constraint (foreign key (con_grado) 
    references grados );
alter table evaluacion_ant add constraint (foreign key (eva_grado) 
    references grados  constraint fk_evalua_grad);
alter table ei_asignaciones add constraint (foreign key (asi_materia) 
    references ei_materias  constraint mat_codigo);
alter table ei_cursos_reali add constraint (foreign key (curr_tipo) 
    references ei_tipo_curso  constraint tcur_codigo);
alter table ei_notas add constraint (foreign key (not_materia) 
    references ei_materias );
alter table ef_detalle add constraint (foreign key (ef_destino) 
    references ef_destinos_ant  constraint efd_codigo);
alter table ef_fuerza add constraint (foreign key (ef_destino) 
    references ef_destinos  constraint efd_codigo1);
alter table comb_hist_varcontrato add constraint (foreign key 
    (var_contrato) references comb_contratos );
alter table niveles_autocom add constraint (foreign key (aut_permiso) 
    references menuautocom );
alter table larm_lot add constraint (foreign key (lot_tipo) 
    references larm_tip  constraint fk_larmlot_latip);
alter table larm_det add constraint (foreign key (det_cat) references 
    lmarmas  constraint fk_lardet_lmarm);
alter table ptel_personal add constraint (foreign key (tel_catalogo) 
    references mper );
alter table lmarmas add constraint (foreign key (arm_sit) references 
    larm_sit  constraint fk_lmar_larsit);
alter table lmarmas add constraint (foreign key (arm_lote,arm_tipo) 
    references larm_lot  constraint fk_lmar_larmlot);
alter table peva_admin add constraint (foreign key (adm_catalogo) 
    references mper  constraint fk_peva_admin_catalogo);
alter table peva_admin add constraint (foreign key (adm_periodo) 
    references peva_periodos  constraint fk_peva_admin_periodo);
    
alter table peva_admin add constraint (foreign key (adm_proyec) 
    references peva_proyeccion  constraint fk_peva_admin_proyec);
    
alter table peva_evaluacion add constraint (foreign key (eva_catalogo,
    eva_periodo) references peva_admin  constraint fk_peva_evaluacion);
    
alter table peva_autentica add constraint (foreign key (aut_catalogo,
    aut_periodo) references peva_admin  constraint fk_peva_autentica);
    
alter table peva_conceptos add constraint (foreign key (con_catalogo,
    con_periodo) references peva_admin  constraint fk_peva_conceptos);
    
alter table peva_objetivos add constraint (foreign key (obj_catalogo,
    obj_periodo) references peva_admin  constraint fk_peva_objetivos);
    
alter table peva_notas add constraint (foreign key (not_catalogo,
    not_periodo) references peva_admin  constraint fk_peva_notas);
    
alter table peva_aut_em add constraint (foreign key (autem_catalogo,
    autem_periodo) references peva_admin  constraint fk_peva_aut_em);
    
alter table peva_funciones add constraint (foreign key (fun_catalogo,
    fun_periodo) references peva_admin  constraint fk_peva_fun_admin);
    
alter table ceom_funcion add constraint (foreign key (func_meom) 
    references meom  constraint fk_ceom_funciones);
alter table eva_boleta add constraint (foreign key (bol_accion_mot) 
    references acc_motivadora  constraint mot_codigo);
alter table eva_boleta add constraint (foreign key (bol_accion_correc) 
    references acc_motivadora  constraint corr_codigo);
alter table bol_det_meritos add constraint (foreign key (detm_evaluado,
    detm_anio) references eva_boleta  constraint fkdetmeritos);
    
alter table bol_det_meritos add constraint (foreign key (detm_codigo) 
    references eva_meritos  constraint mer_codigo);
alter table mdep_conocimiento add constraint (foreign key (dep_con_tipo) 
    references mdep_tipo  constraint fk_dep_con_tipo);
alter table lmarmas_ag add constraint (foreign key (arm_almacen) 
    references lama_almacen  constraint fk_arm_almacen);
alter table lade_conocimiento add constraint (foreign key (d_con_catalogo) 
    references lmarmas_ag  constraint fk_d_con_catalogo);
alter table lade_conocimiento add constraint (foreign key (d_con_codigo) 
    references lama_conoc  constraint fk_d_con_codigo);
alter table lama_conoc add constraint (foreign key (lama_libro) 
    references lali_conoc  constraint fk_lama_libro);
alter table lama_conoc add constraint (foreign key (lama_dep_recibe) 
    references mdep_conocimiento  constraint fk_lama_dep_recibe);
    
alter table larm_buscerradas add constraint (foreign key (carm_sit) 
    references larm_sit  constraint situ);
alter table larm_buscerradas add constraint (foreign key (carm_lote,
    carm_tipo) references larm_lot  constraint lotesdi);
alter table larm_solicitud add constraint (foreign key (sol_tipo) 
    references larm_tip_sol );
alter table larm_solicitud add constraint (foreign key (sol_datocambia) 
    references larm_tip_sol  constraint dos);
alter table larm_buscerradas add constraint (foreign key (carm_usuario) 
    references mper  constraint usuar);
alter table larm_solicitud add constraint (foreign key (sol_logistico) 
    references mper  constraint tres);
alter table larm_solicitud add constraint (foreign key (sol_comte) 
    references mper  constraint cuatro);
alter table larm_solicitud add constraint (foreign key (sol_inspector) 
    references mper  constraint cinco);
alter table larm_solicitud add constraint (foreign key (sol_usuario) 
    references mper  constraint seis);
alter table larm_mov add constraint (foreign key (mov_usuario) 
    references mper  constraint usua);
alter table larm_temp add constraint (foreign key (tem_lote,
    tem_tipo) references larm_lot  constraint fk_larm_temp);
alter table larm_temp add constraint (foreign key (tem_sit) 
    references larm_sit  constraint fk_larm_temp1);
alter table larm_temp add constraint (foreign key (tem_usuario) 
    references mper  constraint usuario);
alter table bol_det_concep add constraint (foreign key (detc_pregunta) 
    references eva_preguntas  constraint pre_codigo);
alter table bol_det_concep add constraint (foreign key (detc_evaluado,
    detc_anio) references eva_boleta  constraint bol_cat_evaluado);
    
alter table detalle_solicitud add constraint (foreign key (det_codigo_uni) 
    references uniformes  constraint fk_uniformes);
alter table detalle_solicitud add constraint (foreign key (det_catalogo) 
    references mper  constraint mper_detsol);
alter table detalle_solicitud add constraint (foreign key (det_usuario) 
    references mper  constraint fk_moper);
alter table eva_datos add constraint (foreign key (dat_cat_evaluado,
    dat_anio) references eva_boleta  constraint bol_cat_evaluad1o);
    
alter table eva_certifica add constraint (foreign key (cer_evaluado,
    cer_anio) references eva_boleta  constraint primaria);
alter table eva_boleta add constraint (foreign key (bol_cat_evaluado) 
    references mper  constraint fk_boleta_per);
alter table rnb_motor add constraint (foreign key (mot_embarcacion) 
    references rnb_embarcacion );
alter table solicitud_uniformes add constraint (foreign key 
    (sol_com_catalogo) references mper  constraint fk_soluni);
    
alter table solicitud_uniformes add constraint (foreign key 
    (sol_dependencia) references mdep  constraint fk_dependuni);
    
alter table solicitud_uniformes add constraint (foreign key 
    (sol_log_cat) references mper  constraint fk_sol_l);
alter table solicitud_uniformes add constraint (foreign key 
    (sol_usuario) references mper  constraint fk_mper);
alter table dep_ubicacion add constraint (foreign key (cod_dep) 
    references mdep  constraint fk_ubica_mdep);
alter table rnb_modificacion add constraint (foreign key (mod_embarcacion) 
    references rnb_embarcacion );
alter table rnb_impuesto add constraint (foreign key (imp_embarcacion) 
    references rnb_embarcacion );
alter table rnb_propietario add constraint (foreign key (pro_pais) 
    references paises );
alter table rnb_propietario add constraint (foreign key (pro_dep_mun) 
    references depmun );
alter table rnb_color add constraint (foreign key (col_embarcacion) 
    references rnb_embarcacion );
alter table rnb_embarcacion add constraint (foreign key (emb_mat_casco) 
    references rnb_casco );
alter table rnb_embarcacion add constraint (foreign key (emb_marca) 
    references rnb_marca );
alter table rnb_embarcacion add constraint (foreign key (emb_tipo) 
    references rnb_tipo_emb );
alter table rnb_embarcacion add constraint (foreign key (emb_propietario) 
    references rnb_propietario );
alter table rnb_licencia add constraint (foreign key (lic_dependencia) 
    references rnb_dependencia );
alter table rnb_licencia add constraint (foreign key (lic_embarcacion) 
    references rnb_embarcacion );
alter table rnb_usuario add constraint (foreign key (usu_dependencia) 
    references rnb_dependencia );
alter table rnb_inspeccion add constraint (foreign key (insp_dependencia) 
    references rnb_dependencia );
alter table rnb_inspeccion add constraint (foreign key (insp_embarcacion) 
    references rnb_embarcacion );
alter table rnb_dependencia add constraint (foreign key (dep_lugar) 
    references depmun );
alter table rnb_matricula add constraint (foreign key (mat_dependencia) 
    references rnb_dependencia );
alter table rnb_matricula add constraint (foreign key (mat_embarcacion) 
    references rnb_embarcacion );
alter table luni_solicitud add constraint (foreign key (sol_dependencia) 
    references mdep  constraint fk_depend);
alter table luni_solicitud add constraint (foreign key (sol_usuario) 
    references mper  constraint fk_solusuario);
alter table rnb_zarpe add constraint (foreign key (zar_dependencia) 
    references rnb_dependencia );
alter table rnb_zarpe_inter add constraint (foreign key (zarin_zarpe) 
    references rnb_zarpe );
alter table rnb_atraque add constraint (foreign key (atra_dependencia) 
    references rnb_dependencia );
alter table peva_boletasas add constraint (foreign key (eva_catalogo) 
    references mper  constraint fk_evades_as);
alter table peva_detpersonal add constraint (foreign key (det_noevaas) 
    references peva_boletasas  constraint fk_cert_eva);
alter table peva_certificaas add constraint (foreign key (cer_noevaas) 
    references peva_boletasas  constraint fk_certi_eva);
alter table peva_detbolconcep add constraint (foreign key (con_noevaas) 
    references peva_boletasas  constraint fk_detbol_eva);
alter table peva_boletasas add constraint (foreign key (eva_periodo) 
    references peva_periodos  constraint fk_evaofas_per);
alter table luni_detsol_log add constraint (foreign key (detu_usuario) 
    references mper  constraint fk_logistica);
alter table luni_detsol_log add constraint (foreign key (detu_dependencia) 
    references mdep  constraint fk_dep);
alter table lmun_fabrica add constraint (foreign key (fab_pais) 
    references paises  constraint fk_fabrica);
alter table lmun_lote1 add constraint (foreign key (lot_marca) 
    references lmun_marca  constraint fk_marca_l);
alter table larm_inventario add constraint (foreign key (inv_lote,
    inv_tipo) references larm_lot  constraint fk_inv_lotes);
alter table larm_hallazgo add constraint (foreign key (hall_cat) 
    references lmarmas  constraint fk_hallaz_gos);
alter table larm_hallazgo add constraint (foreign key (hall_usuario) 
    references mper  constraint fk_usu_mper);
alter table lveh_det_neumaticos add constraint (foreign key 
    (det_neu_catalogo) references lvehiculos  constraint fk_catllantas);
    
alter table lveh_det_neumaticos add constraint (foreign key 
    (det_neu_llanta) references lveh_neumaticos  constraint fk_detneullantas);
    
alter table lveh_det_plaza add constraint (foreign key (det_pla_catalogo) 
    references lvehiculos  constraint fk_plazaveh);
alter table lveh_det_otros add constraint (foreign key (det_otros_catalogo) 
    references lvehiculos  constraint fk_detotros_veh);
alter table lveh_det_otros add constraint (foreign key (det_otros_caracteristica) 
    references lveh_caracteristicas  constraint fk_caracteristica_veh);
    
alter table lveh_estilo add constraint (foreign key (estilo_marcas) 
    references lveh_marcas  constraint fk_marc_veh);
alter table lveh_marcas add constraint (foreign key (mar_tipo) 
    references lveh_tipo  constraint fk_tipmar_veh);
alter table lvehiculos add constraint (foreign key (veh_tipo) 
    references lveh_tipo  constraint fk_tip_veh);
alter table lvehiculos add constraint (foreign key (veh_marca) 
    references lveh_marcas  constraint fk_marca_veh);
alter table lvehiculos add constraint (foreign key (veh_estilo) 
    references lveh_estilo  constraint fk_estilo_veh);
alter table lveh_det_motor add constraint (foreign key (det_mot_catalogo) 
    references lvehiculos  constraint fk_detmotveh);
alter table lveh_det_motor add constraint (foreign key (det_mot_combustible) 
    references lveh_combustible  constraint fk_mot_veh);
alter table lveh_det_motor add constraint (foreign key (det_mot_aceite) 
    references lveh_aceite  constraint fk_detaceite_veh);
alter table lveh_nuevo add constraint (foreign key (nue_tipo_llantas) 
    references lveh_neumaticos  constraint fk_llantas_new);
alter table lveh_nuevo add constraint (foreign key (nue_solicitud) 
    references lveh_solicitud  constraint fk_newveh);
alter table lveh_nuevo add constraint (foreign key (nue_tipo_veh) 
    references lveh_tipo  constraint fk_tipo_new);
alter table lveh_nuevo add constraint (foreign key (nue_marca) 
    references lveh_marcas  constraint fk_marca_new);
alter table lveh_nuevo add constraint (foreign key (nue_estilo) 
    references lveh_estilo  constraint fk_estilo_new);
alter table lveh_nuevo add constraint (foreign key (nue_combustible) 
    references lveh_combustible  constraint fk_combustible_new);
    
alter table lveh_nuevo add constraint (foreign key (nue_aceite_motor) 
    references lveh_aceite  constraint fk_aceite_new);
alter table lveh_nuevo add constraint (foreign key (nue_aceite_trans) 
    references lveh_aceite  constraint fk_aceitenew);
alter table lveh_det_documento add constraint (foreign key (det_doc_numero) 
    references lveh_solicitud  constraint fk_doc_veh);
alter table lveh_det_plaza add constraint (foreign key (det_pla_plaza) 
    references morg  constraint fk_detplaveh);
alter table lveh_solicitud add constraint (foreign key (sol_cat_comte) 
    references mper  constraint fk_cat_comte);
alter table lveh_solicitud add constraint (foreign key (sol_cat_logistico) 
    references mper  constraint fk_cat_logistic);
alter table lveh_solicitud add constraint (foreign key (sol_cat_usuario) 
    references mper  constraint fk_sol_usu);
alter table lveh_solicitud add constraint (foreign key (sol_dependencia) 
    references mdep  constraint fk_depp);
alter table lveh_solicitud add constraint (foreign key (sol_grado) 
    references grados  constraint fk_soli_grad);
alter table lveh_nuevo add constraint (foreign key (nue_plaza) 
    references morg  constraint fk_plaza_bw);
alter table lveh_nuevo add constraint (foreign key (nue_dep) 
    references mdep  constraint fk_dep_vehnew);
alter table lveh_det_documento add constraint (foreign key (det_doc_usuario) 
    references mper  constraint fk_cat_veh);
alter table lveh_det_transmision add constraint (foreign key 
    (det_trans_aceite) references lveh_aceite  constraint fk_dettrans);
    
alter table lveh_det_transmision add constraint (foreign key 
    (det_trans_catalogo) references lvehiculos  constraint fk_dettransveh);
    
alter table lveh_asigna add constraint (foreign key (veh_sol_catalogo) 
    references lvehiculos  constraint fk_asigveh);
alter table lveh_asigna add constraint (foreign key (veh_sol_numero) 
    references lveh_solicitud  constraint fk_asisolgveh);
alter table lveh_nuevo add constraint (foreign key (nue_situacion) 
    references lveh_situacion  constraint fk_veh_situacion);
alter table lveh_nuevo add constraint (foreign key (nue_color) 
    references lveh_color  constraint fk_veh_color);
alter table larm_obser add constraint (foreign key (obs_cat) 
    references lmarmas  constraint fk_larmobs_lmarms);
alter table ptel_depen add constraint (foreign key (tel_plaza) 
    references morg  constraint org_plaza2);
alter table ptel_centrix add constraint (foreign key (tel_plaza) 
    references morg );
alter table esp_vehiculos add constraint (foreign key (veh_empresa) 
    references esp_empresas  constraint veemp);
alter table esp_vehiculos add constraint (foreign key (veh_marca) 
    references esp_marcas  constraint vemark);
alter table esp_expertos add constraint (foreign key (exp_empresa) 
    references esp_empresas  constraint exemp);
alter table esp_permisos add constraint (foreign key (per_claseper) 
    references esp_clase_permiso  constraint cper_codigo);
alter table esp_permisos add constraint (foreign key (per_aduana) 
    references esp_aduanas  constraint adu_codigo);
alter table esp_permisos add constraint (foreign key (per_empresa) 
    references esp_empresas  constraint peremp);
alter table esp_historial add constraint (foreign key (his_codigo,
    his_permiso) references esp_det_permisos  constraint hcod);
    
alter table esp_det_permisos add constraint (foreign key (dper_codigoper) 
    references esp_permisos  constraint per_codigo);
alter table esp_productos add constraint (foreign key (pro_grupo) 
    references esp_grupo_producto  constraint gru_codigo);
alter table esp_productos add constraint (foreign key (pro_umedida) 
    references esp_unidad_medida  constraint umed);
alter table esp_inventario add constraint (foreign key (inv_codigo,
    inv_licencia) references esp_det_licencias  constraint indet);
    
alter table esp_det_licencias add constraint (foreign key (dlic_codigolic) 
    references esp_licencias  constraint lic_codigo);
alter table esp_det_licencias add constraint (foreign key (dlic_producto) 
    references esp_productos  constraint pro_codigo);
alter table esp_licencias add constraint (foreign key (lic_seguro) 
    references esp_seguro  constraint seg_codigo);
alter table esp_licencias add constraint (foreign key (lic_claselic) 
    references esp_clase_licencia  constraint cla_codigo);
alter table esp_licencias add constraint (foreign key (lic_empresa) 
    references esp_empresas  constraint licemp);
alter table esp_seguro add constraint (foreign key (seg_asegura) 
    references esp_aseguradoras  constraint ase_codigo);
alter table esp_det_permisos add constraint (foreign key (dper_producto) 
    references esp_grupo_producto  constraint fk_per_producto);
    
alter table luni_detallesoli add constraint (foreign key (dets_solicitud) 
    references luni_solicitud  constraint det_soli);
alter table luni_detallesoli add constraint (foreign key (dets_uniforme) 
    references uniformes  constraint fk_dotac);
alter table luni_detallesoli add constraint (foreign key (dets_talla) 
    references luni_talla  constraint fk_dets_talla);
alter table luni_detsol_log add constraint (foreign key (detu_uniforme) 
    references uniformes  constraint fk_dota);
alter table luni_detsol_log add constraint (foreign key (detu_situacion) 
    references luni_situacion  constraint fk_detasit);
alter table luni_detsol_log add constraint (foreign key (detu_talla) 
    references luni_talla  constraint fk_detu_talla);
alter table luni_documento add constraint (foreign key (doc_situacion) 
    references luni_situacion  constraint fk_docsit);
alter table luni_documento add constraint (foreign key (doc_numero) 
    references luni_solicitud  constraint fk_docnum);
alter table luni_solicitud add constraint (foreign key (sol_comte) 
    references mper  constraint fk_sol_comte);
alter table lmun_lote1 add constraint (foreign key (lot_modelo) 
    references lmun_modelo  constraint fk_modelo_l);
alter table lmun_lote1 add constraint (foreign key (lot_calibre) 
    references lmun_calibre1  constraint fk_calibre_l);
alter table lmun_lote1 add constraint (foreign key (lot_fabrica) 
    references lmun_fabrica  constraint fk_fabrica_l);
alter table lmun_lote1 add constraint (foreign key (lot_color_laca) 
    references lmun_color  constraint fk_lot_col_laca);
alter table lmun_lote1 add constraint (foreign key (lot_tipo) 
    references lmun_tipo1  constraint fk_tipo_lote);
alter table l_municion add constraint (foreign key (mun_tipo,
    mun_lote) references lmun_lote1  constraint fk_t_lote);
alter table l_municion add constraint (foreign key (mun_situacion) 
    references lmun_situacion  constraint fk_situ);
alter table lmun_solicitud1 add constraint (foreign key (sol_tipo_sol) 
    references larm_tip_sol  constraint fk_soltipo);
alter table lmun_solicitud1 add constraint (foreign key (sol_uso) 
    references lmun_uso1  constraint fk_soluso);
alter table lmun_solicitud1 add constraint (foreign key (sol_carga) 
    references lmun_carga  constraint fksolcarga);
alter table lmun_det_solicitud add constraint (foreign key (det_tipo_mun) 
    references lmun_tipo1  constraint fk_tipo_m);
alter table lmun_det_solicitud add constraint (foreign key (det_calibre) 
    references lmun_calibre1  constraint fk_dal);
alter table lmun_det_solasigna add constraint (foreign key (deta_solicitud) 
    references lmun_solicitud1  constraint fk_detasig);
alter table lmun_det_cambiosit add constraint (foreign key (detc_solicitud) 
    references lmun_solicitud1  constraint fk_detsolcamsit);
alter table lmun_det_cambiosit add constraint (foreign key (detc_situacion) 
    references lmun_situacion  constraint fk_detcamsit);
alter table lmun_devolentre add constraint (foreign key (dev_uso) 
    references lmun_uso1  constraint fk_devouso);
alter table lmun_devolentre add constraint (foreign key (dev_carga) 
    references lmun_carga  constraint fk_devocarga);
alter table lmun_mov_solicitud add constraint (foreign key (mov_correla) 
    references lmun_correla  constraint fk_correla);
alter table lmun_mov_solicitud add constraint (foreign key (mov_solicitud) 
    references lmun_solicitud1  constraint fk_mov_soli);
alter table lmun_movimientos add constraint (foreign key (movi_uso) 
    references lmun_uso1  constraint fk_movisuao);
alter table lmun_movimientos add constraint (foreign key (movi_carga) 
    references lmun_carga  constraint fk_movicarga);
alter table lmun_asignacion add constraint (foreign key (asig_uso) 
    references lmun_uso1  constraint fk_asiguso);
alter table lmun_asignacion add constraint (foreign key (asig_carga) 
    references lmun_carga  constraint fk_asigcarga);
alter table lmun_cambio_sit add constraint (foreign key (cam_uso) 
    references lmun_uso1  constraint fk_camuso);
alter table lmun_cambio_sit add constraint (foreign key (cam_carga) 
    references lmun_carga  constraint fk_camcarga);
alter table lmun_cambio_sit add constraint (foreign key (cam_situacion) 
    references lmun_situacion  constraint fk_camsitua);
alter table lmun_trasint add constraint (foreign key (tras_uso) 
    references lmun_uso1  constraint fk_trasuso);
alter table lmun_trasint add constraint (foreign key (tras_carga) 
    references lmun_carga  constraint fk_tras_carga);
alter table con_boleta_dp add constraint (foreign key (bol_id_con) 
    references con_contrato );
alter table emer_julia add constraint (foreign key (emer_municipio) 
    references depmun );
alter table emer_julia add constraint (foreign key (emer_comando) 
    references mdep );
alter table lmun_det_conoc_fab add constraint (foreign key (detf_conocimiento) 
    references lmun_conoc_fab  constraint fkdetconfab);
alter table lmun_tipo1 add constraint (foreign key (tip_usuario) 
    references mper  constraint fk_tipo);
alter table lmun_calibre1 add constraint (foreign key (cal_usuario) 
    references mper  constraint fk_calibre);
alter table lmun_marca add constraint (foreign key (mar_usuario) 
    references mper  constraint fk_marca);
alter table lmun_modelo add constraint (foreign key (mod_usuario) 
    references mper  constraint fk_modelo);
alter table lmun_fabrica add constraint (foreign key (fab_usuario) 
    references mper  constraint fk_fab_usuario);
alter table lmun_lote1 add constraint (foreign key (lot_usuario) 
    references mper  constraint fk_lot_usuario);
alter table lmun_lote1 add constraint (foreign key (lot_dep) 
    references mdep  constraint fk_dep_lot);
alter table lmun_situacion add constraint (foreign key (sit_usuario) 
    references mper  constraint fk_situacion);
alter table l_municion add constraint (foreign key (mun_plaza) 
    references morg  constraint fk_mun_plaza);
alter table l_municion add constraint (foreign key (mun_usuario) 
    references mper  constraint fk_mun_usuario);
alter table lmun_uso1 add constraint (foreign key (uso_usuario) 
    references mper  constraint uso_usuario);
alter table lmun_carga add constraint (foreign key (car_usuario) 
    references mper  constraint car_usuario);
alter table lmun_solicitud1 add constraint (foreign key (sol_dependencia) 
    references mdep  constraint fk_soldependencia);
alter table lmun_solicitud1 add constraint (foreign key (sol_plaza) 
    references morg  constraint fk_solplaza);
alter table lmun_solicitud1 add constraint (foreign key (sol_logistico) 
    references mper  constraint fk_sologistico);
alter table lmun_solicitud1 add constraint (foreign key (sol_inspector) 
    references mper  constraint fk_solnpscotf);
alter table lmun_solicitud1 add constraint (foreign key (sol_comandante) 
    references mper  constraint fk_solcomandante);
alter table lmun_solicitud1 add constraint (foreign key (sol_usuario) 
    references mper  constraint fk_solus);
alter table lmun_det_solicitud add constraint (foreign key (det_usuario) 
    references mper  constraint fk_det_usuario);
alter table lmun_det_solasigna add constraint (foreign key (deta_usuario) 
    references mper  constraint fk_detausuario);
alter table lmun_det_cambiosit add constraint (foreign key (detc_usuario) 
    references mper  constraint fk_detcusuario);
alter table lmun_devolentre add constraint (foreign key (dev_usuario) 
    references mper  constraint fk_devper);
alter table lmun_devolentre add constraint (foreign key (dev_entregue) 
    references mper  constraint fk_deventre);
alter table lmun_devolentre add constraint (foreign key (dev_recibi) 
    references mper  constraint fk_devreci);
alter table lmun_devolentre add constraint (foreign key (dev_dependencia) 
    references mdep  constraint fk_devdep);
alter table lmun_mov_solicitud add constraint (foreign key (mov_usuario) 
    references mper  constraint fkmov);
alter table lmun_movimientos add constraint (foreign key (movi_plaza) 
    references morg  constraint fk_moviplaza);
alter table lmun_movimientos add constraint (foreign key (movi_usuario) 
    references mper  constraint fk_moviperso);
alter table lmun_asignacion add constraint (foreign key (asig_dependencia) 
    references mdep  constraint fk_asigdepend);
alter table lmun_asignacion add constraint (foreign key (asig_plaza) 
    references morg  constraint fk_asigplaza);
alter table lmun_asignacion add constraint (foreign key (asig_usuario) 
    references mper  constraint fk_asigusaru);
alter table lmun_cambio_sit add constraint (foreign key (cam_dependencia) 
    references mdep  constraint fk_camdepend);
alter table lmun_cambio_sit add constraint (foreign key (cam_plaza) 
    references morg  constraint fk_camplaza);
alter table lmun_cambio_sit add constraint (foreign key (cam_usuario) 
    references mper  constraint fk_camusuario);
alter table lmun_trasint add constraint (foreign key (tras_entrega) 
    references mper  constraint fk_trasent);
alter table lmun_trasint add constraint (foreign key (tras_recibe) 
    references mper  constraint fk_trasrec);
alter table lmun_trasint add constraint (foreign key (tras_plaza) 
    references morg  constraint fk_trasplaza);
alter table lmun_trasint add constraint (foreign key (tras_dependencia) 
    references mdep  constraint fk_tras_dep);
alter table lmun_trasint add constraint (foreign key (tras_usuario) 
    references mper  constraint fk_tras_usuario);
alter table dfdes_vivibanco add constraint (foreign key (dfvivi_codigo) 
    references descuentos );
alter table emer_lisa add constraint (foreign key (emer_municipio) 
    references depmun );
alter table emer_lisa add constraint (foreign key (emer_comando) 
    references mdep );
alter table lmun_det_conocimiento add constraint (foreign key 
    (detc_dep) references mdep  constraint fk_detc_dependencia);
    
alter table lmun_det_conocimiento add constraint (foreign key 
    (detc_usuario) references mper  constraint fkdetcusuario);
    
alter table lmun_det_conoc_fab add constraint (foreign key (detf_usuario) 
    references mper  constraint fkdetfabus);
alter table lmun_conoc_fab add constraint (foreign key (conf_entregue) 
    references mper  constraint fkconfentregue);
alter table lmun_conoc_fab add constraint (foreign key (conf_recibi) 
    references mper  constraint fkconfrecibi);
alter table lmun_conoc_fab add constraint (foreign key (conf_vo) 
    references mper  constraint fkconfvo);
alter table lmun_conoc_fab add constraint (foreign key (conf_conforme) 
    references mper  constraint fkconfconforme);
alter table lmun_conoc_fab add constraint (foreign key (conf_usuario) 
    references mper  constraint fkconfusuario);
alter table pcapa_det_solicitud add constraint (foreign key 
    (cap_solcod) references pocur_solicitud  constraint fk_det_cap_sol);
    
alter table pcapa_det_solicitud add constraint (foreign key 
    (cap_grado) references grados  constraint fk_det_cap_gra);
    
alter table pcapa_det_solicitud add constraint (foreign key 
    (cap_pais) references paises  constraint fk_det_cap_pai);
    
alter table pocur_solicitud add constraint (foreign key (sol_dependencia) 
    references mdep  constraint fk_cur_sol_dep);
alter table pdcapacitacion add constraint (foreign key (cap_solicitud) 
    references pocur_solicitud  constraint fk_dcap_sol);
alter table pdcapacitacion add constraint (foreign key (cap_grado) 
    references grados  constraint fk_dcap_gra);
alter table pdcapacitacion add constraint (foreign key (cap_pais) 
    references paises  constraint fk_dcap_pai);
alter table ocur_det_solicitud add constraint (foreign key (cur_solcod) 
    references pocur_solicitud  constraint fk_det_cur_sol);
alter table ocur_det_solicitud add constraint (foreign key (cur_grado) 
    references grados  constraint fk_det_cur_gra);
alter table ocur_det_solicitud add constraint (foreign key (cur_curso) 
    references cursos  constraint fk_det_cur_curso);
alter table ocur_det_solicitud add constraint (foreign key (cur_escuela) 
    references escuelas  constraint fk_det_cur_escuela);
alter table escuelas add constraint (foreign key (esc_pais) 
    references paises  constraint esc_pasi);
alter table luni_asignacion add constraint (foreign key (asi_uniforme) 
    references uniformes  constraint asi_uniforme);
alter table luni_asignacion add constraint (foreign key (asi_catalogo) 
    references mper  constraint asi_catalogo);
alter table luni_asignacion add constraint (foreign key (asi_dependencia) 
    references mdep  constraint asi_dependencia);
alter table luni_asignacion add constraint (foreign key (asi_usuario) 
    references mper  constraint asi_usuario);
alter table arco_capacitaciones add constraint (foreign key 
    (acap_catalogo) references mper  constraint fk_acap_catalogo);
    
alter table arco_cond add constraint (foreign key (conm_codigo) 
    references cond  constraint fk_conm_codigo);
alter table arco_dcon add constraint (foreign key (acon_codigo) 
    references cond  constraint fk_acon_codigo);
alter table arco_dcur add constraint (foreign key (acur_codigo) 
    references cursos  constraint fk_acur_codigo);
alter table arco_demeritos add constraint (foreign key (dem_grado) 
    references grados  constraint fk_dem_grado);
alter table dtx_equipo add constraint (foreign key (eq_acc) 
    references dtx_accesorio  constraint fk_equi_acc);
alter table arco_grados add constraint (foreign key (arcgra_codigo) 
    references grados  constraint fk_arcgra_codigo);
alter table arco_pafes add constraint (foreign key (pafe_grado) 
    references grados  constraint fk_pafe_grado);
alter table arco_ponderacion add constraint (foreign key (pon_grado) 
    references grados  constraint fk_pon_grado);
alter table arco_sanciones add constraint (foreign key (asan_catalogo) 
    references mper  constraint fk_asan_catalogo);
alter table arco_dcur add constraint (foreign key (acur_catalogo) 
    references mper  constraint fk_acur_catalogo);
alter table arco_evads add constraint (foreign key (evad_catalogo) 
    references mper  constraint fk_evad_catalogo);
alter table arco_notas add constraint (foreign key (not_catalogo) 
    references mper  constraint fk_not_catalogo);
alter table arco_obligatorio add constraint (foreign key (aobli_catalogo) 
    references mper  constraint fk_aobli_catalogo);
alter table arco_pafes add constraint (foreign key (pafe_catalogo) 
    references mper  constraint fk_pafe_catalogo);
alter table arco_cursos add constraint (foreign key (curm_codigo) 
    references cursos  constraint fk_curm_codigo);
alter table coc_coordenadas add constraint (foreign key (coo_reporte,
    coo_anio,coo_dep) references coc_reporte  constraint fk_coc_coord_rep);
    
alter table coc_personal add constraint (foreign key (per_reporte,
    per_anio,per_dep) references coc_reporte  constraint fk_perreporte);
    
alter table coc_reporte add constraint (foreign key (rep_mision) 
    references coc_mision  constraint fk_misioncoc);
alter table coc_vehiculo_rep add constraint (foreign key (veh_tipo) 
    references coc_tipo_veh  constraint fk_tipoveh);
alter table coc_vehiculo_rep add constraint (foreign key (veh_reporte,
    veh_anio,veh_dep) references coc_reporte  constraint fk_cocveh_reporte);
    
alter table coc_reporte add constraint (foreign key (rep_resp_gra) 
    references grados  constraint coc_grados);
alter table coc_reporte add constraint (foreign key (rep_comte_gra) 
    references grados  constraint coc_grados2);
alter table coc_reporte add constraint (foreign key (rep_ops_gra) 
    references grados  constraint coc_grados3);
alter table fin_personal add constraint (foreign key (fper_grado) 
    references grados  constraint fper_grado);
alter table fin_personal add constraint (foreign key (fper_arma) 
    references armas  constraint fper_arma);
alter table coc_dman add constraint (foreign key (dman_dep) 
    references mdep  constraint coc_dman_dep_llave);
alter table fin_contrato add constraint (foreign key (con_catalogo) 
    references fin_personal  constraint con_catalogo1);
alter table fin_contrato add constraint (foreign key (con_escuadron) 
    references fin_escuadrones  constraint con_escuadron);
alter table fin_escuadrones add constraint (foreign key (esc_dependencia) 
    references mdep  constraint esc_dependencia);
alter table dtx_distribucion add constraint (foreign key (dist_dman_codigo,
    dist_dman_dep) references coc_dman );
alter table dtx_distribucion add constraint (foreign key (dist_eq_art,
    dist_eq_acc) references dtx_equipo );
alter table bin_inmueble add constraint (foreign key (inm_situacion) 
    references bin_situacion  constraint fk_sitinm);
alter table bin_inmueble add constraint (foreign key (inm_tipo) 
    references bin_tipos  constraint fk_tipoinm);
alter table bin_inmueble add constraint (foreign key (inm_adquisicion) 
    references bin_adquisicion  constraint fk_adqui_inm);
alter table bin_inmueble add constraint (foreign key (inm_depto) 
    references dep_mun  constraint fk_deptos);
alter table bin_inmueble add constraint (foreign key (inm_municipio) 
    references dep_mun  constraint fk_munis);
alter table bin_incidencia add constraint (foreign key (inc_inmueble) 
    references bin_inmueble  constraint fk_inm3);
alter table bin_ubicacion add constraint (foreign key (ubi_inmueble) 
    references bin_inmueble  constraint fk_inmueb);
alter table bin_incidencia add constraint (foreign key (inc_usuario) 
    references mper  constraint fk_usuinm);
alter table bin_asignacion add constraint (foreign key (asi_inmueble) 
    references bin_inmueble  constraint fk_inm1);
alter table bin_accion add constraint (foreign key (acc_usuario) 
    references mper  constraint fk_usu45);
alter table bin_asignacion add constraint (foreign key (asi_responsable) 
    references mper  constraint fk_respon);
alter table bin_asignacion add constraint (foreign key (asi_dependencia) 
    references mdep  constraint fk_depe1);
alter table bin_asignacion add constraint (foreign key (asi_autentica) 
    references mper  constraint fk_aunt);
alter table cor_corr_seg add constraint (foreign key (seg_oficina) 
    references cor_oficinas  constraint segoficina);
alter table cor_ubicacion_docum add constraint (foreign key 
    (ubi_documento) references cor_documento  constraint ubi_documento);
    
alter table cor_documento add constraint (foreign key (doc_oficina) 
    references cor_oficinas  constraint docoficina);
alter table cor_documento add constraint (foreign key (doc_tipo) 
    references cor_tipo_docum  constraint dotipo);
alter table cor_documento add constraint (foreign key (doc_proposito) 
    references cor_proposito  constraint doc_proposito);
alter table cor_oficinas add constraint (foreign key (of_dependencia) 
    references mdep  constraint of_depende);
alter table lmun_detalle_solicitud add constraint (foreign key 
    (sdet_tipo_codigo) references lmun_tipo  on delete cascade 
    constraint fk_sdet_tipo_codigo_tipo_codigo);
alter table lmun_detalle_solicitud add constraint (foreign key 
    (sdet_uso_codigo) references lmun_uso  on delete cascade 
    constraint fk_sdet_uso_codigo_uso_codigo);
alter table lmun_detalle_solicitud add constraint (foreign key 
    (sdet_cal_codigo) references lmun_calibre  on delete cascade 
    constraint pf_sdet_cal_codigo_cal_codigo);
alter table lmun_detalle_solicitud add constraint (foreign key 
    (sdet_sol_codigo,sdet_sol_dep_llave) references lmun_solicitud 
     on delete cascade constraint fk_sdet_sol_codigo_sol_codigo);
    
alter table lmun_lote_asig add constraint (foreign key (asig_lote_codigo) 
    references lmun_lote  constraint fk_lote_codigo);
alter table lmun_ent_sal add constraint (foreign key (es_con_codigo,
    es_con_dep_llave) references lmun_conocimiento  on delete 
    cascade constraint fk_es_con_codigo_con_codigo);
alter table lmun_ent_sal add constraint (foreign key (es_uso_codigo) 
    references lmun_uso  on delete cascade constraint pf_lote_uso_codigo_uso_codigo);
    
alter table lmun_ent_sal add constraint (foreign key (es_cal_codigo) 
    references lmun_calibre  on delete cascade constraint pf_lote_cal_codigo_cal_codigo);
    
alter table lmun_ent_sal add constraint (foreign key (es_tipo_codigo) 
    references lmun_tipo  on delete cascade constraint pf_lote_tipo_codigo_tipo_codigo);
    
alter table lmun_ent_sal add constraint (foreign key (es_lote_codigo) 
    references lmun_lote  on delete cascade constraint pf_lote_codigo);
    
alter table lmun_solicitud add constraint (foreign key (sol_dep_llave) 
    references mdep  on delete cascade constraint pf_sol_dep_llave_dep_llave);
    
alter table lmun_conocimiento add constraint (foreign key (con_dep_llave) 
    references mdep  on delete cascade constraint pf_con_dep_llave_dep_llave);
    
alter table lmun_lote_asig add constraint (foreign key (asig_dep_llave) 
    references mdep  constraint fk_dep_llave);
alter table mag_egresos add constraint (foreign key (egr_departamento) 
    references dep_mun  constraint fk_egr_depto);
alter table mag_egresos add constraint (foreign key (egr_municipio) 
    references dep_mun  constraint fk_egr_muni);
alter table mag_inventario add constraint (foreign key (inv_departamento) 
    references dep_mun  constraint fk_inv_depto);
alter table mag_inventario add constraint (foreign key (inv_municipio) 
    references dep_mun  constraint fk_inv_muni);
alter table mag_inventario add constraint (foreign key (inv_insumo) 
    references mag_insumos  constraint fk_insumo);
alter table mag_det_ingreso add constraint (foreign key (det_insumo) 
    references mag_insumos  constraint fk_ing_insu);
alter table mag_det_ingreso add constraint (foreign key (det_id_ingreso) 
    references mag_ingresos  constraint fk_ing);
alter table mag_det_egreso add constraint (foreign key (det_insumo_eg) 
    references mag_insumos  constraint fk_ins);
alter table mag_det_egreso add constraint (foreign key (det_id_egreso) 
    references mag_egresos  constraint fk_egre);
alter table mag_ingresos add constraint (foreign key (ing_departamento) 
    references dep_mun  constraint fk_ind_depto);
alter table mag_ingresos add constraint (foreign key (ing_municipio) 
    references dep_mun  constraint fk_ing_muni);
alter table mag_egresos add constraint (foreign key (egr_usuario) 
    references mper  constraint fk_egr_usuario);
alter table mag_egresos add constraint (foreign key (egr_dependencia) 
    references mdep  constraint fk_egr_dependencia);
alter table mag_inventario add constraint (foreign key (inv_dependencia) 
    references mdep  constraint fk_inv_dep);
alter table mag_ingresos add constraint (foreign key (ing_usuario) 
    references mper  constraint fk_ing_usuario);
alter table mag_ingresos add constraint (foreign key (ing_dependencia) 
    references mdep  constraint fk_ing_dependencia);
alter table lmun_asig_arm add constraint (foreign key (asig_lot_cod,
    asig_lot_tipo) references larm_lot  constraint fk_asig_lot_arm);
    
alter table arco_escalafon add constraint (foreign key (esca_cat) 
    references mper  constraint fk_esca_cat);
alter table bin_asignacion add constraint (foreign key (asi_usuario) 
    references mper  constraint fk_usu1);
alter table bin_asignacion add constraint (foreign key (asi_resp_grado) 
    references grados  constraint fk_gra1);
alter table bin_asignacion add constraint (foreign key (asi_aut_grado) 
    references grados  constraint fk_gra2);
alter table eva_evaluacion add constraint (foreign key (eva_linea) 
    references eva_linea );
alter table eva_evaluacion add constraint (foreign key (eva_grado3) 
    references grados );
alter table eva_evaluacion add constraint (foreign key (eva_grado2) 
    references grados );
alter table inv_detalle add constraint (foreign key (det_articulo) 
    references inv_articulo  constraint fk_det_articulo);
alter table eva_evaluacion add constraint (foreign key (eva_grado1) 
    references grados );
alter table inv_asig_repre_provee add constraint (foreign key 
    (asig_proveedor) references inv_proveedor  constraint fk_asig_provee);
    
alter table inv_asig_repre_provee add constraint (foreign key 
    (asig_representante) references inv_representante  constraint 
    fk_asig_repre);
alter table eva_evaluacion add constraint (foreign key (eva_cat3) 
    references mper );
alter table inv_articulo add constraint (foreign key (art_grupo) 
    references inv_grupo  constraint fk_art_grupo);
alter table inv_detalle add constraint (foreign key (det_grupo) 
    references inv_grupo  constraint fk_det_grupo);
alter table inv_grupo add constraint (foreign key (grup_clase) 
    references inv_clase  constraint fk_clases);
alter table inv_lote add constraint (foreign key (lot_articulo) 
    references inv_articulo  constraint lotarticulo);
alter table inv_formulario add constraint (foreign key (for_representante) 
    references inv_representante  constraint forrepresentante);
    
alter table inv_formulario add constraint (foreign key (for_proveedor) 
    references inv_proveedor  constraint forproveedor);
alter table inv_lote add constraint (foreign key (lot_dependencia) 
    references mdep  constraint lotdependencia);
alter table inv_formulario add constraint (foreign key (for_dep_recibe) 
    references mdep  constraint for_dep_recibe);
alter table inv_formulario add constraint (foreign key (for_dep_entrega) 
    references mdep  constraint for_dep_entrega);
alter table dtx_accesorio add constraint (foreign key (acc_marca) 
    references dtx_marca  constraint fk_acc_marca);
alter table dtx_articulo add constraint (foreign key (art_marca) 
    references dtx_marca  constraint fk_art_marca);
alter table eva_evaluacion add constraint (foreign key (eva_cat2) 
    references mper );
alter table eva_evaluacion add constraint (foreign key (eva_cat1) 
    references mper );
alter table eva_evaluacion add constraint (foreign key (eva_arma3) 
    references armas );
alter table eva_evaluacion add constraint (foreign key (eva_arma2) 
    references armas );
alter table eva_evaluacion add constraint (foreign key (eva_arma1) 
    references armas );
alter table eva_notas add constraint (foreign key (not_usuario) 
    references mper );
alter table eva_notas add constraint (foreign key (not_evaluacion) 
    references eva_evaluacion );
alter table eva_notas add constraint (foreign key (not_factores) 
    references eva_factores );
alter table respafe add constraint (foreign key (not_catalogo) 
    references res_personal );
alter table resascensos add constraint (foreign key (asc_catalogo) 
    references res_personal );
alter table resdfam add constraint (foreign key (resfam_catalogo) 
    references res_personal );
alter table llamada_atencion_mod add constraint (foreign key 
    (id_llamada) references llamada_atencion );
alter table exp_solicitud_detalle add constraint (foreign key 
    (sdet_sol_codigo,sdet_sol_dep_llave) references exp_solicitud 
    );
alter table exp_solicitud_detalle add constraint (foreign key 
    (sdet_tipo_codigo) references exp_tipo );
alter table exp_solicitud_detalle add constraint (foreign key 
    (sdet_uso_codigo) references exp_uso );
alter table exp_solicitud add constraint (foreign key (sol_pro_codigo) 
    references exp_proyecto );
alter table vlh_fag_caracteristicas add constraint (foreign 
    key (fag_ubicacion_exacta) references con_mdep );
alter table vlh_fag_caracteristicas add constraint (foreign 
    key (fag_apu) references vlh_apu );
alter table vlh_fag_caracteristicas add constraint (foreign 
    key (fag_neumaticos) references vlh_neumaticos_fag );
alter table vlh_fag_caracteristicas add constraint (foreign 
    key (fag_baterias) references vlh_baterias );
alter table coc_producto_operacion add constraint (foreign key 
    (prod_ope_operacion) references coc_operaciones );
alter table exp_ent_sal add constraint (foreign key (es_uso_codigo) 
    references exp_uso );
alter table exp_ent_sal add constraint (foreign key (es_tipo_codigo) 
    references exp_tipo );
alter table religion_segcontalu add constraint (foreign key 
    (rel_religions) references religiones  constraint rel_seg);
    
alter table mper_otros add constraint (foreign key (oper_catalogo) 
    references mper  constraint fk_mper_oper_catalogo);
alter table sig_agregados add constraint (foreign key (agr_dep) 
    references mdep );
alter table con_boleta add constraint (foreign key (bol_cat_comte) 
    references mper );
alter table con_boleta add constraint (foreign key (bol_cat_revisor) 
    references mper );
alter table sig_agregados add constraint (foreign key (agr_cat) 
    references mper );
alter table sig_destinos add constraint (foreign key (dest_dep) 
    references mdep );
alter table sig_unidades add constraint (foreign key (uni_dep) 
    references mdep );
alter table con_contrato add constraint (foreign key (con_dependencia) 
    references con_mdep );
alter table sig_companias add constraint (foreign key (com_uni) 
    references sig_unidades );
alter table con_contrato add constraint (foreign key (con_contratado) 
    references con_mper_contratos );
alter table sig_personal_contrato add constraint (foreign key 
    (con_dep) references mdep );
alter table con_observaciones add constraint (foreign key (obs_contrato) 
    references con_contrato );
alter table con_seguimiento add constraint (foreign key (seg_contrato) 
    references con_contrato );
alter table con_boleta add constraint (foreign key (bol_contrato) 
    references con_contrato );
alter table con_mdep add constraint (foreign key (con_dep_unidad) 
    references con_unidades );
alter table con_asignacion_plaza add constraint (foreign key 
    (asig_plaza) references con_plaza );
alter table con_asignacion_plaza add constraint (foreign key 
    (asig_subarea) references con_subareas );
alter table con_asignacion_plaza add constraint (foreign key 
    (asig_area) references con_area );
alter table con_asignacion_plaza add constraint (foreign key 
    (asig_manual) references con_manual );
alter table con_contrato add constraint (foreign key (con_minuta) 
    references con_minuta );
alter table con_contrato add constraint (foreign key (con_asignacion) 
    references con_asignacion_plaza );
alter table con_usuarios add constraint (foreign key (usu_dependencia) 
    references con_mdep );
alter table con_area add constraint (foreign key (area_descripcion) 
    references con_desc_area );
alter table con_subareas add constraint (foreign key (sub_descripcion) 
    references con_desc_subareas );
alter table con_juridico add constraint (foreign key (jur_cat_vice) 
    references mper );
alter table con_juridico add constraint (foreign key (jur_cat_ministro) 
    references mper );
alter table con_ef_personal add constraint (foreign key (ef_unidadejecutora) 
    references con_unidades );
alter table cci_est_fuerza add constraint (foreign key (est_destino) 
    references cci_est_destino );
alter table vlh_linea add constraint (foreign key (lin_marca) 
    references vlh_marcas );
alter table vlh_carretones add constraint (foreign key (carr_estado) 
    references vlh_estado_vehiculo );
alter table vlh_carretones add constraint (foreign key (carr_dependencia) 
    references con_mdep );
alter table vlh_carretones add constraint (foreign key (carr_ubicacion) 
    references con_mdep );
alter table vlh_carretones add constraint (foreign key (carr_adquisicion) 
    references vlh_origen_vehiculo );
alter table vlh_carretones add constraint (foreign key (carr_llantas) 
    references vlh_llantas );
alter table vlh_equipo_terrestre_fag add constraint (foreign 
    key (equ_tipo) references vlh_t_vehiculo );
alter table vlh_equipo_terrestre_fag add constraint (foreign 
    key (equ_ubicacion) references con_mdep );
alter table vlh_equipo_terrestre_fag add constraint (foreign 
    key (equ_adquisicion) references vlh_origen_vehiculo );
alter table vlh_equipo_terrestre_fag add constraint (foreign 
    key (equ_motor) references vlh_motor_fag );
alter table vlh_equipo_terrestre_fag add constraint (foreign 
    key (equ_fabricacion) references paises );
alter table vlh_equipo_terrestre_fag add constraint (foreign 
    key (equ_neumatico) references vlh_llantas );
alter table vlh_equipo_terrestre_fag add constraint (foreign 
    key (equ_dependencia) references con_mdep );
alter table vlh_equipo_terrestre_fag add constraint (foreign 
    key (equ_baterias) references vlh_baterias );
alter table vlh_embarcacion add constraint (foreign key (emb_estado) 
    references vlh_estado_vehiculo );
alter table vlh_embarcacion add constraint (foreign key (emb_dependencia) 
    references con_mdep );
alter table vlh_embarcacion add constraint (foreign key (emb_fabricacion) 
    references paises );
alter table vlh_embarcacion add constraint (foreign key (emb_ubicacion) 
    references con_mdep );
alter table vlh_embarcacion add constraint (foreign key (emb_origen) 
    references vlh_origen_vehiculo );
alter table vlh_remolques add constraint (foreign key (rem_ubicacion) 
    references con_mdep );
alter table vlh_remolques add constraint (foreign key (rem_neumaticos) 
    references vlh_llantas );
alter table vlh_remolques add constraint (foreign key (rem_estado) 
    references vlh_estado_vehiculo );
alter table vlh_remolques add constraint (foreign key (rem_dep) 
    references con_mdep );
alter table vlh_remolques add constraint (foreign key (rem_asig) 
    references vlh_embarcacion );
alter table vlh_remolques add constraint (foreign key (rem_origen) 
    references vlh_origen_vehiculo );
alter table vlh_caract_vehiculos add constraint (foreign key 
    (car_traccion_vehiculo) references vlh_traccion_vehiculo 
    );
alter table vlh_caract_vehiculos add constraint (foreign key 
    (car_lubri_consumo) references vlh_cons_lubri_vehi );
alter table vlh_caract_vehiculos add constraint (foreign key 
    (car_comb_consumo) references vlh_cons_comb_vehi );
alter table vlh_caract_vehiculos add constraint (foreign key 
    (car_tipo_cisterna) references vlh_t_cisterna );
alter table vlh_caract_vehiculos add constraint (foreign key 
    (car_llantas_vehiculo) references vlh_llantas );
alter table vlh_caract_vehiculos add constraint (foreign key 
    (car_tipo_combustible) references vlh_tipo_combustible );
    
alter table vlh_caract_vehiculos add constraint (foreign key 
    (car_tipo_carroceria) references vlh_tipo_carroceria );
alter table vlh_caract_vehiculos add constraint (foreign key 
    (car_ubicacion_vehiculo) references con_mdep );
alter table vlh_caract_vehiculos add constraint (foreign key 
    (car_marca_vehiculo) references vlh_marcas );
alter table vlh_caract_vehiculos add constraint (foreign key 
    (car_t_vehiculo) references vlh_t_vehiculo );
alter table vlh_caract_vehiculos add constraint (foreign key 
    (car_dependencia) references con_mdep );
alter table vlh_caract_vehiculos add constraint (foreign key 
    (car_bateria) references vlh_baterias );
alter table vlh_caract_vehiculos add constraint (foreign key 
    (car_transmision_vehiculo) references vlh_transmision_vehiculo 
    );
alter table vlh_caract_vehiculos add constraint (foreign key 
    (car_estado_vehiculo) references vlh_estado_vehiculo );
alter table vlh_caract_vehiculos add constraint (foreign key 
    (car_origen_vehiculo) references vlh_origen_vehiculo );
alter table vlh_fag_caracteristicas add constraint (foreign 
    key (fag_aeronave) references vlh_aeronave );
alter table vlh_fag_caracteristicas add constraint (foreign 
    key (fag_forma_adquisicion) references vlh_origen_vehiculo 
    );
alter table vlh_fag_caracteristicas add constraint (foreign 
    key (fag_hidraulico) references vlh_hidraulico_fag );
alter table vlh_fag_caracteristicas add constraint (foreign 
    key (fag_aceite) references vlh_aceite_fag );
alter table vlh_fag_caracteristicas add constraint (foreign 
    key (fag_combustible) references vlh_combustible_fag );
alter table vlh_fag_caracteristicas add constraint (foreign 
    key (fag_motor) references vlh_motor_fag );
alter table vlh_fag_caracteristicas add constraint (foreign 
    key (fag_estado) references vlh_estado_vehiculo );
alter table vlh_fag_caracteristicas add constraint (foreign 
    key (fag_fabricacion) references paises );
alter table vlh_fag_caracteristicas add constraint (foreign 
    key (fag_dependencia) references con_mdep );
alter table coc_mensaje add constraint (foreign key (men_ope_pla_cod) 
    references coc_ope_planificada );
alter table amp_asig_propietario add constraint (foreign key 
    (asig_propietario_cui) references amp_registro_personal );
    
alter table amp_asig_propietario add constraint (foreign key 
    (asig_localidad_lote) references amp_ubicacion_personal );
    
alter table gpl_asig_mision add constraint (foreign key (ami_mision) 
    references gpl_t_comision  constraint fker45);
alter table farma_facturacion add constraint (foreign key (fac_dep) 
    references mdep );
alter table rm_registros add constraint (foreign key (reg_dep_nacimiento) 
    references depmun );
alter table farma_dependencias_asignadas add constraint (foreign 
    key (dep_asig_dep) references mdep );
alter table rm_registros add constraint (foreign key (reg_muni_nacimiento) 
    references depmun );
alter table rm_registros add constraint (foreign key (reg_religion) 
    references religiones );
alter table rm_registros add constraint (foreign key (reg_lugar_entrenamiento) 
    references res_mdep );
alter table sig_comisiones add constraint (foreign key (com_dep) 
    references mdep );
alter table sig_com_asig add constraint (foreign key (asi_asig) 
    references mper );
alter table sig_com_asig add constraint (foreign key (asi_com) 
    references sig_comisiones );
alter table sig_fuerza add constraint (foreign key (fue_destino) 
    references sig_destinos );
alter table sig_asig_companias add constraint (foreign key (asi_com) 
    references sig_companias );
alter table rm_registros add constraint (foreign key (reg_profesion) 
    references re22_puestos );
alter table rm_registros add constraint (foreign key (reg_etnia) 
    references etnias );
alter table rm_beneficiarios add constraint (foreign key (ben_catalogo) 
    references rm_registros );
alter table rm_beneficiarios add constraint (foreign key (ben_parentesco) 
    references parentescos );
alter table rm_cuenta add constraint (foreign key (cuenta_cat) 
    references rm_registros );
alter table rm_asistencia add constraint (foreign key (asi_catalogo) 
    references rm_registros );
alter table ciber_inventario add constraint (foreign key (inv_so) 
    references ciber_sistema_operativo );
alter table ciber_inventario add constraint (foreign key (inv_procesador) 
    references ciber_procesador );
alter table ciber_inventario add constraint (foreign key (inv_ram) 
    references ciber_ram );
alter table farma_orden_compra add constraint (foreign key (ord_comp_dep) 
    references mdep );
alter table farma_orden_compra add constraint (foreign key (ord_comp_cont) 
    references far_contrato );
alter table sig_soporteotr add constraint (foreign key (otr_dependencia) 
    references mdep );
alter table sig_soporteotr add constraint (foreign key (otr_marca) 
    references sig_marcas );
alter table sig_soporteotr add constraint (foreign key (otr_tecnico) 
    references mper );
alter table sig_soporteimp add constraint (foreign key (imp_dependencia) 
    references mdep );
alter table sig_soporteimp add constraint (foreign key (imp_marca) 
    references sig_marcas );
alter table sig_soporteimp add constraint (foreign key (imp_tecnico) 
    references mper );
alter table sig_soportecpu add constraint (foreign key (cpu_dependencia) 
    references mdep );
alter table sig_soportecpu add constraint (foreign key (cpu_tecnico) 
    references mper );
alter table sig_soportemon add constraint (foreign key (mon_dependencia) 
    references mdep );
alter table sig_soportemon add constraint (foreign key (mon_marca) 
    references sig_marcas );
alter table sig_soportemon add constraint (foreign key (mon_tecnico) 
    references mper );
alter table sig_novedades add constraint (foreign key (nov_dependencia) 
    references mdep );
alter table sig_novedades add constraint (foreign key (nov_catalogo) 
    references mper );
alter table sig_jefes_servicio add constraint (foreign key (jefe_dependencia) 
    references mdep );
alter table sig_jefes_servicio add constraint (foreign key (jefe_catalogo) 
    references mper );
alter table sig_jefes_servicio add constraint (foreign key (jefe_grado) 
    references grados );
alter table sig_jefes_servicio add constraint (foreign key (jefe_arma) 
    references armas );
alter table sig_personal_contrato add constraint (foreign key 
    (con_grado) references grados );
alter table smg_historial_mantenimiento add constraint (foreign 
    key (mant_mant) references smg_tipos_mantenimiento );
alter table smg_historial_mantenimiento add constraint (foreign 
    key (mant_fusil) references lmarmas );
alter table smg_historial_mantenimiento add constraint (foreign 
    key (mant_cat) references mper );
alter table smg_historial_disparos add constraint (foreign key 
    (dis_mot) references smg_motivos );
alter table smg_historial_disparos add constraint (foreign key 
    (dis_fusil) references lmarmas );
alter table farma_orden_compra add constraint (foreign key (ord_comp_prov) 
    references far_proveedor );
alter table farma_compra_asignada add constraint (foreign key 
    (comp_asig_pres) references farma_presentaciones );
alter table farma_compra_asignada add constraint (foreign key 
    (comp_asig_ord_id) references farma_orden_compra );
alter table ciber_inventario add constraint (foreign key (inv_office) 
    references ciber_office );
alter table ciber_inventario add constraint (foreign key (inv_almacenamiento) 
    references ciber_disco_duro );
alter table farma_presentacion_asignada add constraint (foreign 
    key (pres_asig_pres) references farma_presentaciones );
alter table farma_presentacion_asignada add constraint (foreign 
    key (pres_asig_uni_med) references farma_unidades_medida 
    );
alter table personalc add constraint (foreign key (cper_profesion) 
    references mprof );
alter table personalc add constraint (foreign key (cper_religion) 
    references religiones );
alter table personalc add constraint (foreign key (cper_dep_nacimiento) 
    references dep_mun );
alter table personalc add constraint (foreign key (cper_muni_nacimiento) 
    references dep_mun );
alter table res_fam add constraint (foreign key (fam_dpi_parentesco) 
    references personalc );
alter table res_mdep add constraint (foreign key (dep_departamento) 
    references dep_mun );
alter table esip_necesidad add constraint (foreign key (nec_dep) 
    references mdep );
alter table res_reservas add constraint (foreign key (reg_situacion) 
    references res_situacion );
alter table res_reservas add constraint (foreign key (reg_profesion) 
    references mprof );
alter table res_reservas add constraint (foreign key (reg_tipo) 
    references res_tipo );
alter table fp_documentos add constraint (foreign key (doc_fondo) 
    references fp_fondo );
alter table fp_documentos add constraint (foreign key (doc_uso) 
    references fp_uso );
alter table fp_documentos add constraint (foreign key (doc_estado) 
    references fp_estado );
alter table fp_documentos add constraint (foreign key (doc_clasificacion) 
    references fp_clasificacion );
alter table fp_seguridad add constraint (foreign key (sec_estado) 
    references fp_estado );
alter table act_etnia add constraint (foreign key (et_etnia) 
    references etnias );
alter table act_etnia add constraint (foreign key (et_leng) 
    references lenguas );
alter table act_etnia add constraint (foreign key (et_cat) references 
    mper  constraint fk_mper_et_cat);
alter table fp_respuesta add constraint (foreign key (res_status) 
    references fp_estado );
alter table fag_aero_gt add constraint (foreign key (aero_tip_aeronave) 
    references fag_tip_aeronave );
alter table fag_hrs_historial_vuelo add constraint (foreign 
    key (hist_catalogo) references mper );
alter table fag_rep_mision_vuelo add constraint (foreign key 
    (rep_cat_of_op) references mper );
alter table fag_rep_mision_vuelo add constraint (foreign key 
    (rep_matricula) references fag_aero_gt );
alter table fag_dest_vuelos add constraint (foreign key (dest_pais) 
    references paises );
alter table fag_dest_vuelos add constraint (foreign key (dest_reg_rmv) 
    references fag_rep_mision_vuelo );
alter table fag_rep_consumo_combustible add constraint (foreign 
    key (comb_reg_vuelo) references fag_rep_mision_vuelo );
alter table fag_vuelo_mision add constraint (foreign key (mision_registro_vuelo) 
    references fag_rep_mision_vuelo );
alter table res_reservas add constraint (foreign key (reg_lugar_entren) 
    references res_mdep );
alter table res_reservas add constraint (foreign key (reg_dep) 
    references mdep );
alter table res_reservas add constraint (foreign key (reg_catalogo) 
    references mper );
alter table res_reservas add constraint (foreign key (reg_dpi_dep) 
    references dep_mun );
alter table res_reservas add constraint (foreign key (reg_dpi_mun) 
    references dep_mun );
alter table res_asig_per add constraint (foreign key (ape_catalogo) 
    references mper );
alter table res_asig_per add constraint (foreign key (ape_dep) 
    references mdep );
alter table ddhh_gest add constraint (foreign key (gest_cat) 
    references mper );
alter table ddhh_gest_cont add constraint (foreign key (gest_cont_perc_id) 
    references con_mper_contratos );
alter table dot_tallas add constraint (foreign key (talla_art) 
    references dot_articulos );
alter table re22_obras add constraint (foreign key (obra_dep) 
    references mdep );
alter table dot_entrega add constraint (foreign key (ent_recibe) 
    references mper );
alter table dot_entrega add constraint (foreign key (ent_dep) 
    references mdep );
alter table dot_entrega add constraint (foreign key (ent_entrega) 
    references mper );
alter table esip_recup_capacidades add constraint (foreign key 
    (rec_dep) references mdep );
alter table tropa_movimientos add constraint (foreign key (mov_catalogo) 
    references mper );
alter table re22_subareas add constraint (foreign key (sub_area) 
    references re22_areas );
alter table re22_mper add constraint (foreign key (per_lugar_nac) 
    references depmun );
alter table gpl_lugar add constraint (foreign key (lug_depto) 
    references depmun );
alter table gpl_lugar add constraint (foreign key (lug_municipio) 
    references depmun );
alter table ciber_usuarios add constraint (foreign key (usu_catalogo) 
    references mper );
alter table ciber_subtemas add constraint (foreign key (subtema_tema) 
    references ciber_temas );
alter table ciber_preguntas add constraint (foreign key (pregunta_subtema) 
    references ciber_subtemas );
alter table ciber_respuestas add constraint (foreign key (respuesta_pregunta) 
    references ciber_preguntas );
alter table gpl_transporte add constraint (foreign key (tra_tipo_veh) 
    references vlh_t_vehiculo );
alter table cont_curriculo add constraint (foreign key (curr_catalogo) 
    references mper );
alter table cont_curriculo add constraint (foreign key (curr_grado) 
    references grados );
alter table cont_curriculo add constraint (foreign key (curr_arma) 
    references armas );
alter table cont_curriculo add constraint (foreign key (curr_dependencia) 
    references mdep );
alter table vlh_tow add constraint (foreign key (tow_ubicacion) 
    references con_mdep );
alter table vlh_tow add constraint (foreign key (tow_adquisicion) 
    references vlh_origen_vehiculo );
alter table vlh_tow add constraint (foreign key (tow_pais) references 
    paises );
alter table vlh_tow add constraint (foreign key (tow_dependencia) 
    references con_mdep );
alter table vlh_tow add constraint (foreign key (tow_estado) 
    references vlh_estado_vehiculo );
alter table vlh_tow add constraint (foreign key (tow_marca) 
    references vlh_marcas );
alter table vlh_tow add constraint (foreign key (tow_linea) 
    references vlh_linea );
alter table vlh_tow add constraint (foreign key (tow_neumaticos) 
    references vlh_llantas );
alter table ciber_evaluaciones add constraint (foreign key (evaluacion_usuario) 
    references ciber_usuarios );
alter table ciber_detalle_evaluaciones add constraint (foreign 
    key (detalle_evaluacion) references ciber_evaluaciones );
    
alter table tropa_foto add constraint (foreign key (fot_catalogo) 
    references mper );
alter table fag_compras add constraint (foreign key (com_cat_solicito) 
    references mper );
alter table f_cat_eliminados add constraint (foreign key (fin_elim_cat_finanzas) 
    references mper );
alter table fag_compras add constraint (foreign key (com_matricula) 
    references vlh_fag_caracteristicas );
alter table com_ent_sal2 add constraint (foreign key (es_tipo) 
    references lveh_combustible );
alter table tropa_cuenta add constraint (foreign key (cuenta_cat) 
    references mper );
alter table coc_operaciones add constraint (foreign key (ope_area_codigo) 
    references coc_area_mision );
alter table coc_ope_planificada add constraint (foreign key 
    (ope_pla_area) references coc_area_mision );
alter table coc_producto_operacion add constraint (foreign key 
    (prod_ope_producto) references coc_productos );
alter table tri_det_penalizacion add constraint (foreign key 
    (participante) references tri_participantes );
alter table coc_ope_planificada add constraint (foreign key 
    (ope_pla_met_ejec) references coc_metodo_ejec );
alter table municion_cuatrimestral add constraint (foreign key 
    (cuat_catalogoasignadopor) references mper );
alter table coc_coordenadas2 add constraint (foreign key (coo_reporte) 
    references coc_ope_planificada );
alter table f_cat_eliminados add constraint (foreign key (fin_elim_cat_quitado) 
    references mper );
alter table coc_personal2 add constraint (foreign key (per_reporte) 
    references coc_ope_planificada );
alter table coc_vehiculo_rep2 add constraint (foreign key (veh_reporte) 
    references coc_ope_planificada );
alter table ciber_detalle_evaluaciones add constraint (foreign 
    key (detalle_respuesta) references ciber_respuestas );
alter table esip_planes_basicos add constraint (foreign key 
    (planb_dep) references mdep );
alter table ef_fuerza_rsvp add constraint (foreign key (ef_dependencia) 
    references mdep  on delete cascade constraint pf_ef_dependencia_dep_llave);
    
alter table ef_fuerza_ce add constraint (foreign key (efc_dependencia) 
    references mdep  on delete cascade constraint pf_efc_dependencia_dep_llave);
    
alter table esip_paquetes_logisticos add constraint (foreign 
    key (paquetes_unidad_tecnica) references mdep );
alter table esip_matriz_presupuestaria add constraint (foreign 
    key (matriz_plan_basico) references esip_planes_basicos );
    
alter table esip_matriz_presupuestaria add constraint (foreign 
    key (matriz_fuente) references esip_fuente_financiamiento 
    );
alter table esip_matriz_presupuestaria add constraint (foreign 
    key (matriz_grupo) references esip_grupo_gasto );
alter table esip_matriz_presupuestaria add constraint (foreign 
    key (matriz_renglon) references esip_renglon_presupuestario 
    );
alter table tri_detalle add constraint (foreign key (evento) 
    references tri_eventos );
alter table tri_detalle add constraint (foreign key (etapa) 
    references tri_detalle );
alter table capta_evaluaciones add constraint (foreign key (eva_lugar) 
    references mdep );
alter table re22_asignaciones add constraint (foreign key (asig_ordeno) 
    references mper );
alter table tri_participantes add constraint (foreign key (evento) 
    references tri_eventos );
alter table tri_participantes add constraint (foreign key (catalogo) 
    references mper );
alter table re22_cuentas add constraint (foreign key (cue_banco) 
    references re22_bancos );
alter table bin_valor_inmueble add constraint (foreign key (val_id_inm) 
    references bin_inmueble );
alter table re22_descuentos add constraint (foreign key (desc_tipo) 
    references re22_tipos_descuentos );
alter table bin_edificaciones add constraint (foreign key (edi_inv) 
    references bin_inventariado );
alter table re22_obras_bono add constraint (foreign key (bono_obra) 
    references re22_obras );
alter table re22_partidas add constraint (foreign key (part_obra) 
    references re22_obras );
alter table re22_partidas add constraint (foreign key (part_ue) 
    references re22_unidades_ejecutoras );
alter table bin_edificaciones add constraint (foreign key (edi_adqui) 
    references bin_adquisicion );
alter table bin_edificaciones add constraint (foreign key (edi_estado) 
    references bin_estado );
alter table re22_historial_pagos add constraint (foreign key 
    (pago_valido) references mper );
alter table bin_edificaciones add constraint (foreign key (edi_departamento) 
    references dep_mun );
alter table re22_historial_situaciones add constraint (foreign 
    key (sit_situacion) references situaciones );
alter table re22_mper add constraint (foreign key (per_lugar_ext) 
    references depmun );
alter table re22_mper add constraint (foreign key (per_ocupacion) 
    references re22_ocupaciones );
alter table re22_mper add constraint (foreign key (per_obra) 
    references re22_obras );
alter table re22_mper add constraint (foreign key (per_subarea) 
    references re22_subareas );
alter table re22_mper add constraint (foreign key (per_situacion) 
    references situaciones );
alter table re22_mper add constraint (foreign key (per_religion) 
    references religiones );
alter table re22_mper add constraint (foreign key (per_puesto) 
    references re22_puestos );
alter table bin_edificaciones add constraint (foreign key (edi_mun) 
    references dep_mun );
alter table tropa_movimientos add constraint (foreign key (mov_dependencia) 
    references mdep );
alter table bin_obs_aprobaciones add constraint (foreign key 
    (apro_edi_id) references bin_edificaciones );
alter table tropa_disponibilidad add constraint (foreign key 
    (disp_catalogo) references mper );
alter table tropa_disponibilidad add constraint (foreign key 
    (disp_dependencia) references mdep );
alter table bin_pdf_edificaciones add constraint (foreign key 
    (pdf_catalogo_edi) references bin_edificaciones );
alter table tri_puntaje add constraint (foreign key (participante) 
    references tri_participantes );
alter table tri_puntaje add constraint (foreign key (etapa) 
    references tri_etapas );
alter table municion_ingresofab add constraint (foreign key 
    (ifab_catalogo) references mper );
alter table municion_ingresofab add constraint (foreign key 
    (ifab_departamento) references mdep );
alter table apresto_asesor add constraint (foreign key (ase_catalogo) 
    references mper );
alter table apresto_asignacion_dependencia add constraint (foreign 
    key (asig_dep) references mdep );
alter table apresto_asignacion_dependencia add constraint (foreign 
    key (asig_asesor) references apresto_asesor );
alter table eva_bol_asimilado add constraint (foreign key (asim_cat_evaluado) 
    references mper );
alter table eva_bol_asimilado add constraint (foreign key (asim_cat_evaluador) 
    references mper );
alter table coc_detalle_instituciones add constraint (foreign 
    key (det_ins_reporte) references coc_ope_planificada );
alter table coc_detalle_instituciones add constraint (foreign 
    key (det_ins_cod_institucion) references coc_instituciones 
    );
alter table amc_capturas add constraint (foreign key (topico) 
    references amc_topico );
alter table amc_colores add constraint (foreign key (topico) 
    references amc_tipo_topics );
alter table amc_desastre_natural add constraint (foreign key 
    (nombre_desastre) references amc_fenomeno_natural );
alter table amc_desastre_natural add constraint (foreign key 
    (tipo) references amc_tipo_desastre_natural );
alter table amc_desastre_natural add constraint (foreign key 
    (topico) references amc_topico );
alter table amc_destruccion_pista add constraint (foreign key 
    (topico) references amc_topico );
alter table amc_detalle_arma add constraint (foreign key (calibre) 
    references amc_calibre );
alter table amc_detalle_arma add constraint (foreign key (tipo_arma) 
    references amc_tipo_armas );
alter table amc_detalle_arma add constraint (foreign key (topico) 
    references amc_topico );
alter table amc_detalle_municion add constraint (foreign key 
    (calibre) references amc_calibre );
alter table amc_detalle_municion add constraint (foreign key 
    (topico) references amc_topico );
alter table amc_incautacion_armas add constraint (foreign key 
    (topico) references amc_topico );
alter table amc_incautacion_dinero add constraint (foreign key 
    (moneda) references amc_moneda );
alter table bin_solicitudes add constraint (foreign key (sol_edi_id) 
    references bin_edificaciones );
alter table apresto_tareas add constraint (foreign key (tar_dependencia) 
    references mdep );
alter table fin_subproducto add constraint (foreign key (subp_producto) 
    references fin_subproducto );
alter table fin_producto add constraint (foreign key (prod_actividades) 
    references fin_producto );
alter table fin_actividades add constraint (foreign key (act_programa) 
    references fin_programa );
alter table apresto_tareas add constraint (foreign key (tar_ambito) 
    references apresto_ambito );
alter table fin_subpro_desc add constraint (foreign key (subpro_subproducto) 
    references fin_subproducto );
alter table apresto_tareas add constraint (foreign key (tar_modalidad) 
    references apresto_modalidad );
alter table cau_permisos add constraint (foreign key (per_situacion_permiso) 
    references cau_situaciones );
alter table municion_batallon add constraint (foreign key (bat_catalogosalida) 
    references mper );
alter table tropa_cuenta add constraint (foreign key (cuenta_usu) 
    references mper );
alter table sig_rancho add constraint (foreign key (rancho_compania) 
    references sig_companias );
alter table ciber_inventario add constraint (foreign key (inv_antivirus) 
    references ciber_antivirus );
alter table tropa_beneficiarios add constraint (foreign key 
    (ben_catalogo) references mper );
alter table tropa_beneficiarios add constraint (foreign key 
    (ben_parentesco) references parentescos );
alter table rm_historial_pagos add constraint (foreign key (pago_cat) 
    references rm_registros );
alter table rm_historial_pagos add constraint (foreign key (pago_cat_valido) 
    references mper );
alter table esip_unidades_ejecutoras add constraint (foreign 
    key (ue_dep) references mdep );
alter table municion_batallon add constraint (foreign key (bat_catalogo) 
    references mper );
alter table municion_batallon add constraint (foreign key (bat_departamento) 
    references mdep );
alter table apresto_asigna_tarea add constraint (foreign key 
    (asig_tar_tarea) references apresto_tareas );
alter table apresto_asigna_tarea add constraint (foreign key 
    (asig_tar_asesor) references apresto_asesor );
alter table apresto_respuesta add constraint (foreign key (res_asignacion) 
    references apresto_asigna_tarea );
alter table municion_ingresoalmacen add constraint (foreign 
    key (ialm_catalogo) references mper );
alter table municion_ingresoalmacen add constraint (foreign 
    key (ialm_departamento) references mdep );
alter table amc_incautacion_dinero add constraint (foreign key 
    (topico) references amc_topico );
alter table amc_incautacion_droga add constraint (foreign key 
    (transporte) references amc_transporte );
alter table amc_incautacion_droga add constraint (foreign key 
    (topico) references amc_topico );
alter table amc_incautacion_droga add constraint (foreign key 
    (tipo_droga) references amc_drogas );
alter table amc_migrantes add constraint (foreign key (destino) 
    references paises );
alter table amc_migrantes add constraint (foreign key (pais_migrante) 
    references amc_nacionalidad );
alter table amc_migrantes add constraint (foreign key (edad) 
    references amc_edades );
alter table amc_migrantes add constraint (foreign key (sexo) 
    references amc_sexo );
alter table amc_migrantes add constraint (foreign key (topic) 
    references amc_topico );
alter table amc_movimiento_social add constraint (foreign key 
    (organizacion) references amc_organizacion_mov_social );
alter table amc_movimiento_social add constraint (foreign key 
    (tipo_movimiento) references amc_tipo_movimiento_social );
    
alter table amc_movimiento_social add constraint (foreign key 
    (topico) references amc_topico );
alter table amc_nacionalidad add constraint (foreign key (pais) 
    references paises );
alter table amc_per_asesinadas add constraint (foreign key (sexo) 
    references amc_sexo );
alter table amc_per_capturadas add constraint (foreign key (delito) 
    references amc_delito );
alter table amc_per_capturadas add constraint (foreign key (sexo) 
    references amc_sexo );
alter table amc_per_capturadas add constraint (foreign key (topico) 
    references amc_topico );
alter table amc_topico add constraint (foreign key (usuario) 
    references amc_usuarios );
alter table amc_topico add constraint (foreign key (fuente) 
    references amc_fuentes );
alter table amc_topico add constraint (foreign key (tipo) references 
    amc_tipo_topics );
alter table amc_topico add constraint (foreign key (actividad) 
    references amc_actividad_vinculada );
alter table amc_topico add constraint (foreign key (dependencia) 
    references mdep );
alter table larm_asentamiento add constraint (foreign key (asen_catalogo) 
    references lmarmas );
alter table coc_municipios add constraint (foreign key (mun_cod_dep) 
    references coc_departamentos );
alter table coc_lugar add constraint (foreign key (lug_cod_mun) 
    references coc_municipios );
alter table coc_detalle_lugar add constraint (foreign key (det_lug_reporte) 
    references coc_ope_planificada );
alter table coc_detalle_lugar add constraint (foreign key (det_lug_cod_lugar) 
    references coc_lugar );
alter table registro_busqueda add constraint (foreign key (busqueda_usuario) 
    references mper );
alter table dfdes_coop_amat add constraint (foreign key (dfcoop_catalogo) 
    references mper );
alter table dfdes_coop_amat add constraint (foreign key (dfcoop_codigo) 
    references descuentos );
alter table mper_firma add constraint (foreign key (fir_catalogo) 
    references mper );
alter table f_asig_desc add constraint (foreign key (asig_desc_cat) 
    references mper );
alter table f_asig_desc add constraint (foreign key (asig_desc_plaza) 
    references morg );
alter table f_asig_desc add constraint (foreign key (asig_desc_codigo_des) 
    references descuentos );
alter table f_asig_desc add constraint (foreign key (asig_desc_codigo_as) 
    references asignaciones );
alter table codemar_operaciones add constraint (foreign key 
    (ope_tipo) references codemar_tipos_operaciones );
alter table codemar_operaciones add constraint (foreign key 
    (ope_dependencia) references mdep );
alter table codemar_embarcaciones add constraint (foreign key 
    (emb_tipo) references codemar_tipos_embarcaciones );
alter table f_cat_eliminado_r22 add constraint (foreign key 
    (fin_elim_cat_finanzas) references mper );
alter table f_cat_eliminado_r22 add constraint (foreign key 
    (fin_elim_cat_quitado) references re22_mper );
alter table inv_almacenes add constraint (foreign key (alma_unidad) 
    references mdep );
alter table inv_almacenes add constraint (foreign key (alma_clase) 
    references inv_clase );
alter table inv_movimientos add constraint (foreign key (mov_alma_id) 
    references inv_almacenes );
alter table sig_menu add constraint (foreign key (menu_tipo) 
    references sig_tiempo_alimentacion );
alter table sig_programa_alimentacion add constraint (foreign 
    key (alim_menu) references sig_menu );
alter table sig_asignacion add constraint (foreign key (asig_menu) 
    references sig_programa_alimentacion );
alter table eva_bol_asimilado add constraint (foreign key (asim_cat_g1) 
    references mper );
alter table eva_bol_asimilado add constraint (foreign key (asim_cat_comte) 
    references mper );
alter table eva_bol_asimilado add constraint (foreign key (asim_ceom) 
    references meom );
alter table arco_historial add constraint (foreign key (hist_catalogo) 
    references mper );
alter table arco_historial add constraint (foreign key (hist_grado) 
    references grados );
alter table arco_historial add constraint (foreign key (hist_arma) 
    references armas );
alter table vlh_det_plaza add constraint (foreign key (det_plaza_responsable) 
    references morg );
alter table est_fuerza_detalle add constraint (foreign key (ef_cod_ef) 
    references est_fuerza );
alter table est_fuerza_alum_y_rsrv add constraint (foreign key 
    (alrs_est_fuerza_id) references est_fuerza );
alter table inv_movimientos add constraint (foreign key (mov_perso_entrega) 
    references mper );
alter table inv_movimientos add constraint (foreign key (mov_perso_recibe) 
    references mper );
alter table inv_movimientos add constraint (foreign key (mov_perso_respon) 
    references mper );
alter table inv_movimientos add constraint (foreign key (mov_proce_destino) 
    references mdep );
alter table manto_equipo add constraint (foreign key (equipo_estado) 
    references manto_equipo_estado );
alter table manto_equipo add constraint (foreign key (equipo_marca) 
    references manto_marca_equipo );
alter table manto_equipo add constraint (foreign key (equipo_tipo) 
    references manto_tipo_equipo );
alter table manto_equipo add constraint (foreign key (equipo_dependencia) 
    references mdep );
alter table manto_entrega add constraint (foreign key (ent_usuario_catalogo) 
    references mper );
alter table manto_entrega add constraint (foreign key (ent_tecnico_catalogo) 
    references mper );
alter table manto_entrega add constraint (foreign key (ent_equipo_codigo) 
    references manto_equipo );
alter table manto_solicitud add constraint (foreign key (sol_usuario_catalogo) 
    references mper );
alter table manto_solicitud add constraint (foreign key (sol_tecnico_catalogo) 
    references mper );
alter table manto_solicitud add constraint (foreign key (sol_equipo_codigo) 
    references manto_equipo );
alter table manto_reparacion add constraint (foreign key (rep_tecnico_catalogo) 
    references mper );
alter table manto_reparacion add constraint (foreign key (rep_equipo_codigo) 
    references manto_equipo );
alter table manto_equipo_historial add constraint (foreign key 
    (equi_his_codigo_equipo) references manto_equipo );
alter table manto_equipo_historial add constraint (foreign key 
    (equi_his_codigo_solicitud) references manto_solicitud );
    
alter table municion_almacencomando add constraint (foreign 
    key (acom_catalogosalida) references mper );
alter table municion_almacencomando add constraint (foreign 
    key (acom_catalogo) references mper );
alter table municion_almacencomando add constraint (foreign 
    key (acom_departamento) references mdep );
alter table inv_producto add constraint (foreign key (pro_clase_id) 
    references inv_clase );
alter table inv_uni_med add constraint (foreign key (uni_clase) 
    references inv_clase );
alter table inv_guarda_almacen add constraint (foreign key (guarda_catalogo) 
    references mper );
alter table inv_guarda_almacen add constraint (foreign key (guarda_almacen) 
    references inv_almacenes );
alter table inv_deta_movimientos add constraint (foreign key 
    (det_mov_id) references inv_movimientos );
alter table inv_deta_movimientos add constraint (foreign key 
    (det_pro_id) references inv_producto );
alter table inv_deta_movimientos add constraint (foreign key 
    (det_estado) references inv_estado );
alter table inv_deta_movimientos add constraint (foreign key 
    (det_uni_med) references inv_uni_med );
alter table firma_registro add constraint (foreign key (fir_reg_cat) 
    references mper );
alter table municion_cuatrimestral add constraint (foreign key 
    (cuat_catalogoasignado) references mper );
alter table municion_cuatrimestral add constraint (foreign key 
    (cuat_departamento) references mdep );
alter table codemar_informacion add constraint (foreign key 
    (info_operacion) references codemar_operaciones );
alter table codemar_asig_unidad add constraint (foreign key 
    (asi_operacion) references codemar_operaciones );
alter table codemar_asig_unidad add constraint (foreign key 
    (asi_unidad) references codemar_embarcaciones );
alter table codemar_motores add constraint (foreign key (mot_embarcacion) 
    references codemar_embarcaciones );
alter table codemar_novedades add constraint (foreign key (nov_operacion) 
    references codemar_operaciones );
alter table codemar_recomendaciones add constraint (foreign 
    key (rec_operacion) references codemar_operaciones );
alter table codemar_trabajo_motores add constraint (foreign 
    key (tra_operacion) references codemar_operaciones );
alter table codemar_trabajo_motores add constraint (foreign 
    key (tra_motor) references codemar_motores );
alter table codemar_comunicaciones add constraint (foreign key 
    (com_operacion) references codemar_operaciones );
alter table codemar_comunicaciones add constraint (foreign key 
    (com_medio) references codemar_medios_comunicacion );
alter table codemar_comunicaciones add constraint (foreign key 
    (com_receptor) references codemar_receptor_comunicacion );
    
alter table codemar_derrota add constraint (foreign key (der_ope) 
    references codemar_operaciones );
alter table codemar_insumos_operaciones add constraint (foreign 
    key (insumo_unidad) references codemar_unidades_medida );
    
alter table codemar_internacionales add constraint (foreign 
    key (int_ope) references codemar_operaciones );
alter table codemar_internacionales add constraint (foreign 
    key (int_pais) references paises );
alter table apresto_asistencia add constraint (foreign key (asis_catalogo) 
    references mper );
alter table est_reg_dep add constraint (foreign key (est_rdep_regid) 
    references est_regiones );
alter table est_dest_det add constraint (foreign key (dest_de_detid) 
    references est_fuerza_detalle );
alter table est_dest_det add constraint (foreign key (dest_de_destino) 
    references est_destinos );
alter table novedades_finanzas add constraint (foreign key (nov_cat_pagador) 
    references mper );
alter table eva_evaluacion add constraint (foreign key (eva_usuario) 
    references mper );
alter table historial_boletaspago add constraint (foreign key 
    (usuario_boleta) references mper );
alter table historial_boletaspago add constraint (foreign key 
    (usuario_login) references mper );
alter table apresto_asesor add constraint (foreign key (ase_funcion) 
    references apresto_funciones );
alter table eva_pdf add constraint (foreign key (evapdf_catalogo) 
    references mper );
alter table eva_pdf add constraint (foreign key (evapdf_evaluacion) 
    references eva_evaluacion );
alter table comb_contratos add constraint (foreign key (cont_tipo_combustible) 
    references lveh_combustible );
alter table comb_mensuales add constraint (foreign key (men_contrato) 
    references comb_contratos );
alter table comb_proyectos add constraint (foreign key (pro_mensual) 
    references comb_mensuales );
alter table comb_asignaciones_saldos add constraint (foreign 
    key (sal_tipo) references lveh_combustible );
alter table comb_dependencias add constraint (foreign key (dep_dependencia) 
    references mdep );
alter table comb_gas_capacidades add constraint (foreign key 
    (cap_tipo) references lveh_combustible );
alter table comb_gas_capacidades add constraint (foreign key 
    (cap_gasolinera) references comb_dependencias );
alter table comb_hist_asignaciones add constraint (foreign key 
    (hist_proyecto) references comb_proyectos );
alter table comb_asignaciones add constraint (foreign key (asig_dep) 
    references comb_dependencias );
alter table comb_asignaciones add constraint (foreign key (asig_proyecto) 
    references comb_proyectos );
alter table comb_solicitudes add constraint (foreign key (sol_entrega) 
    references comb_dependencias );
alter table comb_solicitudes add constraint (foreign key (sol_recibe) 
    references comb_dependencias );
alter table comb_solicitudes add constraint (foreign key (sol_asignacion) 
    references comb_asignaciones );
alter table comb_vales add constraint (foreign key (val_sirvio) 
    references mper );
alter table comb_vales add constraint (foreign key (val_dep) 
    references comb_dependencias );
alter table comb_vales add constraint (foreign key (val_despacho) 
    references comb_dependencias );
alter table comb_vales add constraint (foreign key (val_autorizo) 
    references mper );
alter table comb_vales add constraint (foreign key (val_asignacion) 
    references comb_asignaciones );
alter table comb_vales add constraint (foreign key (val_catalogo_022) 
    references re22_mper );
alter table comb_vales add constraint (foreign key (val_catalogo_011) 
    references mper );
alter table comb_permisos add constraint (foreign key (perm_dependencia) 
    references comb_dependencias );
alter table comb_permisos add constraint (foreign key (perm_catalogo) 
    references mper );
alter table comb_movimientos add constraint (foreign key (mov_traslado) 
    references comb_asignaciones_saldos );
alter table comb_movimientos add constraint (foreign key (mov_dep) 
    references comb_dependencias );
alter table comb_movimientos add constraint (foreign key (mov_vale) 
    references comb_vales );
alter table comb_movimientos add constraint (foreign key (mov_solicitud) 
    references comb_solicitudes );
alter table comb_movimientos add constraint (foreign key (mov_asignacion) 
    references comb_asignaciones );
alter table asig_menuautocom add constraint (foreign key (asig_catalogo) 
    references mper );
alter table comb_histo_rep add constraint (foreign key (hist_catalogo) 
    references mper );
alter table comb_histo_rep add constraint (foreign key (hist_dependencia) 
    references comb_dependencias );
alter table re22_asignaciones add constraint (foreign key (asig_tipo) 
    references re22_tipo_asignaciones  constraint fk_tipo_id);
    
alter table rm_registros add constraint (foreign key (reg_plaza) 
    references rm_morg  constraint fk_org_plaza);
alter table rm_registros add constraint (foreign key (reg_arma) 
    references armas  constraint fk_arm_codigo);
alter table re22_historial_boletaspago add constraint (foreign 
    key (usuario_login) references mper  constraint r5536_25835);
    
alter table re22_historial_boletaspago add constraint (foreign 
    key (usuario_boleta) references re22_mper  constraint r5536_25834);
    
alter table bienes add constraint (foreign key (bie_marca) references 
    marca );
alter table conocimientos_bienes add constraint (foreign key 
    (con_catalogo_entrega) references mper );
alter table detalle_conocimiento_bienes add constraint (foreign 
    key (det_numero_conocimiento) references conocimientos_bienes 
    );
alter table detalle_conocimiento_bienes add constraint (foreign 
    key (det_idbien) references bienes );
alter table comb_notificaciones add constraint (foreign key 
    (not_dep) references comb_dependencias );


create trigger "informix".act_armas update on "informix".armas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_armas (arm_codigo,arm_desc_lg,
    arm_desc_md,arm_desc_ct,desp_arm_codigo,desp_arm_desc_lg,desp_arm_desc_md,
    desp_arm_desc_ct,accion,usuario,hora)  values (antes.arm_codigo ,
    antes.arm_desc_lg ,antes.arm_desc_md ,antes.arm_desc_ct ,luego.arm_codigo 
    ,luego.arm_desc_lg ,luego.arm_desc_md ,luego.arm_desc_ct ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_armas insert on "informix".armas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_armas (arm_codigo,arm_desc_lg,
    arm_desc_md,arm_desc_ct,desp_arm_codigo,desp_arm_desc_lg,desp_arm_desc_md,
    desp_arm_desc_ct,accion,usuario,hora)  values (NULL ,' ' ,' ' ,' ' ,
    luego.arm_codigo ,luego.arm_desc_lg ,luego.arm_desc_md ,luego.arm_desc_ct 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_armas delete on "informix".armas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_armas (arm_codigo,arm_desc_lg,
    arm_desc_md,arm_desc_ct,desp_arm_codigo,desp_arm_desc_lg,desp_arm_desc_md,
    desp_arm_desc_ct,accion,usuario,hora)  values (antes.arm_codigo ,
    antes.arm_desc_lg ,antes.arm_desc_md ,antes.arm_desc_ct ,NULL ,' '
     ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_parentescos update on "informix"
    .parentescos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_parentescos (par_codigo,par_desc_md,
    par_desc_ct,desp_par_codigo,desp_par_desc_md,desp_par_desc_ct,accion,
    usuario,hora)  values (antes.par_codigo ,antes.par_desc_md ,antes.par_desc_ct 
    ,luego.par_codigo ,luego.par_desc_md ,luego.par_desc_ct ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_parentescos insert on "informix"
    .parentescos referencing new as luego
    for each row
        (
        insert into "informix".aud_parentescos (par_codigo,par_desc_md,
    par_desc_ct,desp_par_codigo,desp_par_desc_md,desp_par_desc_ct,accion,
    usuario,hora)  values (NULL ,' ' ,' ' ,luego.par_codigo ,luego.par_desc_md 
    ,luego.par_desc_ct ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_parentescos delete on "informix"
    .parentescos referencing old as antes
    for each row
        (
        insert into "informix".aud_parentescos (par_codigo,par_desc_md,
    par_desc_ct,desp_par_codigo,desp_par_desc_md,desp_par_desc_ct,accion,
    usuario,hora)  values (antes.par_codigo ,antes.par_desc_md ,antes.par_desc_ct 
    ,NULL ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_escuelas update on "informix".escuelas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_escuelas (esc_codigo,esc_desc_lg,
    esc_desc_md,esc_desc_ct,desp_esc_codigo,desp_esc_desc_lg,desp_esc_desc_md,
    desp_esc_desc_ct,accion,usuario,hora)  values (antes.esc_codigo ,
    antes.esc_desc_lg ,antes.esc_desc_md ,antes.esc_desc_ct ,luego.esc_codigo 
    ,luego.esc_desc_lg ,luego.esc_desc_md ,luego.esc_desc_ct ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_escuelas insert on "informix".escuelas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_escuelas (esc_codigo,esc_desc_lg,
    esc_desc_md,esc_desc_ct,desp_esc_codigo,desp_esc_desc_lg,desp_esc_desc_md,
    desp_esc_desc_ct,accion,usuario,hora)  values (NULL ,' ' ,' ' ,' ' ,
    luego.esc_codigo ,luego.esc_desc_lg ,luego.esc_desc_md ,luego.esc_desc_ct 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_escuelas delete on "informix".escuelas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_escuelas (esc_codigo,esc_desc_lg,
    esc_desc_md,esc_desc_ct,desp_esc_codigo,desp_esc_desc_lg,desp_esc_desc_md,
    desp_esc_desc_ct,accion,usuario,hora)  values (antes.esc_codigo ,
    antes.esc_desc_lg ,antes.esc_desc_md ,antes.esc_desc_ct ,NULL ,' '
     ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_cursos update on "informix".cursos 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cursos (cur_codigo,cur_desc_lg,
    cur_tipo,desp_cur_codigo,desp_cur_desc_lg,desp_cur_tipo,accion,usuario,
    hora)  values (antes.cur_codigo ,antes.cur_desc_lg ,antes.cur_tipo 
    ,luego.cur_codigo ,luego.cur_desc_lg ,luego.cur_tipo ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_cursos insert on "informix".cursos 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_cursos (cur_codigo,cur_desc_lg,
    cur_tipo,desp_cur_codigo,desp_cur_desc_lg,desp_cur_tipo,accion,usuario,
    hora)  values (NULL ,' ' ,' ' ,luego.cur_codigo ,luego.cur_desc_lg 
    ,luego.cur_tipo ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_cursos delete on "informix".cursos 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_cursos (cur_codigo,cur_desc_lg,
    cur_tipo,desp_cur_codigo,desp_cur_desc_lg,desp_cur_tipo,accion,usuario,
    hora)  values (antes.cur_codigo ,antes.cur_desc_lg ,antes.cur_tipo 
    ,NULL ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_paises update on "informix".paises 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_paises (pai_codigo,pai_desc_lg,
    desp_pai_codigo,desp_pai_desc_lg,accion,usuario,hora)  values (antes.pai_codigo 
    ,antes.pai_desc_lg ,luego.pai_codigo ,luego.pai_desc_lg ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_paises insert on "informix".paises 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_paises (pai_codigo,pai_desc_lg,
    desp_pai_codigo,desp_pai_desc_lg,accion,usuario,hora)  values (NULL 
    ,' ' ,luego.pai_codigo ,luego.pai_desc_lg ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_paises delete on "informix".paises 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_paises (pai_codigo,pai_desc_lg,
    desp_pai_codigo,desp_pai_desc_lg,accion,usuario,hora)  values (antes.pai_codigo 
    ,antes.pai_desc_lg ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_meom update on "informix".meom referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_meom (meom_ceom,meom_desc_lg,
    meom_desc_md,meom_desc_ct,meom_serie,meom_nivel,meom_situacion,desp_meom_ceom,
    desp_meom_desc_lg,desp_meom_desc_md,desp_meom_desc_ct,desp_meom_serie,
    desp_meom_nivel,desp_meom_situacion,accion,usuario,hora)  values 
    (antes.meom_ceom ,antes.meom_desc_lg ,antes.meom_desc_md ,antes.meom_desc_ct 
    ,antes.meom_serie ,antes.meom_nivel ,antes.meom_situacion ,luego.meom_ceom 
    ,luego.meom_desc_lg ,luego.meom_desc_md ,luego.meom_desc_ct ,luego.meom_serie 
    ,luego.meom_nivel ,luego.meom_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_meom insert on "informix".meom referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_meom (meom_ceom,meom_desc_lg,
    meom_desc_md,meom_desc_ct,meom_serie,meom_nivel,meom_situacion,desp_meom_ceom,
    desp_meom_desc_lg,desp_meom_desc_md,desp_meom_desc_ct,desp_meom_serie,
    desp_meom_nivel,desp_meom_situacion,accion,usuario,hora)  values 
    (' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL ,luego.meom_ceom ,luego.meom_desc_lg 
    ,luego.meom_desc_md ,luego.meom_desc_ct ,luego.meom_serie ,luego.meom_nivel 
    ,luego.meom_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_meom delete on "informix".meom referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_meom (meom_ceom,meom_desc_lg,
    meom_desc_md,meom_desc_ct,meom_serie,meom_nivel,meom_situacion,desp_meom_ceom,
    desp_meom_desc_lg,desp_meom_desc_md,desp_meom_desc_ct,desp_meom_serie,
    desp_meom_nivel,desp_meom_situacion,accion,usuario,hora)  values 
    (antes.meom_ceom ,antes.meom_desc_lg ,antes.meom_desc_md ,antes.meom_desc_ct 
    ,antes.meom_serie ,antes.meom_nivel ,antes.meom_situacion ,' ' ,' '
     ,' ' ,' ' ,' ' ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_grados update on "informix".grados 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_grados (gra_codigo,gra_desc_lg,
    gra_desc_md,gra_desc_ct,gra_asc,gra_tiempo,gra_clase,desp_gra_codigo,
    desp_gra_desc_lg,desp_gra_desc_md,desp_gra_desc_ct,desp_gra_asc,desp_gra_tiempo,
    desp_gra_clase,accion,usuario,hora)  values (antes.gra_codigo ,antes.gra_desc_lg 
    ,antes.gra_desc_md ,antes.gra_desc_ct ,antes.gra_asc ,antes.gra_tiempo 
    ,antes.gra_clase ,luego.gra_codigo ,luego.gra_desc_lg ,luego.gra_desc_md 
    ,luego.gra_desc_ct ,luego.gra_asc ,luego.gra_tiempo ,luego.gra_clase 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_grados insert on "informix".grados 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_grados (gra_codigo,gra_desc_lg,
    gra_desc_md,gra_desc_ct,gra_asc,gra_tiempo,gra_clase,desp_gra_codigo,
    desp_gra_desc_lg,desp_gra_desc_md,desp_gra_desc_ct,desp_gra_asc,desp_gra_tiempo,
    desp_gra_clase,accion,usuario,hora)  values (NULL ,' ' ,' ' ,' ' ,NULL 
    ,NULL ,' ' ,luego.gra_codigo ,luego.gra_desc_lg ,luego.gra_desc_md 
    ,luego.gra_desc_ct ,luego.gra_asc ,luego.gra_tiempo ,luego.gra_clase 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_grados delete on "informix".grados 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_grados (gra_codigo,gra_desc_lg,
    gra_desc_md,gra_desc_ct,gra_asc,gra_tiempo,gra_clase,desp_gra_codigo,
    desp_gra_desc_lg,desp_gra_desc_md,desp_gra_desc_ct,desp_gra_asc,desp_gra_tiempo,
    desp_gra_clase,accion,usuario,hora)  values (antes.gra_codigo ,antes.gra_desc_lg 
    ,antes.gra_desc_md ,antes.gra_desc_ct ,antes.gra_asc ,antes.gra_tiempo 
    ,antes.gra_clase ,NULL ,' ' ,' ' ,' ' ,NULL ,NULL ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_asignaciones update on "informix"
    .asignaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_asignaciones (asig_codigo,
    asig_desc_lg,asig_desc_ct,desp_asig_codigo,desp_asig_desc_lg,desp_asig_desc_ct,
    accion,usuario,hora)  values (antes.asig_codigo ,antes.asig_desc_lg 
    ,antes.asig_desc_ct ,luego.asig_codigo ,luego.asig_desc_lg ,luego.asig_desc_ct 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_asignaciones insert on "informix"
    .asignaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_asignaciones (asig_codigo,
    asig_desc_lg,asig_desc_ct,desp_asig_codigo,desp_asig_desc_lg,desp_asig_desc_ct,
    accion,usuario,hora)  values (NULL ,' ' ,' ' ,luego.asig_codigo ,luego.asig_desc_lg 
    ,luego.asig_desc_ct ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_asignaciones delete on "informix"
    .asignaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_asignaciones (asig_codigo,
    asig_desc_lg,asig_desc_ct,desp_asig_codigo,desp_asig_desc_lg,desp_asig_desc_ct,
    accion,usuario,hora)  values (antes.asig_codigo ,antes.asig_desc_lg 
    ,antes.asig_desc_ct ,NULL ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_menu_master update on "informix"
    .menu_master referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_menu_master (mm_menu,mm_descrip,
    desp_mm_menu,desp_mm_descrip,accion,usuario,hora)  values (antes.mm_menu 
    ,antes.mm_descrip ,luego.mm_menu ,luego.mm_descrip ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_menu_master insert on "informix"
    .menu_master referencing new as luego
    for each row
        (
        insert into "informix".aud_menu_master (mm_menu,mm_descrip,
    desp_mm_menu,desp_mm_descrip,accion,usuario,hora)  values (NULL ,
    ' ' ,luego.mm_menu ,luego.mm_descrip ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_menu_master delete on "informix"
    .menu_master referencing old as antes
    for each row
        (
        insert into "informix".aud_menu_master (mm_menu,mm_descrip,
    desp_mm_menu,desp_mm_descrip,accion,usuario,hora)  values (antes.mm_menu 
    ,antes.mm_descrip ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_mfsub update on "informix".mfsub 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mfsub (sub_dep,sub_prog,sub_grupo,
    desp_sub_dep,desp_sub_prog,desp_sub_grupo,accion,usuario,hora)  values 
    (antes.sub_dep ,antes.sub_prog ,antes.sub_grupo ,luego.sub_dep ,luego.sub_prog 
    ,luego.sub_grupo ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_mfsub insert on "informix".mfsub 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_mfsub (sub_dep,sub_prog,sub_grupo,
    desp_sub_dep,desp_sub_prog,desp_sub_grupo,accion,usuario,hora)  values 
    (NULL ,' ' ,NULL ,luego.sub_dep ,luego.sub_prog ,luego.sub_grupo ,
    'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_mfsub delete on "informix".mfsub 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_mfsub (sub_dep,sub_prog,sub_grupo,
    desp_sub_dep,desp_sub_prog,desp_sub_grupo,accion,usuario,hora)  values 
    (antes.sub_dep ,antes.sub_prog ,antes.sub_grupo ,NULL ,' ' ,NULL ,
    'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_mfsue_e update on "informix".mfsue_e 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mfsue_e (sue_grado,sue_serie,
    sue_nivel,sue_sueldo,sue_prima,desp_sue_grado,desp_sue_serie,desp_sue_nivel,
    desp_sue_sueldo,desp_sue_prima,accion,usuario,hora)  values (antes.sue_grado 
    ,antes.sue_serie ,antes.sue_nivel ,antes.sue_sueldo ,antes.sue_prima 
    ,luego.sue_grado ,luego.sue_serie ,luego.sue_nivel ,luego.sue_sueldo 
    ,luego.sue_prima ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_mfsue_e insert on "informix".mfsue_e 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_mfsue_e (sue_grado,sue_serie,
    sue_nivel,sue_sueldo,sue_prima,desp_sue_grado,desp_sue_serie,desp_sue_nivel,
    desp_sue_sueldo,desp_sue_prima,accion,usuario,hora)  values (NULL 
    ,' ' ,NULL ,' ' ,' ' ,luego.sue_grado ,luego.sue_serie ,luego.sue_nivel 
    ,luego.sue_sueldo ,luego.sue_prima ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_mfsue_e delete on "informix".mfsue_e 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_mfsue_e (sue_grado,sue_serie,
    sue_nivel,sue_sueldo,sue_prima,desp_sue_grado,desp_sue_serie,desp_sue_nivel,
    desp_sue_sueldo,desp_sue_prima,accion,usuario,hora)  values (antes.sue_grado 
    ,antes.sue_serie ,antes.sue_nivel ,antes.sue_sueldo ,antes.sue_prima 
    ,NULL ,' ' ,NULL ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_mfsue_o update on "informix".mfsue_o 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mfsue_o (mfs_grado,mfs_arma,
    mfs_bienal,mfs_sueldo,mfs_prima,desp_mfs_grado,desp_mfs_arma,desp_mfs_bienal,
    desp_mfs_sueldo,desp_mfs_prima,accion,usuario,hora)  values (antes.mfs_grado 
    ,antes.mfs_arma ,antes.mfs_bienal ,antes.mfs_sueldo ,antes.mfs_prima 
    ,luego.mfs_grado ,luego.mfs_arma ,luego.mfs_bienal ,luego.mfs_sueldo 
    ,luego.mfs_prima ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_mfsue_o insert on "informix".mfsue_o 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_mfsue_o (mfs_grado,mfs_arma,
    mfs_bienal,mfs_sueldo,mfs_prima,desp_mfs_grado,desp_mfs_arma,desp_mfs_bienal,
    desp_mfs_sueldo,desp_mfs_prima,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,' ' ,' ' ,luego.mfs_grado ,luego.mfs_arma ,luego.mfs_bienal 
    ,luego.mfs_sueldo ,luego.mfs_prima ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_mfsue_o delete on "informix".mfsue_o 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_mfsue_o (mfs_grado,mfs_arma,
    mfs_bienal,mfs_sueldo,mfs_prima,desp_mfs_grado,desp_mfs_arma,desp_mfs_bienal,
    desp_mfs_sueldo,desp_mfs_prima,accion,usuario,hora)  values (antes.mfs_grado 
    ,antes.mfs_arma ,antes.mfs_bienal ,antes.mfs_sueldo ,antes.mfs_prima 
    ,NULL ,NULL ,NULL ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".upd_mftro update on "informix".mftro 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mftro (antes1,antes2,antes3,
    antes4,despues1,despues2,despues3,despues4,hora,accion,usuario,tabname) 
     values (antes.tro_grado ,antes.tro_dep ,antes.tro_jerarquia ,antes.tro_sueldo 
    ,luego.tro_grado ,luego.tro_dep ,luego.tro_jerarquia ,luego.tro_sueldo 
    ,CURRENT year to fraction(3) ,'U' ,USER ,'mftro' ));

create trigger "informix".ins_mftro insert on "informix".mftro 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_mftro (antes1,antes2,antes3,
    antes4,despues1,despues2,despues3,despues4,hora,accion,usuario,tabname) 
     values (' ' ,' ' ,' ' ,' ' ,luego.tro_grado ,luego.tro_dep ,luego.tro_jerarquia 
    ,luego.tro_sueldo ,CURRENT year to fraction(3) ,'I' ,USER ,'mftro' 
    ));

create trigger "informix".del_mftro delete on "informix".mftro 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_mftro (antes1,antes2,antes3,
    antes4,despues1,despues2,despues3,despues4,hora,accion,usuario,tabname) 
     values (antes.tro_grado ,antes.tro_dep ,antes.tro_jerarquia ,antes.tro_sueldo 
    ,' ' ,' ' ,' ' ,' ' ,CURRENT year to fraction(3) ,'D' ,USER ,'mftro' ));
    

create trigger "informix".act_pdinero update on "informix".pdinero 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_pdinero (p_num,p_num_desc,
    desp_p_num,desp_p_num_desc,accion,usuario,hora)  values (antes.p_num 
    ,antes.p_num_desc ,luego.p_num ,luego.p_num_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_pdinero insert on "informix".pdinero 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_pdinero (p_num,p_num_desc,
    desp_p_num,desp_p_num_desc,accion,usuario,hora)  values (NULL ,' '
     ,luego.p_num ,luego.p_num_desc ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_pdinero delete on "informix".pdinero 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_pdinero (p_num,p_num_desc,
    desp_p_num,desp_p_num_desc,accion,usuario,hora)  values (antes.p_num 
    ,antes.p_num_desc ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_mfdep update on "informix".mfdep 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mfdep (mfd_llave,mfd_descripcion,
    desp_mfd_llave,desp_mfd_descripcion,accion,usuario,hora)  values 
    (antes.mfd_llave ,antes.mfd_descripcion ,luego.mfd_llave ,luego.mfd_descripcion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_mfdep insert on "informix".mfdep 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_mfdep (mfd_llave,mfd_descripcion,
    desp_mfd_llave,desp_mfd_descripcion,accion,usuario,hora)  values 
    (NULL ,' ' ,luego.mfd_llave ,luego.mfd_descripcion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_mfdep delete on "informix".mfdep 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_mfdep (mfd_llave,mfd_descripcion,
    desp_mfd_llave,desp_mfd_descripcion,accion,usuario,hora)  values 
    (antes.mfd_llave ,antes.mfd_descripcion ,NULL ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_banderas update on "informix".banderas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_banderas (ban_aplicacion,ban_codigo,
    ban_fecha,desp_ban_aplicacion,desp_ban_codigo,desp_ban_fecha,accion,
    usuario,hora)  values (antes.ban_aplicacion ,antes.ban_codigo ,antes.ban_fecha 
    ,luego.ban_aplicacion ,luego.ban_codigo ,luego.ban_fecha ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_banderas insert on "informix".banderas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_banderas (ban_aplicacion,ban_codigo,
    ban_fecha,desp_ban_aplicacion,desp_ban_codigo,desp_ban_fecha,accion,
    usuario,hora)  values (' ' ,NULL ,' ' ,luego.ban_aplicacion ,luego.ban_codigo 
    ,luego.ban_fecha ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_banderas delete on "informix".banderas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_banderas (ban_aplicacion,ban_codigo,
    ban_fecha,desp_ban_aplicacion,desp_ban_codigo,desp_ban_fecha,accion,
    usuario,hora)  values (antes.ban_aplicacion ,antes.ban_codigo ,antes.ban_fecha 
    ,' ' ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_sysmenus update on "informix".sysmenus 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sysmenus (menuname,title,desp_menuname,
    desp_title,accion,usuario,hora)  values (antes.menuname ,antes.title 
    ,luego.menuname ,luego.title ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_sysmenus insert on "informix".sysmenus 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_sysmenus (menuname,title,desp_menuname,
    desp_title,accion,usuario,hora)  values (' ' ,' ' ,luego.menuname ,
    luego.title ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sysmenus delete on "informix".sysmenus 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_sysmenus (menuname,title,desp_menuname,
    desp_title,accion,usuario,hora)  values (antes.menuname ,antes.title 
    ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_sysmenuitems update on "informix"
    .sysmenuitems referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sysmenuitems (imenuname,itemnum,
    mtext,mtype,progname,desp_imenuname,desp_itemnum,desp_mtext,desp_mtype,
    desp_progname,accion,usuario,hora)  values (antes.imenuname ,antes.itemnum 
    ,antes.mtext ,antes.mtype ,antes.progname ,luego.imenuname ,luego.itemnum 
    ,luego.mtext ,luego.mtype ,luego.progname ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_sysmenuitems insert on "informix"
    .sysmenuitems referencing new as luego
    for each row
        (
        insert into "informix".aud_sysmenuitems (imenuname,itemnum,
    mtext,mtype,progname,desp_imenuname,desp_itemnum,desp_mtext,desp_mtype,
    desp_progname,accion,usuario,hora)  values (' ' ,NULL ,' ' ,' ' ,' ' 
    ,luego.imenuname ,luego.itemnum ,luego.mtext ,luego.mtype ,luego.progname 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sysmenuitems delete on "informix"
    .sysmenuitems referencing old as antes
    for each row
        (
        insert into "informix".aud_sysmenuitems (imenuname,itemnum,
    mtext,mtype,progname,desp_imenuname,desp_itemnum,desp_mtext,desp_mtype,
    desp_progname,accion,usuario,hora)  values (antes.imenuname ,antes.itemnum 
    ,antes.mtext ,antes.mtype ,antes.progname ,' ' ,NULL ,' ' ,' ' ,' ' ,
    'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".upd_tropabajas update on "informix".tropabajas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tropabajas (antes1,antes2,
    antes3,despues1,despues2,despues3,hora,accion,usuario,tabname)  values 
    (antes.tb_catalogo ,antes.tb_fec_nomb ,antes.tb_situacion ,luego.tb_catalogo 
    ,luego.tb_fec_nomb ,luego.tb_situacion ,CURRENT year to fraction(3) 
    ,'U' ,USER ,'tropabajas' ));

create trigger "informix".ins_tropabajas insert on "informix".tropabajas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_tropabajas (antes1,antes2,
    antes3,despues1,despues2,despues3,hora,accion,usuario,tabname)  values 
    (' ' ,' ' ,' ' ,luego.tb_catalogo ,luego.tb_fec_nomb ,luego.tb_situacion 
    ,CURRENT year to fraction(3) ,'I' ,USER ,'tropabajas' ));

create trigger "informix".del_tropabajas delete on "informix".tropabajas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_tropabajas (antes1,antes2,
    antes3,despues1,despues2,despues3,hora,accion,usuario,tabname)  values 
    (antes.tb_catalogo ,antes.tb_fec_nomb ,antes.tb_situacion ,' ' ,' '
     ,' ' ,CURRENT year to fraction(3) ,'D' ,USER ,'tropabajas' ));

create trigger "informix".act_tropa_sp update on "informix".tropa_sp 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tropa_sp (tsp_catalogo,tsp_plaza,
    tsp_fec_nomb,tsp_fec_trans,tsp_operador,tsp_grado,desp_tsp_catalogo,
    desp_tsp_plaza,desp_tsp_fec_nomb,desp_tsp_fec_trans,desp_tsp_operador,
    desp_tsp_grado,accion,usuario,hora)  values (antes.tsp_catalogo ,
    antes.tsp_plaza ,antes.tsp_fec_nomb ,antes.tsp_fec_trans ,antes.tsp_operador 
    ,antes.tsp_grado ,luego.tsp_catalogo ,luego.tsp_plaza ,luego.tsp_fec_nomb 
    ,luego.tsp_fec_trans ,luego.tsp_operador ,luego.tsp_grado ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tropa_sp insert on "informix".tropa_sp 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_tropa_sp (tsp_catalogo,tsp_plaza,
    tsp_fec_nomb,tsp_fec_trans,tsp_operador,tsp_grado,desp_tsp_catalogo,
    desp_tsp_plaza,desp_tsp_fec_nomb,desp_tsp_fec_trans,desp_tsp_operador,
    desp_tsp_grado,accion,usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,
    ' ' ,NULL ,luego.tsp_catalogo ,luego.tsp_plaza ,luego.tsp_fec_nomb 
    ,luego.tsp_fec_trans ,luego.tsp_operador ,luego.tsp_grado ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_tropa_sp delete on "informix".tropa_sp 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_tropa_sp (tsp_catalogo,tsp_plaza,
    tsp_fec_nomb,tsp_fec_trans,tsp_operador,tsp_grado,desp_tsp_catalogo,
    desp_tsp_plaza,desp_tsp_fec_nomb,desp_tsp_fec_trans,desp_tsp_operador,
    desp_tsp_grado,accion,usuario,hora)  values (antes.tsp_catalogo ,
    antes.tsp_plaza ,antes.tsp_fec_nomb ,antes.tsp_fec_trans ,antes.tsp_operador 
    ,antes.tsp_grado ,NULL ,NULL ,' ' ,' ' ,' ' ,NULL ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_asig_plaza delete on "informix".asig_plaza 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_asig_plaza (asc_plaza,desp_asc_plaza,
    accion,usuario,hora)  values (antes.asc_plaza ,NULL ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_asig_plaza insert on "informix".asig_plaza 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_asig_plaza (asc_plaza,desp_asc_plaza,
    accion,usuario,hora)  values (NULL ,luego.asc_plaza ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_asig_plaza update on "informix".asig_plaza 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_asig_plaza (asc_plaza,desp_asc_plaza,
    accion,usuario,hora)  values (antes.asc_plaza ,luego.asc_plaza ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_permtropa update on "informix".permtropa 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_permtropa (pert_usuario,pert_programa,
    pert_permiso,desp_pert_usuario,desp_pert_programa,desp_pert_permiso,
    accion,usuario,hora)  values (antes.pert_usuario ,antes.pert_programa 
    ,antes.pert_permiso ,luego.pert_usuario ,luego.pert_programa ,luego.pert_permiso 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_permtropa insert on "informix".permtropa 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_permtropa (pert_usuario,pert_programa,
    pert_permiso,desp_pert_usuario,desp_pert_programa,desp_pert_permiso,
    accion,usuario,hora)  values (' ' ,' ' ,NULL ,luego.pert_usuario ,luego.pert_programa 
    ,luego.pert_permiso ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_permtropa delete on "informix".permtropa 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_permtropa (pert_usuario,pert_programa,
    pert_permiso,desp_pert_usuario,desp_pert_programa,desp_pert_permiso,
    accion,usuario,hora)  values (antes.pert_usuario ,antes.pert_programa 
    ,antes.pert_permiso ,' ' ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_dep_mun update on "informix".dep_mun 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dep_mun (dm_codigo,dm_desc_lg,
    dm_desc_md,dm_desc_ct,desp_dm_codigo,desp_dm_desc_lg,desp_dm_desc_md,
    desp_dm_desc_ct,accion,usuario,hora)  values (antes.dm_codigo ,antes.dm_desc_lg 
    ,antes.dm_desc_md ,antes.dm_desc_ct ,luego.dm_codigo ,luego.dm_desc_lg 
    ,luego.dm_desc_md ,luego.dm_desc_ct ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_dep_mun insert on "informix".dep_mun 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_dep_mun (dm_codigo,dm_desc_lg,
    dm_desc_md,dm_desc_ct,desp_dm_codigo,desp_dm_desc_lg,desp_dm_desc_md,
    desp_dm_desc_ct,accion,usuario,hora)  values (' ' ,' ' ,' ' ,' ' ,luego.dm_codigo 
    ,luego.dm_desc_lg ,luego.dm_desc_md ,luego.dm_desc_ct ,'I' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".del_dep_mun delete on "informix".dep_mun 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_dep_mun (dm_codigo,dm_desc_lg,
    dm_desc_md,dm_desc_ct,desp_dm_codigo,desp_dm_desc_lg,desp_dm_desc_md,
    desp_dm_desc_ct,accion,usuario,hora)  values (antes.dm_codigo ,antes.dm_desc_lg 
    ,antes.dm_desc_md ,antes.dm_desc_ct ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_pcdtablr delete on "informix".pcdtablr 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_pcdtablr (prodid,line_no,tabname,
    desp_prodid,desp_line_no,desp_tabname,accion,usuario,hora)  values 
    (antes.prodid ,antes.line_no ,antes.tabname ,' ' ,NULL ,' ' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_pcdtablr insert on "informix".pcdtablr 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_pcdtablr (prodid,line_no,tabname,
    desp_prodid,desp_line_no,desp_tabname,accion,usuario,hora)  values 
    (' ' ,NULL ,' ' ,luego.prodid ,luego.line_no ,luego.tabname ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_pcdtablr update on "informix".pcdtablr 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_pcdtablr (prodid,line_no,tabname,
    desp_prodid,desp_line_no,desp_tabname,accion,usuario,hora)  values 
    (antes.prodid ,antes.line_no ,antes.tabname ,luego.prodid ,luego.line_no 
    ,luego.tabname ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_stxparmd insert on "informix".stxparmd 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_stxparmd (language,module,
    user_id,access_key,line_no,userdef,sbd_flag,parm_desc,is_rule,is_fatal,
    help_num,val_table,val_column,val_filter,val_join,val_switchbox,val_description,
    zoom_filter,zoom_switchbox,parm_value,desp_language,desp_module,desp_user_id,
    desp_access_key,desp_line_no,desp_userdef,desp_sbd_flag,desp_parm_desc,
    desp_is_rule,desp_is_fatal,desp_help_num,desp_val_table,desp_val_column,
    desp_val_filter,desp_val_join,desp_val_switchbox,desp_val_description,
    desp_zoom_filter,desp_zoom_switchbox,desp_parm_value,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,luego.language ,luego.module ,luego.user_id ,luego.access_key 
    ,luego.line_no ,luego.userdef ,luego.sbd_flag ,luego.parm_desc ,luego.is_rule 
    ,luego.is_fatal ,luego.help_num ,luego.val_table ,luego.val_column 
    ,luego.val_filter ,luego.val_join ,luego.val_switchbox ,luego.val_description 
    ,luego.zoom_filter ,luego.zoom_switchbox ,luego.parm_value ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_stxparmd delete on "informix".stxparmd 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_stxparmd (language,module,
    user_id,access_key,line_no,userdef,sbd_flag,parm_desc,is_rule,is_fatal,
    help_num,val_table,val_column,val_filter,val_join,val_switchbox,val_description,
    zoom_filter,zoom_switchbox,parm_value,desp_language,desp_module,desp_user_id,
    desp_access_key,desp_line_no,desp_userdef,desp_sbd_flag,desp_parm_desc,
    desp_is_rule,desp_is_fatal,desp_help_num,desp_val_table,desp_val_column,
    desp_val_filter,desp_val_join,desp_val_switchbox,desp_val_description,
    desp_zoom_filter,desp_zoom_switchbox,desp_parm_value,accion,usuario,
    hora)  values (antes.language ,antes.module ,antes.user_id ,antes.access_key 
    ,antes.line_no ,antes.userdef ,antes.sbd_flag ,antes.parm_desc ,antes.is_rule 
    ,antes.is_fatal ,antes.help_num ,antes.val_table ,antes.val_column 
    ,antes.val_filter ,antes.val_join ,antes.val_switchbox ,antes.val_description 
    ,antes.zoom_filter ,antes.zoom_switchbox ,antes.parm_value ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_stxparmd update on "informix".stxparmd 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_stxparmd (language,module,
    user_id,access_key,line_no,userdef,sbd_flag,parm_desc,is_rule,is_fatal,
    help_num,val_table,val_column,val_filter,val_join,val_switchbox,val_description,
    zoom_filter,zoom_switchbox,parm_value,desp_language,desp_module,desp_user_id,
    desp_access_key,desp_line_no,desp_userdef,desp_sbd_flag,desp_parm_desc,
    desp_is_rule,desp_is_fatal,desp_help_num,desp_val_table,desp_val_column,
    desp_val_filter,desp_val_join,desp_val_switchbox,desp_val_description,
    desp_zoom_filter,desp_zoom_switchbox,desp_parm_value,accion,usuario,
    hora)  values (antes.language ,antes.module ,antes.user_id ,antes.access_key 
    ,antes.line_no ,antes.userdef ,antes.sbd_flag ,antes.parm_desc ,antes.is_rule 
    ,antes.is_fatal ,antes.help_num ,antes.val_table ,antes.val_column 
    ,antes.val_filter ,antes.val_join ,antes.val_switchbox ,antes.val_description 
    ,antes.zoom_filter ,antes.zoom_switchbox ,antes.parm_value ,luego.language 
    ,luego.module ,luego.user_id ,luego.access_key ,luego.line_no ,luego.userdef 
    ,luego.sbd_flag ,luego.parm_desc ,luego.is_rule ,luego.is_fatal ,
    luego.help_num ,luego.val_table ,luego.val_column ,luego.val_filter 
    ,luego.val_join ,luego.val_switchbox ,luego.val_description ,luego.zoom_filter 
    ,luego.zoom_switchbox ,luego.parm_value ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_ipm_fact update on "informix".ipm_fact 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ipm_fact (fact_catalogo,fact_cod_descuento,
    fact_fecha,fact_numero,fact_procedencia,fact_iva,fact_monto,fact_estado,
    desp_fact_catalogo,desp_fact_cod_descuento,desp_fact_fecha,desp_fact_numero,
    desp_fact_procedencia,desp_fact_iva,desp_fact_monto,desp_fact_estado,
    accion,usuario,hora)  values (antes.fact_catalogo ,antes.fact_cod_descuento 
    ,antes.fact_fecha ,antes.fact_numero ,antes.fact_procedencia ,antes.fact_iva 
    ,antes.fact_monto ,antes.fact_estado ,luego.fact_catalogo ,luego.fact_cod_descuento 
    ,luego.fact_fecha ,luego.fact_numero ,luego.fact_procedencia ,luego.fact_iva 
    ,luego.fact_monto ,luego.fact_estado ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_ipm_fact insert on "informix".ipm_fact 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ipm_fact (fact_catalogo,fact_cod_descuento,
    fact_fecha,fact_numero,fact_procedencia,fact_iva,fact_monto,fact_estado,
    desp_fact_catalogo,desp_fact_cod_descuento,desp_fact_fecha,desp_fact_numero,
    desp_fact_procedencia,desp_fact_iva,desp_fact_monto,desp_fact_estado,
    accion,usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' 
    ,luego.fact_catalogo ,luego.fact_cod_descuento ,luego.fact_fecha 
    ,luego.fact_numero ,luego.fact_procedencia ,luego.fact_iva ,luego.fact_monto 
    ,luego.fact_estado ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ipm_fact delete on "informix".ipm_fact 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ipm_fact (fact_catalogo,fact_cod_descuento,
    fact_fecha,fact_numero,fact_procedencia,fact_iva,fact_monto,fact_estado,
    desp_fact_catalogo,desp_fact_cod_descuento,desp_fact_fecha,desp_fact_numero,
    desp_fact_procedencia,desp_fact_iva,desp_fact_monto,desp_fact_estado,
    accion,usuario,hora)  values (antes.fact_catalogo ,antes.fact_cod_descuento 
    ,antes.fact_fecha ,antes.fact_numero ,antes.fact_procedencia ,antes.fact_iva 
    ,antes.fact_monto ,antes.fact_estado ,NULL ,NULL ,' ' ,' ' ,' ' ,' ' 
    ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".upd_banejer_acc update on "informix"
    .banejer_acc referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_banejer_acc (antes1,antes2,
    antes3,antes4,despues1,despues2,despues3,despues4,hora,accion,usuario,
    tabname)  values (antes.acc_accionista ,antes.acc_catalogo ,antes.acc_suscripcion 
    ,antes.acc_si_no ,luego.acc_accionista ,luego.acc_catalogo ,luego.acc_suscripcion 
    ,luego.acc_si_no ,CURRENT year to fraction(3) ,'U' ,USER ,'banejer_acc'
     ));

create trigger "informix".ins_banejer_acc insert on "informix"
    .banejer_acc referencing new as luego
    for each row
        (
        insert into "informix".aud_banejer_acc (antes1,antes2,
    antes3,antes4,despues1,despues2,despues3,despues4,hora,accion,usuario,
    tabname)  values (' ' ,' ' ,' ' ,' ' ,luego.acc_accionista ,luego.acc_catalogo 
    ,luego.acc_suscripcion ,luego.acc_si_no ,CURRENT year to fraction(3) 
    ,'I' ,USER ,'banejer_acc' ));

create trigger "informix".del_banejer_acc delete on "informix"
    .banejer_acc referencing old as antes
    for each row
        (
        insert into "informix".aud_banejer_acc (antes1,antes2,
    antes3,antes4,despues1,despues2,despues3,despues4,hora,accion,usuario,
    tabname)  values (antes.acc_accionista ,antes.acc_catalogo ,antes.acc_suscripcion 
    ,antes.acc_si_no ,' ' ,' ' ,' ' ,' ' ,CURRENT year to fraction(3) ,'D'
     ,USER ,'banejer_acc' ));

create trigger "informix".act_pbienal update on "informix".pbienal 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_pbienal (catalogo,bienal1,
    bienal2,bienal3,desp_catalogo,desp_bienal1,desp_bienal2,desp_bienal3,
    accion,usuario,hora)  values (antes.catalogo ,antes.bienal1 ,antes.bienal2 
    ,antes.bienal3 ,luego.catalogo ,luego.bienal1 ,luego.bienal2 ,luego.bienal3 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_pbienal insert on "informix".pbienal 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_pbienal (catalogo,bienal1,
    bienal2,bienal3,desp_catalogo,desp_bienal1,desp_bienal2,desp_bienal3,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,luego.catalogo 
    ,luego.bienal1 ,luego.bienal2 ,luego.bienal3 ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_pbienal delete on "informix".pbienal 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_pbienal (catalogo,bienal1,
    bienal2,bienal3,desp_catalogo,desp_bienal1,desp_bienal2,desp_bienal3,
    accion,usuario,hora)  values (antes.catalogo ,antes.bienal1 ,antes.bienal2 
    ,antes.bienal3 ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_sinefecto update on "informix".sinefecto 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sinefecto (catalogo,orden,
    usuarios,desp_catalogo,desp_orden,desp_usuarios,accion,usuario,hora) 
     values (antes.catalogo ,antes.orden ,antes.usuario ,luego.catalogo 
    ,luego.orden ,luego.usuario ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_sinefecto insert on "informix".sinefecto 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_sinefecto (catalogo,orden,
    usuarios,desp_catalogo,desp_orden,desp_usuarios,accion,usuario,hora) 
     values (NULL ,' ' ,' ' ,luego.catalogo ,luego.orden ,luego.usuario 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sinefecto delete on "informix".sinefecto 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_sinefecto (catalogo,orden,
    usuarios,desp_catalogo,desp_orden,desp_usuarios,accion,usuario,hora) 
     values (antes.catalogo ,antes.orden ,antes.usuario ,NULL ,' ' ,' '
     ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_partidas update on "informix".partidas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_partidas (par_codigo,par_depen,
    par_fecha,par_descr,par_clase,desp_par_codigo,desp_par_depen,desp_par_fecha,
    desp_par_descr,desp_par_clase,accion,usuario,hora)  values (antes.par_codigo 
    ,antes.par_depen ,antes.par_fecha ,antes.par_descr ,antes.par_clase 
    ,luego.par_codigo ,luego.par_depen ,luego.par_fecha ,luego.par_descr 
    ,luego.par_clase ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_partidas insert on "informix".partidas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_partidas (par_codigo,par_depen,
    par_fecha,par_descr,par_clase,desp_par_codigo,desp_par_depen,desp_par_fecha,
    desp_par_descr,desp_par_clase,accion,usuario,hora)  values (NULL 
    ,NULL ,' ' ,' ' ,NULL ,luego.par_codigo ,luego.par_depen ,luego.par_fecha 
    ,luego.par_descr ,luego.par_clase ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_partidas delete on "informix".partidas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_partidas (par_codigo,par_depen,
    par_fecha,par_descr,par_clase,desp_par_codigo,desp_par_depen,desp_par_fecha,
    desp_par_descr,desp_par_clase,accion,usuario,hora)  values (antes.par_codigo 
    ,antes.par_depen ,antes.par_fecha ,antes.par_descr ,antes.par_clase 
    ,NULL ,NULL ,' ' ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_noestan update on "informix".noestan 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_noestan (noe_catalogo,desp_noe_catalogo,
    accion,usuario,hora)  values (antes.noe_catalogo ,luego.noe_catalogo 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_noestan insert on "informix".noestan 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_noestan (noe_catalogo,desp_noe_catalogo,
    accion,usuario,hora)  values (NULL ,luego.noe_catalogo ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_noestan delete on "informix".noestan 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_noestan (noe_catalogo,desp_noe_catalogo,
    accion,usuario,hora)  values (antes.noe_catalogo ,NULL ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_empresas update on "informix".empresas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_empresas (em_catalogo,em_codigo,
    em_fecha,em_monto,em_mensual,em_saldo,em_control,desp_em_catalogo,
    desp_em_codigo,desp_em_fecha,desp_em_monto,desp_em_mensual,desp_em_saldo,
    desp_em_control,accion,usuario,hora)  values (antes.em_catalogo ,
    antes.em_codigo ,antes.em_fecha ,antes.em_monto ,antes.em_mensual 
    ,antes.em_saldo ,antes.em_control ,luego.em_catalogo ,luego.em_codigo 
    ,luego.em_fecha ,luego.em_monto ,luego.em_mensual ,luego.em_saldo 
    ,luego.em_control ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_empresas insert on "informix".empresas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_empresas (em_catalogo,em_codigo,
    em_fecha,em_monto,em_mensual,em_saldo,em_control,desp_em_catalogo,
    desp_em_codigo,desp_em_fecha,desp_em_monto,desp_em_mensual,desp_em_saldo,
    desp_em_control,accion,usuario,hora)  values (NULL ,NULL ,'' ,'' ,''
     ,'' ,NULL ,luego.em_catalogo ,luego.em_codigo ,luego.em_fecha ,luego.em_monto 
    ,luego.em_mensual ,luego.em_saldo ,luego.em_control ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_empresas delete on "informix".empresas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_empresas (em_catalogo,em_codigo,
    em_fecha,em_monto,em_mensual,em_saldo,em_control,desp_em_catalogo,
    desp_em_codigo,desp_em_fecha,desp_em_monto,desp_em_mensual,desp_em_saldo,
    desp_em_control,accion,usuario,hora)  values (antes.em_catalogo ,
    antes.em_codigo ,antes.em_fecha ,antes.em_monto ,antes.em_mensual 
    ,antes.em_saldo ,antes.em_control ,NULL ,NULL ,'' ,'' ,'' ,'' ,NULL ,
    'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fmasi update on "informix".fmasi 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fmasi (mas_codigo,mas_desc_ct,
    mas_desc_md,mas_desc_lg,desp_mas_codigo,desp_mas_desc_ct,desp_mas_desc_md,
    desp_mas_desc_lg,accion,usuario,hora)  values (antes.mas_codigo ,
    antes.mas_desc_ct ,antes.mas_desc_md ,antes.mas_desc_lg ,luego.mas_codigo 
    ,luego.mas_desc_ct ,luego.mas_desc_md ,luego.mas_desc_lg ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fmasi insert on "informix".fmasi 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_fmasi (mas_codigo,mas_desc_ct,
    mas_desc_md,mas_desc_lg,desp_mas_codigo,desp_mas_desc_ct,desp_mas_desc_md,
    desp_mas_desc_lg,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.mas_codigo 
    ,luego.mas_desc_ct ,luego.mas_desc_md ,luego.mas_desc_lg ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_fmasi delete on "informix".fmasi 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_fmasi (mas_codigo,mas_desc_ct,
    mas_desc_md,mas_desc_lg,desp_mas_codigo,desp_mas_desc_ct,desp_mas_desc_md,
    desp_mas_desc_lg,accion,usuario,hora)  values (antes.mas_codigo ,
    antes.mas_desc_ct ,antes.mas_desc_md ,antes.mas_desc_lg ,NULL ,'' 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fmdes update on "informix".fmdes 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fmdes (mde_codigo,mde_desc_ct,
    mde_desc_md,mde_desc_lg,desp_mde_codigo,desp_mde_desc_ct,desp_mde_desc_md,
    desp_mde_desc_lg,accion,usuario,hora)  values (antes.mde_codigo ,
    antes.mde_desc_ct ,antes.mde_desc_md ,antes.mde_desc_lg ,luego.mde_codigo 
    ,luego.mde_desc_ct ,luego.mde_desc_md ,luego.mde_desc_lg ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fmdes insert on "informix".fmdes 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_fmdes (mde_codigo,mde_desc_ct,
    mde_desc_md,mde_desc_lg,desp_mde_codigo,desp_mde_desc_ct,desp_mde_desc_md,
    desp_mde_desc_lg,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.mde_codigo 
    ,luego.mde_desc_ct ,luego.mde_desc_md ,luego.mde_desc_lg ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_fmdes delete on "informix".fmdes 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_fmdes (mde_codigo,mde_desc_ct,
    mde_desc_md,mde_desc_lg,desp_mde_codigo,desp_mde_desc_ct,desp_mde_desc_md,
    desp_mde_desc_lg,accion,usuario,hora)  values (antes.mde_codigo ,
    antes.mde_desc_ct ,antes.mde_desc_md ,antes.mde_desc_lg ,NULL ,'' 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cgsifldd insert on "informix".cgsifldd 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_cgsifldd (module,prog,scrid,
    cust_key,input_num,seqno,field_tag,tabname,fldname,fldtype,f_autonext,
    f_comments,f_default,f_display_like,f_downshift,f_format,f_include,
    f_picture,f_noentry,f_required,f_upshift,f_valid_like,f_verify,f_trans,
    f_skip,desp_module,desp_prog,desp_scrid,desp_cust_key,desp_input_num,
    desp_seqno,desp_field_tag,desp_tabname,desp_fldname,desp_fldtype,
    desp_f_autonext,desp_f_comments,desp_f_default,desp_f_display_like,
    desp_f_downshift,desp_f_format,desp_f_include,desp_f_picture,desp_f_noentry,
    desp_f_required,desp_f_upshift,desp_f_valid_like,desp_f_verify,desp_f_trans,
    desp_f_skip,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.module 
    ,luego.prog ,luego.scrid ,luego.cust_key ,luego.input_num ,luego.seqno 
    ,luego.field_tag ,luego.tabname ,luego.fldname ,luego.fldtype ,luego.f_autonext 
    ,luego.f_comments ,luego.f_default ,luego.f_display_like ,luego.f_downshift 
    ,luego.f_format ,luego.f_include ,luego.f_picture ,luego.f_noentry 
    ,luego.f_required ,luego.f_upshift ,luego.f_valid_like ,luego.f_verify 
    ,luego.f_trans ,luego.f_skip ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_cgsifldd delete on "informix".cgsifldd 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_cgsifldd (module,prog,scrid,
    cust_key,input_num,seqno,field_tag,tabname,fldname,fldtype,f_autonext,
    f_comments,f_default,f_display_like,f_downshift,f_format,f_include,
    f_picture,f_noentry,f_required,f_upshift,f_valid_like,f_verify,f_trans,
    f_skip,desp_module,desp_prog,desp_scrid,desp_cust_key,desp_input_num,
    desp_seqno,desp_field_tag,desp_tabname,desp_fldname,desp_fldtype,
    desp_f_autonext,desp_f_comments,desp_f_default,desp_f_display_like,
    desp_f_downshift,desp_f_format,desp_f_include,desp_f_picture,desp_f_noentry,
    desp_f_required,desp_f_upshift,desp_f_valid_like,desp_f_verify,desp_f_trans,
    desp_f_skip,accion,usuario,hora)  values (antes.module ,antes.prog 
    ,antes.scrid ,antes.cust_key ,antes.input_num ,antes.seqno ,antes.field_tag 
    ,antes.tabname ,antes.fldname ,antes.fldtype ,antes.f_autonext ,antes.f_comments 
    ,antes.f_default ,antes.f_display_like ,antes.f_downshift ,antes.f_format 
    ,antes.f_include ,antes.f_picture ,antes.f_noentry ,antes.f_required 
    ,antes.f_upshift ,antes.f_valid_like ,antes.f_verify ,antes.f_trans 
    ,antes.f_skip ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_cgsifldd update on "informix".cgsifldd 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cgsifldd (module,prog,scrid,
    cust_key,input_num,seqno,field_tag,tabname,fldname,fldtype,f_autonext,
    f_comments,f_default,f_display_like,f_downshift,f_format,f_include,
    f_picture,f_noentry,f_required,f_upshift,f_valid_like,f_verify,f_trans,
    f_skip,desp_module,desp_prog,desp_scrid,desp_cust_key,desp_input_num,
    desp_seqno,desp_field_tag,desp_tabname,desp_fldname,desp_fldtype,
    desp_f_autonext,desp_f_comments,desp_f_default,desp_f_display_like,
    desp_f_downshift,desp_f_format,desp_f_include,desp_f_picture,desp_f_noentry,
    desp_f_required,desp_f_upshift,desp_f_valid_like,desp_f_verify,desp_f_trans,
    desp_f_skip,accion,usuario,hora)  values (antes.module ,antes.prog 
    ,antes.scrid ,antes.cust_key ,antes.input_num ,antes.seqno ,antes.field_tag 
    ,antes.tabname ,antes.fldname ,antes.fldtype ,antes.f_autonext ,antes.f_comments 
    ,antes.f_default ,antes.f_display_like ,antes.f_downshift ,antes.f_format 
    ,antes.f_include ,antes.f_picture ,antes.f_noentry ,antes.f_required 
    ,antes.f_upshift ,antes.f_valid_like ,antes.f_verify ,antes.f_trans 
    ,antes.f_skip ,luego.module ,luego.prog ,luego.scrid ,luego.cust_key 
    ,luego.input_num ,luego.seqno ,luego.field_tag ,luego.tabname ,luego.fldname 
    ,luego.fldtype ,luego.f_autonext ,luego.f_comments ,luego.f_default 
    ,luego.f_display_like ,luego.f_downshift ,luego.f_format ,luego.f_include 
    ,luego.f_picture ,luego.f_noentry ,luego.f_required ,luego.f_upshift 
    ,luego.f_valid_like ,luego.f_verify ,luego.f_trans ,luego.f_skip 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_disr delete on "informix".disr referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_disr (isr_catalogo,isr_cantidad,
    desp_isr_catalogo,desp_isr_cantidad,accion,usuario,hora)  values 
    (antes.isr_catalogo ,antes.isr_cantidad ,NULL ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_disr insert on "informix".disr referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_disr (isr_catalogo,isr_cantidad,
    desp_isr_catalogo,desp_isr_cantidad,accion,usuario,hora)  values 
    (NULL ,'' ,luego.isr_catalogo ,luego.isr_cantidad ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_disr update on "informix".disr referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_disr (isr_catalogo,isr_cantidad,
    desp_isr_catalogo,desp_isr_cantidad,accion,usuario,hora)  values 
    (antes.isr_catalogo ,antes.isr_cantidad ,luego.isr_catalogo ,luego.isr_cantidad 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_descuentos update on "informix".descuentos 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_descuentos (desc_codigo,desc_desc_lg,
    desc_desc_ct,desc_prioridad,desc_pressobre,desc_ordenvale,desp_desc_codigo,
    desp_desc_desc_lg,desp_desc_desc_ct,desp_desc_prioridad,desp_desc_pressobre,
    desp_desc_ordenvale,accion,usuario,hora)  values (antes.desc_codigo 
    ,antes.desc_desc_lg ,antes.desc_desc_ct ,antes.desc_prioridad ,antes.desc_pressobre 
    ,antes.desc_ordenvale ,luego.desc_codigo ,luego.desc_desc_lg ,luego.desc_desc_ct 
    ,luego.desc_prioridad ,luego.desc_pressobre ,luego.desc_ordenvale 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_descuentos insert on "informix".descuentos 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_descuentos (desc_codigo,desc_desc_lg,
    desc_desc_ct,desc_prioridad,desc_pressobre,desc_ordenvale,desp_desc_codigo,
    desp_desc_desc_lg,desp_desc_desc_ct,desp_desc_prioridad,desp_desc_pressobre,
    desp_desc_ordenvale,accion,usuario,hora)  values (NULL ,' ' ,' ' ,NULL 
    ,NULL ,NULL ,luego.desc_codigo ,luego.desc_desc_lg ,luego.desc_desc_ct 
    ,luego.desc_prioridad ,luego.desc_pressobre ,luego.desc_ordenvale 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_descuentos delete on "informix".descuentos 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_descuentos (desc_codigo,desc_desc_lg,
    desc_desc_ct,desc_prioridad,desc_pressobre,desc_ordenvale,desp_desc_codigo,
    desp_desc_desc_lg,desp_desc_desc_ct,desp_desc_prioridad,desp_desc_pressobre,
    desp_desc_ordenvale,accion,usuario,hora)  values (antes.desc_codigo 
    ,antes.desc_desc_lg ,antes.desc_desc_ct ,antes.desc_prioridad ,antes.desc_pressobre 
    ,antes.desc_ordenvale ,NULL ,' ' ,' ' ,NULL ,NULL ,NULL ,'D' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".act_permisos update on "informix".permisos 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_permisos (perm_usuario,perm_programa,
    perm_permiso,desp_perm_usuario,desp_perm_programa,desp_perm_permiso,
    accion,usuario,hora)  values (antes.perm_usuario ,antes.perm_programa 
    ,antes.perm_permiso ,luego.perm_usuario ,luego.perm_programa ,luego.perm_permiso 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_permisos insert on "informix".permisos 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_permisos (perm_usuario,perm_programa,
    perm_permiso,desp_perm_usuario,desp_perm_programa,desp_perm_permiso,
    accion,usuario,hora)  values (' ' ,' ' ,NULL ,luego.perm_usuario ,luego.perm_programa 
    ,luego.perm_permiso ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_permisos delete on "informix".permisos 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_permisos (perm_usuario,perm_programa,
    perm_permiso,desp_perm_usuario,desp_perm_programa,desp_perm_permiso,
    accion,usuario,hora)  values (antes.perm_usuario ,antes.perm_programa 
    ,antes.perm_permiso ,' ' ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_hdareal update on "informix".hdareal 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_hdareal (hdr_catalogo,hdr_cantidad,
    desp_hdr_catalogo,desp_hdr_cantidad,accion,usuario,hora)  values 
    (antes.hdr_catalogo ,antes.hdr_cantidad ,luego.hdr_catalogo ,luego.hdr_cantidad 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_hdareal insert on "informix".hdareal 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_hdareal (hdr_catalogo,hdr_cantidad,
    desp_hdr_catalogo,desp_hdr_cantidad,accion,usuario,hora)  values 
    (NULL ,' ' ,luego.hdr_catalogo ,luego.hdr_cantidad ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_hdareal delete on "informix".hdareal 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_hdareal (hdr_catalogo,hdr_cantidad,
    desp_hdr_catalogo,desp_hdr_cantidad,accion,usuario,hora)  values 
    (antes.hdr_catalogo ,antes.hdr_cantidad ,NULL ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_retencion update on "informix".retencion 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_retencion (ret_catalogo,ret_monto,
    desp_ret_catalogo,desp_ret_monto,accion,usuario,hora)  values (antes.ret_catalogo 
    ,antes.ret_monto ,luego.ret_catalogo ,luego.ret_monto ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_retencion insert on "informix".retencion 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_retencion (ret_catalogo,ret_monto,
    desp_ret_catalogo,desp_ret_monto,accion,usuario,hora)  values (NULL 
    ,' ' ,luego.ret_catalogo ,luego.ret_monto ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_retencion delete on "informix".retencion 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_retencion (ret_catalogo,ret_monto,
    desp_ret_catalogo,desp_ret_monto,accion,usuario,hora)  values (antes.ret_catalogo 
    ,antes.ret_monto ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".upd_jefes update on "informix".jefes 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_jefes (antes1,antes2,antes3,
    despues1,despues2,despues3,hora,accion,usuario,tabname)  values (antes.jef_plaza 
    ,antes.jef_categoria ,antes.jef_puesto ,luego.jef_plaza ,luego.jef_categoria 
    ,luego.jef_puesto ,CURRENT year to fraction(3) ,'U' ,USER ,'jefes' 
    ));

create trigger "informix".ins_jefes insert on "informix".jefes 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_jefes (antes1,antes2,antes3,
    despues1,despues2,despues3,hora,accion,usuario,tabname)  values (
    ' ' ,' ' ,' ' ,luego.jef_plaza ,luego.jef_categoria ,luego.jef_puesto 
    ,CURRENT year to fraction(3) ,'I' ,USER ,'jefes' ));

create trigger "informix".del_jefes delete on "informix".jefes 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_jefes (antes1,antes2,antes3,
    despues1,despues2,despues3,hora,accion,usuario,tabname)  values (antes.jef_plaza 
    ,antes.jef_categoria ,antes.jef_puesto ,' ' ,' ' ,' ' ,CURRENT year 
    to fraction(3) ,'D' ,USER ,'jefes' ));

create trigger "informix".act_fuerza update on "informix".fuerza 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fuerza (f_dep,f_grado,f_total,
    f_situa,desp_f_dep,desp_f_grado,desp_f_total,desp_f_situa,accion,
    usuario,hora)  values (antes.f_dep ,antes.f_grado ,antes.f_total 
    ,antes.f_situa ,luego.f_dep ,luego.f_grado ,luego.f_total ,luego.f_situa 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fuerza insert on "informix".fuerza 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_fuerza (f_dep,f_grado,f_total,
    f_situa,desp_f_dep,desp_f_grado,desp_f_total,desp_f_situa,accion,
    usuario,hora)  values (NULL ,NULL ,NULL ,' ' ,luego.f_dep ,luego.f_grado 
    ,luego.f_total ,luego.f_situa ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_fuerza delete on "informix".fuerza 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_fuerza (f_dep,f_grado,f_total,
    f_situa,desp_f_dep,desp_f_grado,desp_f_total,desp_f_situa,accion,
    usuario,hora)  values (antes.f_dep ,antes.f_grado ,antes.f_total 
    ,antes.f_situa ,NULL ,NULL ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_nopagados update on "informix".nopagados 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_nopagados (catalogo,desp_catalogo,
    accion,usuario,hora)  values (antes.catalogo ,luego.catalogo ,'U' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_nopagados insert on "informix".nopagados 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_nopagados (catalogo,desp_catalogo,
    accion,usuario,hora)  values (NULL ,luego.catalogo ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_nopagados delete on "informix".nopagados 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_nopagados (catalogo,desp_catalogo,
    accion,usuario,hora)  values (antes.catalogo ,NULL ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_des_no_efec delete on "informix"
    .des_no_efec referencing old as antes
    for each row
        (
        insert into "informix".aud_des_no_efec (no_efec_catalogo,
    no_efec_codigo,no_efec_registro,no_efec_fecha,no_efec_cantidad,no_efec_corrida,
    desp_no_efec_catalogo,desp_no_efec_codigo,desp_no_efec_registro,desp_no_efec_fecha,
    desp_no_efec_cantidad,desp_no_efec_corrida,accion,usuario,hora)  
    values (antes.no_efec_catalogo ,antes.no_efec_codigo ,antes.no_efec_registro 
    ,antes.no_efec_fecha ,antes.no_efec_cantidad ,antes.no_efec_corrida 
    ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_des_no_efec insert on "informix"
    .des_no_efec referencing new as luego
    for each row
        (
        insert into "informix".aud_des_no_efec (no_efec_catalogo,
    no_efec_codigo,no_efec_registro,no_efec_fecha,no_efec_cantidad,no_efec_corrida,
    desp_no_efec_catalogo,desp_no_efec_codigo,desp_no_efec_registro,desp_no_efec_fecha,
    desp_no_efec_cantidad,desp_no_efec_corrida,accion,usuario,hora)  
    values (NULL ,NULL ,NULL ,'' ,'' ,'' ,luego.no_efec_catalogo ,luego.no_efec_codigo 
    ,luego.no_efec_registro ,luego.no_efec_fecha ,luego.no_efec_cantidad 
    ,luego.no_efec_corrida ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_des_no_efec update on "informix"
    .des_no_efec referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_des_no_efec (no_efec_catalogo,
    no_efec_codigo,no_efec_registro,no_efec_fecha,no_efec_cantidad,no_efec_corrida,
    desp_no_efec_catalogo,desp_no_efec_codigo,desp_no_efec_registro,desp_no_efec_fecha,
    desp_no_efec_cantidad,desp_no_efec_corrida,accion,usuario,hora)  
    values (antes.no_efec_catalogo ,antes.no_efec_codigo ,antes.no_efec_registro 
    ,antes.no_efec_fecha ,antes.no_efec_cantidad ,antes.no_efec_corrida 
    ,luego.no_efec_catalogo ,luego.no_efec_codigo ,luego.no_efec_registro 
    ,luego.no_efec_fecha ,luego.no_efec_cantidad ,luego.no_efec_corrida 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_tipo_docum update on "informix".tipo_docum 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tipo_docum (tipo_codigo,tipo_desc,
    desp_tipo_codigo,desp_tipo_desc,accion,usuario,hora)  values (antes.tipo_codigo 
    ,antes.tipo_desc ,luego.tipo_codigo ,luego.tipo_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_tipo_docum insert on "informix".tipo_docum 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_tipo_docum (tipo_codigo,tipo_desc,
    desp_tipo_codigo,desp_tipo_desc,accion,usuario,hora)  values (NULL 
    ,' ' ,luego.tipo_codigo ,luego.tipo_desc ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_tipo_docum delete on "informix".tipo_docum 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_tipo_docum (tipo_codigo,tipo_desc,
    desp_tipo_codigo,desp_tipo_desc,accion,usuario,hora)  values (antes.tipo_codigo 
    ,antes.tipo_desc ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_menus update on "informix".menus 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_menus (mnu_codigo,mnu_descripcion,
    mnu_opcion,desp_mnu_codigo,desp_mnu_descripcion,desp_mnu_opcion,accion,
    usuario,hora)  values (antes.mnu_codigo ,antes.mnu_descripcion ,antes.mnu_opcion 
    ,luego.mnu_codigo ,luego.mnu_descripcion ,luego.mnu_opcion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_menus insert on "informix".menus 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_menus (mnu_codigo,mnu_descripcion,
    mnu_opcion,desp_mnu_codigo,desp_mnu_descripcion,desp_mnu_opcion,accion,
    usuario,hora)  values (NULL ,' ' ,' ' ,luego.mnu_codigo ,luego.mnu_descripcion 
    ,luego.mnu_opcion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_menus delete on "informix".menus 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_menus (mnu_codigo,mnu_descripcion,
    mnu_opcion,desp_mnu_codigo,desp_mnu_descripcion,desp_mnu_opcion,accion,
    usuario,hora)  values (antes.mnu_codigo ,antes.mnu_descripcion ,antes.mnu_opcion 
    ,NULL ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_usumenu update on "informix".usumenu 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_usumenu (um_nombre,um_cod_menu,
    desp_um_nombre,desp_um_cod_menu,accion,usuario,hora)  values (antes.um_nombre 
    ,antes.um_cod_menu ,luego.um_nombre ,luego.um_cod_menu ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_usumenu insert on "informix".usumenu 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_usumenu (um_nombre,um_cod_menu,
    desp_um_nombre,desp_um_cod_menu,accion,usuario,hora)  values (' ' 
    ,NULL ,luego.um_nombre ,luego.um_cod_menu ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_usumenu delete on "informix".usumenu 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_usumenu (um_nombre,um_cod_menu,
    desp_um_nombre,desp_um_cod_menu,accion,usuario,hora)  values (antes.um_nombre 
    ,antes.um_cod_menu ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_mcols update on "informix".mcols 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mcols (mc_codigo,mc_orden,
    mc_descrip,desp_mc_codigo,desp_mc_orden,desp_mc_descrip,accion,usuario,
    hora)  values (antes.mc_codigo ,antes.mc_orden ,antes.mc_descrip 
    ,luego.mc_codigo ,luego.mc_orden ,luego.mc_descrip ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_mcols insert on "informix".mcols 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_mcols (mc_codigo,mc_orden,
    mc_descrip,desp_mc_codigo,desp_mc_orden,desp_mc_descrip,accion,usuario,
    hora)  values (NULL ,NULL ,' ' ,luego.mc_codigo ,luego.mc_orden ,luego.mc_descrip 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_mcols delete on "informix".mcols 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_mcols (mc_codigo,mc_orden,
    mc_descrip,desp_mc_codigo,desp_mc_orden,desp_mc_descrip,accion,usuario,
    hora)  values (antes.mc_codigo ,antes.mc_orden ,antes.mc_descrip 
    ,NULL ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_mreps update on "informix".mreps 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mreps (mr_codigo,mr_descrip,
    mr_repo,desp_mr_codigo,desp_mr_descrip,desp_mr_repo,accion,usuario,
    hora)  values (antes.mr_codigo ,antes.mr_descrip ,antes.mr_repo ,
    luego.mr_codigo ,luego.mr_descrip ,luego.mr_repo ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_mreps insert on "informix".mreps 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_mreps (mr_codigo,mr_descrip,
    mr_repo,desp_mr_codigo,desp_mr_descrip,desp_mr_repo,accion,usuario,
    hora)  values (NULL ,' ' ,' ' ,luego.mr_codigo ,luego.mr_descrip ,luego.mr_repo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_mreps delete on "informix".mreps 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_mreps (mr_codigo,mr_descrip,
    mr_repo,desp_mr_codigo,desp_mr_descrip,desp_mr_repo,accion,usuario,
    hora)  values (antes.mr_codigo ,antes.mr_descrip ,antes.mr_repo ,
    NULL ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_depmun delete on "informix".depmun 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_depmun (dm_codigo,dm_desc_lg,
    dm_desc_md,dm_desc_ct,dm_mun_dep,desp_dm_codigo,desp_dm_desc_lg,desp_dm_desc_md,
    desp_dm_desc_ct,desp_dm_mun_dep,accion,usuario,hora)  values (antes.dm_codigo 
    ,antes.dm_desc_lg ,antes.dm_desc_md ,antes.dm_desc_ct ,antes.dm_mun_dep 
    ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_depmun insert on "informix".depmun 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_depmun (dm_codigo,dm_desc_lg,
    dm_desc_md,dm_desc_ct,dm_mun_dep,desp_dm_codigo,desp_dm_desc_lg,desp_dm_desc_md,
    desp_dm_desc_ct,desp_dm_mun_dep,accion,usuario,hora)  values ('' ,
    '' ,'' ,'' ,'' ,luego.dm_codigo ,luego.dm_desc_lg ,luego.dm_desc_md ,
    luego.dm_desc_ct ,luego.dm_mun_dep ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_depmun update on "informix".depmun 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_depmun (dm_codigo,dm_desc_lg,
    dm_desc_md,dm_desc_ct,dm_mun_dep,desp_dm_codigo,desp_dm_desc_lg,desp_dm_desc_md,
    desp_dm_desc_ct,desp_dm_mun_dep,accion,usuario,hora)  values (antes.dm_codigo 
    ,antes.dm_desc_lg ,antes.dm_desc_md ,antes.dm_desc_ct ,antes.dm_mun_dep 
    ,luego.dm_codigo ,luego.dm_desc_lg ,luego.dm_desc_md ,luego.dm_desc_ct 
    ,luego.dm_mun_dep ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_meop update on "informix".meop referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_meop (meom_ceom,meom_desc_lg,
    meom_desc_md,meom_desc_ct,meom_serie,meom_nivel,desp_meom_ceom,desp_meom_desc_lg,
    desp_meom_desc_md,desp_meom_desc_ct,desp_meom_serie,desp_meom_nivel,
    accion,usuario,hora)  values (antes.meom_ceom ,antes.meom_desc_lg 
    ,antes.meom_desc_md ,antes.meom_desc_ct ,antes.meom_serie ,antes.meom_nivel 
    ,luego.meom_ceom ,luego.meom_desc_lg ,luego.meom_desc_md ,luego.meom_desc_ct 
    ,luego.meom_serie ,luego.meom_nivel ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_meop insert on "informix".meop referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_meop (meom_ceom,meom_desc_lg,
    meom_desc_md,meom_desc_ct,meom_serie,meom_nivel,desp_meom_ceom,desp_meom_desc_lg,
    desp_meom_desc_md,desp_meom_desc_ct,desp_meom_serie,desp_meom_nivel,
    accion,usuario,hora)  values (' ' ,' ' ,' ' ,' ' ,' ' ,NULL ,luego.meom_ceom 
    ,luego.meom_desc_lg ,luego.meom_desc_md ,luego.meom_desc_ct ,luego.meom_serie 
    ,luego.meom_nivel ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_meop delete on "informix".meop referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_meop (meom_ceom,meom_desc_lg,
    meom_desc_md,meom_desc_ct,meom_serie,meom_nivel,desp_meom_ceom,desp_meom_desc_lg,
    desp_meom_desc_md,desp_meom_desc_ct,desp_meom_serie,desp_meom_nivel,
    accion,usuario,hora)  values (antes.meom_ceom ,antes.meom_desc_lg 
    ,antes.meom_desc_md ,antes.meom_desc_ct ,antes.meom_serie ,antes.meom_nivel 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_fbitacora update on "informix".fbitacora 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fbitacora (fbit_user,fbit_cod,
    fbit_mes,fbit_fecha,desp_fbit_user,desp_fbit_cod,desp_fbit_mes,desp_fbit_fecha,
    accion,usuario,hora)  values (antes.fbit_user ,antes.fbit_cod ,antes.fbit_mes 
    ,antes.fbit_fecha ,luego.fbit_user ,luego.fbit_cod ,luego.fbit_mes 
    ,luego.fbit_fecha ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fbitacora insert on "informix".fbitacora 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_fbitacora (fbit_user,fbit_cod,
    fbit_mes,fbit_fecha,desp_fbit_user,desp_fbit_cod,desp_fbit_mes,desp_fbit_fecha,
    accion,usuario,hora)  values (NULL ,NULL ,'' ,'' ,luego.fbit_user ,
    luego.fbit_cod ,luego.fbit_mes ,luego.fbit_fecha ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_fbitacora delete on "informix".fbitacora 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_fbitacora (fbit_user,fbit_cod,
    fbit_mes,fbit_fecha,desp_fbit_user,desp_fbit_cod,desp_fbit_mes,desp_fbit_fecha,
    accion,usuario,hora)  values (antes.fbit_user ,antes.fbit_cod ,antes.fbit_mes 
    ,antes.fbit_fecha ,NULL ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_categorias delete on "informix".categorias 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_categorias (cat_codigo,cat_descripcion,
    desp_cat_codigo,desp_cat_descripcion,accion,usuario,hora)  values 
    (antes.cat_codigo ,antes.cat_descripcion ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_categorias insert on "informix".categorias 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_categorias (cat_codigo,cat_descripcion,
    desp_cat_codigo,desp_cat_descripcion,accion,usuario,hora)  values 
    ('' ,'' ,luego.cat_codigo ,luego.cat_descripcion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_categorias update on "informix".categorias 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_categorias (cat_codigo,cat_descripcion,
    desp_cat_codigo,desp_cat_descripcion,accion,usuario,hora)  values 
    (antes.cat_codigo ,antes.cat_descripcion ,luego.cat_codigo ,luego.cat_descripcion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fnosalta update on "informix".fnosalta 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fnosalta (fcatalogo,desp_fcatalogo,
    accion,usuario,hora)  values (antes.fcatalogo ,luego.fcatalogo ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fnosalta insert on "informix".fnosalta 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_fnosalta (fcatalogo,desp_fcatalogo,
    accion,usuario,hora)  values (NULL ,luego.fcatalogo ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_fnosalta delete on "informix".fnosalta 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_fnosalta (fcatalogo,desp_fcatalogo,
    accion,usuario,hora)  values (antes.fcatalogo ,NULL ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_tropa_pv update on "informix".tropa_pv 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tropa_pv (tpv_plaza,tpv_fec_trans,
    tpv_catalogo,tpv_operador,desp_tpv_plaza,desp_tpv_fec_trans,desp_tpv_catalogo,
    desp_tpv_operador,accion,usuario,hora)  values (antes.tpv_plaza ,
    antes.tpv_fec_trans ,antes.tpv_catalogo ,antes.tpv_operador ,luego.tpv_plaza 
    ,luego.tpv_fec_trans ,luego.tpv_catalogo ,luego.tpv_operador ,'U' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tropa_pv insert on "informix".tropa_pv 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_tropa_pv (tpv_plaza,tpv_fec_trans,
    tpv_catalogo,tpv_operador,desp_tpv_plaza,desp_tpv_fec_trans,desp_tpv_catalogo,
    desp_tpv_operador,accion,usuario,hora)  values (NULL ,' ' ,NULL ,' '
     ,luego.tpv_plaza ,luego.tpv_fec_trans ,luego.tpv_catalogo ,luego.tpv_operador 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_tropa_pv delete on "informix".tropa_pv 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_tropa_pv (tpv_plaza,tpv_fec_trans,
    tpv_catalogo,tpv_operador,desp_tpv_plaza,desp_tpv_fec_trans,desp_tpv_catalogo,
    desp_tpv_operador,accion,usuario,hora)  values (antes.tpv_plaza ,
    antes.tpv_fec_trans ,antes.tpv_catalogo ,antes.tpv_operador ,NULL 
    ,' ' ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".upd_doc_pendientes update on "informix"
    .doc_pendientes referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_doc_pendientes (antes1,antes2,
    antes3,despues1,despues2,despues3,hora,accion,usuario,tabname)  values 
    (antes.codigo ,antes.fecha ,antes.oficina ,luego.codigo ,luego.fecha 
    ,luego.oficina ,CURRENT year to fraction(3) ,'U' ,USER ,'doc_pendientes'
     ));

create trigger "informix".ins_doc_pendientes insert on "informix"
    .doc_pendientes referencing new as luego
    for each row
        (
        insert into "informix".aud_doc_pendientes (antes1,antes2,
    antes3,despues1,despues2,despues3,hora,accion,usuario,tabname)  values 
    (' ' ,' ' ,' ' ,luego.codigo ,luego.fecha ,luego.oficina ,CURRENT year 
    to fraction(3) ,'I' ,USER ,'doc_pendientes' ));

create trigger "informix".del_doc_pendientes delete on "informix"
    .doc_pendientes referencing old as antes
    for each row
        (
        insert into "informix".aud_doc_pendientes (antes1,antes2,
    antes3,despues1,despues2,despues3,hora,accion,usuario,tabname)  values 
    (antes.codigo ,antes.fecha ,antes.oficina ,' ' ,' ' ,' ' ,CURRENT year 
    to fraction(3) ,'D' ,USER ,'doc_pendientes' ));

create trigger "informix".act_oficina update on "informix".oficina 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_oficina (of_dep,of_codigo,
    of_desc,desp_of_dep,desp_of_codigo,desp_of_desc,accion,usuario,hora) 
     values (antes.of_dep ,antes.of_codigo ,antes.of_desc ,luego.of_dep 
    ,luego.of_codigo ,luego.of_desc ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_oficina insert on "informix".oficina 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_oficina (of_dep,of_codigo,
    of_desc,desp_of_dep,desp_of_codigo,desp_of_desc,accion,usuario,hora) 
     values (NULL ,' ' ,' ' ,luego.of_dep ,luego.of_codigo ,luego.of_desc 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_oficina delete on "informix".oficina 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_oficina (of_dep,of_codigo,
    of_desc,desp_of_dep,desp_of_codigo,desp_of_desc,accion,usuario,hora) 
     values (antes.of_dep ,antes.of_codigo ,antes.of_desc ,NULL ,' ' ,
    ' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".upd_corr_seg update on "informix".corr_seg 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_corr_seg (antes1,antes2,antes3,
    antes4,despues1,despues2,despues3,despues4,hora,accion,usuario,tabname) 
     values (antes.seg_usuario ,antes.seg_passwd ,antes.seg_dep ,antes.seg_oficina 
    ,luego.seg_usuario ,luego.seg_passwd ,luego.seg_dep ,luego.seg_oficina 
    ,CURRENT year to fraction(3) ,'U' ,USER ,'corr_seg' ));

create trigger "informix".ins_corr_seg insert on "informix".corr_seg 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_corr_seg (antes1,antes2,antes3,
    antes4,despues1,despues2,despues3,despues4,hora,accion,usuario,tabname) 
     values (' ' ,' ' ,' ' ,' ' ,luego.seg_usuario ,luego.seg_passwd ,luego.seg_dep 
    ,luego.seg_oficina ,CURRENT year to fraction(3) ,'I' ,USER ,'corr_seg'
     ));

create trigger "informix".del_corr_seg delete on "informix".corr_seg 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_corr_seg (antes1,antes2,antes3,
    antes4,despues1,despues2,despues3,despues4,hora,accion,usuario,tabname) 
     values (antes.seg_usuario ,antes.seg_passwd ,antes.seg_dep ,antes.seg_oficina 
    ,' ' ,' ' ,' ' ,' ' ,CURRENT year to fraction(3) ,'D' ,USER ,'corr_seg'
     ));

create trigger "informix".upd_meomeop update on "informix".meomeop 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_meomeop (antes1,antes2,despues1,
    despues2,hora,accion,usuario,tabname)  values (antes.meom ,antes.meop 
    ,luego.meom ,luego.meop ,CURRENT year to fraction(3) ,'U' ,USER ,'meomeop'
     ));

create trigger "informix".ins_meomeop insert on "informix".meomeop 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_meomeop (antes1,antes2,despues1,
    despues2,hora,accion,usuario,tabname)  values (' ' ,' ' ,luego.meom 
    ,luego.meop ,CURRENT year to fraction(3) ,'I' ,USER ,'meomeop' ));

create trigger "informix".del_meomeop delete on "informix".meomeop 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_meomeop (antes1,antes2,despues1,
    despues2,hora,accion,usuario,tabname)  values (antes.meom ,antes.meop 
    ,' ' ,' ' ,CURRENT year to fraction(3) ,'D' ,USER ,'meomeop' ));

create trigger "informix".act_tablas update on "informix".tablas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tablas (tabla,sistema,llave_primaria,
    llaves_foraneas,descripcion,desp_tabla,desp_sistema,desp_llave_primaria,
    desp_llaves_foraneas,desp_descripcion,accion,usuario,hora)  values 
    (antes.tabla ,antes.sistema ,antes.llave_primaria ,antes.llaves_foraneas 
    ,antes.descripcion ,luego.tabla ,luego.sistema ,luego.llave_primaria 
    ,luego.llaves_foraneas ,luego.descripcion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_tablas insert on "informix".tablas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_tablas (tabla,sistema,llave_primaria,
    llaves_foraneas,descripcion,desp_tabla,desp_sistema,desp_llave_primaria,
    desp_llaves_foraneas,desp_descripcion,accion,usuario,hora)  values 
    (' ' ,' ' ,' ' ,' ' ,' ' ,luego.tabla ,luego.sistema ,luego.llave_primaria 
    ,luego.llaves_foraneas ,luego.descripcion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_tablas delete on "informix".tablas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_tablas (tabla,sistema,llave_primaria,
    llaves_foraneas,descripcion,desp_tabla,desp_sistema,desp_llave_primaria,
    desp_llaves_foraneas,desp_descripcion,accion,usuario,hora)  values 
    (antes.tabla ,antes.sistema ,antes.llave_primaria ,antes.llaves_foraneas 
    ,antes.descripcion ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_chunk update on "informix".chunk 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_chunk (ch_id,ch_dbspace,ch_tamano,
    ch_path,ch_creacion,desp_ch_id,desp_ch_dbspace,desp_ch_tamano,desp_ch_path,
    desp_ch_creacion,accion,usuario,hora)  values (antes.ch_id ,antes.ch_dbspace 
    ,antes.ch_tamano ,antes.ch_path ,antes.ch_creacion ,luego.ch_id ,
    luego.ch_dbspace ,luego.ch_tamano ,luego.ch_path ,luego.ch_creacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_chunk insert on "informix".chunk 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_chunk (ch_id,ch_dbspace,ch_tamano,
    ch_path,ch_creacion,desp_ch_id,desp_ch_dbspace,desp_ch_tamano,desp_ch_path,
    desp_ch_creacion,accion,usuario,hora)  values (NULL ,NULL ,NULL ,
    '' ,'' ,luego.ch_id ,luego.ch_dbspace ,luego.ch_tamano ,luego.ch_path 
    ,luego.ch_creacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_chunk delete on "informix".chunk 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_chunk (ch_id,ch_dbspace,ch_tamano,
    ch_path,ch_creacion,desp_ch_id,desp_ch_dbspace,desp_ch_tamano,desp_ch_path,
    desp_ch_creacion,accion,usuario,hora)  values (antes.ch_id ,antes.ch_dbspace 
    ,antes.ch_tamano ,antes.ch_path ,antes.ch_creacion ,NULL ,NULL ,NULL 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_cuentas update on "informix".cuentas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cuentas (antes1,antes2,antes3,
    despues1,despues2,despues3,hora,accion,usuario,tabname)  values (antes.cta_catalogo 
    ,antes.cta_numero ,antes.cta_banco ,luego.cta_catalogo ,luego.cta_numero 
    ,luego.cta_banco ,CURRENT year to fraction(3) ,'U' ,USER ,'cuentas'
     ));

create trigger "informix".ins_cuentas insert on "informix".cuentas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_cuentas (antes1,antes2,antes3,
    despues1,despues2,despues3,hora,accion,usuario,tabname)  values (NULL 
    ,' ' ,NULL ,luego.cta_catalogo ,luego.cta_numero ,luego.cta_banco 
    ,CURRENT year to fraction(3) ,'I' ,USER ,'cuentas' ));

create trigger "informix".del_cuentas delete on "informix".cuentas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_cuentas (antes1,antes2,antes3,
    despues1,despues2,despues3,hora,accion,usuario,tabname)  values (antes.cta_catalogo 
    ,antes.cta_numero ,antes.cta_banco ,NULL ,' ' ,NULL ,CURRENT year 
    to fraction(3) ,'D' ,USER ,'cuentas' ));

create trigger "informix".upd_mfsue_et update on "informix".mfsue_et 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mfsue_et (antes1,antes2,antes3,
    antes4,antes5,despues1,despues2,despues3,despues4,despues5,hora,accion,
    usuario,tabname)  values (antes.sue_grado ,antes.sue_serie ,antes.sue_nivel 
    ,antes.sue_sueldo ,antes.sue_prima ,luego.sue_grado ,luego.sue_serie 
    ,luego.sue_nivel ,luego.sue_sueldo ,luego.sue_prima ,CURRENT year 
    to fraction(3) ,'U' ,USER ,'mfsue_et' ));

create trigger "informix".ins_mfsue_et insert on "informix".mfsue_et 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_mfsue_et (antes1,antes2,antes3,
    antes4,antes5,despues1,despues2,despues3,despues4,despues5,hora,accion,
    usuario,tabname)  values (' ' ,' ' ,' ' ,' ' ,' ' ,luego.sue_grado ,luego.sue_serie 
    ,luego.sue_nivel ,luego.sue_sueldo ,luego.sue_prima ,CURRENT year 
    to fraction(3) ,'I' ,USER ,'mfsue_et' ));

create trigger "informix".del_mfsue_et delete on "informix".mfsue_et 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_mfsue_et (antes1,antes2,antes3,
    antes4,antes5,despues1,despues2,despues3,despues4,despues5,hora,accion,
    usuario,tabname)  values (antes.sue_grado ,antes.sue_serie ,antes.sue_nivel 
    ,antes.sue_sueldo ,antes.sue_prima ,' ' ,' ' ,' ' ,' ' ,' ' ,CURRENT year 
    to fraction(3) ,'D' ,USER ,'mfsue_et' ));

create trigger "informix".upd_mftror update on "informix".mftror 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mftror (antes1,antes2,antes3,
    antes4,despues1,despues2,despues3,despues4,hora,accion,usuario,tabname) 
     values (antes.tro_grado ,antes.tro_dep ,antes.tro_jerarquia ,antes.tro_sueldo 
    ,luego.tro_grado ,luego.tro_dep ,luego.tro_jerarquia ,luego.tro_sueldo 
    ,CURRENT year to fraction(3) ,'U' ,USER ,'mftror' ));

create trigger "informix".ins_mftror insert on "informix".mftror 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_mftror (antes1,antes2,antes3,
    antes4,despues1,despues2,despues3,despues4,hora,accion,usuario,tabname) 
     values (' ' ,' ' ,' ' ,' ' ,luego.tro_grado ,luego.tro_dep ,luego.tro_jerarquia 
    ,luego.tro_sueldo ,CURRENT year to fraction(3) ,'I' ,USER ,'mftror'
     ));

create trigger "informix".del_mftror delete on "informix".mftror 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_mftror (antes1,antes2,antes3,
    antes4,despues1,despues2,despues3,despues4,hora,accion,usuario,tabname) 
     values (antes.tro_grado ,antes.tro_dep ,antes.tro_jerarquia ,antes.tro_sueldo 
    ,' ' ,' ' ,' ' ,' ' ,CURRENT year to fraction(3) ,'D' ,USER ,'mftror' ));
    

create trigger "informix".del_cmm_hospitalizados delete on "informix"
    .cmm_hospitalizados referencing old as antes
    for each row
        (
        insert into "informix".aud_cmm_hospitalizados (hos_catalogo,
    hos_fec_ingreso,hos_diag_ingreso,hos_fec_egreso,hos_diag_egreso,hos_grado,
    hos_depen,desp_hos_catalogo,desp_hos_fec_ingreso,desp_hos_diag_ingreso,
    desp_hos_fec_egreso,desp_hos_diag_egreso,desp_hos_grado,desp_hos_depen,
    accion,usuario,hora)  values (antes.hos_catalogo ,antes.hos_fec_ingreso 
    ,antes.hos_diag_ingreso ,antes.hos_fec_egreso ,antes.hos_diag_egreso 
    ,antes.hos_grado ,antes.hos_depen ,NULL ,'' ,'' ,'' ,'' ,NULL ,NULL ,
    'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cmm_hospitalizados insert on "informix"
    .cmm_hospitalizados referencing new as luego
    for each row
        (
        insert into "informix".aud_cmm_hospitalizados (hos_catalogo,
    hos_fec_ingreso,hos_diag_ingreso,hos_fec_egreso,hos_diag_egreso,hos_grado,
    hos_depen,desp_hos_catalogo,desp_hos_fec_ingreso,desp_hos_diag_ingreso,
    desp_hos_fec_egreso,desp_hos_diag_egreso,desp_hos_grado,desp_hos_depen,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,NULL ,NULL ,luego.hos_catalogo 
    ,luego.hos_fec_ingreso ,luego.hos_diag_ingreso ,luego.hos_fec_egreso 
    ,luego.hos_diag_egreso ,luego.hos_grado ,luego.hos_depen ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_cmm_hospitalizados update on "informix"
    .cmm_hospitalizados referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_cmm_hospitalizados (hos_catalogo,
    hos_fec_ingreso,hos_diag_ingreso,hos_fec_egreso,hos_diag_egreso,hos_grado,
    hos_depen,desp_hos_catalogo,desp_hos_fec_ingreso,desp_hos_diag_ingreso,
    desp_hos_fec_egreso,desp_hos_diag_egreso,desp_hos_grado,desp_hos_depen,
    accion,usuario,hora)  values (antes.hos_catalogo ,antes.hos_fec_ingreso 
    ,antes.hos_diag_ingreso ,antes.hos_fec_egreso ,antes.hos_diag_egreso 
    ,antes.hos_grado ,antes.hos_depen ,luego.hos_catalogo ,luego.hos_fec_ingreso 
    ,luego.hos_diag_ingreso ,luego.hos_fec_egreso ,luego.hos_diag_egreso 
    ,luego.hos_grado ,luego.hos_depen ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_cmm_rebajados delete on "informix"
    .cmm_rebajados referencing old as antes
    for each row
        (
        insert into "informix".aud_cmm_rebajados (reb_catalogo,
    reb_fec_inicio,reb_fec_final,reb_diagnostico,reb_tipo,reb_tiempo,
    reb_grado,reb_depen,desp_reb_catalogo,desp_reb_fec_inicio,desp_reb_fec_final,
    desp_reb_diagnostico,desp_reb_tipo,desp_reb_tiempo,desp_reb_grado,
    desp_reb_depen,accion,usuario,hora)  values (antes.reb_catalogo ,
    antes.reb_fec_inicio ,antes.reb_fec_final ,antes.reb_diagnostico 
    ,antes.reb_tipo ,antes.reb_tiempo ,antes.reb_grado ,antes.reb_depen 
    ,NULL ,'' ,'' ,'' ,' ' ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_cmm_rebajados insert on "informix"
    .cmm_rebajados referencing new as luego
    for each row
        (
        insert into "informix".aud_cmm_rebajados (reb_catalogo,
    reb_fec_inicio,reb_fec_final,reb_diagnostico,reb_tipo,reb_tiempo,
    reb_grado,reb_depen,desp_reb_catalogo,desp_reb_fec_inicio,desp_reb_fec_final,
    desp_reb_diagnostico,desp_reb_tipo,desp_reb_tiempo,desp_reb_grado,
    desp_reb_depen,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,' ' ,NULL 
    ,NULL ,NULL ,luego.reb_catalogo ,luego.reb_fec_inicio ,luego.reb_fec_final 
    ,luego.reb_diagnostico ,luego.reb_tipo ,luego.reb_tiempo ,luego.reb_grado 
    ,luego.reb_depen ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_cmm_rebajados update on "informix"
    .cmm_rebajados referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cmm_rebajados (reb_catalogo,
    reb_fec_inicio,reb_fec_final,reb_diagnostico,reb_tipo,reb_tiempo,
    reb_grado,reb_depen,desp_reb_catalogo,desp_reb_fec_inicio,desp_reb_fec_final,
    desp_reb_diagnostico,desp_reb_tipo,desp_reb_tiempo,desp_reb_grado,
    desp_reb_depen,accion,usuario,hora)  values (antes.reb_catalogo ,
    antes.reb_fec_inicio ,antes.reb_fec_final ,antes.reb_diagnostico 
    ,antes.reb_tipo ,antes.reb_tiempo ,antes.reb_grado ,antes.reb_depen 
    ,luego.reb_catalogo ,luego.reb_fec_inicio ,luego.reb_fec_final ,luego.reb_diagnostico 
    ,luego.reb_tipo ,luego.reb_tiempo ,luego.reb_grado ,luego.reb_depen 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_mnums update on "informix".mnums 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mnums (mn_codigo,mn_puesto,
    mn_orden,mn_dep,mn_valor,desp_mn_codigo,desp_mn_puesto,desp_mn_orden,
    desp_mn_dep,desp_mn_valor,accion,usuario,hora)  values (antes.mn_codigo 
    ,antes.mn_puesto ,antes.mn_orden ,antes.mn_dep ,antes.mn_valor ,luego.mn_codigo 
    ,luego.mn_puesto ,luego.mn_orden ,luego.mn_dep ,luego.mn_valor ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_mnums insert on "informix".mnums 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_mnums (mn_codigo,mn_puesto,
    mn_orden,mn_dep,mn_valor,desp_mn_codigo,desp_mn_puesto,desp_mn_orden,
    desp_mn_dep,desp_mn_valor,accion,usuario,hora)  values (NULL ,NULL 
    ,NULL ,NULL ,NULL ,luego.mn_codigo ,luego.mn_puesto ,luego.mn_orden 
    ,luego.mn_dep ,luego.mn_valor ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_mnums delete on "informix".mnums 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_mnums (mn_codigo,mn_puesto,
    mn_orden,mn_dep,mn_valor,desp_mn_codigo,desp_mn_puesto,desp_mn_orden,
    desp_mn_dep,desp_mn_valor,accion,usuario,hora)  values (antes.mn_codigo 
    ,antes.mn_puesto ,antes.mn_orden ,antes.mn_dep ,antes.mn_valor ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".upd_dfdes_tro update on "informix".dfdes_tro 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dfdes_tro (antes1,antes2,antes3,
    antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,antes12,
    antes13,antes14,antes15,antes16,antes17,despues1,despues2,despues3,
    despues4,despues5,despues6,despues7,despues8,despues9,despues10,despues11,
    despues12,despues13,despues14,despues15,despues16,despues17,hora,
    accion,usuario,tabname)  values (antes.dtd_catalogo ,antes.dtd_codigo 
    ,antes.dtd_nu_reg ,antes.dtd_cod_control ,antes.dtd_tipo_desc ,antes.dtd_fec_ini 
    ,antes.dtd_ult_act ,antes.dtd_fec_cer ,antes.dtd_monto ,antes.dtd_saldo 
    ,antes.dtd_mensual ,antes.dtd_tot_cuotas ,antes.dtd_num_cuotas ,antes.dtd_documen 
    ,antes.dtd_codeudor ,antes.dtd_nom_bene ,antes.dtd_juz_con ,luego.dtd_catalogo 
    ,luego.dtd_codigo ,luego.dtd_nu_reg ,luego.dtd_cod_control ,luego.dtd_tipo_desc 
    ,luego.dtd_fec_ini ,luego.dtd_ult_act ,luego.dtd_fec_cer ,luego.dtd_monto 
    ,luego.dtd_saldo ,luego.dtd_mensual ,luego.dtd_tot_cuotas ,luego.dtd_num_cuotas 
    ,luego.dtd_documen ,luego.dtd_codeudor ,luego.dtd_nom_bene ,luego.dtd_juz_con 
    ,CURRENT year to fraction(3) ,'U' ,USER ,'dfdes_tro' ));

create trigger "informix".ins_dfdes_tro insert on "informix".dfdes_tro 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_dfdes_tro (antes1,antes2,antes3,
    antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,antes12,
    antes13,antes14,antes15,antes16,antes17,despues1,despues2,despues3,
    despues4,despues5,despues6,despues7,despues8,despues9,despues10,despues11,
    despues12,despues13,despues14,despues15,despues16,despues17,hora,
    accion,usuario,tabname)  values (' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.dtd_catalogo ,luego.dtd_codigo 
    ,luego.dtd_nu_reg ,luego.dtd_cod_control ,luego.dtd_tipo_desc ,luego.dtd_fec_ini 
    ,luego.dtd_ult_act ,luego.dtd_fec_cer ,luego.dtd_monto ,luego.dtd_saldo 
    ,luego.dtd_mensual ,luego.dtd_tot_cuotas ,luego.dtd_num_cuotas ,luego.dtd_documen 
    ,luego.dtd_codeudor ,luego.dtd_nom_bene ,luego.dtd_juz_con ,CURRENT 
    year to fraction(3) ,'I' ,USER ,'dfdes_tro' ));

create trigger "informix".del_dfdes_tro delete on "informix".dfdes_tro 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_dfdes_tro (antes1,antes2,antes3,
    antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,antes12,
    antes13,antes14,antes15,antes16,antes17,despues1,despues2,despues3,
    despues4,despues5,despues6,despues7,despues8,despues9,despues10,despues11,
    despues12,despues13,despues14,despues15,despues16,despues17,hora,
    accion,usuario,tabname)  values (antes.dtd_catalogo ,antes.dtd_codigo 
    ,antes.dtd_nu_reg ,antes.dtd_cod_control ,antes.dtd_tipo_desc ,antes.dtd_fec_ini 
    ,antes.dtd_ult_act ,antes.dtd_fec_cer ,antes.dtd_monto ,antes.dtd_saldo 
    ,antes.dtd_mensual ,antes.dtd_tot_cuotas ,antes.dtd_num_cuotas ,antes.dtd_documen 
    ,antes.dtd_codeudor ,antes.dtd_nom_bene ,antes.dtd_juz_con ,' ' ,' '
     ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,CURRENT 
    year to fraction(3) ,'D' ,USER ,'dfdes_tro' ));

create trigger "informix".act_permper update on "informix".permper 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_permper (perm_usuario,perm_programa,
    perm_permiso,desp_perm_usuario,desp_perm_programa,desp_perm_permiso,
    accion,usuario,hora)  values (antes.perm_usuario ,antes.perm_programa 
    ,antes.perm_permiso ,luego.perm_usuario ,luego.perm_programa ,luego.perm_permiso 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_permper insert on "informix".permper 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_permper (perm_usuario,perm_programa,
    perm_permiso,desp_perm_usuario,desp_perm_programa,desp_perm_permiso,
    accion,usuario,hora)  values (' ' ,' ' ,NULL ,luego.perm_usuario ,luego.perm_programa 
    ,luego.perm_permiso ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_permper delete on "informix".permper 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_permper (perm_usuario,perm_programa,
    perm_permiso,desp_perm_usuario,desp_perm_programa,desp_perm_permiso,
    accion,usuario,hora)  values (antes.perm_usuario ,antes.perm_programa 
    ,antes.perm_permiso ,' ' ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".upd_permorga update on "informix".permorga 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_permorga (antes1,antes2,antes3,
    despues1,despues2,despues3,hora,accion,usuario,tabname)  values (antes.pero_usuario 
    ,antes.pero_programa ,antes.pero_permiso ,luego.pero_usuario ,luego.pero_programa 
    ,luego.pero_permiso ,CURRENT year to fraction(3) ,'U' ,USER ,'permorga'
     ));

create trigger "informix".ins_permorga insert on "informix".permorga 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_permorga (antes1,antes2,antes3,
    despues1,despues2,despues3,hora,accion,usuario,tabname)  values (
    ' ' ,' ' ,' ' ,luego.pero_usuario ,luego.pero_programa ,luego.pero_permiso 
    ,CURRENT year to fraction(3) ,'I' ,USER ,'permorga' ));

create trigger "informix".del_permorga delete on "informix".permorga 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_permorga (antes1,antes2,antes3,
    despues1,despues2,despues3,hora,accion,usuario,tabname)  values (antes.pero_usuario 
    ,antes.pero_programa ,antes.pero_permiso ,' ' ,' ' ,' ' ,CURRENT year 
    to fraction(3) ,'D' ,USER ,'permorga' ));

create trigger "informix".act_process update on "informix".process 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_process (cod_process,oper_process,
    h_ini_process,comm_process,desc_process,h_fin_process,fec_process,
    host_process,cinta_process,param_process,desp_cod_process,desp_oper_process,
    desp_h_ini_process,desp_comm_process,desp_desc_process,desp_h_fin_process,
    desp_fec_process,desp_host_process,desp_cinta_process,desp_param_process,
    accion,usuario,hora)  values (antes.cod_process ,antes.oper_process 
    ,antes.h_ini_process ,antes.comm_process ,antes.desc_process ,antes.h_fin_process 
    ,antes.fec_process ,antes.host_process ,antes.cinta_process ,antes.param_process 
    ,luego.cod_process ,luego.oper_process ,luego.h_ini_process ,luego.comm_process 
    ,luego.desc_process ,luego.h_fin_process ,luego.fec_process ,luego.host_process 
    ,luego.cinta_process ,luego.param_process ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_process insert on "informix".process 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_process (cod_process,oper_process,
    h_ini_process,comm_process,desc_process,h_fin_process,fec_process,
    host_process,cinta_process,param_process,desp_cod_process,desp_oper_process,
    desp_h_ini_process,desp_comm_process,desp_desc_process,desp_h_fin_process,
    desp_fec_process,desp_host_process,desp_cinta_process,desp_param_process,
    accion,usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' 
    ,' ' ,NULL ,luego.cod_process ,luego.oper_process ,luego.h_ini_process 
    ,luego.comm_process ,luego.desc_process ,luego.h_fin_process ,luego.fec_process 
    ,luego.host_process ,luego.cinta_process ,luego.param_process ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_process delete on "informix".process 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_process (cod_process,oper_process,
    h_ini_process,comm_process,desc_process,h_fin_process,fec_process,
    host_process,cinta_process,param_process,desp_cod_process,desp_oper_process,
    desp_h_ini_process,desp_comm_process,desp_desc_process,desp_h_fin_process,
    desp_fec_process,desp_host_process,desp_cinta_process,desp_param_process,
    accion,usuario,hora)  values (antes.cod_process ,antes.oper_process 
    ,antes.h_ini_process ,antes.comm_process ,antes.desc_process ,antes.h_fin_process 
    ,antes.fec_process ,antes.host_process ,antes.cinta_process ,antes.param_process 
    ,NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".upd_ubi_cerra update on "informix".ubicacion_cerrados 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ubica_cerra (antes1,antes2,
    antes3,antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,
    antes12,antes13,antes14,despues1,despues2,despues3,despues4,despues5,
    despues6,despues7,despues8,despues9,despues10,despues11,despues12,
    despues13,despues14,hora,accion,usuario,tabname)  values (antes.ub_correlativo 
    ,antes.ub_cod_doc ,antes.ub_fec_in ,antes.ub_recibe ,antes.ub_entrega 
    ,antes.ub_recibe_ok ,antes.ub_observaciones ,antes.ub_oficina ,antes.ub_of_dep 
    ,antes.ub_doc_tipo_remite ,antes.ub_doc_remite ,antes.ub_int_ext 
    ,antes.ub_of_remite ,antes.ub_of_dep_remite ,luego.ub_correlativo 
    ,luego.ub_cod_doc ,luego.ub_fec_in ,luego.ub_recibe ,luego.ub_entrega 
    ,luego.ub_recibe_ok ,luego.ub_observaciones ,luego.ub_oficina ,luego.ub_of_dep 
    ,luego.ub_doc_tipo_remite ,luego.ub_doc_remite ,luego.ub_int_ext 
    ,luego.ub_of_remite ,luego.ub_of_dep_remite ,CURRENT year to fraction(3) 
    ,'U' ,USER ,'ubica_cerra' ));

create trigger "informix".ins_ubi_cerra insert on "informix".ubicacion_cerrados 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ubica_cerra (antes1,antes2,
    antes3,antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,
    antes12,antes13,antes14,despues1,despues2,despues3,despues4,despues5,
    despues6,despues7,despues8,despues9,despues10,despues11,despues12,
    despues13,despues14,hora,accion,usuario,tabname)  values (' ' ,' ' 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.ub_correlativo 
    ,luego.ub_cod_doc ,luego.ub_fec_in ,luego.ub_recibe ,luego.ub_entrega 
    ,luego.ub_recibe_ok ,luego.ub_observaciones ,luego.ub_oficina ,luego.ub_of_dep 
    ,luego.ub_doc_tipo_remite ,luego.ub_doc_remite ,luego.ub_int_ext 
    ,luego.ub_of_remite ,luego.ub_of_dep_remite ,CURRENT year to fraction(3) 
    ,'I' ,USER ,'ubicacion_cerra' ));

create trigger "informix".del_ubi_cerra delete on "informix".ubicacion_cerrados 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ubica_cerra (antes1,antes2,
    antes3,antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,
    antes12,antes13,antes14,despues1,despues2,despues3,despues4,despues5,
    despues6,despues7,despues8,despues9,despues10,despues11,despues12,
    despues13,despues14,hora,accion,usuario,tabname)  values (antes.ub_correlativo 
    ,antes.ub_cod_doc ,antes.ub_fec_in ,antes.ub_recibe ,antes.ub_entrega 
    ,antes.ub_recibe_ok ,antes.ub_observaciones ,antes.ub_oficina ,antes.ub_of_dep 
    ,antes.ub_doc_tipo_remite ,antes.ub_doc_remite ,antes.ub_int_ext 
    ,antes.ub_of_remite ,antes.ub_of_dep_remite ,' ' ,' ' ,' ' ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,CURRENT year to fraction(3) ,
    'D' ,USER ,'ubicacion_cerra' ));

create trigger "informix".act_tr_armas update on "informix".tr_armas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tr_armas (tra_catalogo,tra_num_arma,
    tra_tipo,tra_asignacion,tra_situacion,tra_plaza,tra_fecha,tra_accion,
    tra_persona,desp_tra_catalogo,desp_tra_num_arma,desp_tra_tipo,desp_tra_asignacion,
    desp_tra_situacion,desp_tra_plaza,desp_tra_fecha,desp_tra_accion,
    desp_tra_persona,accion,usuario,hora)  values (antes.tra_catalogo 
    ,antes.tra_num_arma ,antes.tra_tipo ,antes.tra_asignacion ,antes.tra_situacion 
    ,antes.tra_plaza ,antes.tra_fecha ,antes.tra_accion ,antes.tra_persona 
    ,luego.tra_catalogo ,luego.tra_num_arma ,luego.tra_tipo ,luego.tra_asignacion 
    ,luego.tra_situacion ,luego.tra_plaza ,luego.tra_fecha ,luego.tra_accion 
    ,luego.tra_persona ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tr_armas insert on "informix".tr_armas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_tr_armas (tra_catalogo,tra_num_arma,
    tra_tipo,tra_asignacion,tra_situacion,tra_plaza,tra_fecha,tra_accion,
    tra_persona,desp_tra_catalogo,desp_tra_num_arma,desp_tra_tipo,desp_tra_asignacion,
    desp_tra_situacion,desp_tra_plaza,desp_tra_fecha,desp_tra_accion,
    desp_tra_persona,accion,usuario,hora)  values (NULL ,' ' ,' ' ,' ' ,
    NULL ,NULL ,' ' ,NULL ,NULL ,luego.tra_catalogo ,luego.tra_num_arma 
    ,luego.tra_tipo ,luego.tra_asignacion ,luego.tra_situacion ,luego.tra_plaza 
    ,luego.tra_fecha ,luego.tra_accion ,luego.tra_persona ,'I' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".del_tr_armas delete on "informix".tr_armas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_tr_armas (tra_catalogo,tra_num_arma,
    tra_tipo,tra_asignacion,tra_situacion,tra_plaza,tra_fecha,tra_accion,
    tra_persona,desp_tra_catalogo,desp_tra_num_arma,desp_tra_tipo,desp_tra_asignacion,
    desp_tra_situacion,desp_tra_plaza,desp_tra_fecha,desp_tra_accion,
    desp_tra_persona,accion,usuario,hora)  values (antes.tra_catalogo 
    ,antes.tra_num_arma ,antes.tra_tipo ,antes.tra_asignacion ,antes.tra_situacion 
    ,antes.tra_plaza ,antes.tra_fecha ,antes.tra_accion ,antes.tra_persona 
    ,NULL ,' ' ,' ' ,' ' ,NULL ,NULL ,' ' ,NULL ,NULL ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".upd_dcur update on "informix".dcur referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_dcur (catalogo,grado,curso,
    fec_inicio,fec_fin,pais,escuela,valor,punteo,equi,puesto,obserba,
    docto_auto,nivel_esc,desp_catalogo,desp_grado,desp_curso,desp_fec_inicio,
    desp_fec_fin,desp_pais,desp_escuela,desp_valor,desp_punteo,desp_equi,
    desp_puesto,desp_obserba,desp_docto_auto,desp_nivel_esc,accion,usuario,
    hora)  values (antes.cur_catalogo ,antes.cur_grado ,antes.cur_curso 
    ,antes.cur_fec_inicio ,antes.cur_fec_fin ,antes.cur_pais ,antes.cur_escuela 
    ,antes.cur_valor ,antes.cur_punteo ,antes.cur_equi ,antes.cur_puesto 
    ,antes.cur_obserba ,antes.cur_docto_auto ,antes.cur_nivel_esc ,luego.cur_catalogo 
    ,luego.cur_grado ,luego.cur_curso ,luego.cur_fec_inicio ,luego.cur_fec_fin 
    ,luego.cur_pais ,luego.cur_escuela ,luego.cur_valor ,luego.cur_punteo 
    ,luego.cur_equi ,luego.cur_puesto ,luego.cur_obserba ,luego.cur_docto_auto 
    ,luego.cur_nivel_esc ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_dcur insert on "informix".dcur referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_dcur (catalogo,grado,curso,
    fec_inicio,fec_fin,pais,escuela,valor,punteo,equi,puesto,obserba,
    docto_auto,nivel_esc,desp_catalogo,desp_grado,desp_curso,desp_fec_inicio,
    desp_fec_fin,desp_pais,desp_escuela,desp_valor,desp_punteo,desp_equi,
    desp_puesto,desp_obserba,desp_docto_auto,desp_nivel_esc,accion,usuario,
    hora)  values (NULL ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,'' ,'' ,'' ,'' ,luego.cur_catalogo ,luego.cur_grado ,luego.cur_curso 
    ,luego.cur_fec_inicio ,luego.cur_fec_fin ,luego.cur_pais ,luego.cur_escuela 
    ,luego.cur_valor ,luego.cur_punteo ,luego.cur_equi ,luego.cur_puesto 
    ,luego.cur_obserba ,luego.cur_docto_auto ,luego.cur_nivel_esc ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dcur delete on "informix".dcur referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_dcur (catalogo,grado,curso,
    fec_inicio,fec_fin,pais,escuela,valor,punteo,equi,puesto,obserba,
    docto_auto,nivel_esc,desp_catalogo,desp_grado,desp_curso,desp_fec_inicio,
    desp_fec_fin,desp_pais,desp_escuela,desp_valor,desp_punteo,desp_equi,
    desp_puesto,desp_obserba,desp_docto_auto,desp_nivel_esc,accion,usuario,
    hora)  values (antes.cur_catalogo ,antes.cur_grado ,antes.cur_curso 
    ,antes.cur_fec_inicio ,antes.cur_fec_fin ,antes.cur_pais ,antes.cur_escuela 
    ,antes.cur_valor ,antes.cur_punteo ,antes.cur_equi ,antes.cur_puesto 
    ,antes.cur_obserba ,antes.cur_docto_auto ,antes.cur_nivel_esc ,NULL 
    ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'D' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dfdes_btrab delete on "informix"
    .dfdes_btrab referencing old as antes
    for each row
        (
        insert into "informix".aud_dfdes_btrab (dfdt_catalogo,
    dfdt_codigo,dfdt_nu_reg,dfdt_cod_control,dfdt_tipo_desc,dfdt_fec_ini,
    dfdt_ult_act,dfdt_fec_cer,dfdt_monto,dfdt_saldo,dfdt_mensual,dfdt_tot_cuotas,
    dfdt_num_cuotas,dfdt_documen,dfdt_codeudor,dfdt_nom_bene,dfdt_juz_con,
    dfdt_si_no,desp_dfdt_catalogo,desp_dfdt_codigo,desp_dfdt_nu_reg,desp_dfdt_cod_control,
    desp_dfdt_tipo_desc,desp_dfdt_fec_ini,desp_dfdt_ult_act,desp_dfdt_fec_cer,
    desp_dfdt_monto,desp_dfdt_saldo,desp_dfdt_mensual,desp_dfdt_tot_cuotas,
    desp_dfdt_num_cuotas,desp_dfdt_documen,desp_dfdt_codeudor,desp_dfdt_nom_bene,
    desp_dfdt_juz_con,desp_dfdt_si_no,accion,usuario,hora)  values (antes.dfdt_catalogo 
    ,antes.dfdt_codigo ,antes.dfdt_nu_reg ,antes.dfdt_cod_control ,antes.dfdt_tipo_desc 
    ,antes.dfdt_fec_ini ,antes.dfdt_ult_act ,antes.dfdt_fec_cer ,antes.dfdt_monto 
    ,antes.dfdt_saldo ,antes.dfdt_mensual ,antes.dfdt_tot_cuotas ,antes.dfdt_num_cuotas 
    ,antes.dfdt_documen ,antes.dfdt_codeudor ,antes.dfdt_nom_bene ,antes.dfdt_juz_con 
    ,antes.dfdt_si_no ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL 
    ,NULL ,'' ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_dfdes_btrab insert on "informix"
    .dfdes_btrab referencing new as luego
    for each row
        (
        insert into "informix".aud_dfdes_btrab (dfdt_catalogo,
    dfdt_codigo,dfdt_nu_reg,dfdt_cod_control,dfdt_tipo_desc,dfdt_fec_ini,
    dfdt_ult_act,dfdt_fec_cer,dfdt_monto,dfdt_saldo,dfdt_mensual,dfdt_tot_cuotas,
    dfdt_num_cuotas,dfdt_documen,dfdt_codeudor,dfdt_nom_bene,dfdt_juz_con,
    dfdt_si_no,desp_dfdt_catalogo,desp_dfdt_codigo,desp_dfdt_nu_reg,desp_dfdt_cod_control,
    desp_dfdt_tipo_desc,desp_dfdt_fec_ini,desp_dfdt_ult_act,desp_dfdt_fec_cer,
    desp_dfdt_monto,desp_dfdt_saldo,desp_dfdt_mensual,desp_dfdt_tot_cuotas,
    desp_dfdt_num_cuotas,desp_dfdt_documen,desp_dfdt_codeudor,desp_dfdt_nom_bene,
    desp_dfdt_juz_con,desp_dfdt_si_no,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,NULL ,'' ,''
     ,'' ,luego.dfdt_catalogo ,luego.dfdt_codigo ,luego.dfdt_nu_reg ,luego.dfdt_cod_control 
    ,luego.dfdt_tipo_desc ,luego.dfdt_fec_ini ,luego.dfdt_ult_act ,luego.dfdt_fec_cer 
    ,luego.dfdt_monto ,luego.dfdt_saldo ,luego.dfdt_mensual ,luego.dfdt_tot_cuotas 
    ,luego.dfdt_num_cuotas ,luego.dfdt_documen ,luego.dfdt_codeudor ,
    luego.dfdt_nom_bene ,luego.dfdt_juz_con ,luego.dfdt_si_no ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_dfdes_btrab update on "informix"
    .dfdes_btrab referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dfdes_btrab (dfdt_catalogo,
    dfdt_codigo,dfdt_nu_reg,dfdt_cod_control,dfdt_tipo_desc,dfdt_fec_ini,
    dfdt_ult_act,dfdt_fec_cer,dfdt_monto,dfdt_saldo,dfdt_mensual,dfdt_tot_cuotas,
    dfdt_num_cuotas,dfdt_documen,dfdt_codeudor,dfdt_nom_bene,dfdt_juz_con,
    dfdt_si_no,desp_dfdt_catalogo,desp_dfdt_codigo,desp_dfdt_nu_reg,desp_dfdt_cod_control,
    desp_dfdt_tipo_desc,desp_dfdt_fec_ini,desp_dfdt_ult_act,desp_dfdt_fec_cer,
    desp_dfdt_monto,desp_dfdt_saldo,desp_dfdt_mensual,desp_dfdt_tot_cuotas,
    desp_dfdt_num_cuotas,desp_dfdt_documen,desp_dfdt_codeudor,desp_dfdt_nom_bene,
    desp_dfdt_juz_con,desp_dfdt_si_no,accion,usuario,hora)  values (antes.dfdt_catalogo 
    ,antes.dfdt_codigo ,antes.dfdt_nu_reg ,antes.dfdt_cod_control ,antes.dfdt_tipo_desc 
    ,antes.dfdt_fec_ini ,antes.dfdt_ult_act ,antes.dfdt_fec_cer ,antes.dfdt_monto 
    ,antes.dfdt_saldo ,antes.dfdt_mensual ,antes.dfdt_tot_cuotas ,antes.dfdt_num_cuotas 
    ,antes.dfdt_documen ,antes.dfdt_codeudor ,antes.dfdt_nom_bene ,antes.dfdt_juz_con 
    ,antes.dfdt_si_no ,luego.dfdt_catalogo ,luego.dfdt_codigo ,luego.dfdt_nu_reg 
    ,luego.dfdt_cod_control ,luego.dfdt_tipo_desc ,luego.dfdt_fec_ini 
    ,luego.dfdt_ult_act ,luego.dfdt_fec_cer ,luego.dfdt_monto ,luego.dfdt_saldo 
    ,luego.dfdt_mensual ,luego.dfdt_tot_cuotas ,luego.dfdt_num_cuotas 
    ,luego.dfdt_documen ,luego.dfdt_codeudor ,luego.dfdt_nom_bene ,luego.dfdt_juz_con 
    ,luego.dfdt_si_no ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".upd_ubica_docum update on "informix"
    .ubicacion_docum referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ubica_docum (antes1,antes2,
    antes3,antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,
    antes12,antes13,antes14,despues1,despues2,despues3,despues4,despues5,
    despues6,despues7,despues8,despues9,despues10,despues11,despues12,
    despues13,despues14,hora,accion,usuario,tabname)  values (antes.ub_correlativo 
    ,antes.ub_cod_doc ,antes.ub_fec_in ,antes.ub_recibe ,antes.ub_entrega 
    ,antes.ub_recibe_ok ,antes.ub_observaciones ,antes.ub_oficina ,antes.ub_of_dep 
    ,antes.ub_doc_tipo_remite ,antes.ub_doc_remite ,antes.ub_int_ext 
    ,antes.ub_of_remite ,antes.ub_of_dep_remite ,luego.ub_correlativo 
    ,luego.ub_cod_doc ,luego.ub_fec_in ,luego.ub_recibe ,luego.ub_entrega 
    ,luego.ub_recibe_ok ,luego.ub_observaciones ,luego.ub_oficina ,luego.ub_of_dep 
    ,luego.ub_doc_tipo_remite ,luego.ub_doc_remite ,luego.ub_int_ext 
    ,luego.ub_of_remite ,luego.ub_of_dep_remite ,CURRENT year to fraction(3) 
    ,'U' ,USER ,'ubicacion_docum' ));

create trigger "informix".ins_ubic_docum insert on "informix".ubicacion_docum 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ubica_docum (antes1,antes2,
    antes3,antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,
    antes12,antes13,antes14,despues1,despues2,despues3,despues4,despues5,
    despues6,despues7,despues8,despues9,despues10,despues11,despues12,
    despues13,despues14,hora,accion,usuario,tabname)  values (' ' ,' ' 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.ub_correlativo 
    ,luego.ub_cod_doc ,luego.ub_fec_in ,luego.ub_recibe ,luego.ub_entrega 
    ,luego.ub_recibe_ok ,luego.ub_observaciones ,luego.ub_oficina ,luego.ub_of_dep 
    ,luego.ub_doc_tipo_remite ,luego.ub_doc_remite ,luego.ub_int_ext 
    ,luego.ub_of_remite ,luego.ub_of_dep_remite ,CURRENT year to fraction(3) 
    ,'I' ,USER ,'ubicacion_docum' ));

create trigger "informix".del_ubic_docum delete on "informix".ubicacion_docum 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ubica_docum (antes1,antes2,
    antes3,antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,
    antes12,antes13,antes14,despues1,despues2,despues3,despues4,despues5,
    despues6,despues7,despues8,despues9,despues10,despues11,despues12,
    despues13,despues14,hora,accion,usuario,tabname)  values (antes.ub_correlativo 
    ,antes.ub_cod_doc ,antes.ub_fec_in ,antes.ub_recibe ,antes.ub_entrega 
    ,antes.ub_recibe_ok ,antes.ub_observaciones ,antes.ub_oficina ,antes.ub_of_dep 
    ,antes.ub_doc_tipo_remite ,antes.ub_doc_remite ,antes.ub_int_ext 
    ,antes.ub_of_remite ,antes.ub_of_dep_remite ,' ' ,' ' ,' ' ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,CURRENT year to fraction(3) ,
    'D' ,USER ,'ubicacion_docum' ));

create trigger "informix".act_sistemas update on "informix".sistemas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sistemas (sis_codigo,sis_nombre,
    desp_sis_codigo,desp_sis_nombre,accion,usuario,hora)  values (antes.sis_codigo 
    ,antes.sis_nombre ,luego.sis_codigo ,luego.sis_nombre ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_sistemas insert on "informix".sistemas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_sistemas (sis_codigo,sis_nombre,
    desp_sis_codigo,desp_sis_nombre,accion,usuario,hora)  values (' ' 
    ,' ' ,luego.sis_codigo ,luego.sis_nombre ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_sistemas delete on "informix".sistemas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_sistemas (sis_codigo,sis_nombre,
    desp_sis_codigo,desp_sis_nombre,accion,usuario,hora)  values (antes.sis_codigo 
    ,antes.sis_nombre ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_hist_rep update on "informix".hist_rep 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_hist_rep (hr_numero,hr_catalogo,
    hr_terminal,hr_fecha,hr_hora,hr_usuario,hr_codigo,desp_hr_numero,
    desp_hr_catalogo,desp_hr_terminal,desp_hr_fecha,desp_hr_hora,desp_hr_usuario,
    desp_hr_codigo,accion,usuario,hora)  values (antes.hr_numero ,antes.hr_catalogo 
    ,antes.hr_terminal ,antes.hr_fecha ,antes.hr_hora ,antes.hr_usuario 
    ,antes.hr_codigo ,luego.hr_numero ,luego.hr_catalogo ,luego.hr_terminal 
    ,luego.hr_fecha ,luego.hr_hora ,luego.hr_usuario ,luego.hr_codigo 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_hist_rep insert on "informix".hist_rep 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_hist_rep (hr_numero,hr_catalogo,
    hr_terminal,hr_fecha,hr_hora,hr_usuario,hr_codigo,desp_hr_numero,
    desp_hr_catalogo,desp_hr_terminal,desp_hr_fecha,desp_hr_hora,desp_hr_usuario,
    desp_hr_codigo,accion,usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,luego.hr_numero ,luego.hr_catalogo ,luego.hr_terminal 
    ,luego.hr_fecha ,luego.hr_hora ,luego.hr_usuario ,luego.hr_codigo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_hist_rep delete on "informix".hist_rep 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_hist_rep (hr_numero,hr_catalogo,
    hr_terminal,hr_fecha,hr_hora,hr_usuario,hr_codigo,desp_hr_numero,
    desp_hr_catalogo,desp_hr_terminal,desp_hr_fecha,desp_hr_hora,desp_hr_usuario,
    desp_hr_codigo,accion,usuario,hora)  values (antes.hr_numero ,antes.hr_catalogo 
    ,antes.hr_terminal ,antes.hr_fecha ,antes.hr_hora ,antes.hr_usuario 
    ,antes.hr_codigo ,NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_agui delete on "informix".agui referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_agui (agui_catalogo,agui_aguinaldo,
    agui_meses,desp_agui_catalogo,desp_agui_aguinaldo,desp_agui_meses,
    accion,usuario,hora)  values (antes.agui_catalogo ,antes.agui_aguinaldo 
    ,antes.agui_meses ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_agui insert on "informix".agui referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_agui (agui_catalogo,agui_aguinaldo,
    agui_meses,desp_agui_catalogo,desp_agui_aguinaldo,desp_agui_meses,
    accion,usuario,hora)  values (NULL ,'' ,NULL ,luego.agui_catalogo 
    ,luego.agui_aguinaldo ,luego.agui_meses ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_agui update on "informix".agui referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_agui (agui_catalogo,agui_aguinaldo,
    agui_meses,desp_agui_catalogo,desp_agui_aguinaldo,desp_agui_meses,
    accion,usuario,hora)  values (antes.agui_catalogo ,antes.agui_aguinaldo 
    ,antes.agui_meses ,luego.agui_catalogo ,luego.agui_aguinaldo ,luego.agui_meses 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_maestro update on "informix".maestro 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_maestro (mae_ord_gen,mae_clase,
    desp_mae_ord_gen,desp_mae_clase,accion,usuario,hora)  values (antes.mae_ord_gen 
    ,antes.mae_clase ,luego.mae_ord_gen ,luego.mae_clase ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_maestro insert on "informix".maestro 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_maestro (mae_ord_gen,mae_clase,
    desp_mae_ord_gen,desp_mae_clase,accion,usuario,hora)  values (' ' 
    ,' ' ,luego.mae_ord_gen ,luego.mae_clase ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_maestro delete on "informix".maestro 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_maestro (mae_ord_gen,mae_clase,
    desp_mae_ord_gen,desp_mae_clase,accion,usuario,hora)  values (antes.mae_ord_gen 
    ,antes.mae_clase ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_dfdes_ipm delete on "informix".dfdes_ipm 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_dfdes_ipm (dfdp_catalogo,dfdp_codigo,
    dfdp_nu_reg,dfdp_cod_control,dfdp_tipo_desc,dfdp_fec_ini,dfdp_ult_act,
    dfdp_fec_cer,dfdp_monto,dfdp_saldo,dfdp_mensual,dfdp_tot_cuotas,dfdp_num_cuotas,
    dfdp_documen,dfdp_codeudor,dfdp_nom_bene,dfdp_juz_con,dfdp_si_no,
    desp_dfdp_catalogo,desp_dfdp_codigo,desp_dfdp_nu_reg,desp_dfdp_cod_control,
    desp_dfdp_tipo_desc,desp_dfdp_fec_ini,desp_dfdp_ult_act,desp_dfdp_fec_cer,
    desp_dfdp_monto,desp_dfdp_saldo,desp_dfdp_mensual,desp_dfdp_tot_cuotas,
    desp_dfdp_num_cuotas,desp_dfdp_documen,desp_dfdp_codeudor,desp_dfdp_nom_bene,
    desp_dfdp_juz_con,desp_dfdp_si_no,accion,usuario,hora)  values (antes.dfdp_catalogo 
    ,antes.dfdp_codigo ,antes.dfdp_nu_reg ,antes.dfdp_cod_control ,antes.dfdp_tipo_desc 
    ,antes.dfdp_fec_ini ,antes.dfdp_ult_act ,antes.dfdp_fec_cer ,antes.dfdp_monto 
    ,antes.dfdp_saldo ,antes.dfdp_mensual ,antes.dfdp_tot_cuotas ,antes.dfdp_num_cuotas 
    ,antes.dfdp_documen ,antes.dfdp_codeudor ,antes.dfdp_nom_bene ,antes.dfdp_juz_con 
    ,antes.dfdp_si_no ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL 
    ,NULL ,'' ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_dfdes_ipm insert on "informix".dfdes_ipm 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_dfdes_ipm (dfdp_catalogo,dfdp_codigo,
    dfdp_nu_reg,dfdp_cod_control,dfdp_tipo_desc,dfdp_fec_ini,dfdp_ult_act,
    dfdp_fec_cer,dfdp_monto,dfdp_saldo,dfdp_mensual,dfdp_tot_cuotas,dfdp_num_cuotas,
    dfdp_documen,dfdp_codeudor,dfdp_nom_bene,dfdp_juz_con,dfdp_si_no,
    desp_dfdp_catalogo,desp_dfdp_codigo,desp_dfdp_nu_reg,desp_dfdp_cod_control,
    desp_dfdp_tipo_desc,desp_dfdp_fec_ini,desp_dfdp_ult_act,desp_dfdp_fec_cer,
    desp_dfdp_monto,desp_dfdp_saldo,desp_dfdp_mensual,desp_dfdp_tot_cuotas,
    desp_dfdp_num_cuotas,desp_dfdp_documen,desp_dfdp_codeudor,desp_dfdp_nom_bene,
    desp_dfdp_juz_con,desp_dfdp_si_no,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,NULL ,'' ,''
     ,'' ,luego.dfdp_catalogo ,luego.dfdp_codigo ,luego.dfdp_nu_reg ,luego.dfdp_cod_control 
    ,luego.dfdp_tipo_desc ,luego.dfdp_fec_ini ,luego.dfdp_ult_act ,luego.dfdp_fec_cer 
    ,luego.dfdp_monto ,luego.dfdp_saldo ,luego.dfdp_mensual ,luego.dfdp_tot_cuotas 
    ,luego.dfdp_num_cuotas ,luego.dfdp_documen ,luego.dfdp_codeudor ,
    luego.dfdp_nom_bene ,luego.dfdp_juz_con ,luego.dfdp_si_no ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_dfdes_ipm update on "informix".dfdes_ipm 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dfdes_ipm (dfdp_catalogo,dfdp_codigo,
    dfdp_nu_reg,dfdp_cod_control,dfdp_tipo_desc,dfdp_fec_ini,dfdp_ult_act,
    dfdp_fec_cer,dfdp_monto,dfdp_saldo,dfdp_mensual,dfdp_tot_cuotas,dfdp_num_cuotas,
    dfdp_documen,dfdp_codeudor,dfdp_nom_bene,dfdp_juz_con,dfdp_si_no,
    desp_dfdp_catalogo,desp_dfdp_codigo,desp_dfdp_nu_reg,desp_dfdp_cod_control,
    desp_dfdp_tipo_desc,desp_dfdp_fec_ini,desp_dfdp_ult_act,desp_dfdp_fec_cer,
    desp_dfdp_monto,desp_dfdp_saldo,desp_dfdp_mensual,desp_dfdp_tot_cuotas,
    desp_dfdp_num_cuotas,desp_dfdp_documen,desp_dfdp_codeudor,desp_dfdp_nom_bene,
    desp_dfdp_juz_con,desp_dfdp_si_no,accion,usuario,hora)  values (antes.dfdp_catalogo 
    ,antes.dfdp_codigo ,antes.dfdp_nu_reg ,antes.dfdp_cod_control ,antes.dfdp_tipo_desc 
    ,antes.dfdp_fec_ini ,antes.dfdp_ult_act ,antes.dfdp_fec_cer ,antes.dfdp_monto 
    ,antes.dfdp_saldo ,antes.dfdp_mensual ,antes.dfdp_tot_cuotas ,antes.dfdp_num_cuotas 
    ,antes.dfdp_documen ,antes.dfdp_codeudor ,antes.dfdp_nom_bene ,antes.dfdp_juz_con 
    ,antes.dfdp_si_no ,luego.dfdp_catalogo ,luego.dfdp_codigo ,luego.dfdp_nu_reg 
    ,luego.dfdp_cod_control ,luego.dfdp_tipo_desc ,luego.dfdp_fec_ini 
    ,luego.dfdp_ult_act ,luego.dfdp_fec_cer ,luego.dfdp_monto ,luego.dfdp_saldo 
    ,luego.dfdp_mensual ,luego.dfdp_tot_cuotas ,luego.dfdp_num_cuotas 
    ,luego.dfdp_documen ,luego.dfdp_codeudor ,luego.dfdp_nom_bene ,luego.dfdp_juz_con 
    ,luego.dfdp_si_no ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_resutro update on "informix".resutro 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_resutro (res_nomina,res_contrato,
    res_depen,res_btn,res_cia,res_fecha,res_prog,res_grupo,res_sueldo,
    res_alimentacion,res_responsabilida,res_reenganche,res_profesional,
    res_representacion,res_bon_emerg,res_bon_662000,res_otras_boni,res_montepio,
    res_ipm,res_cmm,res_total,res_liquido,res_profmil,desp_res_nomina,
    desp_res_contrato,desp_res_depen,desp_res_btn,desp_res_cia,desp_res_fecha,
    desp_res_prog,desp_res_grupo,desp_res_sueldo,desp_res_alimentacion,
    desp_res_responsabilida,desp_res_reenganche,desp_res_profesional,
    desp_res_representacion,desp_res_bon_emerg,desp_res_bon_662000,desp_res_otras_boni,
    desp_res_montepio,desp_res_ipm,desp_res_cmm,desp_res_total,desp_res_liquido,
    desp_res_profmil,accion,usuario,hora)  values (antes.res_nomina ,
    antes.res_contrato ,antes.res_depen ,antes.res_btn ,antes.res_cia 
    ,antes.res_fecha ,antes.res_prog ,antes.res_grupo ,antes.res_sueldo 
    ,antes.res_alimentacion ,antes.res_responsabilida ,antes.res_reenganche 
    ,antes.res_profesional ,antes.res_representacion ,antes.res_bon_emerg 
    ,antes.res_bon_662000 ,antes.res_otras_boni ,antes.res_montepio ,
    antes.res_ipm ,antes.res_cmm ,antes.res_total ,antes.res_liquido 
    ,antes.res_profmil ,luego.res_nomina ,luego.res_contrato ,luego.res_depen 
    ,luego.res_btn ,luego.res_cia ,luego.res_fecha ,luego.res_prog ,luego.res_grupo 
    ,luego.res_sueldo ,luego.res_alimentacion ,luego.res_responsabilida 
    ,luego.res_reenganche ,luego.res_profesional ,luego.res_representacion 
    ,luego.res_bon_emerg ,luego.res_bon_662000 ,luego.res_otras_boni 
    ,luego.res_montepio ,luego.res_ipm ,luego.res_cmm ,luego.res_total 
    ,luego.res_liquido ,luego.res_profmil ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_resutro insert on "informix".resutro 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_resutro (res_nomina,res_contrato,
    res_depen,res_btn,res_cia,res_fecha,res_prog,res_grupo,res_sueldo,
    res_alimentacion,res_responsabilida,res_reenganche,res_profesional,
    res_representacion,res_bon_emerg,res_bon_662000,res_otras_boni,res_montepio,
    res_ipm,res_cmm,res_total,res_liquido,res_profmil,desp_res_nomina,
    desp_res_contrato,desp_res_depen,desp_res_btn,desp_res_cia,desp_res_fecha,
    desp_res_prog,desp_res_grupo,desp_res_sueldo,desp_res_alimentacion,
    desp_res_responsabilida,desp_res_reenganche,desp_res_profesional,
    desp_res_representacion,desp_res_bon_emerg,desp_res_bon_662000,desp_res_otras_boni,
    desp_res_montepio,desp_res_ipm,desp_res_cmm,desp_res_total,desp_res_liquido,
    desp_res_profmil,accion,usuario,hora)  values (NULL ,NULL ,NULL ,
    NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' '
     ,' ' ,' ' ,' ' ,' ' ,luego.res_nomina ,luego.res_contrato ,luego.res_depen 
    ,luego.res_btn ,luego.res_cia ,luego.res_fecha ,luego.res_prog ,luego.res_grupo 
    ,luego.res_sueldo ,luego.res_alimentacion ,luego.res_responsabilida 
    ,luego.res_reenganche ,luego.res_profesional ,luego.res_representacion 
    ,luego.res_bon_emerg ,luego.res_bon_662000 ,luego.res_otras_boni 
    ,luego.res_montepio ,luego.res_ipm ,luego.res_cmm ,luego.res_total 
    ,luego.res_liquido ,luego.res_profmil ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_resutro delete on "informix".resutro 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_resutro (res_nomina,res_contrato,
    res_depen,res_btn,res_cia,res_fecha,res_prog,res_grupo,res_sueldo,
    res_alimentacion,res_responsabilida,res_reenganche,res_profesional,
    res_representacion,res_bon_emerg,res_bon_662000,res_otras_boni,res_montepio,
    res_ipm,res_cmm,res_total,res_liquido,res_profmil,desp_res_nomina,
    desp_res_contrato,desp_res_depen,desp_res_btn,desp_res_cia,desp_res_fecha,
    desp_res_prog,desp_res_grupo,desp_res_sueldo,desp_res_alimentacion,
    desp_res_responsabilida,desp_res_reenganche,desp_res_profesional,
    desp_res_representacion,desp_res_bon_emerg,desp_res_bon_662000,desp_res_otras_boni,
    desp_res_montepio,desp_res_ipm,desp_res_cmm,desp_res_total,desp_res_liquido,
    desp_res_profmil,accion,usuario,hora)  values (antes.res_nomina ,
    antes.res_contrato ,antes.res_depen ,antes.res_btn ,antes.res_cia 
    ,antes.res_fecha ,antes.res_prog ,antes.res_grupo ,antes.res_sueldo 
    ,antes.res_alimentacion ,antes.res_responsabilida ,antes.res_reenganche 
    ,antes.res_profesional ,antes.res_representacion ,antes.res_bon_emerg 
    ,antes.res_bon_662000 ,antes.res_otras_boni ,antes.res_montepio ,
    antes.res_ipm ,antes.res_cmm ,antes.res_total ,antes.res_liquido 
    ,antes.res_profmil ,NULL ,NULL ,NULL ,NULL ,NULL ,' ' ,' ' ,' ' ,' ' 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_tsan update on "informix".tsan referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_tsan (tsan_codigo,tsan_descripcion,
    tsan_tiempo,tsan_posterga,tsan_suspension,desp_tsan_codigo,desp_tsan_descripcion,
    desp_tsan_tiempo,desp_tsan_posterga,desp_tsan_suspension,accion,usuario,
    hora)  values (antes.tsan_codigo ,antes.tsan_descripcion ,antes.tsan_tiempo 
    ,antes.tsan_posterga ,antes.tsan_suspension ,luego.tsan_codigo ,luego.tsan_descripcion 
    ,luego.tsan_tiempo ,luego.tsan_posterga ,luego.tsan_suspension ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tsan insert on "informix".tsan referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_tsan (tsan_codigo,tsan_descripcion,
    tsan_tiempo,tsan_posterga,tsan_suspension,desp_tsan_codigo,desp_tsan_descripcion,
    desp_tsan_tiempo,desp_tsan_posterga,desp_tsan_suspension,accion,usuario,
    hora)  values (NULL ,' ' ,NULL ,NULL ,NULL ,luego.tsan_codigo ,luego.tsan_descripcion 
    ,luego.tsan_tiempo ,luego.tsan_posterga ,luego.tsan_suspension ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_tsan delete on "informix".tsan referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_tsan (tsan_codigo,tsan_descripcion,
    tsan_tiempo,tsan_posterga,tsan_suspension,desp_tsan_codigo,desp_tsan_descripcion,
    desp_tsan_tiempo,desp_tsan_posterga,desp_tsan_suspension,accion,usuario,
    hora)  values (antes.tsan_codigo ,antes.tsan_descripcion ,antes.tsan_tiempo 
    ,antes.tsan_posterga ,antes.tsan_suspension ,NULL ,' ' ,NULL ,NULL 
    ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_mdep update on "informix".mdep referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_mdep (dep_llave,dep_desc_lg,
    dep_desc_md,dep_desc_ct,dep_clase,dep_precio,dep_ejto,desp_dep_llave,
    desp_dep_desc_lg,desp_dep_desc_md,desp_dep_desc_ct,desp_dep_clase,
    desp_dep_precio,desp_dep_ejto,accion,usuario,hora)  values (antes.dep_llave 
    ,antes.dep_desc_lg ,antes.dep_desc_md ,antes.dep_desc_ct ,antes.dep_clase 
    ,antes.dep_precio ,antes.dep_ejto ,luego.dep_llave ,luego.dep_desc_lg 
    ,luego.dep_desc_md ,luego.dep_desc_ct ,luego.dep_clase ,luego.dep_precio 
    ,luego.dep_ejto ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_mdep insert on "informix".mdep referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_mdep (dep_llave,dep_desc_lg,
    dep_desc_md,dep_desc_ct,dep_clase,dep_precio,dep_ejto,desp_dep_llave,
    desp_dep_desc_lg,desp_dep_desc_md,desp_dep_desc_ct,desp_dep_clase,
    desp_dep_precio,desp_dep_ejto,accion,usuario,hora)  values (NULL 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.dep_llave ,luego.dep_desc_lg ,luego.dep_desc_md 
    ,luego.dep_desc_ct ,luego.dep_clase ,luego.dep_precio ,luego.dep_ejto 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_mdep delete on "informix".mdep referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_mdep (dep_llave,dep_desc_lg,
    dep_desc_md,dep_desc_ct,dep_clase,dep_precio,dep_ejto,desp_dep_llave,
    desp_dep_desc_lg,desp_dep_desc_md,desp_dep_desc_ct,desp_dep_clase,
    desp_dep_precio,desp_dep_ejto,accion,usuario,hora)  values (antes.dep_llave 
    ,antes.dep_desc_lg ,antes.dep_desc_md ,antes.dep_desc_ct ,antes.dep_clase 
    ,antes.dep_precio ,antes.dep_ejto ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,
    'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".upd_documento update on "informix".documento 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_documento (antes1,antes2,antes3,
    antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,antes12,
    antes13,antes14,antes15,antes16,antes17,despues1,despues2,despues3,
    despues4,despues5,despues6,despues7,despues8,despues9,despues10,despues11,
    despues12,despues13,despues14,despues15,despues16,despues17,hora,
    accion,usuario,tabname)  values (antes.doc_codigo ,antes.doc_tipo 
    ,antes.doc_nombre ,antes.doc_prioridad ,antes.doc_asunto ,antes.doc_fec_realizado 
    ,antes.doc_fec_in ,antes.doc_num_hojas ,antes.doc_destino ,antes.doc_procedencia 
    ,antes.doc_status ,antes.doc_interesado ,antes.doc_clasificacion 
    ,antes.doc_proposito ,antes.doc_recibe ,antes.doc_solucion ,antes.doc_referencia 
    ,luego.doc_codigo ,luego.doc_tipo ,luego.doc_nombre ,luego.doc_prioridad 
    ,luego.doc_asunto ,luego.doc_fec_realizado ,luego.doc_fec_in ,luego.doc_num_hojas 
    ,luego.doc_destino ,luego.doc_procedencia ,luego.doc_status ,luego.doc_interesado 
    ,luego.doc_clasificacion ,luego.doc_proposito ,luego.doc_recibe ,
    luego.doc_solucion ,luego.doc_referencia ,CURRENT year to fraction(3) 
    ,'U' ,USER ,'documento' ));

create trigger "informix".ins_documento insert on "informix".documento 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_documento (antes1,antes2,antes3,
    antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,antes12,
    antes13,antes14,antes15,antes16,antes17,despues1,despues2,despues3,
    despues4,despues5,despues6,despues7,despues8,despues9,despues10,despues11,
    despues12,despues13,despues14,despues15,despues16,despues17,hora,
    accion,usuario,tabname)  values (' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.doc_codigo ,luego.doc_tipo 
    ,luego.doc_nombre ,luego.doc_prioridad ,luego.doc_asunto ,luego.doc_fec_realizado 
    ,luego.doc_fec_in ,luego.doc_num_hojas ,luego.doc_destino ,luego.doc_procedencia 
    ,luego.doc_status ,luego.doc_interesado ,luego.doc_clasificacion 
    ,luego.doc_proposito ,luego.doc_recibe ,luego.doc_solucion ,luego.doc_referencia 
    ,CURRENT year to fraction(3) ,'I' ,USER ,'documento' ));

create trigger "informix".del_documento delete on "informix".documento 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_documento (antes1,antes2,antes3,
    antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,antes12,
    antes13,antes14,antes15,antes16,antes17,despues1,despues2,despues3,
    despues4,despues5,despues6,despues7,despues8,despues9,despues10,despues11,
    despues12,despues13,despues14,despues15,despues16,despues17,hora,
    accion,usuario,tabname)  values (antes.doc_codigo ,antes.doc_tipo 
    ,antes.doc_nombre ,antes.doc_prioridad ,antes.doc_asunto ,antes.doc_fec_realizado 
    ,antes.doc_fec_in ,antes.doc_num_hojas ,antes.doc_destino ,antes.doc_procedencia 
    ,antes.doc_status ,antes.doc_interesado ,antes.doc_clasificacion 
    ,antes.doc_proposito ,antes.doc_recibe ,antes.doc_solucion ,antes.doc_referencia 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,
    ' ' ,CURRENT year to fraction(3) ,'D' ,USER ,'documento' ));

create trigger "informix".del_bono14 delete on "informix".bono14 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_bono14 (b14_catalogo,b14_cantidad,
    b14_meses,desp_b14_catalogo,desp_b14_cantidad,desp_b14_meses,accion,
    usuario,hora)  values (antes.b14_catalogo ,antes.b14_cantidad ,antes.b14_meses 
    ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_bono14 insert on "informix".bono14 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_bono14 (b14_catalogo,b14_cantidad,
    b14_meses,desp_b14_catalogo,desp_b14_cantidad,desp_b14_meses,accion,
    usuario,hora)  values (NULL ,'' ,NULL ,luego.b14_catalogo ,luego.b14_cantidad 
    ,luego.b14_meses ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_bono14 update on "informix".bono14 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bono14 (b14_catalogo,b14_cantidad,
    b14_meses,desp_b14_catalogo,desp_b14_cantidad,desp_b14_meses,accion,
    usuario,hora)  values (antes.b14_catalogo ,antes.b14_cantidad ,antes.b14_meses 
    ,luego.b14_catalogo ,luego.b14_cantidad ,luego.b14_meses ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_marginado update on "informix".marginado 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_marginado (codigo,documento,
    marginado,quien,fecha,enterado,desp_codigo,desp_documento,desp_marginado,
    desp_quien,desp_fecha,desp_enterado,accion,usuario,hora)  values 
    (antes.codigo ,antes.documento ,antes.marginado ,antes.quien ,antes.fecha 
    ,antes.enterado ,luego.codigo ,luego.documento ,luego.marginado ,
    luego.quien ,luego.fecha ,luego.enterado ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_marginado insert on "informix".marginado 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_marginado (codigo,documento,
    marginado,quien,fecha,enterado,desp_codigo,desp_documento,desp_marginado,
    desp_quien,desp_fecha,desp_enterado,accion,usuario,hora)  values 
    (NULL ,NULL ,' ' ,NULL ,' ' ,' ' ,luego.codigo ,luego.documento ,luego.marginado 
    ,luego.quien ,luego.fecha ,luego.enterado ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_marginado delete on "informix".marginado 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_marginado (codigo,documento,
    marginado,quien,fecha,enterado,desp_codigo,desp_documento,desp_marginado,
    desp_quien,desp_fecha,desp_enterado,accion,usuario,hora)  values 
    (antes.codigo ,antes.documento ,antes.marginado ,antes.quien ,antes.fecha 
    ,antes.enterado ,NULL ,NULL ,' ' ,NULL ,' ' ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".upd_doc_cerrados update on "informix"
    .doc_cerrados referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_doc_cerrados (antes1,antes2,
    antes3,antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,
    antes12,antes13,antes14,antes15,antes16,antes17,antes18,antes19,antes20,
    antes21,antes22,antes23,despues1,despues2,despues3,despues4,despues5,
    despues6,despues7,despues8,despues9,despues10,despues11,despues12,
    despues13,despues14,despues15,despues16,despues17,despues18,despues19,
    despues20,despues21,despues22,despues23,hora,accion,usuario,tabname) 
     values (antes.doc_codigo ,antes.doc_tipo ,antes.doc_nombre ,antes.doc_prioridad 
    ,antes.doc_asunto ,antes.doc_fec_realizado ,antes.doc_fec_in ,antes.doc_num_hojas 
    ,antes.doc_destino ,antes.doc_procedencia ,antes.doc_status ,antes.doc_interesado 
    ,antes.doc_clasificacion ,antes.doc_prefijo ,antes.doc_proposito 
    ,antes.doc_recibe ,antes.doc_int_ext ,antes.doc_solucion ,antes.doc_referencia 
    ,antes.doc_of_actual ,antes.doc_of_anterior ,antes.doc_aceptado ,
    antes.doc_fec_aceptado ,luego.doc_codigo ,luego.doc_tipo ,luego.doc_nombre 
    ,luego.doc_prioridad ,luego.doc_asunto ,luego.doc_fec_realizado ,
    luego.doc_fec_in ,luego.doc_num_hojas ,luego.doc_destino ,luego.doc_procedencia 
    ,luego.doc_status ,luego.doc_interesado ,luego.doc_clasificacion 
    ,luego.doc_prefijo ,luego.doc_proposito ,luego.doc_recibe ,luego.doc_int_ext 
    ,luego.doc_solucion ,luego.doc_referencia ,luego.doc_of_actual ,luego.doc_of_anterior 
    ,luego.doc_aceptado ,luego.doc_fec_aceptado ,CURRENT year to fraction(3) 
    ,'U' ,USER ,'doc_cerrados' ));

create trigger "informix".ins_doc_cerrados insert on "informix"
    .doc_cerrados referencing new as luego
    for each row
        (
        insert into "informix".aud_doc_cerrados (antes1,antes2,
    antes3,antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,
    antes12,antes13,antes14,antes15,antes16,antes17,antes18,antes19,antes20,
    antes21,antes22,antes23,despues1,despues2,despues3,despues4,despues5,
    despues6,despues7,despues8,despues9,despues10,despues11,despues12,
    despues13,despues14,despues15,despues16,despues17,despues18,despues19,
    despues20,despues21,despues22,despues23,hora,accion,usuario,tabname) 
     values (' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.doc_codigo ,luego.doc_tipo 
    ,luego.doc_nombre ,luego.doc_prioridad ,luego.doc_asunto ,luego.doc_fec_realizado 
    ,luego.doc_fec_in ,luego.doc_num_hojas ,luego.doc_destino ,luego.doc_procedencia 
    ,luego.doc_status ,luego.doc_interesado ,luego.doc_clasificacion 
    ,luego.doc_prefijo ,luego.doc_proposito ,luego.doc_recibe ,luego.doc_int_ext 
    ,luego.doc_solucion ,luego.doc_referencia ,luego.doc_of_actual ,luego.doc_of_anterior 
    ,luego.doc_aceptado ,luego.doc_fec_aceptado ,CURRENT year to fraction(3) 
    ,'I' ,USER ,'doc_cerrados' ));

create trigger "informix".del_doc_cerrados delete on "informix"
    .doc_cerrados referencing old as antes
    for each row
        (
        insert into "informix".aud_doc_cerrados (antes1,antes2,
    antes3,antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,
    antes12,antes13,antes14,antes15,antes16,antes17,antes18,antes19,antes20,
    antes21,antes22,antes23,despues1,despues2,despues3,despues4,despues5,
    despues6,despues7,despues8,despues9,despues10,despues11,despues12,
    despues13,despues14,despues15,despues16,despues17,despues18,despues19,
    despues20,despues21,despues22,despues23,hora,accion,usuario,tabname) 
     values (antes.doc_codigo ,antes.doc_tipo ,antes.doc_nombre ,antes.doc_prioridad 
    ,antes.doc_asunto ,antes.doc_fec_realizado ,antes.doc_fec_in ,antes.doc_num_hojas 
    ,antes.doc_destino ,antes.doc_procedencia ,antes.doc_status ,antes.doc_interesado 
    ,antes.doc_clasificacion ,antes.doc_prefijo ,antes.doc_proposito 
    ,antes.doc_recibe ,antes.doc_int_ext ,antes.doc_solucion ,antes.doc_referencia 
    ,antes.doc_of_actual ,antes.doc_of_anterior ,antes.doc_aceptado ,
    antes.doc_fec_aceptado ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' '
     ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,CURRENT year to 
    fraction(3) ,'D' ,USER ,'doc_cerrados' ));

create trigger "informix".act_mlins update on "informix".mlins 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mlins (ml_codigo,ml_puesto,
    ml_descrip,desp_ml_codigo,desp_ml_puesto,desp_ml_descrip,accion,usuario,
    hora)  values (antes.ml_codigo ,antes.ml_puesto ,antes.ml_descrip 
    ,luego.ml_codigo ,luego.ml_puesto ,luego.ml_descrip ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_mlins insert on "informix".mlins 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_mlins (ml_codigo,ml_puesto,
    ml_descrip,desp_ml_codigo,desp_ml_puesto,desp_ml_descrip,accion,usuario,
    hora)  values (NULL ,NULL ,' ' ,luego.ml_codigo ,luego.ml_puesto ,
    luego.ml_descrip ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_mlins delete on "informix".mlins 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_mlins (ml_codigo,ml_puesto,
    ml_descrip,desp_ml_codigo,desp_ml_puesto,desp_ml_descrip,accion,usuario,
    hora)  values (antes.ml_codigo ,antes.ml_puesto ,antes.ml_descrip 
    ,NULL ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_situaciones update on "informix"
    .situaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_situaciones (sit_codigo,sit_desc_lg,
    sit_desc_md,sit_desc_ct,desp_sit_codigo,desp_sit_desc_lg,desp_sit_desc_md,
    desp_sit_desc_ct,accion,usuario,hora)  values (antes.sit_codigo ,
    antes.sit_desc_lg ,antes.sit_desc_md ,antes.sit_desc_ct ,luego.sit_codigo 
    ,luego.sit_desc_lg ,luego.sit_desc_md ,luego.sit_desc_ct ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_situaciones insert on "informix"
    .situaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_situaciones (sit_codigo,sit_desc_lg,
    sit_desc_md,sit_desc_ct,desp_sit_codigo,desp_sit_desc_lg,desp_sit_desc_md,
    desp_sit_desc_ct,accion,usuario,hora)  values (' ' ,' ' ,' ' ,' ' ,luego.sit_codigo 
    ,luego.sit_desc_lg ,luego.sit_desc_md ,luego.sit_desc_ct ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_situaciones delete on "informix"
    .situaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_situaciones (sit_codigo,sit_desc_lg,
    sit_desc_md,sit_desc_ct,desp_sit_codigo,desp_sit_desc_lg,desp_sit_desc_md,
    desp_sit_desc_ct,accion,usuario,hora)  values (antes.sit_codigo ,
    antes.sit_desc_lg ,antes.sit_desc_md ,antes.sit_desc_ct ,' ' ,' ' ,
    ' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_tempdpue update on "informix".tempdpue 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tempdpue (pue_catalogo,pue_grado,
    pue_arma,pue_dependencia,pue_jerarquia,pue_plaza,pue_ceom,pue_desc,
    pue_situacion,pue_fec_nomb,pue_ord_gral,pue_punto_og,pue_fec_cese,
    desp_pue_catalogo,desp_pue_grado,desp_pue_arma,desp_pue_dependencia,
    desp_pue_jerarquia,desp_pue_plaza,desp_pue_ceom,desp_pue_desc,desp_pue_situacion,
    desp_pue_fec_nomb,desp_pue_ord_gral,desp_pue_punto_og,desp_pue_fec_cese,
    accion,usuario,hora)  values (antes.pue_catalogo ,antes.pue_grado 
    ,antes.pue_arma ,antes.pue_dependencia ,antes.pue_jerarquia ,antes.pue_plaza 
    ,antes.pue_ceom ,antes.pue_desc ,antes.pue_situacion ,antes.pue_fec_nomb 
    ,antes.pue_ord_gral ,antes.pue_punto_og ,antes.pue_fec_cese ,luego.pue_catalogo 
    ,luego.pue_grado ,luego.pue_arma ,luego.pue_dependencia ,luego.pue_jerarquia 
    ,luego.pue_plaza ,luego.pue_ceom ,luego.pue_desc ,luego.pue_situacion 
    ,luego.pue_fec_nomb ,luego.pue_ord_gral ,luego.pue_punto_og ,luego.pue_fec_cese 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tempdpue insert on "informix".tempdpue 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_tempdpue (pue_catalogo,pue_grado,
    pue_arma,pue_dependencia,pue_jerarquia,pue_plaza,pue_ceom,pue_desc,
    pue_situacion,pue_fec_nomb,pue_ord_gral,pue_punto_og,pue_fec_cese,
    desp_pue_catalogo,desp_pue_grado,desp_pue_arma,desp_pue_dependencia,
    desp_pue_jerarquia,desp_pue_plaza,desp_pue_ceom,desp_pue_desc,desp_pue_situacion,
    desp_pue_fec_nomb,desp_pue_ord_gral,desp_pue_punto_og,desp_pue_fec_cese,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,' ' ,NULL ,' '
     ,' ' ,' ' ,' ' ,' ' ,NULL ,' ' ,luego.pue_catalogo ,luego.pue_grado ,
    luego.pue_arma ,luego.pue_dependencia ,luego.pue_jerarquia ,luego.pue_plaza 
    ,luego.pue_ceom ,luego.pue_desc ,luego.pue_situacion ,luego.pue_fec_nomb 
    ,luego.pue_ord_gral ,luego.pue_punto_og ,luego.pue_fec_cese ,'I' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_tempdpue delete on "informix".tempdpue 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_tempdpue (pue_catalogo,pue_grado,
    pue_arma,pue_dependencia,pue_jerarquia,pue_plaza,pue_ceom,pue_desc,
    pue_situacion,pue_fec_nomb,pue_ord_gral,pue_punto_og,pue_fec_cese,
    desp_pue_catalogo,desp_pue_grado,desp_pue_arma,desp_pue_dependencia,
    desp_pue_jerarquia,desp_pue_plaza,desp_pue_ceom,desp_pue_desc,desp_pue_situacion,
    desp_pue_fec_nomb,desp_pue_ord_gral,desp_pue_punto_og,desp_pue_fec_cese,
    accion,usuario,hora)  values (antes.pue_catalogo ,antes.pue_grado 
    ,antes.pue_arma ,antes.pue_dependencia ,antes.pue_jerarquia ,antes.pue_plaza 
    ,antes.pue_ceom ,antes.pue_desc ,antes.pue_situacion ,antes.pue_fec_nomb 
    ,antes.pue_ord_gral ,antes.pue_punto_og ,antes.pue_fec_cese ,NULL 
    ,NULL ,NULL ,NULL ,' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL ,' ' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_usuariosnt update on "informix".usuariosnt 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_usuariosnt (catalogo,observaciones,
    desp_catalogo,desp_observaciones,accion,usuario,hora)  values (antes.catalogo 
    ,antes.observaciones ,luego.catalogo ,luego.observaciones ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_usuariosnt insert on "informix".usuariosnt 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_usuariosnt (catalogo,observaciones,
    desp_catalogo,desp_observaciones,accion,usuario,hora)  values (' '
     ,' ' ,luego.catalogo ,luego.observaciones ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_usuariosnt delete on "informix".usuariosnt 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_usuariosnt (catalogo,observaciones,
    desp_catalogo,desp_observaciones,accion,usuario,hora)  values (antes.catalogo 
    ,antes.observaciones ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_permorden update on "informix".permorden 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_permorden (pero_usuario,pero_programa,
    pero_permiso,desp_pero_usuario,desp_pero_programa,desp_pero_permiso,
    accion,usuario,hora)  values (antes.pero_usuario ,antes.pero_programa 
    ,antes.pero_permiso ,luego.pero_usuario ,luego.pero_programa ,luego.pero_permiso 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_permorden insert on "informix".permorden 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_permorden (pero_usuario,pero_programa,
    pero_permiso,desp_pero_usuario,desp_pero_programa,desp_pero_permiso,
    accion,usuario,hora)  values (' ' ,' ' ,NULL ,luego.pero_usuario ,luego.pero_programa 
    ,luego.pero_permiso ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_permorden delete on "informix".permorden 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_permorden (pero_usuario,pero_programa,
    pero_permiso,desp_pero_usuario,desp_pero_programa,desp_pero_permiso,
    accion,usuario,hora)  values (antes.pero_usuario ,antes.pero_programa 
    ,antes.pero_permiso ,' ' ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_cla_cond update on "informix".cla_cond 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cla_cond (cla_codigo,cla_descripcion,
    desp_cla_codigo,desp_cla_descripcion,accion,usuario,hora)  values 
    (antes.cla_codigo ,antes.cla_descripcion ,luego.cla_codigo ,luego.cla_descripcion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cla_cond insert on "informix".cla_cond 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_cla_cond (cla_codigo,cla_descripcion,
    desp_cla_codigo,desp_cla_descripcion,accion,usuario,hora)  values 
    ('' ,'' ,luego.cla_codigo ,luego.cla_descripcion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_cla_cond delete on "informix".cla_cond 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_cla_cond (cla_codigo,cla_descripcion,
    desp_cla_codigo,desp_cla_descripcion,accion,usuario,hora)  values 
    (antes.cla_codigo ,antes.cla_descripcion ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_lsm_marca update on "informix".lsm_marca 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lsm_marca (marca_cod,marca_desc,
    desp_marca_cod,desp_marca_desc,accion,usuario,hora)  values (antes.marca_cod 
    ,antes.marca_desc ,luego.marca_cod ,luego.marca_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_lsm_marca insert on "informix".lsm_marca 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lsm_marca (marca_cod,marca_desc,
    desp_marca_cod,desp_marca_desc,accion,usuario,hora)  values (NULL 
    ,' ' ,luego.marca_cod ,luego.marca_desc ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_lsm_marca delete on "informix".lsm_marca 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lsm_marca (marca_cod,marca_desc,
    desp_marca_cod,desp_marca_desc,accion,usuario,hora)  values (antes.marca_cod 
    ,antes.marca_desc ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_lsm_equipo update on "informix".lsm_equipo 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lsm_equipo (equi_cat,equi_dep,
    equi_art,equi_serie,equi_sit,desp_equi_cat,desp_equi_dep,desp_equi_art,
    desp_equi_serie,desp_equi_sit,accion,usuario,hora)  values (antes.equi_cat 
    ,antes.equi_dep ,antes.equi_art ,antes.equi_serie ,antes.equi_sit 
    ,luego.equi_cat ,luego.equi_dep ,luego.equi_art ,luego.equi_serie 
    ,luego.equi_sit ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lsm_equipo insert on "informix".lsm_equipo 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lsm_equipo (equi_cat,equi_dep,
    equi_art,equi_serie,equi_sit,desp_equi_cat,desp_equi_dep,desp_equi_art,
    desp_equi_serie,desp_equi_sit,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,' ' ,NULL ,luego.equi_cat ,luego.equi_dep ,luego.equi_art 
    ,luego.equi_serie ,luego.equi_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_lsm_equipo delete on "informix".lsm_equipo 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lsm_equipo (equi_cat,equi_dep,
    equi_art,equi_serie,equi_sit,desp_equi_cat,desp_equi_dep,desp_equi_art,
    desp_equi_serie,desp_equi_sit,accion,usuario,hora)  values (antes.equi_cat 
    ,antes.equi_dep ,antes.equi_art ,antes.equi_serie ,antes.equi_sit 
    ,NULL ,NULL ,NULL ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_menu_det update on "informix".menu_det 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_menu_det (md_menu,md_orden,
    md_opcion,md_ejecuta,desp_md_menu,desp_md_orden,desp_md_opcion,desp_md_ejecuta,
    accion,usuario,hora)  values (antes.md_menu ,antes.md_orden ,antes.md_opcion 
    ,antes.md_ejecuta ,luego.md_menu ,luego.md_orden ,luego.md_opcion 
    ,luego.md_ejecuta ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_menu_det insert on "informix".menu_det 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_menu_det (md_menu,md_orden,
    md_opcion,md_ejecuta,desp_md_menu,desp_md_orden,desp_md_opcion,desp_md_ejecuta,
    accion,usuario,hora)  values (NULL ,' ' ,' ' ,' ' ,luego.md_menu ,luego.md_orden 
    ,luego.md_opcion ,luego.md_ejecuta ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_menu_det delete on "informix".menu_det 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_menu_det (md_menu,md_orden,
    md_opcion,md_ejecuta,desp_md_menu,desp_md_orden,desp_md_opcion,desp_md_ejecuta,
    accion,usuario,hora)  values (antes.md_menu ,antes.md_orden ,antes.md_opcion 
    ,antes.md_ejecuta ,NULL ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_orden update on "informix".orden 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_orden (ord_catalogo,ord_sit,
    ord_plaza,ord_fecha_nom,ord_orden,ord_punto_orden,ord_clase,ord_sitrasla,
    desp_ord_catalogo,desp_ord_sit,desp_ord_plaza,desp_ord_fecha_nom,
    desp_ord_orden,desp_ord_punto_orden,desp_ord_clase,desp_ord_sitrasla,
    accion,usuario,hora)  values (antes.ord_catalogo ,antes.ord_sit ,
    antes.ord_plaza ,antes.ord_fecha_nom ,antes.ord_orden ,antes.ord_punto_orden 
    ,antes.ord_clase ,antes.ord_sitrasla ,luego.ord_catalogo ,luego.ord_sit 
    ,luego.ord_plaza ,luego.ord_fecha_nom ,luego.ord_orden ,luego.ord_punto_orden 
    ,luego.ord_clase ,luego.ord_sitrasla ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_orden insert on "informix".orden 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_orden (ord_catalogo,ord_sit,
    ord_plaza,ord_fecha_nom,ord_orden,ord_punto_orden,ord_clase,ord_sitrasla,
    desp_ord_catalogo,desp_ord_sit,desp_ord_plaza,desp_ord_fecha_nom,
    desp_ord_orden,desp_ord_punto_orden,desp_ord_clase,desp_ord_sitrasla,
    accion,usuario,hora)  values (NULL ,' ' ,NULL ,' ' ,' ' ,NULL ,' ' ,' '
     ,luego.ord_catalogo ,luego.ord_sit ,luego.ord_plaza ,luego.ord_fecha_nom 
    ,luego.ord_orden ,luego.ord_punto_orden ,luego.ord_clase ,luego.ord_sitrasla 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_orden delete on "informix".orden 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_orden (ord_catalogo,ord_sit,
    ord_plaza,ord_fecha_nom,ord_orden,ord_punto_orden,ord_clase,ord_sitrasla,
    desp_ord_catalogo,desp_ord_sit,desp_ord_plaza,desp_ord_fecha_nom,
    desp_ord_orden,desp_ord_punto_orden,desp_ord_clase,desp_ord_sitrasla,
    accion,usuario,hora)  values (antes.ord_catalogo ,antes.ord_sit ,
    antes.ord_plaza ,antes.ord_fecha_nom ,antes.ord_orden ,antes.ord_punto_orden 
    ,antes.ord_clase ,antes.ord_sitrasla ,NULL ,' ' ,NULL ,' ' ,' ' ,NULL 
    ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_orden_h update on "informix".orden_h 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_orden_h (ord_catalogo,ord_situacion,
    ord_plaza,ord_fecha_nomb,ord_orden,ord_punto,ord_clase,ord_sitrasla,
    desp_ord_catalogo,desp_ord_situacion,desp_ord_plaza,desp_ord_fecha_nomb,
    desp_ord_orden,desp_ord_punto,desp_ord_clase,desp_ord_sitrasla,accion,
    usuario,hora)  values (antes.ord_catalogo ,antes.ord_situacion ,antes.ord_plaza 
    ,antes.ord_fecha_nomb ,antes.ord_orden ,antes.ord_punto ,antes.ord_clase 
    ,antes.ord_sitrasla ,luego.ord_catalogo ,luego.ord_situacion ,luego.ord_plaza 
    ,luego.ord_fecha_nomb ,luego.ord_orden ,luego.ord_punto ,luego.ord_clase 
    ,luego.ord_sitrasla ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_orden_h insert on "informix".orden_h 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_orden_h (ord_catalogo,ord_situacion,
    ord_plaza,ord_fecha_nomb,ord_orden,ord_punto,ord_clase,ord_sitrasla,
    desp_ord_catalogo,desp_ord_situacion,desp_ord_plaza,desp_ord_fecha_nomb,
    desp_ord_orden,desp_ord_punto,desp_ord_clase,desp_ord_sitrasla,accion,
    usuario,hora)  values (NULL ,' ' ,NULL ,' ' ,' ' ,NULL ,' ' ,' ' ,luego.ord_catalogo 
    ,luego.ord_situacion ,luego.ord_plaza ,luego.ord_fecha_nomb ,luego.ord_orden 
    ,luego.ord_punto ,luego.ord_clase ,luego.ord_sitrasla ,'I' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".del_orden_h delete on "informix".orden_h 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_orden_h (ord_catalogo,ord_situacion,
    ord_plaza,ord_fecha_nomb,ord_orden,ord_punto,ord_clase,ord_sitrasla,
    desp_ord_catalogo,desp_ord_situacion,desp_ord_plaza,desp_ord_fecha_nomb,
    desp_ord_orden,desp_ord_punto,desp_ord_clase,desp_ord_sitrasla,accion,
    usuario,hora)  values (antes.ord_catalogo ,antes.ord_situacion ,antes.ord_plaza 
    ,antes.ord_fecha_nomb ,antes.ord_orden ,antes.ord_punto ,antes.ord_clase 
    ,antes.ord_sitrasla ,NULL ,' ' ,NULL ,' ' ,' ' ,NULL ,' ' ,' ' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_sitrasla update on "informix".sitrasla 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sitrasla (sit_codigo,sit_desc_lg,
    sit_desc_ct,desp_sit_codigo,desp_sit_desc_lg,desp_sit_desc_ct,accion,
    usuario,hora)  values (antes.sit_codigo ,antes.sit_desc_lg ,antes.sit_desc_ct 
    ,luego.sit_codigo ,luego.sit_desc_lg ,luego.sit_desc_ct ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_sitrasla insert on "informix".sitrasla 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_sitrasla (sit_codigo,sit_desc_lg,
    sit_desc_ct,desp_sit_codigo,desp_sit_desc_lg,desp_sit_desc_ct,accion,
    usuario,hora)  values (' ' ,' ' ,' ' ,luego.sit_codigo ,luego.sit_desc_lg 
    ,luego.sit_desc_ct ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sitrasla delete on "informix".sitrasla 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_sitrasla (sit_codigo,sit_desc_lg,
    sit_desc_ct,desp_sit_codigo,desp_sit_desc_lg,desp_sit_desc_ct,accion,
    usuario,hora)  values (antes.sit_codigo ,antes.sit_desc_lg ,antes.sit_desc_ct 
    ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_hfdes1 update on "informix".hfdes1 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_hfdes1 (hfd_catalogo,hfd_fecha,
    hfd_codigo,hfd_nu_reg,hfd_monto,hfd_mensual,hfd_saldo,hfd_corrida,
    hfd_varios,desp_hfd_catalogo,desp_hfd_fecha,desp_hfd_codigo,desp_hfd_nu_reg,
    desp_hfd_monto,desp_hfd_mensual,desp_hfd_saldo,desp_hfd_corrida,desp_hfd_varios,
    accion,usuario,hora)  values (antes.hfd_catalogo ,antes.hfd_fecha 
    ,antes.hfd_codigo ,antes.hfd_nu_reg ,antes.hfd_monto ,antes.hfd_mensual 
    ,antes.hfd_saldo ,antes.hfd_corrida ,antes.hfd_varios ,luego.hfd_catalogo 
    ,luego.hfd_fecha ,luego.hfd_codigo ,luego.hfd_nu_reg ,luego.hfd_monto 
    ,luego.hfd_mensual ,luego.hfd_saldo ,luego.hfd_corrida ,luego.hfd_varios 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_hfdes1 insert on "informix".hfdes1 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_hfdes1 (hfd_catalogo,hfd_fecha,
    hfd_codigo,hfd_nu_reg,hfd_monto,hfd_mensual,hfd_saldo,hfd_corrida,
    hfd_varios,desp_hfd_catalogo,desp_hfd_fecha,desp_hfd_codigo,desp_hfd_nu_reg,
    desp_hfd_monto,desp_hfd_mensual,desp_hfd_saldo,desp_hfd_corrida,desp_hfd_varios,
    accion,usuario,hora)  values (NULL ,' ' ,NULL ,NULL ,' ' ,' ' ,' ' ,' '
     ,' ' ,luego.hfd_catalogo ,luego.hfd_fecha ,luego.hfd_codigo ,luego.hfd_nu_reg 
    ,luego.hfd_monto ,luego.hfd_mensual ,luego.hfd_saldo ,luego.hfd_corrida 
    ,luego.hfd_varios ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_hfdes1 delete on "informix".hfdes1 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_hfdes1 (hfd_catalogo,hfd_fecha,
    hfd_codigo,hfd_nu_reg,hfd_monto,hfd_mensual,hfd_saldo,hfd_corrida,
    hfd_varios,desp_hfd_catalogo,desp_hfd_fecha,desp_hfd_codigo,desp_hfd_nu_reg,
    desp_hfd_monto,desp_hfd_mensual,desp_hfd_saldo,desp_hfd_corrida,desp_hfd_varios,
    accion,usuario,hora)  values (antes.hfd_catalogo ,antes.hfd_fecha 
    ,antes.hfd_codigo ,antes.hfd_nu_reg ,antes.hfd_monto ,antes.hfd_mensual 
    ,antes.hfd_saldo ,antes.hfd_corrida ,antes.hfd_varios ,NULL ,' ' ,
    NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_hfasigc update on "informix".hfasigc 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_hfasigc (hfa_catalogo,hfa_fecha,
    hfa_codigo,hfa_nu_reg,hfa_monto,hfa_mensual,hfa_saldo,hfa_corrida,
    hfa_varios,desp_hfa_catalogo,desp_hfa_fecha,desp_hfa_codigo,desp_hfa_nu_reg,
    desp_hfa_monto,desp_hfa_mensual,desp_hfa_saldo,desp_hfa_corrida,desp_hfa_varios,
    accion,usuario,hora)  values (antes.hfa_catalogo ,antes.hfa_fecha 
    ,antes.hfa_codigo ,antes.hfa_nu_reg ,antes.hfa_monto ,antes.hfa_mensual 
    ,antes.hfa_saldo ,antes.hfa_corrida ,antes.hfa_varios ,luego.hfa_catalogo 
    ,luego.hfa_fecha ,luego.hfa_codigo ,luego.hfa_nu_reg ,luego.hfa_monto 
    ,luego.hfa_mensual ,luego.hfa_saldo ,luego.hfa_corrida ,luego.hfa_varios 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_hfasigc insert on "informix".hfasigc 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_hfasigc (hfa_catalogo,hfa_fecha,
    hfa_codigo,hfa_nu_reg,hfa_monto,hfa_mensual,hfa_saldo,hfa_corrida,
    hfa_varios,desp_hfa_catalogo,desp_hfa_fecha,desp_hfa_codigo,desp_hfa_nu_reg,
    desp_hfa_monto,desp_hfa_mensual,desp_hfa_saldo,desp_hfa_corrida,desp_hfa_varios,
    accion,usuario,hora)  values (NULL ,' ' ,NULL ,NULL ,' ' ,' ' ,' ' ,' '
     ,' ' ,luego.hfa_catalogo ,luego.hfa_fecha ,luego.hfa_codigo ,luego.hfa_nu_reg 
    ,luego.hfa_monto ,luego.hfa_mensual ,luego.hfa_saldo ,luego.hfa_corrida 
    ,luego.hfa_varios ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_hfasigc delete on "informix".hfasigc 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_hfasigc (hfa_catalogo,hfa_fecha,
    hfa_codigo,hfa_nu_reg,hfa_monto,hfa_mensual,hfa_saldo,hfa_corrida,
    hfa_varios,desp_hfa_catalogo,desp_hfa_fecha,desp_hfa_codigo,desp_hfa_nu_reg,
    desp_hfa_monto,desp_hfa_mensual,desp_hfa_saldo,desp_hfa_corrida,desp_hfa_varios,
    accion,usuario,hora)  values (antes.hfa_catalogo ,antes.hfa_fecha 
    ,antes.hfa_codigo ,antes.hfa_nu_reg ,antes.hfa_monto ,antes.hfa_mensual 
    ,antes.hfa_saldo ,antes.hfa_corrida ,antes.hfa_varios ,NULL ,' ' ,
    NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_dlicen update on "informix".dlicen 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dlicen (lic_catalogo,lic_grado,
    lic_situacion,lic_depen,lic_fecha_ini,lic_fecha_fin,lic_observacion,
    lic_orden,lic_punto_ord,lic_estado,desp_lic_catalogo,desp_lic_grado,
    desp_lic_situacion,desp_lic_depen,desp_lic_fecha_ini,desp_lic_fecha_fin,
    desp_lic_observacion,desp_lic_orden,desp_lic_punto_ord,desp_lic_estado,
    accion,usuario,hora)  values (antes.lic_catalogo ,antes.lic_grado 
    ,antes.lic_situacion ,antes.lic_depen ,antes.lic_fecha_ini ,antes.lic_fecha_fin 
    ,antes.lic_observacion ,antes.lic_orden ,antes.lic_punto_ord ,antes.lic_estado 
    ,luego.lic_catalogo ,luego.lic_grado ,luego.lic_situacion ,luego.lic_depen 
    ,luego.lic_fecha_ini ,luego.lic_fecha_fin ,luego.lic_observacion 
    ,luego.lic_orden ,luego.lic_punto_ord ,luego.lic_estado ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_dlicen insert on "informix".dlicen 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_dlicen (lic_catalogo,lic_grado,
    lic_situacion,lic_depen,lic_fecha_ini,lic_fecha_fin,lic_observacion,
    lic_orden,lic_punto_ord,lic_estado,desp_lic_catalogo,desp_lic_grado,
    desp_lic_situacion,desp_lic_depen,desp_lic_fecha_ini,desp_lic_fecha_fin,
    desp_lic_observacion,desp_lic_orden,desp_lic_punto_ord,desp_lic_estado,
    accion,usuario,hora)  values (NULL ,NULL ,' ' ,NULL ,' ' ,' ' ,' ' ,' '
     ,NULL ,' ' ,luego.lic_catalogo ,luego.lic_grado ,luego.lic_situacion 
    ,luego.lic_depen ,luego.lic_fecha_ini ,luego.lic_fecha_fin ,luego.lic_observacion 
    ,luego.lic_orden ,luego.lic_punto_ord ,luego.lic_estado ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_dlicen delete on "informix".dlicen 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_dlicen (lic_catalogo,lic_grado,
    lic_situacion,lic_depen,lic_fecha_ini,lic_fecha_fin,lic_observacion,
    lic_orden,lic_punto_ord,lic_estado,desp_lic_catalogo,desp_lic_grado,
    desp_lic_situacion,desp_lic_depen,desp_lic_fecha_ini,desp_lic_fecha_fin,
    desp_lic_observacion,desp_lic_orden,desp_lic_punto_ord,desp_lic_estado,
    accion,usuario,hora)  values (antes.lic_catalogo ,antes.lic_grado 
    ,antes.lic_situacion ,antes.lic_depen ,antes.lic_fecha_ini ,antes.lic_fecha_fin 
    ,antes.lic_observacion ,antes.lic_orden ,antes.lic_punto_ord ,antes.lic_estado 
    ,NULL ,NULL ,' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,NULL ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_tusuar update on "informix".tusuar 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tusuar (tusuario,tnombre,tdependencia,
    tseccion,ttiempo,desp_tusuario,desp_tnombre,desp_tdependencia,desp_tseccion,
    desp_ttiempo,accion,usuario,hora)  values (antes.tusuario ,antes.tnombre 
    ,antes.tdependencia ,antes.tseccion ,antes.ttiempo ,luego.tusuario 
    ,luego.tnombre ,luego.tdependencia ,luego.tseccion ,luego.ttiempo 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tusuar insert on "informix".tusuar 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_tusuar (tusuario,tnombre,tdependencia,
    tseccion,ttiempo,desp_tusuario,desp_tnombre,desp_tdependencia,desp_tseccion,
    desp_ttiempo,accion,usuario,hora)  values (' ' ,' ' ,' ' ,' ' ,' ' ,luego.tusuario 
    ,luego.tnombre ,luego.tdependencia ,luego.tseccion ,luego.ttiempo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_tusuar delete on "informix".tusuar 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_tusuar (tusuario,tnombre,tdependencia,
    tseccion,ttiempo,desp_tusuario,desp_tnombre,desp_tdependencia,desp_tseccion,
    desp_ttiempo,accion,usuario,hora)  values (antes.tusuario ,antes.tnombre 
    ,antes.tdependencia ,antes.tseccion ,antes.ttiempo ,' ' ,' ' ,' ' ,' '
     ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_indice_dau update on "informix".indice_dau 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_indice_dau (id_nombre,id_aplicacion,
    id_tipo,id_desc,desp_id_nombre,desp_id_aplicacion,desp_id_tipo,desp_id_desc,
    accion,usuario,hora)  values (antes.id_nombre ,antes.id_aplicacion 
    ,antes.id_tipo ,antes.id_desc ,luego.id_nombre ,luego.id_aplicacion 
    ,luego.id_tipo ,luego.id_desc ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_indice_dau insert on "informix".indice_dau 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_indice_dau (id_nombre,id_aplicacion,
    id_tipo,id_desc,desp_id_nombre,desp_id_aplicacion,desp_id_tipo,desp_id_desc,
    accion,usuario,hora)  values (' ' ,' ' ,' ' ,' ' ,luego.id_nombre ,luego.id_aplicacion 
    ,luego.id_tipo ,luego.id_desc ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_indice_dau delete on "informix".indice_dau 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_indice_dau (id_nombre,id_aplicacion,
    id_tipo,id_desc,desp_id_nombre,desp_id_aplicacion,desp_id_tipo,desp_id_desc,
    accion,usuario,hora)  values (antes.id_nombre ,antes.id_aplicacion 
    ,antes.id_tipo ,antes.id_desc ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_eva_detalle delete on "informix"
    .eva_detalle referencing old as antes
    for each row
        (
        insert into "informix".aud_eva_detalle (det_evaluacion,
    det_aspecto,det_linea,det_texto,desp_det_evaluacion,desp_det_aspecto,
    desp_det_linea,desp_det_texto,accion,usuario,hora)  values (antes.det_evaluacion 
    ,antes.det_aspecto ,antes.det_linea ,antes.det_texto ,NULL ,NULL 
    ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_eva_detalle insert on "informix"
    .eva_detalle referencing new as luego
    for each row
        (
        insert into "informix".aud_eva_detalle (det_evaluacion,
    det_aspecto,det_linea,det_texto,desp_det_evaluacion,desp_det_aspecto,
    desp_det_linea,desp_det_texto,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,'' ,luego.det_evaluacion ,luego.det_aspecto ,luego.det_linea 
    ,luego.det_texto ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_eva_detalle update on "informix"
    .eva_detalle referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eva_detalle (det_evaluacion,
    det_aspecto,det_linea,det_texto,desp_det_evaluacion,desp_det_aspecto,
    desp_det_linea,desp_det_texto,accion,usuario,hora)  values (antes.det_evaluacion 
    ,antes.det_aspecto ,antes.det_linea ,antes.det_texto ,luego.det_evaluacion 
    ,luego.det_aspecto ,luego.det_linea ,luego.det_texto ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_accesos update on "informix".accesos 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_accesos (a_sistema,a_subsistema,
    a_catalogo,a_dependencia,a_negociado,a_plaza,a_puesto_actual,a_catal_solic,
    a_fec_solic,a_catal_autor,a_catal_opero,a_fec_opero,a_servidor,a_basedatos,
    a_asunto,a_nom_objeto,desp_a_sistema,desp_a_subsistema,desp_a_catalogo,
    desp_a_dependencia,desp_a_negociado,desp_a_plaza,desp_a_puesto_actual,
    desp_a_catal_solic,desp_a_fec_solic,desp_a_catal_autor,desp_a_catal_opero,
    desp_a_fec_opero,desp_a_servidor,desp_a_basedatos,desp_a_asunto,desp_a_nom_objeto,
    accion,usuario,hora)  values (antes.a_sistema ,antes.a_subsistema 
    ,antes.a_catalogo ,antes.a_dependencia ,antes.a_negociado ,antes.a_plaza 
    ,antes.a_puesto_actual ,antes.a_catal_solic ,antes.a_fec_solic ,antes.a_catal_autor 
    ,antes.a_catal_opero ,antes.a_fec_opero ,antes.a_servidor ,antes.a_basedatos 
    ,antes.a_asunto ,antes.a_nom_objeto ,luego.a_sistema ,luego.a_subsistema 
    ,luego.a_catalogo ,luego.a_dependencia ,luego.a_negociado ,luego.a_plaza 
    ,luego.a_puesto_actual ,luego.a_catal_solic ,luego.a_fec_solic ,luego.a_catal_autor 
    ,luego.a_catal_opero ,luego.a_fec_opero ,luego.a_servidor ,luego.a_basedatos 
    ,luego.a_asunto ,luego.a_nom_objeto ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_accesos insert on "informix".accesos 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_accesos (a_sistema,a_subsistema,
    a_catalogo,a_dependencia,a_negociado,a_plaza,a_puesto_actual,a_catal_solic,
    a_fec_solic,a_catal_autor,a_catal_opero,a_fec_opero,a_servidor,a_basedatos,
    a_asunto,a_nom_objeto,desp_a_sistema,desp_a_subsistema,desp_a_catalogo,
    desp_a_dependencia,desp_a_negociado,desp_a_plaza,desp_a_puesto_actual,
    desp_a_catal_solic,desp_a_fec_solic,desp_a_catal_autor,desp_a_catal_opero,
    desp_a_fec_opero,desp_a_servidor,desp_a_basedatos,desp_a_asunto,desp_a_nom_objeto,
    accion,usuario,hora)  values ('' ,'' ,NULL ,'' ,'' ,NULL ,'' ,NULL ,'' 
    ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,luego.a_sistema ,luego.a_subsistema ,
    luego.a_catalogo ,luego.a_dependencia ,luego.a_negociado ,luego.a_plaza 
    ,luego.a_puesto_actual ,luego.a_catal_solic ,luego.a_fec_solic ,luego.a_catal_autor 
    ,luego.a_catal_opero ,luego.a_fec_opero ,luego.a_servidor ,luego.a_basedatos 
    ,luego.a_asunto ,luego.a_nom_objeto ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_accesos delete on "informix".accesos 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_accesos (a_sistema,a_subsistema,
    a_catalogo,a_dependencia,a_negociado,a_plaza,a_puesto_actual,a_catal_solic,
    a_fec_solic,a_catal_autor,a_catal_opero,a_fec_opero,a_servidor,a_basedatos,
    a_asunto,a_nom_objeto,desp_a_sistema,desp_a_subsistema,desp_a_catalogo,
    desp_a_dependencia,desp_a_negociado,desp_a_plaza,desp_a_puesto_actual,
    desp_a_catal_solic,desp_a_fec_solic,desp_a_catal_autor,desp_a_catal_opero,
    desp_a_fec_opero,desp_a_servidor,desp_a_basedatos,desp_a_asunto,desp_a_nom_objeto,
    accion,usuario,hora)  values (antes.a_sistema ,antes.a_subsistema 
    ,antes.a_catalogo ,antes.a_dependencia ,antes.a_negociado ,antes.a_plaza 
    ,antes.a_puesto_actual ,antes.a_catal_solic ,antes.a_fec_solic ,antes.a_catal_autor 
    ,antes.a_catal_opero ,antes.a_fec_opero ,antes.a_servidor ,antes.a_basedatos 
    ,antes.a_asunto ,antes.a_nom_objeto ,'' ,'' ,NULL ,'' ,'' ,NULL ,'' ,NULL 
    ,'' ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_rh_evaluacion update on "informix"
    .rh_evaluacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rh_evaluacion (eva_numero,
    eva_catalogo,eva_fec_evaluacion,eva_tiempo_total,eva_plaza,eva_tiempo_plaza,
    eva_ceom_efectua,eva_evaluador,eva_tiempo_obser,eva_fisa,eva_rela,
    eva_moet,eva_educ,eva_total,eva_ofi_personal,eva_comandante,eva_categoria,
    desp_eva_numero,desp_eva_catalogo,desp_eva_fec_evaluacion,desp_eva_tiempo_total,
    desp_eva_plaza,desp_eva_tiempo_plaza,desp_eva_ceom_efectua,desp_eva_evaluador,
    desp_eva_tiempo_obser,desp_eva_fisa,desp_eva_rela,desp_eva_moet,desp_eva_educ,
    desp_eva_total,desp_eva_ofi_personal,desp_eva_comandante,desp_eva_categoria,
    accion,usuario,hora)  values (antes.eva_numero ,antes.eva_catalogo 
    ,antes.eva_fec_evaluacion ,antes.eva_tiempo_total ,antes.eva_plaza 
    ,antes.eva_tiempo_plaza ,antes.eva_ceom_efectua ,antes.eva_evaluador 
    ,antes.eva_tiempo_obser ,antes.eva_fisa ,antes.eva_rela ,antes.eva_moet 
    ,antes.eva_educ ,antes.eva_total ,antes.eva_ofi_personal ,antes.eva_comandante 
    ,antes.eva_categoria ,luego.eva_numero ,luego.eva_catalogo ,luego.eva_fec_evaluacion 
    ,luego.eva_tiempo_total ,luego.eva_plaza ,luego.eva_tiempo_plaza 
    ,luego.eva_ceom_efectua ,luego.eva_evaluador ,luego.eva_tiempo_obser 
    ,luego.eva_fisa ,luego.eva_rela ,luego.eva_moet ,luego.eva_educ ,
    luego.eva_total ,luego.eva_ofi_personal ,luego.eva_comandante ,luego.eva_categoria 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_rh_evaluacion insert on "informix"
    .rh_evaluacion referencing new as luego
    for each row
        (
        insert into "informix".aud_rh_evaluacion (eva_numero,
    eva_catalogo,eva_fec_evaluacion,eva_tiempo_total,eva_plaza,eva_tiempo_plaza,
    eva_ceom_efectua,eva_evaluador,eva_tiempo_obser,eva_fisa,eva_rela,
    eva_moet,eva_educ,eva_total,eva_ofi_personal,eva_comandante,eva_categoria,
    desp_eva_numero,desp_eva_catalogo,desp_eva_fec_evaluacion,desp_eva_tiempo_total,
    desp_eva_plaza,desp_eva_tiempo_plaza,desp_eva_ceom_efectua,desp_eva_evaluador,
    desp_eva_tiempo_obser,desp_eva_fisa,desp_eva_rela,desp_eva_moet,desp_eva_educ,
    desp_eva_total,desp_eva_ofi_personal,desp_eva_comandante,desp_eva_categoria,
    accion,usuario,hora)  values (NULL ,NULL ,' ' ,NULL ,NULL ,NULL ,' '
     ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,luego.eva_numero 
    ,luego.eva_catalogo ,luego.eva_fec_evaluacion ,luego.eva_tiempo_total 
    ,luego.eva_plaza ,luego.eva_tiempo_plaza ,luego.eva_ceom_efectua 
    ,luego.eva_evaluador ,luego.eva_tiempo_obser ,luego.eva_fisa ,luego.eva_rela 
    ,luego.eva_moet ,luego.eva_educ ,luego.eva_total ,luego.eva_ofi_personal 
    ,luego.eva_comandante ,luego.eva_categoria ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_rh_evaluacion delete on "informix"
    .rh_evaluacion referencing old as antes
    for each row
        (
        insert into "informix".aud_rh_evaluacion (eva_numero,
    eva_catalogo,eva_fec_evaluacion,eva_tiempo_total,eva_plaza,eva_tiempo_plaza,
    eva_ceom_efectua,eva_evaluador,eva_tiempo_obser,eva_fisa,eva_rela,
    eva_moet,eva_educ,eva_total,eva_ofi_personal,eva_comandante,eva_categoria,
    desp_eva_numero,desp_eva_catalogo,desp_eva_fec_evaluacion,desp_eva_tiempo_total,
    desp_eva_plaza,desp_eva_tiempo_plaza,desp_eva_ceom_efectua,desp_eva_evaluador,
    desp_eva_tiempo_obser,desp_eva_fisa,desp_eva_rela,desp_eva_moet,desp_eva_educ,
    desp_eva_total,desp_eva_ofi_personal,desp_eva_comandante,desp_eva_categoria,
    accion,usuario,hora)  values (antes.eva_numero ,antes.eva_catalogo 
    ,antes.eva_fec_evaluacion ,antes.eva_tiempo_total ,antes.eva_plaza 
    ,antes.eva_tiempo_plaza ,antes.eva_ceom_efectua ,antes.eva_evaluador 
    ,antes.eva_tiempo_obser ,antes.eva_fisa ,antes.eva_rela ,antes.eva_moet 
    ,antes.eva_educ ,antes.eva_total ,antes.eva_ofi_personal ,antes.eva_comandante 
    ,antes.eva_categoria ,NULL ,NULL ,' ' ,NULL ,NULL ,NULL ,' ' ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".act_rh_aspecto update on "informix".rh_aspecto 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rh_aspecto (asp_codigo,asp_tipo,
    asp_descripcion,desp_asp_codigo,desp_asp_tipo,desp_asp_descripcion,
    accion,usuario,hora)  values (antes.asp_codigo ,antes.asp_tipo ,antes.asp_descripcion 
    ,luego.asp_codigo ,luego.asp_tipo ,luego.asp_descripcion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_rh_aspecto insert on "informix".rh_aspecto 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_rh_aspecto (asp_codigo,asp_tipo,
    asp_descripcion,desp_asp_codigo,desp_asp_tipo,desp_asp_descripcion,
    accion,usuario,hora)  values (NULL ,NULL ,' ' ,luego.asp_codigo ,luego.asp_tipo 
    ,luego.asp_descripcion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_rh_aspecto delete on "informix".rh_aspecto 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_rh_aspecto (asp_codigo,asp_tipo,
    asp_descripcion,desp_asp_codigo,desp_asp_tipo,desp_asp_descripcion,
    accion,usuario,hora)  values (antes.asp_codigo ,antes.asp_tipo ,antes.asp_descripcion 
    ,NULL ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_rh_tipo_aspecto update on "informix"
    .rh_tipo_aspecto referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rh_tipo_aspecto (tip_codigo,
    tip_descripcion,desp_tip_codigo,desp_tip_descripcion,accion,usuario,
    hora)  values (antes.tip_codigo ,antes.tip_descripcion ,luego.tip_codigo 
    ,luego.tip_descripcion ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_rh_tipo_aspecto insert on "informix"
    .rh_tipo_aspecto referencing new as luego
    for each row
        (
        insert into "informix".aud_rh_tipo_aspecto (tip_codigo,
    tip_descripcion,desp_tip_codigo,desp_tip_descripcion,accion,usuario,
    hora)  values (NULL ,' ' ,luego.tip_codigo ,luego.tip_descripcion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_rh_tipo_aspecto delete on "informix"
    .rh_tipo_aspecto referencing old as antes
    for each row
        (
        insert into "informix".aud_rh_tipo_aspecto (tip_codigo,
    tip_descripcion,desp_tip_codigo,desp_tip_descripcion,accion,usuario,
    hora)  values (antes.tip_codigo ,antes.tip_descripcion ,NULL ,' ' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_rh_categoria update on "informix"
    .rh_categoria referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rh_categoria (cat_codigo,cat_descripcion,
    cat_minimo,cat_maximo,desp_cat_codigo,desp_cat_descripcion,desp_cat_minimo,
    desp_cat_maximo,accion,usuario,hora)  values (antes.cat_codigo ,antes.cat_descripcion 
    ,antes.cat_minimo ,antes.cat_maximo ,luego.cat_codigo ,luego.cat_descripcion 
    ,luego.cat_minimo ,luego.cat_maximo ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_rh_categoria insert on "informix"
    .rh_categoria referencing new as luego
    for each row
        (
        insert into "informix".aud_rh_categoria (cat_codigo,cat_descripcion,
    cat_minimo,cat_maximo,desp_cat_codigo,desp_cat_descripcion,desp_cat_minimo,
    desp_cat_maximo,accion,usuario,hora)  values (NULL ,' ' ,NULL ,NULL 
    ,luego.cat_codigo ,luego.cat_descripcion ,luego.cat_minimo ,luego.cat_maximo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_rh_categoria delete on "informix"
    .rh_categoria referencing old as antes
    for each row
        (
        insert into "informix".aud_rh_categoria (cat_codigo,cat_descripcion,
    cat_minimo,cat_maximo,desp_cat_codigo,desp_cat_descripcion,desp_cat_minimo,
    desp_cat_maximo,accion,usuario,hora)  values (antes.cat_codigo ,antes.cat_descripcion 
    ,antes.cat_minimo ,antes.cat_maximo ,NULL ,' ' ,NULL ,NULL ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_rh_det_evaluacion update on "informix"
    .rh_det_evaluacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rh_det_evaluacion (det_evaluacion,
    det_aspecto,det_linea,det_texto,desp_det_evaluacion,desp_det_aspecto,
    desp_det_linea,desp_det_texto,accion,usuario,hora)  values (antes.det_evaluacion 
    ,antes.det_aspecto ,antes.det_linea ,antes.det_texto ,luego.det_evaluacion 
    ,luego.det_aspecto ,luego.det_linea ,luego.det_texto ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_rh_det_evaluacion insert on "informix"
    .rh_det_evaluacion referencing new as luego
    for each row
        (
        insert into "informix".aud_rh_det_evaluacion (det_evaluacion,
    det_aspecto,det_linea,det_texto,desp_det_evaluacion,desp_det_aspecto,
    desp_det_linea,desp_det_texto,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,' ' ,luego.det_evaluacion ,luego.det_aspecto ,luego.det_linea 
    ,luego.det_texto ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_rh_det_evaluacion delete on "informix"
    .rh_det_evaluacion referencing old as antes
    for each row
        (
        insert into "informix".aud_rh_det_evaluacion (det_evaluacion,
    det_aspecto,det_linea,det_texto,desp_det_evaluacion,desp_det_aspecto,
    desp_det_linea,desp_det_texto,accion,usuario,hora)  values (antes.det_evaluacion 
    ,antes.det_aspecto ,antes.det_linea ,antes.det_texto ,NULL ,NULL 
    ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_insp_tipos delete on "informix".insp_tipos 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_insp_tipos (tip_codigo,tip_descct,
    tip_descmd,tip_desclg,desp_tip_codigo,desp_tip_descct,desp_tip_descmd,
    desp_tip_desclg,accion,usuario,hora)  values (antes.tip_codigo ,antes.tip_descct 
    ,antes.tip_descmd ,antes.tip_desclg ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_insp_tipos insert on "informix".insp_tipos 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_insp_tipos (tip_codigo,tip_descct,
    tip_descmd,tip_desclg,desp_tip_codigo,desp_tip_descct,desp_tip_descmd,
    desp_tip_desclg,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.tip_codigo 
    ,luego.tip_descct ,luego.tip_descmd ,luego.tip_desclg ,'I' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".act_insp_tipos update on "informix".insp_tipos 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_insp_tipos (tip_codigo,tip_descct,
    tip_descmd,tip_desclg,desp_tip_codigo,desp_tip_descct,desp_tip_descmd,
    desp_tip_desclg,accion,usuario,hora)  values (antes.tip_codigo ,antes.tip_descct 
    ,antes.tip_descmd ,antes.tip_desclg ,luego.tip_codigo ,luego.tip_descct 
    ,luego.tip_descmd ,luego.tip_desclg ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_insp_situacion delete on "informix"
    .insp_situacion referencing old as antes
    for each row
        (
        insert into "informix".aud_insp_situacion (sit_codigo,
    sit_descct,sit_descmd,sit_desclg,desp_sit_codigo,desp_sit_descct,
    desp_sit_descmd,desp_sit_desclg,accion,usuario,hora)  values (antes.sit_codigo 
    ,antes.sit_descct ,antes.sit_descmd ,antes.sit_desclg ,NULL ,'' ,''
     ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_insp_situacion insert on "informix"
    .insp_situacion referencing new as luego
    for each row
        (
        insert into "informix".aud_insp_situacion (sit_codigo,
    sit_descct,sit_descmd,sit_desclg,desp_sit_codigo,desp_sit_descct,
    desp_sit_descmd,desp_sit_desclg,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,luego.sit_codigo ,luego.sit_descct ,luego.sit_descmd ,luego.sit_desclg 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_insp_situacion update on "informix"
    .insp_situacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_insp_situacion (sit_codigo,
    sit_descct,sit_descmd,sit_desclg,desp_sit_codigo,desp_sit_descct,
    desp_sit_descmd,desp_sit_desclg,accion,usuario,hora)  values (antes.sit_codigo 
    ,antes.sit_descct ,antes.sit_descmd ,antes.sit_desclg ,luego.sit_codigo 
    ,luego.sit_descct ,luego.sit_descmd ,luego.sit_desclg ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".del_insp_nueva delete on "informix".insp_nueva 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_insp_nueva (codigo,corta,mediana,
    larga,host,usuarios,date,del,desp_codigo,desp_corta,desp_mediana,
    desp_larga,desp_host,desp_usuarios,desp_date,desp_del,accion,usuario,
    hora)  values (antes.codigo ,antes.corta ,antes.mediana ,antes.larga 
    ,antes.host ,antes.usuario ,antes.date ,antes.del ,NULL ,'' ,'' ,'' 
    ,'' ,'' ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_insp_nueva insert on "informix".insp_nueva 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_insp_nueva (codigo,corta,mediana,
    larga,host,usuarios,date,del,desp_codigo,desp_corta,desp_mediana,
    desp_larga,desp_host,desp_usuarios,desp_date,desp_del,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,luego.codigo ,luego.corta 
    ,luego.mediana ,luego.larga ,luego.host ,luego.usuario ,luego.date 
    ,luego.del ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_insp_nueva update on "informix".insp_nueva 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_insp_nueva (codigo,corta,mediana,
    larga,host,usuarios,date,del,desp_codigo,desp_corta,desp_mediana,
    desp_larga,desp_host,desp_usuarios,desp_date,desp_del,accion,usuario,
    hora)  values (antes.codigo ,antes.corta ,antes.mediana ,antes.larga 
    ,antes.host ,antes.usuario ,antes.date ,antes.del ,luego.codigo ,
    luego.corta ,luego.mediana ,luego.larga ,luego.host ,luego.usuario 
    ,luego.date ,luego.del ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_insp_ianota insert on "informix"
    .insp_ianota referencing new as luego
    for each row
        (
        insert into "informix".aud_insp_ianota (a_codigo,a_descripcion,
    a_edif_terreno,desp_a_codigo,desp_a_descripcion,desp_a_edif_terreno,
    accion,usuario,hora)  values (NULL ,'' ,NULL ,luego.a_codigo ,luego.a_descripcion 
    ,luego.a_edif_terreno ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_insp_ianota delete on "informix"
    .insp_ianota referencing old as antes
    for each row
        (
        insert into "informix".aud_insp_ianota (a_codigo,a_descripcion,
    a_edif_terreno,desp_a_codigo,desp_a_descripcion,desp_a_edif_terreno,
    accion,usuario,hora)  values (antes.a_codigo ,antes.a_descripcion 
    ,antes.a_edif_terreno ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_insp_ianota update on "informix"
    .insp_ianota referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_insp_ianota (a_codigo,a_descripcion,
    a_edif_terreno,desp_a_codigo,desp_a_descripcion,desp_a_edif_terreno,
    accion,usuario,hora)  values (antes.a_codigo ,antes.a_descripcion 
    ,antes.a_edif_terreno ,luego.a_codigo ,luego.a_descripcion ,luego.a_edif_terreno 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_insp_estado delete on "informix"
    .insp_estado referencing old as antes
    for each row
        (
        insert into "informix".aud_insp_estado (est_codigo,est_descct,
    est_descmd,est_desclg,desp_est_codigo,desp_est_descct,desp_est_descmd,
    desp_est_desclg,accion,usuario,hora)  values (antes.est_codigo ,antes.est_descct 
    ,antes.est_descmd ,antes.est_desclg ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_insp_estado insert on "informix"
    .insp_estado referencing new as luego
    for each row
        (
        insert into "informix".aud_insp_estado (est_codigo,est_descct,
    est_descmd,est_desclg,desp_est_codigo,desp_est_descct,desp_est_descmd,
    desp_est_desclg,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.est_codigo 
    ,luego.est_descct ,luego.est_descmd ,luego.est_desclg ,'I' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".act_insp_estado update on "informix"
    .insp_estado referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_insp_estado (est_codigo,est_descct,
    est_descmd,est_desclg,desp_est_codigo,desp_est_descct,desp_est_descmd,
    desp_est_desclg,accion,usuario,hora)  values (antes.est_codigo ,antes.est_descct 
    ,antes.est_descmd ,antes.est_desclg ,luego.est_codigo ,luego.est_descct 
    ,luego.est_descmd ,luego.est_desclg ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_insp_anotaciones delete on "informix"
    .insp_anotaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_insp_anotaciones (a_cat,a_anota,
    a_fecha,a_si_no,a_observaciones,desp_a_cat,desp_a_anota,desp_a_fecha,
    desp_a_si_no,desp_a_observaciones,accion,usuario,hora)  values (antes.a_cat 
    ,antes.a_anota ,antes.a_fecha ,antes.a_si_no ,antes.a_observaciones 
    ,NULL ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_insp_anotaciones insert on "informix"
    .insp_anotaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_insp_anotaciones (a_cat,a_anota,
    a_fecha,a_si_no,a_observaciones,desp_a_cat,desp_a_anota,desp_a_fecha,
    desp_a_si_no,desp_a_observaciones,accion,usuario,hora)  values (NULL 
    ,NULL ,'' ,'' ,'' ,luego.a_cat ,luego.a_anota ,luego.a_fecha ,luego.a_si_no 
    ,luego.a_observaciones ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_insp_anotaciones update on "informix"
    .insp_anotaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_insp_anotaciones (a_cat,a_anota,
    a_fecha,a_si_no,a_observaciones,desp_a_cat,desp_a_anota,desp_a_fecha,
    desp_a_si_no,desp_a_observaciones,accion,usuario,hora)  values (antes.a_cat 
    ,antes.a_anota ,antes.a_fecha ,antes.a_si_no ,antes.a_observaciones 
    ,luego.a_cat ,luego.a_anota ,luego.a_fecha ,luego.a_si_no ,luego.a_observaciones 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_cc_tip_requerimiento delete on 
    "informix".cc_tip_requerimiento referencing old as antes
    for each row
        (
        insert into "informix".aud_cc_tip_requerimiento (tipcodigo,
    tipdescripcion,desp_tipcodigo,desp_tipdescripcion,accion,usuario,
    hora)  values (antes.tipcodigo ,antes.tipdescripcion ,NULL ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cc_tip_requerimiento insert on 
    "informix".cc_tip_requerimiento referencing new as luego
    for each row
        (
        insert into "informix".aud_cc_tip_requerimiento (tipcodigo,
    tipdescripcion,desp_tipcodigo,desp_tipdescripcion,accion,usuario,
    hora)  values (NULL ,'' ,luego.tipcodigo ,luego.tipdescripcion ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_cc_tip_requerimiento update on 
    "informix".cc_tip_requerimiento referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_cc_tip_requerimiento (tipcodigo,
    tipdescripcion,desp_tipcodigo,desp_tipdescripcion,accion,usuario,
    hora)  values (antes.tipcodigo ,antes.tipdescripcion ,luego.tipcodigo 
    ,luego.tipdescripcion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_cc_divisiones delete on "informix"
    .cc_divisiones referencing old as antes
    for each row
        (
        insert into "informix".aud_cc_divisiones (divcodigo,divnombre,
    divresponsable,desp_divcodigo,desp_divnombre,desp_divresponsable,
    accion,usuario,hora)  values (antes.divcodigo ,antes.divnombre ,antes.divresponsable 
    ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cc_divisiones insert on "informix"
    .cc_divisiones referencing new as luego
    for each row
        (
        insert into "informix".aud_cc_divisiones (divcodigo,divnombre,
    divresponsable,desp_divcodigo,desp_divnombre,desp_divresponsable,
    accion,usuario,hora)  values (NULL ,'' ,NULL ,luego.divcodigo ,luego.divnombre 
    ,luego.divresponsable ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_cc_divisiones update on "informix"
    .cc_divisiones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cc_divisiones (divcodigo,divnombre,
    divresponsable,desp_divcodigo,desp_divnombre,desp_divresponsable,
    accion,usuario,hora)  values (antes.divcodigo ,antes.divnombre ,antes.divresponsable 
    ,luego.divcodigo ,luego.divnombre ,luego.divresponsable ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_cc_situaciones delete on "informix"
    .cc_situaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_cc_situaciones (sitcodigo,
    sitdescripcion,desp_sitcodigo,desp_sitdescripcion,accion,usuario,
    hora)  values (antes.sitcodigo ,antes.sitdescripcion ,NULL ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cc_situaciones insert on "informix"
    .cc_situaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_cc_situaciones (sitcodigo,
    sitdescripcion,desp_sitcodigo,desp_sitdescripcion,accion,usuario,
    hora)  values (NULL ,'' ,luego.sitcodigo ,luego.sitdescripcion ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_cc_situaciones update on "informix"
    .cc_situaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cc_situaciones (sitcodigo,
    sitdescripcion,desp_sitcodigo,desp_sitdescripcion,accion,usuario,
    hora)  values (antes.sitcodigo ,antes.sitdescripcion ,luego.sitcodigo 
    ,luego.sitdescripcion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_cc_problemas delete on "informix"
    .cc_problemas referencing old as antes
    for each row
        (
        insert into "informix".aud_cc_problemas (procodigo,proproblema,
    prosolucion,desp_procodigo,desp_proproblema,desp_prosolucion,accion,
    usuario,hora)  values (antes.procodigo ,antes.proproblema ,antes.prosolucion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cc_problemas insert on "informix"
    .cc_problemas referencing new as luego
    for each row
        (
        insert into "informix".aud_cc_problemas (procodigo,proproblema,
    prosolucion,desp_procodigo,desp_proproblema,desp_prosolucion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.procodigo ,luego.proproblema 
    ,luego.prosolucion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_cc_problemas update on "informix"
    .cc_problemas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cc_problemas (procodigo,proproblema,
    prosolucion,desp_procodigo,desp_proproblema,desp_prosolucion,accion,
    usuario,hora)  values (antes.procodigo ,antes.proproblema ,antes.prosolucion 
    ,luego.procodigo ,luego.proproblema ,luego.prosolucion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_insp_inmuebles update on "informix"
    .insp_inmuebles referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_insp_inmuebles (i_catalogo,
    i_comando,i_tipo,i_inventariada,i_no_inventario,i_nombre,i_uso,i_costo,
    i_ubicacion,i_estado,i_situacion,i_fecha_apertura,i_observaciones,
    i_folio,i_nfinca,i_libro,i_extension,i_fecaval,desp_i_catalogo,desp_i_comando,
    desp_i_tipo,desp_i_inventariada,desp_i_no_inventario,desp_i_nombre,
    desp_i_uso,desp_i_costo,desp_i_ubicacion,desp_i_estado,desp_i_situacion,
    desp_i_fecha_apertura,desp_i_observaciones,desp_i_folio,desp_i_nfinca,
    desp_i_libro,desp_i_extension,desp_i_fecaval,accion,usuario,hora) 
     values (antes.i_catalogo ,antes.i_comando ,antes.i_tipo ,antes.i_inventariada 
    ,antes.i_no_inventario ,antes.i_nombre ,antes.i_uso ,antes.i_costo 
    ,antes.i_ubicacion ,antes.i_estado ,antes.i_situacion ,antes.i_fecha_apertura 
    ,antes.i_observaciones ,antes.i_folio ,antes.i_nfinca ,antes.i_libro 
    ,antes.i_extension ,antes.i_fecaval ,luego.i_catalogo ,luego.i_comando 
    ,luego.i_tipo ,luego.i_inventariada ,luego.i_no_inventario ,luego.i_nombre 
    ,luego.i_uso ,luego.i_costo ,luego.i_ubicacion ,luego.i_estado ,luego.i_situacion 
    ,luego.i_fecha_apertura ,luego.i_observaciones ,luego.i_folio ,luego.i_nfinca 
    ,luego.i_libro ,luego.i_extension ,luego.i_fecaval ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_insp_inmuebles insert on "informix"
    .insp_inmuebles referencing new as luego
    for each row
        (
        insert into "informix".aud_insp_inmuebles (i_catalogo,
    i_comando,i_tipo,i_inventariada,i_no_inventario,i_nombre,i_uso,i_costo,
    i_ubicacion,i_estado,i_situacion,i_fecha_apertura,i_observaciones,
    i_folio,i_nfinca,i_libro,i_extension,i_fecaval,desp_i_catalogo,desp_i_comando,
    desp_i_tipo,desp_i_inventariada,desp_i_no_inventario,desp_i_nombre,
    desp_i_uso,desp_i_costo,desp_i_ubicacion,desp_i_estado,desp_i_situacion,
    desp_i_fecha_apertura,desp_i_observaciones,desp_i_folio,desp_i_nfinca,
    desp_i_libro,desp_i_extension,desp_i_fecaval,accion,usuario,hora) 
     values (NULL ,NULL ,NULL ,' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,NULL ,NULL ,
    ' ' ,' ' ,NULL ,NULL ,' ' ,' ' ,' ' ,luego.i_catalogo ,luego.i_comando 
    ,luego.i_tipo ,luego.i_inventariada ,luego.i_no_inventario ,luego.i_nombre 
    ,luego.i_uso ,luego.i_costo ,luego.i_ubicacion ,luego.i_estado ,luego.i_situacion 
    ,luego.i_fecha_apertura ,luego.i_observaciones ,luego.i_folio ,luego.i_nfinca 
    ,luego.i_libro ,luego.i_extension ,luego.i_fecaval ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_insp_inmuebles delete on "informix"
    .insp_inmuebles referencing old as antes
    for each row
        (
        insert into "informix".aud_insp_inmuebles (i_catalogo,
    i_comando,i_tipo,i_inventariada,i_no_inventario,i_nombre,i_uso,i_costo,
    i_ubicacion,i_estado,i_situacion,i_fecha_apertura,i_observaciones,
    i_folio,i_nfinca,i_libro,i_extension,i_fecaval,desp_i_catalogo,desp_i_comando,
    desp_i_tipo,desp_i_inventariada,desp_i_no_inventario,desp_i_nombre,
    desp_i_uso,desp_i_costo,desp_i_ubicacion,desp_i_estado,desp_i_situacion,
    desp_i_fecha_apertura,desp_i_observaciones,desp_i_folio,desp_i_nfinca,
    desp_i_libro,desp_i_extension,desp_i_fecaval,accion,usuario,hora) 
     values (antes.i_catalogo ,antes.i_comando ,antes.i_tipo ,antes.i_inventariada 
    ,antes.i_no_inventario ,antes.i_nombre ,antes.i_uso ,antes.i_costo 
    ,antes.i_ubicacion ,antes.i_estado ,antes.i_situacion ,antes.i_fecha_apertura 
    ,antes.i_observaciones ,antes.i_folio ,antes.i_nfinca ,antes.i_libro 
    ,antes.i_extension ,antes.i_fecaval ,NULL ,NULL ,NULL ,' ' ,NULL ,
    ' ' ,' ' ,' ' ,' ' ,NULL ,NULL ,' ' ,' ' ,NULL ,NULL ,' ' ,' ' ,' ' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_insp_observaciones update on "informix"
    .insp_observaciones referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_insp_observaciones (obs_cod,
    obs_cat,obs_linea,obs_desc,desp_obs_cod,desp_obs_cat,desp_obs_linea,
    desp_obs_desc,accion,usuario,hora)  values (antes.obs_cod ,antes.obs_cat 
    ,antes.obs_linea ,antes.obs_desc ,luego.obs_cod ,luego.obs_cat ,luego.obs_linea 
    ,luego.obs_desc ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_insp_observaciones insert on "informix"
    .insp_observaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_insp_observaciones (obs_cod,
    obs_cat,obs_linea,obs_desc,desp_obs_cod,desp_obs_cat,desp_obs_linea,
    desp_obs_desc,accion,usuario,hora)  values (NULL ,NULL ,NULL ,' ' 
    ,luego.obs_cod ,luego.obs_cat ,luego.obs_linea ,luego.obs_desc ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_insp_observaciones delete on "informix"
    .insp_observaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_insp_observaciones (obs_cod,
    obs_cat,obs_linea,obs_desc,desp_obs_cod,desp_obs_cat,desp_obs_linea,
    desp_obs_desc,accion,usuario,hora)  values (antes.obs_cod ,antes.obs_cat 
    ,antes.obs_linea ,antes.obs_desc ,NULL ,NULL ,NULL ,' ' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_cc_dticket update on "informix".cc_dticket 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cc_dticket (dtitransaccion,
    dtiorden,dtitiprequeri,dtidescripcion,dticantidad,dtifecfin,dtihorafin,
    dtifecentrega,dtihoraentrega,dtisituacion,desp_dtitransaccion,desp_dtiorden,
    desp_dtitiprequeri,desp_dtidescripcion,desp_dticantidad,desp_dtifecfin,
    desp_dtihorafin,desp_dtifecentrega,desp_dtihoraentrega,desp_dtisituacion,
    accion,usuario,hora)  values (antes.dtitransaccion ,antes.dtiorden 
    ,antes.dtitiprequeri ,antes.dtidescripcion ,antes.dticantidad ,antes.dtifecfin 
    ,antes.dtihorafin ,antes.dtifecentrega ,antes.dtihoraentrega ,antes.dtisituacion 
    ,luego.dtitransaccion ,luego.dtiorden ,luego.dtitiprequeri ,luego.dtidescripcion 
    ,luego.dticantidad ,luego.dtifecfin ,luego.dtihorafin ,luego.dtifecentrega 
    ,luego.dtihoraentrega ,luego.dtisituacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_cc_dticket insert on "informix".cc_dticket 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_cc_dticket (dtitransaccion,
    dtiorden,dtitiprequeri,dtidescripcion,dticantidad,dtifecfin,dtihorafin,
    dtifecentrega,dtihoraentrega,dtisituacion,desp_dtitransaccion,desp_dtiorden,
    desp_dtitiprequeri,desp_dtidescripcion,desp_dticantidad,desp_dtifecfin,
    desp_dtihorafin,desp_dtifecentrega,desp_dtihoraentrega,desp_dtisituacion,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,' ' ,NULL ,' ' ,' ' 
    ,' ' ,' ' ,NULL ,luego.dtitransaccion ,luego.dtiorden ,luego.dtitiprequeri 
    ,luego.dtidescripcion ,luego.dticantidad ,luego.dtifecfin ,luego.dtihorafin 
    ,luego.dtifecentrega ,luego.dtihoraentrega ,luego.dtisituacion ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_cc_dticket delete on "informix".cc_dticket 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_cc_dticket (dtitransaccion,
    dtiorden,dtitiprequeri,dtidescripcion,dticantidad,dtifecfin,dtihorafin,
    dtifecentrega,dtihoraentrega,dtisituacion,desp_dtitransaccion,desp_dtiorden,
    desp_dtitiprequeri,desp_dtidescripcion,desp_dticantidad,desp_dtifecfin,
    desp_dtihorafin,desp_dtifecentrega,desp_dtihoraentrega,desp_dtisituacion,
    accion,usuario,hora)  values (antes.dtitransaccion ,antes.dtiorden 
    ,antes.dtitiprequeri ,antes.dtidescripcion ,antes.dticantidad ,antes.dtifecfin 
    ,antes.dtihorafin ,antes.dtifecentrega ,antes.dtihoraentrega ,antes.dtisituacion 
    ,NULL ,NULL ,NULL ,' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,NULL ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_cc_mticket update on "informix".cc_mticket 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cc_mticket (mtitransaccion,
    mtifecinicio,mtihorainicio,mtisolicitante,mtiorigen,mtidestino,mtiatendio,
    mtiresponsable,mtisituacion,mtifecentrega,mtihoraentrega,desp_mtitransaccion,
    desp_mtifecinicio,desp_mtihorainicio,desp_mtisolicitante,desp_mtiorigen,
    desp_mtidestino,desp_mtiatendio,desp_mtiresponsable,desp_mtisituacion,
    desp_mtifecentrega,desp_mtihoraentrega,accion,usuario,hora)  values 
    (antes.mtitransaccion ,antes.mtifecinicio ,antes.mtihorainicio ,antes.mtisolicitante 
    ,antes.mtiorigen ,antes.mtidestino ,antes.mtiatendio ,antes.mtiresponsable 
    ,antes.mtisituacion ,antes.mtifecentrega ,antes.mtihoraentrega ,luego.mtitransaccion 
    ,luego.mtifecinicio ,luego.mtihorainicio ,luego.mtisolicitante ,luego.mtiorigen 
    ,luego.mtidestino ,luego.mtiatendio ,luego.mtiresponsable ,luego.mtisituacion 
    ,luego.mtifecentrega ,luego.mtihoraentrega ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_cc_mticket insert on "informix".cc_mticket 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_cc_mticket (mtitransaccion,
    mtifecinicio,mtihorainicio,mtisolicitante,mtiorigen,mtidestino,mtiatendio,
    mtiresponsable,mtisituacion,mtifecentrega,mtihoraentrega,desp_mtitransaccion,
    desp_mtifecinicio,desp_mtihorainicio,desp_mtisolicitante,desp_mtiorigen,
    desp_mtidestino,desp_mtiatendio,desp_mtiresponsable,desp_mtisituacion,
    desp_mtifecentrega,desp_mtihoraentrega,accion,usuario,hora)  values 
    (NULL ,' ' ,' ' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,' ' ,' ' ,luego.mtitransaccion 
    ,luego.mtifecinicio ,luego.mtihorainicio ,luego.mtisolicitante ,luego.mtiorigen 
    ,luego.mtidestino ,luego.mtiatendio ,luego.mtiresponsable ,luego.mtisituacion 
    ,luego.mtifecentrega ,luego.mtihoraentrega ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_cc_mticket delete on "informix".cc_mticket 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_cc_mticket (mtitransaccion,
    mtifecinicio,mtihorainicio,mtisolicitante,mtiorigen,mtidestino,mtiatendio,
    mtiresponsable,mtisituacion,mtifecentrega,mtihoraentrega,desp_mtitransaccion,
    desp_mtifecinicio,desp_mtihorainicio,desp_mtisolicitante,desp_mtiorigen,
    desp_mtidestino,desp_mtiatendio,desp_mtiresponsable,desp_mtisituacion,
    desp_mtifecentrega,desp_mtihoraentrega,accion,usuario,hora)  values 
    (antes.mtitransaccion ,antes.mtifecinicio ,antes.mtihorainicio ,antes.mtisolicitante 
    ,antes.mtiorigen ,antes.mtidestino ,antes.mtiatendio ,antes.mtiresponsable 
    ,antes.mtisituacion ,antes.mtifecentrega ,antes.mtihoraentrega ,NULL 
    ,' ' ,' ' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,' ' ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_c_proposito update on "informix"
    .c_proposito referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_c_proposito (prop_codigo,prop_desc,
    desp_prop_codigo,desp_prop_desc,accion,usuario,hora)  values (antes.prop_codigo 
    ,antes.prop_desc ,luego.prop_codigo ,luego.prop_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_c_proposito insert on "informix"
    .c_proposito referencing new as luego
    for each row
        (
        insert into "informix".aud_c_proposito (prop_codigo,prop_desc,
    desp_prop_codigo,desp_prop_desc,accion,usuario,hora)  values (NULL 
    ,'' ,luego.prop_codigo ,luego.prop_desc ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_c_proposito delete on "informix"
    .c_proposito referencing old as antes
    for each row
        (
        insert into "informix".aud_c_proposito (prop_codigo,prop_desc,
    desp_prop_codigo,desp_prop_desc,accion,usuario,hora)  values (antes.prop_codigo 
    ,antes.prop_desc ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_c_empresas update on "informix".c_empresas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_c_empresas (emp_codigo,emp_desc_lg,
    emp_desc_md,emp_desc_ct,desp_emp_codigo,desp_emp_desc_lg,desp_emp_desc_md,
    desp_emp_desc_ct,accion,usuario,hora)  values (antes.emp_codigo ,
    antes.emp_desc_lg ,antes.emp_desc_md ,antes.emp_desc_ct ,luego.emp_codigo 
    ,luego.emp_desc_lg ,luego.emp_desc_md ,luego.emp_desc_ct ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_c_empresas insert on "informix".c_empresas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_c_empresas (emp_codigo,emp_desc_lg,
    emp_desc_md,emp_desc_ct,desp_emp_codigo,desp_emp_desc_lg,desp_emp_desc_md,
    desp_emp_desc_ct,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.emp_codigo 
    ,luego.emp_desc_lg ,luego.emp_desc_md ,luego.emp_desc_ct ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_c_empresas delete on "informix".c_empresas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_c_empresas (emp_codigo,emp_desc_lg,
    emp_desc_md,emp_desc_ct,desp_emp_codigo,desp_emp_desc_lg,desp_emp_desc_md,
    desp_emp_desc_ct,accion,usuario,hora)  values (antes.emp_codigo ,
    antes.emp_desc_lg ,antes.emp_desc_md ,antes.emp_desc_ct ,NULL ,'' 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_c_oficinas update on "informix".c_oficinas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_c_oficinas (of_codigo,of_dep,
    of_desc,desp_of_codigo,desp_of_dep,desp_of_desc,accion,usuario,hora) 
     values (antes.of_codigo ,antes.of_dep ,antes.of_desc ,luego.of_codigo 
    ,luego.of_dep ,luego.of_desc ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_c_oficinas insert on "informix".c_oficinas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_c_oficinas (of_codigo,of_dep,
    of_desc,desp_of_codigo,desp_of_dep,desp_of_desc,accion,usuario,hora) 
     values (NULL ,NULL ,' ' ,luego.of_codigo ,luego.of_dep ,luego.of_desc 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_c_oficinas delete on "informix".c_oficinas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_c_oficinas (of_codigo,of_dep,
    of_desc,desp_of_codigo,desp_of_dep,desp_of_desc,accion,usuario,hora) 
     values (antes.of_codigo ,antes.of_dep ,antes.of_desc ,NULL ,NULL 
    ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_c_tipo_docum update on "informix"
    .c_tipo_docum referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_c_tipo_docum (tipo_codigo,
    tipo_desc,desp_tipo_codigo,desp_tipo_desc,accion,usuario,hora)  values 
    (antes.tipo_codigo ,antes.tipo_desc ,luego.tipo_codigo ,luego.tipo_desc 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_c_tipo_docum insert on "informix"
    .c_tipo_docum referencing new as luego
    for each row
        (
        insert into "informix".aud_c_tipo_docum (tipo_codigo,
    tipo_desc,desp_tipo_codigo,desp_tipo_desc,accion,usuario,hora)  values 
    (NULL ,' ' ,luego.tipo_codigo ,luego.tipo_desc ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_c_tipo_docum delete on "informix"
    .c_tipo_docum referencing old as antes
    for each row
        (
        insert into "informix".aud_c_tipo_docum (tipo_codigo,
    tipo_desc,desp_tipo_codigo,desp_tipo_desc,accion,usuario,hora)  values 
    (antes.tipo_codigo ,antes.tipo_desc ,NULL ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_r_papel update on "informix".r_papel 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_r_papel (p_codigo,p_desc_ct,
    p_desc_lg,desp_p_codigo,desp_p_desc_ct,desp_p_desc_lg,accion,usuario,
    hora)  values (antes.p_codigo ,antes.p_desc_ct ,antes.p_desc_lg ,
    luego.p_codigo ,luego.p_desc_ct ,luego.p_desc_lg ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_r_papel insert on "informix".r_papel 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_r_papel (p_codigo,p_desc_ct,
    p_desc_lg,desp_p_codigo,desp_p_desc_ct,desp_p_desc_lg,accion,usuario,
    hora)  values (NULL ,'' ,'' ,luego.p_codigo ,luego.p_desc_ct ,luego.p_desc_lg 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_r_papel delete on "informix".r_papel 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_r_papel (p_codigo,p_desc_ct,
    p_desc_lg,desp_p_codigo,desp_p_desc_ct,desp_p_desc_lg,accion,usuario,
    hora)  values (antes.p_codigo ,antes.p_desc_ct ,antes.p_desc_lg ,
    NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_r_programas update on "informix"
    .r_programas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_r_programas (prog_codigo,prog_fuente,
    prog_desc,prog_sistema,desp_prog_codigo,desp_prog_fuente,desp_prog_desc,
    desp_prog_sistema,accion,usuario,hora)  values (antes.prog_codigo 
    ,antes.prog_fuente ,antes.prog_desc ,antes.prog_sistema ,luego.prog_codigo 
    ,luego.prog_fuente ,luego.prog_desc ,luego.prog_sistema ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_r_programas insert on "informix"
    .r_programas referencing new as luego
    for each row
        (
        insert into "informix".aud_r_programas (prog_codigo,prog_fuente,
    prog_desc,prog_sistema,desp_prog_codigo,desp_prog_fuente,desp_prog_desc,
    desp_prog_sistema,accion,usuario,hora)  values (NULL ,'' ,'' ,NULL 
    ,luego.prog_codigo ,luego.prog_fuente ,luego.prog_desc ,luego.prog_sistema 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_r_programas delete on "informix"
    .r_programas referencing old as antes
    for each row
        (
        insert into "informix".aud_r_programas (prog_codigo,prog_fuente,
    prog_desc,prog_sistema,desp_prog_codigo,desp_prog_fuente,desp_prog_desc,
    desp_prog_sistema,accion,usuario,hora)  values (antes.prog_codigo 
    ,antes.prog_fuente ,antes.prog_desc ,antes.prog_sistema ,NULL ,'' 
    ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_economato update on "informix".economato 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_economato (eco_catalogo,eco_mensual,
    eco_num,eco_control,eco_tipo,desp_eco_catalogo,desp_eco_mensual,desp_eco_num,
    desp_eco_control,desp_eco_tipo,accion,usuario,hora)  values (antes.eco_catalogo 
    ,antes.eco_mensual ,antes.eco_num ,antes.eco_control ,antes.eco_tipo 
    ,luego.eco_catalogo ,luego.eco_mensual ,luego.eco_num ,luego.eco_control 
    ,luego.eco_tipo ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_economato delete on "informix".economato 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_economato (eco_catalogo,eco_mensual,
    eco_num,eco_control,eco_tipo,desp_eco_catalogo,desp_eco_mensual,desp_eco_num,
    desp_eco_control,desp_eco_tipo,accion,usuario,hora)  values (antes.eco_catalogo 
    ,antes.eco_mensual ,antes.eco_num ,antes.eco_control ,antes.eco_tipo 
    ,NULL ,'' ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_economato insert on "informix".economato 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_economato (eco_catalogo,eco_mensual,
    eco_num,eco_control,eco_tipo,desp_eco_catalogo,desp_eco_mensual,desp_eco_num,
    desp_eco_control,desp_eco_tipo,accion,usuario,hora)  values (NULL 
    ,'' ,NULL ,'' ,'' ,luego.eco_catalogo ,luego.eco_mensual ,luego.eco_num 
    ,luego.eco_control ,luego.eco_tipo ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_r_requerimientos update on "informix"
    .r_requerimientos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_r_requerimientos (req_codigo,
    req_numdoc,req_solicita,req_destino,req_sistema,req_fecha,desp_req_codigo,
    desp_req_numdoc,desp_req_solicita,desp_req_destino,desp_req_sistema,
    desp_req_fecha,accion,usuario,hora)  values (antes.req_codigo ,antes.req_numdoc 
    ,antes.req_solicita ,antes.req_destino ,antes.req_sistema ,antes.req_fecha 
    ,luego.req_codigo ,luego.req_numdoc ,luego.req_solicita ,luego.req_destino 
    ,luego.req_sistema ,luego.req_fecha ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_r_requerimientos insert on "informix"
    .r_requerimientos referencing new as luego
    for each row
        (
        insert into "informix".aud_r_requerimientos (req_codigo,
    req_numdoc,req_solicita,req_destino,req_sistema,req_fecha,desp_req_codigo,
    desp_req_numdoc,desp_req_solicita,desp_req_destino,desp_req_sistema,
    desp_req_fecha,accion,usuario,hora)  values (NULL ,'' ,NULL ,NULL 
    ,NULL ,'' ,luego.req_codigo ,luego.req_numdoc ,luego.req_solicita 
    ,luego.req_destino ,luego.req_sistema ,luego.req_fecha ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_r_requerimientos delete on "informix"
    .r_requerimientos referencing old as antes
    for each row
        (
        insert into "informix".aud_r_requerimientos (req_codigo,
    req_numdoc,req_solicita,req_destino,req_sistema,req_fecha,desp_req_codigo,
    desp_req_numdoc,desp_req_solicita,desp_req_destino,desp_req_sistema,
    desp_req_fecha,accion,usuario,hora)  values (antes.req_codigo ,antes.req_numdoc 
    ,antes.req_solicita ,antes.req_destino ,antes.req_sistema ,antes.req_fecha 
    ,NULL ,'' ,NULL ,NULL ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_r_det_req update on "informix".r_det_req 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_r_det_requerimientos (dre_requerimiento,
    dre_correlativo,dre_numprog,dre_clapapel,dre_copias,dre_paginas,desp_dre_requerimiento,
    desp_dre_correlativo,desp_dre_numprog,desp_dre_clapapel,desp_dre_copias,
    desp_dre_paginas,accion,usuario,hora)  values (antes.dre_requerimiento 
    ,antes.dre_correlativo ,antes.dre_nomprog ,antes.dre_clapapel ,antes.dre_copias 
    ,antes.dre_paginas ,luego.dre_requerimiento ,luego.dre_correlativo 
    ,luego.dre_nomprog ,luego.dre_clapapel ,luego.dre_copias ,luego.dre_paginas 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_r_det_req insert on "informix".r_det_req 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_r_det_requerimientos (dre_requerimiento,
    dre_correlativo,dre_numprog,dre_clapapel,dre_copias,dre_paginas,desp_dre_requerimiento,
    desp_dre_correlativo,desp_dre_numprog,desp_dre_clapapel,desp_dre_copias,
    desp_dre_paginas,accion,usuario,hora)  values (NULL ,NULL ,NULL ,
    NULL ,NULL ,NULL ,luego.dre_requerimiento ,luego.dre_correlativo 
    ,luego.dre_nomprog ,luego.dre_clapapel ,luego.dre_copias ,luego.dre_paginas 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_r_det_req delete on "informix".r_det_req 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_r_det_requerimientos (dre_requerimiento,
    dre_correlativo,dre_numprog,dre_clapapel,dre_copias,dre_paginas,desp_dre_requerimiento,
    desp_dre_correlativo,desp_dre_numprog,desp_dre_clapapel,desp_dre_copias,
    desp_dre_paginas,accion,usuario,hora)  values (antes.dre_requerimiento 
    ,antes.dre_correlativo ,antes.dre_nomprog ,antes.dre_clapapel ,antes.dre_copias 
    ,antes.dre_paginas ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_vocales update on "informix".vocales 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vocales (voc_codigo,voc_desc_lg,
    voc_desc_md,voc_desc_ct,desp_voc_codigo,desp_voc_desc_lg,desp_voc_desc_md,
    desp_voc_desc_ct,accion,usuario,hora)  values (antes.voc_codigo ,
    antes.voc_desc_lg ,antes.voc_desc_md ,antes.voc_desc_ct ,luego.voc_codigo 
    ,luego.voc_desc_lg ,luego.voc_desc_md ,luego.voc_desc_ct ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vocales insert on "informix".vocales 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_vocales (voc_codigo,voc_desc_lg,
    voc_desc_md,voc_desc_ct,desp_voc_codigo,desp_voc_desc_lg,desp_voc_desc_md,
    desp_voc_desc_ct,accion,usuario,hora)  values (NULL ,' ' ,' ' ,' ' ,
    luego.voc_codigo ,luego.voc_desc_lg ,luego.voc_desc_md ,luego.voc_desc_ct 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vocales delete on "informix".vocales 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_vocales (voc_codigo,voc_desc_lg,
    voc_desc_md,voc_desc_ct,desp_voc_codigo,desp_voc_desc_lg,desp_voc_desc_md,
    desp_voc_desc_ct,accion,usuario,hora)  values (antes.voc_codigo ,
    antes.voc_desc_lg ,antes.voc_desc_md ,antes.voc_desc_ct ,NULL ,' '
     ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_usuapli update on "informix".usuapli 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_usuapli (usuarios,tabla,permisos,
    sistema,desp_usuarios,desp_tabla,desp_permisos,desp_sistema,accion,
    usuario,hora)  values (antes.usuario ,antes.tabla ,antes.permisos 
    ,antes.sistema ,luego.usuario ,luego.tabla ,luego.permisos ,luego.sistema 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_usuapli insert on "informix".usuapli 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_usuapli (usuarios,tabla,permisos,
    sistema,desp_usuarios,desp_tabla,desp_permisos,desp_sistema,accion,
    usuario,hora)  values (' ' ,' ' ,' ' ,' ' ,luego.usuario ,luego.tabla 
    ,luego.permisos ,luego.sistema ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_usuapli delete on "informix".usuapli 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_usuapli (usuarios,tabla,permisos,
    sistema,desp_usuarios,desp_tabla,desp_permisos,desp_sistema,accion,
    usuario,hora)  values (antes.usuario ,antes.tabla ,antes.permisos 
    ,antes.sistema ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_c_control update on "informix".c_control 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_c_control (c_codigo,c_nombre,
    desp_c_codigo,desp_c_nombre,accion,usuario,hora)  values (antes.c_codigo 
    ,antes.c_nombre ,luego.c_codigo ,luego.c_nombre ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_c_control insert on "informix".c_control 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_c_control (c_codigo,c_nombre,
    desp_c_codigo,desp_c_nombre,accion,usuario,hora)  values (' ' ,' ' 
    ,luego.c_codigo ,luego.c_nombre ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_c_control delete on "informix".c_control 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_c_control (c_codigo,c_nombre,
    desp_c_codigo,desp_c_nombre,accion,usuario,hora)  values (antes.c_codigo 
    ,antes.c_nombre ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_opera_menu update on "informix".opera_menu 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_opera_menu (om_codigo,om_descripcion,
    om_opcion,desp_om_codigo,desp_om_descripcion,desp_om_opcion,accion,
    usuario,hora)  values (antes.om_codigo ,antes.om_descripcion ,antes.om_opcion 
    ,luego.om_codigo ,luego.om_descripcion ,luego.om_opcion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_opera_menu insert on "informix".opera_menu 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_opera_menu (om_codigo,om_descripcion,
    om_opcion,desp_om_codigo,desp_om_descripcion,desp_om_opcion,accion,
    usuario,hora)  values (NULL ,' ' ,' ' ,luego.om_codigo ,luego.om_descripcion 
    ,luego.om_opcion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_opera_menu delete on "informix".opera_menu 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_opera_menu (om_codigo,om_descripcion,
    om_opcion,desp_om_codigo,desp_om_descripcion,desp_om_opcion,accion,
    usuario,hora)  values (antes.om_codigo ,antes.om_descripcion ,antes.om_opcion 
    ,NULL ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_usu_opera update on "informix".usu_opera 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_usu_opera (usu_catalogo,usu_codigo,
    desp_usu_catalogo,desp_usu_codigo,accion,usuario,hora)  values (antes.usu_catalogo 
    ,antes.usu_codigo ,luego.usu_catalogo ,luego.usu_codigo ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_usu_opera insert on "informix".usu_opera 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_usu_opera (usu_catalogo,usu_codigo,
    desp_usu_catalogo,desp_usu_codigo,accion,usuario,hora)  values (' '
     ,NULL ,luego.usu_catalogo ,luego.usu_codigo ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_usu_opera delete on "informix".usu_opera 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_usu_opera (usu_catalogo,usu_codigo,
    desp_usu_catalogo,desp_usu_codigo,accion,usuario,hora)  values (antes.usu_catalogo 
    ,antes.usu_codigo ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_co_mper update on "informix".co_mper 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_co_mper (per_catalogo,per_serie,
    per_grado,per_arma,per_nom1,per_nom2,per_ape1,per_ape2,per_ape3,per_ced_ord,
    per_ced_reg,per_fec_ext_ced,per_ext_ced_lugar,per_est_civil,per_direccion,
    per_zona,per_dir_lugar,per_telefono,per_sexo,per_fec_nac,per_nac_lugar,
    per_promocion,per_afil_ipm,per_sangre,per_antiguedad,per_bienal,per_plaza,
    per_desc_empleo,per_fec_nomb,per_ord_gral,per_punto_og,per_situacion,
    per_prima_prof,desp_per_catalogo,desp_per_serie,desp_per_grado,desp_per_arma,
    desp_per_nom1,desp_per_nom2,desp_per_ape1,desp_per_ape2,desp_per_ape3,
    desp_per_ced_ord,desp_per_ced_reg,desp_per_fec_ext_ced,desp_per_ext_ced_lugar,
    desp_per_est_civil,desp_per_direccion,desp_per_zona,desp_per_dir_lugar,
    desp_per_telefono,desp_per_sexo,desp_per_fec_nac,desp_per_nac_lugar,
    desp_per_promocion,desp_per_afil_ipm,desp_per_sangre,desp_per_antiguedad,
    desp_per_bienal,desp_per_plaza,desp_per_desc_empleo,desp_per_fec_nomb,
    desp_per_ord_gral,desp_per_punto_og,desp_per_situacion,desp_per_prima_prof,
    accion,usuario,hora)  values (antes.per_catalogo ,antes.per_serie 
    ,antes.per_grado ,antes.per_arma ,antes.per_nom1 ,antes.per_nom2 
    ,antes.per_ape1 ,antes.per_ape2 ,antes.per_ape3 ,antes.per_ced_ord 
    ,antes.per_ced_reg ,antes.per_fec_ext_ced ,antes.per_ext_ced_lugar 
    ,antes.per_est_civil ,antes.per_direccion ,antes.per_zona ,antes.per_dir_lugar 
    ,antes.per_telefono ,antes.per_sexo ,antes.per_fec_nac ,antes.per_nac_lugar 
    ,antes.per_promocion ,antes.per_afil_ipm ,antes.per_sangre ,antes.per_antiguedad 
    ,antes.per_bienal ,antes.per_plaza ,antes.per_desc_empleo ,antes.per_fec_nomb 
    ,antes.per_ord_gral ,antes.per_punto_og ,antes.per_situacion ,antes.per_prima_prof 
    ,luego.per_catalogo ,luego.per_serie ,luego.per_grado ,luego.per_arma 
    ,luego.per_nom1 ,luego.per_nom2 ,luego.per_ape1 ,luego.per_ape2 ,
    luego.per_ape3 ,luego.per_ced_ord ,luego.per_ced_reg ,luego.per_fec_ext_ced 
    ,luego.per_ext_ced_lugar ,luego.per_est_civil ,luego.per_direccion 
    ,luego.per_zona ,luego.per_dir_lugar ,luego.per_telefono ,luego.per_sexo 
    ,luego.per_fec_nac ,luego.per_nac_lugar ,luego.per_promocion ,luego.per_afil_ipm 
    ,luego.per_sangre ,luego.per_antiguedad ,luego.per_bienal ,luego.per_plaza 
    ,luego.per_desc_empleo ,luego.per_fec_nomb ,luego.per_ord_gral ,luego.per_punto_og 
    ,luego.per_situacion ,luego.per_prima_prof ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_co_mper insert on "informix".co_mper 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_co_mper (per_catalogo,per_serie,
    per_grado,per_arma,per_nom1,per_nom2,per_ape1,per_ape2,per_ape3,per_ced_ord,
    per_ced_reg,per_fec_ext_ced,per_ext_ced_lugar,per_est_civil,per_direccion,
    per_zona,per_dir_lugar,per_telefono,per_sexo,per_fec_nac,per_nac_lugar,
    per_promocion,per_afil_ipm,per_sangre,per_antiguedad,per_bienal,per_plaza,
    per_desc_empleo,per_fec_nomb,per_ord_gral,per_punto_og,per_situacion,
    per_prima_prof,desp_per_catalogo,desp_per_serie,desp_per_grado,desp_per_arma,
    desp_per_nom1,desp_per_nom2,desp_per_ape1,desp_per_ape2,desp_per_ape3,
    desp_per_ced_ord,desp_per_ced_reg,desp_per_fec_ext_ced,desp_per_ext_ced_lugar,
    desp_per_est_civil,desp_per_direccion,desp_per_zona,desp_per_dir_lugar,
    desp_per_telefono,desp_per_sexo,desp_per_fec_nac,desp_per_nac_lugar,
    desp_per_promocion,desp_per_afil_ipm,desp_per_sangre,desp_per_antiguedad,
    desp_per_bienal,desp_per_plaza,desp_per_desc_empleo,desp_per_fec_nomb,
    desp_per_ord_gral,desp_per_punto_og,desp_per_situacion,desp_per_prima_prof,
    accion,usuario,hora)  values (NULL ,' ' ,NULL ,NULL ,' ' ,' ' ,' ' ,' '
     ,' ' ,' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,NULL ,' ' ,NULL ,' ' ,' ' ,' ' ,NULL 
    ,' ' ,' ' ,NULL ,NULL ,NULL ,' ' ,' ' ,' ' ,NULL ,' ' ,NULL ,luego.per_catalogo 
    ,luego.per_serie ,luego.per_grado ,luego.per_arma ,luego.per_nom1 
    ,luego.per_nom2 ,luego.per_ape1 ,luego.per_ape2 ,luego.per_ape3 ,
    luego.per_ced_ord ,luego.per_ced_reg ,luego.per_fec_ext_ced ,luego.per_ext_ced_lugar 
    ,luego.per_est_civil ,luego.per_direccion ,luego.per_zona ,luego.per_dir_lugar 
    ,luego.per_telefono ,luego.per_sexo ,luego.per_fec_nac ,luego.per_nac_lugar 
    ,luego.per_promocion ,luego.per_afil_ipm ,luego.per_sangre ,luego.per_antiguedad 
    ,luego.per_bienal ,luego.per_plaza ,luego.per_desc_empleo ,luego.per_fec_nomb 
    ,luego.per_ord_gral ,luego.per_punto_og ,luego.per_situacion ,luego.per_prima_prof 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_co_mper delete on "informix".co_mper 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_co_mper (per_catalogo,per_serie,
    per_grado,per_arma,per_nom1,per_nom2,per_ape1,per_ape2,per_ape3,per_ced_ord,
    per_ced_reg,per_fec_ext_ced,per_ext_ced_lugar,per_est_civil,per_direccion,
    per_zona,per_dir_lugar,per_telefono,per_sexo,per_fec_nac,per_nac_lugar,
    per_promocion,per_afil_ipm,per_sangre,per_antiguedad,per_bienal,per_plaza,
    per_desc_empleo,per_fec_nomb,per_ord_gral,per_punto_og,per_situacion,
    per_prima_prof,desp_per_catalogo,desp_per_serie,desp_per_grado,desp_per_arma,
    desp_per_nom1,desp_per_nom2,desp_per_ape1,desp_per_ape2,desp_per_ape3,
    desp_per_ced_ord,desp_per_ced_reg,desp_per_fec_ext_ced,desp_per_ext_ced_lugar,
    desp_per_est_civil,desp_per_direccion,desp_per_zona,desp_per_dir_lugar,
    desp_per_telefono,desp_per_sexo,desp_per_fec_nac,desp_per_nac_lugar,
    desp_per_promocion,desp_per_afil_ipm,desp_per_sangre,desp_per_antiguedad,
    desp_per_bienal,desp_per_plaza,desp_per_desc_empleo,desp_per_fec_nomb,
    desp_per_ord_gral,desp_per_punto_og,desp_per_situacion,desp_per_prima_prof,
    accion,usuario,hora)  values (antes.per_catalogo ,antes.per_serie 
    ,antes.per_grado ,antes.per_arma ,antes.per_nom1 ,antes.per_nom2 
    ,antes.per_ape1 ,antes.per_ape2 ,antes.per_ape3 ,antes.per_ced_ord 
    ,antes.per_ced_reg ,antes.per_fec_ext_ced ,antes.per_ext_ced_lugar 
    ,antes.per_est_civil ,antes.per_direccion ,antes.per_zona ,antes.per_dir_lugar 
    ,antes.per_telefono ,antes.per_sexo ,antes.per_fec_nac ,antes.per_nac_lugar 
    ,antes.per_promocion ,antes.per_afil_ipm ,antes.per_sangre ,antes.per_antiguedad 
    ,antes.per_bienal ,antes.per_plaza ,antes.per_desc_empleo ,antes.per_fec_nomb 
    ,antes.per_ord_gral ,antes.per_punto_og ,antes.per_situacion ,antes.per_prima_prof 
    ,NULL ,' ' ,NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL ,' ' ,' ' ,' ' ,
    ' ' ,NULL ,' ' ,NULL ,' ' ,' ' ,' ' ,NULL ,' ' ,' ' ,NULL ,NULL ,NULL ,' '
     ,' ' ,' ' ,NULL ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_diagnosticos update on "informix"
    .diagnosticos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_diagnosticos (d_codigo,d_descrip,
    desp_d_codigo,desp_d_descrip,accion,usuario,hora)  values (antes.d_codigo 
    ,antes.d_descrip ,luego.d_codigo ,luego.d_descrip ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_diagnosticos insert on "informix"
    .diagnosticos referencing new as luego
    for each row
        (
        insert into "informix".aud_diagnosticos (d_codigo,d_descrip,
    desp_d_codigo,desp_d_descrip,accion,usuario,hora)  values (NULL ,
    ' ' ,luego.d_codigo ,luego.d_descrip ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_diagnosticos delete on "informix"
    .diagnosticos referencing old as antes
    for each row
        (
        insert into "informix".aud_diagnosticos (d_codigo,d_descrip,
    desp_d_codigo,desp_d_descrip,accion,usuario,hora)  values (antes.d_codigo 
    ,antes.d_descrip ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_evaluaciones_ant update on "informix"
    .evaluaciones_ant referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_evaluaciones_ant (e_catalogo,
    e_evaluacion,e_edad,e_peso,e_talla,e_imc,e_diagnost,e_ref_dd,e_fecha,
    e_asist_dd,desp_e_catalogo,desp_e_evaluacion,desp_e_edad,desp_e_peso,
    desp_e_talla,desp_e_imc,desp_e_diagnost,desp_e_ref_dd,desp_e_fecha,
    desp_e_asist_dd,accion,usuario,hora)  values (antes.e_catalogo ,antes.e_evaluacion 
    ,antes.e_edad ,antes.e_peso ,antes.e_talla ,antes.e_imc ,antes.e_diagnost 
    ,antes.e_ref_dd ,antes.e_fecha ,antes.e_asist_dd ,luego.e_catalogo 
    ,luego.e_evaluacion ,luego.e_edad ,luego.e_peso ,luego.e_talla ,luego.e_imc 
    ,luego.e_diagnost ,luego.e_ref_dd ,luego.e_fecha ,luego.e_asist_dd 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_evaluaciones_ant insert on "informix"
    .evaluaciones_ant referencing new as luego
    for each row
        (
        insert into "informix".aud_evaluaciones_ant (e_catalogo,
    e_evaluacion,e_edad,e_peso,e_talla,e_imc,e_diagnost,e_ref_dd,e_fecha,
    e_asist_dd,desp_e_catalogo,desp_e_evaluacion,desp_e_edad,desp_e_peso,
    desp_e_talla,desp_e_imc,desp_e_diagnost,desp_e_ref_dd,desp_e_fecha,
    desp_e_asist_dd,accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL 
    ,' ' ,' ' ,NULL ,' ' ,' ' ,' ' ,luego.e_catalogo ,luego.e_evaluacion ,
    luego.e_edad ,luego.e_peso ,luego.e_talla ,luego.e_imc ,luego.e_diagnost 
    ,luego.e_ref_dd ,luego.e_fecha ,luego.e_asist_dd ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_evaluaciones_ant delete on "informix"
    .evaluaciones_ant referencing old as antes
    for each row
        (
        insert into "informix".aud_evaluaciones_ant (e_catalogo,
    e_evaluacion,e_edad,e_peso,e_talla,e_imc,e_diagnost,e_ref_dd,e_fecha,
    e_asist_dd,desp_e_catalogo,desp_e_evaluacion,desp_e_edad,desp_e_peso,
    desp_e_talla,desp_e_imc,desp_e_diagnost,desp_e_ref_dd,desp_e_fecha,
    desp_e_asist_dd,accion,usuario,hora)  values (antes.e_catalogo ,antes.e_evaluacion 
    ,antes.e_edad ,antes.e_peso ,antes.e_talla ,antes.e_imc ,antes.e_diagnost 
    ,antes.e_ref_dd ,antes.e_fecha ,antes.e_asist_dd ,NULL ,NULL ,NULL 
    ,NULL ,' ' ,' ' ,NULL ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_resofi update on "informix".resofi 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_resofi (res_nomina,res_partida,
    res_fecha,res_unidad,res_subprog,res_sueldo,res_bienal,res_respon,
    res_emerg,res_repres,res_profes,res_constru,res_tot_nomi,res_ipm,
    res_montepio,res_fianza,res_devengado,res_descuentos,res_liquido,
    res_bon_662000,res_pri_prof_mil,res_depen,desp_res_nomina,desp_res_partida,
    desp_res_fecha,desp_res_unidad,desp_res_subprog,desp_res_sueldo,desp_res_bienal,
    desp_res_respon,desp_res_emerg,desp_res_repres,desp_res_profes,desp_res_constru,
    desp_res_tot_nomi,desp_res_ipm,desp_res_montepio,desp_res_fianza,
    desp_res_devengado,desp_res_descuentos,desp_res_liquido,desp_res_bon_662000,
    desp_res_pri_prof_mil,desp_res_depen,accion,usuario,hora)  values 
    (antes.res_nomina ,antes.res_partida ,antes.res_fecha ,antes.res_unidad 
    ,antes.res_subprog ,antes.res_sueldo ,antes.res_bienal ,antes.res_respon 
    ,antes.res_emerg ,antes.res_repres ,antes.res_profes ,antes.res_constru 
    ,antes.res_tot_nomi ,antes.res_ipm ,antes.res_montepio ,antes.res_fianza 
    ,antes.res_devengado ,antes.res_descuentos ,antes.res_liquido ,antes.res_bon_662000 
    ,antes.res_pri_prof_mil ,antes.res_depen ,luego.res_nomina ,luego.res_partida 
    ,luego.res_fecha ,luego.res_unidad ,luego.res_subprog ,luego.res_sueldo 
    ,luego.res_bienal ,luego.res_respon ,luego.res_emerg ,luego.res_repres 
    ,luego.res_profes ,luego.res_constru ,luego.res_tot_nomi ,luego.res_ipm 
    ,luego.res_montepio ,luego.res_fianza ,luego.res_devengado ,luego.res_descuentos 
    ,luego.res_liquido ,luego.res_bon_662000 ,luego.res_pri_prof_mil 
    ,luego.res_depen ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_resofi insert on "informix".resofi 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_resofi (res_nomina,res_partida,
    res_fecha,res_unidad,res_subprog,res_sueldo,res_bienal,res_respon,
    res_emerg,res_repres,res_profes,res_constru,res_tot_nomi,res_ipm,
    res_montepio,res_fianza,res_devengado,res_descuentos,res_liquido,
    res_bon_662000,res_pri_prof_mil,res_depen,desp_res_nomina,desp_res_partida,
    desp_res_fecha,desp_res_unidad,desp_res_subprog,desp_res_sueldo,desp_res_bienal,
    desp_res_respon,desp_res_emerg,desp_res_repres,desp_res_profes,desp_res_constru,
    desp_res_tot_nomi,desp_res_ipm,desp_res_montepio,desp_res_fianza,
    desp_res_devengado,desp_res_descuentos,desp_res_liquido,desp_res_bon_662000,
    desp_res_pri_prof_mil,desp_res_depen,accion,usuario,hora)  values 
    (' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,' ' ,' ' ,NULL ,luego.res_nomina ,luego.res_partida ,luego.res_fecha 
    ,luego.res_unidad ,luego.res_subprog ,luego.res_sueldo ,luego.res_bienal 
    ,luego.res_respon ,luego.res_emerg ,luego.res_repres ,luego.res_profes 
    ,luego.res_constru ,luego.res_tot_nomi ,luego.res_ipm ,luego.res_montepio 
    ,luego.res_fianza ,luego.res_devengado ,luego.res_descuentos ,luego.res_liquido 
    ,luego.res_bon_662000 ,luego.res_pri_prof_mil ,luego.res_depen ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_resofi delete on "informix".resofi 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_resofi (res_nomina,res_partida,
    res_fecha,res_unidad,res_subprog,res_sueldo,res_bienal,res_respon,
    res_emerg,res_repres,res_profes,res_constru,res_tot_nomi,res_ipm,
    res_montepio,res_fianza,res_devengado,res_descuentos,res_liquido,
    res_bon_662000,res_pri_prof_mil,res_depen,desp_res_nomina,desp_res_partida,
    desp_res_fecha,desp_res_unidad,desp_res_subprog,desp_res_sueldo,desp_res_bienal,
    desp_res_respon,desp_res_emerg,desp_res_repres,desp_res_profes,desp_res_constru,
    desp_res_tot_nomi,desp_res_ipm,desp_res_montepio,desp_res_fianza,
    desp_res_devengado,desp_res_descuentos,desp_res_liquido,desp_res_bon_662000,
    desp_res_pri_prof_mil,desp_res_depen,accion,usuario,hora)  values 
    (antes.res_nomina ,antes.res_partida ,antes.res_fecha ,antes.res_unidad 
    ,antes.res_subprog ,antes.res_sueldo ,antes.res_bienal ,antes.res_respon 
    ,antes.res_emerg ,antes.res_repres ,antes.res_profes ,antes.res_constru 
    ,antes.res_tot_nomi ,antes.res_ipm ,antes.res_montepio ,antes.res_fianza 
    ,antes.res_devengado ,antes.res_descuentos ,antes.res_liquido ,antes.res_bon_662000 
    ,antes.res_pri_prof_mil ,antes.res_depen ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_descripciones delete on "informix"
    .descripciones referencing old as antes
    for each row
        (
        insert into "informix".aud_descripciones (cod_dependencia,
    usu_upd_menu,servidor,mdibmp,desp_cod_dependencia,desp_usu_upd_menu,
    desp_servidor,desp_mdibmp,accion,usuario,hora)  values (antes.cod_dependencia 
    ,antes.usu_upd_menu ,antes.servidor ,antes.mdibmp ,NULL ,'' ,'' ,'' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_descripciones insert on "informix"
    .descripciones referencing new as luego
    for each row
        (
        insert into "informix".aud_descripciones (cod_dependencia,
    usu_upd_menu,servidor,mdibmp,desp_cod_dependencia,desp_usu_upd_menu,
    desp_servidor,desp_mdibmp,accion,usuario,hora)  values (NULL ,'' ,
    '' ,'' ,luego.cod_dependencia ,luego.usu_upd_menu ,luego.servidor ,
    luego.mdibmp ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_descripciones update on "informix"
    .descripciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_descripciones (cod_dependencia,
    usu_upd_menu,servidor,mdibmp,desp_cod_dependencia,desp_usu_upd_menu,
    desp_servidor,desp_mdibmp,accion,usuario,hora)  values (antes.cod_dependencia 
    ,antes.usu_upd_menu ,antes.servidor ,antes.mdibmp ,luego.cod_dependencia 
    ,luego.usu_upd_menu ,luego.servidor ,luego.mdibmp ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_f_hfag update on "informix".f_hfag 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_f_hfag (fag_catalogo,fag_codigo,
    fag_monto,desp_fag_catalogo,desp_fag_codigo,desp_fag_monto,accion,
    usuario,hora)  values (antes.fag_catalogo ,antes.fag_codigo ,antes.fag_monto 
    ,luego.fag_catalogo ,luego.fag_codigo ,luego.fag_monto ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_f_hfag insert on "informix".f_hfag 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_f_hfag (fag_catalogo,fag_codigo,
    fag_monto,desp_fag_catalogo,desp_fag_codigo,desp_fag_monto,accion,
    usuario,hora)  values (NULL ,NULL ,' ' ,luego.fag_catalogo ,luego.fag_codigo 
    ,luego.fag_monto ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_f_hfag delete on "informix".f_hfag 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_f_hfag (fag_catalogo,fag_codigo,
    fag_monto,desp_fag_catalogo,desp_fag_codigo,desp_fag_monto,accion,
    usuario,hora)  values (antes.fag_catalogo ,antes.fag_codigo ,antes.fag_monto 
    ,NULL ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_hfasig update on "informix".hfasig 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_hfasig (hfa_catalogo,hfa_fecha,
    hfa_prog,hfa_grupo,hfa_clase,hfa_grado,hfa_arma,hfa_sexo,hfa_plaza,
    hfa_desc_empleo,hfa_ceom,hfa_jerarquia,hfa_hrs_trab,hfa_ord_gral,
    hfa_bienal,hfa_depen,hfa_sueldo,hfa_bon_bienal,hfa_prima_resp,hfa_prima_esp,
    hfa_gastos_rep,hfa_bon_emerg,hfa_dividendos,hfa_aguinaldo,hfa_bono_vac,
    hfa_bono_14,hfa_bono_trans,hfa_prima_ing,hfa_prima_prof,hfa_ipm,hfa_montepio,
    hfa_fianza,hfa_hos_mil,hfa_club_ofi,hfa_club_esp,hfa_liquido,hfa_corrida,
    hfa_unidad,hfa_complemento,hfa_cuenta,hfa_prima_ext,hfa_bono_ali,
    desp_hfa_catalogo,desp_hfa_fecha,desp_hfa_prog,desp_hfa_grupo,desp_hfa_clase,
    desp_hfa_grado,desp_hfa_arma,desp_hfa_sexo,desp_hfa_plaza,desp_hfa_desc_empleo,
    desp_hfa_ceom,desp_hfa_jerarquia,desp_hfa_hrs_trab,desp_hfa_ord_gral,
    desp_hfa_bienal,desp_hfa_depen,desp_hfa_sueldo,desp_hfa_bon_bienal,
    desp_hfa_prima_resp,desp_hfa_prima_esp,desp_hfa_gastos_rep,desp_hfa_bon_emerg,
    desp_hfa_dividendos,desp_hfa_aguinaldo,desp_hfa_bono_vac,desp_hfa_bono_14,
    desp_hfa_bono_trans,desp_hfa_prima_ing,desp_hfa_prima_prof,desp_hfa_ipm,
    desp_hfa_montepio,desp_hfa_fianza,desp_hfa_hos_mil,desp_hfa_club_ofi,
    desp_hfa_club_esp,desp_hfa_liquido,desp_hfa_corrida,desp_hfa_unidad,
    desp_hfa_complemento,desp_hfa_cuenta,desp_hfa_prima_ext,desp_hfa_bono_ali,
    accion,usuario,hora)  values (antes.hfa_catalogo ,antes.hfa_fecha 
    ,antes.hfa_prog ,antes.hfa_grupo ,antes.hfa_clase ,antes.hfa_grado 
    ,antes.hfa_arma ,antes.hfa_sexo ,antes.hfa_plaza ,antes.hfa_desc_empleo 
    ,antes.hfa_ceom ,antes.hfa_jerarquia ,antes.hfa_hrs_trab ,antes.hfa_ord_gral 
    ,antes.hfa_bienal ,antes.hfa_depen ,antes.hfa_sueldo ,antes.hfa_bon_bienal 
    ,antes.hfa_prima_resp ,antes.hfa_prima_esp ,antes.hfa_gastos_rep 
    ,antes.hfa_bon_emerg ,antes.hfa_dividendos ,antes.hfa_aguinaldo ,
    antes.hfa_bono_vac ,antes.hfa_bono_14 ,antes.hfa_bono_trans ,antes.hfa_prima_ing 
    ,antes.hfa_prima_prof ,antes.hfa_ipm ,antes.hfa_montepio ,antes.hfa_fianza 
    ,antes.hfa_hos_mil ,antes.hfa_club_ofi ,antes.hfa_club_esp ,antes.hfa_liquido 
    ,antes.hfa_corrida ,antes.hfa_unidad ,antes.hfa_complemento ,antes.hfa_cuenta 
    ,antes.hfa_prima_ext ,antes.hfa_bono_ali ,luego.hfa_catalogo ,luego.hfa_fecha 
    ,luego.hfa_prog ,luego.hfa_grupo ,luego.hfa_clase ,luego.hfa_grado 
    ,luego.hfa_arma ,luego.hfa_sexo ,luego.hfa_plaza ,luego.hfa_desc_empleo 
    ,luego.hfa_ceom ,luego.hfa_jerarquia ,luego.hfa_hrs_trab ,luego.hfa_ord_gral 
    ,luego.hfa_bienal ,luego.hfa_depen ,luego.hfa_sueldo ,luego.hfa_bon_bienal 
    ,luego.hfa_prima_resp ,luego.hfa_prima_esp ,luego.hfa_gastos_rep 
    ,luego.hfa_bon_emerg ,luego.hfa_dividendos ,luego.hfa_aguinaldo ,
    luego.hfa_bono_vac ,luego.hfa_bono_14 ,luego.hfa_bono_trans ,luego.hfa_prima_ing 
    ,luego.hfa_prima_prof ,luego.hfa_ipm ,luego.hfa_montepio ,luego.hfa_fianza 
    ,luego.hfa_hos_mil ,luego.hfa_club_ofi ,luego.hfa_club_esp ,luego.hfa_liquido 
    ,luego.hfa_corrida ,luego.hfa_unidad ,luego.hfa_complemento ,luego.hfa_cuenta 
    ,luego.hfa_prima_ext ,luego.hfa_bono_ali ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_hfasig insert on "informix".hfasig 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_hfasig (hfa_catalogo,hfa_fecha,
    hfa_prog,hfa_grupo,hfa_clase,hfa_grado,hfa_arma,hfa_sexo,hfa_plaza,
    hfa_desc_empleo,hfa_ceom,hfa_jerarquia,hfa_hrs_trab,hfa_ord_gral,
    hfa_bienal,hfa_depen,hfa_sueldo,hfa_bon_bienal,hfa_prima_resp,hfa_prima_esp,
    hfa_gastos_rep,hfa_bon_emerg,hfa_dividendos,hfa_aguinaldo,hfa_bono_vac,
    hfa_bono_14,hfa_bono_trans,hfa_prima_ing,hfa_prima_prof,hfa_ipm,hfa_montepio,
    hfa_fianza,hfa_hos_mil,hfa_club_ofi,hfa_club_esp,hfa_liquido,hfa_corrida,
    hfa_unidad,hfa_complemento,hfa_cuenta,hfa_prima_ext,hfa_bono_ali,
    desp_hfa_catalogo,desp_hfa_fecha,desp_hfa_prog,desp_hfa_grupo,desp_hfa_clase,
    desp_hfa_grado,desp_hfa_arma,desp_hfa_sexo,desp_hfa_plaza,desp_hfa_desc_empleo,
    desp_hfa_ceom,desp_hfa_jerarquia,desp_hfa_hrs_trab,desp_hfa_ord_gral,
    desp_hfa_bienal,desp_hfa_depen,desp_hfa_sueldo,desp_hfa_bon_bienal,
    desp_hfa_prima_resp,desp_hfa_prima_esp,desp_hfa_gastos_rep,desp_hfa_bon_emerg,
    desp_hfa_dividendos,desp_hfa_aguinaldo,desp_hfa_bono_vac,desp_hfa_bono_14,
    desp_hfa_bono_trans,desp_hfa_prima_ing,desp_hfa_prima_prof,desp_hfa_ipm,
    desp_hfa_montepio,desp_hfa_fianza,desp_hfa_hos_mil,desp_hfa_club_ofi,
    desp_hfa_club_esp,desp_hfa_liquido,desp_hfa_corrida,desp_hfa_unidad,
    desp_hfa_complemento,desp_hfa_cuenta,desp_hfa_prima_ext,desp_hfa_bono_ali,
    accion,usuario,hora)  values (NULL ,' ' ,' ' ,NULL ,' ' ,NULL ,NULL 
    ,' ' ,NULL ,' ' ,' ' ,' ' ,NULL ,' ' ,NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL 
    ,' ' ,' ' ,' ' ,' ' ,luego.hfa_catalogo ,luego.hfa_fecha ,luego.hfa_prog 
    ,luego.hfa_grupo ,luego.hfa_clase ,luego.hfa_grado ,luego.hfa_arma 
    ,luego.hfa_sexo ,luego.hfa_plaza ,luego.hfa_desc_empleo ,luego.hfa_ceom 
    ,luego.hfa_jerarquia ,luego.hfa_hrs_trab ,luego.hfa_ord_gral ,luego.hfa_bienal 
    ,luego.hfa_depen ,luego.hfa_sueldo ,luego.hfa_bon_bienal ,luego.hfa_prima_resp 
    ,luego.hfa_prima_esp ,luego.hfa_gastos_rep ,luego.hfa_bon_emerg ,
    luego.hfa_dividendos ,luego.hfa_aguinaldo ,luego.hfa_bono_vac ,luego.hfa_bono_14 
    ,luego.hfa_bono_trans ,luego.hfa_prima_ing ,luego.hfa_prima_prof 
    ,luego.hfa_ipm ,luego.hfa_montepio ,luego.hfa_fianza ,luego.hfa_hos_mil 
    ,luego.hfa_club_ofi ,luego.hfa_club_esp ,luego.hfa_liquido ,luego.hfa_corrida 
    ,luego.hfa_unidad ,luego.hfa_complemento ,luego.hfa_cuenta ,luego.hfa_prima_ext 
    ,luego.hfa_bono_ali ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_hfasig delete on "informix".hfasig 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_hfasig (hfa_catalogo,hfa_fecha,
    hfa_prog,hfa_grupo,hfa_clase,hfa_grado,hfa_arma,hfa_sexo,hfa_plaza,
    hfa_desc_empleo,hfa_ceom,hfa_jerarquia,hfa_hrs_trab,hfa_ord_gral,
    hfa_bienal,hfa_depen,hfa_sueldo,hfa_bon_bienal,hfa_prima_resp,hfa_prima_esp,
    hfa_gastos_rep,hfa_bon_emerg,hfa_dividendos,hfa_aguinaldo,hfa_bono_vac,
    hfa_bono_14,hfa_bono_trans,hfa_prima_ing,hfa_prima_prof,hfa_ipm,hfa_montepio,
    hfa_fianza,hfa_hos_mil,hfa_club_ofi,hfa_club_esp,hfa_liquido,hfa_corrida,
    hfa_unidad,hfa_complemento,hfa_cuenta,hfa_prima_ext,hfa_bono_ali,
    desp_hfa_catalogo,desp_hfa_fecha,desp_hfa_prog,desp_hfa_grupo,desp_hfa_clase,
    desp_hfa_grado,desp_hfa_arma,desp_hfa_sexo,desp_hfa_plaza,desp_hfa_desc_empleo,
    desp_hfa_ceom,desp_hfa_jerarquia,desp_hfa_hrs_trab,desp_hfa_ord_gral,
    desp_hfa_bienal,desp_hfa_depen,desp_hfa_sueldo,desp_hfa_bon_bienal,
    desp_hfa_prima_resp,desp_hfa_prima_esp,desp_hfa_gastos_rep,desp_hfa_bon_emerg,
    desp_hfa_dividendos,desp_hfa_aguinaldo,desp_hfa_bono_vac,desp_hfa_bono_14,
    desp_hfa_bono_trans,desp_hfa_prima_ing,desp_hfa_prima_prof,desp_hfa_ipm,
    desp_hfa_montepio,desp_hfa_fianza,desp_hfa_hos_mil,desp_hfa_club_ofi,
    desp_hfa_club_esp,desp_hfa_liquido,desp_hfa_corrida,desp_hfa_unidad,
    desp_hfa_complemento,desp_hfa_cuenta,desp_hfa_prima_ext,desp_hfa_bono_ali,
    accion,usuario,hora)  values (antes.hfa_catalogo ,antes.hfa_fecha 
    ,antes.hfa_prog ,antes.hfa_grupo ,antes.hfa_clase ,antes.hfa_grado 
    ,antes.hfa_arma ,antes.hfa_sexo ,antes.hfa_plaza ,antes.hfa_desc_empleo 
    ,antes.hfa_ceom ,antes.hfa_jerarquia ,antes.hfa_hrs_trab ,antes.hfa_ord_gral 
    ,antes.hfa_bienal ,antes.hfa_depen ,antes.hfa_sueldo ,antes.hfa_bon_bienal 
    ,antes.hfa_prima_resp ,antes.hfa_prima_esp ,antes.hfa_gastos_rep 
    ,antes.hfa_bon_emerg ,antes.hfa_dividendos ,antes.hfa_aguinaldo ,
    antes.hfa_bono_vac ,antes.hfa_bono_14 ,antes.hfa_bono_trans ,antes.hfa_prima_ing 
    ,antes.hfa_prima_prof ,antes.hfa_ipm ,antes.hfa_montepio ,antes.hfa_fianza 
    ,antes.hfa_hos_mil ,antes.hfa_club_ofi ,antes.hfa_club_esp ,antes.hfa_liquido 
    ,antes.hfa_corrida ,antes.hfa_unidad ,antes.hfa_complemento ,antes.hfa_cuenta 
    ,antes.hfa_prima_ext ,antes.hfa_bono_ali ,NULL ,' ' ,' ' ,NULL ,' ' 
    ,NULL ,NULL ,' ' ,NULL ,' ' ,' ' ,' ' ,NULL ,' ' ,NULL ,NULL ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' '
     ,' ' ,' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_hfdes update on "informix".hfdes 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_hfdes (hfd_catalogo,hfd_fecha,
    hfd_codigo,hfd_nu_reg,hfd_monto,hfd_mensual,hfd_saldo,hfd_corrida,
    hfd_varios,desp_hfd_catalogo,desp_hfd_fecha,desp_hfd_codigo,desp_hfd_nu_reg,
    desp_hfd_monto,desp_hfd_mensual,desp_hfd_saldo,desp_hfd_corrida,desp_hfd_varios,
    accion,usuario,hora)  values (antes.hfd_catalogo ,antes.hfd_fecha 
    ,antes.hfd_codigo ,antes.hfd_nu_reg ,antes.hfd_monto ,antes.hfd_mensual 
    ,antes.hfd_saldo ,antes.hfd_corrida ,antes.hfd_varios ,luego.hfd_catalogo 
    ,luego.hfd_fecha ,luego.hfd_codigo ,luego.hfd_nu_reg ,luego.hfd_monto 
    ,luego.hfd_mensual ,luego.hfd_saldo ,luego.hfd_corrida ,luego.hfd_varios 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_hfdes insert on "informix".hfdes 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_hfdes (hfd_catalogo,hfd_fecha,
    hfd_codigo,hfd_nu_reg,hfd_monto,hfd_mensual,hfd_saldo,hfd_corrida,
    hfd_varios,desp_hfd_catalogo,desp_hfd_fecha,desp_hfd_codigo,desp_hfd_nu_reg,
    desp_hfd_monto,desp_hfd_mensual,desp_hfd_saldo,desp_hfd_corrida,desp_hfd_varios,
    accion,usuario,hora)  values (NULL ,' ' ,NULL ,NULL ,' ' ,' ' ,' ' ,' '
     ,' ' ,luego.hfd_catalogo ,luego.hfd_fecha ,luego.hfd_codigo ,luego.hfd_nu_reg 
    ,luego.hfd_monto ,luego.hfd_mensual ,luego.hfd_saldo ,luego.hfd_corrida 
    ,luego.hfd_varios ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_hfdes delete on "informix".hfdes 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_hfdes (hfd_catalogo,hfd_fecha,
    hfd_codigo,hfd_nu_reg,hfd_monto,hfd_mensual,hfd_saldo,hfd_corrida,
    hfd_varios,desp_hfd_catalogo,desp_hfd_fecha,desp_hfd_codigo,desp_hfd_nu_reg,
    desp_hfd_monto,desp_hfd_mensual,desp_hfd_saldo,desp_hfd_corrida,desp_hfd_varios,
    accion,usuario,hora)  values (antes.hfd_catalogo ,antes.hfd_fecha 
    ,antes.hfd_codigo ,antes.hfd_nu_reg ,antes.hfd_monto ,antes.hfd_mensual 
    ,antes.hfd_saldo ,antes.hfd_corrida ,antes.hfd_varios ,NULL ,' ' ,
    NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_icombus update on "informix".icombus 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_icombus (com_codigo,com_desc,
    desp_com_codigo,desp_com_desc,accion,usuario,hora)  values (antes.com_codigo 
    ,antes.com_desc ,luego.com_codigo ,luego.com_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_icombus insert on "informix".icombus 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_icombus (com_codigo,com_desc,
    desp_com_codigo,desp_com_desc,accion,usuario,hora)  values (NULL 
    ,' ' ,luego.com_codigo ,luego.com_desc ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_icombus delete on "informix".icombus 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_icombus (com_codigo,com_desc,
    desp_com_codigo,desp_com_desc,accion,usuario,hora)  values (antes.com_codigo 
    ,antes.com_desc ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_icorep update on "informix".icorep 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_icorep (rep_numero,rep_depen,
    rep_fecha,rep_fecha_del,rep_fecha_al,desp_rep_numero,desp_rep_depen,
    desp_rep_fecha,desp_rep_fecha_del,desp_rep_fecha_al,accion,usuario,
    hora)  values (antes.rep_numero ,antes.rep_depen ,antes.rep_fecha 
    ,antes.rep_fecha_del ,antes.rep_fecha_al ,luego.rep_numero ,luego.rep_depen 
    ,luego.rep_fecha ,luego.rep_fecha_del ,luego.rep_fecha_al ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_icorep insert on "informix".icorep 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_icorep (rep_numero,rep_depen,
    rep_fecha,rep_fecha_del,rep_fecha_al,desp_rep_numero,desp_rep_depen,
    desp_rep_fecha,desp_rep_fecha_del,desp_rep_fecha_al,accion,usuario,
    hora)  values (NULL ,NULL ,' ' ,' ' ,' ' ,luego.rep_numero ,luego.rep_depen 
    ,luego.rep_fecha ,luego.rep_fecha_del ,luego.rep_fecha_al ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_icorep delete on "informix".icorep 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_icorep (rep_numero,rep_depen,
    rep_fecha,rep_fecha_del,rep_fecha_al,desp_rep_numero,desp_rep_depen,
    desp_rep_fecha,desp_rep_fecha_del,desp_rep_fecha_al,accion,usuario,
    hora)  values (antes.rep_numero ,antes.rep_depen ,antes.rep_fecha 
    ,antes.rep_fecha_del ,antes.rep_fecha_al ,NULL ,NULL ,' ' ,' ' ,' ' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_icobsrep update on "informix".icobsrep 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_icobsrep (obs_numero,obs_linea,
    obs_texto,desp_obs_numero,desp_obs_linea,desp_obs_texto,accion,usuario,
    hora)  values (antes.obs_numero ,antes.obs_linea ,antes.obs_texto 
    ,luego.obs_numero ,luego.obs_linea ,luego.obs_texto ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_icobsrep insert on "informix".icobsrep 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_icobsrep (obs_numero,obs_linea,
    obs_texto,desp_obs_numero,desp_obs_linea,desp_obs_texto,accion,usuario,
    hora)  values (NULL ,NULL ,' ' ,luego.obs_numero ,luego.obs_linea 
    ,luego.obs_texto ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_icobsrep delete on "informix".icobsrep 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_icobsrep (obs_numero,obs_linea,
    obs_texto,desp_obs_numero,desp_obs_linea,desp_obs_texto,accion,usuario,
    hora)  values (antes.obs_numero ,antes.obs_linea ,antes.obs_texto 
    ,NULL ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_icodetrep update on "informix".icodetrep 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_icodetrep (dr_numero,dr_comb,
    dr_sasede,dr_sabm,dr_isede,dr_ibm,dr_esede,dr_emb,dr_evap,dr_doc,
    dr_ssede,dr_sbm,desp_dr_numero,desp_dr_comb,desp_dr_sasede,desp_dr_sabm,
    desp_dr_isede,desp_dr_ibm,desp_dr_esede,desp_dr_emb,desp_dr_evap,
    desp_dr_doc,desp_dr_ssede,desp_dr_sbm,accion,usuario,hora)  values 
    (antes.dr_numero ,antes.dr_comb ,antes.dr_sasede ,antes.dr_sabm ,
    antes.dr_isede ,antes.dr_ibm ,antes.dr_esede ,antes.dr_emb ,antes.dr_evap 
    ,antes.dr_doc ,antes.dr_ssede ,antes.dr_sbm ,luego.dr_numero ,luego.dr_comb 
    ,luego.dr_sasede ,luego.dr_sabm ,luego.dr_isede ,luego.dr_ibm ,luego.dr_esede 
    ,luego.dr_emb ,luego.dr_evap ,luego.dr_doc ,luego.dr_ssede ,luego.dr_sbm 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_icodetrep insert on "informix".icodetrep 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_icodetrep (dr_numero,dr_comb,
    dr_sasede,dr_sabm,dr_isede,dr_ibm,dr_esede,dr_emb,dr_evap,dr_doc,
    dr_ssede,dr_sbm,desp_dr_numero,desp_dr_comb,desp_dr_sasede,desp_dr_sabm,
    desp_dr_isede,desp_dr_ibm,desp_dr_esede,desp_dr_emb,desp_dr_evap,
    desp_dr_doc,desp_dr_ssede,desp_dr_sbm,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,' ' ,NULL ,
    NULL ,luego.dr_numero ,luego.dr_comb ,luego.dr_sasede ,luego.dr_sabm 
    ,luego.dr_isede ,luego.dr_ibm ,luego.dr_esede ,luego.dr_emb ,luego.dr_evap 
    ,luego.dr_doc ,luego.dr_ssede ,luego.dr_sbm ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_icodetrep delete on "informix".icodetrep 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_icodetrep (dr_numero,dr_comb,
    dr_sasede,dr_sabm,dr_isede,dr_ibm,dr_esede,dr_emb,dr_evap,dr_doc,
    dr_ssede,dr_sbm,desp_dr_numero,desp_dr_comb,desp_dr_sasede,desp_dr_sabm,
    desp_dr_isede,desp_dr_ibm,desp_dr_esede,desp_dr_emb,desp_dr_evap,
    desp_dr_doc,desp_dr_ssede,desp_dr_sbm,accion,usuario,hora)  values 
    (antes.dr_numero ,antes.dr_comb ,antes.dr_sasede ,antes.dr_sabm ,
    antes.dr_isede ,antes.dr_ibm ,antes.dr_esede ,antes.dr_emb ,antes.dr_evap 
    ,antes.dr_doc ,antes.dr_ssede ,antes.dr_sbm ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,' ' ,NULL ,NULL ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_chn update on "informix".chn referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_chn (cat,codigo,be,chn,desp_cat,
    desp_codigo,desp_be,desp_chn,accion,usuario,hora)  values (antes.cat 
    ,antes.codigo ,antes.be ,antes.chn ,luego.cat ,luego.codigo ,luego.be 
    ,luego.chn ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_chn insert on "informix".chn referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_chn (cat,codigo,be,chn,desp_cat,
    desp_codigo,desp_be,desp_chn,accion,usuario,hora)  values (NULL ,
    NULL ,' ' ,' ' ,luego.cat ,luego.codigo ,luego.be ,luego.chn ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_chn delete on "informix".chn referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_chn (cat,codigo,be,chn,desp_cat,
    desp_codigo,desp_be,desp_chn,accion,usuario,hora)  values (antes.cat 
    ,antes.codigo ,antes.be ,antes.chn ,NULL ,NULL ,' ' ,' ' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_fceom update on "informix".fceom 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fceom (fc_catalogo,fc_plaza,
    fc_ceom,desp_fc_catalogo,desp_fc_plaza,desp_fc_ceom,accion,usuario,
    hora)  values (antes.fc_catalogo ,antes.fc_plaza ,antes.fc_ceom ,
    luego.fc_catalogo ,luego.fc_plaza ,luego.fc_ceom ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_fceom insert on "informix".fceom 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_fceom (fc_catalogo,fc_plaza,
    fc_ceom,desp_fc_catalogo,desp_fc_plaza,desp_fc_ceom,accion,usuario,
    hora)  values (NULL ,NULL ,' ' ,luego.fc_catalogo ,luego.fc_plaza 
    ,luego.fc_ceom ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fceom delete on "informix".fceom 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_fceom (fc_catalogo,fc_plaza,
    fc_ceom,desp_fc_catalogo,desp_fc_plaza,desp_fc_ceom,accion,usuario,
    hora)  values (antes.fc_catalogo ,antes.fc_plaza ,antes.fc_ceom ,
    NULL ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_asigna update on "informix".asigna 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_asigna (a_catalogo,a_sueldo,
    a_bienal,a_prima_resp,a_prima_esp,a_gastos_rep,a_bon_emerg,a_dividendos,
    a_aguinaldo,a_bono_vac,a_bono14,a_bono_trans,a_prima_ing,a_prima_prof,
    a_complemento,a_prima_ext,a_bono_ali,a_docencia,a_kaibil,a_salto,
    a_662000,a_clase3,a_ppm,a_riesgo,desp_a_catalogo,desp_a_sueldo,desp_a_bienal,
    desp_a_prima_resp,desp_a_prima_esp,desp_a_gastos_rep,desp_a_bon_emerg,
    desp_a_dividendos,desp_a_aguinaldo,desp_a_bono_vac,desp_a_bono14,
    desp_a_bono_trans,desp_a_prima_ing,desp_a_prima_prof,desp_a_complemento,
    desp_a_prima_ext,desp_a_bono_ali,desp_a_docencia,desp_a_kaibil,desp_a_salto,
    desp_a_662000,desp_a_clase3,desp_a_ppm,desp_a_riesgo,accion,usuario,
    hora)  values (antes.a_catalogo ,antes.a_sueldo ,antes.a_bienal ,
    antes.a_prima_resp ,antes.a_prima_esp ,antes.a_gastos_rep ,antes.a_bon_emerg 
    ,antes.a_dividendos ,antes.a_aguinaldo ,antes.a_bono_vac ,antes.a_bono14 
    ,antes.a_bono_trans ,antes.a_prima_ing ,antes.a_prima_prof ,antes.a_complemento 
    ,antes.a_prima_ext ,antes.a_bono_ali ,antes.a_docencia ,antes.a_kaibil 
    ,antes.a_salto ,antes.a_662000 ,antes.a_clase3 ,antes.a_ppm ,antes.a_riesgo 
    ,luego.a_catalogo ,luego.a_sueldo ,luego.a_bienal ,luego.a_prima_resp 
    ,luego.a_prima_esp ,luego.a_gastos_rep ,luego.a_bon_emerg ,luego.a_dividendos 
    ,luego.a_aguinaldo ,luego.a_bono_vac ,luego.a_bono14 ,luego.a_bono_trans 
    ,luego.a_prima_ing ,luego.a_prima_prof ,luego.a_complemento ,luego.a_prima_ext 
    ,luego.a_bono_ali ,luego.a_docencia ,luego.a_kaibil ,luego.a_salto 
    ,luego.a_662000 ,luego.a_clase3 ,luego.a_ppm ,luego.a_riesgo ,'U' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_asigna insert on "informix".asigna 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_asigna (a_catalogo,a_sueldo,
    a_bienal,a_prima_resp,a_prima_esp,a_gastos_rep,a_bon_emerg,a_dividendos,
    a_aguinaldo,a_bono_vac,a_bono14,a_bono_trans,a_prima_ing,a_prima_prof,
    a_complemento,a_prima_ext,a_bono_ali,a_docencia,a_kaibil,a_salto,
    a_662000,a_clase3,a_ppm,a_riesgo,desp_a_catalogo,desp_a_sueldo,desp_a_bienal,
    desp_a_prima_resp,desp_a_prima_esp,desp_a_gastos_rep,desp_a_bon_emerg,
    desp_a_dividendos,desp_a_aguinaldo,desp_a_bono_vac,desp_a_bono14,
    desp_a_bono_trans,desp_a_prima_ing,desp_a_prima_prof,desp_a_complemento,
    desp_a_prima_ext,desp_a_bono_ali,desp_a_docencia,desp_a_kaibil,desp_a_salto,
    desp_a_662000,desp_a_clase3,desp_a_ppm,desp_a_riesgo,accion,usuario,
    hora)  values (NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.a_catalogo 
    ,luego.a_sueldo ,luego.a_bienal ,luego.a_prima_resp ,luego.a_prima_esp 
    ,luego.a_gastos_rep ,luego.a_bon_emerg ,luego.a_dividendos ,luego.a_aguinaldo 
    ,luego.a_bono_vac ,luego.a_bono14 ,luego.a_bono_trans ,luego.a_prima_ing 
    ,luego.a_prima_prof ,luego.a_complemento ,luego.a_prima_ext ,luego.a_bono_ali 
    ,luego.a_docencia ,luego.a_kaibil ,luego.a_salto ,luego.a_662000 
    ,luego.a_clase3 ,luego.a_ppm ,luego.a_riesgo ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_asigna delete on "informix".asigna 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_asigna (a_catalogo,a_sueldo,
    a_bienal,a_prima_resp,a_prima_esp,a_gastos_rep,a_bon_emerg,a_dividendos,
    a_aguinaldo,a_bono_vac,a_bono14,a_bono_trans,a_prima_ing,a_prima_prof,
    a_complemento,a_prima_ext,a_bono_ali,a_docencia,a_kaibil,a_salto,
    a_662000,a_clase3,a_ppm,a_riesgo,desp_a_catalogo,desp_a_sueldo,desp_a_bienal,
    desp_a_prima_resp,desp_a_prima_esp,desp_a_gastos_rep,desp_a_bon_emerg,
    desp_a_dividendos,desp_a_aguinaldo,desp_a_bono_vac,desp_a_bono14,
    desp_a_bono_trans,desp_a_prima_ing,desp_a_prima_prof,desp_a_complemento,
    desp_a_prima_ext,desp_a_bono_ali,desp_a_docencia,desp_a_kaibil,desp_a_salto,
    desp_a_662000,desp_a_clase3,desp_a_ppm,desp_a_riesgo,accion,usuario,
    hora)  values (antes.a_catalogo ,antes.a_sueldo ,antes.a_bienal ,
    antes.a_prima_resp ,antes.a_prima_esp ,antes.a_gastos_rep ,antes.a_bon_emerg 
    ,antes.a_dividendos ,antes.a_aguinaldo ,antes.a_bono_vac ,antes.a_bono14 
    ,antes.a_bono_trans ,antes.a_prima_ing ,antes.a_prima_prof ,antes.a_complemento 
    ,antes.a_prima_ext ,antes.a_bono_ali ,antes.a_docencia ,antes.a_kaibil 
    ,antes.a_salto ,antes.a_662000 ,antes.a_clase3 ,antes.a_ppm ,antes.a_riesgo 
    ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' '
     ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_ftempo update on "informix".ftempo 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ftempo (f_plaza,fceom,desp_f_plaza,
    desp_fceom,accion,usuario,hora)  values (antes.fplaza ,antes.fceom 
    ,luego.fplaza ,luego.fceom ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_ftempo insert on "informix".ftempo 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ftempo (f_plaza,fceom,desp_f_plaza,
    desp_fceom,accion,usuario,hora)  values (NULL ,'' ,luego.fplaza ,luego.fceom 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ftempo delete on "informix".ftempo 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ftempo (f_plaza,fceom,desp_f_plaza,
    desp_fceom,accion,usuario,hora)  values (antes.fplaza ,antes.fceom 
    ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_f_mulfar update on "informix".f_mulfar 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_f_mulfar (mf_catalogo,mf_mensual,
    mf_fact,mf_control,desp_mf_catalogo,desp_mf_mensual,desp_mf_fact,
    desp_mf_control,accion,usuario,hora)  values (antes.mf_catalogo ,
    antes.mf_mensual ,antes.mf_fact ,antes.mf_control ,luego.mf_catalogo 
    ,luego.mf_mensual ,luego.mf_fact ,luego.mf_control ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_f_mulfar insert on "informix".f_mulfar 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_f_mulfar (mf_catalogo,mf_mensual,
    mf_fact,mf_control,desp_mf_catalogo,desp_mf_mensual,desp_mf_fact,
    desp_mf_control,accion,usuario,hora)  values (NULL ,' ' ,NULL ,' ' 
    ,luego.mf_catalogo ,luego.mf_mensual ,luego.mf_fact ,luego.mf_control 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_f_mulfar delete on "informix".f_mulfar 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_f_mulfar (mf_catalogo,mf_mensual,
    mf_fact,mf_control,desp_mf_catalogo,desp_mf_mensual,desp_mf_fact,
    desp_mf_control,accion,usuario,hora)  values (antes.mf_catalogo ,
    antes.mf_mensual ,antes.mf_fact ,antes.mf_control ,NULL ,' ' ,NULL 
    ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_pacceso update on "informix".pacceso 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_pacceso (acccatalogo,accpwd,
    accpermiso,desp_acccatalogo,desp_accpwd,desp_accpermiso,accion,usuario,
    hora)  values (antes.acccatalogo ,antes.accpwd ,antes.accpermiso 
    ,luego.acccatalogo ,luego.accpwd ,luego.accpermiso ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_pacceso insert on "informix".pacceso 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_pacceso (acccatalogo,accpwd,
    accpermiso,desp_acccatalogo,desp_accpwd,desp_accpermiso,accion,usuario,
    hora)  values (NULL ,' ' ,NULL ,luego.acccatalogo ,luego.accpwd ,luego.accpermiso 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_pacceso delete on "informix".pacceso 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_pacceso (acccatalogo,accpwd,
    accpermiso,desp_acccatalogo,desp_accpwd,desp_accpermiso,accion,usuario,
    hora)  values (antes.acccatalogo ,antes.accpwd ,antes.accpermiso 
    ,NULL ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_pdocumento update on "informix".pdocumento 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_pdocumento (doccorrelativo,
    docsolicita,doctipo,docestado,docgenero,docfecgenerado,docasunto,
    docmotivo,docdirigido,docconducto,docfecinicio,docfecfinaliza,docautoriza,
    docvobo,docnegociado,docnum,docreferencia,desp_doccorrelativo,desp_docsolicita,
    desp_doctipo,desp_docestado,desp_docgenero,desp_docfecgenerado,desp_docasunto,
    desp_docmotivo,desp_docdirigido,desp_docconducto,desp_docfecinicio,
    desp_docfecfinaliza,desp_docautoriza,desp_docvobo,desp_docnegociado,
    desp_docnum,desp_docreferencia,accion,usuario,hora)  values (antes.doccorrelativo 
    ,antes.docsolicita ,antes.doctipo ,antes.docestado ,antes.docgenero 
    ,antes.docfecgenerado ,antes.docasunto ,antes.docmotivo ,antes.docdirigido 
    ,antes.docconducto ,antes.docfecinicio ,antes.docfecfinaliza ,antes.docautoriza 
    ,antes.docvobo ,antes.docnegociado ,antes.docnum ,antes.docreferencia 
    ,luego.doccorrelativo ,luego.docsolicita ,luego.doctipo ,luego.docestado 
    ,luego.docgenero ,luego.docfecgenerado ,luego.docasunto ,luego.docmotivo 
    ,luego.docdirigido ,luego.docconducto ,luego.docfecinicio ,luego.docfecfinaliza 
    ,luego.docautoriza ,luego.docvobo ,luego.docnegociado ,luego.docnum 
    ,luego.docreferencia ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_pdocumento insert on "informix".pdocumento 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_pdocumento (doccorrelativo,
    docsolicita,doctipo,docestado,docgenero,docfecgenerado,docasunto,
    docmotivo,docdirigido,docconducto,docfecinicio,docfecfinaliza,docautoriza,
    docvobo,docnegociado,docnum,docreferencia,desp_doccorrelativo,desp_docsolicita,
    desp_doctipo,desp_docestado,desp_docgenero,desp_docfecgenerado,desp_docasunto,
    desp_docmotivo,desp_docdirigido,desp_docconducto,desp_docfecinicio,
    desp_docfecfinaliza,desp_docautoriza,desp_docvobo,desp_docnegociado,
    desp_docnum,desp_docreferencia,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,NULL ,NULL ,' ' ,' ' ,' ' ,NULL ,NULL ,' ' ,' ' ,NULL ,NULL 
    ,NULL ,NULL ,' ' ,luego.doccorrelativo ,luego.docsolicita ,luego.doctipo 
    ,luego.docestado ,luego.docgenero ,luego.docfecgenerado ,luego.docasunto 
    ,luego.docmotivo ,luego.docdirigido ,luego.docconducto ,luego.docfecinicio 
    ,luego.docfecfinaliza ,luego.docautoriza ,luego.docvobo ,luego.docnegociado 
    ,luego.docnum ,luego.docreferencia ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_pdocumento delete on "informix".pdocumento 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_pdocumento (doccorrelativo,
    docsolicita,doctipo,docestado,docgenero,docfecgenerado,docasunto,
    docmotivo,docdirigido,docconducto,docfecinicio,docfecfinaliza,docautoriza,
    docvobo,docnegociado,docnum,docreferencia,desp_doccorrelativo,desp_docsolicita,
    desp_doctipo,desp_docestado,desp_docgenero,desp_docfecgenerado,desp_docasunto,
    desp_docmotivo,desp_docdirigido,desp_docconducto,desp_docfecinicio,
    desp_docfecfinaliza,desp_docautoriza,desp_docvobo,desp_docnegociado,
    desp_docnum,desp_docreferencia,accion,usuario,hora)  values (antes.doccorrelativo 
    ,antes.docsolicita ,antes.doctipo ,antes.docestado ,antes.docgenero 
    ,antes.docfecgenerado ,antes.docasunto ,antes.docmotivo ,antes.docdirigido 
    ,antes.docconducto ,antes.docfecinicio ,antes.docfecfinaliza ,antes.docautoriza 
    ,antes.docvobo ,antes.docnegociado ,antes.docnum ,antes.docreferencia 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,' ' ,' ' ,' ' ,NULL ,NULL ,' ' ,' ' ,NULL 
    ,NULL ,NULL ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_pestado update on "informix".pestado 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_pestado (estcodigo,estdesc,
    desp_estcodigo,desp_estdesc,accion,usuario,hora)  values (antes.estcodigo 
    ,antes.estdesc ,luego.estcodigo ,luego.estdesc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_pestado insert on "informix".pestado 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_pestado (estcodigo,estdesc,
    desp_estcodigo,desp_estdesc,accion,usuario,hora)  values (NULL ,' '
     ,luego.estcodigo ,luego.estdesc ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_pestado delete on "informix".pestado 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_pestado (estcodigo,estdesc,
    desp_estcodigo,desp_estdesc,accion,usuario,hora)  values (antes.estcodigo 
    ,antes.estdesc ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_pnegociado update on "informix".pnegociado 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_pnegociado (negcodigo,negdesc,
    desp_negcodigo,desp_negdesc,accion,usuario,hora)  values (antes.negcodigo 
    ,antes.negdesc ,luego.negcodigo ,luego.negdesc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_pnegociado insert on "informix".pnegociado 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_pnegociado (negcodigo,negdesc,
    desp_negcodigo,desp_negdesc,accion,usuario,hora)  values (NULL ,' '
     ,luego.negcodigo ,luego.negdesc ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_pnegociado delete on "informix".pnegociado 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_pnegociado (negcodigo,negdesc,
    desp_negcodigo,desp_negdesc,accion,usuario,hora)  values (antes.negcodigo 
    ,antes.negdesc ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_ptipo update on "informix".ptipo 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ptipo (tipcodigo,tipdesc,desp_tipcodigo,
    desp_tipdesc,accion,usuario,hora)  values (antes.tipcodigo ,antes.tipdesc 
    ,luego.tipcodigo ,luego.tipdesc ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_ptipo insert on "informix".ptipo 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ptipo (tipcodigo,tipdesc,desp_tipcodigo,
    desp_tipdesc,accion,usuario,hora)  values (NULL ,' ' ,luego.tipcodigo 
    ,luego.tipdesc ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ptipo delete on "informix".ptipo 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ptipo (tipcodigo,tipdesc,desp_tipcodigo,
    desp_tipdesc,accion,usuario,hora)  values (antes.tipcodigo ,antes.tipdesc 
    ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ptiempos update on "informix".ptiempos 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ptiempos (tiempodoc,tiempoano,
    tiempomes,tiempo1,tiempo2,tiempo3,tiempo4,tiempo5,desp_tiempodoc,
    desp_tiempoano,desp_tiempomes,desp_tiempo1,desp_tiempo2,desp_tiempo3,
    desp_tiempo4,desp_tiempo5,accion,usuario,hora)  values (antes.tiempodoc 
    ,antes.tiempoano ,antes.tiempomes ,antes.tiempo1 ,antes.tiempo2 ,
    antes.tiempo3 ,antes.tiempo4 ,antes.tiempo5 ,luego.tiempodoc ,luego.tiempoano 
    ,luego.tiempomes ,luego.tiempo1 ,luego.tiempo2 ,luego.tiempo3 ,luego.tiempo4 
    ,luego.tiempo5 ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ptiempos insert on "informix".ptiempos 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ptiempos (tiempodoc,tiempoano,
    tiempomes,tiempo1,tiempo2,tiempo3,tiempo4,tiempo5,desp_tiempodoc,
    desp_tiempoano,desp_tiempomes,desp_tiempo1,desp_tiempo2,desp_tiempo3,
    desp_tiempo4,desp_tiempo5,accion,usuario,hora)  values (NULL ,' ' 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.tiempodoc ,luego.tiempoano ,luego.tiempomes 
    ,luego.tiempo1 ,luego.tiempo2 ,luego.tiempo3 ,luego.tiempo4 ,luego.tiempo5 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ptiempos delete on "informix".ptiempos 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ptiempos (tiempodoc,tiempoano,
    tiempomes,tiempo1,tiempo2,tiempo3,tiempo4,tiempo5,desp_tiempodoc,
    desp_tiempoano,desp_tiempomes,desp_tiempo1,desp_tiempo2,desp_tiempo3,
    desp_tiempo4,desp_tiempo5,accion,usuario,hora)  values (antes.tiempodoc 
    ,antes.tiempoano ,antes.tiempomes ,antes.tiempo1 ,antes.tiempo2 ,
    antes.tiempo3 ,antes.tiempo4 ,antes.tiempo5 ,NULL ,' ' ,' ' ,' ' ,' '
     ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_tconec update on "informix".tconec 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tconec (dia,tiempo,usuarios,
    dependencia,seccion,menu,fecha,desp_dia,desp_tiempo,desp_usuarios,
    desp_dependencia,desp_seccion,desp_menu,desp_fecha,accion,usuario,
    hora)  values (antes.dia ,antes.tiempo ,antes.usuario ,antes.dependencia 
    ,antes.seccion ,antes.menu ,antes.fecha ,luego.dia ,luego.tiempo 
    ,luego.usuario ,luego.dependencia ,luego.seccion ,luego.menu ,luego.fecha 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tconec insert on "informix".tconec 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_tconec (dia,tiempo,usuarios,
    dependencia,seccion,menu,fecha,desp_dia,desp_tiempo,desp_usuarios,
    desp_dependencia,desp_seccion,desp_menu,desp_fecha,accion,usuario,
    hora)  values (' ' ,' ' ,' ' ,' ' ,' ' ,NULL ,' ' ,luego.dia ,luego.tiempo 
    ,luego.usuario ,luego.dependencia ,luego.seccion ,luego.menu ,luego.fecha 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_tconec delete on "informix".tconec 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_tconec (dia,tiempo,usuarios,
    dependencia,seccion,menu,fecha,desp_dia,desp_tiempo,desp_usuarios,
    desp_dependencia,desp_seccion,desp_menu,desp_fecha,accion,usuario,
    hora)  values (antes.dia ,antes.tiempo ,antes.usuario ,antes.dependencia 
    ,antes.seccion ,antes.menu ,antes.fecha ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL 
    ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fincas update on "informix".fincas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fincas (fin_numero,fin_nombre,
    fin_ubicacion,desp_fin_numero,desp_fin_descripcion,desp_fin_ubicacion,
    accion,usuario,hora)  values (antes.fin_numero ,antes.fin_nombre 
    ,antes.fin_ubicacion ,luego.fin_numero ,luego.fin_nombre ,luego.fin_ubicacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fincas insert on "informix".fincas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_fincas (fin_numero,fin_nombre,
    fin_ubicacion,desp_fin_numero,desp_fin_descripcion,desp_fin_ubicacion,
    accion,usuario,hora)  values (NULL ,' ' ,' ' ,luego.fin_numero ,luego.fin_nombre 
    ,luego.fin_ubicacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fincas delete on "informix".fincas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_fincas (fin_numero,fin_nombre,
    fin_ubicacion,desp_fin_numero,desp_fin_descripcion,desp_fin_ubicacion,
    accion,usuario,hora)  values (antes.fin_numero ,antes.fin_nombre 
    ,antes.fin_ubicacion ,NULL ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_asig_cat delete on "informix".asig_cat 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_asig_cat (asc_tipo,asc_catalogo,
    desp_asc_tipo,desp_asc_catalogo,accion,usuario,hora)  values (antes.asc_tipo 
    ,antes.asc_catalogo ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_asig_cat insert on "informix".asig_cat 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_asig_cat (asc_tipo,asc_catalogo,
    desp_asc_tipo,desp_asc_catalogo,accion,usuario,hora)  values ('' ,
    NULL ,luego.asc_tipo ,luego.asc_catalogo ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_asig_cat update on "informix".asig_cat 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_asig_cat (asc_tipo,asc_catalogo,
    desp_asc_tipo,desp_asc_catalogo,accion,usuario,hora)  values (antes.asc_tipo 
    ,antes.asc_catalogo ,luego.asc_tipo ,luego.asc_catalogo ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_c_corr_seg update on "informix".c_corr_seg 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_c_corr_seg (seg_usuario,seg_passwd,
    seg_dep,seg_oficina,desp_seg_usuario,desp_seg_passwd,desp_seg_dep,
    desp_seg_oficina,accion,usuario,hora)  values (antes.seg_usuario 
    ,antes.seg_passwd ,antes.seg_dep ,antes.seg_oficina ,luego.seg_usuario 
    ,luego.seg_passwd ,luego.seg_dep ,luego.seg_oficina ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_c_corr_seg insert on "informix".c_corr_seg 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_c_corr_seg (seg_usuario,seg_passwd,
    seg_dep,seg_oficina,desp_seg_usuario,desp_seg_passwd,desp_seg_dep,
    desp_seg_oficina,accion,usuario,hora)  values (NULL ,' ' ,NULL ,NULL 
    ,luego.seg_usuario ,luego.seg_passwd ,luego.seg_dep ,luego.seg_oficina 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_c_corr_seg delete on "informix".c_corr_seg 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_c_corr_seg (seg_usuario,seg_passwd,
    seg_dep,seg_oficina,desp_seg_usuario,desp_seg_passwd,desp_seg_dep,
    desp_seg_oficina,accion,usuario,hora)  values (antes.seg_usuario 
    ,antes.seg_passwd ,antes.seg_dep ,antes.seg_oficina ,NULL ,' ' ,NULL 
    ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_c_documento insert on "informix"
    .c_documento referencing new as luego
    for each row
        (
        insert into "informix".aud_c_documento (doc_codigo,doc_depend,
    doc_tipo,doc_nombre,doc_prioridad,doc_asunto,doc_fec_realizado,doc_fec_in,
    doc_num_hojas,doc_destino,doc_procedencia,doc_status,doc_interesado,
    doc_clasificacion,doc_prefijo,doc_proposito,doc_recibe,doc_int_ext,
    doc_solucion,doc_referencia,doc_of_actual,doc_ult_tras,desp_doc_codigo,
    desp_doc_depend,desp_doc_tipo,desp_doc_nombre,desp_doc_prioridad,
    desp_doc_asunto,desp_doc_fec_realizado,desp_doc_fec_in,desp_doc_num_hojas,
    desp_doc_destino,desp_doc_procedencia,desp_doc_status,desp_doc_interesado,
    desp_doc_clasificacion,desp_doc_prefijo,desp_doc_proposito,desp_doc_recibe,
    desp_doc_int_ext,desp_doc_solucion,desp_doc_referencia,desp_doc_of_actual,
    desp_doc_ult_tras,accion,usuario,hora)  values (NULL ,NULL ,NULL 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL ,NULL ,NULL ,' ' ,' ' ,NULL ,NULL ,NULL ,
    NULL ,' ' ,' ' ,' ' ,NULL ,' ' ,luego.doc_codigo ,luego.doc_depend ,luego.doc_tipo 
    ,luego.doc_nombre ,luego.doc_prioridad ,luego.doc_asunto ,luego.doc_fec_realizado 
    ,luego.doc_fec_in ,luego.doc_num_hojas ,luego.doc_destino ,luego.doc_procedencia 
    ,luego.doc_status ,luego.doc_interesado ,luego.doc_clasificacion 
    ,luego.doc_prefijo ,luego.doc_proposito ,luego.doc_recibe ,luego.doc_int_ext 
    ,luego.doc_solucion ,luego.doc_referencia ,luego.doc_of_actual ,luego.doc_ult_tras 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_c_documento update on "informix"
    .c_documento referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_c_documento (doc_codigo,doc_depend,
    doc_tipo,doc_nombre,doc_prioridad,doc_asunto,doc_fec_realizado,doc_fec_in,
    doc_num_hojas,doc_destino,doc_procedencia,doc_status,doc_interesado,
    doc_clasificacion,doc_prefijo,doc_proposito,doc_recibe,doc_int_ext,
    doc_solucion,doc_referencia,doc_of_actual,doc_ult_tras,desp_doc_codigo,
    desp_doc_depend,desp_doc_tipo,desp_doc_nombre,desp_doc_prioridad,
    desp_doc_asunto,desp_doc_fec_realizado,desp_doc_fec_in,desp_doc_num_hojas,
    desp_doc_destino,desp_doc_procedencia,desp_doc_status,desp_doc_interesado,
    desp_doc_clasificacion,desp_doc_prefijo,desp_doc_proposito,desp_doc_recibe,
    desp_doc_int_ext,desp_doc_solucion,desp_doc_referencia,desp_doc_of_actual,
    desp_doc_ult_tras,accion,usuario,hora)  values (antes.doc_codigo 
    ,antes.doc_depend ,antes.doc_tipo ,antes.doc_nombre ,antes.doc_prioridad 
    ,antes.doc_asunto ,antes.doc_fec_realizado ,antes.doc_fec_in ,antes.doc_num_hojas 
    ,antes.doc_destino ,antes.doc_procedencia ,antes.doc_status ,antes.doc_interesado 
    ,antes.doc_clasificacion ,antes.doc_prefijo ,antes.doc_proposito 
    ,antes.doc_recibe ,antes.doc_int_ext ,antes.doc_solucion ,antes.doc_referencia 
    ,antes.doc_of_actual ,antes.doc_ult_tras ,luego.doc_codigo ,luego.doc_depend 
    ,luego.doc_tipo ,luego.doc_nombre ,luego.doc_prioridad ,luego.doc_asunto 
    ,luego.doc_fec_realizado ,luego.doc_fec_in ,luego.doc_num_hojas ,
    luego.doc_destino ,luego.doc_procedencia ,luego.doc_status ,luego.doc_interesado 
    ,luego.doc_clasificacion ,luego.doc_prefijo ,luego.doc_proposito 
    ,luego.doc_recibe ,luego.doc_int_ext ,luego.doc_solucion ,luego.doc_referencia 
    ,luego.doc_of_actual ,luego.doc_ult_tras ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_c_documento delete on "informix"
    .c_documento referencing old as antes
    for each row
        (
        insert into "informix".aud_c_documento (doc_codigo,doc_depend,
    doc_tipo,doc_nombre,doc_prioridad,doc_asunto,doc_fec_realizado,doc_fec_in,
    doc_num_hojas,doc_destino,doc_procedencia,doc_status,doc_interesado,
    doc_clasificacion,doc_prefijo,doc_proposito,doc_recibe,doc_int_ext,
    doc_solucion,doc_referencia,doc_of_actual,doc_ult_tras,desp_doc_codigo,
    desp_doc_depend,desp_doc_tipo,desp_doc_nombre,desp_doc_prioridad,
    desp_doc_asunto,desp_doc_fec_realizado,desp_doc_fec_in,desp_doc_num_hojas,
    desp_doc_destino,desp_doc_procedencia,desp_doc_status,desp_doc_interesado,
    desp_doc_clasificacion,desp_doc_prefijo,desp_doc_proposito,desp_doc_recibe,
    desp_doc_int_ext,desp_doc_solucion,desp_doc_referencia,desp_doc_of_actual,
    desp_doc_ult_tras,accion,usuario,hora)  values (antes.doc_codigo 
    ,antes.doc_depend ,antes.doc_tipo ,antes.doc_nombre ,antes.doc_prioridad 
    ,antes.doc_asunto ,antes.doc_fec_realizado ,antes.doc_fec_in ,antes.doc_num_hojas 
    ,antes.doc_destino ,antes.doc_procedencia ,antes.doc_status ,antes.doc_interesado 
    ,antes.doc_clasificacion ,antes.doc_prefijo ,antes.doc_proposito 
    ,antes.doc_recibe ,antes.doc_int_ext ,antes.doc_solucion ,antes.doc_referencia 
    ,antes.doc_of_actual ,antes.doc_ult_tras ,NULL ,NULL ,NULL ,' ' ,' '
     ,' ' ,' ' ,' ' ,NULL ,NULL ,NULL ,' ' ,' ' ,NULL ,NULL ,NULL ,NULL ,' '
     ,' ' ,' ' ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_c_ubicacion_docum update on "informix"
    .c_ubicacion_docum referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_c_ubicacion_docum (ub_correlativo,
    ub_cod_doc,ub_cod_depend,ub_fec_in,ub_recibe,ub_entrega,ub_recibe_ok,
    ub_observaciones,ub_oficina,ub_of_dep,ub_doc_tipo_remite,ub_doc_remite,
    ub_int_ext,ub_of_remite,ub_of_dep_remite,desp_ub_correlativo,desp_ub_cod_doc,
    desp_ub_cod_depend,desp_ub_fec_in,desp_ub_recibe,desp_ub_entrega,
    desp_ub_recibe_ok,desp_ub_observaciones,desp_ub_oficina,desp_ub_of_dep,
    desp_ub_doc_tipo_remite,desp_ub_doc_remite,desp_ub_int_ext,desp_ub_of_remite,
    desp_ub_of_dep_remite,accion,usuario,hora)  values (antes.ub_correlativo 
    ,antes.ub_cod_doc ,antes.ub_cod_depend ,antes.ub_fec_in ,antes.ub_recibe 
    ,antes.ub_entrega ,antes.ub_recibe_ok ,antes.ub_observaciones ,antes.ub_oficina 
    ,antes.ub_of_dep ,antes.ub_doc_tipo_remite ,antes.ub_doc_remite ,
    antes.ub_int_ext ,antes.ub_of_remite ,antes.ub_of_dep_remite ,luego.ub_correlativo 
    ,luego.ub_cod_doc ,luego.ub_cod_depend ,luego.ub_fec_in ,luego.ub_recibe 
    ,luego.ub_entrega ,luego.ub_recibe_ok ,luego.ub_observaciones ,luego.ub_oficina 
    ,luego.ub_of_dep ,luego.ub_doc_tipo_remite ,luego.ub_doc_remite ,
    luego.ub_int_ext ,luego.ub_of_remite ,luego.ub_of_dep_remite ,'U' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_c_ubicacion_docum insert on "informix"
    .c_ubicacion_docum referencing new as luego
    for each row
        (
        insert into "informix".aud_c_ubicacion_docum (ub_correlativo,
    ub_cod_doc,ub_cod_depend,ub_fec_in,ub_recibe,ub_entrega,ub_recibe_ok,
    ub_observaciones,ub_oficina,ub_of_dep,ub_doc_tipo_remite,ub_doc_remite,
    ub_int_ext,ub_of_remite,ub_of_dep_remite,desp_ub_correlativo,desp_ub_cod_doc,
    desp_ub_cod_depend,desp_ub_fec_in,desp_ub_recibe,desp_ub_entrega,
    desp_ub_recibe_ok,desp_ub_observaciones,desp_ub_oficina,desp_ub_of_dep,
    desp_ub_doc_tipo_remite,desp_ub_doc_remite,desp_ub_int_ext,desp_ub_of_remite,
    desp_ub_of_dep_remite,accion,usuario,hora)  values (NULL ,NULL ,NULL 
    ,' ' ,' ' ,NULL ,NULL ,' ' ,' ' ,NULL ,NULL ,' ' ,' ' ,NULL ,NULL ,luego.ub_correlativo 
    ,luego.ub_cod_doc ,luego.ub_cod_depend ,luego.ub_fec_in ,luego.ub_recibe 
    ,luego.ub_entrega ,luego.ub_recibe_ok ,luego.ub_observaciones ,luego.ub_oficina 
    ,luego.ub_of_dep ,luego.ub_doc_tipo_remite ,luego.ub_doc_remite ,
    luego.ub_int_ext ,luego.ub_of_remite ,luego.ub_of_dep_remite ,'I' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_c_ubicacion_docum delete on "informix"
    .c_ubicacion_docum referencing old as antes
    for each row
        (
        insert into "informix".aud_c_ubicacion_docum (ub_correlativo,
    ub_cod_doc,ub_cod_depend,ub_fec_in,ub_recibe,ub_entrega,ub_recibe_ok,
    ub_observaciones,ub_oficina,ub_of_dep,ub_doc_tipo_remite,ub_doc_remite,
    ub_int_ext,ub_of_remite,ub_of_dep_remite,desp_ub_correlativo,desp_ub_cod_doc,
    desp_ub_cod_depend,desp_ub_fec_in,desp_ub_recibe,desp_ub_entrega,
    desp_ub_recibe_ok,desp_ub_observaciones,desp_ub_oficina,desp_ub_of_dep,
    desp_ub_doc_tipo_remite,desp_ub_doc_remite,desp_ub_int_ext,desp_ub_of_remite,
    desp_ub_of_dep_remite,accion,usuario,hora)  values (antes.ub_correlativo 
    ,antes.ub_cod_doc ,antes.ub_cod_depend ,antes.ub_fec_in ,antes.ub_recibe 
    ,antes.ub_entrega ,antes.ub_recibe_ok ,antes.ub_observaciones ,antes.ub_oficina 
    ,antes.ub_of_dep ,antes.ub_doc_tipo_remite ,antes.ub_doc_remite ,
    antes.ub_int_ext ,antes.ub_of_remite ,antes.ub_of_dep_remite ,NULL 
    ,NULL ,NULL ,' ' ,' ' ,NULL ,NULL ,' ' ,' ' ,NULL ,NULL ,' ' ,' ' ,NULL 
    ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dpue delete on "informix".dpue referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_dpue (catalogo,grado,arma,
    dependencia,jerarquia,plaza,ceom,desc,situacion,fec_nomb,ord_gral,
    punto_og,fec_cese,desp_catalogo,desp_grado,desp_arma,desp_dependencia,
    desp_jerarquia,desp_plaza,desp_ceom,desp_desc,desp_situacion,desp_fec_nomb,
    desp_ord_gral,desp_punto_og,desp_fec_cese,accion,usuario,hora)  values 
    (antes.pue_catalogo ,antes.pue_grado ,antes.pue_arma ,antes.pue_dependencia 
    ,antes.pue_jerarquia ,antes.pue_plaza ,antes.pue_ceom ,antes.pue_desc 
    ,antes.pue_situacion ,antes.pue_fec_nomb ,antes.pue_ord_gral ,antes.pue_punto_og 
    ,antes.pue_fec_cese ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,'' ,'' ,'' ,'' 
    ,'' ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_dpue update on "informix".dpue referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_dpue (catalogo,grado,arma,
    dependencia,jerarquia,plaza,ceom,desc,situacion,fec_nomb,ord_gral,
    punto_og,fec_cese,desp_catalogo,desp_grado,desp_arma,desp_dependencia,
    desp_jerarquia,desp_plaza,desp_ceom,desp_desc,desp_situacion,desp_fec_nomb,
    desp_ord_gral,desp_punto_og,desp_fec_cese,accion,usuario,hora)  values 
    (antes.pue_catalogo ,antes.pue_grado ,antes.pue_arma ,antes.pue_dependencia 
    ,antes.pue_jerarquia ,antes.pue_plaza ,antes.pue_ceom ,antes.pue_desc 
    ,antes.pue_situacion ,antes.pue_fec_nomb ,antes.pue_ord_gral ,antes.pue_punto_og 
    ,antes.pue_fec_cese ,luego.pue_catalogo ,luego.pue_grado ,luego.pue_arma 
    ,luego.pue_dependencia ,luego.pue_jerarquia ,luego.pue_plaza ,luego.pue_ceom 
    ,luego.pue_desc ,luego.pue_situacion ,luego.pue_fec_nomb ,luego.pue_ord_gral 
    ,luego.pue_punto_og ,luego.pue_fec_cese ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_dpue insert on "informix".dpue referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_dpue (catalogo,grado,arma,
    dependencia,jerarquia,plaza,ceom,desc,situacion,fec_nomb,ord_gral,
    punto_og,fec_cese,desp_catalogo,desp_grado,desp_arma,desp_dependencia,
    desp_jerarquia,desp_plaza,desp_ceom,desp_desc,desp_situacion,desp_fec_nomb,
    desp_ord_gral,desp_punto_og,desp_fec_cese,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,NULL ,' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL ,' ' ,
    luego.pue_catalogo ,luego.pue_grado ,luego.pue_arma ,luego.pue_dependencia 
    ,luego.pue_jerarquia ,luego.pue_plaza ,luego.pue_ceom ,luego.pue_desc 
    ,luego.pue_situacion ,luego.pue_fec_nomb ,luego.pue_ord_gral ,luego.pue_punto_og 
    ,luego.pue_fec_cese ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_mtit update on "informix".mtit referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_mtit (tit_depen,tit_llave,
    tit_desc_ct,tit_desc_md,tit_desc_lg,desp_tit_depen,desp_tit_llave,
    desp_tit_desc_ct,desp_tit_desc_md,desp_tit_desc_lg,accion,usuario,
    hora)  values (antes.tit_depen ,antes.tit_llave ,antes.tit_desc_ct 
    ,antes.tit_desc_md ,antes.tit_desc_lg ,luego.tit_depen ,luego.tit_llave 
    ,luego.tit_desc_ct ,luego.tit_desc_md ,luego.tit_desc_lg ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_mtit insert on "informix".mtit referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_mtit (tit_depen,tit_llave,
    tit_desc_ct,tit_desc_md,tit_desc_lg,desp_tit_depen,desp_tit_llave,
    desp_tit_desc_ct,desp_tit_desc_md,desp_tit_desc_lg,accion,usuario,
    hora)  values (NULL ,' ' ,' ' ,' ' ,' ' ,luego.tit_depen ,luego.tit_llave 
    ,luego.tit_desc_ct ,luego.tit_desc_md ,luego.tit_desc_lg ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_mtit delete on "informix".mtit referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_mtit (tit_depen,tit_llave,
    tit_desc_ct,tit_desc_md,tit_desc_lg,desp_tit_depen,desp_tit_llave,
    desp_tit_desc_ct,desp_tit_desc_md,desp_tit_desc_lg,accion,usuario,
    hora)  values (antes.tit_depen ,antes.tit_llave ,antes.tit_desc_ct 
    ,antes.tit_desc_md ,antes.tit_desc_lg ,NULL ,' ' ,' ' ,' ' ,' ' ,'D' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".sand_tri2 insert on "informix".sand 
    referencing new as nue
    for each row
        (
        insert into "informix".aud_sand (nue_dsan_tran,nue_dsan_linea,
    nue_dsan_texto,usuario,hora,accion,terminal)  values (nue.dsan_tran 
    ,nue.dsan_linea ,nue.dsan_texto ,USER ,CURRENT year to fraction(3) 
    ,'I' ,'ibm3151' ));

create trigger "informix".sand_tri update on "informix".sand referencing 
    old as ant new as nue
    for each row
        (
        insert into "informix".aud_sand (ant_dsan_tran,ant_dsan_linea,
    ant_dsan_texto,nue_dsan_tran,nue_dsan_linea,nue_dsan_texto,usuario,
    hora,accion,terminal)  values (ant.dsan_tran ,ant.dsan_linea ,ant.dsan_texto 
    ,nue.dsan_tran ,nue.dsan_linea ,nue.dsan_texto ,USER ,CURRENT year 
    to fraction(3) ,'U' ,'ibm3151' ));

create trigger "informix".sand_tri1 delete on "informix".sand 
    referencing old as ant
    for each row
        (
        insert into "informix".aud_sand (ant_dsan_tran,ant_dsan_linea,
    ant_dsan_texto,usuario,hora,accion,terminal)  values (ant.dsan_tran 
    ,ant.dsan_linea ,ant.dsan_texto ,USER ,CURRENT year to fraction(3) 
    ,'D' ,'ibm3151' ));

create trigger "informix".act_telefonos update on "informix".telefonos 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_telefonos (tinstitucion,tnombre,
    tclase,tnumero,textension,desp_tinstitucion,desp_tnombre,desp_tclase,
    desp_tnumero,desp_textension,accion,usuario,hora)  values (antes.tinstitucion 
    ,antes.tnombre ,antes.tclase ,antes.tnumero ,antes.textension ,luego.tinstitucion 
    ,luego.tnombre ,luego.tclase ,luego.tnumero ,luego.textension ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_telefonos insert on "informix".telefonos 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_telefonos (tinstitucion,tnombre,
    tclase,tnumero,textension,desp_tinstitucion,desp_tnombre,desp_tclase,
    desp_tnumero,desp_textension,accion,usuario,hora)  values (NULL ,
    ' ' ,' ' ,' ' ,' ' ,luego.tinstitucion ,luego.tnombre ,luego.tclase ,
    luego.tnumero ,luego.textension ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_telefonos delete on "informix".telefonos 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_telefonos (tinstitucion,tnombre,
    tclase,tnumero,textension,desp_tinstitucion,desp_tnombre,desp_tclase,
    desp_tnumero,desp_textension,accion,usuario,hora)  values (antes.tinstitucion 
    ,antes.tnombre ,antes.tclase ,antes.tnumero ,antes.textension ,NULL 
    ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_t_org update on "informix".t_org 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_t_org (torg_plaza,torg_ceom,
    torg_dependencia,torg_jerarquia,torg_grado,torg_plaza_desc,torg_situacion,
    torg_cod_pago,torg_hrs_trab,torg_fec_ult_mod,torg_ord_gral,torg_dep_auto,
    torg_docu_auto,torg_fec_auto,torg_nominas,torg_usuario,torg_fec_hora,
    torg_terminal,torg_accion,torg_catalogo,desp_torg_plaza,desp_torg_ceom,
    desp_torg_dependencia,desp_torg_jerarquia,desp_torg_grado,desp_torg_plaza_desc,
    desp_torg_situacion,desp_torg_cod_pago,desp_torg_hrs_trab,desp_torg_fec_ult_mod,
    desp_torg_ord_gral,desp_torg_dep_auto,desp_torg_docu_auto,desp_torg_fec_auto,
    desp_torg_nominas,desp_torg_usuario,desp_torg_fec_hora,desp_torg_terminal,
    desp_torg_accion,desp_torg_catalogo,accion,usuario,hora)  values 
    (antes.torg_plaza ,antes.torg_ceom ,antes.torg_dependencia ,antes.torg_jerarquia 
    ,antes.torg_grado ,antes.torg_plaza_desc ,antes.torg_situacion ,antes.torg_cod_pago 
    ,antes.torg_hrs_trab ,antes.torg_fec_ult_mod ,antes.torg_ord_gral 
    ,antes.torg_dep_auto ,antes.torg_docu_auto ,antes.torg_fec_auto ,
    antes.torg_nominas ,antes.torg_usuario ,antes.torg_fec_hora ,antes.torg_terminal 
    ,antes.torg_accion ,antes.torg_catalogo ,luego.torg_plaza ,luego.torg_ceom 
    ,luego.torg_dependencia ,luego.torg_jerarquia ,luego.torg_grado ,
    luego.torg_plaza_desc ,luego.torg_situacion ,luego.torg_cod_pago 
    ,luego.torg_hrs_trab ,luego.torg_fec_ult_mod ,luego.torg_ord_gral 
    ,luego.torg_dep_auto ,luego.torg_docu_auto ,luego.torg_fec_auto ,
    luego.torg_nominas ,luego.torg_usuario ,luego.torg_fec_hora ,luego.torg_terminal 
    ,luego.torg_accion ,luego.torg_catalogo ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_t_org insert on "informix".t_org 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_t_org (torg_plaza,torg_ceom,
    torg_dependencia,torg_jerarquia,torg_grado,torg_plaza_desc,torg_situacion,
    torg_cod_pago,torg_hrs_trab,torg_fec_ult_mod,torg_ord_gral,torg_dep_auto,
    torg_docu_auto,torg_fec_auto,torg_nominas,torg_usuario,torg_fec_hora,
    torg_terminal,torg_accion,torg_catalogo,desp_torg_plaza,desp_torg_ceom,
    desp_torg_dependencia,desp_torg_jerarquia,desp_torg_grado,desp_torg_plaza_desc,
    desp_torg_situacion,desp_torg_cod_pago,desp_torg_hrs_trab,desp_torg_fec_ult_mod,
    desp_torg_ord_gral,desp_torg_dep_auto,desp_torg_docu_auto,desp_torg_fec_auto,
    desp_torg_nominas,desp_torg_usuario,desp_torg_fec_hora,desp_torg_terminal,
    desp_torg_accion,desp_torg_catalogo,accion,usuario,hora)  values 
    (NULL ,' ' ,NULL ,' ' ,NULL ,' ' ,' ' ,' ' ,NULL ,' ' ,' ' ,NULL ,' ' ,' '
     ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL ,luego.torg_plaza ,luego.torg_ceom ,luego.torg_dependencia 
    ,luego.torg_jerarquia ,luego.torg_grado ,luego.torg_plaza_desc ,luego.torg_situacion 
    ,luego.torg_cod_pago ,luego.torg_hrs_trab ,luego.torg_fec_ult_mod 
    ,luego.torg_ord_gral ,luego.torg_dep_auto ,luego.torg_docu_auto ,
    luego.torg_fec_auto ,luego.torg_nominas ,luego.torg_usuario ,luego.torg_fec_hora 
    ,luego.torg_terminal ,luego.torg_accion ,luego.torg_catalogo ,'I' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_t_org delete on "informix".t_org 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_t_org (torg_plaza,torg_ceom,
    torg_dependencia,torg_jerarquia,torg_grado,torg_plaza_desc,torg_situacion,
    torg_cod_pago,torg_hrs_trab,torg_fec_ult_mod,torg_ord_gral,torg_dep_auto,
    torg_docu_auto,torg_fec_auto,torg_nominas,torg_usuario,torg_fec_hora,
    torg_terminal,torg_accion,torg_catalogo,desp_torg_plaza,desp_torg_ceom,
    desp_torg_dependencia,desp_torg_jerarquia,desp_torg_grado,desp_torg_plaza_desc,
    desp_torg_situacion,desp_torg_cod_pago,desp_torg_hrs_trab,desp_torg_fec_ult_mod,
    desp_torg_ord_gral,desp_torg_dep_auto,desp_torg_docu_auto,desp_torg_fec_auto,
    desp_torg_nominas,desp_torg_usuario,desp_torg_fec_hora,desp_torg_terminal,
    desp_torg_accion,desp_torg_catalogo,accion,usuario,hora)  values 
    (antes.torg_plaza ,antes.torg_ceom ,antes.torg_dependencia ,antes.torg_jerarquia 
    ,antes.torg_grado ,antes.torg_plaza_desc ,antes.torg_situacion ,antes.torg_cod_pago 
    ,antes.torg_hrs_trab ,antes.torg_fec_ult_mod ,antes.torg_ord_gral 
    ,antes.torg_dep_auto ,antes.torg_docu_auto ,antes.torg_fec_auto ,
    antes.torg_nominas ,antes.torg_usuario ,antes.torg_fec_hora ,antes.torg_terminal 
    ,antes.torg_accion ,antes.torg_catalogo ,NULL ,' ' ,NULL ,' ' ,NULL 
    ,' ' ,' ' ,' ' ,NULL ,' ' ,' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ret_of_carre_res update on "informix"
    .ret_of_carre_res referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ret_of_carre_res (no,catalogo,
    grado,arma,dem,t_servicio,nombre,lugar_alta,bono_retiro,sueldo,bono14,
    aguinaldo,bono_vac,total,desp_no,desp_catalogo,desp_grado,desp_arma,
    desp_dem,desp_t_servicio,desp_nombre,desp_lugar_alta,desp_bono_retiro,
    desp_sueldo,desp_bono14,desp_aguinaldo,desp_bono_vac,desp_total,accion,
    usuario,hora)  values (antes.no ,antes.catalogo ,antes.grado ,antes.arma 
    ,antes.dem ,antes.t_servicio ,antes.nombre ,antes.lugar_alta ,antes.bono_retiro 
    ,antes.sueldo ,antes.bono14 ,antes.aguinaldo ,antes.bono_vac ,antes.total 
    ,luego.no ,luego.catalogo ,luego.grado ,luego.arma ,luego.dem ,luego.t_servicio 
    ,luego.nombre ,luego.lugar_alta ,luego.bono_retiro ,luego.sueldo 
    ,luego.bono14 ,luego.aguinaldo ,luego.bono_vac ,luego.total ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ret_of_carre_res insert on "informix"
    .ret_of_carre_res referencing new as luego
    for each row
        (
        insert into "informix".aud_ret_of_carre_res (no,catalogo,
    grado,arma,dem,t_servicio,nombre,lugar_alta,bono_retiro,sueldo,bono14,
    aguinaldo,bono_vac,total,desp_no,desp_catalogo,desp_grado,desp_arma,
    desp_dem,desp_t_servicio,desp_nombre,desp_lugar_alta,desp_bono_retiro,
    desp_sueldo,desp_bono14,desp_aguinaldo,desp_bono_vac,desp_total,accion,
    usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,' ' ,NULL ,' ' ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,' ' ,' ' ,luego.no ,luego.catalogo ,luego.grado ,luego.arma 
    ,luego.dem ,luego.t_servicio ,luego.nombre ,luego.lugar_alta ,luego.bono_retiro 
    ,luego.sueldo ,luego.bono14 ,luego.aguinaldo ,luego.bono_vac ,luego.total 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ret_of_carre_res delete on "informix"
    .ret_of_carre_res referencing old as antes
    for each row
        (
        insert into "informix".aud_ret_of_carre_res (no,catalogo,
    grado,arma,dem,t_servicio,nombre,lugar_alta,bono_retiro,sueldo,bono14,
    aguinaldo,bono_vac,total,desp_no,desp_catalogo,desp_grado,desp_arma,
    desp_dem,desp_t_servicio,desp_nombre,desp_lugar_alta,desp_bono_retiro,
    desp_sueldo,desp_bono14,desp_aguinaldo,desp_bono_vac,desp_total,accion,
    usuario,hora)  values (antes.no ,antes.catalogo ,antes.grado ,antes.arma 
    ,antes.dem ,antes.t_servicio ,antes.nombre ,antes.lugar_alta ,antes.bono_retiro 
    ,antes.sueldo ,antes.bono14 ,antes.aguinaldo ,antes.bono_vac ,antes.total 
    ,NULL ,NULL ,' ' ,' ' ,' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ret_tropa update on "informix".ret_tropa 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ret_tropa (no,catalogo,grado,
    nombre,t_servicio,comando,monto,sueldo,bono14,aguinaldo,total,desp_no,
    desp_catalogo,desp_grado,desp_nombre,desp_t_servicio,desp_comando,
    desp_monto,desp_sueldo,desp_bono14,desp_aguinaldo,desp_total,accion,
    usuario,hora)  values (antes.no ,antes.catalogo ,antes.grado ,antes.nombre 
    ,antes.t_servicio ,antes.comando ,antes.monto ,antes.sueldo ,antes.bono14 
    ,antes.aguinaldo ,antes.total ,luego.no ,luego.catalogo ,luego.grado 
    ,luego.nombre ,luego.t_servicio ,luego.comando ,luego.monto ,luego.sueldo 
    ,luego.bono14 ,luego.aguinaldo ,luego.total ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_ret_tropa insert on "informix".ret_tropa 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ret_tropa (no,catalogo,grado,
    nombre,t_servicio,comando,monto,sueldo,bono14,aguinaldo,total,desp_no,
    desp_catalogo,desp_grado,desp_nombre,desp_t_servicio,desp_comando,
    desp_monto,desp_sueldo,desp_bono14,desp_aguinaldo,desp_total,accion,
    usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,
    ' ' ,' ' ,luego.no ,luego.catalogo ,luego.grado ,luego.nombre ,luego.t_servicio 
    ,luego.comando ,luego.monto ,luego.sueldo ,luego.bono14 ,luego.aguinaldo 
    ,luego.total ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ret_tropa delete on "informix".ret_tropa 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ret_tropa (no,catalogo,grado,
    nombre,t_servicio,comando,monto,sueldo,bono14,aguinaldo,total,desp_no,
    desp_catalogo,desp_grado,desp_nombre,desp_t_servicio,desp_comando,
    desp_monto,desp_sueldo,desp_bono14,desp_aguinaldo,desp_total,accion,
    usuario,hora)  values (antes.no ,antes.catalogo ,antes.grado ,antes.nombre 
    ,antes.t_servicio ,antes.comando ,antes.monto ,antes.sueldo ,antes.bono14 
    ,antes.aguinaldo ,antes.total ,NULL ,NULL ,' ' ,' ' ,NULL ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ret_desc_im update on "informix"
    .ret_desc_im referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ret_desc_im (no,catalogo,grado,
    nombre,d_descuento,saldo,desp_no,desp_catalogo,desp_grado,desp_nombre,
    desp_d_descuento,desp_saldo,accion,usuario,hora)  values (antes.no 
    ,antes.catalogo ,antes.grado ,antes.nombre ,antes.d_descuento ,antes.saldo 
    ,luego.no ,luego.catalogo ,luego.grado ,luego.nombre ,luego.d_descuento 
    ,luego.saldo ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ret_desc_im insert on "informix"
    .ret_desc_im referencing new as luego
    for each row
        (
        insert into "informix".aud_ret_desc_im (no,catalogo,grado,
    nombre,d_descuento,saldo,desp_no,desp_catalogo,desp_grado,desp_nombre,
    desp_d_descuento,desp_saldo,accion,usuario,hora)  values (NULL ,NULL 
    ,' ' ,' ' ,' ' ,' ' ,luego.no ,luego.catalogo ,luego.grado ,luego.nombre 
    ,luego.d_descuento ,luego.saldo ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_ret_desc_im delete on "informix"
    .ret_desc_im referencing old as antes
    for each row
        (
        insert into "informix".aud_ret_desc_im (no,catalogo,grado,
    nombre,d_descuento,saldo,desp_no,desp_catalogo,desp_grado,desp_nombre,
    desp_d_descuento,desp_saldo,accion,usuario,hora)  values (antes.no 
    ,antes.catalogo ,antes.grado ,antes.nombre ,antes.d_descuento ,antes.saldo 
    ,NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_ret_desc_hr update on "informix"
    .ret_desc_hr referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ret_desc_hr (no,catalogo,grado,
    apellido,nombre,d_descuento,saldo,desp_no,desp_catalogo,desp_grado,
    desp_apellido,desp_nombre,desp_d_descuento,desp_saldo,accion,usuario,
    hora)  values (antes.no ,antes.catalogo ,antes.grado ,antes.apellido 
    ,antes.nombre ,antes.d_descuento ,antes.saldo ,luego.no ,luego.catalogo 
    ,luego.grado ,luego.apellido ,luego.nombre ,luego.d_descuento ,luego.saldo 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ret_desc_hr insert on "informix"
    .ret_desc_hr referencing new as luego
    for each row
        (
        insert into "informix".aud_ret_desc_hr (no,catalogo,grado,
    apellido,nombre,d_descuento,saldo,desp_no,desp_catalogo,desp_grado,
    desp_apellido,desp_nombre,desp_d_descuento,desp_saldo,accion,usuario,
    hora)  values (NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.no ,luego.catalogo 
    ,luego.grado ,luego.apellido ,luego.nombre ,luego.d_descuento ,luego.saldo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ret_desc_hr delete on "informix"
    .ret_desc_hr referencing old as antes
    for each row
        (
        insert into "informix".aud_ret_desc_hr (no,catalogo,grado,
    apellido,nombre,d_descuento,saldo,desp_no,desp_catalogo,desp_grado,
    desp_apellido,desp_nombre,desp_d_descuento,desp_saldo,accion,usuario,
    hora)  values (antes.no ,antes.catalogo ,antes.grado ,antes.apellido 
    ,antes.nombre ,antes.d_descuento ,antes.saldo ,NULL ,NULL ,' ' ,' '
     ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ret_desc_ipm_asim update on "informix"
    .ret_desc_ipm_asim referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ret_desc_ipm_asim (no,catalogo,
    grado,nombre,prestamos,optica,pc,financiamientos,bazar,boletos,total,
    desp_no,desp_catalogo,desp_grado,desp_nombre,desp_prestamos,desp_optica,
    desp_pc,desp_financiamientos,desp_bazar,desp_boletos,desp_total,accion,
    usuario,hora)  values (antes.no ,antes.catalogo ,antes.grado ,antes.nombre 
    ,antes.prestamos ,antes.optica ,antes.pc ,antes.financiamientos ,
    antes.bazar ,antes.boletos ,antes.total ,luego.no ,luego.catalogo 
    ,luego.grado ,luego.nombre ,luego.prestamos ,luego.optica ,luego.pc 
    ,luego.financiamientos ,luego.bazar ,luego.boletos ,luego.total ,
    'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ret_desc_ipm_asim insert on "informix"
    .ret_desc_ipm_asim referencing new as luego
    for each row
        (
        insert into "informix".aud_ret_desc_ipm_asim (no,catalogo,
    grado,nombre,prestamos,optica,pc,financiamientos,bazar,boletos,total,
    desp_no,desp_catalogo,desp_grado,desp_nombre,desp_prestamos,desp_optica,
    desp_pc,desp_financiamientos,desp_bazar,desp_boletos,desp_total,accion,
    usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' '
     ,' ' ,luego.no ,luego.catalogo ,luego.grado ,luego.nombre ,luego.prestamos 
    ,luego.optica ,luego.pc ,luego.financiamientos ,luego.bazar ,luego.boletos 
    ,luego.total ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ret_desc_ipm_asim delete on "informix"
    .ret_desc_ipm_asim referencing old as antes
    for each row
        (
        insert into "informix".aud_ret_desc_ipm_asim (no,catalogo,
    grado,nombre,prestamos,optica,pc,financiamientos,bazar,boletos,total,
    desp_no,desp_catalogo,desp_grado,desp_nombre,desp_prestamos,desp_optica,
    desp_pc,desp_financiamientos,desp_bazar,desp_boletos,desp_total,accion,
    usuario,hora)  values (antes.no ,antes.catalogo ,antes.grado ,antes.nombre 
    ,antes.prestamos ,antes.optica ,antes.pc ,antes.financiamientos ,
    antes.bazar ,antes.boletos ,antes.total ,NULL ,NULL ,' ' ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_ret_desc_ipm_esptas update on "informix"
    .ret_desc_ipm_esptas referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_ret_desc_ipm_esptas (no,catalogo,
    grado,nombre,prestamos,optica,pc,financiamiento,bazar,boletos,linda_vista,
    total,desp_no,desp_catalogo,desp_grado,desp_nombre,desp_prestamos,
    desp_optica,desp_pc,desp_financiamiento,desp_bazar,desp_boletos,desp_linda_vista,
    desp_total,accion,usuario,hora)  values (antes.no ,antes.catalogo 
    ,antes.grado ,antes.nombre ,antes.prestamos ,antes.optica ,antes.pc 
    ,antes.financiamiento ,antes.bazar ,antes.boletos ,antes.linda_vista 
    ,antes.total ,luego.no ,luego.catalogo ,luego.grado ,luego.nombre 
    ,luego.prestamos ,luego.optica ,luego.pc ,luego.financiamiento ,luego.bazar 
    ,luego.boletos ,luego.linda_vista ,luego.total ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_ret_desc_ipm_esptas insert on "informix"
    .ret_desc_ipm_esptas referencing new as luego
    for each row
        (
        insert into "informix".aud_ret_desc_ipm_esptas (no,catalogo,
    grado,nombre,prestamos,optica,pc,financiamiento,bazar,boletos,linda_vista,
    total,desp_no,desp_catalogo,desp_grado,desp_nombre,desp_prestamos,
    desp_optica,desp_pc,desp_financiamiento,desp_bazar,desp_boletos,desp_linda_vista,
    desp_total,accion,usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.no ,luego.catalogo ,luego.grado 
    ,luego.nombre ,luego.prestamos ,luego.optica ,luego.pc ,luego.financiamiento 
    ,luego.bazar ,luego.boletos ,luego.linda_vista ,luego.total ,'I' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ret_desc_ipm_esptas delete on "informix"
    .ret_desc_ipm_esptas referencing old as antes
    for each row
        (
        insert into "informix".aud_ret_desc_ipm_esptas (no,catalogo,
    grado,nombre,prestamos,optica,pc,financiamiento,bazar,boletos,linda_vista,
    total,desp_no,desp_catalogo,desp_grado,desp_nombre,desp_prestamos,
    desp_optica,desp_pc,desp_financiamiento,desp_bazar,desp_boletos,desp_linda_vista,
    desp_total,accion,usuario,hora)  values (antes.no ,antes.catalogo 
    ,antes.grado ,antes.nombre ,antes.prestamos ,antes.optica ,antes.pc 
    ,antes.financiamiento ,antes.bazar ,antes.boletos ,antes.linda_vista 
    ,antes.total ,NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ret_desc_ipm_of update on "informix"
    .ret_desc_ipm_of referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ret_desc_ipm_of (no,catalogo,
    grado,arma,nombre,prestamos,optica,pc,financiamiento,bazar,boletos,
    total,desp_no,desp_catalogo,desp_grado,desp_arma,desp_nombre,desp_prestamos,
    desp_optica,desp_pc,desp_financiamiento,desp_bazar,desp_boletos,desp_total,
    accion,usuario,hora)  values (antes.no ,antes.catalogo ,antes.grado 
    ,antes.arma ,antes.nombre ,antes.prestamos ,antes.optica ,antes.pc 
    ,antes.financiamiento ,antes.bazar ,antes.boletos ,antes.total ,luego.no 
    ,luego.catalogo ,luego.grado ,luego.arma ,luego.nombre ,luego.prestamos 
    ,luego.optica ,luego.pc ,luego.financiamiento ,luego.bazar ,luego.boletos 
    ,luego.total ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ret_desc_ipm_of insert on "informix"
    .ret_desc_ipm_of referencing new as luego
    for each row
        (
        insert into "informix".aud_ret_desc_ipm_of (no,catalogo,
    grado,arma,nombre,prestamos,optica,pc,financiamiento,bazar,boletos,
    total,desp_no,desp_catalogo,desp_grado,desp_arma,desp_nombre,desp_prestamos,
    desp_optica,desp_pc,desp_financiamiento,desp_bazar,desp_boletos,desp_total,
    accion,usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' 
    ,' ' ,' ' ,' ' ,' ' ,luego.no ,luego.catalogo ,luego.grado ,luego.arma 
    ,luego.nombre ,luego.prestamos ,luego.optica ,luego.pc ,luego.financiamiento 
    ,luego.bazar ,luego.boletos ,luego.total ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_ret_desc_ipm_of delete on "informix"
    .ret_desc_ipm_of referencing old as antes
    for each row
        (
        insert into "informix".aud_ret_desc_ipm_of (no,catalogo,
    grado,arma,nombre,prestamos,optica,pc,financiamiento,bazar,boletos,
    total,desp_no,desp_catalogo,desp_grado,desp_arma,desp_nombre,desp_prestamos,
    desp_optica,desp_pc,desp_financiamiento,desp_bazar,desp_boletos,desp_total,
    accion,usuario,hora)  values (antes.no ,antes.catalogo ,antes.grado 
    ,antes.arma ,antes.nombre ,antes.prestamos ,antes.optica ,antes.pc 
    ,antes.financiamiento ,antes.bazar ,antes.boletos ,antes.total ,NULL 
    ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_ret_desc_ipm_sgtos_may update on 
    "informix".ret_desc_ipm_sgtos_may referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_ret_desc_ipm_sgtos_may (no,
    catalogo,grado,nombre,prestamos,optica,pc,financiamiento,bazar,boletos,
    total,desp_no,desp_catalogo,desp_grado,desp_nombre,desp_prestamos,
    desp_optica,desp_pc,desp_financiamiento,desp_bazar,desp_boletos,desp_total,
    accion,usuario,hora)  values (antes.no ,antes.catalogo ,antes.grado 
    ,antes.nombre ,antes.prestamos ,antes.optica ,antes.pc ,antes.financiamiento 
    ,antes.bazar ,antes.boletos ,antes.total ,luego.no ,luego.catalogo 
    ,luego.grado ,luego.nombre ,luego.prestamos ,luego.optica ,luego.pc 
    ,luego.financiamiento ,luego.bazar ,luego.boletos ,luego.total ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ret_desc_ipm_sgtos_may insert on 
    "informix".ret_desc_ipm_sgtos_may referencing new as luego
    
    for each row
        (
        insert into "informix".aud_ret_desc_ipm_sgtos_may (no,
    catalogo,grado,nombre,prestamos,optica,pc,financiamiento,bazar,boletos,
    total,desp_no,desp_catalogo,desp_grado,desp_nombre,desp_prestamos,
    desp_optica,desp_pc,desp_financiamiento,desp_bazar,desp_boletos,desp_total,
    accion,usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' 
    ,' ' ,' ' ,' ' ,luego.no ,luego.catalogo ,luego.grado ,luego.nombre 
    ,luego.prestamos ,luego.optica ,luego.pc ,luego.financiamiento ,luego.bazar 
    ,luego.boletos ,luego.total ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_ret_desc_ipm_sgtos_may delete on 
    "informix".ret_desc_ipm_sgtos_may referencing old as antes
    
    for each row
        (
        insert into "informix".aud_ret_desc_ipm_sgtos_may (no,
    catalogo,grado,nombre,prestamos,optica,pc,financiamiento,bazar,boletos,
    total,desp_no,desp_catalogo,desp_grado,desp_nombre,desp_prestamos,
    desp_optica,desp_pc,desp_financiamiento,desp_bazar,desp_boletos,desp_total,
    accion,usuario,hora)  values (antes.no ,antes.catalogo ,antes.grado 
    ,antes.nombre ,antes.prestamos ,antes.optica ,antes.pc ,antes.financiamiento 
    ,antes.bazar ,antes.boletos ,antes.total ,NULL ,NULL ,' ' ,' ' ,' ' 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_ret_of_asim update on "informix"
    .ret_of_asim referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ret_of_asim (no,catalogo,grado,
    nombre,comando,t_servicio,especialidad,horas,bono_retiro,sueldo,bono14,
    aguinaldo,bono_vac,total,desp_no,desp_catalogo,desp_grado,desp_nombre,
    desp_comando,desp_t_servicio,desp_especialidad,desp_horas,desp_bono_retiro,
    desp_sueldo,desp_bono14,desp_aguinaldo,desp_bono_vac,desp_total,accion,
    usuario,hora)  values (antes.no ,antes.catalogo ,antes.grado ,antes.nombre 
    ,antes.comando ,antes.t_servicio ,antes.especialidad ,antes.horas 
    ,antes.bono_retiro ,antes.sueldo ,antes.bono14 ,antes.aguinaldo ,
    antes.bono_vac ,antes.total ,luego.no ,luego.catalogo ,luego.grado 
    ,luego.nombre ,luego.comando ,luego.t_servicio ,luego.especialidad 
    ,luego.horas ,luego.bono_retiro ,luego.sueldo ,luego.bono14 ,luego.aguinaldo 
    ,luego.bono_vac ,luego.total ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_ret_of_asim insert on "informix"
    .ret_of_asim referencing new as luego
    for each row
        (
        insert into "informix".aud_ret_of_asim (no,catalogo,grado,
    nombre,comando,t_servicio,especialidad,horas,bono_retiro,sueldo,bono14,
    aguinaldo,bono_vac,total,desp_no,desp_catalogo,desp_grado,desp_nombre,
    desp_comando,desp_t_servicio,desp_especialidad,desp_horas,desp_bono_retiro,
    desp_sueldo,desp_bono14,desp_aguinaldo,desp_bono_vac,desp_total,accion,
    usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,' ' ,NULL ,' ' ,NULL ,' '
     ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.no ,luego.catalogo ,luego.grado ,luego.nombre 
    ,luego.comando ,luego.t_servicio ,luego.especialidad ,luego.horas 
    ,luego.bono_retiro ,luego.sueldo ,luego.bono14 ,luego.aguinaldo ,
    luego.bono_vac ,luego.total ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_ret_of_asim delete on "informix"
    .ret_of_asim referencing old as antes
    for each row
        (
        insert into "informix".aud_ret_of_asim (no,catalogo,grado,
    nombre,comando,t_servicio,especialidad,horas,bono_retiro,sueldo,bono14,
    aguinaldo,bono_vac,total,desp_no,desp_catalogo,desp_grado,desp_nombre,
    desp_comando,desp_t_servicio,desp_especialidad,desp_horas,desp_bono_retiro,
    desp_sueldo,desp_bono14,desp_aguinaldo,desp_bono_vac,desp_total,accion,
    usuario,hora)  values (antes.no ,antes.catalogo ,antes.grado ,antes.nombre 
    ,antes.comando ,antes.t_servicio ,antes.especialidad ,antes.horas 
    ,antes.bono_retiro ,antes.sueldo ,antes.bono14 ,antes.aguinaldo ,
    antes.bono_vac ,antes.total ,NULL ,NULL ,' ' ,' ' ,' ' ,NULL ,' ' ,NULL 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_ret_esptas update on "informix".ret_esptas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ret_esptas (no,catalogo,grado,
    nombre,t_servicio,puesto,bono_retiro,sueldo,bono14,aguinaldo,bono_vac,
    total,desp_no,desp_catalogo,desp_grado,desp_nombre,desp_t_servicio,
    desp_puesto,desp_bono_retiro,desp_sueldo,desp_bono14,desp_aguinaldo,
    desp_bono_vac,desp_total,accion,usuario,hora)  values (antes.no ,
    antes.catalogo ,antes.grado ,antes.nombre ,antes.t_servicio ,antes.puesto 
    ,antes.bono_retiro ,antes.sueldo ,antes.bono14 ,antes.aguinaldo ,
    antes.bono_vac ,antes.total ,luego.no ,luego.catalogo ,luego.grado 
    ,luego.nombre ,luego.t_servicio ,luego.puesto ,luego.bono_retiro 
    ,luego.sueldo ,luego.bono14 ,luego.aguinaldo ,luego.bono_vac ,luego.total 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ret_esptas insert on "informix".ret_esptas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ret_esptas (no,catalogo,grado,
    nombre,t_servicio,puesto,bono_retiro,sueldo,bono14,aguinaldo,bono_vac,
    total,desp_no,desp_catalogo,desp_grado,desp_nombre,desp_t_servicio,
    desp_puesto,desp_bono_retiro,desp_sueldo,desp_bono14,desp_aguinaldo,
    desp_bono_vac,desp_total,accion,usuario,hora)  values (NULL ,NULL 
    ,' ' ,' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.no ,luego.catalogo 
    ,luego.grado ,luego.nombre ,luego.t_servicio ,luego.puesto ,luego.bono_retiro 
    ,luego.sueldo ,luego.bono14 ,luego.aguinaldo ,luego.bono_vac ,luego.total 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ret_esptas delete on "informix".ret_esptas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ret_esptas (no,catalogo,grado,
    nombre,t_servicio,puesto,bono_retiro,sueldo,bono14,aguinaldo,bono_vac,
    total,desp_no,desp_catalogo,desp_grado,desp_nombre,desp_t_servicio,
    desp_puesto,desp_bono_retiro,desp_sueldo,desp_bono14,desp_aguinaldo,
    desp_bono_vac,desp_total,accion,usuario,hora)  values (antes.no ,
    antes.catalogo ,antes.grado ,antes.nombre ,antes.t_servicio ,antes.puesto 
    ,antes.bono_retiro ,antes.sueldo ,antes.bono14 ,antes.aguinaldo ,
    antes.bono_vac ,antes.total ,NULL ,NULL ,' ' ,' ' ,NULL ,' ' ,' ' ,' '
     ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ret_sgtos_may update on "informix"
    .ret_sgtos_may referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ret_sgtos_may (no,catalogo,
    grado,nombre,comando,t_servicio,bono_retiro,sueldo,bono14,aguinaldo,
    bono_vac,total,desp_no,desp_catalogo,desp_grado,desp_nombre,desp_comando,
    desp_t_servicio,desp_bono_retiro,desp_sueldo,desp_bono14,desp_aguinaldo,
    desp_bono_vac,desp_total,accion,usuario,hora)  values (antes.no ,
    antes.catalogo ,antes.grado ,antes.nombre ,antes.comando ,antes.t_servicio 
    ,antes.bono_retiro ,antes.sueldo ,antes.bono14 ,antes.aguinaldo ,
    antes.bono_vac ,antes.total ,luego.no ,luego.catalogo ,luego.grado 
    ,luego.nombre ,luego.comando ,luego.t_servicio ,luego.bono_retiro 
    ,luego.sueldo ,luego.bono14 ,luego.aguinaldo ,luego.bono_vac ,luego.total 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ret_sgtos_may insert on "informix"
    .ret_sgtos_may referencing new as luego
    for each row
        (
        insert into "informix".aud_ret_sgtos_may (no,catalogo,
    grado,nombre,comando,t_servicio,bono_retiro,sueldo,bono14,aguinaldo,
    bono_vac,total,desp_no,desp_catalogo,desp_grado,desp_nombre,desp_comando,
    desp_t_servicio,desp_bono_retiro,desp_sueldo,desp_bono14,desp_aguinaldo,
    desp_bono_vac,desp_total,accion,usuario,hora)  values (NULL ,NULL 
    ,' ' ,' ' ,' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.no ,luego.catalogo 
    ,luego.grado ,luego.nombre ,luego.comando ,luego.t_servicio ,luego.bono_retiro 
    ,luego.sueldo ,luego.bono14 ,luego.aguinaldo ,luego.bono_vac ,luego.total 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ret_sgtos_may delete on "informix"
    .ret_sgtos_may referencing old as antes
    for each row
        (
        insert into "informix".aud_ret_sgtos_may (no,catalogo,
    grado,nombre,comando,t_servicio,bono_retiro,sueldo,bono14,aguinaldo,
    bono_vac,total,desp_no,desp_catalogo,desp_grado,desp_nombre,desp_comando,
    desp_t_servicio,desp_bono_retiro,desp_sueldo,desp_bono14,desp_aguinaldo,
    desp_bono_vac,desp_total,accion,usuario,hora)  values (antes.no ,
    antes.catalogo ,antes.grado ,antes.nombre ,antes.comando ,antes.t_servicio 
    ,antes.bono_retiro ,antes.sueldo ,antes.bono14 ,antes.aguinaldo ,
    antes.bono_vac ,antes.total ,NULL ,NULL ,' ' ,' ' ,' ' ,NULL ,' ' ,' '
     ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_retiro update on "informix".retiro 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_retiro (catalogo,gra_codigo,
    grado,nombre,clase,tiempo,banco,cuenta,dependencia,depen,cedord,registro,
    plataforma,sueldo,bono,indenmiza,completa,bono14,aguinaldo,vacacional,
    totasig,presipm,finipm,optipm,pcsipm,bazipm,vivipm,faripm,bolipm,
    totipm,hreal,indus,totdesc,mfp,mdn,total,desp_catalogo,desp_gra_codigo,
    desp_grado,desp_nombre,desp_clase,desp_tiempo,desp_banco,desp_cuenta,
    desp_dependencia,desp_depen,desp_cedord,desp_registro,desp_plataforma,
    desp_sueldo,desp_bono,desp_indenmiza,desp_completa,desp_bono14,desp_aguinaldo,
    desp_vacacional,desp_totasig,desp_presipm,desp_finipm,desp_optipm,
    desp_pcsipm,desp_bazipm,desp_vivipm,desp_faripm,desp_bolipm,desp_totipm,
    desp_hreal,desp_indus,desp_totdesc,desp_mfp,desp_mdn,desp_total,accion,
    usuario,hora)  values (antes.catalogo ,antes.gra_codigo ,antes.grado 
    ,antes.nombre ,antes.clase ,antes.tiempo ,antes.banco ,antes.cuenta 
    ,antes.dependencia ,antes.depen ,antes.cedord ,antes.registro ,antes.plataforma 
    ,antes.sueldo ,antes.bono ,antes.indenmiza ,antes.completa ,antes.bono14 
    ,antes.aguinaldo ,antes.vacacional ,antes.totasig ,antes.presipm 
    ,antes.finipm ,antes.optipm ,antes.pcsipm ,antes.bazipm ,antes.vivipm 
    ,antes.faripm ,antes.bolipm ,antes.totipm ,antes.hreal ,antes.indus 
    ,antes.totdesc ,antes.mfp ,antes.mdn ,antes.total ,luego.catalogo 
    ,luego.gra_codigo ,luego.grado ,luego.nombre ,luego.clase ,luego.tiempo 
    ,luego.banco ,luego.cuenta ,luego.dependencia ,luego.depen ,luego.cedord 
    ,luego.registro ,luego.plataforma ,luego.sueldo ,luego.bono ,luego.indenmiza 
    ,luego.completa ,luego.bono14 ,luego.aguinaldo ,luego.vacacional 
    ,luego.totasig ,luego.presipm ,luego.finipm ,luego.optipm ,luego.pcsipm 
    ,luego.bazipm ,luego.vivipm ,luego.faripm ,luego.bolipm ,luego.totipm 
    ,luego.hreal ,luego.indus ,luego.totdesc ,luego.mfp ,luego.mdn ,luego.total 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_retiro insert on "informix".retiro 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_retiro (catalogo,gra_codigo,
    grado,nombre,clase,tiempo,banco,cuenta,dependencia,depen,cedord,registro,
    plataforma,sueldo,bono,indenmiza,completa,bono14,aguinaldo,vacacional,
    totasig,presipm,finipm,optipm,pcsipm,bazipm,vivipm,faripm,bolipm,
    totipm,hreal,indus,totdesc,mfp,mdn,total,desp_catalogo,desp_gra_codigo,
    desp_grado,desp_nombre,desp_clase,desp_tiempo,desp_banco,desp_cuenta,
    desp_dependencia,desp_depen,desp_cedord,desp_registro,desp_plataforma,
    desp_sueldo,desp_bono,desp_indenmiza,desp_completa,desp_bono14,desp_aguinaldo,
    desp_vacacional,desp_totasig,desp_presipm,desp_finipm,desp_optipm,
    desp_pcsipm,desp_bazipm,desp_vivipm,desp_faripm,desp_bolipm,desp_totipm,
    desp_hreal,desp_indus,desp_totdesc,desp_mfp,desp_mdn,desp_total,accion,
    usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,NULL ,NULL ,NULL ,' ' ,
    NULL ,' ' ,' ' ,NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.catalogo 
    ,luego.gra_codigo ,luego.grado ,luego.nombre ,luego.clase ,luego.tiempo 
    ,luego.banco ,luego.cuenta ,luego.dependencia ,luego.depen ,luego.cedord 
    ,luego.registro ,luego.plataforma ,luego.sueldo ,luego.bono ,luego.indenmiza 
    ,luego.completa ,luego.bono14 ,luego.aguinaldo ,luego.vacacional 
    ,luego.totasig ,luego.presipm ,luego.finipm ,luego.optipm ,luego.pcsipm 
    ,luego.bazipm ,luego.vivipm ,luego.faripm ,luego.bolipm ,luego.totipm 
    ,luego.hreal ,luego.indus ,luego.totdesc ,luego.mfp ,luego.mdn ,luego.total 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_retiro delete on "informix".retiro 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_retiro (catalogo,gra_codigo,
    grado,nombre,clase,tiempo,banco,cuenta,dependencia,depen,cedord,registro,
    plataforma,sueldo,bono,indenmiza,completa,bono14,aguinaldo,vacacional,
    totasig,presipm,finipm,optipm,pcsipm,bazipm,vivipm,faripm,bolipm,
    totipm,hreal,indus,totdesc,mfp,mdn,total,desp_catalogo,desp_gra_codigo,
    desp_grado,desp_nombre,desp_clase,desp_tiempo,desp_banco,desp_cuenta,
    desp_dependencia,desp_depen,desp_cedord,desp_registro,desp_plataforma,
    desp_sueldo,desp_bono,desp_indenmiza,desp_completa,desp_bono14,desp_aguinaldo,
    desp_vacacional,desp_totasig,desp_presipm,desp_finipm,desp_optipm,
    desp_pcsipm,desp_bazipm,desp_vivipm,desp_faripm,desp_bolipm,desp_totipm,
    desp_hreal,desp_indus,desp_totdesc,desp_mfp,desp_mdn,desp_total,accion,
    usuario,hora)  values (antes.catalogo ,antes.gra_codigo ,antes.grado 
    ,antes.nombre ,antes.clase ,antes.tiempo ,antes.banco ,antes.cuenta 
    ,antes.dependencia ,antes.depen ,antes.cedord ,antes.registro ,antes.plataforma 
    ,antes.sueldo ,antes.bono ,antes.indenmiza ,antes.completa ,antes.bono14 
    ,antes.aguinaldo ,antes.vacacional ,antes.totasig ,antes.presipm 
    ,antes.finipm ,antes.optipm ,antes.pcsipm ,antes.bazipm ,antes.vivipm 
    ,antes.faripm ,antes.bolipm ,antes.totipm ,antes.hreal ,antes.indus 
    ,antes.totdesc ,antes.mfp ,antes.mdn ,antes.total ,NULL ,NULL ,' '
     ,' ' ,NULL ,NULL ,NULL ,' ' ,NULL ,' ' ,' ' ,NULL ,NULL ,' ' ,' ' ,' ' 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_f_resumen update on "informix".f_resumen 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_f_resumen (r_year,r_mes,r_clase,
    r_cgrado,r_grado,r_asignacion,r_cantidad,r_monto,desp_r_year,desp_r_mes,
    desp_r_clase,desp_r_cgrado,desp_r_grado,desp_r_asignacion,desp_r_cantidad,
    desp_r_monto,accion,usuario,hora)  values (antes.r_year ,antes.r_mes 
    ,antes.r_clase ,antes.r_cgrado ,antes.r_grado ,antes.r_asignacion 
    ,antes.r_cantidad ,antes.r_monto ,luego.r_year ,luego.r_mes ,luego.r_clase 
    ,luego.r_cgrado ,luego.r_grado ,luego.r_asignacion ,luego.r_cantidad 
    ,luego.r_monto ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_f_resumen insert on "informix".f_resumen 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_f_resumen (r_year,r_mes,r_clase,
    r_cgrado,r_grado,r_asignacion,r_cantidad,r_monto,desp_r_year,desp_r_mes,
    desp_r_clase,desp_r_cgrado,desp_r_grado,desp_r_asignacion,desp_r_cantidad,
    desp_r_monto,accion,usuario,hora)  values (NULL ,NULL ,' ' ,NULL ,
    ' ' ,' ' ,NULL ,' ' ,luego.r_year ,luego.r_mes ,luego.r_clase ,luego.r_cgrado 
    ,luego.r_grado ,luego.r_asignacion ,luego.r_cantidad ,luego.r_monto 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_f_resumen delete on "informix".f_resumen 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_f_resumen (r_year,r_mes,r_clase,
    r_cgrado,r_grado,r_asignacion,r_cantidad,r_monto,desp_r_year,desp_r_mes,
    desp_r_clase,desp_r_cgrado,desp_r_grado,desp_r_asignacion,desp_r_cantidad,
    desp_r_monto,accion,usuario,hora)  values (antes.r_year ,antes.r_mes 
    ,antes.r_clase ,antes.r_cgrado ,antes.r_grado ,antes.r_asignacion 
    ,antes.r_cantidad ,antes.r_monto ,NULL ,NULL ,' ' ,NULL ,' ' ,' ' ,NULL 
    ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_f_datosfza update on "informix".f_datosfza 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_f_datosfza (df_cdep,df_dependencia,
    df_clase,df_dclase,df_cgrado,df_totales,df_llenas,df_vacantes,desp_df_cdep,
    desp_df_dependencia,desp_df_clase,desp_df_dclase,desp_df_cgrado,desp_df_totales,
    desp_df_llenas,desp_df_vacantes,accion,usuario,hora)  values (antes.df_cdep 
    ,antes.df_dependencia ,antes.df_clase ,antes.df_dclase ,antes.df_cgrado 
    ,antes.df_totales ,antes.df_llenas ,antes.df_vacantes ,luego.df_cdep 
    ,luego.df_dependencia ,luego.df_clase ,luego.df_dclase ,luego.df_cgrado 
    ,luego.df_totales ,luego.df_llenas ,luego.df_vacantes ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_f_datosfza insert on "informix".f_datosfza 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_f_datosfza (df_cdep,df_dependencia,
    df_clase,df_dclase,df_cgrado,df_totales,df_llenas,df_vacantes,desp_df_cdep,
    desp_df_dependencia,desp_df_clase,desp_df_dclase,desp_df_cgrado,desp_df_totales,
    desp_df_llenas,desp_df_vacantes,accion,usuario,hora)  values (NULL 
    ,' ' ,' ' ,' ' ,NULL ,NULL ,NULL ,NULL ,luego.df_cdep ,luego.df_dependencia 
    ,luego.df_clase ,luego.df_dclase ,luego.df_cgrado ,luego.df_totales 
    ,luego.df_llenas ,luego.df_vacantes ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_f_datosfza delete on "informix".f_datosfza 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_f_datosfza (df_cdep,df_dependencia,
    df_clase,df_dclase,df_cgrado,df_totales,df_llenas,df_vacantes,desp_df_cdep,
    desp_df_dependencia,desp_df_clase,desp_df_dclase,desp_df_cgrado,desp_df_totales,
    desp_df_llenas,desp_df_vacantes,accion,usuario,hora)  values (antes.df_cdep 
    ,antes.df_dependencia ,antes.df_clase ,antes.df_dclase ,antes.df_cgrado 
    ,antes.df_totales ,antes.df_llenas ,antes.df_vacantes ,NULL ,' ' ,
    ' ' ,' ' ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_aplicaciones update on "informix"
    .aplicaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_aplicaciones (codigo,aplicacion,
    desp_codigo,desp_aplicacion,accion,usuario,hora)  values (antes.codigo 
    ,antes.aplicacion ,luego.codigo ,luego.aplicacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_aplicaciones insert on "informix"
    .aplicaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_aplicaciones (codigo,aplicacion,
    desp_codigo,desp_aplicacion,accion,usuario,hora)  values (NULL ,' '
     ,luego.codigo ,luego.aplicacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_aplicaciones delete on "informix"
    .aplicaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_aplicaciones (codigo,aplicacion,
    desp_codigo,desp_aplicacion,accion,usuario,hora)  values (antes.codigo 
    ,antes.aplicacion ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_divisiones update on "informix".divisiones 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_divisiones (codigo,division,
    desp_codigo,desp_division,accion,usuario,hora)  values (antes.codigo 
    ,antes.division ,luego.codigo ,luego.division ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_divisiones insert on "informix".divisiones 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_divisiones (codigo,division,
    desp_codigo,desp_division,accion,usuario,hora)  values (NULL ,' ' 
    ,luego.codigo ,luego.division ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_divisiones delete on "informix".divisiones 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_divisiones (codigo,division,
    desp_codigo,desp_division,accion,usuario,hora)  values (antes.codigo 
    ,antes.division ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_negociados update on "informix".negociados 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_negociados (codigo,negociado,
    desp_codigo,desp_negociado,accion,usuario,hora)  values (antes.codigo 
    ,antes.negociado ,luego.codigo ,luego.negociado ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_negociados insert on "informix".negociados 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_negociados (codigo,negociado,
    desp_codigo,desp_negociado,accion,usuario,hora)  values (NULL ,' '
     ,luego.codigo ,luego.negociado ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_negociados delete on "informix".negociados 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_negociados (codigo,negociado,
    desp_codigo,desp_negociado,accion,usuario,hora)  values (antes.codigo 
    ,antes.negociado ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_u_comisiones update on "informix"
    .u_comisiones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_u_comisiones (usuaryo,clave,
    desp_usuaryo,desp_clave,accion,usuario,hora)  values (antes.usuaryo 
    ,antes.clave ,luego.usuaryo ,luego.clave ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_u_comisiones insert on "informix"
    .u_comisiones referencing new as luego
    for each row
        (
        insert into "informix".aud_u_comisiones (usuaryo,clave,
    desp_usuaryo,desp_clave,accion,usuario,hora)  values (NULL ,' ' ,luego.usuaryo 
    ,luego.clave ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_u_comisiones delete on "informix"
    .u_comisiones referencing old as antes
    for each row
        (
        insert into "informix".aud_u_comisiones (usuaryo,clave,
    desp_usuaryo,desp_clave,accion,usuario,hora)  values (antes.usuaryo 
    ,antes.clave ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_f_ipm_cart update on "informix".f_ipm_cart 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_f_ipm_cart (ipc_correlativo,
    ipc_fecha_env,ipc_nu_credito,ipc_catalogo,ipc_monto,ipc_codigo,ipc_status,
    ipc_motivo,ipc_saldo,desp_ipc_correlativo,desp_ipc_fecha_env,desp_ipc_nu_credito,
    desp_ipc_catalogo,desp_ipc_monto,desp_ipc_codigo,desp_ipc_status,
    desp_ipc_motivo,desp_ipc_saldo,accion,usuario,hora)  values (antes.ipc_correlativo 
    ,antes.ipc_fecha_env ,antes.ipc_nu_credito ,antes.ipc_catalogo ,antes.ipc_monto 
    ,antes.ipc_codigo ,antes.ipc_status ,antes.ipc_motivo ,antes.ipc_saldo 
    ,luego.ipc_correlativo ,luego.ipc_fecha_env ,luego.ipc_nu_credito 
    ,luego.ipc_catalogo ,luego.ipc_monto ,luego.ipc_codigo ,luego.ipc_status 
    ,luego.ipc_motivo ,luego.ipc_saldo ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_f_ipm_cart insert on "informix".f_ipm_cart 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_f_ipm_cart (ipc_correlativo,
    ipc_fecha_env,ipc_nu_credito,ipc_catalogo,ipc_monto,ipc_codigo,ipc_status,
    ipc_motivo,ipc_saldo,desp_ipc_correlativo,desp_ipc_fecha_env,desp_ipc_nu_credito,
    desp_ipc_catalogo,desp_ipc_monto,desp_ipc_codigo,desp_ipc_status,
    desp_ipc_motivo,desp_ipc_saldo,accion,usuario,hora)  values (NULL 
    ,' ' ,' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.ipc_correlativo ,luego.ipc_fecha_env 
    ,luego.ipc_nu_credito ,luego.ipc_catalogo ,luego.ipc_monto ,luego.ipc_codigo 
    ,luego.ipc_status ,luego.ipc_motivo ,luego.ipc_saldo ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_f_ipm_cart delete on "informix".f_ipm_cart 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_f_ipm_cart (ipc_correlativo,
    ipc_fecha_env,ipc_nu_credito,ipc_catalogo,ipc_monto,ipc_codigo,ipc_status,
    ipc_motivo,ipc_saldo,desp_ipc_correlativo,desp_ipc_fecha_env,desp_ipc_nu_credito,
    desp_ipc_catalogo,desp_ipc_monto,desp_ipc_codigo,desp_ipc_status,
    desp_ipc_motivo,desp_ipc_saldo,accion,usuario,hora)  values (antes.ipc_correlativo 
    ,antes.ipc_fecha_env ,antes.ipc_nu_credito ,antes.ipc_catalogo ,antes.ipc_monto 
    ,antes.ipc_codigo ,antes.ipc_status ,antes.ipc_motivo ,antes.ipc_saldo 
    ,NULL ,' ' ,' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".upd_agtsa2 update on "informix".agtsa 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_agtsa (antes1,antes2,antes3,
    antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,despues1,
    despues2,despues3,despues4,despues5,despues6,despues7,despues8,despues9,
    despues10,despues11,hora,accion,usuario,tabname)  values (antes.ag_catalogo 
    ,antes.ag_monto ,antes.ag_descuento ,antes.ag_saldo ,antes.ag_des_flag 
    ,antes.ag_poliza ,antes.ag_recibo ,antes.ag_agente ,antes.ag_depen 
    ,antes.ag_grado ,antes.ag_clase ,luego.ag_catalogo ,luego.ag_monto 
    ,luego.ag_descuento ,luego.ag_saldo ,luego.ag_des_flag ,luego.ag_poliza 
    ,luego.ag_recibo ,luego.ag_agente ,luego.ag_depen ,luego.ag_grado 
    ,luego.ag_clase ,CURRENT year to fraction(3) ,'U' ,USER ,'agtsa' ));
    

create trigger "informix".ins_agtsa2 insert on "informix".agtsa 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_agtsa (antes1,antes2,antes3,
    antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,despues1,
    despues2,despues3,despues4,despues5,despues6,despues7,despues8,despues9,
    despues10,despues11,hora,accion,usuario,tabname)  values (' ' ,' ' 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.ag_catalogo ,luego.ag_monto 
    ,luego.ag_descuento ,luego.ag_saldo ,luego.ag_des_flag ,luego.ag_poliza 
    ,luego.ag_recibo ,luego.ag_agente ,luego.ag_depen ,luego.ag_grado 
    ,luego.ag_clase ,CURRENT year to fraction(3) ,'I' ,USER ,'agtsa' ));
    

create trigger "informix".del_agtsa2 delete on "informix".agtsa 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_agtsa (antes1,antes2,antes3,
    antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,despues1,
    despues2,despues3,despues4,despues5,despues6,despues7,despues8,despues9,
    despues10,despues11,hora,accion,usuario,tabname)  values (antes.ag_catalogo 
    ,antes.ag_monto ,antes.ag_descuento ,antes.ag_saldo ,antes.ag_des_flag 
    ,antes.ag_poliza ,antes.ag_recibo ,antes.ag_agente ,antes.ag_depen 
    ,antes.ag_grado ,antes.ag_clase ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,CURRENT year to fraction(3) ,'D' ,USER ,'agtsa' ));

create trigger "informix".del_asamblea2 delete on "informix".asamblea 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_asamblea (as_catalogo,as_cantidad,
    desp_as_catalogo,desp_as_cantidad,accion,usuario,hora)  values (antes.as_catalogo 
    ,antes.as_cantidad ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_asamblea2 insert on "informix".asamblea 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_asamblea (as_catalogo,as_cantidad,
    desp_as_catalogo,desp_as_cantidad,accion,usuario,hora)  values (NULL 
    ,NULL ,luego.as_catalogo ,luego.as_cantidad ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_asamblea2 update on "informix".asamblea 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_asamblea (as_catalogo,as_cantidad,
    desp_as_catalogo,desp_as_cantidad,accion,usuario,hora)  values (antes.as_catalogo 
    ,antes.as_cantidad ,luego.as_catalogo ,luego.as_cantidad ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".upd_banejer_car2 update on "informix"
    .banejer_car referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_banejer_car (antes1,antes2,
    antes3,antes4,antes5,antes6,antes7,antes8,antes9,despues1,despues2,
    despues3,despues4,despues5,despues6,despues7,despues8,despues9,hora,
    accion,usuario,tabname)  values (antes.car_prestamo ,antes.car_catalogo 
    ,antes.car_nombre ,antes.car_monto ,antes.car_cuota ,antes.car_saldo 
    ,antes.car_intereses ,antes.car_si_no ,antes.car_cod_1_2 ,luego.car_prestamo 
    ,luego.car_catalogo ,luego.car_nombre ,luego.car_monto ,luego.car_cuota 
    ,luego.car_saldo ,luego.car_intereses ,luego.car_si_no ,luego.car_cod_1_2 
    ,CURRENT year to fraction(3) ,'U' ,USER ,'banejer_car' ));

create trigger "informix".ins_banejer_car2 insert on "informix"
    .banejer_car referencing new as luego
    for each row
        (
        insert into "informix".aud_banejer_car (antes1,antes2,
    antes3,antes4,antes5,antes6,antes7,antes8,antes9,despues1,despues2,
    despues3,despues4,despues5,despues6,despues7,despues8,despues9,hora,
    accion,usuario,tabname)  values (' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,
    ' ' ,luego.car_prestamo ,luego.car_catalogo ,luego.car_nombre ,luego.car_monto 
    ,luego.car_cuota ,luego.car_saldo ,luego.car_intereses ,luego.car_si_no 
    ,luego.car_cod_1_2 ,CURRENT year to fraction(3) ,'I' ,USER ,'banejer_car'
     ));

create trigger "informix".del_banejer_car2 delete on "informix"
    .banejer_car referencing old as antes
    for each row
        (
        insert into "informix".aud_banejer_car (antes1,antes2,
    antes3,antes4,antes5,antes6,antes7,antes8,antes9,despues1,despues2,
    despues3,despues4,despues5,despues6,despues7,despues8,despues9,hora,
    accion,usuario,tabname)  values (antes.car_prestamo ,antes.car_catalogo 
    ,antes.car_nombre ,antes.car_monto ,antes.car_cuota ,antes.car_saldo 
    ,antes.car_intereses ,antes.car_si_no ,antes.car_cod_1_2 ,' ' ,' ' 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,CURRENT year to fraction(3) ,'D' ,USER 
    ,'banejer_car' ));

create trigger "informix".del_dfdes_gra2 delete on "informix".dfdes_gra 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_dfdes_gra (dfdg_catalogo,dfdg_codigo,
    dfdg_nu_reg,dfdg_cod_control,dfdg_tipo_desc,dfdg_fec_ini,dfdg_ult_act,
    dfdg_fec_cer,dfdg_monto,dfdg_saldo,dfdg_mensual,dfdg_tot_cuotas,dfdg_num_cuotas,
    dfdg_documen,dfdg_codeudor,dfdg_nom_bene,dfdg_juz_con,dfdg_si_no,
    desp_dfdg_catalogo,desp_dfdg_codigo,desp_dfdg_nu_reg,desp_dfdg_cod_control,
    desp_dfdg_tipo_desc,desp_dfdg_fec_ini,desp_dfdg_ult_act,desp_dfdg_fec_cer,
    desp_dfdg_monto,desp_dfdg_saldo,desp_dfdg_mensual,desp_dfdg_tot_cuotas,
    desp_dfdg_num_cuotas,desp_dfdg_documen,desp_dfdg_codeudor,desp_dfdg_nom_bene,
    desp_dfdg_juz_con,desp_dfdg_si_no,accion,usuario,hora)  values (antes.dfdg_catalogo 
    ,antes.dfdg_codigo ,antes.dfdg_nu_reg ,antes.dfdg_cod_control ,antes.dfdg_tipo_desc 
    ,antes.dfdg_fec_ini ,antes.dfdg_ult_act ,antes.dfdg_fec_cer ,antes.dfdg_monto 
    ,antes.dfdg_saldo ,antes.dfdg_mensual ,antes.dfdg_tot_cuotas ,antes.dfdg_num_cuotas 
    ,antes.dfdg_documen ,antes.dfdg_codeudor ,antes.dfdg_nom_bene ,antes.dfdg_juz_con 
    ,antes.dfdg_si_no ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL 
    ,NULL ,'' ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_dfdes_gra2 insert on "informix".dfdes_gra 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_dfdes_gra (dfdg_catalogo,dfdg_codigo,
    dfdg_nu_reg,dfdg_cod_control,dfdg_tipo_desc,dfdg_fec_ini,dfdg_ult_act,
    dfdg_fec_cer,dfdg_monto,dfdg_saldo,dfdg_mensual,dfdg_tot_cuotas,dfdg_num_cuotas,
    dfdg_documen,dfdg_codeudor,dfdg_nom_bene,dfdg_juz_con,dfdg_si_no,
    desp_dfdg_catalogo,desp_dfdg_codigo,desp_dfdg_nu_reg,desp_dfdg_cod_control,
    desp_dfdg_tipo_desc,desp_dfdg_fec_ini,desp_dfdg_ult_act,desp_dfdg_fec_cer,
    desp_dfdg_monto,desp_dfdg_saldo,desp_dfdg_mensual,desp_dfdg_tot_cuotas,
    desp_dfdg_num_cuotas,desp_dfdg_documen,desp_dfdg_codeudor,desp_dfdg_nom_bene,
    desp_dfdg_juz_con,desp_dfdg_si_no,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,NULL ,'' ,''
     ,'' ,luego.dfdg_catalogo ,luego.dfdg_codigo ,luego.dfdg_nu_reg ,luego.dfdg_cod_control 
    ,luego.dfdg_tipo_desc ,luego.dfdg_fec_ini ,luego.dfdg_ult_act ,luego.dfdg_fec_cer 
    ,luego.dfdg_monto ,luego.dfdg_saldo ,luego.dfdg_mensual ,luego.dfdg_tot_cuotas 
    ,luego.dfdg_num_cuotas ,luego.dfdg_documen ,luego.dfdg_codeudor ,
    luego.dfdg_nom_bene ,luego.dfdg_juz_con ,luego.dfdg_si_no ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_dfdes_gra2 update on "informix".dfdes_gra 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dfdes_gra (dfdg_catalogo,dfdg_codigo,
    dfdg_nu_reg,dfdg_cod_control,dfdg_tipo_desc,dfdg_fec_ini,dfdg_ult_act,
    dfdg_fec_cer,dfdg_monto,dfdg_saldo,dfdg_mensual,dfdg_tot_cuotas,dfdg_num_cuotas,
    dfdg_documen,dfdg_codeudor,dfdg_nom_bene,dfdg_juz_con,dfdg_si_no,
    desp_dfdg_catalogo,desp_dfdg_codigo,desp_dfdg_nu_reg,desp_dfdg_cod_control,
    desp_dfdg_tipo_desc,desp_dfdg_fec_ini,desp_dfdg_ult_act,desp_dfdg_fec_cer,
    desp_dfdg_monto,desp_dfdg_saldo,desp_dfdg_mensual,desp_dfdg_tot_cuotas,
    desp_dfdg_num_cuotas,desp_dfdg_documen,desp_dfdg_codeudor,desp_dfdg_nom_bene,
    desp_dfdg_juz_con,desp_dfdg_si_no,accion,usuario,hora)  values (antes.dfdg_catalogo 
    ,antes.dfdg_codigo ,antes.dfdg_nu_reg ,antes.dfdg_cod_control ,antes.dfdg_tipo_desc 
    ,antes.dfdg_fec_ini ,antes.dfdg_ult_act ,antes.dfdg_fec_cer ,antes.dfdg_monto 
    ,antes.dfdg_saldo ,antes.dfdg_mensual ,antes.dfdg_tot_cuotas ,antes.dfdg_num_cuotas 
    ,antes.dfdg_documen ,antes.dfdg_codeudor ,antes.dfdg_nom_bene ,antes.dfdg_juz_con 
    ,antes.dfdg_si_no ,luego.dfdg_catalogo ,luego.dfdg_codigo ,luego.dfdg_nu_reg 
    ,luego.dfdg_cod_control ,luego.dfdg_tipo_desc ,luego.dfdg_fec_ini 
    ,luego.dfdg_ult_act ,luego.dfdg_fec_cer ,luego.dfdg_monto ,luego.dfdg_saldo 
    ,luego.dfdg_mensual ,luego.dfdg_tot_cuotas ,luego.dfdg_num_cuotas 
    ,luego.dfdg_documen ,luego.dfdg_codeudor ,luego.dfdg_nom_bene ,luego.dfdg_juz_con 
    ,luego.dfdg_si_no ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dfdes_grat2 delete on "informix"
    .dfdes_grat referencing old as antes
    for each row
        (
        insert into "informix".aud_dfdes_grat (dfdg_catalogo,
    dfdg_codigo,dfdg_nu_reg,dfdg_cod_control,dfdg_tipo_desc,dfdg_fec_ini,
    dfdg_ult_act,dfdg_fec_cer,dfdg_monto,dfdg_saldo,dfdg_mensual,dfdg_tot_cuotas,
    dfdg_num_cuotas,dfdg_documen,dfdg_codeudor,dfdg_nom_bene,dfdg_juz_con,
    dfdg_si_no,desp_dfdg_catalogo,desp_dfdg_codigo,desp_dfdg_nu_reg,desp_dfdg_cod_control,
    desp_dfdg_tipo_desc,desp_dfdg_fec_ini,desp_dfdg_ult_act,desp_dfdg_fec_cer,
    desp_dfdg_monto,desp_dfdg_saldo,desp_dfdg_mensual,desp_dfdg_tot_cuotas,
    desp_dfdg_num_cuotas,desp_dfdg_documen,desp_dfdg_codeudor,desp_dfdg_nom_bene,
    desp_dfdg_juz_con,desp_dfdg_si_no,accion,usuario,hora)  values (antes.dfdg_catalogo 
    ,antes.dfdg_codigo ,antes.dfdg_nu_reg ,antes.dfdg_cod_control ,antes.dfdg_tipo_desc 
    ,antes.dfdg_fec_ini ,antes.dfdg_ult_act ,antes.dfdg_fec_cer ,antes.dfdg_monto 
    ,antes.dfdg_saldo ,antes.dfdg_mensual ,antes.dfdg_tot_cuotas ,antes.dfdg_num_cuotas 
    ,antes.dfdg_documen ,antes.dfdg_codeudor ,antes.dfdg_nom_bene ,antes.dfdg_juz_con 
    ,antes.dfdg_si_no ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL 
    ,NULL ,'' ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_dfdes_grat2 insert on "informix"
    .dfdes_grat referencing new as luego
    for each row
        (
        insert into "informix".aud_dfdes_grat (dfdg_catalogo,
    dfdg_codigo,dfdg_nu_reg,dfdg_cod_control,dfdg_tipo_desc,dfdg_fec_ini,
    dfdg_ult_act,dfdg_fec_cer,dfdg_monto,dfdg_saldo,dfdg_mensual,dfdg_tot_cuotas,
    dfdg_num_cuotas,dfdg_documen,dfdg_codeudor,dfdg_nom_bene,dfdg_juz_con,
    dfdg_si_no,desp_dfdg_catalogo,desp_dfdg_codigo,desp_dfdg_nu_reg,desp_dfdg_cod_control,
    desp_dfdg_tipo_desc,desp_dfdg_fec_ini,desp_dfdg_ult_act,desp_dfdg_fec_cer,
    desp_dfdg_monto,desp_dfdg_saldo,desp_dfdg_mensual,desp_dfdg_tot_cuotas,
    desp_dfdg_num_cuotas,desp_dfdg_documen,desp_dfdg_codeudor,desp_dfdg_nom_bene,
    desp_dfdg_juz_con,desp_dfdg_si_no,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,NULL ,'' ,''
     ,'' ,luego.dfdg_catalogo ,luego.dfdg_codigo ,luego.dfdg_nu_reg ,luego.dfdg_cod_control 
    ,luego.dfdg_tipo_desc ,luego.dfdg_fec_ini ,luego.dfdg_ult_act ,luego.dfdg_fec_cer 
    ,luego.dfdg_monto ,luego.dfdg_saldo ,luego.dfdg_mensual ,luego.dfdg_tot_cuotas 
    ,luego.dfdg_num_cuotas ,luego.dfdg_documen ,luego.dfdg_codeudor ,
    luego.dfdg_nom_bene ,luego.dfdg_juz_con ,luego.dfdg_si_no ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_dfdes_grat2 update on "informix"
    .dfdes_grat referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dfdes_grat (dfdg_catalogo,
    dfdg_codigo,dfdg_nu_reg,dfdg_cod_control,dfdg_tipo_desc,dfdg_fec_ini,
    dfdg_ult_act,dfdg_fec_cer,dfdg_monto,dfdg_saldo,dfdg_mensual,dfdg_tot_cuotas,
    dfdg_num_cuotas,dfdg_documen,dfdg_codeudor,dfdg_nom_bene,dfdg_juz_con,
    dfdg_si_no,desp_dfdg_catalogo,desp_dfdg_codigo,desp_dfdg_nu_reg,desp_dfdg_cod_control,
    desp_dfdg_tipo_desc,desp_dfdg_fec_ini,desp_dfdg_ult_act,desp_dfdg_fec_cer,
    desp_dfdg_monto,desp_dfdg_saldo,desp_dfdg_mensual,desp_dfdg_tot_cuotas,
    desp_dfdg_num_cuotas,desp_dfdg_documen,desp_dfdg_codeudor,desp_dfdg_nom_bene,
    desp_dfdg_juz_con,desp_dfdg_si_no,accion,usuario,hora)  values (antes.dfdg_catalogo 
    ,antes.dfdg_codigo ,antes.dfdg_nu_reg ,antes.dfdg_cod_control ,antes.dfdg_tipo_desc 
    ,antes.dfdg_fec_ini ,antes.dfdg_ult_act ,antes.dfdg_fec_cer ,antes.dfdg_monto 
    ,antes.dfdg_saldo ,antes.dfdg_mensual ,antes.dfdg_tot_cuotas ,antes.dfdg_num_cuotas 
    ,antes.dfdg_documen ,antes.dfdg_codeudor ,antes.dfdg_nom_bene ,antes.dfdg_juz_con 
    ,antes.dfdg_si_no ,luego.dfdg_catalogo ,luego.dfdg_codigo ,luego.dfdg_nu_reg 
    ,luego.dfdg_cod_control ,luego.dfdg_tipo_desc ,luego.dfdg_fec_ini 
    ,luego.dfdg_ult_act ,luego.dfdg_fec_cer ,luego.dfdg_monto ,luego.dfdg_saldo 
    ,luego.dfdg_mensual ,luego.dfdg_tot_cuotas ,luego.dfdg_num_cuotas 
    ,luego.dfdg_documen ,luego.dfdg_codeudor ,luego.dfdg_nom_bene ,luego.dfdg_juz_con 
    ,luego.dfdg_si_no ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dfdes_inv2 delete on "informix".dfdes_inv 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_dfdes_inv (dfdi_catalogo,dfdi_codigo,
    dfdi_nu_reg,dfdi_cod_control,dfdi_tipo_desc,dfdi_fec_ini,dfdi_ult_act,
    dfdi_fec_cer,dfdi_monto,dfdi_saldo,dfdi_mensual,dfdi_tot_cuotas,dfdi_num_cuotas,
    dfdi_documen,dfdi_codeudor,dfdi_nom_bene,dfdi_juz_con,dfdi_si_no,
    desp_dfdi_catalogo,desp_dfdi_codigo,desp_dfdi_nu_reg,desp_dfdi_cod_control,
    desp_dfdi_tipo_desc,desp_dfdi_fec_ini,desp_dfdi_ult_act,desp_dfdi_fec_cer,
    desp_dfdi_monto,desp_dfdi_saldo,desp_dfdi_mensual,desp_dfdi_tot_cuotas,
    desp_dfdi_num_cuotas,desp_dfdi_documen,desp_dfdi_codeudor,desp_dfdi_nom_bene,
    desp_dfdi_juz_con,desp_dfdi_si_no,accion,usuario,hora)  values (antes.dfdi_catalogo 
    ,antes.dfdi_codigo ,antes.dfdi_nu_reg ,antes.dfdi_cod_control ,antes.dfdi_tipo_desc 
    ,antes.dfdi_fec_ini ,antes.dfdi_ult_act ,antes.dfdi_fec_cer ,antes.dfdi_monto 
    ,antes.dfdi_saldo ,antes.dfdi_mensual ,antes.dfdi_tot_cuotas ,antes.dfdi_num_cuotas 
    ,antes.dfdi_documen ,antes.dfdi_codeudor ,antes.dfdi_nom_bene ,antes.dfdi_juz_con 
    ,antes.dfdi_si_no ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL 
    ,NULL ,'' ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_dfdes_inv2 insert on "informix".dfdes_inv 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_dfdes_inv (dfdi_catalogo,dfdi_codigo,
    dfdi_nu_reg,dfdi_cod_control,dfdi_tipo_desc,dfdi_fec_ini,dfdi_ult_act,
    dfdi_fec_cer,dfdi_monto,dfdi_saldo,dfdi_mensual,dfdi_tot_cuotas,dfdi_num_cuotas,
    dfdi_documen,dfdi_codeudor,dfdi_nom_bene,dfdi_juz_con,dfdi_si_no,
    desp_dfdi_catalogo,desp_dfdi_codigo,desp_dfdi_nu_reg,desp_dfdi_cod_control,
    desp_dfdi_tipo_desc,desp_dfdi_fec_ini,desp_dfdi_ult_act,desp_dfdi_fec_cer,
    desp_dfdi_monto,desp_dfdi_saldo,desp_dfdi_mensual,desp_dfdi_tot_cuotas,
    desp_dfdi_num_cuotas,desp_dfdi_documen,desp_dfdi_codeudor,desp_dfdi_nom_bene,
    desp_dfdi_juz_con,desp_dfdi_si_no,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,NULL ,'' ,''
     ,'' ,luego.dfdi_catalogo ,luego.dfdi_codigo ,luego.dfdi_nu_reg ,luego.dfdi_cod_control 
    ,luego.dfdi_tipo_desc ,luego.dfdi_fec_ini ,luego.dfdi_ult_act ,luego.dfdi_fec_cer 
    ,luego.dfdi_monto ,luego.dfdi_saldo ,luego.dfdi_mensual ,luego.dfdi_tot_cuotas 
    ,luego.dfdi_num_cuotas ,luego.dfdi_documen ,luego.dfdi_codeudor ,
    luego.dfdi_nom_bene ,luego.dfdi_juz_con ,luego.dfdi_si_no ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_dfdes_inv2 update on "informix".dfdes_inv 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dfdes_inv (dfdi_catalogo,dfdi_codigo,
    dfdi_nu_reg,dfdi_cod_control,dfdi_tipo_desc,dfdi_fec_ini,dfdi_ult_act,
    dfdi_fec_cer,dfdi_monto,dfdi_saldo,dfdi_mensual,dfdi_tot_cuotas,dfdi_num_cuotas,
    dfdi_documen,dfdi_codeudor,dfdi_nom_bene,dfdi_juz_con,dfdi_si_no,
    desp_dfdi_catalogo,desp_dfdi_codigo,desp_dfdi_nu_reg,desp_dfdi_cod_control,
    desp_dfdi_tipo_desc,desp_dfdi_fec_ini,desp_dfdi_ult_act,desp_dfdi_fec_cer,
    desp_dfdi_monto,desp_dfdi_saldo,desp_dfdi_mensual,desp_dfdi_tot_cuotas,
    desp_dfdi_num_cuotas,desp_dfdi_documen,desp_dfdi_codeudor,desp_dfdi_nom_bene,
    desp_dfdi_juz_con,desp_dfdi_si_no,accion,usuario,hora)  values (antes.dfdi_catalogo 
    ,antes.dfdi_codigo ,antes.dfdi_nu_reg ,antes.dfdi_cod_control ,antes.dfdi_tipo_desc 
    ,antes.dfdi_fec_ini ,antes.dfdi_ult_act ,antes.dfdi_fec_cer ,antes.dfdi_monto 
    ,antes.dfdi_saldo ,antes.dfdi_mensual ,antes.dfdi_tot_cuotas ,antes.dfdi_num_cuotas 
    ,antes.dfdi_documen ,antes.dfdi_codeudor ,antes.dfdi_nom_bene ,antes.dfdi_juz_con 
    ,antes.dfdi_si_no ,luego.dfdi_catalogo ,luego.dfdi_codigo ,luego.dfdi_nu_reg 
    ,luego.dfdi_cod_control ,luego.dfdi_tipo_desc ,luego.dfdi_fec_ini 
    ,luego.dfdi_ult_act ,luego.dfdi_fec_cer ,luego.dfdi_monto ,luego.dfdi_saldo 
    ,luego.dfdi_mensual ,luego.dfdi_tot_cuotas ,luego.dfdi_num_cuotas 
    ,luego.dfdi_documen ,luego.dfdi_codeudor ,luego.dfdi_nom_bene ,luego.dfdi_juz_con 
    ,luego.dfdi_si_no ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dfdes_invt2 delete on "informix"
    .dfdes_invt referencing old as antes
    for each row
        (
        insert into "informix".aud_dfdes_invt (dfdi_catalogo,
    dfdi_codigo,dfdi_nu_reg,dfdi_cod_control,dfdi_tipo_desc,dfdi_fec_ini,
    didi_ult_act,dfdi_fec_cer,dfdi_monto,dfdi_saldo,dfdi_mensual,dfdi_tot_cuotas,
    dfdi_num_cuotas,dfdi_documen,dfdi_codeudor,dfdi_nom_bene,dfdi_juz_con,
    dfdi_si_no,desp_dfdi_catalogo,desp_dfdi_codigo,desp_dfdi_nu_reg,desp_dfdi_cod_control,
    desp_dfdi_tipo_desc,desp_dfdi_fec_ini,desp_didi_ult_act,desp_dfdi_fec_cer,
    desp_dfdi_monto,desp_dfdi_saldo,desp_dfdi_mensual,desp_dfdi_tot_cuotas,
    desp_dfdi_num_cuotas,desp_dfdi_documen,desp_dfdi_codeudor,desp_dfdi_nom_bene,
    desp_dfdi_juz_con,desp_dfdi_si_no,accion,usuario,hora)  values (antes.dfdi_catalogo 
    ,antes.dfdi_codigo ,antes.dfdi_nu_reg ,antes.dfdi_cod_control ,antes.dfdi_tipo_desc 
    ,antes.dfdi_fec_ini ,antes.didi_ult_act ,antes.dfdi_fec_cer ,antes.dfdi_monto 
    ,antes.dfdi_saldo ,antes.dfdi_mensual ,antes.dfdi_tot_cuotas ,antes.dfdi_num_cuotas 
    ,antes.dfdi_documen ,antes.dfdi_codeudor ,antes.dfdi_nom_bene ,antes.dfdi_juz_con 
    ,antes.dfdi_si_no ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL 
    ,NULL ,'' ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_dfdes_invt2 insert on "informix"
    .dfdes_invt referencing new as luego
    for each row
        (
        insert into "informix".aud_dfdes_invt (dfdi_catalogo,
    dfdi_codigo,dfdi_nu_reg,dfdi_cod_control,dfdi_tipo_desc,dfdi_fec_ini,
    didi_ult_act,dfdi_fec_cer,dfdi_monto,dfdi_saldo,dfdi_mensual,dfdi_tot_cuotas,
    dfdi_num_cuotas,dfdi_documen,dfdi_codeudor,dfdi_nom_bene,dfdi_juz_con,
    dfdi_si_no,desp_dfdi_catalogo,desp_dfdi_codigo,desp_dfdi_nu_reg,desp_dfdi_cod_control,
    desp_dfdi_tipo_desc,desp_dfdi_fec_ini,desp_didi_ult_act,desp_dfdi_fec_cer,
    desp_dfdi_monto,desp_dfdi_saldo,desp_dfdi_mensual,desp_dfdi_tot_cuotas,
    desp_dfdi_num_cuotas,desp_dfdi_documen,desp_dfdi_codeudor,desp_dfdi_nom_bene,
    desp_dfdi_juz_con,desp_dfdi_si_no,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,NULL ,'' ,''
     ,'' ,luego.dfdi_catalogo ,luego.dfdi_codigo ,luego.dfdi_nu_reg ,luego.dfdi_cod_control 
    ,luego.dfdi_tipo_desc ,luego.dfdi_fec_ini ,luego.didi_ult_act ,luego.dfdi_fec_cer 
    ,luego.dfdi_monto ,luego.dfdi_saldo ,luego.dfdi_mensual ,luego.dfdi_tot_cuotas 
    ,luego.dfdi_num_cuotas ,luego.dfdi_documen ,luego.dfdi_codeudor ,
    luego.dfdi_nom_bene ,luego.dfdi_juz_con ,luego.dfdi_si_no ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_dfdes_invt2 update on "informix"
    .dfdes_invt referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dfdes_invt (dfdi_catalogo,
    dfdi_codigo,dfdi_nu_reg,dfdi_cod_control,dfdi_tipo_desc,dfdi_fec_ini,
    didi_ult_act,dfdi_fec_cer,dfdi_monto,dfdi_saldo,dfdi_mensual,dfdi_tot_cuotas,
    dfdi_num_cuotas,dfdi_documen,dfdi_codeudor,dfdi_nom_bene,dfdi_juz_con,
    dfdi_si_no,desp_dfdi_catalogo,desp_dfdi_codigo,desp_dfdi_nu_reg,desp_dfdi_cod_control,
    desp_dfdi_tipo_desc,desp_dfdi_fec_ini,desp_didi_ult_act,desp_dfdi_fec_cer,
    desp_dfdi_monto,desp_dfdi_saldo,desp_dfdi_mensual,desp_dfdi_tot_cuotas,
    desp_dfdi_num_cuotas,desp_dfdi_documen,desp_dfdi_codeudor,desp_dfdi_nom_bene,
    desp_dfdi_juz_con,desp_dfdi_si_no,accion,usuario,hora)  values (antes.dfdi_catalogo 
    ,antes.dfdi_codigo ,antes.dfdi_nu_reg ,antes.dfdi_cod_control ,antes.dfdi_tipo_desc 
    ,antes.dfdi_fec_ini ,antes.didi_ult_act ,antes.dfdi_fec_cer ,antes.dfdi_monto 
    ,antes.dfdi_saldo ,antes.dfdi_mensual ,antes.dfdi_tot_cuotas ,antes.dfdi_num_cuotas 
    ,antes.dfdi_documen ,antes.dfdi_codeudor ,antes.dfdi_nom_bene ,antes.dfdi_juz_con 
    ,antes.dfdi_si_no ,luego.dfdi_catalogo ,luego.dfdi_codigo ,luego.dfdi_nu_reg 
    ,luego.dfdi_cod_control ,luego.dfdi_tipo_desc ,luego.dfdi_fec_ini 
    ,luego.didi_ult_act ,luego.dfdi_fec_cer ,luego.dfdi_monto ,luego.dfdi_saldo 
    ,luego.dfdi_mensual ,luego.dfdi_tot_cuotas ,luego.dfdi_num_cuotas 
    ,luego.dfdi_documen ,luego.dfdi_codeudor ,luego.dfdi_nom_bene ,luego.dfdi_juz_con 
    ,luego.dfdi_si_no ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_f_amt2 update on "informix".f_amt 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_f_amt (amt_catalogo,amt_codigo,
    amt_fecha,amt_fact,amt_monto,amt_si_no,desp_amt_catalogo,desp_amt_codigo,
    desp_amt_fecha,desp_amt_fact,desp_amt_monto,desp_amt_si_no,accion,
    usuario,hora)  values (antes.amt_catalogo ,antes.amt_codigo ,antes.amt_fecha 
    ,antes.amt_fact ,antes.amt_monto ,antes.amt_si_no ,luego.amt_catalogo 
    ,luego.amt_codigo ,luego.amt_fecha ,luego.amt_fact ,luego.amt_monto 
    ,luego.amt_si_no ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_f_amt2 insert on "informix".f_amt 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_f_amt (amt_catalogo,amt_codigo,
    amt_fecha,amt_fact,amt_monto,amt_si_no,desp_amt_catalogo,desp_amt_codigo,
    desp_amt_fecha,desp_amt_fact,desp_amt_monto,desp_amt_si_no,accion,
    usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,luego.amt_catalogo 
    ,luego.amt_codigo ,luego.amt_fecha ,luego.amt_fact ,luego.amt_monto 
    ,luego.amt_si_no ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_f_amt2 delete on "informix".f_amt 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_f_amt (amt_catalogo,amt_codigo,
    amt_fecha,amt_fact,amt_monto,amt_si_no,desp_amt_catalogo,desp_amt_codigo,
    desp_amt_fecha,desp_amt_fact,desp_amt_monto,desp_amt_si_no,accion,
    usuario,hora)  values (antes.amt_catalogo ,antes.amt_codigo ,antes.amt_fecha 
    ,antes.amt_fact ,antes.amt_monto ,antes.amt_si_no ,NULL ,NULL ,' '
     ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_f_bac2 update on "informix".f_bac 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_f_bac (bac_prestamo,bac_catalogo,
    bac_nombre,bac_monto,bac_cuota,bac_saldo,bac_intereses,bac_si_no,
    bac_cod_1_2,desp_bac_prestamo,desp_bac_catalogo,desp_bac_nombre,desp_bac_monto,
    desp_bac_cuota,desp_bac_saldo,desp_bac_intereses,desp_bac_si_no,desp_bac_cod_1_2,
    accion,usuario,hora)  values (antes.bac_prestamo ,antes.bac_catalogo 
    ,antes.bac_nombre ,antes.bac_monto ,antes.bac_cuota ,antes.bac_saldo 
    ,antes.bac_intereses ,antes.bac_si_no ,antes.bac_cod_1_2 ,luego.bac_prestamo 
    ,luego.bac_catalogo ,luego.bac_nombre ,luego.bac_monto ,luego.bac_cuota 
    ,luego.bac_saldo ,luego.bac_intereses ,luego.bac_si_no ,luego.bac_cod_1_2 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_f_bac2 insert on "informix".f_bac 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_f_bac (bac_prestamo,bac_catalogo,
    bac_nombre,bac_monto,bac_cuota,bac_saldo,bac_intereses,bac_si_no,
    bac_cod_1_2,desp_bac_prestamo,desp_bac_catalogo,desp_bac_nombre,desp_bac_monto,
    desp_bac_cuota,desp_bac_saldo,desp_bac_intereses,desp_bac_si_no,desp_bac_cod_1_2,
    accion,usuario,hora)  values (' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL 
    ,luego.bac_prestamo ,luego.bac_catalogo ,luego.bac_nombre ,luego.bac_monto 
    ,luego.bac_cuota ,luego.bac_saldo ,luego.bac_intereses ,luego.bac_si_no 
    ,luego.bac_cod_1_2 ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_f_bac2 delete on "informix".f_bac 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_f_bac (bac_prestamo,bac_catalogo,
    bac_nombre,bac_monto,bac_cuota,bac_saldo,bac_intereses,bac_si_no,
    bac_cod_1_2,desp_bac_prestamo,desp_bac_catalogo,desp_bac_nombre,desp_bac_monto,
    desp_bac_cuota,desp_bac_saldo,desp_bac_intereses,desp_bac_si_no,desp_bac_cod_1_2,
    accion,usuario,hora)  values (antes.bac_prestamo ,antes.bac_catalogo 
    ,antes.bac_nombre ,antes.bac_monto ,antes.bac_cuota ,antes.bac_saldo 
    ,antes.bac_intereses ,antes.bac_si_no ,antes.bac_cod_1_2 ,' ' ,NULL 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_f_combust2 update on "informix".f_combust 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_f_combust (ic_cat,ic_comb,
    ic_monto,ic_otro,desp_ic_cat,desp_ic_comb,desp_ic_monto,desp_ic_otro,
    accion,usuario,hora)  values (antes.ic_cat ,antes.ic_comb ,antes.ic_monto 
    ,antes.ic_otro ,luego.ic_cat ,luego.ic_comb ,luego.ic_monto ,luego.ic_otro 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_f_combust2 insert on "informix".f_combust 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_f_combust (ic_cat,ic_comb,
    ic_monto,ic_otro,desp_ic_cat,desp_ic_comb,desp_ic_monto,desp_ic_otro,
    accion,usuario,hora)  values (NULL ,NULL ,'' ,'' ,luego.ic_cat ,luego.ic_comb 
    ,luego.ic_monto ,luego.ic_otro ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_f_combust2 delete on "informix".f_combust 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_f_combust (ic_cat,ic_comb,
    ic_monto,ic_otro,desp_ic_cat,desp_ic_comb,desp_ic_monto,desp_ic_otro,
    accion,usuario,hora)  values (antes.ic_cat ,antes.ic_comb ,antes.ic_monto 
    ,antes.ic_otro ,NULL ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_f_hreal2 update on "informix".f_hreal 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_f_hreal (hr_catalogo,hr_mensual,
    hr_saldo,hr_control,desp_hr_catalogo,desp_hr_mensual,desp_hr_saldo,
    desp_hr_control,accion,usuario,hora)  values (antes.hr_catalogo ,
    antes.hr_mensual ,antes.hr_saldo ,antes.hr_control ,luego.hr_catalogo 
    ,luego.hr_mensual ,luego.hr_saldo ,luego.hr_control ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_f_hreal2 insert on "informix".f_hreal 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_f_hreal (hr_catalogo,hr_mensual,
    hr_saldo,hr_control,desp_hr_catalogo,desp_hr_mensual,desp_hr_saldo,
    desp_hr_control,accion,usuario,hora)  values (NULL ,' ' ,' ' ,' ' ,luego.hr_catalogo 
    ,luego.hr_mensual ,luego.hr_saldo ,luego.hr_control ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_f_hreal2 delete on "informix".f_hreal 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_f_hreal (hr_catalogo,hr_mensual,
    hr_saldo,hr_control,desp_hr_catalogo,desp_hr_mensual,desp_hr_saldo,
    desp_hr_control,accion,usuario,hora)  values (antes.hr_catalogo ,
    antes.hr_mensual ,antes.hr_saldo ,antes.hr_control ,NULL ,' ' ,' ' 
    ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_findustria2 update on "informix"
    .findustria referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_findustria (ind_catalogo,ind_mensual,
    ind_num,ind_control,desp_ind_catalogo,desp_ind_mensual,desp_ind_num,
    desp_ind_control,accion,usuario,hora)  values (antes.ind_catalogo 
    ,antes.ind_mensual ,antes.ind_num ,antes.ind_control ,luego.ind_catalogo 
    ,luego.ind_mensual ,luego.ind_num ,luego.ind_control ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_findustria2 delete on "informix"
    .findustria referencing old as antes
    for each row
        (
        insert into "informix".aud_findustria (ind_catalogo,ind_mensual,
    ind_num,ind_control,desp_ind_catalogo,desp_ind_mensual,desp_ind_num,
    desp_ind_control,accion,usuario,hora)  values (antes.ind_catalogo 
    ,antes.ind_mensual ,antes.ind_num ,antes.ind_control ,NULL ,'' ,NULL 
    ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_findustria2 insert on "informix"
    .findustria referencing new as luego
    for each row
        (
        insert into "informix".aud_findustria (ind_catalogo,ind_mensual,
    ind_num,ind_control,desp_ind_catalogo,desp_ind_mensual,desp_ind_num,
    desp_ind_control,accion,usuario,hora)  values (NULL ,'' ,NULL ,'' ,
    luego.ind_catalogo ,luego.ind_mensual ,luego.ind_num ,luego.ind_control 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".upd_f_asgral2 update on "informix".f_asgral 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_f_asgral (as_catalogo,as_nombre,
    as_mensual,as_si_no,as_poliza,as_solicitud,as_moneda,desp_as_catalogo,
    desp_as_nombre,desp_as_mensual,desp_as_si_no,desp_as_poliza,desp_as_solicitud,
    desp_as_moneda,accion,usuario,hora)  values (antes.as_catalogo ,antes.as_nombre 
    ,antes.as_mensual ,antes.as_si_no ,antes.as_poliza ,antes.as_solicitud 
    ,antes.as_moneda ,luego.as_catalogo ,luego.as_nombre ,luego.as_mensual 
    ,luego.as_si_no ,luego.as_poliza ,luego.as_solicitud ,luego.as_moneda 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_f_asgral2 insert on "informix".f_asgral 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_f_asgral (as_catalogo,as_nombre,
    as_mensual,as_si_no,as_poliza,as_solicitud,as_moneda,desp_as_catalogo,
    desp_as_nombre,desp_as_mensual,desp_as_si_no,desp_as_poliza,desp_as_solicitud,
    desp_as_moneda,accion,usuario,hora)  values (NULL ,' ' ,' ' ,' ' ,' '
     ,' ' ,' ' ,luego.as_catalogo ,luego.as_nombre ,luego.as_mensual ,luego.as_si_no 
    ,luego.as_poliza ,luego.as_solicitud ,luego.as_moneda ,'I' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".del_f_asgral2 delete on "informix".f_asgral 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_f_asgral (as_catalogo,as_nombre,
    as_mensual,as_si_no,as_poliza,as_solicitud,as_moneda,desp_as_catalogo,
    desp_as_nombre,desp_as_mensual,desp_as_si_no,desp_as_poliza,desp_as_solicitud,
    desp_as_moneda,accion,usuario,hora)  values (antes.as_catalogo ,antes.as_nombre 
    ,antes.as_mensual ,antes.as_si_no ,antes.as_poliza ,antes.as_solicitud 
    ,antes.as_moneda ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_mper update on "informix".mper referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_mper (catalogo,serie,grado,
    arma,nom1,nom2,ape1,ape2,ape3,ced_ord,ced_reg,fec_ext_ced,ext_ced_lugar,
    est_civil,direccion,zona,dir_lugar,telefono,sexo,fec_nac,nac_lugar,
    promocion,afil_ipm,sangre,antiguedad,bienal,plaza,desc_empleo,fec_nomb,
    ord_gral,punto_og,situacion,prima_prof,dpi,desp_catalogo,desp_serie,
    desp_grado,desp_arma,desp_nom1,desp_nom2,desp_ape1,desp_ape2,desp_ape3,
    desp_ced_ord,desp_ced_reg,desp_fec_ext_ced,desp_ext_ced_lugar,desp_est_civil,
    desp_direccion,desp_zona,desp_dir_lugar,desp_telefono,desp_sexo,desp_fec_nac,
    desp_nac_lugar,desp_promocion,desp_afil_ipm,desp_sangre,desp_antiguedad,
    desp_bienal,desp_plaza,desp_desc_empleo,desp_fec_nomb,desp_ord_gral,
    desp_punto_og,desp_situacion,desp_prima_prof,desp_dpi,accion,usuario,
    hora)  values (antes.per_catalogo ,antes.per_serie ,antes.per_grado 
    ,antes.per_arma ,antes.per_nom1 ,antes.per_nom2 ,antes.per_ape1 ,
    antes.per_ape2 ,antes.per_ape3 ,antes.per_ced_ord ,antes.per_ced_reg 
    ,antes.per_fec_ext_ced ,antes.per_ext_ced_lugar ,antes.per_est_civil 
    ,antes.per_direccion ,antes.per_zona ,antes.per_dir_lugar ,antes.per_telefono 
    ,antes.per_sexo ,antes.per_fec_nac ,antes.per_nac_lugar ,antes.per_promocion 
    ,antes.per_afil_ipm ,antes.per_sangre ,antes.per_antiguedad ,antes.per_bienal 
    ,antes.per_plaza ,antes.per_desc_empleo ,antes.per_fec_nomb ,antes.per_ord_gral 
    ,antes.per_punto_og ,antes.per_situacion ,antes.per_prima_prof ,antes.per_dpi 
    ,luego.per_catalogo ,luego.per_serie ,luego.per_grado ,luego.per_arma 
    ,luego.per_nom1 ,luego.per_nom2 ,luego.per_ape1 ,luego.per_ape2 ,
    luego.per_ape3 ,luego.per_ced_ord ,luego.per_ced_reg ,luego.per_fec_ext_ced 
    ,luego.per_ext_ced_lugar ,luego.per_est_civil ,luego.per_direccion 
    ,luego.per_zona ,luego.per_dir_lugar ,luego.per_telefono ,luego.per_sexo 
    ,luego.per_fec_nac ,luego.per_nac_lugar ,luego.per_promocion ,luego.per_afil_ipm 
    ,luego.per_sangre ,luego.per_antiguedad ,luego.per_bienal ,luego.per_plaza 
    ,luego.per_desc_empleo ,luego.per_fec_nomb ,luego.per_ord_gral ,luego.per_punto_og 
    ,luego.per_situacion ,luego.per_prima_prof ,luego.per_dpi ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_mper insert on "informix".mper referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_mper (catalogo,serie,grado,
    arma,nom1,nom2,ape1,ape2,ape3,ced_ord,ced_reg,fec_ext_ced,ext_ced_lugar,
    est_civil,direccion,zona,dir_lugar,telefono,sexo,fec_nac,nac_lugar,
    promocion,afil_ipm,sangre,antiguedad,bienal,plaza,desc_empleo,fec_nomb,
    ord_gral,punto_og,situacion,prima_prof,dpi,desp_catalogo,desp_serie,
    desp_grado,desp_arma,desp_nom1,desp_nom2,desp_ape1,desp_ape2,desp_ape3,
    desp_ced_ord,desp_ced_reg,desp_fec_ext_ced,desp_ext_ced_lugar,desp_est_civil,
    desp_direccion,desp_zona,desp_dir_lugar,desp_telefono,desp_sexo,desp_fec_nac,
    desp_nac_lugar,desp_promocion,desp_afil_ipm,desp_sangre,desp_antiguedad,
    desp_bienal,desp_plaza,desp_desc_empleo,desp_fec_nomb,desp_ord_gral,
    desp_punto_og,desp_situacion,desp_prima_prof,desp_dpi,accion,usuario,
    hora)  values (NULL ,'' ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL 
    ,'' ,'' ,'' ,NULL ,'' ,NULL ,'' ,NULL ,'' ,NULL ,'' ,'' ,NULL ,NULL ,NULL 
    ,'' ,NULL ,'' ,NULL ,'' ,NULL ,'' ,luego.per_catalogo ,luego.per_serie 
    ,luego.per_grado ,luego.per_arma ,luego.per_nom1 ,luego.per_nom2 
    ,luego.per_ape1 ,luego.per_ape2 ,luego.per_ape3 ,luego.per_ced_ord 
    ,luego.per_ced_reg ,luego.per_fec_ext_ced ,luego.per_ext_ced_lugar 
    ,luego.per_est_civil ,luego.per_direccion ,luego.per_zona ,luego.per_dir_lugar 
    ,luego.per_telefono ,luego.per_sexo ,luego.per_fec_nac ,luego.per_nac_lugar 
    ,luego.per_promocion ,luego.per_afil_ipm ,luego.per_sangre ,luego.per_antiguedad 
    ,luego.per_bienal ,luego.per_plaza ,luego.per_desc_empleo ,luego.per_fec_nomb 
    ,luego.per_ord_gral ,luego.per_punto_og ,luego.per_situacion ,luego.per_prima_prof 
    ,luego.per_dpi ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_mper delete on "informix".mper referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_mper (catalogo,serie,grado,
    arma,nom1,nom2,ape1,ape2,ape3,ced_ord,ced_reg,fec_ext_ced,ext_ced_lugar,
    est_civil,direccion,zona,dir_lugar,telefono,sexo,fec_nac,nac_lugar,
    promocion,afil_ipm,sangre,antiguedad,bienal,plaza,desc_empleo,fec_nomb,
    ord_gral,punto_og,situacion,prima_prof,dpi,desp_catalogo,desp_serie,
    desp_grado,desp_arma,desp_nom1,desp_nom2,desp_ape1,desp_ape2,desp_ape3,
    desp_ced_ord,desp_ced_reg,desp_fec_ext_ced,desp_ext_ced_lugar,desp_est_civil,
    desp_direccion,desp_zona,desp_dir_lugar,desp_telefono,desp_sexo,desp_fec_nac,
    desp_nac_lugar,desp_promocion,desp_afil_ipm,desp_sangre,desp_antiguedad,
    desp_bienal,desp_plaza,desp_desc_empleo,desp_fec_nomb,desp_ord_gral,
    desp_punto_og,desp_situacion,desp_prima_prof,desp_dpi,accion,usuario,
    hora)  values (antes.per_catalogo ,antes.per_serie ,antes.per_grado 
    ,antes.per_arma ,antes.per_nom1 ,antes.per_nom2 ,antes.per_ape1 ,
    antes.per_ape2 ,antes.per_ape3 ,antes.per_ced_ord ,antes.per_ced_reg 
    ,antes.per_fec_ext_ced ,antes.per_ext_ced_lugar ,antes.per_est_civil 
    ,antes.per_direccion ,antes.per_zona ,antes.per_dir_lugar ,antes.per_telefono 
    ,antes.per_sexo ,antes.per_fec_nac ,antes.per_nac_lugar ,antes.per_promocion 
    ,antes.per_afil_ipm ,antes.per_sangre ,antes.per_antiguedad ,antes.per_bienal 
    ,antes.per_plaza ,antes.per_desc_empleo ,antes.per_fec_nomb ,antes.per_ord_gral 
    ,antes.per_punto_og ,antes.per_situacion ,antes.per_prima_prof ,antes.per_dpi 
    ,NULL ,'' ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,'' ,'' ,NULL 
    ,'' ,NULL ,'' ,NULL ,'' ,NULL ,'' ,'' ,NULL ,NULL ,NULL ,'' ,NULL ,'' ,NULL 
    ,'' ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_permiso update on "informix".permiso 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_permiso (per_codigo,catalogo,
    fecha_inicio,fecha_fin,h_salida,h_entrada,autorizo,per_division,per_observacion,
    desp_per_codigo,desp_catalogo,desp_fecha_inicio,desp_fecha_fin,desp_h_salida,
    desp_h_entrada,desp_autorizo,desp_per_division,desp_per_observacion,
    accion,usuario,hora)  values (antes.per_codigo ,antes.catalogo ,antes.fecha_inicio 
    ,antes.fecha_fin ,antes.h_salida ,antes.h_entrada ,antes.autorizo 
    ,antes.per_division ,antes.per_observacion ,luego.per_codigo ,luego.catalogo 
    ,luego.fecha_inicio ,luego.fecha_fin ,luego.h_salida ,luego.h_entrada 
    ,luego.autorizo ,luego.per_division ,luego.per_observacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_permiso insert on "informix".permiso 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_permiso (per_codigo,catalogo,
    fecha_inicio,fecha_fin,h_salida,h_entrada,autorizo,per_division,per_observacion,
    desp_per_codigo,desp_catalogo,desp_fecha_inicio,desp_fecha_fin,desp_h_salida,
    desp_h_entrada,desp_autorizo,desp_per_division,desp_per_observacion,
    accion,usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,NULL ,NULL ,NULL 
    ,NULL ,' ' ,luego.per_codigo ,luego.catalogo ,luego.fecha_inicio ,
    luego.fecha_fin ,luego.h_salida ,luego.h_entrada ,luego.autorizo 
    ,luego.per_division ,luego.per_observacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_permiso delete on "informix".permiso 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_permiso (per_codigo,catalogo,
    fecha_inicio,fecha_fin,h_salida,h_entrada,autorizo,per_division,per_observacion,
    desp_per_codigo,desp_catalogo,desp_fecha_inicio,desp_fecha_fin,desp_h_salida,
    desp_h_entrada,desp_autorizo,desp_per_division,desp_per_observacion,
    accion,usuario,hora)  values (antes.per_codigo ,antes.catalogo ,antes.fecha_inicio 
    ,antes.fecha_fin ,antes.h_salida ,antes.h_entrada ,antes.autorizo 
    ,antes.per_division ,antes.per_observacion ,NULL ,NULL ,' ' ,' ' ,NULL 
    ,NULL ,NULL ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fn_motivos update on "informix".fn_motivos 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fn_motivos (mot_codigo,mot_desc,
    desp_mot_codigo,desp_mot_desc,accion,usuario,hora)  values (antes.mot_codigo 
    ,antes.mot_desc ,luego.mot_codigo ,luego.mot_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_fn_motivos insert on "informix".fn_motivos 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_fn_motivos (mot_codigo,mot_desc,
    desp_mot_codigo,desp_mot_desc,accion,usuario,hora)  values (' ' ,' '
     ,luego.mot_codigo ,luego.mot_desc ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_fn_motivos delete on "informix".fn_motivos 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_fn_motivos (mot_codigo,mot_desc,
    desp_mot_codigo,desp_mot_desc,accion,usuario,hora)  values (antes.mot_codigo 
    ,antes.mot_desc ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_f_cmm update on "informix".f_cmm 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_f_cmm (cmm_catalogo,cmm_trans,
    cmm_fec_ini,cmm_ful_act,cmm_fec_cer,cmm_monto,cmm_saldo,cmm_mensual,
    cmm_tot_cuotas,cmm_num_cuotas,cmm_contrato,cmm_control,desp_cmm_catalogo,
    desp_cmm_trans,desp_cmm_fec_ini,desp_cmm_ful_act,desp_cmm_fec_cer,
    desp_cmm_monto,desp_cmm_saldo,desp_cmm_mensual,desp_cmm_tot_cuotas,
    desp_cmm_num_cuotas,desp_cmm_contrato,desp_cmm_control,accion,usuario,
    hora)  values (antes.cmm_catalogo ,antes.cmm_trans ,antes.cmm_fec_ini 
    ,antes.cmm_ful_act ,antes.cmm_fec_cer ,antes.cmm_monto ,antes.cmm_saldo 
    ,antes.cmm_mensual ,antes.cmm_tot_cuotas ,antes.cmm_num_cuotas ,antes.cmm_contrato 
    ,antes.cmm_control ,luego.cmm_catalogo ,luego.cmm_trans ,luego.cmm_fec_ini 
    ,luego.cmm_ful_act ,luego.cmm_fec_cer ,luego.cmm_monto ,luego.cmm_saldo 
    ,luego.cmm_mensual ,luego.cmm_tot_cuotas ,luego.cmm_num_cuotas ,luego.cmm_contrato 
    ,luego.cmm_control ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_f_cmm insert on "informix".f_cmm 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_f_cmm (cmm_catalogo,cmm_trans,
    cmm_fec_ini,cmm_ful_act,cmm_fec_cer,cmm_monto,cmm_saldo,cmm_mensual,
    cmm_tot_cuotas,cmm_num_cuotas,cmm_contrato,cmm_control,desp_cmm_catalogo,
    desp_cmm_trans,desp_cmm_fec_ini,desp_cmm_ful_act,desp_cmm_fec_cer,
    desp_cmm_monto,desp_cmm_saldo,desp_cmm_mensual,desp_cmm_tot_cuotas,
    desp_cmm_num_cuotas,desp_cmm_contrato,desp_cmm_control,accion,usuario,
    hora)  values (NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,' ' ,luego.cmm_catalogo 
    ,luego.cmm_trans ,luego.cmm_fec_ini ,luego.cmm_ful_act ,luego.cmm_fec_cer 
    ,luego.cmm_monto ,luego.cmm_saldo ,luego.cmm_mensual ,luego.cmm_tot_cuotas 
    ,luego.cmm_num_cuotas ,luego.cmm_contrato ,luego.cmm_control ,'I' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_f_cmm delete on "informix".f_cmm 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_f_cmm (cmm_catalogo,cmm_trans,
    cmm_fec_ini,cmm_ful_act,cmm_fec_cer,cmm_monto,cmm_saldo,cmm_mensual,
    cmm_tot_cuotas,cmm_num_cuotas,cmm_contrato,cmm_control,desp_cmm_catalogo,
    desp_cmm_trans,desp_cmm_fec_ini,desp_cmm_ful_act,desp_cmm_fec_cer,
    desp_cmm_monto,desp_cmm_saldo,desp_cmm_mensual,desp_cmm_tot_cuotas,
    desp_cmm_num_cuotas,desp_cmm_contrato,desp_cmm_control,accion,usuario,
    hora)  values (antes.cmm_catalogo ,antes.cmm_trans ,antes.cmm_fec_ini 
    ,antes.cmm_ful_act ,antes.cmm_fec_cer ,antes.cmm_monto ,antes.cmm_saldo 
    ,antes.cmm_mensual ,antes.cmm_tot_cuotas ,antes.cmm_num_cuotas ,antes.cmm_contrato 
    ,antes.cmm_control ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,
    '' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_hftro_des update on "informix".hftro_des 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_hftro_des (htd_catalogo,htd_fecha,
    htd_codigo,htd_nu_reg,htd_monto,htd_mensual,htd_saldo,htd_corrida,
    htd_varios,desp_htd_catalogo,desp_htd_fecha,desp_htd_codigo,desp_htd_nu_reg,
    desp_htd_monto,desp_htd_mensual,desp_htd_saldo,desp_htd_corrida,desp_htd_varios,
    accion,usuario,hora)  values (antes.htd_catalogo ,antes.htd_fecha 
    ,antes.htd_codigo ,antes.htd_nu_reg ,antes.htd_monto ,antes.htd_mensual 
    ,antes.htd_saldo ,antes.htd_corrida ,antes.htd_varios ,luego.htd_catalogo 
    ,luego.htd_fecha ,luego.htd_codigo ,luego.htd_nu_reg ,luego.htd_monto 
    ,luego.htd_mensual ,luego.htd_saldo ,luego.htd_corrida ,luego.htd_varios 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_hftro_des insert on "informix".hftro_des 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_hftro_des (htd_catalogo,htd_fecha,
    htd_codigo,htd_nu_reg,htd_monto,htd_mensual,htd_saldo,htd_corrida,
    htd_varios,desp_htd_catalogo,desp_htd_fecha,desp_htd_codigo,desp_htd_nu_reg,
    desp_htd_monto,desp_htd_mensual,desp_htd_saldo,desp_htd_corrida,desp_htd_varios,
    accion,usuario,hora)  values (NULL ,' ' ,NULL ,NULL ,' ' ,' ' ,' ' ,' '
     ,' ' ,luego.htd_catalogo ,luego.htd_fecha ,luego.htd_codigo ,luego.htd_nu_reg 
    ,luego.htd_monto ,luego.htd_mensual ,luego.htd_saldo ,luego.htd_corrida 
    ,luego.htd_varios ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_hftro_des delete on "informix".hftro_des 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_hftro_des (htd_catalogo,htd_fecha,
    htd_codigo,htd_nu_reg,htd_monto,htd_mensual,htd_saldo,htd_corrida,
    htd_varios,desp_htd_catalogo,desp_htd_fecha,desp_htd_codigo,desp_htd_nu_reg,
    desp_htd_monto,desp_htd_mensual,desp_htd_saldo,desp_htd_corrida,desp_htd_varios,
    accion,usuario,hora)  values (antes.htd_catalogo ,antes.htd_fecha 
    ,antes.htd_codigo ,antes.htd_nu_reg ,antes.htd_monto ,antes.htd_mensual 
    ,antes.htd_saldo ,antes.htd_corrida ,antes.htd_varios ,NULL ,' ' ,
    NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_ft_asigna update on "informix".ft_asigna 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ft_asigna (ta_plaza,ta_codigo,
    ta_monto,desp_ta_plaza,desp_ta_codigo,desp_ta_monto,accion,usuario,
    hora)  values (antes.ta_plaza ,antes.ta_codigo ,antes.ta_monto ,luego.ta_plaza 
    ,luego.ta_codigo ,luego.ta_monto ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_ft_asigna insert on "informix".ft_asigna 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ft_asigna (ta_plaza,ta_codigo,
    ta_monto,desp_ta_plaza,desp_ta_codigo,desp_ta_monto,accion,usuario,
    hora)  values (NULL ,NULL ,' ' ,luego.ta_plaza ,luego.ta_codigo ,luego.ta_monto 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ft_asigna delete on "informix".ft_asigna 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ft_asigna (ta_plaza,ta_codigo,
    ta_monto,desp_ta_plaza,desp_ta_codigo,desp_ta_monto,accion,usuario,
    hora)  values (antes.ta_plaza ,antes.ta_codigo ,antes.ta_monto ,NULL 
    ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_busqueda update on "informix".busqueda 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_busqueda (ingreso,cant,busco,
    desp_ingreso,desp_cant,desp_busco,accion,usuario,hora)  values (antes.ingreso 
    ,antes.cant ,antes.busco ,luego.ingreso ,luego.cant ,luego.busco 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_busqueda insert on "informix".busqueda 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_busqueda (ingreso,cant,busco,
    desp_ingreso,desp_cant,desp_busco,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,luego.ingreso ,luego.cant ,luego.busco ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_busqueda delete on "informix".busqueda 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_busqueda (ingreso,cant,busco,
    desp_ingreso,desp_cant,desp_busco,accion,usuario,hora)  values (antes.ingreso 
    ,antes.cant ,antes.busco ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_ingreso update on "informix".ingreso 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ingreso (numero,catalogo,dep,
    entro,horas,desp_numero,desp_catalogo,desp_dep,desp_entro,desp_hora,
    accion,usuario,hora)  values (antes.numero ,antes.catalogo ,antes.dep 
    ,antes.entro ,antes.hora ,luego.numero ,luego.catalogo ,luego.dep 
    ,luego.entro ,luego.hora ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_ingreso insert on "informix".ingreso 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ingreso (numero,catalogo,dep,
    entro,horas,desp_numero,desp_catalogo,desp_dep,desp_entro,desp_hora,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,' ' ,' ' ,luego.numero 
    ,luego.catalogo ,luego.dep ,luego.entro ,luego.hora ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_ingreso delete on "informix".ingreso 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ingreso (numero,catalogo,dep,
    entro,horas,desp_numero,desp_catalogo,desp_dep,desp_entro,desp_hora,
    accion,usuario,hora)  values (antes.numero ,antes.catalogo ,antes.dep 
    ,antes.entro ,antes.hora ,NULL ,NULL ,NULL ,' ' ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_fcatnop update on "informix".fcatnop 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fcatnop (fcat_catalogo,fcat_date,
    desp_fcat_catalogo,desp_fcat_date,accion,usuario,hora)  values (antes.fcat_catalogo 
    ,antes.fcat_date ,luego.fcat_catalogo ,luego.fcat_date ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fcatnop insert on "informix".fcatnop 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_fcatnop (fcat_catalogo,fcat_date,
    desp_fcat_catalogo,desp_fcat_date,accion,usuario,hora)  values (NULL 
    ,' ' ,luego.fcat_catalogo ,luego.fcat_date ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_fcatnop delete on "informix".fcatnop 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_fcatnop (fcat_catalogo,fcat_date,
    desp_fcat_catalogo,desp_fcat_date,accion,usuario,hora)  values (antes.fcat_catalogo 
    ,antes.fcat_date ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_cna insert on "informix".cna referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_cna (cna_codigo,cna_desc_lg,
    desp_cna_codigo,desp_cna_desc_lg,accion,usuario,hora)  values (' '
     ,' ' ,luego.cna_codigo ,luego.cna_desc_lg ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_cna delete on "informix".cna referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_cna (cna_codigo,cna_desc_lg,
    desp_cna_codigo,desp_cna_desc_lg,accion,usuario,hora)  values (antes.cna_codigo 
    ,antes.cna_desc_lg ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_cna update on "informix".cna referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_cna (cna_codigo,cna_desc_lg,
    desp_cna_codigo,desp_cna_desc_lg,accion,usuario,hora)  values (antes.cna_codigo 
    ,antes.cna_desc_lg ,luego.cna_codigo ,luego.cna_desc_lg ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_religiones update on "informix".religiones 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_religiones (rel_codigo,rel_desc,
    desp_rel_codigo,desp_rel_desc,accion,usuario,hora)  values (antes.rel_codigo 
    ,antes.rel_desc ,luego.rel_codigo ,luego.rel_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_religiones insert on "informix".religiones 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_religiones (rel_codigo,rel_desc,
    desp_rel_codigo,desp_rel_desc,accion,usuario,hora)  values (NULL 
    ,' ' ,luego.rel_codigo ,luego.rel_desc ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_religiones delete on "informix".religiones 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_religiones (rel_codigo,rel_desc,
    desp_rel_codigo,desp_rel_desc,accion,usuario,hora)  values (antes.rel_codigo 
    ,antes.rel_desc ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_rel_detalle update on "informix"
    .rel_detalle referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rel_detalle (rel_det_catalogo,
    rel_det_religion,desp_rel_det_catalogo,desp_rel_det_religion,accion,
    usuario,hora)  values (antes.rel_det_catalogo ,antes.rel_det_religion 
    ,luego.rel_det_catalogo ,luego.rel_det_religion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_rel_detalle insert on "informix"
    .rel_detalle referencing new as luego
    for each row
        (
        insert into "informix".aud_rel_detalle (rel_det_catalogo,
    rel_det_religion,desp_rel_det_catalogo,desp_rel_det_religion,accion,
    usuario,hora)  values (NULL ,NULL ,luego.rel_det_catalogo ,luego.rel_det_religion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_rel_detalle delete on "informix"
    .rel_detalle referencing old as antes
    for each row
        (
        insert into "informix".aud_rel_detalle (rel_det_catalogo,
    rel_det_religion,desp_rel_det_catalogo,desp_rel_det_religion,accion,
    usuario,hora)  values (antes.rel_det_catalogo ,antes.rel_det_religion 
    ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_radius1 update on "informix".radius1 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_radius1 (codigo,comando,usuario_nt,
    e_mail,pwd1_nt,pwd2_nt,pwd3_nt,pwd4_nt,cta_radius,pwd1_rad,pwd2_rad,
    pwd3_rad,pwd4_rad,desp_codigo,desp_comando,desp_usuario_nt,desp_e_mail,
    desp_pwd1_nt,desp_pwd2_nt,desp_pwd3_nt,desp_pwd4_nt,desp_cta_radius,
    desp_pwd1_rad,desp_pwd2_rad,desp_pwd3_rad,desp_pwd4_rad,accion,usuario,
    hora)  values (antes.codigo ,antes.comando ,antes.usuario_nt ,antes.e_mail 
    ,antes.pwd1_nt ,antes.pwd2_nt ,antes.pwd3_nt ,antes.pwd4_nt ,antes.cta_radius 
    ,antes.pwd1_rad ,antes.pwd2_rad ,antes.pwd3_rad ,antes.pwd4_rad ,
    luego.codigo ,luego.comando ,luego.usuario_nt ,luego.e_mail ,luego.pwd1_nt 
    ,luego.pwd2_nt ,luego.pwd3_nt ,luego.pwd4_nt ,luego.cta_radius ,luego.pwd1_rad 
    ,luego.pwd2_rad ,luego.pwd3_rad ,luego.pwd4_rad ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_radius1 insert on "informix".radius1 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_radius1 (codigo,comando,usuario_nt,
    e_mail,pwd1_nt,pwd2_nt,pwd3_nt,pwd4_nt,cta_radius,pwd1_rad,pwd2_rad,
    pwd3_rad,pwd4_rad,desp_codigo,desp_comando,desp_usuario_nt,desp_e_mail,
    desp_pwd1_nt,desp_pwd2_nt,desp_pwd3_nt,desp_pwd4_nt,desp_cta_radius,
    desp_pwd1_rad,desp_pwd2_rad,desp_pwd3_rad,desp_pwd4_rad,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.codigo 
    ,luego.comando ,luego.usuario_nt ,luego.e_mail ,luego.pwd1_nt ,luego.pwd2_nt 
    ,luego.pwd3_nt ,luego.pwd4_nt ,luego.cta_radius ,luego.pwd1_rad ,
    luego.pwd2_rad ,luego.pwd3_rad ,luego.pwd4_rad ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_radius1 delete on "informix".radius1 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_radius1 (codigo,comando,usuario_nt,
    e_mail,pwd1_nt,pwd2_nt,pwd3_nt,pwd4_nt,cta_radius,pwd1_rad,pwd2_rad,
    pwd3_rad,pwd4_rad,desp_codigo,desp_comando,desp_usuario_nt,desp_e_mail,
    desp_pwd1_nt,desp_pwd2_nt,desp_pwd3_nt,desp_pwd4_nt,desp_cta_radius,
    desp_pwd1_rad,desp_pwd2_rad,desp_pwd3_rad,desp_pwd4_rad,accion,usuario,
    hora)  values (antes.codigo ,antes.comando ,antes.usuario_nt ,antes.e_mail 
    ,antes.pwd1_nt ,antes.pwd2_nt ,antes.pwd3_nt ,antes.pwd4_nt ,antes.cta_radius 
    ,antes.pwd1_rad ,antes.pwd2_rad ,antes.pwd3_rad ,antes.pwd4_rad ,
    NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_oestoe update on "informix".oestoe 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_oestoe (est_codigo,est_depcia,
    est_gd_ii,est_gd_v,est_gb_ii,est_gb_v,est_cnel_ii,est_cnel_v,est_tcnel_ii,
    est_tcnel_v,est_may_ii,est_may_v,est_o_sg_ii,est_o_sg_v,est_cap1_ii,
    est_cap1_v,est_cap2_ii,est_cap2_v,est_tte_ii,est_tte_v,est_subte_ii,
    est_subte_v,est_sgto_cp_ii,est_sgto_cp_v,est_as_ii,est_as_v,est_as_sg_ii,
    est_as_sg_v,est_sm_esp_ii,est_sm_esp_v,est_st_esp_ii,est_st_esp_v,
    est_s_1ro_esp_ii,est_s_1ro_esp_v,est_s_2do_esp_ii,est_s_2do_esp_v,
    est_cabo_esp_ii,est_cabo_esp_v,est_sold_1ra_esp_ii,est_sold_1ra_esp_v,
    est_sold_2da_esp_ii,est_sold_2da_esp_v,est_sgt_1ro_ii,est_sgt_1ro_v,
    est_sgt_2do_ii,est_sgt_2do_v,est_cabo_ii,est_cabo_v,est_sold_1ra_ii,
    est_sold_1ra_v,est_sold_2da_ii,est_sold_2da_v,est_cad_ii,est_cad_v,
    desp_est_codigo,desp_est_depcia,desp_est_gd_ii,desp_est_gd_v,desp_est_gb_ii,
    desp_est_gb_v,desp_est_cnel_ii,desp_est_cnel_v,desp_est_tcnel_ii,
    desp_est_tcnel_v,desp_est_may_ii,desp_est_may_v,desp_est_o_sg_ii,
    desp_est_o_sg_v,desp_est_cap1_ii,desp_est_cap1_v,desp_est_cap2_ii,
    desp_est_cap2_v,desp_est_tte_ii,desp_est_tte_v,desp_est_subte_ii,
    desp_est_subte_v,desp_est_sgto_cp_ii,desp_est_sgto_cp_v,desp_est_as_ii,
    desp_est_as_v,desp_est_as_sg_ii,desp_est_as_sg_v,desp_est_sm_esp_ii,
    desp_est_sm_esp_v,desp_est_st_esp_ii,desp_est_st_esp_v,desp_est_s_1ro_esp_ii,
    desp_est_s_1ro_esp_v,desp_est_s_2do_esp_ii,desp_est_s_2do_esp_v,desp_est_cabo_esp_ii,
    desp_est_cabo_esp_v,desp_est_sold_1ra_esp_ii,desp_est_sold_1ra_esp_v,
    desp_est_sold_2da_esp_ii,desp_est_sold_2da_esp_v,desp_est_sgt_1ro_ii,
    desp_est_sgt_1ro_v,desp_est_sgt_2do_ii,desp_est_sgt_2do_v,desp_est_cabo_ii,
    desp_est_cabo_v,desp_est_sold_1ra_ii,desp_est_sold_1ra_v,desp_est_sold_2da_ii,
    desp_est_sold_2da_v,desp_est_cad_ii,desp_est_cad_v,accion,usuario,
    hora)  values (antes.est_codigo ,antes.est_depcia ,antes.est_gd_ii 
    ,antes.est_gd_v ,antes.est_gb_ii ,antes.est_gb_v ,antes.est_cnel_ii 
    ,antes.est_cnel_v ,antes.est_tcnel_ii ,antes.est_tcnel_v ,antes.est_may_ii 
    ,antes.est_may_v ,antes.est_o_sg_ii ,antes.est_o_sg_v ,antes.est_cap1_ii 
    ,antes.est_cap1_v ,antes.est_cap2_ii ,antes.est_cap2_v ,antes.est_tte_ii 
    ,antes.est_tte_v ,antes.est_subte_ii ,antes.est_subte_v ,antes.est_sgto_cp_ii 
    ,antes.est_sgto_cp_v ,antes.est_as_ii ,antes.est_as_v ,antes.est_as_sg_ii 
    ,antes.est_as_sg_v ,antes.est_sm_esp_ii ,antes.est_sm_esp_v ,antes.est_st_esp_ii 
    ,antes.est_st_esp_v ,antes.est_s_1ro_esp_ii ,antes.est_s_1ro_esp_v 
    ,antes.est_s_2do_esp_ii ,antes.est_s_2do_esp_v ,antes.est_cabo_esp_ii 
    ,antes.est_cabo_esp_v ,antes.est_sold_1ra_esp_ii ,antes.est_sold_1ra_esp_v 
    ,antes.est_sold_2da_esp_ii ,antes.est_sold_2da_esp_v ,antes.est_sgt_1ro_ii 
    ,antes.est_sgt_1ro_v ,antes.est_sgt_2do_ii ,antes.est_sgt_2do_v ,
    antes.est_cabo_ii ,antes.est_cabo_v ,antes.est_sold_1ra_ii ,antes.est_sold_1ra_v 
    ,antes.est_sold_2da_ii ,antes.est_sold_2da_v ,antes.est_cad_ii ,antes.est_cad_v 
    ,luego.est_codigo ,luego.est_depcia ,luego.est_gd_ii ,luego.est_gd_v 
    ,luego.est_gb_ii ,luego.est_gb_v ,luego.est_cnel_ii ,luego.est_cnel_v 
    ,luego.est_tcnel_ii ,luego.est_tcnel_v ,luego.est_may_ii ,luego.est_may_v 
    ,luego.est_o_sg_ii ,luego.est_o_sg_v ,luego.est_cap1_ii ,luego.est_cap1_v 
    ,luego.est_cap2_ii ,luego.est_cap2_v ,luego.est_tte_ii ,luego.est_tte_v 
    ,luego.est_subte_ii ,luego.est_subte_v ,luego.est_sgto_cp_ii ,luego.est_sgto_cp_v 
    ,luego.est_as_ii ,luego.est_as_v ,luego.est_as_sg_ii ,luego.est_as_sg_v 
    ,luego.est_sm_esp_ii ,luego.est_sm_esp_v ,luego.est_st_esp_ii ,luego.est_st_esp_v 
    ,luego.est_s_1ro_esp_ii ,luego.est_s_1ro_esp_v ,luego.est_s_2do_esp_ii 
    ,luego.est_s_2do_esp_v ,luego.est_cabo_esp_ii ,luego.est_cabo_esp_v 
    ,luego.est_sold_1ra_esp_ii ,luego.est_sold_1ra_esp_v ,luego.est_sold_2da_esp_ii 
    ,luego.est_sold_2da_esp_v ,luego.est_sgt_1ro_ii ,luego.est_sgt_1ro_v 
    ,luego.est_sgt_2do_ii ,luego.est_sgt_2do_v ,luego.est_cabo_ii ,luego.est_cabo_v 
    ,luego.est_sold_1ra_ii ,luego.est_sold_1ra_v ,luego.est_sold_2da_ii 
    ,luego.est_sold_2da_v ,luego.est_cad_ii ,luego.est_cad_v ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_oestoe insert on "informix".oestoe 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_oestoe (est_codigo,est_depcia,
    est_gd_ii,est_gd_v,est_gb_ii,est_gb_v,est_cnel_ii,est_cnel_v,est_tcnel_ii,
    est_tcnel_v,est_may_ii,est_may_v,est_o_sg_ii,est_o_sg_v,est_cap1_ii,
    est_cap1_v,est_cap2_ii,est_cap2_v,est_tte_ii,est_tte_v,est_subte_ii,
    est_subte_v,est_sgto_cp_ii,est_sgto_cp_v,est_as_ii,est_as_v,est_as_sg_ii,
    est_as_sg_v,est_sm_esp_ii,est_sm_esp_v,est_st_esp_ii,est_st_esp_v,
    est_s_1ro_esp_ii,est_s_1ro_esp_v,est_s_2do_esp_ii,est_s_2do_esp_v,
    est_cabo_esp_ii,est_cabo_esp_v,est_sold_1ra_esp_ii,est_sold_1ra_esp_v,
    est_sold_2da_esp_ii,est_sold_2da_esp_v,est_sgt_1ro_ii,est_sgt_1ro_v,
    est_sgt_2do_ii,est_sgt_2do_v,est_cabo_ii,est_cabo_v,est_sold_1ra_ii,
    est_sold_1ra_v,est_sold_2da_ii,est_sold_2da_v,est_cad_ii,est_cad_v,
    desp_est_codigo,desp_est_depcia,desp_est_gd_ii,desp_est_gd_v,desp_est_gb_ii,
    desp_est_gb_v,desp_est_cnel_ii,desp_est_cnel_v,desp_est_tcnel_ii,
    desp_est_tcnel_v,desp_est_may_ii,desp_est_may_v,desp_est_o_sg_ii,
    desp_est_o_sg_v,desp_est_cap1_ii,desp_est_cap1_v,desp_est_cap2_ii,
    desp_est_cap2_v,desp_est_tte_ii,desp_est_tte_v,desp_est_subte_ii,
    desp_est_subte_v,desp_est_sgto_cp_ii,desp_est_sgto_cp_v,desp_est_as_ii,
    desp_est_as_v,desp_est_as_sg_ii,desp_est_as_sg_v,desp_est_sm_esp_ii,
    desp_est_sm_esp_v,desp_est_st_esp_ii,desp_est_st_esp_v,desp_est_s_1ro_esp_ii,
    desp_est_s_1ro_esp_v,desp_est_s_2do_esp_ii,desp_est_s_2do_esp_v,desp_est_cabo_esp_ii,
    desp_est_cabo_esp_v,desp_est_sold_1ra_esp_ii,desp_est_sold_1ra_esp_v,
    desp_est_sold_2da_esp_ii,desp_est_sold_2da_esp_v,desp_est_sgt_1ro_ii,
    desp_est_sgt_1ro_v,desp_est_sgt_2do_ii,desp_est_sgt_2do_v,desp_est_cabo_ii,
    desp_est_cabo_v,desp_est_sold_1ra_ii,desp_est_sold_1ra_v,desp_est_sold_2da_ii,
    desp_est_sold_2da_v,desp_est_cad_ii,desp_est_cad_v,accion,usuario,
    hora)  values (NULL ,' ' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,luego.est_codigo ,luego.est_depcia ,luego.est_gd_ii ,luego.est_gd_v 
    ,luego.est_gb_ii ,luego.est_gb_v ,luego.est_cnel_ii ,luego.est_cnel_v 
    ,luego.est_tcnel_ii ,luego.est_tcnel_v ,luego.est_may_ii ,luego.est_may_v 
    ,luego.est_o_sg_ii ,luego.est_o_sg_v ,luego.est_cap1_ii ,luego.est_cap1_v 
    ,luego.est_cap2_ii ,luego.est_cap2_v ,luego.est_tte_ii ,luego.est_tte_v 
    ,luego.est_subte_ii ,luego.est_subte_v ,luego.est_sgto_cp_ii ,luego.est_sgto_cp_v 
    ,luego.est_as_ii ,luego.est_as_v ,luego.est_as_sg_ii ,luego.est_as_sg_v 
    ,luego.est_sm_esp_ii ,luego.est_sm_esp_v ,luego.est_st_esp_ii ,luego.est_st_esp_v 
    ,luego.est_s_1ro_esp_ii ,luego.est_s_1ro_esp_v ,luego.est_s_2do_esp_ii 
    ,luego.est_s_2do_esp_v ,luego.est_cabo_esp_ii ,luego.est_cabo_esp_v 
    ,luego.est_sold_1ra_esp_ii ,luego.est_sold_1ra_esp_v ,luego.est_sold_2da_esp_ii 
    ,luego.est_sold_2da_esp_v ,luego.est_sgt_1ro_ii ,luego.est_sgt_1ro_v 
    ,luego.est_sgt_2do_ii ,luego.est_sgt_2do_v ,luego.est_cabo_ii ,luego.est_cabo_v 
    ,luego.est_sold_1ra_ii ,luego.est_sold_1ra_v ,luego.est_sold_2da_ii 
    ,luego.est_sold_2da_v ,luego.est_cad_ii ,luego.est_cad_v ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_oestoe delete on "informix".oestoe 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_oestoe (est_codigo,est_depcia,
    est_gd_ii,est_gd_v,est_gb_ii,est_gb_v,est_cnel_ii,est_cnel_v,est_tcnel_ii,
    est_tcnel_v,est_may_ii,est_may_v,est_o_sg_ii,est_o_sg_v,est_cap1_ii,
    est_cap1_v,est_cap2_ii,est_cap2_v,est_tte_ii,est_tte_v,est_subte_ii,
    est_subte_v,est_sgto_cp_ii,est_sgto_cp_v,est_as_ii,est_as_v,est_as_sg_ii,
    est_as_sg_v,est_sm_esp_ii,est_sm_esp_v,est_st_esp_ii,est_st_esp_v,
    est_s_1ro_esp_ii,est_s_1ro_esp_v,est_s_2do_esp_ii,est_s_2do_esp_v,
    est_cabo_esp_ii,est_cabo_esp_v,est_sold_1ra_esp_ii,est_sold_1ra_esp_v,
    est_sold_2da_esp_ii,est_sold_2da_esp_v,est_sgt_1ro_ii,est_sgt_1ro_v,
    est_sgt_2do_ii,est_sgt_2do_v,est_cabo_ii,est_cabo_v,est_sold_1ra_ii,
    est_sold_1ra_v,est_sold_2da_ii,est_sold_2da_v,est_cad_ii,est_cad_v,
    desp_est_codigo,desp_est_depcia,desp_est_gd_ii,desp_est_gd_v,desp_est_gb_ii,
    desp_est_gb_v,desp_est_cnel_ii,desp_est_cnel_v,desp_est_tcnel_ii,
    desp_est_tcnel_v,desp_est_may_ii,desp_est_may_v,desp_est_o_sg_ii,
    desp_est_o_sg_v,desp_est_cap1_ii,desp_est_cap1_v,desp_est_cap2_ii,
    desp_est_cap2_v,desp_est_tte_ii,desp_est_tte_v,desp_est_subte_ii,
    desp_est_subte_v,desp_est_sgto_cp_ii,desp_est_sgto_cp_v,desp_est_as_ii,
    desp_est_as_v,desp_est_as_sg_ii,desp_est_as_sg_v,desp_est_sm_esp_ii,
    desp_est_sm_esp_v,desp_est_st_esp_ii,desp_est_st_esp_v,desp_est_s_1ro_esp_ii,
    desp_est_s_1ro_esp_v,desp_est_s_2do_esp_ii,desp_est_s_2do_esp_v,desp_est_cabo_esp_ii,
    desp_est_cabo_esp_v,desp_est_sold_1ra_esp_ii,desp_est_sold_1ra_esp_v,
    desp_est_sold_2da_esp_ii,desp_est_sold_2da_esp_v,desp_est_sgt_1ro_ii,
    desp_est_sgt_1ro_v,desp_est_sgt_2do_ii,desp_est_sgt_2do_v,desp_est_cabo_ii,
    desp_est_cabo_v,desp_est_sold_1ra_ii,desp_est_sold_1ra_v,desp_est_sold_2da_ii,
    desp_est_sold_2da_v,desp_est_cad_ii,desp_est_cad_v,accion,usuario,
    hora)  values (antes.est_codigo ,antes.est_depcia ,antes.est_gd_ii 
    ,antes.est_gd_v ,antes.est_gb_ii ,antes.est_gb_v ,antes.est_cnel_ii 
    ,antes.est_cnel_v ,antes.est_tcnel_ii ,antes.est_tcnel_v ,antes.est_may_ii 
    ,antes.est_may_v ,antes.est_o_sg_ii ,antes.est_o_sg_v ,antes.est_cap1_ii 
    ,antes.est_cap1_v ,antes.est_cap2_ii ,antes.est_cap2_v ,antes.est_tte_ii 
    ,antes.est_tte_v ,antes.est_subte_ii ,antes.est_subte_v ,antes.est_sgto_cp_ii 
    ,antes.est_sgto_cp_v ,antes.est_as_ii ,antes.est_as_v ,antes.est_as_sg_ii 
    ,antes.est_as_sg_v ,antes.est_sm_esp_ii ,antes.est_sm_esp_v ,antes.est_st_esp_ii 
    ,antes.est_st_esp_v ,antes.est_s_1ro_esp_ii ,antes.est_s_1ro_esp_v 
    ,antes.est_s_2do_esp_ii ,antes.est_s_2do_esp_v ,antes.est_cabo_esp_ii 
    ,antes.est_cabo_esp_v ,antes.est_sold_1ra_esp_ii ,antes.est_sold_1ra_esp_v 
    ,antes.est_sold_2da_esp_ii ,antes.est_sold_2da_esp_v ,antes.est_sgt_1ro_ii 
    ,antes.est_sgt_1ro_v ,antes.est_sgt_2do_ii ,antes.est_sgt_2do_v ,
    antes.est_cabo_ii ,antes.est_cabo_v ,antes.est_sold_1ra_ii ,antes.est_sold_1ra_v 
    ,antes.est_sold_2da_ii ,antes.est_sold_2da_v ,antes.est_cad_ii ,antes.est_cad_v 
    ,NULL ,' ' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,
    NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'D' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dfdes_frasa delete on "informix"
    .dfdes_frasa referencing old as antes
    for each row
        (
        insert into "informix".aud_dfdes_frasa (dfdf_catalogo,
    dfdf_codigo,dfdf_nu_reg,dfdf_cod_control,dfdf_tipo_desc,dfdf_fec_ini,
    dfdf_ult_act,dfdf_fec_cer,dfdf_monto,dfdf_saldo,dfdf_mensual,dfdf_tot_cuotas,
    dfdf_num_cuotas,dfdf_documen,dfdf_codeudor,dfdf_nom_bene,dfdf_juz_con,
    dfdf_si_no,desp_dfdf_catalogo,desp_dfdf_codigo,desp_dfdf_nu_reg,desp_dfdf_cod_control,
    desp_dfdf_tipo_desc,desp_dfdf_fec_ini,desp_dfdf_ult_act,desp_dfdf_fec_cer,
    desp_dfdf_monto,desp_dfdf_saldo,desp_dfdf_mensual,desp_dfdf_tot_cuotas,
    desp_dfdf_num_cuotas,desp_dfdf_documen,desp_dfdf_codeudor,desp_dfdf_nom_bene,
    desp_dfdf_juz_con,desp_dfdf_si_no,accion,usuario,hora)  values (antes.dfdf_catalogo 
    ,antes.dfdf_codigo ,antes.dfdf_nu_reg ,antes.dfdf_cod_control ,antes.dfdf_tipo_desc 
    ,antes.dfdf_fec_ini ,antes.dfdf_ult_act ,antes.dfdf_fec_cer ,antes.dfdf_monto 
    ,antes.dfdf_saldo ,antes.dfdf_mensual ,antes.dfdf_tot_cuotas ,antes.dfdf_num_cuotas 
    ,antes.dfdf_documen ,antes.dfdf_codeudor ,antes.dfdf_nom_bene ,antes.dfdf_juz_con 
    ,antes.dfdf_si_no ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL 
    ,NULL ,'' ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_dfdes_frasa insert on "informix"
    .dfdes_frasa referencing new as luego
    for each row
        (
        insert into "informix".aud_dfdes_frasa (dfdf_catalogo,
    dfdf_codigo,dfdf_nu_reg,dfdf_cod_control,dfdf_tipo_desc,dfdf_fec_ini,
    dfdf_ult_act,dfdf_fec_cer,dfdf_monto,dfdf_saldo,dfdf_mensual,dfdf_tot_cuotas,
    dfdf_num_cuotas,dfdf_documen,dfdf_codeudor,dfdf_nom_bene,dfdf_juz_con,
    dfdf_si_no,desp_dfdf_catalogo,desp_dfdf_codigo,desp_dfdf_nu_reg,desp_dfdf_cod_control,
    desp_dfdf_tipo_desc,desp_dfdf_fec_ini,desp_dfdf_ult_act,desp_dfdf_fec_cer,
    desp_dfdf_monto,desp_dfdf_saldo,desp_dfdf_mensual,desp_dfdf_tot_cuotas,
    desp_dfdf_num_cuotas,desp_dfdf_documen,desp_dfdf_codeudor,desp_dfdf_nom_bene,
    desp_dfdf_juz_con,desp_dfdf_si_no,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,NULL ,'' ,''
     ,'' ,luego.dfdf_catalogo ,luego.dfdf_codigo ,luego.dfdf_nu_reg ,luego.dfdf_cod_control 
    ,luego.dfdf_tipo_desc ,luego.dfdf_fec_ini ,luego.dfdf_ult_act ,luego.dfdf_fec_cer 
    ,luego.dfdf_monto ,luego.dfdf_saldo ,luego.dfdf_mensual ,luego.dfdf_tot_cuotas 
    ,luego.dfdf_num_cuotas ,luego.dfdf_documen ,luego.dfdf_codeudor ,
    luego.dfdf_nom_bene ,luego.dfdf_juz_con ,luego.dfdf_si_no ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_dfdes_frasa update on "informix"
    .dfdes_frasa referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dfdes_frasa (dfdf_catalogo,
    dfdf_codigo,dfdf_nu_reg,dfdf_cod_control,dfdf_tipo_desc,dfdf_fec_ini,
    dfdf_ult_act,dfdf_fec_cer,dfdf_monto,dfdf_saldo,dfdf_mensual,dfdf_tot_cuotas,
    dfdf_num_cuotas,dfdf_documen,dfdf_codeudor,dfdf_nom_bene,dfdf_juz_con,
    dfdf_si_no,desp_dfdf_catalogo,desp_dfdf_codigo,desp_dfdf_nu_reg,desp_dfdf_cod_control,
    desp_dfdf_tipo_desc,desp_dfdf_fec_ini,desp_dfdf_ult_act,desp_dfdf_fec_cer,
    desp_dfdf_monto,desp_dfdf_saldo,desp_dfdf_mensual,desp_dfdf_tot_cuotas,
    desp_dfdf_num_cuotas,desp_dfdf_documen,desp_dfdf_codeudor,desp_dfdf_nom_bene,
    desp_dfdf_juz_con,desp_dfdf_si_no,accion,usuario,hora)  values (antes.dfdf_catalogo 
    ,antes.dfdf_codigo ,antes.dfdf_nu_reg ,antes.dfdf_cod_control ,antes.dfdf_tipo_desc 
    ,antes.dfdf_fec_ini ,antes.dfdf_ult_act ,antes.dfdf_fec_cer ,antes.dfdf_monto 
    ,antes.dfdf_saldo ,antes.dfdf_mensual ,antes.dfdf_tot_cuotas ,antes.dfdf_num_cuotas 
    ,antes.dfdf_documen ,antes.dfdf_codeudor ,antes.dfdf_nom_bene ,antes.dfdf_juz_con 
    ,antes.dfdf_si_no ,luego.dfdf_catalogo ,luego.dfdf_codigo ,luego.dfdf_nu_reg 
    ,luego.dfdf_cod_control ,luego.dfdf_tipo_desc ,luego.dfdf_fec_ini 
    ,luego.dfdf_ult_act ,luego.dfdf_fec_cer ,luego.dfdf_monto ,luego.dfdf_saldo 
    ,luego.dfdf_mensual ,luego.dfdf_tot_cuotas ,luego.dfdf_num_cuotas 
    ,luego.dfdf_documen ,luego.dfdf_codeudor ,luego.dfdf_nom_bene ,luego.dfdf_juz_con 
    ,luego.dfdf_si_no ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".msan_tri update on "informix".msan referencing 
    old as ant new as nue
    for each row
        (
        insert into "informix".aud_msan (ant_san_catalogo,ant_san_tran,
    ant_san_grado,ant_san_sancion,ant_san_tiempo,ant_san_fec_inicio,ant_san_depen,
    ant_san_ord_gral,ant_san_fec_og,ant_san_punto_og,ant_san_estado,nue_catalogo,
    nue_san_tran,nue_san_grado,nue_san_sancion,nue_san_tiempo,nue_san_fec_inicio,
    nue_san_depen,nue_san_ord_gral,nue_san_fec_og,nue_san_punto_og,nue_san_estado,
    usuario,hora,accion,terminal)  values (ant.san_catalogo ,ant.san_tran 
    ,ant.san_grado ,ant.san_sancion ,ant.san_tiempo ,ant.san_fec_inicio 
    ,ant.san_depen ,ant.san_ord_gral ,ant.san_fec_og ,ant.san_punto_og 
    ,ant.san_estado ,nue.san_catalogo ,nue.san_tran ,nue.san_grado ,nue.san_sancion 
    ,nue.san_tiempo ,nue.san_fec_inicio ,nue.san_depen ,nue.san_ord_gral 
    ,nue.san_fec_og ,nue.san_punto_og ,nue.san_estado ,USER ,CURRENT 
    year to fraction(3) ,'U' ,'ibm3151' ));

create trigger "informix".msan_tri1 delete on "informix".msan 
    referencing old as ant
    for each row
        (
        insert into "informix".aud_msan (ant_san_catalogo,ant_san_tran,
    ant_san_grado,ant_san_sancion,ant_san_tiempo,ant_san_fec_inicio,ant_san_depen,
    ant_san_ord_gral,ant_san_fec_og,ant_san_punto_og,ant_san_estado,usuario,
    hora,accion,terminal)  values (ant.san_catalogo ,ant.san_tran ,ant.san_grado 
    ,ant.san_sancion ,ant.san_tiempo ,ant.san_fec_inicio ,ant.san_depen 
    ,ant.san_ord_gral ,ant.san_fec_og ,ant.san_punto_og ,ant.san_estado 
    ,USER ,CURRENT year to fraction(3) ,'D' ,'ibm3151' ));

create trigger "informix".msan_tri2 insert on "informix".msan 
    referencing new as nue
    for each row
        (
        insert into "informix".aud_msan (nue_catalogo,nue_san_tran,
    nue_san_grado,nue_san_sancion,nue_san_tiempo,nue_san_fec_inicio,nue_san_depen,
    nue_san_ord_gral,nue_san_fec_og,nue_san_punto_og,nue_san_estado,usuario,
    hora,accion,terminal)  values (nue.san_catalogo ,nue.san_tran ,nue.san_grado 
    ,nue.san_sancion ,nue.san_tiempo ,nue.san_fec_inicio ,nue.san_depen 
    ,nue.san_ord_gral ,nue.san_fec_og ,nue.san_punto_og ,nue.san_estado 
    ,USER ,CURRENT year to fraction(3) ,'I' ,'ibm3151' ));

create trigger "informix".del_f_seguros_gt delete on "informix"
    .f_seguros_gt referencing old as antes
    for each row
        (
        insert into "informix".aud_f_seguros_gt (fgt_catalogo,
    fgt_codigo,fgt_fec_ini,fgt_fecha,fgt_registro,fgt_mensual,fgt_control,
    desp_fgt_catalogo,desp_fgt_codigo,desp_fgt_fec_ini,desp_fgt_fecha,
    desp_fgt_registro,desp_fgt_mensual,desp_fgt_control,accion,usuario,
    hora)  values (antes.fgt_catalogo ,antes.fgt_codigo ,antes.fgt_fec_ini 
    ,antes.fgt_fecha ,antes.fgt_registro ,antes.fgt_mensual ,antes.fgt_control 
    ,NULL ,NULL ,'' ,'' ,'' ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_f_seguros_gt insert on "informix"
    .f_seguros_gt referencing new as luego
    for each row
        (
        insert into "informix".aud_f_seguros_gt (fgt_catalogo,
    fgt_codigo,fgt_fec_ini,fgt_fecha,fgt_registro,fgt_mensual,fgt_control,
    desp_fgt_catalogo,desp_fgt_codigo,desp_fgt_fec_ini,desp_fgt_fecha,
    desp_fgt_registro,desp_fgt_mensual,desp_fgt_control,accion,usuario,
    hora)  values (NULL ,NULL ,'' ,'' ,'' ,NULL ,'' ,luego.fgt_catalogo ,
    luego.fgt_codigo ,luego.fgt_fec_ini ,luego.fgt_fecha ,luego.fgt_registro 
    ,luego.fgt_mensual ,luego.fgt_control ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_f_seguros_gt update on "informix"
    .f_seguros_gt referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_f_seguros_gt (fgt_catalogo,
    fgt_codigo,fgt_fec_ini,fgt_fecha,fgt_registro,fgt_mensual,fgt_control,
    desp_fgt_catalogo,desp_fgt_codigo,desp_fgt_fec_ini,desp_fgt_fecha,
    desp_fgt_registro,desp_fgt_mensual,desp_fgt_control,accion,usuario,
    hora)  values (antes.fgt_catalogo ,antes.fgt_codigo ,antes.fgt_fec_ini 
    ,antes.fgt_fecha ,antes.fgt_registro ,antes.fgt_mensual ,antes.fgt_control 
    ,luego.fgt_catalogo ,luego.fgt_codigo ,luego.fgt_fec_ini ,luego.fgt_fecha 
    ,luego.fgt_registro ,luego.fgt_mensual ,luego.fgt_control ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_pafe_oficiales update on "informix"
    .pafe_oficiales referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_pafe_oficiales (pafe_catalogo,
    pafe_numero,pafe_fecha,pafe_dominadas,pafe_abdominales,pafe_carrera,
    pafe_alterno,pafe_nota,desp_pafe_catalogo,desp_pafe_numero,desp_pafe_fecha,
    desp_pafe_dominadas,desp_pafe_abdominales,desp_pafe_carrera,desp_pafe_alterno,
    desp_pafe_nota,accion,usuario,hora)  values (antes.pafe_catalogo 
    ,antes.pafe_numero ,antes.pafe_fecha ,antes.pafe_dominadas ,antes.pafe_abdominales 
    ,antes.pafe_carrera ,antes.pafe_alterno ,antes.pafe_nota ,luego.pafe_catalogo 
    ,luego.pafe_numero ,luego.pafe_fecha ,luego.pafe_dominadas ,luego.pafe_abdominales 
    ,luego.pafe_carrera ,luego.pafe_alterno ,luego.pafe_nota ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_pafe_oficiales insert on "informix"
    .pafe_oficiales referencing new as luego
    for each row
        (
        insert into "informix".aud_pafe_oficiales (pafe_catalogo,
    pafe_numero,pafe_fecha,pafe_dominadas,pafe_abdominales,pafe_carrera,
    pafe_alterno,pafe_nota,desp_pafe_catalogo,desp_pafe_numero,desp_pafe_fecha,
    desp_pafe_dominadas,desp_pafe_abdominales,desp_pafe_carrera,desp_pafe_alterno,
    desp_pafe_nota,accion,usuario,hora)  values (NULL ,NULL ,' ' ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,luego.pafe_catalogo ,luego.pafe_numero ,
    luego.pafe_fecha ,luego.pafe_dominadas ,luego.pafe_abdominales ,luego.pafe_carrera 
    ,luego.pafe_alterno ,luego.pafe_nota ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_pafe_oficiales delete on "informix"
    .pafe_oficiales referencing old as antes
    for each row
        (
        insert into "informix".aud_pafe_oficiales (pafe_catalogo,
    pafe_numero,pafe_fecha,pafe_dominadas,pafe_abdominales,pafe_carrera,
    pafe_alterno,pafe_nota,desp_pafe_catalogo,desp_pafe_numero,desp_pafe_fecha,
    desp_pafe_dominadas,desp_pafe_abdominales,desp_pafe_carrera,desp_pafe_alterno,
    desp_pafe_nota,accion,usuario,hora)  values (antes.pafe_catalogo 
    ,antes.pafe_numero ,antes.pafe_fecha ,antes.pafe_dominadas ,antes.pafe_abdominales 
    ,antes.pafe_carrera ,antes.pafe_alterno ,antes.pafe_nota ,NULL ,NULL 
    ,' ' ,NULL ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".upd_dfasig update on "informix".dfasig 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dfasig (antes1,antes2,antes3,
    antes4,despues1,despues2,despues3,despues4,hora,accion,usuario,tabname) 
     values (antes.dfa_catalogo ,antes.dfa_codigo ,antes.dfa_fecha_ini 
    ,antes.dfa_cantidad ,luego.dfa_catalogo ,luego.dfa_codigo ,luego.dfa_fecha_ini 
    ,luego.dfa_cantidad ,CURRENT year to fraction(3) ,'U' ,USER ,'dfasig'
     ));

create trigger "informix".ins_dfasig insert on "informix".dfasig 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_dfasig (antes1,antes2,antes3,
    antes4,despues1,despues2,despues3,despues4,hora,accion,usuario,tabname) 
     values (' ' ,' ' ,' ' ,' ' ,luego.dfa_catalogo ,luego.dfa_codigo ,luego.dfa_fecha_ini 
    ,luego.dfa_cantidad ,CURRENT year to fraction(3) ,'I' ,USER ,'dfasig'
     ));

create trigger "informix".del_dfasig delete on "informix".dfasig 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_dfasig (antes1,antes2,antes3,
    antes4,despues1,despues2,despues3,despues4,hora,accion,usuario,tabname) 
     values (antes.dfa_catalogo ,antes.dfa_codigo ,antes.dfa_fecha_ini 
    ,antes.dfa_cantidad ,' ' ,' ' ,' ' ,' ' ,CURRENT year to fraction(3) 
    ,'D' ,USER ,'dfasig' ));

create trigger "informix".act_c_tareas update on "informix".c_tareas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_c_tareas (tar_codigo,tar_fecha_fin,
    tar_tarea,desp_tar_codigo,desp_tar_fecha_fin,desp_tar_tarea,accion,
    usuario,hora)  values (antes.tar_codigo ,antes.tar_fecha_fin ,antes.tar_tarea 
    ,luego.tar_codigo ,luego.tar_fecha_fin ,luego.tar_tarea ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_c_tareas insert on "informix".c_tareas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_c_tareas (tar_codigo,tar_fecha_fin,
    tar_tarea,desp_tar_codigo,desp_tar_fecha_fin,desp_tar_tarea,accion,
    usuario,hora)  values (NULL ,' ' ,NULL ,luego.tar_codigo ,luego.tar_fecha_fin 
    ,luego.tar_tarea ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_c_tareas delete on "informix".c_tareas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_c_tareas (tar_codigo,tar_fecha_fin,
    tar_tarea,desp_tar_codigo,desp_tar_fecha_fin,desp_tar_tarea,accion,
    usuario,hora)  values (antes.tar_codigo ,antes.tar_fecha_fin ,antes.tar_tarea 
    ,NULL ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_recepcion update on "informix".recepcion 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_recepcion (rec_codigo,rec_registro,
    rec_oficio,rec_fec_recibe,rec_usuario,rec_dependencia,rec_tecnico,
    rec_tel,rec_equipo,rec_marca,rec_modelo,rec_problema,rec_diagnostico,
    rec_reparacion,rec_proceso,rec_obs,rec_entrega,rec_recibe,rec_fec_entrega,
    desp_rec_codigo,desp_rec_registro,desp_rec_oficio,desp_rec_fec_recibe,
    desp_rec_usuario,desp_rec_dependencia,desp_rec_tecnico,desp_rec_tel,
    desp_rec_equipo,desp_rec_marca,desp_rec_modelo,desp_rec_problema,
    desp_rec_diagnostico,desp_rec_reparacion,desp_rec_proceso,desp_rec_obs,
    desp_rec_entrega,desp_rec_recibe,desp_rec_fec_entrega,accion,usuario,
    hora)  values (antes.rec_codigo ,antes.rec_registro ,antes.rec_oficio 
    ,antes.rec_fec_recibe ,antes.rec_usuario ,antes.rec_dependencia ,
    antes.rec_tecnico ,antes.rec_tel ,antes.rec_equipo ,antes.rec_marca 
    ,antes.rec_modelo ,antes.rec_problema ,antes.rec_diagnostico ,antes.rec_reparacion 
    ,antes.rec_proceso ,antes.rec_obs ,antes.rec_entrega ,antes.rec_recibe 
    ,antes.rec_fec_entrega ,luego.rec_codigo ,luego.rec_registro ,luego.rec_oficio 
    ,luego.rec_fec_recibe ,luego.rec_usuario ,luego.rec_dependencia ,
    luego.rec_tecnico ,luego.rec_tel ,luego.rec_equipo ,luego.rec_marca 
    ,luego.rec_modelo ,luego.rec_problema ,luego.rec_diagnostico ,luego.rec_reparacion 
    ,luego.rec_proceso ,luego.rec_obs ,luego.rec_entrega ,luego.rec_recibe 
    ,luego.rec_fec_entrega ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_recepcion insert on "informix".recepcion 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_recepcion (rec_codigo,rec_registro,
    rec_oficio,rec_fec_recibe,rec_usuario,rec_dependencia,rec_tecnico,
    rec_tel,rec_equipo,rec_marca,rec_modelo,rec_problema,rec_diagnostico,
    rec_reparacion,rec_proceso,rec_obs,rec_entrega,rec_recibe,rec_fec_entrega,
    desp_rec_codigo,desp_rec_registro,desp_rec_oficio,desp_rec_fec_recibe,
    desp_rec_usuario,desp_rec_dependencia,desp_rec_tecnico,desp_rec_tel,
    desp_rec_equipo,desp_rec_marca,desp_rec_modelo,desp_rec_problema,
    desp_rec_diagnostico,desp_rec_reparacion,desp_rec_proceso,desp_rec_obs,
    desp_rec_entrega,desp_rec_recibe,desp_rec_fec_entrega,accion,usuario,
    hora)  values (NULL ,' ' ,' ' ,' ' ,' ' ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL ,' ' ,' ' ,luego.rec_codigo ,luego.rec_registro 
    ,luego.rec_oficio ,luego.rec_fec_recibe ,luego.rec_usuario ,luego.rec_dependencia 
    ,luego.rec_tecnico ,luego.rec_tel ,luego.rec_equipo ,luego.rec_marca 
    ,luego.rec_modelo ,luego.rec_problema ,luego.rec_diagnostico ,luego.rec_reparacion 
    ,luego.rec_proceso ,luego.rec_obs ,luego.rec_entrega ,luego.rec_recibe 
    ,luego.rec_fec_entrega ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_recepcion delete on "informix".recepcion 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_recepcion (rec_codigo,rec_registro,
    rec_oficio,rec_fec_recibe,rec_usuario,rec_dependencia,rec_tecnico,
    rec_tel,rec_equipo,rec_marca,rec_modelo,rec_problema,rec_diagnostico,
    rec_reparacion,rec_proceso,rec_obs,rec_entrega,rec_recibe,rec_fec_entrega,
    desp_rec_codigo,desp_rec_registro,desp_rec_oficio,desp_rec_fec_recibe,
    desp_rec_usuario,desp_rec_dependencia,desp_rec_tecnico,desp_rec_tel,
    desp_rec_equipo,desp_rec_marca,desp_rec_modelo,desp_rec_problema,
    desp_rec_diagnostico,desp_rec_reparacion,desp_rec_proceso,desp_rec_obs,
    desp_rec_entrega,desp_rec_recibe,desp_rec_fec_entrega,accion,usuario,
    hora)  values (antes.rec_codigo ,antes.rec_registro ,antes.rec_oficio 
    ,antes.rec_fec_recibe ,antes.rec_usuario ,antes.rec_dependencia ,
    antes.rec_tecnico ,antes.rec_tel ,antes.rec_equipo ,antes.rec_marca 
    ,antes.rec_modelo ,antes.rec_problema ,antes.rec_diagnostico ,antes.rec_reparacion 
    ,antes.rec_proceso ,antes.rec_obs ,antes.rec_entrega ,antes.rec_recibe 
    ,antes.rec_fec_entrega ,NULL ,' ' ,' ' ,' ' ,' ' ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,NULL ,' ' ,' ' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_marca update on "informix".marca 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_marca (mar_codigo,mar_marca,
    desp_mar_codigo,desp_mar_marca,accion,usuario,hora)  values (antes.mar_codigo 
    ,antes.mar_marca ,luego.mar_codigo ,luego.mar_marca ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_marca insert on "informix".marca 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_marca (mar_codigo,mar_marca,
    desp_mar_codigo,desp_mar_marca,accion,usuario,hora)  values (NULL 
    ,' ' ,luego.mar_codigo ,luego.mar_marca ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_marca delete on "informix".marca 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_marca (mar_codigo,mar_marca,
    desp_mar_codigo,desp_mar_marca,accion,usuario,hora)  values (antes.mar_codigo 
    ,antes.mar_marca ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_equipos update on "informix".equipos 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_equipos (eq_codigo,eq_tipo,
    desp_eq_codigo,desp_eq_tipo,accion,usuario,hora)  values (antes.eq_codigo 
    ,antes.eq_tipo ,luego.eq_codigo ,luego.eq_tipo ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_equipos insert on "informix".equipos 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_equipos (eq_codigo,eq_tipo,
    desp_eq_codigo,desp_eq_tipo,accion,usuario,hora)  values (NULL ,' '
     ,luego.eq_codigo ,luego.eq_tipo ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_equipos delete on "informix".equipos 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_equipos (eq_codigo,eq_tipo,
    desp_eq_codigo,desp_eq_tipo,accion,usuario,hora)  values (antes.eq_codigo 
    ,antes.eq_tipo ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_eacciones update on "informix".eacciones 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eacciones (e_registro,e_catalogo,
    e_grado,e_puesto,e_fecha,e_direccion,desp_e_registro,desp_e_catalogo,
    desp_e_grado,desp_e_puesto,desp_e_fecha,desp_e_direccion,accion,usuario,
    hora)  values (antes.e_registro ,antes.e_catalogo ,antes.e_grado 
    ,antes.e_puesto ,antes.e_fecha ,antes.e_direccion ,luego.e_registro 
    ,luego.e_catalogo ,luego.e_grado ,luego.e_puesto ,luego.e_fecha ,
    luego.e_direccion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_eacciones insert on "informix".eacciones 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_eacciones (e_registro,e_catalogo,
    e_grado,e_puesto,e_fecha,e_direccion,desp_e_registro,desp_e_catalogo,
    desp_e_grado,desp_e_puesto,desp_e_fecha,desp_e_direccion,accion,usuario,
    hora)  values (NULL ,NULL ,NULL ,' ' ,' ' ,' ' ,luego.e_registro ,luego.e_catalogo 
    ,luego.e_grado ,luego.e_puesto ,luego.e_fecha ,luego.e_direccion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_eacciones delete on "informix".eacciones 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_eacciones (e_registro,e_catalogo,
    e_grado,e_puesto,e_fecha,e_direccion,desp_e_registro,desp_e_catalogo,
    desp_e_grado,desp_e_puesto,desp_e_fecha,desp_e_direccion,accion,usuario,
    hora)  values (antes.e_registro ,antes.e_catalogo ,antes.e_grado 
    ,antes.e_puesto ,antes.e_fecha ,antes.e_direccion ,NULL ,NULL ,NULL 
    ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_eusuarios update on "informix".eusuarios 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eusuarios (eu_catalogo,eu_direccion,
    desp_eu_catalogo,desp_eu_direccion,accion,usuario,hora)  values (antes.eu_catalogo 
    ,antes.eu_direccion ,luego.eu_catalogo ,luego.eu_direccion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_eusuarios insert on "informix".eusuarios 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_eusuarios (eu_catalogo,eu_direccion,
    desp_eu_catalogo,desp_eu_direccion,accion,usuario,hora)  values (NULL 
    ,' ' ,luego.eu_catalogo ,luego.eu_direccion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_eusuarios delete on "informix".eusuarios 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_eusuarios (eu_catalogo,eu_direccion,
    desp_eu_catalogo,desp_eu_direccion,accion,usuario,hora)  values (antes.eu_catalogo 
    ,antes.eu_direccion ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_det_acciones update on "informix"
    .det_acciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_det_acciones (det_a_registro,
    det_a_linea,det_a_accion,det_a_tipo,desp_det_a_registro,desp_det_a_linea,
    desp_det_a_accion,desp_det_a_tipo,accion,usuario,hora)  values (antes.det_a_registro 
    ,antes.det_a_linea ,antes.det_a_accion ,antes.det_a_tipo ,luego.det_a_registro 
    ,luego.det_a_linea ,luego.det_a_accion ,luego.det_a_tipo ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_det_acciones insert on "informix"
    .det_acciones referencing new as luego
    for each row
        (
        insert into "informix".aud_det_acciones (det_a_registro,
    det_a_linea,det_a_accion,det_a_tipo,desp_det_a_registro,desp_det_a_linea,
    desp_det_a_accion,desp_det_a_tipo,accion,usuario,hora)  values (NULL 
    ,NULL ,' ' ,' ' ,luego.det_a_registro ,luego.det_a_linea ,luego.det_a_accion 
    ,luego.det_a_tipo ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_det_acciones delete on "informix"
    .det_acciones referencing old as antes
    for each row
        (
        insert into "informix".aud_det_acciones (det_a_registro,
    det_a_linea,det_a_accion,det_a_tipo,desp_det_a_registro,desp_det_a_linea,
    desp_det_a_accion,desp_det_a_tipo,accion,usuario,hora)  values (antes.det_a_registro 
    ,antes.det_a_linea ,antes.det_a_accion ,antes.det_a_tipo ,NULL ,NULL 
    ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_paf_actas insert on "informix".paf_actas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_paf_actas (act_codigo,act_desc,
    act_fecha,desp_act_codigo,desp_act_desc,desp_act_fecha,accion,usuario,
    hora)  values (NULL ,' ' ,' ' ,luego.act_codigo ,luego.act_desc ,luego.act_fecha 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_paf_actas update on "informix".paf_actas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_paf_actas (act_codigo,act_desc,
    act_fecha,desp_act_codigo,desp_act_desc,desp_act_fecha,accion,usuario,
    hora)  values (antes.act_codigo ,antes.act_desc ,antes.act_fecha 
    ,luego.act_codigo ,luego.act_desc ,luego.act_fecha ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_paf_actas delete on "informix".paf_actas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_paf_actas (act_codigo,act_desc,
    act_fecha,desp_act_codigo,desp_act_desc,desp_act_fecha,accion,usuario,
    hora)  values (antes.act_codigo ,antes.act_desc ,antes.act_fecha 
    ,NULL ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_paf_calendario insert on "informix"
    .paf_calendario referencing new as luego
    for each row
        (
        insert into "informix".aud_paf_calendario (cal_periodo,
    cal_fecha,cal_habil_sino,desp_cal_periodo,desp_cal_fecha,desp_cal_habil_sino,
    accion,usuario,hora)  values (NULL ,' ' ,' ' ,luego.cal_periodo ,luego.cal_fecha 
    ,luego.cal_habil_sino ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_paf_calendario update on "informix"
    .paf_calendario referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_paf_calendario (cal_periodo,
    cal_fecha,cal_habil_sino,desp_cal_periodo,desp_cal_fecha,desp_cal_habil_sino,
    accion,usuario,hora)  values (antes.cal_periodo ,antes.cal_fecha 
    ,antes.cal_habil_sino ,luego.cal_periodo ,luego.cal_fecha ,luego.cal_habil_sino 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_paf_calendario delete on "informix"
    .paf_calendario referencing old as antes
    for each row
        (
        insert into "informix".aud_paf_calendario (cal_periodo,
    cal_fecha,cal_habil_sino,desp_cal_periodo,desp_cal_fecha,desp_cal_habil_sino,
    accion,usuario,hora)  values (antes.cal_periodo ,antes.cal_fecha 
    ,antes.cal_habil_sino ,NULL ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_paf_periodos insert on "informix"
    .paf_periodos referencing new as luego
    for each row
        (
        insert into "informix".aud_paf_periodos (per_periodo,
    per_pcerrado,per_visible,desp_per_periodo,desp_per_pcerrado,desp_per_visible,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,luego.per_periodo 
    ,luego.per_pcerrado ,luego.per_visible ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_paf_periodos update on "informix"
    .paf_periodos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_paf_periodos (per_periodo,
    per_pcerrado,per_visible,desp_per_periodo,desp_per_pcerrado,desp_per_visible,
    accion,usuario,hora)  values (antes.per_periodo ,antes.per_pcerrado 
    ,antes.per_visible ,luego.per_periodo ,luego.per_pcerrado ,luego.per_visible 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_paf_periodos delete on "informix"
    .paf_periodos referencing old as antes
    for each row
        (
        insert into "informix".aud_paf_periodos (per_periodo,
    per_pcerrado,per_visible,desp_per_periodo,desp_per_pcerrado,desp_per_visible,
    accion,usuario,hora)  values (antes.per_periodo ,antes.per_pcerrado 
    ,antes.per_visible ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_paf_programador insert on "informix"
    .paf_programador referencing new as luego
    for each row
        (
        insert into "informix".aud_paf_programador (pro_catalogo,
    pro_nperiodo,pro_fecha_prog,pro_recal,pro_evaluado,pro_cerrado,desp_pro_catalogo,
    desp_pro_nperiodo,desp_pro_fecha_prog,desp_pro_recal,desp_pro_evaluado,
    desp_pro_cerrado,accion,usuario,hora)  values (NULL ,NULL ,' ' ,' '
     ,' ' ,NULL ,luego.pro_catalogo ,luego.pro_nperiodo ,luego.pro_fecha_prog 
    ,luego.pro_recal ,luego.pro_evaluado ,luego.pro_cerrado ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_paf_programador update on "informix"
    .paf_programador referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_paf_programador (pro_catalogo,
    pro_nperiodo,pro_fecha_prog,pro_recal,pro_evaluado,pro_cerrado,desp_pro_catalogo,
    desp_pro_nperiodo,desp_pro_fecha_prog,desp_pro_recal,desp_pro_evaluado,
    desp_pro_cerrado,accion,usuario,hora)  values (antes.pro_catalogo 
    ,antes.pro_nperiodo ,antes.pro_fecha_prog ,antes.pro_recal ,antes.pro_evaluado 
    ,antes.pro_cerrado ,luego.pro_catalogo ,luego.pro_nperiodo ,luego.pro_fecha_prog 
    ,luego.pro_recal ,luego.pro_evaluado ,luego.pro_cerrado ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_paf_programador delete on "informix"
    .paf_programador referencing old as antes
    for each row
        (
        insert into "informix".aud_paf_programador (pro_catalogo,
    pro_nperiodo,pro_fecha_prog,pro_recal,pro_evaluado,pro_cerrado,desp_pro_catalogo,
    desp_pro_nperiodo,desp_pro_fecha_prog,desp_pro_recal,desp_pro_evaluado,
    desp_pro_cerrado,accion,usuario,hora)  values (antes.pro_catalogo 
    ,antes.pro_nperiodo ,antes.pro_fecha_prog ,antes.pro_recal ,antes.pro_evaluado 
    ,antes.pro_cerrado ,NULL ,NULL ,' ' ,' ' ,' ' ,NULL ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_paf_detalle insert on "informix"
    .paf_detalle referencing new as luego
    for each row
        (
        insert into "informix".aud_paf_detalle (det_catalogo,
    det_nperiodo,det_evento1,det_evento2,det_evento3,det_nota,det_observa,
    det_actanumero,det_cod_grado,desp_det_catalogo,desp_det_nperiodo,
    desp_det_evento1,desp_det_evento2,desp_det_evento3,desp_det_nota,
    desp_det_observa,desp_det_actanumero,desp_det_cod_grado,accion,usuario,
    hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,' ' ,NULL ,NULL 
    ,luego.det_catalogo ,luego.det_nperiodo ,luego.det_evento1 ,luego.det_evento2 
    ,luego.det_evento3 ,luego.det_nota ,luego.det_observa ,luego.det_actanumero 
    ,luego.det_cod_grado ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_paf_detalle update on "informix"
    .paf_detalle referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_paf_detalle (det_catalogo,
    det_nperiodo,det_evento1,det_evento2,det_evento3,det_nota,det_observa,
    det_actanumero,det_cod_grado,desp_det_catalogo,desp_det_nperiodo,
    desp_det_evento1,desp_det_evento2,desp_det_evento3,desp_det_nota,
    desp_det_observa,desp_det_actanumero,desp_det_cod_grado,accion,usuario,
    hora)  values (antes.det_catalogo ,antes.det_nperiodo ,antes.det_evento1 
    ,antes.det_evento2 ,antes.det_evento3 ,antes.det_nota ,antes.det_observa 
    ,antes.det_actanumero ,antes.det_cod_grado ,luego.det_catalogo ,luego.det_nperiodo 
    ,luego.det_evento1 ,luego.det_evento2 ,luego.det_evento3 ,luego.det_nota 
    ,luego.det_observa ,luego.det_actanumero ,luego.det_cod_grado ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_paf_detalle delete on "informix"
    .paf_detalle referencing old as antes
    for each row
        (
        insert into "informix".aud_paf_detalle (det_catalogo,
    det_nperiodo,det_evento1,det_evento2,det_evento3,det_nota,det_observa,
    det_actanumero,det_cod_grado,desp_det_catalogo,desp_det_nperiodo,
    desp_det_evento1,desp_det_evento2,desp_det_evento3,desp_det_nota,
    desp_det_observa,desp_det_actanumero,desp_det_cod_grado,accion,usuario,
    hora)  values (antes.det_catalogo ,antes.det_nperiodo ,antes.det_evento1 
    ,antes.det_evento2 ,antes.det_evento3 ,antes.det_nota ,antes.det_observa 
    ,antes.det_actanumero ,antes.det_cod_grado ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,' ' ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_freforma update on "informix".freforma 
    referencing old as antes new as despues
    for each row
        (
        insert into "informix".aud_freforma (antes_fr_catalogo,
    antes_fr_codigo,antes_fr_fec_ini,antes_fr_fecha,antes_fr_registro,
    antes_fr_mensual,antes_fr_control,despues_fr_catalogo,despues_fr_codigo,
    despues_fr_fec_ini,despues_fr_fecha,despues_fr_registro,despues_fr_mensual,
    despues_fr_control,accion,usuario,hora)  values (antes.fr_catalogo 
    ,antes.fr_codigo ,antes.fr_fec_ini ,antes.fr_fecha ,antes.fr_registro 
    ,antes.fr_mensual ,antes.fr_control ,despues.fr_catalogo ,despues.fr_codigo 
    ,despues.fr_fec_ini ,despues.fr_fecha ,despues.fr_registro ,despues.fr_mensual 
    ,despues.fr_control ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_freforma insert on "informix".freforma 
    referencing new as despues
    for each row
        (
        insert into "informix".aud_freforma (antes_fr_catalogo,
    antes_fr_codigo,antes_fr_fec_ini,antes_fr_fecha,antes_fr_registro,
    antes_fr_mensual,antes_fr_control,despues_fr_catalogo,despues_fr_codigo,
    despues_fr_fec_ini,despues_fr_fecha,despues_fr_registro,despues_fr_mensual,
    despues_fr_control,accion,usuario,hora)  values (NULL ,NULL ,NULL 
    ,NULL ,' ' ,NULL ,' ' ,despues.fr_catalogo ,despues.fr_codigo ,despues.fr_fec_ini 
    ,despues.fr_fecha ,despues.fr_registro ,despues.fr_mensual ,despues.fr_control 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_freforma delete on "informix".freforma 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_freforma (antes_fr_catalogo,
    antes_fr_codigo,antes_fr_fec_ini,antes_fr_fecha,antes_fr_registro,
    antes_fr_mensual,antes_fr_control,despues_fr_catalogo,despues_fr_codigo,
    despues_fr_fec_ini,despues_fr_fecha,despues_fr_registro,despues_fr_mensual,
    despues_fr_control,accion,usuario,hora)  values (antes.fr_catalogo 
    ,antes.fr_codigo ,antes.fr_fec_ini ,antes.fr_fecha ,antes.fr_registro 
    ,antes.fr_mensual ,antes.fr_control ,NULL ,NULL ,NULL ,NULL ,' ' ,
    NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_licencias update on "informix".licencias 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_licencias (lic_catalogo,lic_situacion,
    lic_inicia,lic_finaliza,lic_obs,desp_lic_catalogo,desp_lic_situacion,
    desp_lic_inicia,desp_lic_finaliza,desp_lic_obs,accion,usuario,hora) 
     values (antes.lic_catalogo ,antes.lic_situacion ,antes.lic_inicia 
    ,antes.lic_finaliza ,antes.lic_obs ,luego.lic_catalogo ,luego.lic_situacion 
    ,luego.lic_inicia ,luego.lic_finaliza ,luego.lic_obs ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_licencias insert on "informix".licencias 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_licencias (lic_catalogo,lic_situacion,
    lic_inicia,lic_finaliza,lic_obs,desp_lic_catalogo,desp_lic_situacion,
    desp_lic_inicia,desp_lic_finaliza,desp_lic_obs,accion,usuario,hora) 
     values (NULL ,' ' ,' ' ,' ' ,' ' ,luego.lic_catalogo ,luego.lic_situacion 
    ,luego.lic_inicia ,luego.lic_finaliza ,luego.lic_obs ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_licencias delete on "informix".licencias 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_licencias (lic_catalogo,lic_situacion,
    lic_inicia,lic_finaliza,lic_obs,desp_lic_catalogo,desp_lic_situacion,
    desp_lic_inicia,desp_lic_finaliza,desp_lic_obs,accion,usuario,hora) 
     values (antes.lic_catalogo ,antes.lic_situacion ,antes.lic_inicia 
    ,antes.lic_finaliza ,antes.lic_obs ,NULL ,' ' ,' ' ,' ' ,' ' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_psan_orden insert on "informix".psan_orden 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_psan_orden (ord_catalogo,ord_fecha,
    ord_sancion,ord_ord_gnl,ord_punto_og,ord_fecha_og,desp_ord_catalogo,
    desp_ord_fecha,desp_ord_sancion,desp_ord_ord_gnl,desp_ord_punto_og,
    desp_ord_fecha_og,accion,usuario,hora)  values (NULL ,' ' ,NULL ,' '
     ,NULL ,' ' ,luego.ord_catalogo ,luego.ord_fecha ,luego.ord_sancion 
    ,luego.ord_ord_gnl ,luego.ord_punto_og ,luego.ord_fecha_og ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_psan_orden update on "informix".psan_orden 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_psan_orden (ord_catalogo,ord_fecha,
    ord_sancion,ord_ord_gnl,ord_punto_og,ord_fecha_og,desp_ord_catalogo,
    desp_ord_fecha,desp_ord_sancion,desp_ord_ord_gnl,desp_ord_punto_og,
    desp_ord_fecha_og,accion,usuario,hora)  values (antes.ord_catalogo 
    ,antes.ord_fecha ,antes.ord_sancion ,antes.ord_ord_gnl ,antes.ord_punto_og 
    ,antes.ord_fecha_og ,luego.ord_catalogo ,luego.ord_fecha ,luego.ord_sancion 
    ,luego.ord_ord_gnl ,luego.ord_punto_og ,luego.ord_fecha_og ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_psan_orden delete on "informix".psan_orden 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_psan_orden (ord_catalogo,ord_fecha,
    ord_sancion,ord_ord_gnl,ord_punto_og,ord_fecha_og,desp_ord_catalogo,
    desp_ord_fecha,desp_ord_sancion,desp_ord_ord_gnl,desp_ord_punto_og,
    desp_ord_fecha_og,accion,usuario,hora)  values (antes.ord_catalogo 
    ,antes.ord_fecha ,antes.ord_sancion ,antes.ord_ord_gnl ,antes.ord_punto_og 
    ,antes.ord_fecha_og ,NULL ,' ' ,NULL ,' ' ,NULL ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_psan_estadistica insert on "informix"
    .psan_estadistica referencing new as luego
    for each row
        (
        insert into "informix".aud_psan_estadistica (est_catalogo,
    est_grado,est_horas,est_demeritos,desp_est_catalogo,desp_est_grado,
    desp_est_horas,desp_est_demeritos,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,NULL ,luego.est_catalogo ,luego.est_grado ,luego.est_horas 
    ,luego.est_demeritos ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_psan_estadistica update on "informix"
    .psan_estadistica referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_psan_estadistica (est_catalogo,
    est_grado,est_horas,est_demeritos,desp_est_catalogo,desp_est_grado,
    desp_est_horas,desp_est_demeritos,accion,usuario,hora)  values (antes.est_catalogo 
    ,antes.est_grado ,antes.est_horas ,antes.est_demeritos ,luego.est_catalogo 
    ,luego.est_grado ,luego.est_horas ,luego.est_demeritos ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_psan_estadistica delete on "informix"
    .psan_estadistica referencing old as antes
    for each row
        (
        insert into "informix".aud_psan_estadistica (est_catalogo,
    est_grado,est_horas,est_demeritos,desp_est_catalogo,desp_est_grado,
    desp_est_horas,desp_est_demeritos,accion,usuario,hora)  values (antes.est_catalogo 
    ,antes.est_grado ,antes.est_horas ,antes.est_demeritos ,NULL ,NULL 
    ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_psan_registro insert on "informix"
    .psan_registro referencing new as luego
    for each row
        (
        insert into "informix".aud_psan_registro (reg_descripcion,
    reg_documento,reg_vigente,reg_derogado,desp_reg_descripcion,desp_reg_documento,
    desp_reg_vigente,desp_reg_derogado,accion,usuario,hora)  values (
    ' ' ,' ' ,' ' ,' ' ,luego.reg_descripcion ,luego.reg_documento ,luego.reg_vigente 
    ,luego.reg_derogado ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_psan_registro update on "informix"
    .psan_registro referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_psan_registro (reg_descripcion,
    reg_documento,reg_vigente,reg_derogado,desp_reg_descripcion,desp_reg_documento,
    desp_reg_vigente,desp_reg_derogado,accion,usuario,hora)  values (antes.reg_descripcion 
    ,antes.reg_documento ,antes.reg_vigente ,antes.reg_derogado ,luego.reg_descripcion 
    ,luego.reg_documento ,luego.reg_vigente ,luego.reg_derogado ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_psan_registro delete on "informix"
    .psan_registro referencing old as antes
    for each row
        (
        insert into "informix".aud_psan_registro (reg_descripcion,
    reg_documento,reg_vigente,reg_derogado,desp_reg_descripcion,desp_reg_documento,
    desp_reg_vigente,desp_reg_derogado,accion,usuario,hora)  values (antes.reg_descripcion 
    ,antes.reg_documento ,antes.reg_vigente ,antes.reg_derogado ,' ' ,
    ' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_insti update on "informix".insti 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_insti (icodigo,inombre,idireccion,
    icategoria,idep,desp_icodigo,desp_inombre,desp_idireccion,desp_icategoria,
    desp_idep,accion,usuario,hora)  values (antes.icodigo ,antes.inombre 
    ,antes.idireccion ,antes.icategoria ,antes.idep ,luego.icodigo ,luego.inombre 
    ,luego.idireccion ,luego.icategoria ,luego.idep ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_insti insert on "informix".insti 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_insti (icodigo,inombre,idireccion,
    icategoria,idep,desp_icodigo,desp_inombre,desp_idireccion,desp_icategoria,
    desp_idep,accion,usuario,hora)  values (NULL ,' ' ,' ' ,' ' ,NULL ,luego.icodigo 
    ,luego.inombre ,luego.idireccion ,luego.icategoria ,luego.idep ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_insti delete on "informix".insti 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_insti (icodigo,inombre,idireccion,
    icategoria,idep,desp_icodigo,desp_inombre,desp_idireccion,desp_icategoria,
    desp_idep,accion,usuario,hora)  values (antes.icodigo ,antes.inombre 
    ,antes.idireccion ,antes.icategoria ,antes.idep ,NULL ,' ' ,' ' ,' '
     ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tdfdes insert on "informix".tdfdes 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_tdfdes (tdfd_catalogo,tdfd_codigo,
    tdfd_nu_reg,tdfd_cod_control,tdfd_tipo_desc,tdfd_fec_ini,tdfd_ult_act,
    tdfd_fec_cer,tdfd_monto,tdfd_saldo,tdfd_mensual,tdfd_tot_cuotas,tdfd_num_cuotas,
    tdfd_documen,tdfd_codeudor,tdfd_nom_bene,tdfd_juz_con,tdfd_usuario,
    tdfd_fec_hora,tdfd_terminal,tdfd_accion,desp_tdfd_catalogo,desp_tdfd_codigo,
    desp_tdfd_nu_reg,desp_tdfd_cod_control,desp_tdfd_tipo_desc,desp_tdfd_fec_ini,
    desp_tdfd_ult_act,desp_tdfd_fec_cer,desp_tdfd_monto,desp_tdfd_saldo,
    desp_tdfd_mensual,desp_tdfd_tot_cuotas,desp_tdfd_num_cuotas,desp_tdfd_documen,
    desp_tdfd_codeudor,desp_tdfd_nom_bene,desp_tdfd_juz_con,desp_tdfd_usuario,
    desp_tdfd_fec_hora,desp_tdfd_terminal,desp_tdfd_accion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,luego.tdfd_catalogo ,luego.tdfd_codigo ,luego.tdfd_nu_reg 
    ,luego.tdfd_cod_control ,luego.tdfd_tipo_desc ,luego.tdfd_fec_ini 
    ,luego.tdfd_ult_act ,luego.tdfd_fec_cer ,luego.tdfd_monto ,luego.tdfd_saldo 
    ,luego.tdfd_mensual ,luego.tdfd_tot_cuotas ,luego.tdfd_num_cuotas 
    ,luego.tdfd_documen ,luego.tdfd_codeudor ,luego.tdfd_nom_bene ,luego.tdfd_juz_con 
    ,luego.tdfd_usuario ,luego.tdfd_fec_hora ,luego.tdfd_terminal ,luego.tdfd_accion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_tdfdes delete on "informix".tdfdes 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_tdfdes (tdfd_catalogo,tdfd_codigo,
    tdfd_nu_reg,tdfd_cod_control,tdfd_tipo_desc,tdfd_fec_ini,tdfd_ult_act,
    tdfd_fec_cer,tdfd_monto,tdfd_saldo,tdfd_mensual,tdfd_tot_cuotas,tdfd_num_cuotas,
    tdfd_documen,tdfd_codeudor,tdfd_nom_bene,tdfd_juz_con,tdfd_usuario,
    tdfd_fec_hora,tdfd_terminal,tdfd_accion,desp_tdfd_catalogo,desp_tdfd_codigo,
    desp_tdfd_nu_reg,desp_tdfd_cod_control,desp_tdfd_tipo_desc,desp_tdfd_fec_ini,
    desp_tdfd_ult_act,desp_tdfd_fec_cer,desp_tdfd_monto,desp_tdfd_saldo,
    desp_tdfd_mensual,desp_tdfd_tot_cuotas,desp_tdfd_num_cuotas,desp_tdfd_documen,
    desp_tdfd_codeudor,desp_tdfd_nom_bene,desp_tdfd_juz_con,desp_tdfd_usuario,
    desp_tdfd_fec_hora,desp_tdfd_terminal,desp_tdfd_accion,accion,usuario,
    hora)  values (antes.tdfd_catalogo ,antes.tdfd_codigo ,antes.tdfd_nu_reg 
    ,antes.tdfd_cod_control ,antes.tdfd_tipo_desc ,antes.tdfd_fec_ini 
    ,antes.tdfd_ult_act ,antes.tdfd_fec_cer ,antes.tdfd_monto ,antes.tdfd_saldo 
    ,antes.tdfd_mensual ,antes.tdfd_tot_cuotas ,antes.tdfd_num_cuotas 
    ,antes.tdfd_documen ,antes.tdfd_codeudor ,antes.tdfd_nom_bene ,antes.tdfd_juz_con 
    ,antes.tdfd_usuario ,antes.tdfd_fec_hora ,antes.tdfd_terminal ,antes.tdfd_accion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_tdfdes update on "informix".tdfdes 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tdfdes (tdfd_catalogo,tdfd_codigo,
    tdfd_nu_reg,tdfd_cod_control,tdfd_tipo_desc,tdfd_fec_ini,tdfd_ult_act,
    tdfd_fec_cer,tdfd_monto,tdfd_saldo,tdfd_mensual,tdfd_tot_cuotas,tdfd_num_cuotas,
    tdfd_documen,tdfd_codeudor,tdfd_nom_bene,tdfd_juz_con,tdfd_usuario,
    tdfd_fec_hora,tdfd_terminal,tdfd_accion,desp_tdfd_catalogo,desp_tdfd_codigo,
    desp_tdfd_nu_reg,desp_tdfd_cod_control,desp_tdfd_tipo_desc,desp_tdfd_fec_ini,
    desp_tdfd_ult_act,desp_tdfd_fec_cer,desp_tdfd_monto,desp_tdfd_saldo,
    desp_tdfd_mensual,desp_tdfd_tot_cuotas,desp_tdfd_num_cuotas,desp_tdfd_documen,
    desp_tdfd_codeudor,desp_tdfd_nom_bene,desp_tdfd_juz_con,desp_tdfd_usuario,
    desp_tdfd_fec_hora,desp_tdfd_terminal,desp_tdfd_accion,accion,usuario,
    hora)  values (antes.tdfd_catalogo ,antes.tdfd_codigo ,antes.tdfd_nu_reg 
    ,antes.tdfd_cod_control ,antes.tdfd_tipo_desc ,antes.tdfd_fec_ini 
    ,antes.tdfd_ult_act ,antes.tdfd_fec_cer ,antes.tdfd_monto ,antes.tdfd_saldo 
    ,antes.tdfd_mensual ,antes.tdfd_tot_cuotas ,antes.tdfd_num_cuotas 
    ,antes.tdfd_documen ,antes.tdfd_codeudor ,antes.tdfd_nom_bene ,antes.tdfd_juz_con 
    ,antes.tdfd_usuario ,antes.tdfd_fec_hora ,antes.tdfd_terminal ,antes.tdfd_accion 
    ,luego.tdfd_catalogo ,luego.tdfd_codigo ,luego.tdfd_nu_reg ,luego.tdfd_cod_control 
    ,luego.tdfd_tipo_desc ,luego.tdfd_fec_ini ,luego.tdfd_ult_act ,luego.tdfd_fec_cer 
    ,luego.tdfd_monto ,luego.tdfd_saldo ,luego.tdfd_mensual ,luego.tdfd_tot_cuotas 
    ,luego.tdfd_num_cuotas ,luego.tdfd_documen ,luego.tdfd_codeudor ,
    luego.tdfd_nom_bene ,luego.tdfd_juz_con ,luego.tdfd_usuario ,luego.tdfd_fec_hora 
    ,luego.tdfd_terminal ,luego.tdfd_accion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_tmper insert on "informix".tmper 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_tmper (tper_catalogo,tper_serie,
    tper_grado,tper_arma,tper_nom1,tper_nom2,tper_ape1,tper_ape2,tper_ape3,
    tper_ced_ord,tper_ced_reg,tper_fec_ext_ced,tper_ext_ced_lugar,tper_est_civil,
    tper_direccion,tper_zona,tper_dir_lugar,tper_telefono,tper_sexo,tper_fec_nac,
    tper_nac_lugar,tper_promocion,tper_afil_ipm,tper_sangre,tper_antiguedad,
    tper_bienal,tper_plaza,tper_desc_empleo,tper_fec_nomb,tper_ord_gral,
    tper_punto_og,tper_situacion,tper_prima_prof,tper_usuario,tper_cat_usuario,
    tper_fec_hora,tper_terminal,tper_accion,desp_tper_catalogo,desp_tper_serie,
    desp_tper_grado,desp_tper_arma,desp_tper_nom1,desp_tper_nom2,desp_tper_ape1,
    desp_tper_ape2,desp_tper_ape3,desp_tper_ced_ord,desp_tper_ced_reg,
    desp_tper_fec_ext_ced,desp_tper_ext_ced_lugar,desp_tper_est_civil,
    desp_tper_direccion,desp_tper_zona,desp_tper_dir_lugar,desp_tper_telefono,
    desp_tper_sexo,desp_tper_fec_nac,desp_tper_nac_lugar,desp_tper_promocion,
    desp_tper_afil_ipm,desp_tper_sangre,desp_tper_antiguedad,desp_tper_bienal,
    desp_tper_plaza,desp_tper_desc_empleo,desp_tper_fec_nomb,desp_tper_ord_gral,
    desp_tper_punto_og,desp_tper_situacion,desp_tper_prima_prof,desp_tper_usuario,
    desp_tper_cat_usuario,desp_tper_fec_hora,desp_tper_terminal,desp_tper_accion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,luego.tper_catalogo ,luego.tper_serie ,luego.tper_grado 
    ,luego.tper_arma ,luego.tper_nom1 ,luego.tper_nom2 ,luego.tper_ape1 
    ,luego.tper_ape2 ,luego.tper_ape3 ,luego.tper_ced_ord ,luego.tper_ced_reg 
    ,luego.tper_fec_ext_ced ,luego.tper_ext_ced_lugar ,luego.tper_est_civil 
    ,luego.tper_direccion ,luego.tper_zona ,luego.tper_dir_lugar ,luego.tper_telefono 
    ,luego.tper_sexo ,luego.tper_fec_nac ,luego.tper_nac_lugar ,luego.tper_promocion 
    ,luego.tper_afil_ipm ,luego.tper_sangre ,luego.tper_antiguedad ,luego.tper_bienal 
    ,luego.tper_plaza ,luego.tper_desc_empleo ,luego.tper_fec_nomb ,luego.tper_ord_gral 
    ,luego.tper_punto_og ,luego.tper_situacion ,luego.tper_prima_prof 
    ,luego.tper_usuario ,luego.tper_cat_usuario ,luego.tper_fec_hora 
    ,luego.tper_terminal ,luego.tper_accion ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_tmper delete on "informix".tmper 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_tmper (tper_catalogo,tper_serie,
    tper_grado,tper_arma,tper_nom1,tper_nom2,tper_ape1,tper_ape2,tper_ape3,
    tper_ced_ord,tper_ced_reg,tper_fec_ext_ced,tper_ext_ced_lugar,tper_est_civil,
    tper_direccion,tper_zona,tper_dir_lugar,tper_telefono,tper_sexo,tper_fec_nac,
    tper_nac_lugar,tper_promocion,tper_afil_ipm,tper_sangre,tper_antiguedad,
    tper_bienal,tper_plaza,tper_desc_empleo,tper_fec_nomb,tper_ord_gral,
    tper_punto_og,tper_situacion,tper_prima_prof,tper_usuario,tper_cat_usuario,
    tper_fec_hora,tper_terminal,tper_accion,desp_tper_catalogo,desp_tper_serie,
    desp_tper_grado,desp_tper_arma,desp_tper_nom1,desp_tper_nom2,desp_tper_ape1,
    desp_tper_ape2,desp_tper_ape3,desp_tper_ced_ord,desp_tper_ced_reg,
    desp_tper_fec_ext_ced,desp_tper_ext_ced_lugar,desp_tper_est_civil,
    desp_tper_direccion,desp_tper_zona,desp_tper_dir_lugar,desp_tper_telefono,
    desp_tper_sexo,desp_tper_fec_nac,desp_tper_nac_lugar,desp_tper_promocion,
    desp_tper_afil_ipm,desp_tper_sangre,desp_tper_antiguedad,desp_tper_bienal,
    desp_tper_plaza,desp_tper_desc_empleo,desp_tper_fec_nomb,desp_tper_ord_gral,
    desp_tper_punto_og,desp_tper_situacion,desp_tper_prima_prof,desp_tper_usuario,
    desp_tper_cat_usuario,desp_tper_fec_hora,desp_tper_terminal,desp_tper_accion,
    accion,usuario,hora)  values (antes.tper_catalogo ,antes.tper_serie 
    ,antes.tper_grado ,antes.tper_arma ,antes.tper_nom1 ,antes.tper_nom2 
    ,antes.tper_ape1 ,antes.tper_ape2 ,antes.tper_ape3 ,antes.tper_ced_ord 
    ,antes.tper_ced_reg ,antes.tper_fec_ext_ced ,antes.tper_ext_ced_lugar 
    ,antes.tper_est_civil ,antes.tper_direccion ,antes.tper_zona ,antes.tper_dir_lugar 
    ,antes.tper_telefono ,antes.tper_sexo ,antes.tper_fec_nac ,antes.tper_nac_lugar 
    ,antes.tper_promocion ,antes.tper_afil_ipm ,antes.tper_sangre ,antes.tper_antiguedad 
    ,antes.tper_bienal ,antes.tper_plaza ,antes.tper_desc_empleo ,antes.tper_fec_nomb 
    ,antes.tper_ord_gral ,antes.tper_punto_og ,antes.tper_situacion ,
    antes.tper_prima_prof ,antes.tper_usuario ,antes.tper_cat_usuario 
    ,antes.tper_fec_hora ,antes.tper_terminal ,antes.tper_accion ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_tmper update on "informix".tmper 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tmper (tper_catalogo,tper_serie,
    tper_grado,tper_arma,tper_nom1,tper_nom2,tper_ape1,tper_ape2,tper_ape3,
    tper_ced_ord,tper_ced_reg,tper_fec_ext_ced,tper_ext_ced_lugar,tper_est_civil,
    tper_direccion,tper_zona,tper_dir_lugar,tper_telefono,tper_sexo,tper_fec_nac,
    tper_nac_lugar,tper_promocion,tper_afil_ipm,tper_sangre,tper_antiguedad,
    tper_bienal,tper_plaza,tper_desc_empleo,tper_fec_nomb,tper_ord_gral,
    tper_punto_og,tper_situacion,tper_prima_prof,tper_usuario,tper_cat_usuario,
    tper_fec_hora,tper_terminal,tper_accion,desp_tper_catalogo,desp_tper_serie,
    desp_tper_grado,desp_tper_arma,desp_tper_nom1,desp_tper_nom2,desp_tper_ape1,
    desp_tper_ape2,desp_tper_ape3,desp_tper_ced_ord,desp_tper_ced_reg,
    desp_tper_fec_ext_ced,desp_tper_ext_ced_lugar,desp_tper_est_civil,
    desp_tper_direccion,desp_tper_zona,desp_tper_dir_lugar,desp_tper_telefono,
    desp_tper_sexo,desp_tper_fec_nac,desp_tper_nac_lugar,desp_tper_promocion,
    desp_tper_afil_ipm,desp_tper_sangre,desp_tper_antiguedad,desp_tper_bienal,
    desp_tper_plaza,desp_tper_desc_empleo,desp_tper_fec_nomb,desp_tper_ord_gral,
    desp_tper_punto_og,desp_tper_situacion,desp_tper_prima_prof,desp_tper_usuario,
    desp_tper_cat_usuario,desp_tper_fec_hora,desp_tper_terminal,desp_tper_accion,
    accion,usuario,hora)  values (antes.tper_catalogo ,antes.tper_serie 
    ,antes.tper_grado ,antes.tper_arma ,antes.tper_nom1 ,antes.tper_nom2 
    ,antes.tper_ape1 ,antes.tper_ape2 ,antes.tper_ape3 ,antes.tper_ced_ord 
    ,antes.tper_ced_reg ,antes.tper_fec_ext_ced ,antes.tper_ext_ced_lugar 
    ,antes.tper_est_civil ,antes.tper_direccion ,antes.tper_zona ,antes.tper_dir_lugar 
    ,antes.tper_telefono ,antes.tper_sexo ,antes.tper_fec_nac ,antes.tper_nac_lugar 
    ,antes.tper_promocion ,antes.tper_afil_ipm ,antes.tper_sangre ,antes.tper_antiguedad 
    ,antes.tper_bienal ,antes.tper_plaza ,antes.tper_desc_empleo ,antes.tper_fec_nomb 
    ,antes.tper_ord_gral ,antes.tper_punto_og ,antes.tper_situacion ,
    antes.tper_prima_prof ,antes.tper_usuario ,antes.tper_cat_usuario 
    ,antes.tper_fec_hora ,antes.tper_terminal ,antes.tper_accion ,luego.tper_catalogo 
    ,luego.tper_serie ,luego.tper_grado ,luego.tper_arma ,luego.tper_nom1 
    ,luego.tper_nom2 ,luego.tper_ape1 ,luego.tper_ape2 ,luego.tper_ape3 
    ,luego.tper_ced_ord ,luego.tper_ced_reg ,luego.tper_fec_ext_ced ,
    luego.tper_ext_ced_lugar ,luego.tper_est_civil ,luego.tper_direccion 
    ,luego.tper_zona ,luego.tper_dir_lugar ,luego.tper_telefono ,luego.tper_sexo 
    ,luego.tper_fec_nac ,luego.tper_nac_lugar ,luego.tper_promocion ,
    luego.tper_afil_ipm ,luego.tper_sangre ,luego.tper_antiguedad ,luego.tper_bienal 
    ,luego.tper_plaza ,luego.tper_desc_empleo ,luego.tper_fec_nomb ,luego.tper_ord_gral 
    ,luego.tper_punto_og ,luego.tper_situacion ,luego.tper_prima_prof 
    ,luego.tper_usuario ,luego.tper_cat_usuario ,luego.tper_fec_hora 
    ,luego.tper_terminal ,luego.tper_accion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_hisfin insert on "informix".hisfin 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_hisfin (omeses,oprograma,ogrupo,
    ounidad,odepen,obatallon,ocompa�ia,opeloton,oseccion,oescuadra,otipo,
    ogrado,ocatalogo,onombres,oempleo,oorden,osueldo,oalimentacion,omontepio,
    oipm1,otimbres1,ofianza,oliquido1,odias,oa�os,obienal,oespecialidad,
    orepresenta,oresponsabili,ototal2,oalimenpc,oipm2,otimbres2,oliquido2,
    oemergencia,bil100,bil50,bil20,bil10,bil5,bil1,bil05,mon25,mon10,
    mon5,mon1,tota_liqui,osueldopc,omontepiopc,obienalpc,oipm1pc,ofianzapc,
    oliquido1pc,oalimentr,oprimapc,orepresenpc,oresponsapc,ototal2pc,
    ocontruccion,oipm2pc,oliquido2pc,obonemerg,ocomplemento,oipmcomple,
    oliquicomple,onomcorto,oprimaings,oprimaprofe,oaguinaldo,obon50,opar,
    ohoras,oaumento,ovaciones,oplaza,omes,omonte,osaldoase,oceom,oarma,
    osexo,omeomserie,obtaop,omeomnivel,ovarios,desp_omeses,desp_oprograma,
    desp_ogrupo,desp_ounidad,desp_odepen,desp_obatallon,desp_ocompa�ia,
    desp_opeloton,desp_oseccion,desp_oescuadra,desp_otipo,desp_ogrado,
    desp_ocatalogo,desp_onombres,desp_oempleo,desp_oorden,desp_osueldo,
    desp_oalimentacion,desp_omontepio,desp_oipm1,desp_otimbres1,desp_ofianza,
    desp_oliquido1,desp_odias,desp_oa�os,desp_obienal,desp_oespecialidad,
    desp_orepresenta,desp_oresponsabili,desp_ototal2,desp_oalimenpc,desp_oipm2,
    desp_otimbres2,desp_oliquido2,desp_oemergencia,desp_bil100,desp_bil50,
    desp_bil20,desp_bil10,desp_bil5,desp_bil1,desp_bil05,desp_mon25,desp_mon10,
    desp_mon5,desp_mon1,desp_tota_liqui,desp_osueldopc,desp_omontepiopc,
    desp_obienalpc,desp_oipm1pc,desp_ofianzapc,desp_oliquido1pc,desp_oalimentr,
    desp_oprimapc,desp_orepresenpc,desp_oresponsapc,desp_ototal2pc,desp_ocontruccion,
    desp_oipm2pc,desp_oliquido2pc,desp_obonemerg,desp_ocomplemento,desp_oipmcomple,
    desp_oliquicomple,desp_onomcorto,desp_oprimaings,desp_oprimaprofe,
    desp_oaguinaldo,desp_obon50,desp_opar,desp_ohoras,desp_oaumento,desp_ovaciones,
    desp_oplaza,desp_omes,desp_omonte,desp_osaldoase,desp_oceom,desp_oarma,
    desp_osexo,desp_omeomserie,desp_obtaop,desp_omeomnivel,desp_ovarios,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.omeses ,luego.oprograma ,luego.ogrupo 
    ,luego.ounidad ,luego.odepen ,luego.obatallon ,luego.ocompa�ia ,luego.opeloton 
    ,luego.oseccion ,luego.oescuadra ,luego.otipo ,luego.ogrado ,luego.ocatalogo 
    ,luego.onombres ,luego.oempleo ,luego.oorden ,luego.osueldo ,luego.oalimentacion 
    ,luego.omontepio ,luego.oipm1 ,luego.otimbres1 ,luego.ofianza ,luego.oliquido1 
    ,luego.odias ,luego.oa�os ,luego.obienal ,luego.oespecialidad ,luego.orepresenta 
    ,luego.oresponsabili ,luego.ototal2 ,luego.oalimenpc ,luego.oipm2 
    ,luego.otimbres2 ,luego.oliquido2 ,luego.oemergencia ,luego.bil100 
    ,luego.bil50 ,luego.bil20 ,luego.bil10 ,luego.bil5 ,luego.bil1 ,luego.bil05 
    ,luego.mon25 ,luego.mon10 ,luego.mon5 ,luego.mon1 ,luego.tota_liqui 
    ,luego.osueldopc ,luego.omontepiopc ,luego.obienalpc ,luego.oipm1pc 
    ,luego.ofianzapc ,luego.oliquido1pc ,luego.oalimentr ,luego.oprimapc 
    ,luego.orepresenpc ,luego.oresponsapc ,luego.ototal2pc ,luego.ocontruccion 
    ,luego.oipm2pc ,luego.oliquido2pc ,luego.obonemerg ,luego.ocomplemento 
    ,luego.oipmcomple ,luego.oliquicomple ,luego.onomcorto ,luego.oprimaings 
    ,luego.oprimaprofe ,luego.oaguinaldo ,luego.obon50 ,luego.opar ,luego.ohoras 
    ,luego.oaumento ,luego.ovaciones ,luego.oplaza ,luego.omes ,luego.omonte 
    ,luego.osaldoase ,luego.oceom ,luego.oarma ,luego.osexo ,luego.omeomserie 
    ,luego.obtaop ,luego.omeomnivel ,luego.ovarios ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_hisfin delete on "informix".hisfin 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_hisfin (omeses,oprograma,ogrupo,
    ounidad,odepen,obatallon,ocompa�ia,opeloton,oseccion,oescuadra,otipo,
    ogrado,ocatalogo,onombres,oempleo,oorden,osueldo,oalimentacion,omontepio,
    oipm1,otimbres1,ofianza,oliquido1,odias,oa�os,obienal,oespecialidad,
    orepresenta,oresponsabili,ototal2,oalimenpc,oipm2,otimbres2,oliquido2,
    oemergencia,bil100,bil50,bil20,bil10,bil5,bil1,bil05,mon25,mon10,
    mon5,mon1,tota_liqui,osueldopc,omontepiopc,obienalpc,oipm1pc,ofianzapc,
    oliquido1pc,oalimentr,oprimapc,orepresenpc,oresponsapc,ototal2pc,
    ocontruccion,oipm2pc,oliquido2pc,obonemerg,ocomplemento,oipmcomple,
    oliquicomple,onomcorto,oprimaings,oprimaprofe,oaguinaldo,obon50,opar,
    ohoras,oaumento,ovaciones,oplaza,omes,omonte,osaldoase,oceom,oarma,
    osexo,omeomserie,obtaop,omeomnivel,ovarios,desp_omeses,desp_oprograma,
    desp_ogrupo,desp_ounidad,desp_odepen,desp_obatallon,desp_ocompa�ia,
    desp_opeloton,desp_oseccion,desp_oescuadra,desp_otipo,desp_ogrado,
    desp_ocatalogo,desp_onombres,desp_oempleo,desp_oorden,desp_osueldo,
    desp_oalimentacion,desp_omontepio,desp_oipm1,desp_otimbres1,desp_ofianza,
    desp_oliquido1,desp_odias,desp_oa�os,desp_obienal,desp_oespecialidad,
    desp_orepresenta,desp_oresponsabili,desp_ototal2,desp_oalimenpc,desp_oipm2,
    desp_otimbres2,desp_oliquido2,desp_oemergencia,desp_bil100,desp_bil50,
    desp_bil20,desp_bil10,desp_bil5,desp_bil1,desp_bil05,desp_mon25,desp_mon10,
    desp_mon5,desp_mon1,desp_tota_liqui,desp_osueldopc,desp_omontepiopc,
    desp_obienalpc,desp_oipm1pc,desp_ofianzapc,desp_oliquido1pc,desp_oalimentr,
    desp_oprimapc,desp_orepresenpc,desp_oresponsapc,desp_ototal2pc,desp_ocontruccion,
    desp_oipm2pc,desp_oliquido2pc,desp_obonemerg,desp_ocomplemento,desp_oipmcomple,
    desp_oliquicomple,desp_onomcorto,desp_oprimaings,desp_oprimaprofe,
    desp_oaguinaldo,desp_obon50,desp_opar,desp_ohoras,desp_oaumento,desp_ovaciones,
    desp_oplaza,desp_omes,desp_omonte,desp_osaldoase,desp_oceom,desp_oarma,
    desp_osexo,desp_omeomserie,desp_obtaop,desp_omeomnivel,desp_ovarios,
    accion,usuario,hora)  values (antes.omeses ,antes.oprograma ,antes.ogrupo 
    ,antes.ounidad ,antes.odepen ,antes.obatallon ,antes.ocompa�ia ,antes.opeloton 
    ,antes.oseccion ,antes.oescuadra ,antes.otipo ,antes.ogrado ,antes.ocatalogo 
    ,antes.onombres ,antes.oempleo ,antes.oorden ,antes.osueldo ,antes.oalimentacion 
    ,antes.omontepio ,antes.oipm1 ,antes.otimbres1 ,antes.ofianza ,antes.oliquido1 
    ,antes.odias ,antes.oa�os ,antes.obienal ,antes.oespecialidad ,antes.orepresenta 
    ,antes.oresponsabili ,antes.ototal2 ,antes.oalimenpc ,antes.oipm2 
    ,antes.otimbres2 ,antes.oliquido2 ,antes.oemergencia ,antes.bil100 
    ,antes.bil50 ,antes.bil20 ,antes.bil10 ,antes.bil5 ,antes.bil1 ,antes.bil05 
    ,antes.mon25 ,antes.mon10 ,antes.mon5 ,antes.mon1 ,antes.tota_liqui 
    ,antes.osueldopc ,antes.omontepiopc ,antes.obienalpc ,antes.oipm1pc 
    ,antes.ofianzapc ,antes.oliquido1pc ,antes.oalimentr ,antes.oprimapc 
    ,antes.orepresenpc ,antes.oresponsapc ,antes.ototal2pc ,antes.ocontruccion 
    ,antes.oipm2pc ,antes.oliquido2pc ,antes.obonemerg ,antes.ocomplemento 
    ,antes.oipmcomple ,antes.oliquicomple ,antes.onomcorto ,antes.oprimaings 
    ,antes.oprimaprofe ,antes.oaguinaldo ,antes.obon50 ,antes.opar ,antes.ohoras 
    ,antes.oaumento ,antes.ovaciones ,antes.oplaza ,antes.omes ,antes.omonte 
    ,antes.osaldoase ,antes.oceom ,antes.oarma ,antes.osexo ,antes.omeomserie 
    ,antes.obtaop ,antes.omeomnivel ,antes.ovarios ,NULL ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_hisfin update on "informix".hisfin 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_hisfin (omeses,oprograma,ogrupo,
    ounidad,odepen,obatallon,ocompa�ia,opeloton,oseccion,oescuadra,otipo,
    ogrado,ocatalogo,onombres,oempleo,oorden,osueldo,oalimentacion,omontepio,
    oipm1,otimbres1,ofianza,oliquido1,odias,oa�os,obienal,oespecialidad,
    orepresenta,oresponsabili,ototal2,oalimenpc,oipm2,otimbres2,oliquido2,
    oemergencia,bil100,bil50,bil20,bil10,bil5,bil1,bil05,mon25,mon10,
    mon5,mon1,tota_liqui,osueldopc,omontepiopc,obienalpc,oipm1pc,ofianzapc,
    oliquido1pc,oalimentr,oprimapc,orepresenpc,oresponsapc,ototal2pc,
    ocontruccion,oipm2pc,oliquido2pc,obonemerg,ocomplemento,oipmcomple,
    oliquicomple,onomcorto,oprimaings,oprimaprofe,oaguinaldo,obon50,opar,
    ohoras,oaumento,ovaciones,oplaza,omes,omonte,osaldoase,oceom,oarma,
    osexo,omeomserie,obtaop,omeomnivel,ovarios,desp_omeses,desp_oprograma,
    desp_ogrupo,desp_ounidad,desp_odepen,desp_obatallon,desp_ocompa�ia,
    desp_opeloton,desp_oseccion,desp_oescuadra,desp_otipo,desp_ogrado,
    desp_ocatalogo,desp_onombres,desp_oempleo,desp_oorden,desp_osueldo,
    desp_oalimentacion,desp_omontepio,desp_oipm1,desp_otimbres1,desp_ofianza,
    desp_oliquido1,desp_odias,desp_oa�os,desp_obienal,desp_oespecialidad,
    desp_orepresenta,desp_oresponsabili,desp_ototal2,desp_oalimenpc,desp_oipm2,
    desp_otimbres2,desp_oliquido2,desp_oemergencia,desp_bil100,desp_bil50,
    desp_bil20,desp_bil10,desp_bil5,desp_bil1,desp_bil05,desp_mon25,desp_mon10,
    desp_mon5,desp_mon1,desp_tota_liqui,desp_osueldopc,desp_omontepiopc,
    desp_obienalpc,desp_oipm1pc,desp_ofianzapc,desp_oliquido1pc,desp_oalimentr,
    desp_oprimapc,desp_orepresenpc,desp_oresponsapc,desp_ototal2pc,desp_ocontruccion,
    desp_oipm2pc,desp_oliquido2pc,desp_obonemerg,desp_ocomplemento,desp_oipmcomple,
    desp_oliquicomple,desp_onomcorto,desp_oprimaings,desp_oprimaprofe,
    desp_oaguinaldo,desp_obon50,desp_opar,desp_ohoras,desp_oaumento,desp_ovaciones,
    desp_oplaza,desp_omes,desp_omonte,desp_osaldoase,desp_oceom,desp_oarma,
    desp_osexo,desp_omeomserie,desp_obtaop,desp_omeomnivel,desp_ovarios,
    accion,usuario,hora)  values (antes.omeses ,antes.oprograma ,antes.ogrupo 
    ,antes.ounidad ,antes.odepen ,antes.obatallon ,antes.ocompa�ia ,antes.opeloton 
    ,antes.oseccion ,antes.oescuadra ,antes.otipo ,antes.ogrado ,antes.ocatalogo 
    ,antes.onombres ,antes.oempleo ,antes.oorden ,antes.osueldo ,antes.oalimentacion 
    ,antes.omontepio ,antes.oipm1 ,antes.otimbres1 ,antes.ofianza ,antes.oliquido1 
    ,antes.odias ,antes.oa�os ,antes.obienal ,antes.oespecialidad ,antes.orepresenta 
    ,antes.oresponsabili ,antes.ototal2 ,antes.oalimenpc ,antes.oipm2 
    ,antes.otimbres2 ,antes.oliquido2 ,antes.oemergencia ,antes.bil100 
    ,antes.bil50 ,antes.bil20 ,antes.bil10 ,antes.bil5 ,antes.bil1 ,antes.bil05 
    ,antes.mon25 ,antes.mon10 ,antes.mon5 ,antes.mon1 ,antes.tota_liqui 
    ,antes.osueldopc ,antes.omontepiopc ,antes.obienalpc ,antes.oipm1pc 
    ,antes.ofianzapc ,antes.oliquido1pc ,antes.oalimentr ,antes.oprimapc 
    ,antes.orepresenpc ,antes.oresponsapc ,antes.ototal2pc ,antes.ocontruccion 
    ,antes.oipm2pc ,antes.oliquido2pc ,antes.obonemerg ,antes.ocomplemento 
    ,antes.oipmcomple ,antes.oliquicomple ,antes.onomcorto ,antes.oprimaings 
    ,antes.oprimaprofe ,antes.oaguinaldo ,antes.obon50 ,antes.opar ,antes.ohoras 
    ,antes.oaumento ,antes.ovaciones ,antes.oplaza ,antes.omes ,antes.omonte 
    ,antes.osaldoase ,antes.oceom ,antes.oarma ,antes.osexo ,antes.omeomserie 
    ,antes.obtaop ,antes.omeomnivel ,antes.ovarios ,luego.omeses ,luego.oprograma 
    ,luego.ogrupo ,luego.ounidad ,luego.odepen ,luego.obatallon ,luego.ocompa�ia 
    ,luego.opeloton ,luego.oseccion ,luego.oescuadra ,luego.otipo ,luego.ogrado 
    ,luego.ocatalogo ,luego.onombres ,luego.oempleo ,luego.oorden ,luego.osueldo 
    ,luego.oalimentacion ,luego.omontepio ,luego.oipm1 ,luego.otimbres1 
    ,luego.ofianza ,luego.oliquido1 ,luego.odias ,luego.oa�os ,luego.obienal 
    ,luego.oespecialidad ,luego.orepresenta ,luego.oresponsabili ,luego.ototal2 
    ,luego.oalimenpc ,luego.oipm2 ,luego.otimbres2 ,luego.oliquido2 ,
    luego.oemergencia ,luego.bil100 ,luego.bil50 ,luego.bil20 ,luego.bil10 
    ,luego.bil5 ,luego.bil1 ,luego.bil05 ,luego.mon25 ,luego.mon10 ,luego.mon5 
    ,luego.mon1 ,luego.tota_liqui ,luego.osueldopc ,luego.omontepiopc 
    ,luego.obienalpc ,luego.oipm1pc ,luego.ofianzapc ,luego.oliquido1pc 
    ,luego.oalimentr ,luego.oprimapc ,luego.orepresenpc ,luego.oresponsapc 
    ,luego.ototal2pc ,luego.ocontruccion ,luego.oipm2pc ,luego.oliquido2pc 
    ,luego.obonemerg ,luego.ocomplemento ,luego.oipmcomple ,luego.oliquicomple 
    ,luego.onomcorto ,luego.oprimaings ,luego.oprimaprofe ,luego.oaguinaldo 
    ,luego.obon50 ,luego.opar ,luego.ohoras ,luego.oaumento ,luego.ovaciones 
    ,luego.oplaza ,luego.omes ,luego.omonte ,luego.osaldoase ,luego.oceom 
    ,luego.oarma ,luego.osexo ,luego.omeomserie ,luego.obtaop ,luego.omeomnivel 
    ,luego.ovarios ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ipm_cart insert on "informix".ipm_cart 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ipm_cart (ipm_credito,ipm_catalogo,
    ipm_nombre,ipm_total_cuotas,ipm_cuotas_van,ipm_cod_unidad,ipm_saldo_capital,
    ipm_int_mora,ipm_int_anio_ant,ipm_int_mes_ant,ipm_int_mes,ipm_g_admon_ant,
    ipm_seg_viv_ant,ipm_g_admon,ipm_seg_vivienda,ipm_capital,ipm_iva_mes_ant,
    ipm_iva_mes,ipm_total_desc,ipm_fecha6,ipm_fecha8,ipm_hora8,ipm_usuario,
    ipm_terminal,ipm_cod,ipm_paga1,ipm_paga2,desp_ipm_credito,desp_ipm_catalogo,
    desp_ipm_nombre,desp_ipm_total_cuotas,desp_ipm_cuotas_van,desp_ipm_cod_unidad,
    desp_ipm_saldo_capital,desp_ipm_int_mora,desp_ipm_int_anio_ant,desp_ipm_int_mes_ant,
    desp_ipm_int_mes,desp_ipm_g_admon_ant,desp_ipm_seg_viv_ant,desp_ipm_g_admon,
    desp_ipm_seg_vivienda,desp_ipm_capital,desp_ipm_iva_mes_ant,desp_ipm_iva_mes,
    desp_ipm_total_desc,desp_ipm_fecha6,desp_ipm_fecha8,desp_ipm_hora8,
    desp_ipm_usuario,desp_ipm_terminal,desp_ipm_cod,desp_ipm_paga1,desp_ipm_paga2,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.ipm_credito 
    ,luego.ipm_catalogo ,luego.ipm_nombre ,luego.ipm_total_cuotas ,luego.ipm_cuotas_van 
    ,luego.ipm_cod_unidad ,luego.ipm_saldo_capital ,luego.ipm_int_mora 
    ,luego.ipm_int_anio_ant ,luego.ipm_int_mes_ant ,luego.ipm_int_mes 
    ,luego.ipm_g_admon_ant ,luego.ipm_seg_viv_ant ,luego.ipm_g_admon 
    ,luego.ipm_seg_vivienda ,luego.ipm_capital ,luego.ipm_iva_mes_ant 
    ,luego.ipm_iva_mes ,luego.ipm_total_desc ,luego.ipm_fecha6 ,luego.ipm_fecha8 
    ,luego.ipm_hora8 ,luego.ipm_usuario ,luego.ipm_terminal ,luego.ipm_cod 
    ,luego.ipm_paga1 ,luego.ipm_paga2 ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_ipm_cart delete on "informix".ipm_cart 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ipm_cart (ipm_credito,ipm_catalogo,
    ipm_nombre,ipm_total_cuotas,ipm_cuotas_van,ipm_cod_unidad,ipm_saldo_capital,
    ipm_int_mora,ipm_int_anio_ant,ipm_int_mes_ant,ipm_int_mes,ipm_g_admon_ant,
    ipm_seg_viv_ant,ipm_g_admon,ipm_seg_vivienda,ipm_capital,ipm_iva_mes_ant,
    ipm_iva_mes,ipm_total_desc,ipm_fecha6,ipm_fecha8,ipm_hora8,ipm_usuario,
    ipm_terminal,ipm_cod,ipm_paga1,ipm_paga2,desp_ipm_credito,desp_ipm_catalogo,
    desp_ipm_nombre,desp_ipm_total_cuotas,desp_ipm_cuotas_van,desp_ipm_cod_unidad,
    desp_ipm_saldo_capital,desp_ipm_int_mora,desp_ipm_int_anio_ant,desp_ipm_int_mes_ant,
    desp_ipm_int_mes,desp_ipm_g_admon_ant,desp_ipm_seg_viv_ant,desp_ipm_g_admon,
    desp_ipm_seg_vivienda,desp_ipm_capital,desp_ipm_iva_mes_ant,desp_ipm_iva_mes,
    desp_ipm_total_desc,desp_ipm_fecha6,desp_ipm_fecha8,desp_ipm_hora8,
    desp_ipm_usuario,desp_ipm_terminal,desp_ipm_cod,desp_ipm_paga1,desp_ipm_paga2,
    accion,usuario,hora)  values (antes.ipm_credito ,antes.ipm_catalogo 
    ,antes.ipm_nombre ,antes.ipm_total_cuotas ,antes.ipm_cuotas_van ,
    antes.ipm_cod_unidad ,antes.ipm_saldo_capital ,antes.ipm_int_mora 
    ,antes.ipm_int_anio_ant ,antes.ipm_int_mes_ant ,antes.ipm_int_mes 
    ,antes.ipm_g_admon_ant ,antes.ipm_seg_viv_ant ,antes.ipm_g_admon 
    ,antes.ipm_seg_vivienda ,antes.ipm_capital ,antes.ipm_iva_mes_ant 
    ,antes.ipm_iva_mes ,antes.ipm_total_desc ,antes.ipm_fecha6 ,antes.ipm_fecha8 
    ,antes.ipm_hora8 ,antes.ipm_usuario ,antes.ipm_terminal ,antes.ipm_cod 
    ,antes.ipm_paga1 ,antes.ipm_paga2 ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_ipm_cart update on "informix".ipm_cart 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ipm_cart (ipm_credito,ipm_catalogo,
    ipm_nombre,ipm_total_cuotas,ipm_cuotas_van,ipm_cod_unidad,ipm_saldo_capital,
    ipm_int_mora,ipm_int_anio_ant,ipm_int_mes_ant,ipm_int_mes,ipm_g_admon_ant,
    ipm_seg_viv_ant,ipm_g_admon,ipm_seg_vivienda,ipm_capital,ipm_iva_mes_ant,
    ipm_iva_mes,ipm_total_desc,ipm_fecha6,ipm_fecha8,ipm_hora8,ipm_usuario,
    ipm_terminal,ipm_cod,ipm_paga1,ipm_paga2,desp_ipm_credito,desp_ipm_catalogo,
    desp_ipm_nombre,desp_ipm_total_cuotas,desp_ipm_cuotas_van,desp_ipm_cod_unidad,
    desp_ipm_saldo_capital,desp_ipm_int_mora,desp_ipm_int_anio_ant,desp_ipm_int_mes_ant,
    desp_ipm_int_mes,desp_ipm_g_admon_ant,desp_ipm_seg_viv_ant,desp_ipm_g_admon,
    desp_ipm_seg_vivienda,desp_ipm_capital,desp_ipm_iva_mes_ant,desp_ipm_iva_mes,
    desp_ipm_total_desc,desp_ipm_fecha6,desp_ipm_fecha8,desp_ipm_hora8,
    desp_ipm_usuario,desp_ipm_terminal,desp_ipm_cod,desp_ipm_paga1,desp_ipm_paga2,
    accion,usuario,hora)  values (antes.ipm_credito ,antes.ipm_catalogo 
    ,antes.ipm_nombre ,antes.ipm_total_cuotas ,antes.ipm_cuotas_van ,
    antes.ipm_cod_unidad ,antes.ipm_saldo_capital ,antes.ipm_int_mora 
    ,antes.ipm_int_anio_ant ,antes.ipm_int_mes_ant ,antes.ipm_int_mes 
    ,antes.ipm_g_admon_ant ,antes.ipm_seg_viv_ant ,antes.ipm_g_admon 
    ,antes.ipm_seg_vivienda ,antes.ipm_capital ,antes.ipm_iva_mes_ant 
    ,antes.ipm_iva_mes ,antes.ipm_total_desc ,antes.ipm_fecha6 ,antes.ipm_fecha8 
    ,antes.ipm_hora8 ,antes.ipm_usuario ,antes.ipm_terminal ,antes.ipm_cod 
    ,antes.ipm_paga1 ,antes.ipm_paga2 ,luego.ipm_credito ,luego.ipm_catalogo 
    ,luego.ipm_nombre ,luego.ipm_total_cuotas ,luego.ipm_cuotas_van ,
    luego.ipm_cod_unidad ,luego.ipm_saldo_capital ,luego.ipm_int_mora 
    ,luego.ipm_int_anio_ant ,luego.ipm_int_mes_ant ,luego.ipm_int_mes 
    ,luego.ipm_g_admon_ant ,luego.ipm_seg_viv_ant ,luego.ipm_g_admon 
    ,luego.ipm_seg_vivienda ,luego.ipm_capital ,luego.ipm_iva_mes_ant 
    ,luego.ipm_iva_mes ,luego.ipm_total_desc ,luego.ipm_fecha6 ,luego.ipm_fecha8 
    ,luego.ipm_hora8 ,luego.ipm_usuario ,luego.ipm_terminal ,luego.ipm_cod 
    ,luego.ipm_paga1 ,luego.ipm_paga2 ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_n_mper insert on "informix".n_mper 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_n_mper (per_catalogo,per_serie,
    per_grado,per_arma,per_nom1,per_nom2,per_ape1,per_ape2,per_ape3,per_ced_ord,
    per_ced_reg,per_fec_ext_ced,per_ext_ced_lugar,per_est_civil,per_direccion,
    per_zona,per_dir_lugar,per_telefono,per_sexo,per_fec_nac,per_nac_lugar,
    per_promocion,per_afil_ipm,per_sangre,per_antiguedad,per_bienal,per_plaza,
    per_desc_empleo,per_fec_nomb,per_ord_gral,per_punto_og,per_situacion,
    per_prima_prof,desp_per_catalogo,desp_per_serie,desp_per_grado,desp_per_arma,
    desp_per_nom1,desp_per_nom2,desp_per_ape1,desp_per_ape2,desp_per_ape3,
    desp_per_ced_ord,desp_per_ced_reg,desp_per_fec_ext_ced,desp_per_ext_ced_lugar,
    desp_per_est_civil,desp_per_direccion,desp_per_zona,desp_per_dir_lugar,
    desp_per_telefono,desp_per_sexo,desp_per_fec_nac,desp_per_nac_lugar,
    desp_per_promocion,desp_per_afil_ipm,desp_per_sangre,desp_per_antiguedad,
    desp_per_bienal,desp_per_plaza,desp_per_desc_empleo,desp_per_fec_nomb,
    desp_per_ord_gral,desp_per_punto_og,desp_per_situacion,desp_per_prima_prof,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,luego.per_catalogo ,luego.per_serie ,luego.per_grado ,luego.per_arma 
    ,luego.per_nom1 ,luego.per_nom2 ,luego.per_ape1 ,luego.per_ape2 ,
    luego.per_ape3 ,luego.per_ced_ord ,luego.per_ced_reg ,luego.per_fec_ext_ced 
    ,luego.per_ext_ced_lugar ,luego.per_est_civil ,luego.per_direccion 
    ,luego.per_zona ,luego.per_dir_lugar ,luego.per_telefono ,luego.per_sexo 
    ,luego.per_fec_nac ,luego.per_nac_lugar ,luego.per_promocion ,luego.per_afil_ipm 
    ,luego.per_sangre ,luego.per_antiguedad ,luego.per_bienal ,luego.per_plaza 
    ,luego.per_desc_empleo ,luego.per_fec_nomb ,luego.per_ord_gral ,luego.per_punto_og 
    ,luego.per_situacion ,luego.per_prima_prof ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_n_mper delete on "informix".n_mper 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_n_mper (per_catalogo,per_serie,
    per_grado,per_arma,per_nom1,per_nom2,per_ape1,per_ape2,per_ape3,per_ced_ord,
    per_ced_reg,per_fec_ext_ced,per_ext_ced_lugar,per_est_civil,per_direccion,
    per_zona,per_dir_lugar,per_telefono,per_sexo,per_fec_nac,per_nac_lugar,
    per_promocion,per_afil_ipm,per_sangre,per_antiguedad,per_bienal,per_plaza,
    per_desc_empleo,per_fec_nomb,per_ord_gral,per_punto_og,per_situacion,
    per_prima_prof,desp_per_catalogo,desp_per_serie,desp_per_grado,desp_per_arma,
    desp_per_nom1,desp_per_nom2,desp_per_ape1,desp_per_ape2,desp_per_ape3,
    desp_per_ced_ord,desp_per_ced_reg,desp_per_fec_ext_ced,desp_per_ext_ced_lugar,
    desp_per_est_civil,desp_per_direccion,desp_per_zona,desp_per_dir_lugar,
    desp_per_telefono,desp_per_sexo,desp_per_fec_nac,desp_per_nac_lugar,
    desp_per_promocion,desp_per_afil_ipm,desp_per_sangre,desp_per_antiguedad,
    desp_per_bienal,desp_per_plaza,desp_per_desc_empleo,desp_per_fec_nomb,
    desp_per_ord_gral,desp_per_punto_og,desp_per_situacion,desp_per_prima_prof,
    accion,usuario,hora)  values (antes.per_catalogo ,antes.per_serie 
    ,antes.per_grado ,antes.per_arma ,antes.per_nom1 ,antes.per_nom2 
    ,antes.per_ape1 ,antes.per_ape2 ,antes.per_ape3 ,antes.per_ced_ord 
    ,antes.per_ced_reg ,antes.per_fec_ext_ced ,antes.per_ext_ced_lugar 
    ,antes.per_est_civil ,antes.per_direccion ,antes.per_zona ,antes.per_dir_lugar 
    ,antes.per_telefono ,antes.per_sexo ,antes.per_fec_nac ,antes.per_nac_lugar 
    ,antes.per_promocion ,antes.per_afil_ipm ,antes.per_sangre ,antes.per_antiguedad 
    ,antes.per_bienal ,antes.per_plaza ,antes.per_desc_empleo ,antes.per_fec_nomb 
    ,antes.per_ord_gral ,antes.per_punto_og ,antes.per_situacion ,antes.per_prima_prof 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_n_mper update on "informix".n_mper 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_n_mper (per_catalogo,per_serie,
    per_grado,per_arma,per_nom1,per_nom2,per_ape1,per_ape2,per_ape3,per_ced_ord,
    per_ced_reg,per_fec_ext_ced,per_ext_ced_lugar,per_est_civil,per_direccion,
    per_zona,per_dir_lugar,per_telefono,per_sexo,per_fec_nac,per_nac_lugar,
    per_promocion,per_afil_ipm,per_sangre,per_antiguedad,per_bienal,per_plaza,
    per_desc_empleo,per_fec_nomb,per_ord_gral,per_punto_og,per_situacion,
    per_prima_prof,desp_per_catalogo,desp_per_serie,desp_per_grado,desp_per_arma,
    desp_per_nom1,desp_per_nom2,desp_per_ape1,desp_per_ape2,desp_per_ape3,
    desp_per_ced_ord,desp_per_ced_reg,desp_per_fec_ext_ced,desp_per_ext_ced_lugar,
    desp_per_est_civil,desp_per_direccion,desp_per_zona,desp_per_dir_lugar,
    desp_per_telefono,desp_per_sexo,desp_per_fec_nac,desp_per_nac_lugar,
    desp_per_promocion,desp_per_afil_ipm,desp_per_sangre,desp_per_antiguedad,
    desp_per_bienal,desp_per_plaza,desp_per_desc_empleo,desp_per_fec_nomb,
    desp_per_ord_gral,desp_per_punto_og,desp_per_situacion,desp_per_prima_prof,
    accion,usuario,hora)  values (antes.per_catalogo ,antes.per_serie 
    ,antes.per_grado ,antes.per_arma ,antes.per_nom1 ,antes.per_nom2 
    ,antes.per_ape1 ,antes.per_ape2 ,antes.per_ape3 ,antes.per_ced_ord 
    ,antes.per_ced_reg ,antes.per_fec_ext_ced ,antes.per_ext_ced_lugar 
    ,antes.per_est_civil ,antes.per_direccion ,antes.per_zona ,antes.per_dir_lugar 
    ,antes.per_telefono ,antes.per_sexo ,antes.per_fec_nac ,antes.per_nac_lugar 
    ,antes.per_promocion ,antes.per_afil_ipm ,antes.per_sangre ,antes.per_antiguedad 
    ,antes.per_bienal ,antes.per_plaza ,antes.per_desc_empleo ,antes.per_fec_nomb 
    ,antes.per_ord_gral ,antes.per_punto_og ,antes.per_situacion ,antes.per_prima_prof 
    ,luego.per_catalogo ,luego.per_serie ,luego.per_grado ,luego.per_arma 
    ,luego.per_nom1 ,luego.per_nom2 ,luego.per_ape1 ,luego.per_ape2 ,
    luego.per_ape3 ,luego.per_ced_ord ,luego.per_ced_reg ,luego.per_fec_ext_ced 
    ,luego.per_ext_ced_lugar ,luego.per_est_civil ,luego.per_direccion 
    ,luego.per_zona ,luego.per_dir_lugar ,luego.per_telefono ,luego.per_sexo 
    ,luego.per_fec_nac ,luego.per_nac_lugar ,luego.per_promocion ,luego.per_afil_ipm 
    ,luego.per_sangre ,luego.per_antiguedad ,luego.per_bienal ,luego.per_plaza 
    ,luego.per_desc_empleo ,luego.per_fec_nomb ,luego.per_ord_gral ,luego.per_punto_og 
    ,luego.per_situacion ,luego.per_prima_prof ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_conyugues update on "informix".conyugues 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_conyugues (militar,e1,e2,e3,
    e4,desp_militar,desp_e1,desp_e2,desp_e3,desp_e4,accion,usuario,hora) 
     values (antes.militar ,antes.e1 ,antes.e2 ,antes.e3 ,antes.e4 ,luego.militar 
    ,luego.e1 ,luego.e2 ,luego.e3 ,luego.e4 ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_conyugues insert on "informix".conyugues 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_conyugues (militar,e1,e2,e3,
    e4,desp_militar,desp_e1,desp_e2,desp_e3,desp_e4,accion,usuario,hora) 
     values (NULL ,' ' ,' ' ,' ' ,' ' ,luego.militar ,luego.e1 ,luego.e2 
    ,luego.e3 ,luego.e4 ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_conyugues delete on "informix".conyugues 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_conyugues (militar,e1,e2,e3,
    e4,desp_militar,desp_e1,desp_e2,desp_e3,desp_e4,accion,usuario,hora) 
     values (antes.militar ,antes.e1 ,antes.e2 ,antes.e3 ,antes.e4 ,NULL 
    ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lves_tallas insert on "informix"
    .lves_tallas referencing new as luego
    for each row
        (
        insert into "informix".aud_lves_tallas (lvt_catalogo,
    lvt_pan,lvt_cam,lvt_zap,lvt_birr,lvt_pix,lvt_som,lvt_swt,lvt_chu,
    lvt_bot,desp_lvt_catalogo,desp_lvt_pan,desp_lvt_cam,desp_lvt_zap,
    desp_lvt_birr,desp_lvt_pix,desp_lvt_som,desp_lvt_swt,desp_lvt_chu,
    desp_lvt_bot,accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL 
    ,NULL ,' ' ,' ' ,' ' ,' ' ,NULL ,luego.lvt_catalogo ,luego.lvt_pan ,luego.lvt_cam 
    ,luego.lvt_zap ,luego.lvt_birr ,luego.lvt_pix ,luego.lvt_som ,luego.lvt_swt 
    ,luego.lvt_chu ,luego.lvt_bot ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_lves_tallas update on "informix"
    .lves_tallas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lves_tallas (lvt_catalogo,
    lvt_pan,lvt_cam,lvt_zap,lvt_birr,lvt_pix,lvt_som,lvt_swt,lvt_chu,
    lvt_bot,desp_lvt_catalogo,desp_lvt_pan,desp_lvt_cam,desp_lvt_zap,
    desp_lvt_birr,desp_lvt_pix,desp_lvt_som,desp_lvt_swt,desp_lvt_chu,
    desp_lvt_bot,accion,usuario,hora)  values (antes.lvt_catalogo ,antes.lvt_pan 
    ,antes.lvt_cam ,antes.lvt_zap ,antes.lvt_birr ,antes.lvt_pix ,antes.lvt_som 
    ,antes.lvt_swt ,antes.lvt_chu ,antes.lvt_bot ,luego.lvt_catalogo 
    ,luego.lvt_pan ,luego.lvt_cam ,luego.lvt_zap ,luego.lvt_birr ,luego.lvt_pix 
    ,luego.lvt_som ,luego.lvt_swt ,luego.lvt_chu ,luego.lvt_bot ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lves_tallas delete on "informix"
    .lves_tallas referencing old as antes
    for each row
        (
        insert into "informix".aud_lves_tallas (lvt_catalogo,
    lvt_pan,lvt_cam,lvt_zap,lvt_birr,lvt_pix,lvt_som,lvt_swt,lvt_chu,
    lvt_bot,desp_lvt_catalogo,desp_lvt_pan,desp_lvt_cam,desp_lvt_zap,
    desp_lvt_birr,desp_lvt_pix,desp_lvt_som,desp_lvt_swt,desp_lvt_chu,
    desp_lvt_bot,accion,usuario,hora)  values (antes.lvt_catalogo ,antes.lvt_pan 
    ,antes.lvt_cam ,antes.lvt_zap ,antes.lvt_birr ,antes.lvt_pix ,antes.lvt_som 
    ,antes.lvt_swt ,antes.lvt_chu ,antes.lvt_bot ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,' ' ,' ' ,' ' ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_org_meom_detalle update on "informix"
    .org_meom_detalle referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_org_meom_detalle (dmeom_codigo,
    dmeom_req,dmeom_orden,desp_dmeom_codigo,desp_dmeom_req,desp_dmeom_orden,
    accion,usuario,hora)  values (antes.dmeom_codigo ,antes.dmeom_req 
    ,antes.dmeom_orden ,luego.dmeom_codigo ,luego.dmeom_req ,luego.dmeom_orden 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_org_meom_detalle insert on "informix"
    .org_meom_detalle referencing new as luego
    for each row
        (
        insert into "informix".aud_org_meom_detalle (dmeom_codigo,
    dmeom_req,dmeom_orden,desp_dmeom_codigo,desp_dmeom_req,desp_dmeom_orden,
    accion,usuario,hora)  values (' ' ,NULL ,NULL ,luego.dmeom_codigo 
    ,luego.dmeom_req ,luego.dmeom_orden ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_org_meom_detalle delete on "informix"
    .org_meom_detalle referencing old as antes
    for each row
        (
        insert into "informix".aud_org_meom_detalle (dmeom_codigo,
    dmeom_req,dmeom_orden,desp_dmeom_codigo,desp_dmeom_req,desp_dmeom_orden,
    accion,usuario,hora)  values (antes.dmeom_codigo ,antes.dmeom_req 
    ,antes.dmeom_orden ,' ' ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_org_meom_funciones update on "informix"
    .org_meom_funciones referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_org_meom_funciones (func_codigo,
    func_empleo,func_desc,func_orden,desp_func_codigo,desp_func_empleo,
    desp_func_desc,desp_func_orden,accion,usuario,hora)  values (antes.func_codigo 
    ,antes.func_empleo ,antes.func_desc ,antes.func_orden ,luego.func_codigo 
    ,luego.func_empleo ,luego.func_desc ,luego.func_orden ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_org_meom_funciones insert on "informix"
    .org_meom_funciones referencing new as luego
    for each row
        (
        insert into "informix".aud_org_meom_funciones (func_codigo,
    func_empleo,func_desc,func_orden,desp_func_codigo,desp_func_empleo,
    desp_func_desc,desp_func_orden,accion,usuario,hora)  values (' ' ,
    ' ' ,' ' ,NULL ,luego.func_codigo ,luego.func_empleo ,luego.func_desc 
    ,luego.func_orden ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_org_meom_funciones delete on "informix"
    .org_meom_funciones referencing old as antes
    for each row
        (
        insert into "informix".aud_org_meom_funciones (func_codigo,
    func_empleo,func_desc,func_orden,desp_func_codigo,desp_func_empleo,
    desp_func_desc,desp_func_orden,accion,usuario,hora)  values (antes.func_codigo 
    ,antes.func_empleo ,antes.func_desc ,antes.func_orden ,' ' ,' ' ,' '
     ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_org_meom_req update on "informix"
    .org_meom_req referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_org_meom_req (req_codigo,req_desc,
    desp_req_codigo,desp_req_desc,accion,usuario,hora)  values (antes.req_codigo 
    ,antes.req_desc ,luego.req_codigo ,luego.req_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_org_meom_req insert on "informix"
    .org_meom_req referencing new as luego
    for each row
        (
        insert into "informix".aud_org_meom_req (req_codigo,req_desc,
    desp_req_codigo,desp_req_desc,accion,usuario,hora)  values (NULL 
    ,' ' ,luego.req_codigo ,luego.req_desc ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_org_meom_req delete on "informix"
    .org_meom_req referencing old as antes
    for each row
        (
        insert into "informix".aud_org_meom_req (req_codigo,req_desc,
    desp_req_codigo,desp_req_desc,accion,usuario,hora)  values (antes.req_codigo 
    ,antes.req_desc ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_oeac_entrena update on "informix"
    .oeac_entrena referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_oeac_entrena (acti_codigo,
    acti_desc_lg,acti_tipo,desp_acti_codigo,desp_acti_desc_lg,desp_acti_tipo,
    accion,usuario,hora)  values (antes.acti_codigo ,antes.acti_desc_lg 
    ,antes.acti_tipo ,luego.acti_codigo ,luego.acti_desc_lg ,luego.acti_tipo 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_oeac_entrena insert on "informix"
    .oeac_entrena referencing new as luego
    for each row
        (
        insert into "informix".aud_oeac_entrena (acti_codigo,
    acti_desc_lg,acti_tipo,desp_acti_codigo,desp_acti_desc_lg,desp_acti_tipo,
    accion,usuario,hora)  values (NULL ,' ' ,NULL ,luego.acti_codigo ,
    luego.acti_desc_lg ,luego.acti_tipo ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_oeac_entrena delete on "informix"
    .oeac_entrena referencing old as antes
    for each row
        (
        insert into "informix".aud_oeac_entrena (acti_codigo,
    acti_desc_lg,acti_tipo,desp_acti_codigo,desp_acti_desc_lg,desp_acti_tipo,
    accion,usuario,hora)  values (antes.acti_codigo ,antes.acti_desc_lg 
    ,antes.acti_tipo ,NULL ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_oedr_entrena update on "informix"
    .oedr_entrena referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_oedr_entrena (der_refiere,
    der_trans,der_requerimiento,der_cantidad,desp_der_refiere,desp_der_trans,
    desp_der_requerimiento,desp_der_cantidad,accion,usuario,hora)  values 
    (antes.der_refiere ,antes.der_trans ,antes.der_requerimiento ,antes.der_cantidad 
    ,luego.der_refiere ,luego.der_trans ,luego.der_requerimiento ,luego.der_cantidad 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_oedr_entrena insert on "informix"
    .oedr_entrena referencing new as luego
    for each row
        (
        insert into "informix".aud_oedr_entrena (der_refiere,
    der_trans,der_requerimiento,der_cantidad,desp_der_refiere,desp_der_trans,
    desp_der_requerimiento,desp_der_cantidad,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,NULL ,luego.der_refiere ,luego.der_trans ,luego.der_requerimiento 
    ,luego.der_cantidad ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_oedr_entrena delete on "informix"
    .oedr_entrena referencing old as antes
    for each row
        (
        insert into "informix".aud_oedr_entrena (der_refiere,
    der_trans,der_requerimiento,der_cantidad,desp_der_refiere,desp_der_trans,
    desp_der_requerimiento,desp_der_cantidad,accion,usuario,hora)  values 
    (antes.der_refiere ,antes.der_trans ,antes.der_requerimiento ,antes.der_cantidad 
    ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_his_morg update on "informix".morg 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_morg (plaza,ceom,dependencia,
    jerarquia,grado,plaza_desc,situacion,cod_pago,hrs_trab,fec_ult_mod,
    org_gradol,nominas,desp_plaza,desp_ceom,desp_dependencia,desp_jerarquia,
    desp_grado,desp_plaza_desc,desp_situacion,desp_cod_pago,desp_hrs_trab,
    desp_fec_ult_mod,desp_org_gradol,desp_nominas,accion,usuario,hora) 
     values (antes.org_plaza ,antes.org_ceom ,antes.org_dependencia ,
    antes.org_jerarquia ,antes.org_grado ,antes.org_plaza_desc ,antes.org_situacion 
    ,antes.org_cod_pago ,antes.org_hrs_trab ,antes.org_fec_ult_mod ,antes.org_grado 
    ,antes.org_nominas ,luego.org_plaza ,luego.org_ceom ,luego.org_dependencia 
    ,luego.org_jerarquia ,luego.org_grado ,luego.org_plaza_desc ,luego.org_situacion 
    ,luego.org_cod_pago ,luego.org_hrs_trab ,luego.org_fec_ult_mod ,luego.org_grado 
    ,luego.org_nominas ,'U' ,USER ,CURRENT year to fraction(3) ),
        execute procedure "informix".sp_his_morg(antes.org_plaza 
    ,antes.org_ceom ,antes.org_grado ,antes.org_plaza_desc ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_morg insert on "informix".morg referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_morg (plaza,ceom,dependencia,
    jerarquia,grado,plaza_desc,situacion,cod_pago,hrs_trab,fec_ult_mod,
    org_gradol,nominas,desp_plaza,desp_ceom,desp_dependencia,desp_jerarquia,
    desp_grado,desp_plaza_desc,desp_situacion,desp_cod_pago,desp_hrs_trab,
    desp_fec_ult_mod,desp_org_gradol,desp_nominas,accion,usuario,hora) 
     values (luego.org_plaza ,luego.org_ceom ,luego.org_dependencia ,
    luego.org_jerarquia ,luego.org_grado ,luego.org_plaza_desc ,luego.org_situacion 
    ,luego.org_cod_pago ,luego.org_hrs_trab ,luego.org_fec_ult_mod ,luego.org_grado 
    ,luego.org_nominas ,luego.org_plaza ,luego.org_ceom ,luego.org_dependencia 
    ,luego.org_jerarquia ,luego.org_grado ,luego.org_plaza_desc ,luego.org_situacion 
    ,luego.org_cod_pago ,luego.org_hrs_trab ,luego.org_fec_ult_mod ,luego.org_grado 
    ,luego.org_nominas ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_morg delete on "informix".morg referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_morg (plaza,ceom,dependencia,
    jerarquia,grado,plaza_desc,situacion,cod_pago,hrs_trab,fec_ult_mod,
    org_gradol,nominas,desp_plaza,desp_ceom,desp_dependencia,desp_jerarquia,
    desp_grado,desp_plaza_desc,desp_situacion,desp_cod_pago,desp_hrs_trab,
    desp_fec_ult_mod,desp_org_gradol,desp_nominas,accion,usuario,hora) 
     values (antes.org_plaza ,antes.org_ceom ,antes.org_dependencia ,
    antes.org_jerarquia ,antes.org_grado ,antes.org_plaza_desc ,antes.org_situacion 
    ,antes.org_cod_pago ,antes.org_hrs_trab ,antes.org_fec_ult_mod ,antes.org_grado 
    ,antes.org_nominas ,antes.org_plaza ,antes.org_ceom ,antes.org_dependencia 
    ,antes.org_jerarquia ,antes.org_grado ,antes.org_plaza_desc ,antes.org_situacion 
    ,antes.org_cod_pago ,antes.org_hrs_trab ,antes.org_fec_ult_mod ,antes.org_grado 
    ,antes.org_nominas ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_oetd_entrena update on "informix"
    .oetd_entrena referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_oetd_entrena (tipd_codigo,
    tipd_desc_lg,desp_tipd_codigo,desp_tipd_desc_lg,accion,usuario,hora) 
     values (antes.tipd_codigo ,antes.tipd_desc_lg ,luego.tipd_codigo 
    ,luego.tipd_desc_lg ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_oetd_entrena insert on "informix"
    .oetd_entrena referencing new as luego
    for each row
        (
        insert into "informix".aud_oetd_entrena (tipd_codigo,
    tipd_desc_lg,desp_tipd_codigo,desp_tipd_desc_lg,accion,usuario,hora) 
     values (NULL ,' ' ,luego.tipd_codigo ,luego.tipd_desc_lg ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_oetd_entrena delete on "informix"
    .oetd_entrena referencing old as antes
    for each row
        (
        insert into "informix".aud_oetd_entrena (tipd_codigo,
    tipd_desc_lg,desp_tipd_codigo,desp_tipd_desc_lg,accion,usuario,hora) 
     values (antes.tipd_codigo ,antes.tipd_desc_lg ,NULL ,' ' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_oeta_entrena update on "informix"
    .oeta_entrena referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_oeta_entrena (tipa_codigo,
    tipa_desc_lg,desp_tipa_codigo,desp_tipa_desc_lg,accion,usuario,hora) 
     values (antes.tipa_codigo ,antes.tipa_desc_lg ,luego.tipa_codigo 
    ,luego.tipa_desc_lg ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_oeta_entrena insert on "informix"
    .oeta_entrena referencing new as luego
    for each row
        (
        insert into "informix".aud_oeta_entrena (tipa_codigo,
    tipa_desc_lg,desp_tipa_codigo,desp_tipa_desc_lg,accion,usuario,hora) 
     values (NULL ,' ' ,luego.tipa_codigo ,luego.tipa_desc_lg ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_oeta_entrena delete on "informix"
    .oeta_entrena referencing old as antes
    for each row
        (
        insert into "informix".aud_oeta_entrena (tipa_codigo,
    tipa_desc_lg,desp_tipa_codigo,desp_tipa_desc_lg,accion,usuario,hora) 
     values (antes.tipa_codigo ,antes.tipa_desc_lg ,NULL ,' ' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_oerq_entrena update on "informix"
    .oerq_entrena referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_oerq_entrena (req_codigo,req_desc_lg,
    req_tipo_req,desp_req_codigo,desp_req_desc_lg,desp_req_tipo_req,accion,
    usuario,hora)  values (antes.req_codigo ,antes.req_desc_lg ,antes.req_tipo_req 
    ,luego.req_codigo ,luego.req_desc_lg ,luego.req_tipo_req ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_oerq_entrena insert on "informix"
    .oerq_entrena referencing new as luego
    for each row
        (
        insert into "informix".aud_oerq_entrena (req_codigo,req_desc_lg,
    req_tipo_req,desp_req_codigo,desp_req_desc_lg,desp_req_tipo_req,accion,
    usuario,hora)  values (NULL ,' ' ,NULL ,luego.req_codigo ,luego.req_desc_lg 
    ,luego.req_tipo_req ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_oerq_entrena delete on "informix"
    .oerq_entrena referencing old as antes
    for each row
        (
        insert into "informix".aud_oerq_entrena (req_codigo,req_desc_lg,
    req_tipo_req,desp_req_codigo,desp_req_desc_lg,desp_req_tipo_req,accion,
    usuario,hora)  values (antes.req_codigo ,antes.req_desc_lg ,antes.req_tipo_req 
    ,NULL ,' ' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_oetr_entrena update on "informix"
    .oetr_entrena referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_oetr_entrena (tipr_codigo,
    tipr_desc_lg,desp_tipr_codigo,desp_tipr_desc_lg,accion,usuario,hora) 
     values (antes.tipr_codigo ,antes.tipr_desc_lg ,luego.tipr_codigo 
    ,luego.tipr_desc_lg ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_oetr_entrena insert on "informix"
    .oetr_entrena referencing new as luego
    for each row
        (
        insert into "informix".aud_oetr_entrena (tipr_codigo,
    tipr_desc_lg,desp_tipr_codigo,desp_tipr_desc_lg,accion,usuario,hora) 
     values (NULL ,' ' ,luego.tipr_codigo ,luego.tipr_desc_lg ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_oetr_entrena delete on "informix"
    .oetr_entrena referencing old as antes
    for each row
        (
        insert into "informix".aud_oetr_entrena (tipr_codigo,
    tipr_desc_lg,desp_tipr_codigo,desp_tipr_desc_lg,accion,usuario,hora) 
     values (antes.tipr_codigo ,antes.tipr_desc_lg ,NULL ,' ' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".aud_oema_entrena update on "informix"
    .oema_entrena referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_oema_entrena (me_trans,me_documentos,
    me_emana,me_encumple,me_tipo,me_fecha,me_motivo,me_elimina,me_ftrans,
    me_user,desp_me_trans,desp_me_documentos,desp_me_emana,desp_me_encumple,
    desp_me_tipo,desp_me_fecha,desp_me_motivo,desp_me_elimina,desp_me_ftrans,
    desp_me_user,accion,usuario,hora)  values (antes.me_trans ,antes.me_documentos 
    ,antes.me_emana ,antes.me_encumple ,antes.me_tipo ,antes.me_fecha 
    ,antes.me_motivo ,antes.me_elimina ,antes.me_ftrans ,antes.me_user 
    ,luego.me_trans ,luego.me_documentos ,luego.me_emana ,luego.me_encumple 
    ,luego.me_tipo ,luego.me_fecha ,luego.me_motivo ,luego.me_elimina 
    ,luego.me_ftrans ,luego.me_user ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_oema_entrena insert on "informix"
    .oema_entrena referencing new as luego
    for each row
        (
        insert into "informix".aud_oema_entrena (me_trans,me_documentos,
    me_emana,me_encumple,me_tipo,me_fecha,me_motivo,me_elimina,me_ftrans,
    me_user,desp_me_trans,desp_me_documentos,desp_me_emana,desp_me_encumple,
    desp_me_tipo,desp_me_fecha,desp_me_motivo,desp_me_elimina,desp_me_ftrans,
    desp_me_user,accion,usuario,hora)  values (luego.me_trans ,luego.me_documentos 
    ,luego.me_emana ,luego.me_encumple ,luego.me_tipo ,luego.me_fecha 
    ,luego.me_motivo ,luego.me_elimina ,luego.me_ftrans ,luego.me_user 
    ,luego.me_trans ,luego.me_documentos ,luego.me_emana ,luego.me_encumple 
    ,luego.me_tipo ,luego.me_fecha ,luego.me_motivo ,luego.me_elimina 
    ,luego.me_ftrans ,luego.me_user ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_oema_entrena delete on "informix"
    .oema_entrena referencing old as antes
    for each row
        (
        insert into "informix".aud_oema_entrena (me_trans,me_documentos,
    me_emana,me_encumple,me_tipo,me_fecha,me_motivo,me_elimina,me_ftrans,
    me_user,desp_me_trans,desp_me_documentos,desp_me_emana,desp_me_encumple,
    desp_me_tipo,desp_me_fecha,desp_me_motivo,desp_me_elimina,desp_me_ftrans,
    desp_me_user,accion,usuario,hora)  values (antes.me_trans ,antes.me_documentos 
    ,antes.me_emana ,antes.me_encumple ,antes.me_tipo ,antes.me_fecha 
    ,antes.me_motivo ,antes.me_elimina ,antes.me_ftrans ,antes.me_user 
    ,antes.me_trans ,antes.me_documentos ,antes.me_emana ,antes.me_encumple 
    ,antes.me_tipo ,antes.me_fecha ,antes.me_motivo ,antes.me_elimina 
    ,antes.me_ftrans ,antes.me_user ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".aud_oede_entrena update on "informix"
    .oede_entrena referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_oede_entrena (de_refiere,de_trans,
    de_dep,de_unidad,de_fecha_inicio,de_fecha_fin,de_actividad,de_requiere,
    de_estado,de_obs,de_elimina,desp_de_refiere,desp_de_trans,desp_de_dep,
    desp_de_unidad,desp_de_fecha_inicio,desp_de_fecha_fin,desp_de_actividad,
    desp_de_requiere,desp_de_estado,desp_de_obs,desp_de_elimina,accion,
    usuario,hora)  values (antes.de_refiere ,antes.de_trans ,antes.de_dep 
    ,antes.de_unidad ,antes.de_fecha_inicio ,antes.de_fecha_fin ,antes.de_actividad 
    ,antes.de_requiere ,antes.de_estado ,antes.de_obs ,antes.de_elimina 
    ,luego.de_refiere ,luego.de_trans ,luego.de_dep ,luego.de_unidad 
    ,luego.de_fecha_inicio ,luego.de_fecha_fin ,luego.de_actividad ,luego.de_requiere 
    ,luego.de_estado ,luego.de_obs ,luego.de_elimina ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_oede_entrena insert on "informix"
    .oede_entrena referencing new as luego
    for each row
        (
        insert into "informix".aud_oede_entrena (de_refiere,de_trans,
    de_dep,de_unidad,de_fecha_inicio,de_fecha_fin,de_actividad,de_requiere,
    de_estado,de_obs,de_elimina,desp_de_refiere,desp_de_trans,desp_de_dep,
    desp_de_unidad,desp_de_fecha_inicio,desp_de_fecha_fin,desp_de_actividad,
    desp_de_requiere,desp_de_estado,desp_de_obs,desp_de_elimina,accion,
    usuario,hora)  values (luego.de_refiere ,luego.de_trans ,luego.de_dep 
    ,luego.de_unidad ,luego.de_fecha_inicio ,luego.de_fecha_fin ,luego.de_actividad 
    ,luego.de_requiere ,luego.de_estado ,luego.de_obs ,luego.de_elimina 
    ,luego.de_refiere ,luego.de_trans ,luego.de_dep ,luego.de_unidad 
    ,luego.de_fecha_inicio ,luego.de_fecha_fin ,luego.de_actividad ,luego.de_requiere 
    ,luego.de_estado ,luego.de_obs ,luego.de_elimina ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_oede_entrena delete on "informix"
    .oede_entrena referencing old as antes
    for each row
        (
        insert into "informix".aud_oede_entrena (de_refiere,de_trans,
    de_dep,de_unidad,de_fecha_inicio,de_fecha_fin,de_actividad,de_requiere,
    de_estado,de_obs,de_elimina,desp_de_refiere,desp_de_trans,desp_de_dep,
    desp_de_unidad,desp_de_fecha_inicio,desp_de_fecha_fin,desp_de_actividad,
    desp_de_requiere,desp_de_estado,desp_de_obs,desp_de_elimina,accion,
    usuario,hora)  values (antes.de_refiere ,antes.de_trans ,antes.de_dep 
    ,antes.de_unidad ,antes.de_fecha_inicio ,antes.de_fecha_fin ,antes.de_actividad 
    ,antes.de_requiere ,antes.de_estado ,antes.de_obs ,antes.de_elimina 
    ,antes.de_refiere ,antes.de_trans ,antes.de_dep ,antes.de_unidad 
    ,antes.de_fecha_inicio ,antes.de_fecha_fin ,antes.de_actividad ,antes.de_requiere 
    ,antes.de_estado ,antes.de_obs ,antes.de_elimina ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_fdes_empresas update on "informix"
    .fdes_empresas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fdes_empresas (emp_catalogo,
    emp_codigo,emp_fec_ini,emp_fec_fin,emp_registro,emp_mensual,emp_saldo,
    emp_control,desp_emp_catalogo,desp_emp_codigo,desp_emp_fec_ini,desp_emp_fec_fin,
    desp_emp_registro,desp_emp_mensual,desp_emp_saldo,desp_emp_control,
    accion,usuario,hora)  values (antes.emp_catalogo ,antes.emp_codigo 
    ,antes.emp_fec_ini ,antes.emp_fec_fin ,antes.emp_registro ,antes.emp_mensual 
    ,antes.emp_saldo ,antes.emp_control ,luego.emp_catalogo ,luego.emp_codigo 
    ,luego.emp_fec_ini ,luego.emp_fec_fin ,luego.emp_registro ,luego.emp_mensual 
    ,luego.emp_saldo ,luego.emp_control ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_fdes_empresas insert on "informix"
    .fdes_empresas referencing new as luego
    for each row
        (
        insert into "informix".aud_fdes_empresas (emp_catalogo,
    emp_codigo,emp_fec_ini,emp_fec_fin,emp_registro,emp_mensual,emp_saldo,
    emp_control,desp_emp_catalogo,desp_emp_codigo,desp_emp_fec_ini,desp_emp_fec_fin,
    desp_emp_registro,desp_emp_mensual,desp_emp_saldo,desp_emp_control,
    accion,usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,' ' ,NULL ,NULL 
    ,' ' ,luego.emp_catalogo ,luego.emp_codigo ,luego.emp_fec_ini ,luego.emp_fec_fin 
    ,luego.emp_registro ,luego.emp_mensual ,luego.emp_saldo ,luego.emp_control 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fdes_empresas delete on "informix"
    .fdes_empresas referencing old as antes
    for each row
        (
        insert into "informix".aud_fdes_empresas (emp_catalogo,
    emp_codigo,emp_fec_ini,emp_fec_fin,emp_registro,emp_mensual,emp_saldo,
    emp_control,desp_emp_catalogo,desp_emp_codigo,desp_emp_fec_ini,desp_emp_fec_fin,
    desp_emp_registro,desp_emp_mensual,desp_emp_saldo,desp_emp_control,
    accion,usuario,hora)  values (antes.emp_catalogo ,antes.emp_codigo 
    ,antes.emp_fec_ini ,antes.emp_fec_fin ,antes.emp_registro ,antes.emp_mensual 
    ,antes.emp_saldo ,antes.emp_control ,NULL ,NULL ,' ' ,' ' ,' ' ,NULL 
    ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_peva_concept insert on "informix"
    .peva_concept referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_concept (con_catalogo,
    con_periodo,con_grado,con_arma,con_plaza,con_desc_empleo,con_proy_carrera,
    con_eva_inmediato,con_eva_intermedio,con_eva_final,con_dependencia,
    con_funciones,con_obj1,con_obj2,con_obj3,con_disciplina,con_interper,
    con_admond_rec,con_trabajo,con_comunicacion,con_coordinacion,con_plan_org,
    con_control,con_iniciativa,con_liderazgo,con_comp_social,con_adaptabilidad,
    con_solv_economica,con_cooperacion,con_discrecion,con_salud,con_prevision,
    con_seg_conf,con_vocacion,con_cap_analitica,con_obs,con_concep1,con_concep2,
    con_concep3,desp_con_catalogo,desp_con_periodo,desp_con_grado,desp_con_arma,
    desp_con_plaza,desp_con_desc_empleo,desp_con_proy_carrera,desp_con_eva_inmediato,
    desp_con_eva_intermedio,desp_con_eva_final,desp_con_dependencia,desp_con_funciones,
    desp_con_obj1,desp_con_obj2,desp_con_obj3,desp_con_disciplina,desp_con_interper,
    desp_con_admond_rec,desp_con_trabajo,desp_con_comunicacion,desp_con_coordinacion,
    desp_con_plan_org,desp_con_control,desp_con_iniciativa,desp_con_liderazgo,
    desp_con_comp_social,desp_con_adaptabilidad,desp_con_solv_economica,
    desp_con_cooperacion,desp_con_discrecion,desp_con_salud,desp_con_prevision,
    desp_con_seg_conf,desp_con_vocacion,desp_con_cap_analitica,desp_con_obs,
    desp_con_concep1,desp_con_concep2,desp_con_concep3,accion,usuario,
    hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,'' ,'' ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,'' ,'' ,'' ,'' ,luego.con_catalogo ,luego.con_periodo ,luego.con_grado 
    ,luego.con_arma ,luego.con_plaza ,luego.con_desc_empleo ,luego.con_proy_carrera 
    ,luego.con_eva_inmediato ,luego.con_eva_intermedio ,luego.con_eva_final 
    ,luego.con_dependencia ,luego.con_funciones ,luego.con_obj1 ,luego.con_obj2 
    ,luego.con_obj3 ,luego.con_disciplina ,luego.con_interper ,luego.con_admond_rec 
    ,luego.con_trabajo ,luego.con_comunicacion ,luego.con_coordinacion 
    ,luego.con_plan_org ,luego.con_control ,luego.con_iniciativa ,luego.con_liderazgo 
    ,luego.con_comp_social ,luego.con_adaptabilidad ,luego.con_solv_economica 
    ,luego.con_cooperacion ,luego.con_discrecion ,luego.con_salud ,luego.con_prevision 
    ,luego.con_seg_conf ,luego.con_vocacion ,luego.con_cap_analitica 
    ,luego.con_obs ,luego.con_concep1 ,luego.con_concep2 ,luego.con_concep3 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_peva_concept delete on "informix"
    .peva_concept referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_concept (con_catalogo,
    con_periodo,con_grado,con_arma,con_plaza,con_desc_empleo,con_proy_carrera,
    con_eva_inmediato,con_eva_intermedio,con_eva_final,con_dependencia,
    con_funciones,con_obj1,con_obj2,con_obj3,con_disciplina,con_interper,
    con_admond_rec,con_trabajo,con_comunicacion,con_coordinacion,con_plan_org,
    con_control,con_iniciativa,con_liderazgo,con_comp_social,con_adaptabilidad,
    con_solv_economica,con_cooperacion,con_discrecion,con_salud,con_prevision,
    con_seg_conf,con_vocacion,con_cap_analitica,con_obs,con_concep1,con_concep2,
    con_concep3,desp_con_catalogo,desp_con_periodo,desp_con_grado,desp_con_arma,
    desp_con_plaza,desp_con_desc_empleo,desp_con_proy_carrera,desp_con_eva_inmediato,
    desp_con_eva_intermedio,desp_con_eva_final,desp_con_dependencia,desp_con_funciones,
    desp_con_obj1,desp_con_obj2,desp_con_obj3,desp_con_disciplina,desp_con_interper,
    desp_con_admond_rec,desp_con_trabajo,desp_con_comunicacion,desp_con_coordinacion,
    desp_con_plan_org,desp_con_control,desp_con_iniciativa,desp_con_liderazgo,
    desp_con_comp_social,desp_con_adaptabilidad,desp_con_solv_economica,
    desp_con_cooperacion,desp_con_discrecion,desp_con_salud,desp_con_prevision,
    desp_con_seg_conf,desp_con_vocacion,desp_con_cap_analitica,desp_con_obs,
    desp_con_concep1,desp_con_concep2,desp_con_concep3,accion,usuario,
    hora)  values (antes.con_catalogo ,antes.con_periodo ,antes.con_grado 
    ,antes.con_arma ,antes.con_plaza ,antes.con_desc_empleo ,antes.con_proy_carrera 
    ,antes.con_eva_inmediato ,antes.con_eva_intermedio ,antes.con_eva_final 
    ,antes.con_dependencia ,antes.con_funciones ,antes.con_obj1 ,antes.con_obj2 
    ,antes.con_obj3 ,antes.con_disciplina ,antes.con_interper ,antes.con_admond_rec 
    ,antes.con_trabajo ,antes.con_comunicacion ,antes.con_coordinacion 
    ,antes.con_plan_org ,antes.con_control ,antes.con_iniciativa ,antes.con_liderazgo 
    ,antes.con_comp_social ,antes.con_adaptabilidad ,antes.con_solv_economica 
    ,antes.con_cooperacion ,antes.con_discrecion ,antes.con_salud ,antes.con_prevision 
    ,antes.con_seg_conf ,antes.con_vocacion ,antes.con_cap_analitica 
    ,antes.con_obs ,antes.con_concep1 ,antes.con_concep2 ,antes.con_concep3 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,''
     ,'' ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,
    NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_peva_concept update on "informix"
    .peva_concept referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_concept (con_catalogo,
    con_periodo,con_grado,con_arma,con_plaza,con_desc_empleo,con_proy_carrera,
    con_eva_inmediato,con_eva_intermedio,con_eva_final,con_dependencia,
    con_funciones,con_obj1,con_obj2,con_obj3,con_disciplina,con_interper,
    con_admond_rec,con_trabajo,con_comunicacion,con_coordinacion,con_plan_org,
    con_control,con_iniciativa,con_liderazgo,con_comp_social,con_adaptabilidad,
    con_solv_economica,con_cooperacion,con_discrecion,con_salud,con_prevision,
    con_seg_conf,con_vocacion,con_cap_analitica,con_obs,con_concep1,con_concep2,
    con_concep3,desp_con_catalogo,desp_con_periodo,desp_con_grado,desp_con_arma,
    desp_con_plaza,desp_con_desc_empleo,desp_con_proy_carrera,desp_con_eva_inmediato,
    desp_con_eva_intermedio,desp_con_eva_final,desp_con_dependencia,desp_con_funciones,
    desp_con_obj1,desp_con_obj2,desp_con_obj3,desp_con_disciplina,desp_con_interper,
    desp_con_admond_rec,desp_con_trabajo,desp_con_comunicacion,desp_con_coordinacion,
    desp_con_plan_org,desp_con_control,desp_con_iniciativa,desp_con_liderazgo,
    desp_con_comp_social,desp_con_adaptabilidad,desp_con_solv_economica,
    desp_con_cooperacion,desp_con_discrecion,desp_con_salud,desp_con_prevision,
    desp_con_seg_conf,desp_con_vocacion,desp_con_cap_analitica,desp_con_obs,
    desp_con_concep1,desp_con_concep2,desp_con_concep3,accion,usuario,
    hora)  values (antes.con_catalogo ,antes.con_periodo ,antes.con_grado 
    ,antes.con_arma ,antes.con_plaza ,antes.con_desc_empleo ,antes.con_proy_carrera 
    ,antes.con_eva_inmediato ,antes.con_eva_intermedio ,antes.con_eva_final 
    ,antes.con_dependencia ,antes.con_funciones ,antes.con_obj1 ,antes.con_obj2 
    ,antes.con_obj3 ,antes.con_disciplina ,antes.con_interper ,antes.con_admond_rec 
    ,antes.con_trabajo ,antes.con_comunicacion ,antes.con_coordinacion 
    ,antes.con_plan_org ,antes.con_control ,antes.con_iniciativa ,antes.con_liderazgo 
    ,antes.con_comp_social ,antes.con_adaptabilidad ,antes.con_solv_economica 
    ,antes.con_cooperacion ,antes.con_discrecion ,antes.con_salud ,antes.con_prevision 
    ,antes.con_seg_conf ,antes.con_vocacion ,antes.con_cap_analitica 
    ,antes.con_obs ,antes.con_concep1 ,antes.con_concep2 ,antes.con_concep3 
    ,luego.con_catalogo ,luego.con_periodo ,luego.con_grado ,luego.con_arma 
    ,luego.con_plaza ,luego.con_desc_empleo ,luego.con_proy_carrera ,
    luego.con_eva_inmediato ,luego.con_eva_intermedio ,luego.con_eva_final 
    ,luego.con_dependencia ,luego.con_funciones ,luego.con_obj1 ,luego.con_obj2 
    ,luego.con_obj3 ,luego.con_disciplina ,luego.con_interper ,luego.con_admond_rec 
    ,luego.con_trabajo ,luego.con_comunicacion ,luego.con_coordinacion 
    ,luego.con_plan_org ,luego.con_control ,luego.con_iniciativa ,luego.con_liderazgo 
    ,luego.con_comp_social ,luego.con_adaptabilidad ,luego.con_solv_economica 
    ,luego.con_cooperacion ,luego.con_discrecion ,luego.con_salud ,luego.con_prevision 
    ,luego.con_seg_conf ,luego.con_vocacion ,luego.con_cap_analitica 
    ,luego.con_obs ,luego.con_concep1 ,luego.con_concep2 ,luego.con_concep3 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_peva_proyeccion insert on "informix"
    .peva_proyeccion referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_proyeccion (pro_codigo,
    pro_descripcion,desp_pro_codigo,desp_pro_descripcion,accion,usuario,
    hora)  values (NULL ,'' ,luego.pro_codigo ,luego.pro_descripcion ,
    'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_peva_proyeccion delete on "informix"
    .peva_proyeccion referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_proyeccion (pro_codigo,
    pro_descripcion,desp_pro_codigo,desp_pro_descripcion,accion,usuario,
    hora)  values (antes.pro_codigo ,antes.pro_descripcion ,NULL ,'' ,
    'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_peva_proyeccion update on "informix"
    .peva_proyeccion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_proyeccion (pro_codigo,
    pro_descripcion,desp_pro_codigo,desp_pro_descripcion,accion,usuario,
    hora)  values (antes.pro_codigo ,antes.pro_descripcion ,luego.pro_codigo 
    ,luego.pro_descripcion ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_peva_control_dep insert on "informix"
    .peva_control_dep referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_control_dep (depc_codigo,
    depc_dependencia,depc_docrecibidos,depc_docdevueltos,depc_fec_recibidos,
    depc_fec_devueltos,depc_obs,desp_depc_codigo,desp_depc_dependencia,
    desp_depc_docrecibidos,desp_depc_docdevueltos,desp_depc_fec_recibidos,
    desp_depc_fec_devueltos,desp_depc_obs,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,luego.depc_codigo ,luego.depc_dependencia 
    ,luego.depc_docrecibidos ,luego.depc_docdevueltos ,luego.depc_fec_recibidos 
    ,luego.depc_fec_devueltos ,luego.depc_obs ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_peva_control_dep delete on "informix"
    .peva_control_dep referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_control_dep (depc_codigo,
    depc_dependencia,depc_docrecibidos,depc_docdevueltos,depc_fec_recibidos,
    depc_fec_devueltos,depc_obs,desp_depc_codigo,desp_depc_dependencia,
    desp_depc_docrecibidos,desp_depc_docdevueltos,desp_depc_fec_recibidos,
    desp_depc_fec_devueltos,desp_depc_obs,accion,usuario,hora)  values 
    (antes.depc_codigo ,antes.depc_dependencia ,antes.depc_docrecibidos 
    ,antes.depc_docdevueltos ,antes.depc_fec_recibidos ,antes.depc_fec_devueltos 
    ,antes.depc_obs ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_peva_control_dep update on "informix"
    .peva_control_dep referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_control_dep (depc_codigo,
    depc_dependencia,depc_docrecibidos,depc_docdevueltos,depc_fec_recibidos,
    depc_fec_devueltos,depc_obs,desp_depc_codigo,desp_depc_dependencia,
    desp_depc_docrecibidos,desp_depc_docdevueltos,desp_depc_fec_recibidos,
    desp_depc_fec_devueltos,desp_depc_obs,accion,usuario,hora)  values 
    (antes.depc_codigo ,antes.depc_dependencia ,antes.depc_docrecibidos 
    ,antes.depc_docdevueltos ,antes.depc_fec_recibidos ,antes.depc_fec_devueltos 
    ,antes.depc_obs ,luego.depc_codigo ,luego.depc_dependencia ,luego.depc_docrecibidos 
    ,luego.depc_docdevueltos ,luego.depc_fec_recibidos ,luego.depc_fec_devueltos 
    ,luego.depc_obs ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_sop_equipos update on "informix"
    .sop_equipos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sop_equipos (equ_codigo,equ_nombre,
    desp_equ_codigo,desp_equ_nombre,accion,usuario,hora)  values (antes.equ_codigo 
    ,antes.equ_nombre ,luego.equ_codigo ,luego.equ_nombre ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_sop_equipos insert on "informix"
    .sop_equipos referencing new as luego
    for each row
        (
        insert into "informix".aud_sop_equipos (equ_codigo,equ_nombre,
    desp_equ_codigo,desp_equ_nombre,accion,usuario,hora)  values (NULL 
    ,' ' ,luego.equ_codigo ,luego.equ_nombre ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_sop_equipos delete on "informix"
    .sop_equipos referencing old as antes
    for each row
        (
        insert into "informix".aud_sop_equipos (equ_codigo,equ_nombre,
    desp_equ_codigo,desp_equ_nombre,accion,usuario,hora)  values (antes.equ_codigo 
    ,antes.equ_nombre ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_sop_marcas update on "informix".sop_marcas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sop_marcas (mar_codigo,mar_nombre,
    desp_mar_codigo,desp_mar_nombre,accion,usuario,hora)  values (antes.mar_codigo 
    ,antes.mar_nombre ,luego.mar_codigo ,luego.mar_nombre ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_sop_marcas insert on "informix".sop_marcas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_sop_marcas (mar_codigo,mar_nombre,
    desp_mar_codigo,desp_mar_nombre,accion,usuario,hora)  values (NULL 
    ,' ' ,luego.mar_codigo ,luego.mar_nombre ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_sop_marcas delete on "informix".sop_marcas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_sop_marcas (mar_codigo,mar_nombre,
    desp_mar_codigo,desp_mar_nombre,accion,usuario,hora)  values (antes.mar_codigo 
    ,antes.mar_nombre ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_sop_soporte update on "informix"
    .sop_soporte referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sop_soporte (sop_codigo,sop_fec_ingreso,
    sop_oficio,sop_registro,sop_dependencia,sop_usuario,sop_telefono,
    sop_seccion,sop_equipo,sop_marca,sop_modelo,sop_serie,sop_componentes,
    sop_motivo,sop_inentrega,sop_recibetec,sop_diagnostico,sop_trabrealizado,
    sop_fec_egreso,sop_entrego,sop_recibio,sop_mensaje,sop_visita,desp_sop_codigo,
    desp_sop_fec_ingreso,desp_sop_oficio,desp_sop_registro,desp_sop_dependencia,
    desp_sop_usuario,desp_sop_telefono,desp_sop_seccion,desp_sop_equipo,
    desp_sop_marca,desp_sop_modelo,desp_sop_serie,desp_sop_componentes,
    desp_sop_motivo,desp_sop_inentrega,desp_sop_recibetec,desp_sop_diagnostico,
    desp_sop_trabrealizado,desp_sop_fec_egreso,desp_sop_entrego,desp_sop_recibio,
    desp_sop_mensaje,desp_sop_visita,accion,usuario,hora)  values (antes.sop_codigo 
    ,antes.sop_fec_ingreso ,antes.sop_oficio ,antes.sop_registro ,antes.sop_dependencia 
    ,antes.sop_usuario ,antes.sop_telefono ,antes.sop_seccion ,antes.sop_equipo 
    ,antes.sop_marca ,antes.sop_modelo ,antes.sop_serie ,antes.sop_componentes 
    ,antes.sop_motivo ,antes.sop_inentrega ,antes.sop_recibetec ,antes.sop_diagnostico 
    ,antes.sop_trabrealizado ,antes.sop_fec_egreso ,antes.sop_entrego 
    ,antes.sop_recibio ,antes.sop_mensaje ,antes.sop_visita ,luego.sop_codigo 
    ,luego.sop_fec_ingreso ,luego.sop_oficio ,luego.sop_registro ,luego.sop_dependencia 
    ,luego.sop_usuario ,luego.sop_telefono ,luego.sop_seccion ,luego.sop_equipo 
    ,luego.sop_marca ,luego.sop_modelo ,luego.sop_serie ,luego.sop_componentes 
    ,luego.sop_motivo ,luego.sop_inentrega ,luego.sop_recibetec ,luego.sop_diagnostico 
    ,luego.sop_trabrealizado ,luego.sop_fec_egreso ,luego.sop_entrego 
    ,luego.sop_recibio ,luego.sop_mensaje ,luego.sop_visita ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_sop_soporte insert on "informix"
    .sop_soporte referencing new as luego
    for each row
        (
        insert into "informix".aud_sop_soporte (sop_codigo,sop_fec_ingreso,
    sop_oficio,sop_registro,sop_dependencia,sop_usuario,sop_telefono,
    sop_seccion,sop_equipo,sop_marca,sop_modelo,sop_serie,sop_componentes,
    sop_motivo,sop_inentrega,sop_recibetec,sop_diagnostico,sop_trabrealizado,
    sop_fec_egreso,sop_entrego,sop_recibio,sop_mensaje,sop_visita,desp_sop_codigo,
    desp_sop_fec_ingreso,desp_sop_oficio,desp_sop_registro,desp_sop_dependencia,
    desp_sop_usuario,desp_sop_telefono,desp_sop_seccion,desp_sop_equipo,
    desp_sop_marca,desp_sop_modelo,desp_sop_serie,desp_sop_componentes,
    desp_sop_motivo,desp_sop_inentrega,desp_sop_recibetec,desp_sop_diagnostico,
    desp_sop_trabrealizado,desp_sop_fec_egreso,desp_sop_entrego,desp_sop_recibio,
    desp_sop_mensaje,desp_sop_visita,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,NULL ,'' ,NULL ,'' ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,NULL ,'' ,''
     ,'' ,'' ,'' ,NULL ,NULL ,luego.sop_codigo ,luego.sop_fec_ingreso ,luego.sop_oficio 
    ,luego.sop_registro ,luego.sop_dependencia ,luego.sop_usuario ,luego.sop_telefono 
    ,luego.sop_seccion ,luego.sop_equipo ,luego.sop_marca ,luego.sop_modelo 
    ,luego.sop_serie ,luego.sop_componentes ,luego.sop_motivo ,luego.sop_inentrega 
    ,luego.sop_recibetec ,luego.sop_diagnostico ,luego.sop_trabrealizado 
    ,luego.sop_fec_egreso ,luego.sop_entrego ,luego.sop_recibio ,luego.sop_mensaje 
    ,luego.sop_visita ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sop_soporte delete on "informix"
    .sop_soporte referencing old as antes
    for each row
        (
        insert into "informix".aud_sop_soporte (sop_codigo,sop_fec_ingreso,
    sop_oficio,sop_registro,sop_dependencia,sop_usuario,sop_telefono,
    sop_seccion,sop_equipo,sop_marca,sop_modelo,sop_serie,sop_componentes,
    sop_motivo,sop_inentrega,sop_recibetec,sop_diagnostico,sop_trabrealizado,
    sop_fec_egreso,sop_entrego,sop_recibio,sop_mensaje,sop_visita,desp_sop_codigo,
    desp_sop_fec_ingreso,desp_sop_oficio,desp_sop_registro,desp_sop_dependencia,
    desp_sop_usuario,desp_sop_telefono,desp_sop_seccion,desp_sop_equipo,
    desp_sop_marca,desp_sop_modelo,desp_sop_serie,desp_sop_componentes,
    desp_sop_motivo,desp_sop_inentrega,desp_sop_recibetec,desp_sop_diagnostico,
    desp_sop_trabrealizado,desp_sop_fec_egreso,desp_sop_entrego,desp_sop_recibio,
    desp_sop_mensaje,desp_sop_visita,accion,usuario,hora)  values (antes.sop_codigo 
    ,antes.sop_fec_ingreso ,antes.sop_oficio ,antes.sop_registro ,antes.sop_dependencia 
    ,antes.sop_usuario ,antes.sop_telefono ,antes.sop_seccion ,antes.sop_equipo 
    ,antes.sop_marca ,antes.sop_modelo ,antes.sop_serie ,antes.sop_componentes 
    ,antes.sop_motivo ,antes.sop_inentrega ,antes.sop_recibetec ,antes.sop_diagnostico 
    ,antes.sop_trabrealizado ,antes.sop_fec_egreso ,antes.sop_entrego 
    ,antes.sop_recibio ,antes.sop_mensaje ,antes.sop_visita ,NULL ,'' 
    ,'' ,'' ,NULL ,'' ,NULL ,'' ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,NULL ,'' ,'' ,''
     ,'' ,'' ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_opaf_dominadas update on "informix"
    .opaf_dominadas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_opaf_dominadas (dom_edad,dom_sexo,
    dom_repeticiones,dom_punteo,desp_dom_edad,desp_dom_sexo,desp_dom_repeticiones,
    desp_dom_punteo,accion,usuario,hora)  values (antes.dom_edad ,antes.dom_sexo 
    ,antes.dom_repeticiones ,antes.dom_punteo ,luego.dom_edad ,luego.dom_sexo 
    ,luego.dom_repeticiones ,luego.dom_punteo ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_opaf_dominadas insert on "informix"
    .opaf_dominadas referencing new as luego
    for each row
        (
        insert into "informix".aud_opaf_dominadas (dom_edad,dom_sexo,
    dom_repeticiones,dom_punteo,desp_dom_edad,desp_dom_sexo,desp_dom_repeticiones,
    desp_dom_punteo,accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL 
    ,luego.dom_edad ,luego.dom_sexo ,luego.dom_repeticiones ,luego.dom_punteo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_opaf_dominadas delete on "informix"
    .opaf_dominadas referencing old as antes
    for each row
        (
        insert into "informix".aud_opaf_dominadas (dom_edad,dom_sexo,
    dom_repeticiones,dom_punteo,desp_dom_edad,desp_dom_sexo,desp_dom_repeticiones,
    desp_dom_punteo,accion,usuario,hora)  values (antes.dom_edad ,antes.dom_sexo 
    ,antes.dom_repeticiones ,antes.dom_punteo ,NULL ,NULL ,NULL ,NULL 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_opaf_abdominales update on "informix"
    .opaf_abdominales referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_opaf_abdominales (abd_edad,
    abd_sexo,abd_repeticiones,abd_punteo,desp_abd_edad,desp_abd_sexo,
    desp_abd_repeticiones,desp_abd_punteo,accion,usuario,hora)  values 
    (antes.abd_edad ,antes.abd_sexo ,antes.abd_repeticiones ,antes.abd_punteo 
    ,luego.abd_edad ,luego.abd_sexo ,luego.abd_repeticiones ,luego.abd_punteo 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_opaf_abdominales insert on "informix"
    .opaf_abdominales referencing new as luego
    for each row
        (
        insert into "informix".aud_opaf_abdominales (abd_edad,
    abd_sexo,abd_repeticiones,abd_punteo,desp_abd_edad,desp_abd_sexo,
    desp_abd_repeticiones,desp_abd_punteo,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,NULL ,luego.abd_edad ,luego.abd_sexo ,luego.abd_repeticiones 
    ,luego.abd_punteo ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_opaf_abdominales delete on "informix"
    .opaf_abdominales referencing old as antes
    for each row
        (
        insert into "informix".aud_opaf_abdominales (abd_edad,
    abd_sexo,abd_repeticiones,abd_punteo,desp_abd_edad,desp_abd_sexo,
    desp_abd_repeticiones,desp_abd_punteo,accion,usuario,hora)  values 
    (antes.abd_edad ,antes.abd_sexo ,antes.abd_repeticiones ,antes.abd_punteo 
    ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_opaf_alterno update on "informix"
    .opaf_alterno referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_opaf_alterno (alt_edad,alt_sexo,
    alt_evento,alt_norma,desp_alt_edad,desp_alt_sexo,desp_alt_evento,
    desp_alt_norma,accion,usuario,hora)  values (antes.alt_edad ,antes.alt_sexo 
    ,antes.alt_evento ,antes.alt_norma ,luego.alt_edad ,luego.alt_sexo 
    ,luego.alt_evento ,luego.alt_norma ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_opaf_alterno insert on "informix"
    .opaf_alterno referencing new as luego
    for each row
        (
        insert into "informix".aud_opaf_alterno (alt_edad,alt_sexo,
    alt_evento,alt_norma,desp_alt_edad,desp_alt_sexo,desp_alt_evento,
    desp_alt_norma,accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL 
    ,luego.alt_edad ,luego.alt_sexo ,luego.alt_evento ,luego.alt_norma 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_opaf_alterno delete on "informix"
    .opaf_alterno referencing old as antes
    for each row
        (
        insert into "informix".aud_opaf_alterno (alt_edad,alt_sexo,
    alt_evento,alt_norma,desp_alt_edad,desp_alt_sexo,desp_alt_evento,
    desp_alt_norma,accion,usuario,hora)  values (antes.alt_edad ,antes.alt_sexo 
    ,antes.alt_evento ,antes.alt_norma ,NULL ,NULL ,NULL ,NULL ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_opaf_carrera update on "informix"
    .opaf_carrera referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_opaf_carrera (car_edad,car_sexo,
    car_tiempo,car_punteo,desp_car_edad,desp_car_sexo,desp_car_tiempo,
    desp_car_punteo,accion,usuario,hora)  values (antes.car_edad ,antes.car_sexo 
    ,antes.car_tiempo ,antes.car_punteo ,luego.car_edad ,luego.car_sexo 
    ,luego.car_tiempo ,luego.car_punteo ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_opaf_carrera insert on "informix"
    .opaf_carrera referencing new as luego
    for each row
        (
        insert into "informix".aud_opaf_carrera (car_edad,car_sexo,
    car_tiempo,car_punteo,desp_car_edad,desp_car_sexo,desp_car_tiempo,
    desp_car_punteo,accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL 
    ,luego.car_edad ,luego.car_sexo ,luego.car_tiempo ,luego.car_punteo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_opaf_carrera delete on "informix"
    .opaf_carrera referencing old as antes
    for each row
        (
        insert into "informix".aud_opaf_carrera (car_edad,car_sexo,
    car_tiempo,car_punteo,desp_car_edad,desp_car_sexo,desp_car_tiempo,
    desp_car_punteo,accion,usuario,hora)  values (antes.car_edad ,antes.car_sexo 
    ,antes.car_tiempo ,antes.car_punteo ,NULL ,NULL ,NULL ,NULL ,'D' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_eva_esptas update on "informix".eva_especialistas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eva_especialistas (esp_catalogo,
    esp_ano,esp_tipo,esp_grado,esp_nom1,esp_nom2,esp_ape1,esp_ape2,esp_empleo,
    esp_plaza,esp_nom_comando,esp_anos1,esp_meses1,esp_dias1,esp_evaluador,
    esp_eva_grado,esp_eva_nom1,esp_eva_nom2,esp_eva_ape1,esp_eva_ape2,
    esp_eva_puesto,esp_anos2,esp_meses2,esp_dias2,esp_biofisico,esp_con_fisica,
    esp_eva1,esp_eva2,esp_eva3,esp_eva4,esp_demeritos,esp_arrestos,esp_merito1,
    esp_merito11,esp_merito2,esp_merito22,esp_subtotal1,esp_concep1,esp_concep2,
    esp_concep3,esp_concep4,esp_concep5,esp_concep6,esp_concep7,esp_concep8,
    esp_concep9,esp_concep10,esp_concep11,esp_concep12,esp_concep13,esp_concep14,
    esp_concep15,esp_subtotal2,esp_total,esp_categoria,esp_motivadoras,
    esp_correctivas,esp_obs,desp_esp_catalogo,desp_esp_ano,desp_esp_tipo,
    desp_esp_grado,desp_esp_nom1,desp_esp_nom2,desp_esp_ape1,desp_esp_ape2,
    desp_esp_empleo,desp_esp_plaza,desp_esp_nom_comando,desp_esp_anos1,
    desp_esp_meses1,desp_esp_dias1,desp_esp_evaluador,desp_esp_eva_grado,
    desp_esp_eva_nom1,desp_esp_eva_nom2,desp_esp_eva_ape1,desp_esp_eva_ape2,
    desp_esp_eva_puesto,desp_esp_anos2,desp_esp_meses2,desp_esp_dias2,
    desp_esp_biofisico,desp_esp_con_fisica,desp_esp_eva1,desp_esp_eva2,
    desp_esp_eva3,desp_esp_eva4,desp_esp_demeritos,desp_esp_arrestos,
    desp_esp_merito1,desp_esp_merito11,desp_esp_merito2,desp_esp_merito22,
    desp_esp_subtotal1,desp_esp_concep1,desp_esp_concep2,desp_esp_concep3,
    desp_esp_concep4,desp_esp_concep5,desp_esp_concep6,desp_esp_concep7,
    desp_esp_concep8,desp_esp_concep9,desp_esp_concep10,desp_esp_concep11,
    desp_esp_concep12,desp_esp_concep13,desp_esp_concep14,desp_esp_concep15,
    desp_esp_subtotal2,desp_esp_total,desp_esp_categoria,desp_esp_motivadoras,
    desp_esp_correctivas,desp_esp_obs,accion,usuario,hora)  values (antes.esp_catalogo 
    ,antes.esp_ano ,antes.esp_tipo ,antes.esp_grado ,antes.esp_nom1 ,
    antes.esp_nom2 ,antes.esp_ape1 ,antes.esp_ape2 ,antes.esp_empleo 
    ,antes.esp_plaza ,antes.esp_nom_comando ,antes.esp_anos1 ,antes.esp_meses1 
    ,antes.esp_dias1 ,antes.esp_evaluador ,antes.esp_eva_grado ,antes.esp_eva_nom1 
    ,antes.esp_eva_nom2 ,antes.esp_eva_ape1 ,antes.esp_eva_ape2 ,antes.esp_eva_puesto 
    ,antes.esp_anos2 ,antes.esp_meses2 ,antes.esp_dias2 ,antes.esp_biofisico 
    ,antes.esp_con_fisica ,antes.esp_eva1 ,antes.esp_eva2 ,antes.esp_eva3 
    ,antes.esp_eva4 ,antes.esp_demeritos ,antes.esp_arrestos ,antes.esp_merito1 
    ,antes.esp_merito11 ,antes.esp_merito2 ,antes.esp_merito22 ,antes.esp_subtotal1 
    ,antes.esp_concep1 ,antes.esp_concep2 ,antes.esp_concep3 ,antes.esp_concep4 
    ,antes.esp_concep5 ,antes.esp_concep6 ,antes.esp_concep7 ,antes.esp_concep8 
    ,antes.esp_concep9 ,antes.esp_concep10 ,antes.esp_concep11 ,antes.esp_concep12 
    ,antes.esp_concep13 ,antes.esp_concep14 ,antes.esp_concep15 ,antes.esp_subtotal2 
    ,antes.esp_total ,antes.esp_categoria ,antes.esp_motivadoras ,antes.esp_correctivas 
    ,antes.esp_obs ,luego.esp_catalogo ,luego.esp_ano ,luego.esp_tipo 
    ,luego.esp_grado ,luego.esp_nom1 ,luego.esp_nom2 ,luego.esp_ape1 
    ,luego.esp_ape2 ,luego.esp_empleo ,luego.esp_plaza ,luego.esp_nom_comando 
    ,luego.esp_anos1 ,luego.esp_meses1 ,luego.esp_dias1 ,luego.esp_evaluador 
    ,luego.esp_eva_grado ,luego.esp_eva_nom1 ,luego.esp_eva_nom2 ,luego.esp_eva_ape1 
    ,luego.esp_eva_ape2 ,luego.esp_eva_puesto ,luego.esp_anos2 ,luego.esp_meses2 
    ,luego.esp_dias2 ,luego.esp_biofisico ,luego.esp_con_fisica ,luego.esp_eva1 
    ,luego.esp_eva2 ,luego.esp_eva3 ,luego.esp_eva4 ,luego.esp_demeritos 
    ,luego.esp_arrestos ,luego.esp_merito1 ,luego.esp_merito11 ,luego.esp_merito2 
    ,luego.esp_merito22 ,luego.esp_subtotal1 ,luego.esp_concep1 ,luego.esp_concep2 
    ,luego.esp_concep3 ,luego.esp_concep4 ,luego.esp_concep5 ,luego.esp_concep6 
    ,luego.esp_concep7 ,luego.esp_concep8 ,luego.esp_concep9 ,luego.esp_concep10 
    ,luego.esp_concep11 ,luego.esp_concep12 ,luego.esp_concep13 ,luego.esp_concep14 
    ,luego.esp_concep15 ,luego.esp_subtotal2 ,luego.esp_total ,luego.esp_categoria 
    ,luego.esp_motivadoras ,luego.esp_correctivas ,luego.esp_obs ,'U' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_eva_esptas insert on "informix".eva_especialistas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_eva_especialistas (esp_catalogo,
    esp_ano,esp_tipo,esp_grado,esp_nom1,esp_nom2,esp_ape1,esp_ape2,esp_empleo,
    esp_plaza,esp_nom_comando,esp_anos1,esp_meses1,esp_dias1,esp_evaluador,
    esp_eva_grado,esp_eva_nom1,esp_eva_nom2,esp_eva_ape1,esp_eva_ape2,
    esp_eva_puesto,esp_anos2,esp_meses2,esp_dias2,esp_biofisico,esp_con_fisica,
    esp_eva1,esp_eva2,esp_eva3,esp_eva4,esp_demeritos,esp_arrestos,esp_merito1,
    esp_merito11,esp_merito2,esp_merito22,esp_subtotal1,esp_concep1,esp_concep2,
    esp_concep3,esp_concep4,esp_concep5,esp_concep6,esp_concep7,esp_concep8,
    esp_concep9,esp_concep10,esp_concep11,esp_concep12,esp_concep13,esp_concep14,
    esp_concep15,esp_subtotal2,esp_total,esp_categoria,esp_motivadoras,
    esp_correctivas,esp_obs,desp_esp_catalogo,desp_esp_ano,desp_esp_tipo,
    desp_esp_grado,desp_esp_nom1,desp_esp_nom2,desp_esp_ape1,desp_esp_ape2,
    desp_esp_empleo,desp_esp_plaza,desp_esp_nom_comando,desp_esp_anos1,
    desp_esp_meses1,desp_esp_dias1,desp_esp_evaluador,desp_esp_eva_grado,
    desp_esp_eva_nom1,desp_esp_eva_nom2,desp_esp_eva_ape1,desp_esp_eva_ape2,
    desp_esp_eva_puesto,desp_esp_anos2,desp_esp_meses2,desp_esp_dias2,
    desp_esp_biofisico,desp_esp_con_fisica,desp_esp_eva1,desp_esp_eva2,
    desp_esp_eva3,desp_esp_eva4,desp_esp_demeritos,desp_esp_arrestos,
    desp_esp_merito1,desp_esp_merito11,desp_esp_merito2,desp_esp_merito22,
    desp_esp_subtotal1,desp_esp_concep1,desp_esp_concep2,desp_esp_concep3,
    desp_esp_concep4,desp_esp_concep5,desp_esp_concep6,desp_esp_concep7,
    desp_esp_concep8,desp_esp_concep9,desp_esp_concep10,desp_esp_concep11,
    desp_esp_concep12,desp_esp_concep13,desp_esp_concep14,desp_esp_concep15,
    desp_esp_subtotal2,desp_esp_total,desp_esp_categoria,desp_esp_motivadoras,
    desp_esp_correctivas,desp_esp_obs,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,'' ,''
     ,'' ,'' ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,'' ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,'' ,'' ,'' ,'' ,luego.esp_catalogo ,luego.esp_ano ,luego.esp_tipo 
    ,luego.esp_grado ,luego.esp_nom1 ,luego.esp_nom2 ,luego.esp_ape1 
    ,luego.esp_ape2 ,luego.esp_empleo ,luego.esp_plaza ,luego.esp_nom_comando 
    ,luego.esp_anos1 ,luego.esp_meses1 ,luego.esp_dias1 ,luego.esp_evaluador 
    ,luego.esp_eva_grado ,luego.esp_eva_nom1 ,luego.esp_eva_nom2 ,luego.esp_eva_ape1 
    ,luego.esp_eva_ape2 ,luego.esp_eva_puesto ,luego.esp_anos2 ,luego.esp_meses2 
    ,luego.esp_dias2 ,luego.esp_biofisico ,luego.esp_con_fisica ,luego.esp_eva1 
    ,luego.esp_eva2 ,luego.esp_eva3 ,luego.esp_eva4 ,luego.esp_demeritos 
    ,luego.esp_arrestos ,luego.esp_merito1 ,luego.esp_merito11 ,luego.esp_merito2 
    ,luego.esp_merito22 ,luego.esp_subtotal1 ,luego.esp_concep1 ,luego.esp_concep2 
    ,luego.esp_concep3 ,luego.esp_concep4 ,luego.esp_concep5 ,luego.esp_concep6 
    ,luego.esp_concep7 ,luego.esp_concep8 ,luego.esp_concep9 ,luego.esp_concep10 
    ,luego.esp_concep11 ,luego.esp_concep12 ,luego.esp_concep13 ,luego.esp_concep14 
    ,luego.esp_concep15 ,luego.esp_subtotal2 ,luego.esp_total ,luego.esp_categoria 
    ,luego.esp_motivadoras ,luego.esp_correctivas ,luego.esp_obs ,'I' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_eva_esptas delete on "informix".eva_especialistas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_eva_especialistas (esp_catalogo,
    esp_ano,esp_tipo,esp_grado,esp_nom1,esp_nom2,esp_ape1,esp_ape2,esp_empleo,
    esp_plaza,esp_nom_comando,esp_anos1,esp_meses1,esp_dias1,esp_evaluador,
    esp_eva_grado,esp_eva_nom1,esp_eva_nom2,esp_eva_ape1,esp_eva_ape2,
    esp_eva_puesto,esp_anos2,esp_meses2,esp_dias2,esp_biofisico,esp_con_fisica,
    esp_eva1,esp_eva2,esp_eva3,esp_eva4,esp_demeritos,esp_arrestos,esp_merito1,
    esp_merito11,esp_merito2,esp_merito22,esp_subtotal1,esp_concep1,esp_concep2,
    esp_concep3,esp_concep4,esp_concep5,esp_concep6,esp_concep7,esp_concep8,
    esp_concep9,esp_concep10,esp_concep11,esp_concep12,esp_concep13,esp_concep14,
    esp_concep15,esp_subtotal2,esp_total,esp_categoria,esp_motivadoras,
    esp_correctivas,esp_obs,desp_esp_catalogo,desp_esp_ano,desp_esp_tipo,
    desp_esp_grado,desp_esp_nom1,desp_esp_nom2,desp_esp_ape1,desp_esp_ape2,
    desp_esp_empleo,desp_esp_plaza,desp_esp_nom_comando,desp_esp_anos1,
    desp_esp_meses1,desp_esp_dias1,desp_esp_evaluador,desp_esp_eva_grado,
    desp_esp_eva_nom1,desp_esp_eva_nom2,desp_esp_eva_ape1,desp_esp_eva_ape2,
    desp_esp_eva_puesto,desp_esp_anos2,desp_esp_meses2,desp_esp_dias2,
    desp_esp_biofisico,desp_esp_con_fisica,desp_esp_eva1,desp_esp_eva2,
    desp_esp_eva3,desp_esp_eva4,desp_esp_demeritos,desp_esp_arrestos,
    desp_esp_merito1,desp_esp_merito11,desp_esp_merito2,desp_esp_merito22,
    desp_esp_subtotal1,desp_esp_concep1,desp_esp_concep2,desp_esp_concep3,
    desp_esp_concep4,desp_esp_concep5,desp_esp_concep6,desp_esp_concep7,
    desp_esp_concep8,desp_esp_concep9,desp_esp_concep10,desp_esp_concep11,
    desp_esp_concep12,desp_esp_concep13,desp_esp_concep14,desp_esp_concep15,
    desp_esp_subtotal2,desp_esp_total,desp_esp_categoria,desp_esp_motivadoras,
    desp_esp_correctivas,desp_esp_obs,accion,usuario,hora)  values (antes.esp_catalogo 
    ,antes.esp_ano ,antes.esp_tipo ,antes.esp_grado ,antes.esp_nom1 ,
    antes.esp_nom2 ,antes.esp_ape1 ,antes.esp_ape2 ,antes.esp_empleo 
    ,antes.esp_plaza ,antes.esp_nom_comando ,antes.esp_anos1 ,antes.esp_meses1 
    ,antes.esp_dias1 ,antes.esp_evaluador ,antes.esp_eva_grado ,antes.esp_eva_nom1 
    ,antes.esp_eva_nom2 ,antes.esp_eva_ape1 ,antes.esp_eva_ape2 ,antes.esp_eva_puesto 
    ,antes.esp_anos2 ,antes.esp_meses2 ,antes.esp_dias2 ,antes.esp_biofisico 
    ,antes.esp_con_fisica ,antes.esp_eva1 ,antes.esp_eva2 ,antes.esp_eva3 
    ,antes.esp_eva4 ,antes.esp_demeritos ,antes.esp_arrestos ,antes.esp_merito1 
    ,antes.esp_merito11 ,antes.esp_merito2 ,antes.esp_merito22 ,antes.esp_subtotal1 
    ,antes.esp_concep1 ,antes.esp_concep2 ,antes.esp_concep3 ,antes.esp_concep4 
    ,antes.esp_concep5 ,antes.esp_concep6 ,antes.esp_concep7 ,antes.esp_concep8 
    ,antes.esp_concep9 ,antes.esp_concep10 ,antes.esp_concep11 ,antes.esp_concep12 
    ,antes.esp_concep13 ,antes.esp_concep14 ,antes.esp_concep15 ,antes.esp_subtotal2 
    ,antes.esp_total ,antes.esp_categoria ,antes.esp_motivadoras ,antes.esp_correctivas 
    ,antes.esp_obs ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL 
    ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,'' ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_eva_tipo update on "informix".eva_tipo 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eva_tipo (tip_codigo,tip_descripcion,
    desp_tip_codigo,desp_tip_descripcion,accion,usuario,hora)  values 
    (antes.tip_codigo ,antes.tip_descripcion ,luego.tip_codigo ,luego.tip_descripcion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_eva_tipo insert on "informix".eva_tipo 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_eva_tipo (tip_codigo,tip_descripcion,
    desp_tip_codigo,desp_tip_descripcion,accion,usuario,hora)  values 
    (NULL ,'' ,luego.tip_codigo ,luego.tip_descripcion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_eva_tipo delete on "informix".eva_tipo 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_eva_tipo (tip_codigo,tip_descripcion,
    desp_tip_codigo,desp_tip_descripcion,accion,usuario,hora)  values 
    (antes.tip_codigo ,antes.tip_descripcion ,NULL ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_permiso_autocom delete on "informix"
    .permiso_autocom referencing old as antes
    for each row
        (
        insert into "informix".aud_permiso_autocom (aut_plaza,
    aut_permiso,desp_aut_plaza,desp_aut_permiso,usuario,accion,hora) 
     values (antes.aut_plaza ,antes.aut_permiso ,'' ,NULL ,USER ,'D' ,CURRENT 
    year to fraction(3) ));

create trigger "informix".up_permiso_autocom update on "informix"
    .permiso_autocom referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_permiso_autocom (aut_plaza,
    aut_permiso,desp_aut_plaza,desp_aut_permiso,usuario,accion,hora) 
     values (antes.aut_plaza ,antes.aut_permiso ,luego.aut_plaza ,luego.aut_permiso 
    ,USER ,'U' ,CURRENT year to fraction(3) ));

create trigger "informix".ins_permiso_autocom insert on "informix"
    .permiso_autocom referencing new as luego
    for each row
        (
        insert into "informix".aud_permiso_autocom (aut_plaza,
    aut_permiso,desp_aut_plaza,desp_aut_permiso,usuario,accion,hora) 
     values ('' ,NULL ,luego.aut_plaza ,luego.aut_permiso ,USER ,'I' ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_evaluaciones update on "informix"
    .evaluaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_evaluaciones (e_catalogo,e_evaluacion,
    e_numero,e_edad,e_peso,e_talla,e_imc,e_diagnost,e_ref_dd,e_fecha,
    e_asist_dd,e_resultado,e_grado,e_puntuacion,e_usuario,desp_e_catalogo,
    desp_e_evaluacion,desp_e_numero,desp_e_edad,desp_e_peso,desp_e_talla,
    desp_e_imc,desp_e_diagnost,desp_e_ref_dd,desp_e_fecha,desp_e_asist_dd,
    desp_e_resultado,desp_e_grado,desp_e_puntuacion,desp_e_usuario,accion,
    usuario,hora)  values (antes.e_catalogo ,antes.e_evaluacion ,antes.e_numero 
    ,antes.e_edad ,antes.e_peso ,antes.e_talla ,antes.e_imc ,antes.e_diagnost 
    ,antes.e_ref_dd ,antes.e_fecha ,antes.e_asist_dd ,antes.e_resultado 
    ,antes.e_grado ,antes.e_puntuacion ,antes.e_usuario ,luego.e_catalogo 
    ,luego.e_evaluacion ,luego.e_numero ,luego.e_edad ,luego.e_peso ,
    luego.e_talla ,luego.e_imc ,luego.e_diagnost ,luego.e_ref_dd ,luego.e_fecha 
    ,luego.e_asist_dd ,luego.e_resultado ,luego.e_grado ,luego.e_puntuacion 
    ,luego.e_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_evaluaciones insert on "informix"
    .evaluaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_evaluaciones (e_catalogo,e_evaluacion,
    e_numero,e_edad,e_peso,e_talla,e_imc,e_diagnost,e_ref_dd,e_fecha,
    e_asist_dd,e_resultado,e_grado,e_puntuacion,e_usuario,desp_e_catalogo,
    desp_e_evaluacion,desp_e_numero,desp_e_edad,desp_e_peso,desp_e_talla,
    desp_e_imc,desp_e_diagnost,desp_e_ref_dd,desp_e_fecha,desp_e_asist_dd,
    desp_e_resultado,desp_e_grado,desp_e_puntuacion,desp_e_usuario,accion,
    usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,
    NULL ,' ' ,' ' ,' ' ,' ' ,NULL ,NULL ,' ' ,luego.e_catalogo ,luego.e_evaluacion 
    ,luego.e_numero ,luego.e_edad ,luego.e_peso ,luego.e_talla ,luego.e_imc 
    ,luego.e_diagnost ,luego.e_ref_dd ,luego.e_fecha ,luego.e_asist_dd 
    ,luego.e_resultado ,luego.e_grado ,luego.e_puntuacion ,luego.e_usuario 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_evaluaciones delete on "informix"
    .evaluaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_evaluaciones (e_catalogo,e_evaluacion,
    e_numero,e_edad,e_peso,e_talla,e_imc,e_diagnost,e_ref_dd,e_fecha,
    e_asist_dd,e_resultado,e_grado,e_puntuacion,e_usuario,desp_e_catalogo,
    desp_e_evaluacion,desp_e_numero,desp_e_edad,desp_e_peso,desp_e_talla,
    desp_e_imc,desp_e_diagnost,desp_e_ref_dd,desp_e_fecha,desp_e_asist_dd,
    desp_e_resultado,desp_e_grado,desp_e_puntuacion,desp_e_usuario,accion,
    usuario,hora)  values (antes.e_catalogo ,antes.e_evaluacion ,antes.e_numero 
    ,antes.e_edad ,antes.e_peso ,antes.e_talla ,antes.e_imc ,antes.e_diagnost 
    ,antes.e_ref_dd ,antes.e_fecha ,antes.e_asist_dd ,antes.e_resultado 
    ,antes.e_grado ,antes.e_puntuacion ,antes.e_usuario ,NULL ,NULL ,
    NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,' ' ,' ' ,' ' ,' ' ,NULL ,NULL ,' '
     ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ef_fuerza insert on "informix".ef_fuerza 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ef_fuerza (ef_fecha,ef_depen,
    ef_destino,ef_gd,ef_gb,ef_ofsup_cr,ef_ofsup_rsvas,ef_ofsup_as,ef_ofsub_cr,
    ef_ofsub_rsvas,ef_ofsub_as,ef_esptas,ef_sgtosmay,ef_tropa,ef_tropa_a,
    ef_tropa_n,ef_cadetes,ef_total_destinos,ef_toe,ef_usuario,ef_observaciones,
    desp_ef_fecha,desp_ef_depen,desp_ef_destino,desp_ef_gd,desp_ef_gb,
    desp_ef_ofsup_cr,desp_ef_ofsup_rsvas,desp_ef_ofsup_as,desp_ef_ofsub_cr,
    desp_ef_ofsub_rsvas,desp_ef_ofsub_as,desp_ef_esptas,desp_ef_sgtosmay,
    desp_ef_tropa,desp_ef_tropa_a,desp_ef_tropa_n,desp_ef_cadetes,desp_ef_total_destinos,
    desp_ef_toe,desp_ef_usuario,desp_ef_observaciones,accion,usuario,
    hora)  values ('' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,'' ,luego.ef_fecha ,luego.ef_depen ,luego.ef_destino ,luego.ef_gd 
    ,luego.ef_gb ,luego.ef_ofsup_cr ,luego.ef_ofsup_rsvas ,luego.ef_ofsup_as 
    ,luego.ef_ofsub_cr ,luego.ef_ofsub_rsvas ,luego.ef_ofsub_as ,luego.ef_esptas 
    ,luego.ef_sgtosmay ,luego.ef_tropa ,luego.ef_tropa_a ,luego.ef_tropa_n 
    ,luego.ef_cadetes ,luego.ef_total_destinos ,luego.ef_toe ,luego.ef_usuario 
    ,luego.ef_observaciones ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_ef_fuerza delete on "informix".ef_fuerza 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ef_fuerza (ef_fecha,ef_depen,
    ef_destino,ef_gd,ef_gb,ef_ofsup_cr,ef_ofsup_rsvas,ef_ofsup_as,ef_ofsub_cr,
    ef_ofsub_rsvas,ef_ofsub_as,ef_esptas,ef_sgtosmay,ef_tropa,ef_tropa_a,
    ef_tropa_n,ef_cadetes,ef_total_destinos,ef_toe,ef_usuario,ef_observaciones,
    desp_ef_fecha,desp_ef_depen,desp_ef_destino,desp_ef_gd,desp_ef_gb,
    desp_ef_ofsup_cr,desp_ef_ofsup_rsvas,desp_ef_ofsup_as,desp_ef_ofsub_cr,
    desp_ef_ofsub_rsvas,desp_ef_ofsub_as,desp_ef_esptas,desp_ef_sgtosmay,
    desp_ef_tropa,desp_ef_tropa_a,desp_ef_tropa_n,desp_ef_cadetes,desp_ef_total_destinos,
    desp_ef_toe,desp_ef_usuario,desp_ef_observaciones,accion,usuario,
    hora)  values (antes.ef_fecha ,antes.ef_depen ,antes.ef_destino ,
    antes.ef_gd ,antes.ef_gb ,antes.ef_ofsup_cr ,antes.ef_ofsup_rsvas 
    ,antes.ef_ofsup_as ,antes.ef_ofsub_cr ,antes.ef_ofsub_rsvas ,antes.ef_ofsub_as 
    ,antes.ef_esptas ,antes.ef_sgtosmay ,antes.ef_tropa ,antes.ef_tropa_a 
    ,antes.ef_tropa_n ,antes.ef_cadetes ,antes.ef_total_destinos ,antes.ef_toe 
    ,antes.ef_usuario ,antes.ef_observaciones ,'' ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_ef_fuerza update on "informix".ef_fuerza 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ef_fuerza (ef_fecha,ef_depen,
    ef_destino,ef_gd,ef_gb,ef_ofsup_cr,ef_ofsup_rsvas,ef_ofsup_as,ef_ofsub_cr,
    ef_ofsub_rsvas,ef_ofsub_as,ef_esptas,ef_sgtosmay,ef_tropa,ef_tropa_a,
    ef_tropa_n,ef_cadetes,ef_total_destinos,ef_toe,ef_usuario,ef_observaciones,
    desp_ef_fecha,desp_ef_depen,desp_ef_destino,desp_ef_gd,desp_ef_gb,
    desp_ef_ofsup_cr,desp_ef_ofsup_rsvas,desp_ef_ofsup_as,desp_ef_ofsub_cr,
    desp_ef_ofsub_rsvas,desp_ef_ofsub_as,desp_ef_esptas,desp_ef_sgtosmay,
    desp_ef_tropa,desp_ef_tropa_a,desp_ef_tropa_n,desp_ef_cadetes,desp_ef_total_destinos,
    desp_ef_toe,desp_ef_usuario,desp_ef_observaciones,accion,usuario,
    hora)  values (antes.ef_fecha ,antes.ef_depen ,antes.ef_destino ,
    antes.ef_gd ,antes.ef_gb ,antes.ef_ofsup_cr ,antes.ef_ofsup_rsvas 
    ,antes.ef_ofsup_as ,antes.ef_ofsub_cr ,antes.ef_ofsub_rsvas ,antes.ef_ofsub_as 
    ,antes.ef_esptas ,antes.ef_sgtosmay ,antes.ef_tropa ,antes.ef_tropa_a 
    ,antes.ef_tropa_n ,antes.ef_cadetes ,antes.ef_total_destinos ,antes.ef_toe 
    ,antes.ef_usuario ,antes.ef_observaciones ,luego.ef_fecha ,luego.ef_depen 
    ,luego.ef_destino ,luego.ef_gd ,luego.ef_gb ,luego.ef_ofsup_cr ,luego.ef_ofsup_rsvas 
    ,luego.ef_ofsup_as ,luego.ef_ofsub_cr ,luego.ef_ofsub_rsvas ,luego.ef_ofsub_as 
    ,luego.ef_esptas ,luego.ef_sgtosmay ,luego.ef_tropa ,luego.ef_tropa_a 
    ,luego.ef_tropa_n ,luego.ef_cadetes ,luego.ef_total_destinos ,luego.ef_toe 
    ,luego.ef_usuario ,luego.ef_observaciones ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_ef_usuarios insert on "informix"
    .ef_usuarios referencing new as luego
    for each row
        (
        insert into "informix".aud_ef_usuarios (efu_usuario,efu_depen,
    efu_nivel,desp_efu_usuario,desp_efu_depen,desp_efu_nivel,accion,usuario,
    hora)  values (NULL ,NULL ,'' ,luego.efu_usuario ,luego.efu_depen 
    ,luego.efu_nivel ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ef_usuarios delete on "informix"
    .ef_usuarios referencing old as antes
    for each row
        (
        insert into "informix".aud_ef_usuarios (efu_usuario,efu_depen,
    efu_nivel,desp_efu_usuario,desp_efu_depen,desp_efu_nivel,accion,usuario,
    hora)  values (antes.efu_usuario ,antes.efu_depen ,antes.efu_nivel 
    ,NULL ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ef_usuarios update on "informix"
    .ef_usuarios referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ef_usuarios (efu_usuario,efu_depen,
    efu_nivel,desp_efu_usuario,desp_efu_depen,desp_efu_nivel,accion,usuario,
    hora)  values (antes.efu_usuario ,antes.efu_depen ,antes.efu_nivel 
    ,luego.efu_usuario ,luego.efu_depen ,luego.efu_nivel ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_ei_asignaciones insert on "informix"
    .ei_asignaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_ei_asignaciones (asi_curso,
    asi_materia,desp_asi_curso,desp_asi_materia,accion,usuario,hora) 
     values (NULL ,NULL ,luego.asi_curso ,luego.asi_materia ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_ei_asignaciones delete on "informix"
    .ei_asignaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_ei_asignaciones (asi_curso,
    asi_materia,desp_asi_curso,desp_asi_materia,accion,usuario,hora) 
     values (antes.asi_curso ,antes.asi_materia ,NULL ,NULL ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_ei_asignaciones update on "informix"
    .ei_asignaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ei_asignaciones (asi_curso,
    asi_materia,desp_asi_curso,desp_asi_materia,accion,usuario,hora) 
     values (antes.asi_curso ,antes.asi_materia ,luego.asi_curso ,luego.asi_materia 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ei_cursos_asig insert on "informix"
    .ei_cursos_asig referencing new as luego
    for each row
        (
        insert into "informix".aud_ei_cursos_asig (curasig_codigo,
    curasig_catalogo,curasig_fecha,curasig_obs,curasig_grado,desp_curasig_codigo,
    desp_curasig_catalogo,desp_curasig_fecha,desp_curasig_obs,desp_curasig_grado,
    accion,usuario,hora)  values (NULL ,NULL ,'' ,'' ,'' ,luego.curasig_codigo 
    ,luego.curasig_catalogo ,luego.curasig_fecha ,luego.curasig_obs ,
    luego.curasig_grado ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ei_cursos_asig delete on "informix"
    .ei_cursos_asig referencing old as antes
    for each row
        (
        insert into "informix".aud_ei_cursos_asig (curasig_codigo,
    curasig_catalogo,curasig_fecha,curasig_obs,curasig_grado,desp_curasig_codigo,
    desp_curasig_catalogo,desp_curasig_fecha,desp_curasig_obs,desp_curasig_grado,
    accion,usuario,hora)  values (antes.curasig_codigo ,antes.curasig_catalogo 
    ,antes.curasig_fecha ,antes.curasig_obs ,antes.curasig_grado ,NULL 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ei_cursos_asig update on "informix"
    .ei_cursos_asig referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ei_cursos_asig (curasig_codigo,
    curasig_catalogo,curasig_fecha,curasig_obs,curasig_grado,desp_curasig_codigo,
    desp_curasig_catalogo,desp_curasig_fecha,desp_curasig_obs,desp_curasig_grado,
    accion,usuario,hora)  values (antes.curasig_codigo ,antes.curasig_catalogo 
    ,antes.curasig_fecha ,antes.curasig_obs ,antes.curasig_grado ,luego.curasig_codigo 
    ,luego.curasig_catalogo ,luego.curasig_fecha ,luego.curasig_obs ,
    luego.curasig_grado ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ei_cursos_reali insert on "informix"
    .ei_cursos_reali referencing new as luego
    for each row
        (
        insert into "informix".aud_ei_cursos_reali (curr_tipo,
    curr_referencia,curr_desc_lg,curr_desc_ct,curr_inicia,curr_final,
    curr_obs,desp_curr_tipo,desp_curr_referencia,desp_curr_desc_lg,desp_curr_desc_ct,
    desp_curr_inicia,desp_curr_final,desp_curr_obs,accion,usuario,hora) 
     values (NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,luego.curr_tipo ,luego.curr_referencia 
    ,luego.curr_desc_lg ,luego.curr_desc_ct ,luego.curr_inicia ,luego.curr_final 
    ,luego.curr_obs ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ei_cursos_reali delete on "informix"
    .ei_cursos_reali referencing old as antes
    for each row
        (
        insert into "informix".aud_ei_cursos_reali (curr_tipo,
    curr_referencia,curr_desc_lg,curr_desc_ct,curr_inicia,curr_final,
    curr_obs,desp_curr_tipo,desp_curr_referencia,desp_curr_desc_lg,desp_curr_desc_ct,
    desp_curr_inicia,desp_curr_final,desp_curr_obs,accion,usuario,hora) 
     values (antes.curr_tipo ,antes.curr_referencia ,antes.curr_desc_lg 
    ,antes.curr_desc_ct ,antes.curr_inicia ,antes.curr_final ,antes.curr_obs 
    ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_ei_cursos_reali update on "informix"
    .ei_cursos_reali referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ei_cursos_reali (curr_tipo,
    curr_referencia,curr_desc_lg,curr_desc_ct,curr_inicia,curr_final,
    curr_obs,desp_curr_tipo,desp_curr_referencia,desp_curr_desc_lg,desp_curr_desc_ct,
    desp_curr_inicia,desp_curr_final,desp_curr_obs,accion,usuario,hora) 
     values (antes.curr_tipo ,antes.curr_referencia ,antes.curr_desc_lg 
    ,antes.curr_desc_ct ,antes.curr_inicia ,antes.curr_final ,antes.curr_obs 
    ,luego.curr_tipo ,luego.curr_referencia ,luego.curr_desc_lg ,luego.curr_desc_ct 
    ,luego.curr_inicia ,luego.curr_final ,luego.curr_obs ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_ei_mper_extranjero insert on "informix"
    .ei_mper_extranjero referencing new as luego
    for each row
        (
        insert into "informix".aud_ei_mper_extranjero (ext_codigo,
    ext_grado,ext_arma,ext_nom1,ext_nom2,ext_ape1,ext_ape2,ext_nacionalidad,
    ext_tipo_doc_id,ext_num_doc_id,ext_fec_nac,ext_sexo,ext_tipo_sangre,
    ext_estado_civil,ext_direccion,ext_telefono1,ext_telefono2,desp_ext_codigo,
    desp_ext_grado,desp_ext_arma,desp_ext_nom1,desp_ext_nom2,desp_ext_ape1,
    desp_ext_ape2,desp_ext_nacionalidad,desp_ext_tipo_doc_id,desp_ext_num_doc_id,
    desp_ext_fec_nac,desp_ext_sexo,desp_ext_tipo_sangre,desp_ext_estado_civil,
    desp_ext_direccion,desp_ext_telefono1,desp_ext_telefono2,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,luego.ext_codigo ,luego.ext_grado ,luego.ext_arma ,luego.ext_nom1 
    ,luego.ext_nom2 ,luego.ext_ape1 ,luego.ext_ape2 ,luego.ext_nacionalidad 
    ,luego.ext_tipo_doc_id ,luego.ext_num_doc_id ,luego.ext_fec_nac ,
    luego.ext_sexo ,luego.ext_tipo_sangre ,luego.ext_estado_civil ,luego.ext_direccion 
    ,luego.ext_telefono1 ,luego.ext_telefono2 ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_ei_mper_extranjero delete on "informix"
    .ei_mper_extranjero referencing old as antes
    for each row
        (
        insert into "informix".aud_ei_mper_extranjero (ext_codigo,
    ext_grado,ext_arma,ext_nom1,ext_nom2,ext_ape1,ext_ape2,ext_nacionalidad,
    ext_tipo_doc_id,ext_num_doc_id,ext_fec_nac,ext_sexo,ext_tipo_sangre,
    ext_estado_civil,ext_direccion,ext_telefono1,ext_telefono2,desp_ext_codigo,
    desp_ext_grado,desp_ext_arma,desp_ext_nom1,desp_ext_nom2,desp_ext_ape1,
    desp_ext_ape2,desp_ext_nacionalidad,desp_ext_tipo_doc_id,desp_ext_num_doc_id,
    desp_ext_fec_nac,desp_ext_sexo,desp_ext_tipo_sangre,desp_ext_estado_civil,
    desp_ext_direccion,desp_ext_telefono1,desp_ext_telefono2,accion,usuario,
    hora)  values (antes.ext_codigo ,antes.ext_grado ,antes.ext_arma 
    ,antes.ext_nom1 ,antes.ext_nom2 ,antes.ext_ape1 ,antes.ext_ape2 ,
    antes.ext_nacionalidad ,antes.ext_tipo_doc_id ,antes.ext_num_doc_id 
    ,antes.ext_fec_nac ,antes.ext_sexo ,antes.ext_tipo_sangre ,antes.ext_estado_civil 
    ,antes.ext_direccion ,antes.ext_telefono1 ,antes.ext_telefono2 ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_ei_mper_extranjero update on "informix"
    .ei_mper_extranjero referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_ei_mper_extranjero (ext_codigo,
    ext_grado,ext_arma,ext_nom1,ext_nom2,ext_ape1,ext_ape2,ext_nacionalidad,
    ext_tipo_doc_id,ext_num_doc_id,ext_fec_nac,ext_sexo,ext_tipo_sangre,
    ext_estado_civil,ext_direccion,ext_telefono1,ext_telefono2,desp_ext_codigo,
    desp_ext_grado,desp_ext_arma,desp_ext_nom1,desp_ext_nom2,desp_ext_ape1,
    desp_ext_ape2,desp_ext_nacionalidad,desp_ext_tipo_doc_id,desp_ext_num_doc_id,
    desp_ext_fec_nac,desp_ext_sexo,desp_ext_tipo_sangre,desp_ext_estado_civil,
    desp_ext_direccion,desp_ext_telefono1,desp_ext_telefono2,accion,usuario,
    hora)  values (antes.ext_codigo ,antes.ext_grado ,antes.ext_arma 
    ,antes.ext_nom1 ,antes.ext_nom2 ,antes.ext_ape1 ,antes.ext_ape2 ,
    antes.ext_nacionalidad ,antes.ext_tipo_doc_id ,antes.ext_num_doc_id 
    ,antes.ext_fec_nac ,antes.ext_sexo ,antes.ext_tipo_sangre ,antes.ext_estado_civil 
    ,antes.ext_direccion ,antes.ext_telefono1 ,antes.ext_telefono2 ,luego.ext_codigo 
    ,luego.ext_grado ,luego.ext_arma ,luego.ext_nom1 ,luego.ext_nom2 
    ,luego.ext_ape1 ,luego.ext_ape2 ,luego.ext_nacionalidad ,luego.ext_tipo_doc_id 
    ,luego.ext_num_doc_id ,luego.ext_fec_nac ,luego.ext_sexo ,luego.ext_tipo_sangre 
    ,luego.ext_estado_civil ,luego.ext_direccion ,luego.ext_telefono1 
    ,luego.ext_telefono2 ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ei_materias insert on "informix"
    .ei_materias referencing new as luego
    for each row
        (
        insert into "informix".aud_ei_materias (mat_codigo,mat_descripcion,
    mat_observaciones,desp_mat_codigo,desp_mat_descripcion,desp_mat_observaciones,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.mat_codigo ,luego.mat_descripcion 
    ,luego.mat_observaciones ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_ei_materias delete on "informix"
    .ei_materias referencing old as antes
    for each row
        (
        insert into "informix".aud_ei_materias (mat_codigo,mat_descripcion,
    mat_observaciones,desp_mat_codigo,desp_mat_descripcion,desp_mat_observaciones,
    accion,usuario,hora)  values (antes.mat_codigo ,antes.mat_descripcion 
    ,antes.mat_observaciones ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_ei_materias update on "informix"
    .ei_materias referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ei_materias (mat_codigo,mat_descripcion,
    mat_observaciones,desp_mat_codigo,desp_mat_descripcion,desp_mat_observaciones,
    accion,usuario,hora)  values (antes.mat_codigo ,antes.mat_descripcion 
    ,antes.mat_observaciones ,luego.mat_codigo ,luego.mat_descripcion 
    ,luego.mat_observaciones ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_ei_notas insert on "informix".ei_notas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ei_notas (not_catalogo,not_curso,
    not_materia,not_zona,not_final,not_rec_uno,not_rec_dos,not_obs,desp_not_catalogo,
    desp_not_curso,desp_not_materia,desp_not_zona,desp_not_final,desp_not_rec_uno,
    desp_not_rec_dos,desp_not_obs,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,luego.not_catalogo ,luego.not_curso 
    ,luego.not_materia ,luego.not_zona ,luego.not_final ,luego.not_rec_uno 
    ,luego.not_rec_dos ,luego.not_obs ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_ei_notas delete on "informix".ei_notas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ei_notas (not_catalogo,not_curso,
    not_materia,not_zona,not_final,not_rec_uno,not_rec_dos,not_obs,desp_not_catalogo,
    desp_not_curso,desp_not_materia,desp_not_zona,desp_not_final,desp_not_rec_uno,
    desp_not_rec_dos,desp_not_obs,accion,usuario,hora)  values (antes.not_catalogo 
    ,antes.not_curso ,antes.not_materia ,antes.not_zona ,antes.not_final 
    ,antes.not_rec_uno ,antes.not_rec_dos ,antes.not_obs ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_ei_notas update on "informix".ei_notas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ei_notas (not_catalogo,not_curso,
    not_materia,not_zona,not_final,not_rec_uno,not_rec_dos,not_obs,desp_not_catalogo,
    desp_not_curso,desp_not_materia,desp_not_zona,desp_not_final,desp_not_rec_uno,
    desp_not_rec_dos,desp_not_obs,accion,usuario,hora)  values (antes.not_catalogo 
    ,antes.not_curso ,antes.not_materia ,antes.not_zona ,antes.not_final 
    ,antes.not_rec_uno ,antes.not_rec_dos ,antes.not_obs ,luego.not_catalogo 
    ,luego.not_curso ,luego.not_materia ,luego.not_zona ,luego.not_final 
    ,luego.not_rec_uno ,luego.not_rec_dos ,luego.not_obs ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_ei_tipo_curso insert on "informix"
    .ei_tipo_curso referencing new as luego
    for each row
        (
        insert into "informix".aud_ei_tipo_curso (tcur_codigo,
    tcur_descripcion,tcur_observaciones,desp_tcur_codigo,desp_tcur_descripcion,
    desp_tcur_observaciones,accion,usuario,hora)  values (NULL ,'' ,'' 
    ,luego.tcur_codigo ,luego.tcur_descripcion ,luego.tcur_observaciones 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ei_tipo_curso delete on "informix"
    .ei_tipo_curso referencing old as antes
    for each row
        (
        insert into "informix".aud_ei_tipo_curso (tcur_codigo,
    tcur_descripcion,tcur_observaciones,desp_tcur_codigo,desp_tcur_descripcion,
    desp_tcur_observaciones,accion,usuario,hora)  values (antes.tcur_codigo 
    ,antes.tcur_descripcion ,antes.tcur_observaciones ,NULL ,'' ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ei_tipo_curso update on "informix"
    .ei_tipo_curso referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ei_tipo_curso (tcur_codigo,
    tcur_descripcion,tcur_observaciones,desp_tcur_codigo,desp_tcur_descripcion,
    desp_tcur_observaciones,accion,usuario,hora)  values (antes.tcur_codigo 
    ,antes.tcur_descripcion ,antes.tcur_observaciones ,luego.tcur_codigo 
    ,luego.tcur_descripcion ,luego.tcur_observaciones ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_ef_detalle insert on "informix".ef_detalle 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ef_detalle (ef_fecha,ef_depen,
    ef_destino,ef_numero,ef_ofs,ef_esp,ef_tropa,ef_cdtes,ef_obs,ef_grado,
    ef_comando,ef_tiempo,desp_ef_fecha,desp_ef_depen,desp_ef_destino,
    desp_ef_numero,desp_ef_ofs,desp_ef_esp,desp_ef_tropa,desp_ef_cdtes,
    desp_ef_obs,desp_ef_grado,desp_ef_comando,desp_ef_tiempo,accion,usuario,
    hora)  values ('' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL 
    ,NULL ,'' ,luego.ef_fecha ,luego.ef_depen ,luego.ef_destino ,luego.ef_numero 
    ,luego.ef_ofs ,luego.ef_esp ,luego.ef_tropa ,luego.ef_cdtes ,luego.ef_obs 
    ,luego.ef_grado ,luego.ef_comando ,luego.ef_tiempo ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_ef_detalle delete on "informix".ef_detalle 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ef_detalle (ef_fecha,ef_depen,
    ef_destino,ef_numero,ef_ofs,ef_esp,ef_tropa,ef_cdtes,ef_obs,ef_grado,
    ef_comando,ef_tiempo,desp_ef_fecha,desp_ef_depen,desp_ef_destino,
    desp_ef_numero,desp_ef_ofs,desp_ef_esp,desp_ef_tropa,desp_ef_cdtes,
    desp_ef_obs,desp_ef_grado,desp_ef_comando,desp_ef_tiempo,accion,usuario,
    hora)  values (antes.ef_fecha ,antes.ef_depen ,antes.ef_destino ,
    antes.ef_numero ,antes.ef_ofs ,antes.ef_esp ,antes.ef_tropa ,antes.ef_cdtes 
    ,antes.ef_obs ,antes.ef_grado ,antes.ef_comando ,antes.ef_tiempo 
    ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ef_detalle update on "informix".ef_detalle 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ef_detalle (ef_fecha,ef_depen,
    ef_destino,ef_numero,ef_ofs,ef_esp,ef_tropa,ef_cdtes,ef_obs,ef_grado,
    ef_comando,ef_tiempo,desp_ef_fecha,desp_ef_depen,desp_ef_destino,
    desp_ef_numero,desp_ef_ofs,desp_ef_esp,desp_ef_tropa,desp_ef_cdtes,
    desp_ef_obs,desp_ef_grado,desp_ef_comando,desp_ef_tiempo,accion,usuario,
    hora)  values (antes.ef_fecha ,antes.ef_depen ,antes.ef_destino ,
    antes.ef_numero ,antes.ef_ofs ,antes.ef_esp ,antes.ef_tropa ,antes.ef_cdtes 
    ,antes.ef_obs ,antes.ef_grado ,antes.ef_comando ,antes.ef_tiempo 
    ,luego.ef_fecha ,luego.ef_depen ,luego.ef_destino ,luego.ef_numero 
    ,luego.ef_ofs ,luego.ef_esp ,luego.ef_tropa ,luego.ef_cdtes ,luego.ef_obs 
    ,luego.ef_grado ,luego.ef_comando ,luego.ef_tiempo ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_ef_destinos insert on "informix"
    .ef_destinos referencing new as luego
    for each row
        (
        insert into "informix".aud_ef_destinos (efd_codigo,efd_correla,
    efd_desc_lg,efd_activo,desp_efd_codigo,desp_efd_correla,desp_efd_desc_lg,
    desp_efd_activo,accion,usuario,hora)  values (NULL ,NULL ,'' ,'' ,luego.efd_codigo 
    ,luego.efd_correla ,luego.efd_desc_lg ,luego.efd_activo ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_ef_destinos delete on "informix"
    .ef_destinos referencing old as antes
    for each row
        (
        insert into "informix".aud_ef_destinos (efd_codigo,efd_correla,
    efd_desc_lg,efd_activo,desp_efd_codigo,desp_efd_correla,desp_efd_desc_lg,
    desp_efd_activo,accion,usuario,hora)  values (antes.efd_codigo ,antes.efd_correla 
    ,antes.efd_desc_lg ,antes.efd_activo ,NULL ,NULL ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_ef_destinos update on "informix"
    .ef_destinos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ef_destinos (efd_codigo,efd_correla,
    efd_desc_lg,efd_activo,desp_efd_codigo,desp_efd_correla,desp_efd_desc_lg,
    desp_efd_activo,accion,usuario,hora)  values (antes.efd_codigo ,antes.efd_correla 
    ,antes.efd_desc_lg ,antes.efd_activo ,luego.efd_codigo ,luego.efd_correla 
    ,luego.efd_desc_lg ,luego.efd_activo ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_opaf_notas insert on "informix".opaf_notas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_opaf_notas (not_catalogo,not_fecha,
    not_periodo,not_dominadas,not_punteo_dom,not_abdominales,not_punteo_abd,
    not_carrera,not_punteo_car,not_promedio,not_obs,not_tipo,not_revisado,
    not_dependencia,not_peso,not_estatura,not_imc,not_perfil,not_fec_certi,
    not_grado,not_usuario,not_acta,not_extemporaneo,not_evento,desp_not_catalogo,
    desp_not_fecha,desp_not_periodo,desp_not_dominadas,desp_not_punteo_dom,
    desp_not_abdominales,desp_not_punteo_abd,desp_not_carrera,desp_not_punteo_car,
    desp_not_promedio,desp_not_obs,desp_not_tipo,desp_not_revisado,desp_not_dependencia,
    desp_not_peso,desp_not_estatura,desp_not_imc,desp_not_perfil,desp_not_fec_certi,
    desp_not_grado,desp_not_usuario,desp_not_acta,desp_not_extemporaneo,
    desp_not_evento,accion,usuario,hora)  values (NULL ,' ' ,' ' ,' ' ,' '
     ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' 
    ,' ' ,' ' ,' ' ,luego.not_catalogo ,luego.not_fecha ,luego.not_periodo 
    ,luego.not_dominadas ,luego.not_punteo_dom ,luego.not_abdominales 
    ,luego.not_punteo_abd ,luego.not_carrera ,luego.not_punteo_car ,luego.not_promedio 
    ,luego.not_obs ,luego.not_tipo ,luego.not_revisado ,luego.not_dependencia 
    ,luego.not_peso ,luego.not_estatura ,luego.not_imc ,luego.not_perfil 
    ,luego.not_fec_certi ,luego.not_grado ,luego.not_usuario ,luego.not_acta 
    ,luego.not_extemporaneo ,luego.not_evento ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_opaf_notas delete on "informix".opaf_notas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_opaf_notas (not_catalogo,not_fecha,
    not_periodo,not_dominadas,not_punteo_dom,not_abdominales,not_punteo_abd,
    not_carrera,not_punteo_car,not_promedio,not_obs,not_tipo,not_revisado,
    not_dependencia,not_peso,not_estatura,not_imc,not_perfil,not_fec_certi,
    not_grado,not_usuario,not_acta,not_extemporaneo,not_evento,desp_not_catalogo,
    desp_not_fecha,desp_not_periodo,desp_not_dominadas,desp_not_punteo_dom,
    desp_not_abdominales,desp_not_punteo_abd,desp_not_carrera,desp_not_punteo_car,
    desp_not_promedio,desp_not_obs,desp_not_tipo,desp_not_revisado,desp_not_dependencia,
    desp_not_peso,desp_not_estatura,desp_not_imc,desp_not_perfil,desp_not_fec_certi,
    desp_not_grado,desp_not_usuario,desp_not_acta,desp_not_extemporaneo,
    desp_not_evento,accion,usuario,hora)  values (antes.not_catalogo 
    ,antes.not_fecha ,antes.not_periodo ,antes.not_dominadas ,antes.not_punteo_dom 
    ,antes.not_abdominales ,antes.not_punteo_abd ,antes.not_carrera ,
    antes.not_punteo_car ,antes.not_promedio ,antes.not_obs ,antes.not_tipo 
    ,antes.not_revisado ,antes.not_dependencia ,antes.not_peso ,antes.not_estatura 
    ,antes.not_imc ,antes.not_perfil ,antes.not_fec_certi ,antes.not_grado 
    ,antes.not_usuario ,antes.not_acta ,antes.not_extemporaneo ,antes.not_evento 
    ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' '
     ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_opaf_notas update on "informix".opaf_notas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_opaf_notas (not_catalogo,not_fecha,
    not_periodo,not_dominadas,not_punteo_dom,not_abdominales,not_punteo_abd,
    not_carrera,not_punteo_car,not_promedio,not_obs,not_tipo,not_revisado,
    not_dependencia,not_peso,not_estatura,not_imc,not_perfil,not_fec_certi,
    not_grado,not_usuario,not_acta,not_extemporaneo,not_evento,desp_not_catalogo,
    desp_not_fecha,desp_not_periodo,desp_not_dominadas,desp_not_punteo_dom,
    desp_not_abdominales,desp_not_punteo_abd,desp_not_carrera,desp_not_punteo_car,
    desp_not_promedio,desp_not_obs,desp_not_tipo,desp_not_revisado,desp_not_dependencia,
    desp_not_peso,desp_not_estatura,desp_not_imc,desp_not_perfil,desp_not_fec_certi,
    desp_not_grado,desp_not_usuario,desp_not_acta,desp_not_extemporaneo,
    desp_not_evento,accion,usuario,hora)  values (antes.not_catalogo 
    ,antes.not_fecha ,antes.not_periodo ,antes.not_dominadas ,antes.not_punteo_dom 
    ,antes.not_abdominales ,antes.not_punteo_abd ,antes.not_carrera ,
    antes.not_punteo_car ,antes.not_promedio ,antes.not_obs ,antes.not_tipo 
    ,antes.not_revisado ,antes.not_dependencia ,antes.not_peso ,antes.not_estatura 
    ,antes.not_imc ,antes.not_perfil ,antes.not_fec_certi ,antes.not_grado 
    ,antes.not_usuario ,antes.not_acta ,antes.not_extemporaneo ,antes.not_evento 
    ,luego.not_catalogo ,luego.not_fecha ,luego.not_periodo ,luego.not_dominadas 
    ,luego.not_punteo_dom ,luego.not_abdominales ,luego.not_punteo_abd 
    ,luego.not_carrera ,luego.not_punteo_car ,luego.not_promedio ,luego.not_obs 
    ,luego.not_tipo ,luego.not_revisado ,luego.not_dependencia ,luego.not_peso 
    ,luego.not_estatura ,luego.not_imc ,luego.not_perfil ,luego.not_fec_certi 
    ,luego.not_grado ,luego.not_usuario ,luego.not_acta ,luego.not_extemporaneo 
    ,luego.not_evento ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_larm_sit insert on "informix".larm_sit 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_larm_sit (sit_cod,sit_desc_lg,
    sit_desc_md,sit_desc_ct,sit_cod_ant,sit_usuario,desp_sit_cod,desp_sit_desc_lg,
    desp_sit_desc_md,desp_sit_desc_ct,desp_sit_cod_ant,desp_sit_usuario,
    accion,usuario,hora)  values (NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.sit_cod 
    ,luego.sit_desc_lg ,luego.sit_desc_md ,luego.sit_desc_ct ,luego.sit_cod_ant 
    ,luego.sit_usuario ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_larm_sit update on "informix".larm_sit 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_larm_sit (sit_cod,sit_desc_lg,
    sit_desc_md,sit_desc_ct,sit_cod_ant,sit_usuario,desp_sit_cod,desp_sit_desc_lg,
    desp_sit_desc_md,desp_sit_desc_ct,desp_sit_cod_ant,desp_sit_usuario,
    accion,usuario,hora)  values (antes.sit_cod ,antes.sit_desc_lg ,antes.sit_desc_md 
    ,antes.sit_desc_ct ,antes.sit_cod_ant ,antes.sit_usuario ,luego.sit_cod 
    ,luego.sit_desc_lg ,luego.sit_desc_md ,luego.sit_desc_ct ,luego.sit_cod_ant 
    ,luego.sit_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_larm_sit delete on "informix".larm_sit 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_larm_sit (sit_cod,sit_desc_lg,
    sit_desc_md,sit_desc_ct,sit_cod_ant,sit_usuario,desp_sit_cod,desp_sit_desc_lg,
    desp_sit_desc_md,desp_sit_desc_ct,desp_sit_cod_ant,desp_sit_usuario,
    accion,usuario,hora)  values (antes.sit_cod ,antes.sit_desc_lg ,antes.sit_desc_md 
    ,antes.sit_desc_ct ,antes.sit_cod_ant ,antes.sit_usuario ,NULL ,' '
     ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_larm_tip insert on "informix".larm_tip 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_larm_tip (tip_cod,tip_desc_lg,
    tip_desc_md,tip_desc_ct,tip_asigna,tip_usuario,desp_tip_cod,desp_tip_desc_lg,
    desp_tip_desc_md,desp_tip_desc_ct,desp_tip_asigna,desp_tip_usuario,
    accion,usuario,hora)  values (NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.tip_cod 
    ,luego.tip_desc_lg ,luego.tip_desc_md ,luego.tip_desc_ct ,luego.tip_asigna 
    ,luego.tip_usuario ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_larm_tip update on "informix".larm_tip 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_larm_tip (tip_cod,tip_desc_lg,
    tip_desc_md,tip_desc_ct,tip_asigna,tip_usuario,desp_tip_cod,desp_tip_desc_lg,
    desp_tip_desc_md,desp_tip_desc_ct,desp_tip_asigna,desp_tip_usuario,
    accion,usuario,hora)  values (antes.tip_cod ,antes.tip_desc_lg ,antes.tip_desc_md 
    ,antes.tip_desc_ct ,antes.tip_asigna ,antes.tip_usuario ,luego.tip_cod 
    ,luego.tip_desc_lg ,luego.tip_desc_md ,luego.tip_desc_ct ,luego.tip_asigna 
    ,luego.tip_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_larm_tip delete on "informix".larm_tip 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_larm_tip (tip_cod,tip_desc_lg,
    tip_desc_md,tip_desc_ct,tip_asigna,tip_usuario,desp_tip_cod,desp_tip_desc_lg,
    desp_tip_desc_md,desp_tip_desc_ct,desp_tip_asigna,desp_tip_usuario,
    accion,usuario,hora)  values (antes.tip_cod ,antes.tip_desc_lg ,antes.tip_desc_md 
    ,antes.tip_desc_ct ,antes.tip_asigna ,antes.tip_usuario ,NULL ,' '
     ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_larm_lot insert on "informix".larm_lot 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_larm_lot (lot_tipo,lot_cod,
    lot_marca,lot_modelo,lot_calibre,lot_lote,lot_hecho,lot_fec_compra,
    tip_antiguo,tip_desc_ct,lot_precio,lot_usuario,desp_lot_tipo,desp_lot_cod,
    desp_lot_marca,desp_lot_modelo,desp_lot_calibre,desp_lot_lote,desp_lot_hecho,
    desp_lot_fec_compra,desp_tip_antiguo,desp_tip_desc_ct,desp_lot_precio,
    desp_lot_usuario,accion,usuario,hora)  values (NULL ,NULL ,' ' ,' '
     ,' ' ,' ' ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.lot_tipo ,luego.lot_cod 
    ,luego.lot_marca ,luego.lot_modelo ,luego.lot_calibre ,luego.lot_lote 
    ,luego.lot_hecho ,luego.lot_fec_compra ,luego.tip_antiguo ,luego.tip_desc_ct 
    ,luego.lot_precio ,luego.lot_usuario ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_larm_lot update on "informix".larm_lot 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_larm_lot (lot_tipo,lot_cod,
    lot_marca,lot_modelo,lot_calibre,lot_lote,lot_hecho,lot_fec_compra,
    tip_antiguo,tip_desc_ct,lot_precio,lot_usuario,desp_lot_tipo,desp_lot_cod,
    desp_lot_marca,desp_lot_modelo,desp_lot_calibre,desp_lot_lote,desp_lot_hecho,
    desp_lot_fec_compra,desp_tip_antiguo,desp_tip_desc_ct,desp_lot_precio,
    desp_lot_usuario,accion,usuario,hora)  values (antes.lot_tipo ,antes.lot_cod 
    ,antes.lot_marca ,antes.lot_modelo ,antes.lot_calibre ,antes.lot_lote 
    ,antes.lot_hecho ,antes.lot_fec_compra ,antes.tip_antiguo ,antes.tip_desc_ct 
    ,antes.lot_precio ,antes.lot_usuario ,luego.lot_tipo ,luego.lot_cod 
    ,luego.lot_marca ,luego.lot_modelo ,luego.lot_calibre ,luego.lot_lote 
    ,luego.lot_hecho ,luego.lot_fec_compra ,luego.tip_antiguo ,luego.tip_desc_ct 
    ,luego.lot_precio ,luego.lot_usuario ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_larm_lot delete on "informix".larm_lot 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_larm_lot (lot_tipo,lot_cod,
    lot_marca,lot_modelo,lot_calibre,lot_lote,lot_hecho,lot_fec_compra,
    tip_antiguo,tip_desc_ct,lot_precio,lot_usuario,desp_lot_tipo,desp_lot_cod,
    desp_lot_marca,desp_lot_modelo,desp_lot_calibre,desp_lot_lote,desp_lot_hecho,
    desp_lot_fec_compra,desp_tip_antiguo,desp_tip_desc_ct,desp_lot_precio,
    desp_lot_usuario,accion,usuario,hora)  values (antes.lot_tipo ,antes.lot_cod 
    ,antes.lot_marca ,antes.lot_modelo ,antes.lot_calibre ,antes.lot_lote 
    ,antes.lot_hecho ,antes.lot_fec_compra ,antes.tip_antiguo ,antes.tip_desc_ct 
    ,antes.lot_precio ,antes.lot_usuario ,NULL ,NULL ,' ' ,' ' ,' ' ,' ' 
    ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_larm_loc update on "informix".larm_loc 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_larm_loc (vplaza,vper_cat,
    vper_grado,vgrado,vape1,vape2,vdesc_plaza,vceom,varm_cat,vtipo,vlot_arm,
    vtip_arm,vno_arm,vsit_desc,vsit_codigo,vjerar,desp_vplaza,desp_vper_cat,
    desp_vper_grado,desp_vgrado,desp_vape1,desp_vape2,desp_vdesc_plaza,
    desp_vceom,desp_varm_cat,desp_vtipo,desp_vlot_arm,desp_vtip_arm,desp_vno_arm,
    desp_vsit_desc,desp_vsit_codigo,desp_vjerar,accion,usuario,hora) 
     values (antes.vplaza ,antes.vper_cat ,antes.vper_grado ,antes.vgrado 
    ,antes.vape1 ,antes.vape2 ,antes.vdesc_plaza ,antes.vceom ,antes.varm_cat 
    ,antes.vtipo ,antes.vlot_arm ,antes.vtip_arm ,antes.vno_arm ,antes.vsit_desc 
    ,antes.vsit_codigo ,antes.vjerar ,luego.vplaza ,luego.vper_cat ,luego.vper_grado 
    ,luego.vgrado ,luego.vape1 ,luego.vape2 ,luego.vdesc_plaza ,luego.vceom 
    ,luego.varm_cat ,luego.vtipo ,luego.vlot_arm ,luego.vtip_arm ,luego.vno_arm 
    ,luego.vsit_desc ,luego.vsit_codigo ,luego.vjerar ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_larm_loc delete on "informix".larm_loc 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_larm_loc (vplaza,vper_cat,
    vper_grado,vgrado,vape1,vape2,vdesc_plaza,vceom,varm_cat,vtipo,vlot_arm,
    vtip_arm,vno_arm,vsit_desc,vsit_codigo,vjerar,desp_vplaza,desp_vper_cat,
    desp_vper_grado,desp_vgrado,desp_vape1,desp_vape2,desp_vdesc_plaza,
    desp_vceom,desp_varm_cat,desp_vtipo,desp_vlot_arm,desp_vtip_arm,desp_vno_arm,
    desp_vsit_desc,desp_vsit_codigo,desp_vjerar,accion,usuario,hora) 
     values (antes.vplaza ,antes.vper_cat ,antes.vper_grado ,antes.vgrado 
    ,antes.vape1 ,antes.vape2 ,antes.vdesc_plaza ,antes.vceom ,antes.varm_cat 
    ,antes.vtipo ,antes.vlot_arm ,antes.vtip_arm ,antes.vno_arm ,antes.vsit_desc 
    ,antes.vsit_codigo ,antes.vjerar ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,''
     ,NULL ,'' ,NULL ,NULL ,'' ,'' ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_larm_loc insert on "informix".larm_loc 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_larm_loc (vplaza,vper_cat,
    vper_grado,vgrado,vape1,vape2,vdesc_plaza,vceom,varm_cat,vtipo,vlot_arm,
    vtip_arm,vno_arm,vsit_desc,vsit_codigo,vjerar,desp_vplaza,desp_vper_cat,
    desp_vper_grado,desp_vgrado,desp_vape1,desp_vape2,desp_vdesc_plaza,
    desp_vceom,desp_varm_cat,desp_vtipo,desp_vlot_arm,desp_vtip_arm,desp_vno_arm,
    desp_vsit_desc,desp_vsit_codigo,desp_vjerar,accion,usuario,hora) 
     values (NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,NULL ,'' ,NULL ,NULL ,'' 
    ,'' ,NULL ,'' ,luego.vplaza ,luego.vper_cat ,luego.vper_grado ,luego.vgrado 
    ,luego.vape1 ,luego.vape2 ,luego.vdesc_plaza ,luego.vceom ,luego.varm_cat 
    ,luego.vtipo ,luego.vlot_arm ,luego.vtip_arm ,luego.vno_arm ,luego.vsit_desc 
    ,luego.vsit_codigo ,luego.vjerar ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_lmarmas update on "informix".lmarmas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmarmas (arm_cat,arm_tipo,
    arm_lote,arm_numero,arm_plaza,arm_sit,arm_fec_situ,arm_usuario,desp_arm_cat,
    desp_arm_tipo,desp_arm_lote,desp_arm_numero,desp_arm_plaza,desp_arm_sit,
    desp_arm_fec_situ,desp_arm_usuario,accion,usuario,hora)  values (antes.arm_cat 
    ,antes.arm_tipo ,antes.arm_lote ,antes.arm_numero ,antes.arm_plaza 
    ,antes.arm_sit ,antes.arm_fec_situ ,antes.arm_usuario ,luego.arm_cat 
    ,luego.arm_tipo ,luego.arm_lote ,luego.arm_numero ,luego.arm_plaza 
    ,luego.arm_sit ,luego.arm_fec_situ ,luego.arm_usuario ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".del_lmarmas delete on "informix".lmarmas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lmarmas (arm_cat,arm_tipo,
    arm_lote,arm_numero,arm_plaza,arm_sit,arm_fec_situ,arm_usuario,desp_arm_cat,
    desp_arm_tipo,desp_arm_lote,desp_arm_numero,desp_arm_plaza,desp_arm_sit,
    desp_arm_fec_situ,desp_arm_usuario,accion,usuario,hora)  values (antes.arm_cat 
    ,antes.arm_tipo ,antes.arm_lote ,antes.arm_numero ,antes.arm_plaza 
    ,antes.arm_sit ,antes.arm_fec_situ ,antes.arm_usuario ,NULL ,NULL 
    ,NULL ,' ' ,NULL ,NULL ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_lmarmas insert on "informix".lmarmas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lmarmas (arm_cat,arm_tipo,
    arm_lote,arm_numero,arm_plaza,arm_sit,arm_fec_situ,arm_usuario,desp_arm_cat,
    desp_arm_tipo,desp_arm_lote,desp_arm_numero,desp_arm_plaza,desp_arm_sit,
    desp_arm_fec_situ,desp_arm_usuario,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,' ' ,NULL ,NULL ,'' ,' ' ,luego.arm_cat ,luego.arm_tipo 
    ,luego.arm_lote ,luego.arm_numero ,luego.arm_plaza ,luego.arm_sit 
    ,luego.arm_fec_situ ,luego.arm_usuario ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_larm_det insert on "informix".larm_det 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_larm_det (det_cat,det_plaza,
    det_fec_ini,det_fec_fin,det_cat_per,det_sit,det_usuario,desp_det_cat,
    desp_det_plaza,desp_det_fec_ini,desp_det_fec_fin,desp_det_cat_per,
    desp_det_sit,desp_det_usuario,accion,usuario,hora)  values (NULL 
    ,NULL ,' ' ,' ' ,NULL ,NULL ,' ' ,luego.det_cat ,luego.det_plaza ,luego.det_fec_ini 
    ,luego.det_fec_fin ,luego.det_cat_per ,luego.det_sit ,luego.det_usuario 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_larm_det update on "informix".larm_det 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_larm_det (det_cat,det_plaza,
    det_fec_ini,det_fec_fin,det_cat_per,det_sit,det_usuario,desp_det_cat,
    desp_det_plaza,desp_det_fec_ini,desp_det_fec_fin,desp_det_cat_per,
    desp_det_sit,desp_det_usuario,accion,usuario,hora)  values (antes.det_cat 
    ,antes.det_plaza ,antes.det_fec_ini ,antes.det_fec_fin ,antes.det_cat_per 
    ,antes.det_sit ,antes.det_usuario ,luego.det_cat ,luego.det_plaza 
    ,luego.det_fec_ini ,luego.det_fec_fin ,luego.det_cat_per ,luego.det_sit 
    ,luego.det_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_larm_det delete on "informix".larm_det 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_larm_det (det_cat,det_plaza,
    det_fec_ini,det_fec_fin,det_cat_per,det_sit,det_usuario,desp_det_cat,
    desp_det_plaza,desp_det_fec_ini,desp_det_fec_fin,desp_det_cat_per,
    desp_det_sit,desp_det_usuario,accion,usuario,hora)  values (antes.det_cat 
    ,antes.det_plaza ,antes.det_fec_ini ,antes.det_fec_fin ,antes.det_cat_per 
    ,antes.det_sit ,antes.det_usuario ,NULL ,NULL ,' ' ,' ' ,NULL ,NULL 
    ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lhrep insert on "informix".lhrep 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lhrep (hre_num,hre_sis,hre_cat,
    hre_mot,hre_fec,hre_cst,hre_usuario,desp_hre_num,desp_hre_sis,desp_hre_cat,
    desp_hre_mot,desp_hre_fec,desp_hre_cst,desp_hre_usuario,accion,usuario,
    hora)  values (NULL ,' ' ,NULL ,' ' ,NULL ,NULL ,' ' ,luego.hre_num 
    ,luego.hre_sis ,luego.hre_cat ,luego.hre_mot ,luego.hre_fec ,luego.hre_cst 
    ,luego.hre_usuario ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lhrep update on "informix".lhrep 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lhrep (hre_num,hre_sis,hre_cat,
    hre_mot,hre_fec,hre_cst,hre_usuario,desp_hre_num,desp_hre_sis,desp_hre_cat,
    desp_hre_mot,desp_hre_fec,desp_hre_cst,desp_hre_usuario,accion,usuario,
    hora)  values (antes.hre_num ,antes.hre_sis ,antes.hre_cat ,antes.hre_mot 
    ,antes.hre_fec ,antes.hre_cst ,antes.hre_usuario ,luego.hre_num ,
    luego.hre_sis ,luego.hre_cat ,luego.hre_mot ,luego.hre_fec ,luego.hre_cst 
    ,luego.hre_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lhrep delete on "informix".lhrep 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lhrep (hre_num,hre_sis,hre_cat,
    hre_mot,hre_fec,hre_cst,hre_usuario,desp_hre_num,desp_hre_sis,desp_hre_cat,
    desp_hre_mot,desp_hre_fec,desp_hre_cst,desp_hre_usuario,accion,usuario,
    hora)  values (antes.hre_num ,antes.hre_sis ,antes.hre_cat ,antes.hre_mot 
    ,antes.hre_fec ,antes.hre_cst ,antes.hre_usuario ,NULL ,' ' ,NULL 
    ,' ' ,NULL ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_larm_detalle insert on "informix"
    .larm_detalle referencing new as luego
    for each row
        (
        insert into "informix".aud_larm_detalle (deta_cat,deta_lote,
    deta_numero,deta_plaza,deta_sit,deta_doc,deta_fecha,deta_usuario,
    desp_deta_cat,desp_deta_lote,desp_deta_numero,desp_deta_plaza,desp_deta_sit,
    desp_deta_doc,desp_deta_fecha,desp_deta_usuario,accion,usuario,hora) 
     values (NULL ,NULL ,'' ,NULL ,NULL ,'' ,'' ,'' ,luego.deta_cat ,luego.deta_lote 
    ,luego.deta_numero ,luego.deta_plaza ,luego.deta_sit ,luego.deta_doc 
    ,luego.deta_fecha ,luego.deta_usuario ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_larm_detalle delete on "informix"
    .larm_detalle referencing old as antes
    for each row
        (
        insert into "informix".aud_larm_detalle (deta_cat,deta_lote,
    deta_numero,deta_plaza,deta_sit,deta_doc,deta_fecha,deta_usuario,
    desp_deta_cat,desp_deta_lote,desp_deta_numero,desp_deta_plaza,desp_deta_sit,
    desp_deta_doc,desp_deta_fecha,desp_deta_usuario,accion,usuario,hora) 
     values (antes.deta_cat ,antes.deta_lote ,antes.deta_numero ,antes.deta_plaza 
    ,antes.deta_sit ,antes.deta_doc ,antes.deta_fecha ,antes.deta_usuario 
    ,NULL ,NULL ,'' ,NULL ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_larm_detalle update on "informix"
    .larm_detalle referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_larm_detalle (deta_cat,deta_lote,
    deta_numero,deta_plaza,deta_sit,deta_doc,deta_fecha,deta_usuario,
    desp_deta_cat,desp_deta_lote,desp_deta_numero,desp_deta_plaza,desp_deta_sit,
    desp_deta_doc,desp_deta_fecha,desp_deta_usuario,accion,usuario,hora) 
     values (antes.deta_cat ,antes.deta_lote ,antes.deta_numero ,antes.deta_plaza 
    ,antes.deta_sit ,antes.deta_doc ,antes.deta_fecha ,antes.deta_usuario 
    ,luego.deta_cat ,luego.deta_lote ,luego.deta_numero ,luego.deta_plaza 
    ,luego.deta_sit ,luego.deta_doc ,luego.deta_fecha ,luego.deta_usuario 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_peva_periodos insert on "informix"
    .peva_periodos referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_periodos (per_codigo,
    per_fecha_inicio,per_fecha_fin,desp_per_codigo,desp_per_fecha_inicio,
    desp_per_fecha_fin,accion,usuario,hora)  values (NULL ,'' ,'' ,luego.per_codigo 
    ,luego.per_fecha_inicio ,luego.per_fecha_fin ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_peva_periodos delete on "informix"
    .peva_periodos referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_periodos (per_codigo,
    per_fecha_inicio,per_fecha_fin,desp_per_codigo,desp_per_fecha_inicio,
    desp_per_fecha_fin,accion,usuario,hora)  values (antes.per_codigo 
    ,antes.per_fecha_inicio ,antes.per_fecha_fin ,NULL ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_peva_periodos update on "informix"
    .peva_periodos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_periodos (per_codigo,
    per_fecha_inicio,per_fecha_fin,desp_per_codigo,desp_per_fecha_inicio,
    desp_per_fecha_fin,accion,usuario,hora)  values (antes.per_codigo 
    ,antes.per_fecha_inicio ,antes.per_fecha_fin ,luego.per_codigo ,luego.per_fecha_inicio 
    ,luego.per_fecha_fin ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_peva_admin insert on "informix".peva_admin 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_admin (adm_catalogo,adm_periodo,
    adm_grado,adm_arma,adm_emp_ant,adm_proyec,adm_dep,adm_fec_alta,adm_emp_act,
    adm_tiempo,adm_plaza,adm_ceom,desp_adm_catalogo,desp_adm_periodo,
    desp_adm_grado,desp_adm_arma,desp_adm_emp_ant,desp_adm_proyec,desp_adm_dep,
    desp_adm_fec_alta,desp_adm_emp_act,desp_adm_tiempo,desp_adm_plaza,
    desp_adm_ceom,accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL 
    ,'' ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,'' ,luego.adm_catalogo ,luego.adm_periodo 
    ,luego.adm_grado ,luego.adm_arma ,luego.adm_emp_ant ,luego.adm_proyec 
    ,luego.adm_dep ,luego.adm_fec_alta ,luego.adm_emp_act ,luego.adm_tiempo 
    ,luego.adm_plaza ,luego.adm_ceom ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_peva_admin delete on "informix".peva_admin 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_admin (adm_catalogo,adm_periodo,
    adm_grado,adm_arma,adm_emp_ant,adm_proyec,adm_dep,adm_fec_alta,adm_emp_act,
    adm_tiempo,adm_plaza,adm_ceom,desp_adm_catalogo,desp_adm_periodo,
    desp_adm_grado,desp_adm_arma,desp_adm_emp_ant,desp_adm_proyec,desp_adm_dep,
    desp_adm_fec_alta,desp_adm_emp_act,desp_adm_tiempo,desp_adm_plaza,
    desp_adm_ceom,accion,usuario,hora)  values (antes.adm_catalogo ,antes.adm_periodo 
    ,antes.adm_grado ,antes.adm_arma ,antes.adm_emp_ant ,antes.adm_proyec 
    ,antes.adm_dep ,antes.adm_fec_alta ,antes.adm_emp_act ,antes.adm_tiempo 
    ,antes.adm_plaza ,antes.adm_ceom ,NULL ,NULL ,NULL ,NULL ,'' ,NULL 
    ,NULL ,'' ,'' ,NULL ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_peva_admin update on "informix".peva_admin 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_admin (adm_catalogo,adm_periodo,
    adm_grado,adm_arma,adm_emp_ant,adm_proyec,adm_dep,adm_fec_alta,adm_emp_act,
    adm_tiempo,adm_plaza,adm_ceom,desp_adm_catalogo,desp_adm_periodo,
    desp_adm_grado,desp_adm_arma,desp_adm_emp_ant,desp_adm_proyec,desp_adm_dep,
    desp_adm_fec_alta,desp_adm_emp_act,desp_adm_tiempo,desp_adm_plaza,
    desp_adm_ceom,accion,usuario,hora)  values (antes.adm_catalogo ,antes.adm_periodo 
    ,antes.adm_grado ,antes.adm_arma ,antes.adm_emp_ant ,antes.adm_proyec 
    ,antes.adm_dep ,antes.adm_fec_alta ,antes.adm_emp_act ,antes.adm_tiempo 
    ,antes.adm_plaza ,antes.adm_ceom ,luego.adm_catalogo ,luego.adm_periodo 
    ,luego.adm_grado ,luego.adm_arma ,luego.adm_emp_ant ,luego.adm_proyec 
    ,luego.adm_dep ,luego.adm_fec_alta ,luego.adm_emp_act ,luego.adm_tiempo 
    ,luego.adm_plaza ,luego.adm_ceom ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_peva_aut_em insert on "informix"
    .peva_aut_em referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_aut_em (autem_catalogo,
    autem_periodo,autem_cat_em,autem_grado,autem_fecha,autem_estado,autem_obs,
    desp_autem_catalogo,desp_autem_periodo,desp_autem_cat_em,desp_autem_grado,
    desp_autem_fecha,desp_autem_estado,desp_autem_obs,accion,usuario,
    hora)  values (NULL ,NULL ,NULL ,NULL ,'' ,NULL ,'' ,luego.autem_catalogo 
    ,luego.autem_periodo ,luego.autem_cat_em ,luego.autem_grado ,luego.autem_fecha 
    ,luego.autem_estado ,luego.autem_obs ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_peva_aut_em delete on "informix"
    .peva_aut_em referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_aut_em (autem_catalogo,
    autem_periodo,autem_cat_em,autem_grado,autem_fecha,autem_estado,autem_obs,
    desp_autem_catalogo,desp_autem_periodo,desp_autem_cat_em,desp_autem_grado,
    desp_autem_fecha,desp_autem_estado,desp_autem_obs,accion,usuario,
    hora)  values (antes.autem_catalogo ,antes.autem_periodo ,antes.autem_cat_em 
    ,antes.autem_grado ,antes.autem_fecha ,antes.autem_estado ,antes.autem_obs 
    ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_peva_aut_em update on "informix"
    .peva_aut_em referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_aut_em (autem_catalogo,
    autem_periodo,autem_cat_em,autem_grado,autem_fecha,autem_estado,autem_obs,
    desp_autem_catalogo,desp_autem_periodo,desp_autem_cat_em,desp_autem_grado,
    desp_autem_fecha,desp_autem_estado,desp_autem_obs,accion,usuario,
    hora)  values (antes.autem_catalogo ,antes.autem_periodo ,antes.autem_cat_em 
    ,antes.autem_grado ,antes.autem_fecha ,antes.autem_estado ,antes.autem_obs 
    ,luego.autem_catalogo ,luego.autem_periodo ,luego.autem_cat_em ,luego.autem_grado 
    ,luego.autem_fecha ,luego.autem_estado ,luego.autem_obs ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_peva_conceptos insert on "informix"
    .peva_conceptos referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_conceptos (con_catalogo,
    con_periodo,con_codigo,con_concepto,desp_con_catalogo,desp_con_periodo,
    desp_con_codigo,desp_con_concepto,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,'' ,luego.con_catalogo ,luego.con_periodo ,luego.con_codigo 
    ,luego.con_concepto ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_peva_conceptos delete on "informix"
    .peva_conceptos referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_conceptos (con_catalogo,
    con_periodo,con_codigo,con_concepto,desp_con_catalogo,desp_con_periodo,
    desp_con_codigo,desp_con_concepto,accion,usuario,hora)  values (antes.con_catalogo 
    ,antes.con_periodo ,antes.con_codigo ,antes.con_concepto ,NULL ,NULL 
    ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_peva_conceptos update on "informix"
    .peva_conceptos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_conceptos (con_catalogo,
    con_periodo,con_codigo,con_concepto,desp_con_catalogo,desp_con_periodo,
    desp_con_codigo,desp_con_concepto,accion,usuario,hora)  values (antes.con_catalogo 
    ,antes.con_periodo ,antes.con_codigo ,antes.con_concepto ,luego.con_catalogo 
    ,luego.con_periodo ,luego.con_codigo ,luego.con_concepto ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_peva_evaluacion insert on "informix"
    .peva_evaluacion referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_evaluacion (eva_catalogo,
    eva_periodo,eva_disciplina,eva_rel_inter,eva_admon_rec,eva_cal_trab,
    eva_comunica,eva_coordina,eva_plan_orga,eva_control,eva_iniciativa,
    eva_lider,eva_comp_soc,eva_adapta,eva_solv_econ,eva_coopera,eva_discre,
    eva_salud,eva_prevision,eva_seg_confi,eva_voc_serv,eva_cap_ana,desp_eva_catalogo,
    desp_eva_periodo,desp_eva_disciplina,desp_eva_rel_inter,desp_eva_admon_rec,
    desp_eva_cal_trab,desp_eva_comunica,desp_eva_coordina,desp_eva_plan_orga,
    desp_eva_control,desp_eva_iniciativa,desp_eva_lider,desp_eva_comp_soc,
    desp_eva_adapta,desp_eva_solv_econ,desp_eva_coopera,desp_eva_discre,
    desp_eva_salud,desp_eva_prevision,desp_eva_seg_confi,desp_eva_voc_serv,
    desp_eva_cap_ana,accion,usuario,hora)  values (NULL ,NULL ,NULL ,
    NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,luego.eva_catalogo 
    ,luego.eva_periodo ,luego.eva_disciplina ,luego.eva_rel_inter ,luego.eva_admon_rec 
    ,luego.eva_cal_trab ,luego.eva_comunica ,luego.eva_coordina ,luego.eva_plan_orga 
    ,luego.eva_control ,luego.eva_iniciativa ,luego.eva_lider ,luego.eva_comp_soc 
    ,luego.eva_adapta ,luego.eva_solv_econ ,luego.eva_coopera ,luego.eva_discre 
    ,luego.eva_salud ,luego.eva_prevision ,luego.eva_seg_confi ,luego.eva_voc_serv 
    ,luego.eva_cap_ana ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_peva_evaluacion delete on "informix"
    .peva_evaluacion referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_evaluacion (eva_catalogo,
    eva_periodo,eva_disciplina,eva_rel_inter,eva_admon_rec,eva_cal_trab,
    eva_comunica,eva_coordina,eva_plan_orga,eva_control,eva_iniciativa,
    eva_lider,eva_comp_soc,eva_adapta,eva_solv_econ,eva_coopera,eva_discre,
    eva_salud,eva_prevision,eva_seg_confi,eva_voc_serv,eva_cap_ana,desp_eva_catalogo,
    desp_eva_periodo,desp_eva_disciplina,desp_eva_rel_inter,desp_eva_admon_rec,
    desp_eva_cal_trab,desp_eva_comunica,desp_eva_coordina,desp_eva_plan_orga,
    desp_eva_control,desp_eva_iniciativa,desp_eva_lider,desp_eva_comp_soc,
    desp_eva_adapta,desp_eva_solv_econ,desp_eva_coopera,desp_eva_discre,
    desp_eva_salud,desp_eva_prevision,desp_eva_seg_confi,desp_eva_voc_serv,
    desp_eva_cap_ana,accion,usuario,hora)  values (antes.eva_catalogo 
    ,antes.eva_periodo ,antes.eva_disciplina ,antes.eva_rel_inter ,antes.eva_admon_rec 
    ,antes.eva_cal_trab ,antes.eva_comunica ,antes.eva_coordina ,antes.eva_plan_orga 
    ,antes.eva_control ,antes.eva_iniciativa ,antes.eva_lider ,antes.eva_comp_soc 
    ,antes.eva_adapta ,antes.eva_solv_econ ,antes.eva_coopera ,antes.eva_discre 
    ,antes.eva_salud ,antes.eva_prevision ,antes.eva_seg_confi ,antes.eva_voc_serv 
    ,antes.eva_cap_ana ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_peva_evaluacion update on "informix"
    .peva_evaluacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_evaluacion (eva_catalogo,
    eva_periodo,eva_disciplina,eva_rel_inter,eva_admon_rec,eva_cal_trab,
    eva_comunica,eva_coordina,eva_plan_orga,eva_control,eva_iniciativa,
    eva_lider,eva_comp_soc,eva_adapta,eva_solv_econ,eva_coopera,eva_discre,
    eva_salud,eva_prevision,eva_seg_confi,eva_voc_serv,eva_cap_ana,desp_eva_catalogo,
    desp_eva_periodo,desp_eva_disciplina,desp_eva_rel_inter,desp_eva_admon_rec,
    desp_eva_cal_trab,desp_eva_comunica,desp_eva_coordina,desp_eva_plan_orga,
    desp_eva_control,desp_eva_iniciativa,desp_eva_lider,desp_eva_comp_soc,
    desp_eva_adapta,desp_eva_solv_econ,desp_eva_coopera,desp_eva_discre,
    desp_eva_salud,desp_eva_prevision,desp_eva_seg_confi,desp_eva_voc_serv,
    desp_eva_cap_ana,accion,usuario,hora)  values (antes.eva_catalogo 
    ,antes.eva_periodo ,antes.eva_disciplina ,antes.eva_rel_inter ,antes.eva_admon_rec 
    ,antes.eva_cal_trab ,antes.eva_comunica ,antes.eva_coordina ,antes.eva_plan_orga 
    ,antes.eva_control ,antes.eva_iniciativa ,antes.eva_lider ,antes.eva_comp_soc 
    ,antes.eva_adapta ,antes.eva_solv_econ ,antes.eva_coopera ,antes.eva_discre 
    ,antes.eva_salud ,antes.eva_prevision ,antes.eva_seg_confi ,antes.eva_voc_serv 
    ,antes.eva_cap_ana ,luego.eva_catalogo ,luego.eva_periodo ,luego.eva_disciplina 
    ,luego.eva_rel_inter ,luego.eva_admon_rec ,luego.eva_cal_trab ,luego.eva_comunica 
    ,luego.eva_coordina ,luego.eva_plan_orga ,luego.eva_control ,luego.eva_iniciativa 
    ,luego.eva_lider ,luego.eva_comp_soc ,luego.eva_adapta ,luego.eva_solv_econ 
    ,luego.eva_coopera ,luego.eva_discre ,luego.eva_salud ,luego.eva_prevision 
    ,luego.eva_seg_confi ,luego.eva_voc_serv ,luego.eva_cap_ana ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_peva_notas insert on "informix".peva_notas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_notas (not_catalogo,not_periodo,
    not_e_evalua,not_e_numero,not_pafe,not_dem,desp_not_catalogo,desp_not_periodo,
    desp_not_e_evalua,desp_not_e_numero,desp_not_pafe,desp_not_dem,accion,
    usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,'' ,NULL ,luego.not_catalogo 
    ,luego.not_periodo ,luego.not_e_evalua ,luego.not_e_numero ,luego.not_pafe 
    ,luego.not_dem ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_peva_notas delete on "informix".peva_notas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_notas (not_catalogo,not_periodo,
    not_e_evalua,not_e_numero,not_pafe,not_dem,desp_not_catalogo,desp_not_periodo,
    desp_not_e_evalua,desp_not_e_numero,desp_not_pafe,desp_not_dem,accion,
    usuario,hora)  values (antes.not_catalogo ,antes.not_periodo ,antes.not_e_evalua 
    ,antes.not_e_numero ,antes.not_pafe ,antes.not_dem ,NULL ,NULL ,NULL 
    ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_peva_notas update on "informix".peva_notas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_notas (not_catalogo,not_periodo,
    not_e_evalua,not_e_numero,not_pafe,not_dem,desp_not_catalogo,desp_not_periodo,
    desp_not_e_evalua,desp_not_e_numero,desp_not_pafe,desp_not_dem,accion,
    usuario,hora)  values (antes.not_catalogo ,antes.not_periodo ,antes.not_e_evalua 
    ,antes.not_e_numero ,antes.not_pafe ,antes.not_dem ,luego.not_catalogo 
    ,luego.not_periodo ,luego.not_e_evalua ,luego.not_e_numero ,luego.not_pafe 
    ,luego.not_dem ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_peva_funciones insert on "informix"
    .peva_funciones referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_funciones (fun_catalogo,
    fun_periodo,fun_codigo,desp_fun_catalogo,desp_fun_periodo,desp_fun_codigo,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,luego.fun_catalogo 
    ,luego.fun_periodo ,luego.fun_codigo ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_peva_funciones delete on "informix"
    .peva_funciones referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_funciones (fun_catalogo,
    fun_periodo,fun_codigo,desp_fun_catalogo,desp_fun_periodo,desp_fun_codigo,
    accion,usuario,hora)  values (antes.fun_catalogo ,antes.fun_periodo 
    ,antes.fun_codigo ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_peva_funciones update on "informix"
    .peva_funciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_funciones (fun_catalogo,
    fun_periodo,fun_codigo,desp_fun_catalogo,desp_fun_periodo,desp_fun_codigo,
    accion,usuario,hora)  values (antes.fun_catalogo ,antes.fun_periodo 
    ,antes.fun_codigo ,luego.fun_catalogo ,luego.fun_periodo ,luego.fun_codigo 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_peva_autentica insert on "informix"
    .peva_autentica referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_autentica (aut_catalogo,
    aut_periodo,aut_codigo,aut_cat,aut_grado,aut_puesto,aut_tiempo,desp_aut_catalogo,
    desp_aut_periodo,desp_aut_codigo,desp_aut_cat,desp_aut_grado,desp_aut_puesto,
    desp_aut_tiempo,accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL 
    ,NULL ,'' ,NULL ,luego.aut_catalogo ,luego.aut_periodo ,luego.aut_codigo 
    ,luego.aut_cat ,luego.aut_grado ,luego.aut_puesto ,luego.aut_tiempo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_peva_autentica delete on "informix"
    .peva_autentica referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_autentica (aut_catalogo,
    aut_periodo,aut_codigo,aut_cat,aut_grado,aut_puesto,aut_tiempo,desp_aut_catalogo,
    desp_aut_periodo,desp_aut_codigo,desp_aut_cat,desp_aut_grado,desp_aut_puesto,
    desp_aut_tiempo,accion,usuario,hora)  values (antes.aut_catalogo 
    ,antes.aut_periodo ,antes.aut_codigo ,antes.aut_cat ,antes.aut_grado 
    ,antes.aut_puesto ,antes.aut_tiempo ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_peva_autentica update on "informix"
    .peva_autentica referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_autentica (aut_catalogo,
    aut_periodo,aut_codigo,aut_cat,aut_grado,aut_puesto,aut_tiempo,desp_aut_catalogo,
    desp_aut_periodo,desp_aut_codigo,desp_aut_cat,desp_aut_grado,desp_aut_puesto,
    desp_aut_tiempo,accion,usuario,hora)  values (antes.aut_catalogo 
    ,antes.aut_periodo ,antes.aut_codigo ,antes.aut_cat ,antes.aut_grado 
    ,antes.aut_puesto ,antes.aut_tiempo ,luego.aut_catalogo ,luego.aut_periodo 
    ,luego.aut_codigo ,luego.aut_cat ,luego.aut_grado ,luego.aut_puesto 
    ,luego.aut_tiempo ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_larm_tip_sol insert on "informix"
    .larm_tip_sol referencing new as luego
    for each row
        (
        insert into "informix".aud_larm_tip_sol (tips_cod,tips_desc,
    desp_tips_cod,desp_tips_desc,accion,usuario,hora)  values (NULL ,
    '' ,luego.tips_cod ,luego.tips_desc ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_larm_tip_sol delete on "informix"
    .larm_tip_sol referencing old as antes
    for each row
        (
        insert into "informix".aud_larm_tip_sol (tips_cod,tips_desc,
    desp_tips_cod,desp_tips_desc,accion,usuario,hora)  values (antes.tips_cod 
    ,antes.tips_desc ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_larm_tip_sol update on "informix"
    .larm_tip_sol referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_larm_tip_sol (tips_cod,tips_desc,
    desp_tips_cod,desp_tips_desc,accion,usuario,hora)  values (antes.tips_cod 
    ,antes.tips_desc ,luego.tips_cod ,luego.tips_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_ceom_funcion insert on "informix"
    .ceom_funcion referencing new as luego
    for each row
        (
        insert into "informix".aud_ceom_funcion (func_meom,func_codigo,
    func_descripcion,func_estado,desp_func_meom,desp_func_codigo,desp_func_descripcion,
    desp_func_estado,accion,usuario,hora)  values ('' ,NULL ,'' ,NULL ,
    luego.func_meom ,luego.func_codigo ,luego.func_descripcion ,luego.func_estado 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ceom_funcion delete on "informix"
    .ceom_funcion referencing old as antes
    for each row
        (
        insert into "informix".aud_ceom_funcion (func_meom,func_codigo,
    func_descripcion,func_estado,desp_func_meom,desp_func_codigo,desp_func_descripcion,
    desp_func_estado,accion,usuario,hora)  values (antes.func_meom ,antes.func_codigo 
    ,antes.func_descripcion ,antes.func_estado ,'' ,NULL ,'' ,NULL ,'D' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ceom_funcion update on "informix"
    .ceom_funcion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ceom_funcion (func_meom,func_codigo,
    func_descripcion,func_estado,desp_func_meom,desp_func_codigo,desp_func_descripcion,
    desp_func_estado,accion,usuario,hora)  values (antes.func_meom ,antes.func_codigo 
    ,antes.func_descripcion ,antes.func_estado ,luego.func_meom ,luego.func_codigo 
    ,luego.func_descripcion ,luego.func_estado ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_peva_objetivos insert on "informix"
    .peva_objetivos referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_objetivos (obj_catalogo,
    obj_periodo,obj_codigo,obj_desc,desp_obj_catalogo,desp_obj_periodo,
    desp_obj_codigo,desp_obj_desc,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,'' ,luego.obj_catalogo ,luego.obj_periodo ,luego.obj_codigo 
    ,luego.obj_desc ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_peva_objetivos delete on "informix"
    .peva_objetivos referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_objetivos (obj_catalogo,
    obj_periodo,obj_codigo,obj_desc,desp_obj_catalogo,desp_obj_periodo,
    desp_obj_codigo,desp_obj_desc,accion,usuario,hora)  values (antes.obj_catalogo 
    ,antes.obj_periodo ,antes.obj_codigo ,antes.obj_desc ,NULL ,NULL 
    ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_peva_objetivos update on "informix"
    .peva_objetivos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_objetivos (obj_catalogo,
    obj_periodo,obj_codigo,obj_desc,desp_obj_catalogo,desp_obj_periodo,
    desp_obj_codigo,desp_obj_desc,accion,usuario,hora)  values (antes.obj_catalogo 
    ,antes.obj_periodo ,antes.obj_codigo ,antes.obj_desc ,luego.obj_catalogo 
    ,luego.obj_periodo ,luego.obj_codigo ,luego.obj_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_larm_buscerradas insert on "informix"
    .larm_buscerradas referencing new as luego
    for each row
        (
        insert into "informix".aud_larm_buscerradas (carm_cat,
    carm_tipo,carm_lote,carm_numero,carm_plaza,carm_sit,carm_fec_situ,
    carm_fecha,carm_usuario,desp_carm_cat,desp_carm_tipo,desp_carm_lote,
    desp_carm_numero,desp_carm_plaza,desp_carm_sit,desp_carm_fec_situ,
    desp_carm_fecha,desp_carm_usuario,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,'' ,NULL ,NULL ,'' ,'' ,NULL ,luego.carm_cat ,luego.carm_tipo 
    ,luego.carm_lote ,luego.carm_numero ,luego.carm_plaza ,luego.carm_sit 
    ,luego.carm_fec_situ ,luego.carm_fecha ,luego.carm_usuario ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_larm_buscerradas delete on "informix"
    .larm_buscerradas referencing old as antes
    for each row
        (
        insert into "informix".aud_larm_buscerradas (carm_cat,
    carm_tipo,carm_lote,carm_numero,carm_plaza,carm_sit,carm_fec_situ,
    carm_fecha,carm_usuario,desp_carm_cat,desp_carm_tipo,desp_carm_lote,
    desp_carm_numero,desp_carm_plaza,desp_carm_sit,desp_carm_fec_situ,
    desp_carm_fecha,desp_carm_usuario,accion,usuario,hora)  values (antes.carm_cat 
    ,antes.carm_tipo ,antes.carm_lote ,antes.carm_numero ,antes.carm_plaza 
    ,antes.carm_sit ,antes.carm_fec_situ ,antes.carm_fecha ,antes.carm_usuario 
    ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,'' ,'' ,NULL ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_larm_buscerradas update on "informix"
    .larm_buscerradas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_larm_buscerradas (carm_cat,
    carm_tipo,carm_lote,carm_numero,carm_plaza,carm_sit,carm_fec_situ,
    carm_fecha,carm_usuario,desp_carm_cat,desp_carm_tipo,desp_carm_lote,
    desp_carm_numero,desp_carm_plaza,desp_carm_sit,desp_carm_fec_situ,
    desp_carm_fecha,desp_carm_usuario,accion,usuario,hora)  values (antes.carm_cat 
    ,antes.carm_tipo ,antes.carm_lote ,antes.carm_numero ,antes.carm_plaza 
    ,antes.carm_sit ,antes.carm_fec_situ ,antes.carm_fecha ,antes.carm_usuario 
    ,luego.carm_cat ,luego.carm_tipo ,luego.carm_lote ,luego.carm_numero 
    ,luego.carm_plaza ,luego.carm_sit ,luego.carm_fec_situ ,luego.carm_fecha 
    ,luego.carm_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_larm_temp insert on "informix".larm_temp 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_larm_temp (tem_solicitud,tem_tipo,
    tem_lote,tem_numero,tem_plaza,tem_sit,tem_fec_situ,tem_usuario,desp_tem_solicitud,
    desp_tem_tipo,desp_tem_lote,desp_tem_numero,desp_tem_plaza,desp_tem_sit,
    desp_tem_fec_situ,desp_tem_usuario,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,'' ,NULL ,NULL ,'' ,NULL ,luego.tem_solicitud ,luego.tem_tipo 
    ,luego.tem_lote ,luego.tem_numero ,luego.tem_plaza ,luego.tem_sit 
    ,luego.tem_fec_situ ,luego.tem_usuario ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_larm_temp delete on "informix".larm_temp 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_larm_temp (tem_solicitud,tem_tipo,
    tem_lote,tem_numero,tem_plaza,tem_sit,tem_fec_situ,tem_usuario,desp_tem_solicitud,
    desp_tem_tipo,desp_tem_lote,desp_tem_numero,desp_tem_plaza,desp_tem_sit,
    desp_tem_fec_situ,desp_tem_usuario,accion,usuario,hora)  values (antes.tem_solicitud 
    ,antes.tem_tipo ,antes.tem_lote ,antes.tem_numero ,antes.tem_plaza 
    ,antes.tem_sit ,antes.tem_fec_situ ,antes.tem_usuario ,NULL ,NULL 
    ,NULL ,'' ,NULL ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_larm_temp update on "informix".larm_temp 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_larm_temp (tem_solicitud,tem_tipo,
    tem_lote,tem_numero,tem_plaza,tem_sit,tem_fec_situ,tem_usuario,desp_tem_solicitud,
    desp_tem_tipo,desp_tem_lote,desp_tem_numero,desp_tem_plaza,desp_tem_sit,
    desp_tem_fec_situ,desp_tem_usuario,accion,usuario,hora)  values (antes.tem_solicitud 
    ,antes.tem_tipo ,antes.tem_lote ,antes.tem_numero ,antes.tem_plaza 
    ,antes.tem_sit ,antes.tem_fec_situ ,antes.tem_usuario ,luego.tem_solicitud 
    ,luego.tem_tipo ,luego.tem_lote ,luego.tem_numero ,luego.tem_plaza 
    ,luego.tem_sit ,luego.tem_fec_situ ,luego.tem_usuario ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_uniformes insert on "informix".uniformes 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_uniformes (uni_codigo,uni_fuerza,
    uni_descrip,uni_gorra,desp_uni_codigo,desp_uni_fuerza,desp_uni_descrip,
    desp_uni_gorra,accion,usuario,hora)  values (NULL ,NULL ,'' ,NULL 
    ,luego.uni_codigo ,luego.uni_fuerza ,luego.uni_descrip ,luego.uni_gorra 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_uniformes delete on "informix".uniformes 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_uniformes (uni_codigo,uni_fuerza,
    uni_descrip,uni_gorra,desp_uni_codigo,desp_uni_fuerza,desp_uni_descrip,
    desp_uni_gorra,accion,usuario,hora)  values (antes.uni_codigo ,antes.uni_fuerza 
    ,antes.uni_descrip ,antes.uni_gorra ,NULL ,NULL ,'' ,NULL ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_uniformes update on "informix".uniformes 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_uniformes (uni_codigo,uni_fuerza,
    uni_descrip,uni_gorra,desp_uni_codigo,desp_uni_fuerza,desp_uni_descrip,
    desp_uni_gorra,accion,usuario,hora)  values (antes.uni_codigo ,antes.uni_fuerza 
    ,antes.uni_descrip ,antes.uni_gorra ,luego.uni_codigo ,luego.uni_fuerza 
    ,luego.uni_descrip ,luego.uni_gorra ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_detalle_solicitud insert on "informix"
    .detalle_solicitud referencing new as luego
    for each row
        (
        insert into "informix".aud_detalle_solicitud (det_solicitud,
    det_catalogo,det_grado,det_codigo_uni,det_talla_uni,det_talla_bota,
    det_talla_gorra,det_situacion,det_fecha,det_usuario,det_comprobante,
    desp_det_solicitud,desp_det_catalogo,desp_det_grado,desp_det_codigo_uni,
    desp_det_talla_uni,desp_det_talla_bota,desp_det_talla_gorra,desp_det_situacion,
    desp_det_fecha,desp_det_usuario,desp_det_comprobante,accion,usuario,
    hora)  values (NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,NULL ,'' ,NULL ,NULL 
    ,luego.det_solicitud ,luego.det_catalogo ,luego.det_grado ,luego.det_codigo_uni 
    ,luego.det_talla_uni ,luego.det_talla_bota ,luego.det_talla_gorra 
    ,luego.det_situacion ,luego.det_fecha ,luego.det_usuario ,luego.det_comprobante 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_detalle_solicitud delete on "informix"
    .detalle_solicitud referencing old as antes
    for each row
        (
        insert into "informix".aud_detalle_solicitud (det_solicitud,
    det_catalogo,det_grado,det_codigo_uni,det_talla_uni,det_talla_bota,
    det_talla_gorra,det_situacion,det_fecha,det_usuario,det_comprobante,
    desp_det_solicitud,desp_det_catalogo,desp_det_grado,desp_det_codigo_uni,
    desp_det_talla_uni,desp_det_talla_bota,desp_det_talla_gorra,desp_det_situacion,
    desp_det_fecha,desp_det_usuario,desp_det_comprobante,accion,usuario,
    hora)  values (antes.det_solicitud ,antes.det_catalogo ,antes.det_grado 
    ,antes.det_codigo_uni ,antes.det_talla_uni ,antes.det_talla_bota 
    ,antes.det_talla_gorra ,antes.det_situacion ,antes.det_fecha ,antes.det_usuario 
    ,antes.det_comprobante ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,NULL ,'' 
    ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_detalle_solicitud update on "informix"
    .detalle_solicitud referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_detalle_solicitud (det_solicitud,
    det_catalogo,det_grado,det_codigo_uni,det_talla_uni,det_talla_bota,
    det_talla_gorra,det_situacion,det_fecha,det_usuario,det_comprobante,
    desp_det_solicitud,desp_det_catalogo,desp_det_grado,desp_det_codigo_uni,
    desp_det_talla_uni,desp_det_talla_bota,desp_det_talla_gorra,desp_det_situacion,
    desp_det_fecha,desp_det_usuario,desp_det_comprobante,accion,usuario,
    hora)  values (antes.det_solicitud ,antes.det_catalogo ,antes.det_grado 
    ,antes.det_codigo_uni ,antes.det_talla_uni ,antes.det_talla_bota 
    ,antes.det_talla_gorra ,antes.det_situacion ,antes.det_fecha ,antes.det_usuario 
    ,antes.det_comprobante ,luego.det_solicitud ,luego.det_catalogo ,
    luego.det_grado ,luego.det_codigo_uni ,luego.det_talla_uni ,luego.det_talla_bota 
    ,luego.det_talla_gorra ,luego.det_situacion ,luego.det_fecha ,luego.det_usuario 
    ,luego.det_comprobante ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_larm_mov insert on "informix".larm_mov 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_larm_mov (mov_solicitud,mov_correla,
    mov_fecha,mov_docto,mov_termina,mov_usuario,desp_mov_solicitud,desp_mov_correla,
    desp_mov_fecha,desp_mov_docto,desp_mov_termina,desp_mov_usuario,accion,
    usuario,hora)  values (NULL ,NULL ,'' ,'' ,NULL ,NULL ,luego.mov_solicitud 
    ,luego.mov_correla ,luego.mov_fecha ,luego.mov_docto ,luego.mov_termina 
    ,luego.mov_usuario ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_larm_mov delete on "informix".larm_mov 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_larm_mov (mov_solicitud,mov_correla,
    mov_fecha,mov_docto,mov_termina,mov_usuario,desp_mov_solicitud,desp_mov_correla,
    desp_mov_fecha,desp_mov_docto,desp_mov_termina,desp_mov_usuario,accion,
    usuario,hora)  values (antes.mov_solicitud ,antes.mov_correla ,antes.mov_fecha 
    ,antes.mov_docto ,antes.mov_termina ,antes.mov_usuario ,NULL ,NULL 
    ,'' ,'' ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_larm_mov update on "informix".larm_mov 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_larm_mov (mov_solicitud,mov_correla,
    mov_fecha,mov_docto,mov_termina,mov_usuario,desp_mov_solicitud,desp_mov_correla,
    desp_mov_fecha,desp_mov_docto,desp_mov_termina,desp_mov_usuario,accion,
    usuario,hora)  values (antes.mov_solicitud ,antes.mov_correla ,antes.mov_fecha 
    ,antes.mov_docto ,antes.mov_termina ,antes.mov_usuario ,luego.mov_solicitud 
    ,luego.mov_correla ,luego.mov_fecha ,luego.mov_docto ,luego.mov_termina 
    ,luego.mov_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_solicitud_uniformes insert on "informix"
    .solicitud_uniformes referencing new as luego
    for each row
        (
        insert into "informix".aud_solicitud_uniformes (sol_numero,
    sol_mensaje,sol_fecha,sol_com_catalogo,sol_log_cat,sol_observaciones,
    sol_situacion,sol_dotac,sol_dependencia,sol_usuario,desp_sol_numero,
    desp_sol_mensaje,desp_sol_fecha,desp_sol_com_catalogo,desp_sol_log_cat,
    desp_sol_observaciones,desp_sol_situacion,desp_sol_dotac,desp_sol_dependencia,
    desp_sol_usuario,accion,usuario,hora)  values (NULL ,'' ,'' ,NULL ,
    NULL ,'' ,'' ,NULL ,NULL ,NULL ,luego.sol_numero ,luego.sol_mensaje 
    ,luego.sol_fecha ,luego.sol_com_catalogo ,luego.sol_log_cat ,luego.sol_observaciones 
    ,luego.sol_situacion ,luego.sol_dotac ,luego.sol_dependencia ,luego.sol_usuario 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_solicitud_uniformes delete on "informix"
    .solicitud_uniformes referencing old as antes
    for each row
        (
        insert into "informix".aud_solicitud_uniformes (sol_numero,
    sol_mensaje,sol_fecha,sol_com_catalogo,sol_log_cat,sol_observaciones,
    sol_situacion,sol_dotac,sol_dependencia,sol_usuario,desp_sol_numero,
    desp_sol_mensaje,desp_sol_fecha,desp_sol_com_catalogo,desp_sol_log_cat,
    desp_sol_observaciones,desp_sol_situacion,desp_sol_dotac,desp_sol_dependencia,
    desp_sol_usuario,accion,usuario,hora)  values (antes.sol_numero ,
    antes.sol_mensaje ,antes.sol_fecha ,antes.sol_com_catalogo ,antes.sol_log_cat 
    ,antes.sol_observaciones ,antes.sol_situacion ,antes.sol_dotac ,antes.sol_dependencia 
    ,antes.sol_usuario ,NULL ,'' ,'' ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,NULL 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_solicitud_uniformes update on "informix"
    .solicitud_uniformes referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_solicitud_uniformes (sol_numero,
    sol_mensaje,sol_fecha,sol_com_catalogo,sol_log_cat,sol_observaciones,
    sol_situacion,sol_dotac,sol_dependencia,sol_usuario,desp_sol_numero,
    desp_sol_mensaje,desp_sol_fecha,desp_sol_com_catalogo,desp_sol_log_cat,
    desp_sol_observaciones,desp_sol_situacion,desp_sol_dotac,desp_sol_dependencia,
    desp_sol_usuario,accion,usuario,hora)  values (antes.sol_numero ,
    antes.sol_mensaje ,antes.sol_fecha ,antes.sol_com_catalogo ,antes.sol_log_cat 
    ,antes.sol_observaciones ,antes.sol_situacion ,antes.sol_dotac ,antes.sol_dependencia 
    ,antes.sol_usuario ,luego.sol_numero ,luego.sol_mensaje ,luego.sol_fecha 
    ,luego.sol_com_catalogo ,luego.sol_log_cat ,luego.sol_observaciones 
    ,luego.sol_situacion ,luego.sol_dotac ,luego.sol_dependencia ,luego.sol_usuario 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_dep_ubicacion insert on "informix"
    .dep_ubicacion referencing new as luego
    for each row
        (
        insert into "informix".aud_dep_ubicacion (cod_dep,cod_dm,
    cod_fza,desp_cod_dep,desp_cod_dm,desp_cod_fza,accion,usuario,hora) 
     values (NULL ,'' ,'' ,luego.cod_dep ,luego.cod_dm ,luego.cod_fza ,
    'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dep_ubicacion delete on "informix"
    .dep_ubicacion referencing old as antes
    for each row
        (
        insert into "informix".aud_dep_ubicacion (cod_dep,cod_dm,
    cod_fza,desp_cod_dep,desp_cod_dm,desp_cod_fza,accion,usuario,hora) 
     values (antes.cod_dep ,antes.cod_dm ,antes.cod_fza ,NULL ,'' ,'' ,
    'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_dep_ubicacion update on "informix"
    .dep_ubicacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dep_ubicacion (cod_dep,cod_dm,
    cod_fza,desp_cod_dep,desp_cod_dm,desp_cod_fza,accion,usuario,hora) 
     values (antes.cod_dep ,antes.cod_dm ,antes.cod_fza ,luego.cod_dep 
    ,luego.cod_dm ,luego.cod_fza ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_det_consolicit insert on "informix"
    .det_consolicit referencing new as luego
    for each row
        (
        insert into "informix".aud_det_consolicit (con_solcod,
    con_catalogo,con_grado,con_condecoracion,con_solcodigo,con_solanio,
    con_fec_con,con_ord_gral,con_punto_og,con_reg_emdn,con_acta,con_obs,
    con_estado,desp_con_solcod,desp_con_catalogo,desp_con_grado,desp_con_condecoracion,
    desp_con_solcodigo,desp_con_solanio,desp_con_fec_con,desp_con_ord_gral,
    desp_con_punto_og,desp_con_reg_emdn,desp_con_acta,desp_con_obs,desp_con_estado,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,'' ,'' ,NULL ,'' ,'' ,'' ,NULL ,luego.con_solcod ,luego.con_catalogo 
    ,luego.con_grado ,luego.con_condecoracion ,luego.con_solcodigo ,luego.con_solanio 
    ,luego.con_fec_con ,luego.con_ord_gral ,luego.con_punto_og ,luego.con_reg_emdn 
    ,luego.con_acta ,luego.con_obs ,luego.con_estado ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_det_consolicit delete on "informix"
    .det_consolicit referencing old as antes
    for each row
        (
        insert into "informix".aud_det_consolicit (con_solcod,
    con_catalogo,con_grado,con_condecoracion,con_solcodigo,con_solanio,
    con_fec_con,con_ord_gral,con_punto_og,con_reg_emdn,con_acta,con_obs,
    con_estado,desp_con_solcod,desp_con_catalogo,desp_con_grado,desp_con_condecoracion,
    desp_con_solcodigo,desp_con_solanio,desp_con_fec_con,desp_con_ord_gral,
    desp_con_punto_og,desp_con_reg_emdn,desp_con_acta,desp_con_obs,desp_con_estado,
    accion,usuario,hora)  values (antes.con_solcod ,antes.con_catalogo 
    ,antes.con_grado ,antes.con_condecoracion ,antes.con_solcodigo ,antes.con_solanio 
    ,antes.con_fec_con ,antes.con_ord_gral ,antes.con_punto_og ,antes.con_reg_emdn 
    ,antes.con_acta ,antes.con_obs ,antes.con_estado ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,'' ,'' ,NULL ,'' ,'' ,'' ,NULL ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_det_consolicit update on "informix"
    .det_consolicit referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_det_consolicit (con_solcod,
    con_catalogo,con_grado,con_condecoracion,con_solcodigo,con_solanio,
    con_fec_con,con_ord_gral,con_punto_og,con_reg_emdn,con_acta,con_obs,
    con_estado,desp_con_solcod,desp_con_catalogo,desp_con_grado,desp_con_condecoracion,
    desp_con_solcodigo,desp_con_solanio,desp_con_fec_con,desp_con_ord_gral,
    desp_con_punto_og,desp_con_reg_emdn,desp_con_acta,desp_con_obs,desp_con_estado,
    accion,usuario,hora)  values (antes.con_solcod ,antes.con_catalogo 
    ,antes.con_grado ,antes.con_condecoracion ,antes.con_solcodigo ,antes.con_solanio 
    ,antes.con_fec_con ,antes.con_ord_gral ,antes.con_punto_og ,antes.con_reg_emdn 
    ,antes.con_acta ,antes.con_obs ,antes.con_estado ,luego.con_solcod 
    ,luego.con_catalogo ,luego.con_grado ,luego.con_condecoracion ,luego.con_solcodigo 
    ,luego.con_solanio ,luego.con_fec_con ,luego.con_ord_gral ,luego.con_punto_og 
    ,luego.con_reg_emdn ,luego.con_acta ,luego.con_obs ,luego.con_estado 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_cond update on "informix".cond referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_cond (con_codigo,con_desc_lg,
    con_clase,con_pais,con_creditos,con_tipo_fund,con_fundamento,desp_con_codigo,
    desp_con_desc_lg,desp_con_clase,desp_con_pais,desp_con_creditos,desp_con_tipo_fund,
    desp_con_fundamento,accion,usuario,hora)  values (antes.con_codigo 
    ,antes.con_desc_lg ,antes.con_clase ,antes.con_pais ,antes.con_creditos 
    ,antes.con_tipo_fund ,antes.con_fundamento ,luego.con_codigo ,luego.con_desc_lg 
    ,luego.con_clase ,luego.con_pais ,luego.con_creditos ,luego.con_tipo_fund 
    ,luego.con_fundamento ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_cond delete on "informix".cond referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_cond (con_codigo,con_desc_lg,
    con_clase,con_pais,con_creditos,con_tipo_fund,con_fundamento,desp_con_codigo,
    desp_con_desc_lg,desp_con_clase,desp_con_pais,desp_con_creditos,desp_con_tipo_fund,
    desp_con_fundamento,accion,usuario,hora)  values (antes.con_codigo 
    ,antes.con_desc_lg ,antes.con_clase ,antes.con_pais ,antes.con_creditos 
    ,antes.con_tipo_fund ,antes.con_fundamento ,NULL ,'' ,'' ,NULL ,NULL 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cond insert on "informix".cond referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_cond (con_codigo,con_desc_lg,
    con_clase,con_pais,con_creditos,con_tipo_fund,con_fundamento,desp_con_codigo,
    desp_con_desc_lg,desp_con_clase,desp_con_pais,desp_con_creditos,desp_con_tipo_fund,
    desp_con_fundamento,accion,usuario,hora)  values (NULL ,'' ,'' ,NULL 
    ,NULL ,'' ,'' ,luego.con_codigo ,luego.con_desc_lg ,luego.con_clase 
    ,luego.con_pais ,luego.con_creditos ,luego.con_tipo_fund ,luego.con_fundamento 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_dcon insert on "informix".dcon referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_dcon (con_catalogo,con_grado,
    con_condecoracion,con_solcodigo,con_solanio,con_fec_con,con_ord_gral,
    con_punto_og,con_reg_emdn,con_acta,con_obs,con_estado,desp_con_catalogo,
    desp_con_grado,desp_con_condecoracion,desp_con_solcodigo,desp_con_solanio,
    desp_con_fec_con,desp_con_ord_gral,desp_con_punto_og,desp_con_reg_emdn,
    desp_con_acta,desp_con_obs,desp_con_estado,accion,usuario,hora)  
    values (NULL ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,NULL ,'' ,'' ,'' ,NULL ,
    luego.con_catalogo ,luego.con_grado ,luego.con_condecoracion ,luego.con_solcodigo 
    ,luego.con_solanio ,luego.con_fec_con ,luego.con_ord_gral ,luego.con_punto_og 
    ,luego.con_reg_emdn ,luego.con_acta ,luego.con_obs ,luego.con_estado 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dcon delete on "informix".dcon referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_dcon (con_catalogo,con_grado,
    con_condecoracion,con_solcodigo,con_solanio,con_fec_con,con_ord_gral,
    con_punto_og,con_reg_emdn,con_acta,con_obs,con_estado,desp_con_catalogo,
    desp_con_grado,desp_con_condecoracion,desp_con_solcodigo,desp_con_solanio,
    desp_con_fec_con,desp_con_ord_gral,desp_con_punto_og,desp_con_reg_emdn,
    desp_con_acta,desp_con_obs,desp_con_estado,accion,usuario,hora)  
    values (antes.con_catalogo ,antes.con_grado ,antes.con_condecoracion 
    ,antes.con_solcodigo ,antes.con_solanio ,antes.con_fec_con ,antes.con_ord_gral 
    ,antes.con_punto_og ,antes.con_reg_emdn ,antes.con_acta ,antes.con_obs 
    ,antes.con_estado ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,NULL ,'' ,''
     ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_dcon update on "informix".dcon referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_dcon (con_catalogo,con_grado,
    con_condecoracion,con_solcodigo,con_solanio,con_fec_con,con_ord_gral,
    con_punto_og,con_reg_emdn,con_acta,con_obs,con_estado,desp_con_catalogo,
    desp_con_grado,desp_con_condecoracion,desp_con_solcodigo,desp_con_solanio,
    desp_con_fec_con,desp_con_ord_gral,desp_con_punto_og,desp_con_reg_emdn,
    desp_con_acta,desp_con_obs,desp_con_estado,accion,usuario,hora)  
    values (antes.con_catalogo ,antes.con_grado ,antes.con_condecoracion 
    ,antes.con_solcodigo ,antes.con_solanio ,antes.con_fec_con ,antes.con_ord_gral 
    ,antes.con_punto_og ,antes.con_reg_emdn ,antes.con_acta ,antes.con_obs 
    ,antes.con_estado ,luego.con_catalogo ,luego.con_grado ,luego.con_condecoracion 
    ,luego.con_solcodigo ,luego.con_solanio ,luego.con_fec_con ,luego.con_ord_gral 
    ,luego.con_punto_og ,luego.con_reg_emdn ,luego.con_acta ,luego.con_obs 
    ,luego.con_estado ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_eva_boleta insert on "informix".eva_boleta 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_eva_boleta (bol_cat_evaluado,
    bol_anio,bol_cat_evaluador,bol_ceom,bol_perfil,bol_pafe,bol_eva1,
    bol_eva2,bol_eva3,bol_eva4,bol_demeritos,bol_arrestos,bol_total_salud,
    bol_total_concep,bol_total,bol_accion_mot,bol_accion_correc,bol_cat_g1,
    bol_cat_comte,bol_obs,desp_bol_cat_evaluado,desp_bol_anio,desp_bol_cat_evaluador,
    desp_bol_ceom,desp_bol_perfil,desp_bol_pafe,desp_bol_eva1,desp_bol_eva2,
    desp_bol_eva3,desp_bol_eva4,desp_bol_demeritos,desp_bol_arrestos,
    desp_bol_total_salud,desp_bol_total_concep,desp_bol_total,desp_bol_accion_mot,
    desp_bol_accion_correc,desp_bol_cat_g1,desp_bol_cat_comte,desp_bol_obs,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,'' ,luego.bol_cat_evaluado ,luego.bol_anio ,luego.bol_cat_evaluador 
    ,luego.bol_ceom ,luego.bol_perfil ,luego.bol_pafe ,luego.bol_eva1 
    ,luego.bol_eva2 ,luego.bol_eva3 ,luego.bol_eva4 ,luego.bol_demeritos 
    ,luego.bol_arrestos ,luego.bol_total_salud ,luego.bol_total_concep 
    ,luego.bol_total ,luego.bol_accion_mot ,luego.bol_accion_correc ,
    luego.bol_cat_g1 ,luego.bol_cat_comte ,luego.bol_obs ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_eva_boleta delete on "informix".eva_boleta 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_eva_boleta (bol_cat_evaluado,
    bol_anio,bol_cat_evaluador,bol_ceom,bol_perfil,bol_pafe,bol_eva1,
    bol_eva2,bol_eva3,bol_eva4,bol_demeritos,bol_arrestos,bol_total_salud,
    bol_total_concep,bol_total,bol_accion_mot,bol_accion_correc,bol_cat_g1,
    bol_cat_comte,bol_obs,desp_bol_cat_evaluado,desp_bol_anio,desp_bol_cat_evaluador,
    desp_bol_ceom,desp_bol_perfil,desp_bol_pafe,desp_bol_eva1,desp_bol_eva2,
    desp_bol_eva3,desp_bol_eva4,desp_bol_demeritos,desp_bol_arrestos,
    desp_bol_total_salud,desp_bol_total_concep,desp_bol_total,desp_bol_accion_mot,
    desp_bol_accion_correc,desp_bol_cat_g1,desp_bol_cat_comte,desp_bol_obs,
    accion,usuario,hora)  values (antes.bol_cat_evaluado ,antes.bol_anio 
    ,antes.bol_cat_evaluador ,antes.bol_ceom ,antes.bol_perfil ,antes.bol_pafe 
    ,antes.bol_eva1 ,antes.bol_eva2 ,antes.bol_eva3 ,antes.bol_eva4 ,
    antes.bol_demeritos ,antes.bol_arrestos ,antes.bol_total_salud ,antes.bol_total_concep 
    ,antes.bol_total ,antes.bol_accion_mot ,antes.bol_accion_correc ,
    antes.bol_cat_g1 ,antes.bol_cat_comte ,antes.bol_obs ,NULL ,NULL 
    ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_eva_boleta update on "informix".eva_boleta 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eva_boleta (bol_cat_evaluado,
    bol_anio,bol_cat_evaluador,bol_ceom,bol_perfil,bol_pafe,bol_eva1,
    bol_eva2,bol_eva3,bol_eva4,bol_demeritos,bol_arrestos,bol_total_salud,
    bol_total_concep,bol_total,bol_accion_mot,bol_accion_correc,bol_cat_g1,
    bol_cat_comte,bol_obs,desp_bol_cat_evaluado,desp_bol_anio,desp_bol_cat_evaluador,
    desp_bol_ceom,desp_bol_perfil,desp_bol_pafe,desp_bol_eva1,desp_bol_eva2,
    desp_bol_eva3,desp_bol_eva4,desp_bol_demeritos,desp_bol_arrestos,
    desp_bol_total_salud,desp_bol_total_concep,desp_bol_total,desp_bol_accion_mot,
    desp_bol_accion_correc,desp_bol_cat_g1,desp_bol_cat_comte,desp_bol_obs,
    accion,usuario,hora)  values (antes.bol_cat_evaluado ,antes.bol_anio 
    ,antes.bol_cat_evaluador ,antes.bol_ceom ,antes.bol_perfil ,antes.bol_pafe 
    ,antes.bol_eva1 ,antes.bol_eva2 ,antes.bol_eva3 ,antes.bol_eva4 ,
    antes.bol_demeritos ,antes.bol_arrestos ,antes.bol_total_salud ,antes.bol_total_concep 
    ,antes.bol_total ,antes.bol_accion_mot ,antes.bol_accion_correc ,
    antes.bol_cat_g1 ,antes.bol_cat_comte ,antes.bol_obs ,luego.bol_cat_evaluado 
    ,luego.bol_anio ,luego.bol_cat_evaluador ,luego.bol_ceom ,luego.bol_perfil 
    ,luego.bol_pafe ,luego.bol_eva1 ,luego.bol_eva2 ,luego.bol_eva3 ,
    luego.bol_eva4 ,luego.bol_demeritos ,luego.bol_arrestos ,luego.bol_total_salud 
    ,luego.bol_total_concep ,luego.bol_total ,luego.bol_accion_mot ,luego.bol_accion_correc 
    ,luego.bol_cat_g1 ,luego.bol_cat_comte ,luego.bol_obs ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_bol_det_meritos insert on "informix"
    .bol_det_meritos referencing new as luego
    for each row
        (
        insert into "informix".aud_bol_det_meritos (detm_evaluado,
    detm_anio,detm_codigo,desp_detm_evaluado,desp_detm_anio,desp_detm_codigo,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,luego.detm_evaluado 
    ,luego.detm_anio ,luego.detm_codigo ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_bol_det_meritos delete on "informix"
    .bol_det_meritos referencing old as antes
    for each row
        (
        insert into "informix".aud_bol_det_meritos (detm_evaluado,
    detm_anio,detm_codigo,desp_detm_evaluado,desp_detm_anio,desp_detm_codigo,
    accion,usuario,hora)  values (antes.detm_evaluado ,antes.detm_anio 
    ,antes.detm_codigo ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_bol_det_meritos update on "informix"
    .bol_det_meritos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bol_det_meritos (detm_evaluado,
    detm_anio,detm_codigo,desp_detm_evaluado,desp_detm_anio,desp_detm_codigo,
    accion,usuario,hora)  values (antes.detm_evaluado ,antes.detm_anio 
    ,antes.detm_codigo ,luego.detm_evaluado ,luego.detm_anio ,luego.detm_codigo 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_bol_det_concep insert on "informix"
    .bol_det_concep referencing new as luego
    for each row
        (
        insert into "informix".aud_bol_det_concep (detc_evaluado,
    detc_anio,detc_pregunta,detc_nota,desp_detc_evaluado,desp_detc_anio,
    desp_detc_pregunta,desp_detc_nota,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,NULL ,luego.detc_evaluado ,luego.detc_anio ,luego.detc_pregunta 
    ,luego.detc_nota ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_bol_det_concep delete on "informix"
    .bol_det_concep referencing old as antes
    for each row
        (
        insert into "informix".aud_bol_det_concep (detc_evaluado,
    detc_anio,detc_pregunta,detc_nota,desp_detc_evaluado,desp_detc_anio,
    desp_detc_pregunta,desp_detc_nota,accion,usuario,hora)  values (antes.detc_evaluado 
    ,antes.detc_anio ,antes.detc_pregunta ,antes.detc_nota ,NULL ,NULL 
    ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_bol_det_concep update on "informix"
    .bol_det_concep referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bol_det_concep (detc_evaluado,
    detc_anio,detc_pregunta,detc_nota,desp_detc_evaluado,desp_detc_anio,
    desp_detc_pregunta,desp_detc_nota,accion,usuario,hora)  values (antes.detc_evaluado 
    ,antes.detc_anio ,antes.detc_pregunta ,antes.detc_nota ,luego.detc_evaluado 
    ,luego.detc_anio ,luego.detc_pregunta ,luego.detc_nota ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_acc_motivadora insert on "informix"
    .acc_motivadora referencing new as luego
    for each row
        (
        insert into "informix".aud_acc_motivadora (mot_codigo,
    mot_accion,mot_descripcion,desp_mot_codigo,desp_mot_accion,desp_mot_descripcion,
    accion,usuario,hora)  values (NULL ,NULL ,'' ,luego.mot_codigo ,luego.mot_accion 
    ,luego.mot_descripcion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_acc_motivadora delete on "informix"
    .acc_motivadora referencing old as antes
    for each row
        (
        insert into "informix".aud_acc_motivadora (mot_codigo,
    mot_accion,mot_descripcion,desp_mot_codigo,desp_mot_accion,desp_mot_descripcion,
    accion,usuario,hora)  values (antes.mot_codigo ,antes.mot_accion 
    ,antes.mot_descripcion ,NULL ,NULL ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_acc_motivadora update on "informix"
    .acc_motivadora referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_acc_motivadora (mot_codigo,
    mot_accion,mot_descripcion,desp_mot_codigo,desp_mot_accion,desp_mot_descripcion,
    accion,usuario,hora)  values (antes.mot_codigo ,antes.mot_accion 
    ,antes.mot_descripcion ,luego.mot_codigo ,luego.mot_accion ,luego.mot_descripcion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_eva_meritos insert on "informix"
    .eva_meritos referencing new as luego
    for each row
        (
        insert into "informix".aud_eva_meritos (mer_codigo,mer_descripcion,
    mer_nota,desp_mer_codigo,desp_mer_descripcion,desp_mer_nota,accion,
    usuario,hora)  values (NULL ,'' ,NULL ,luego.mer_codigo ,luego.mer_descripcion 
    ,luego.mer_nota ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_eva_meritos delete on "informix"
    .eva_meritos referencing old as antes
    for each row
        (
        insert into "informix".aud_eva_meritos (mer_codigo,mer_descripcion,
    mer_nota,desp_mer_codigo,desp_mer_descripcion,desp_mer_nota,accion,
    usuario,hora)  values (antes.mer_codigo ,antes.mer_descripcion ,antes.mer_nota 
    ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_eva_meritos update on "informix"
    .eva_meritos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eva_meritos (mer_codigo,mer_descripcion,
    mer_nota,desp_mer_codigo,desp_mer_descripcion,desp_mer_nota,accion,
    usuario,hora)  values (antes.mer_codigo ,antes.mer_descripcion ,antes.mer_nota 
    ,luego.mer_codigo ,luego.mer_descripcion ,luego.mer_nota ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_eva_preguntas insert on "informix"
    .eva_preguntas referencing new as luego
    for each row
        (
        insert into "informix".aud_eva_preguntas (pre_codigo,
    pre_descripcion,pre_proyeccion,desp_pre_codigo,desp_pre_descripcion,
    desp_pre_proyeccion,accion,usuario,hora)  values (NULL ,'' ,NULL ,
    luego.pre_codigo ,luego.pre_descripcion ,luego.pre_proyeccion ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_eva_preguntas delete on "informix"
    .eva_preguntas referencing old as antes
    for each row
        (
        insert into "informix".aud_eva_preguntas (pre_codigo,
    pre_descripcion,pre_proyeccion,desp_pre_codigo,desp_pre_descripcion,
    desp_pre_proyeccion,accion,usuario,hora)  values (antes.pre_codigo 
    ,antes.pre_descripcion ,antes.pre_proyeccion ,NULL ,'' ,NULL ,'D' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_eva_preguntas update on "informix"
    .eva_preguntas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eva_preguntas (pre_codigo,
    pre_descripcion,pre_proyeccion,desp_pre_codigo,desp_pre_descripcion,
    desp_pre_proyeccion,accion,usuario,hora)  values (antes.pre_codigo 
    ,antes.pre_descripcion ,antes.pre_proyeccion ,luego.pre_codigo ,luego.pre_descripcion 
    ,luego.pre_proyeccion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_eva_datos insert on "informix".eva_datos 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_eva_datos (dat_cat_evaluado,
    dat_anio,dat_grado,dat_depen,dat_puesto,dat_tiempo,dat_grado_eva,
    dat_arma_eva,dat_puesto_eva,dat_tiempo_eva,desp_dat_cat_evaluado,
    desp_dat_anio,desp_dat_grado,desp_dat_depen,desp_dat_puesto,desp_dat_tiempo,
    desp_dat_grado_eva,desp_dat_arma_eva,desp_dat_puesto_eva,desp_dat_tiempo_eva,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL 
    ,NULL ,'' ,NULL ,luego.dat_cat_evaluado ,luego.dat_anio ,luego.dat_grado 
    ,luego.dat_depen ,luego.dat_puesto ,luego.dat_tiempo ,luego.dat_grado_eva 
    ,luego.dat_arma_eva ,luego.dat_puesto_eva ,luego.dat_tiempo_eva ,
    'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_eva_datos delete on "informix".eva_datos 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_eva_datos (dat_cat_evaluado,
    dat_anio,dat_grado,dat_depen,dat_puesto,dat_tiempo,dat_grado_eva,
    dat_arma_eva,dat_puesto_eva,dat_tiempo_eva,desp_dat_cat_evaluado,
    desp_dat_anio,desp_dat_grado,desp_dat_depen,desp_dat_puesto,desp_dat_tiempo,
    desp_dat_grado_eva,desp_dat_arma_eva,desp_dat_puesto_eva,desp_dat_tiempo_eva,
    accion,usuario,hora)  values (antes.dat_cat_evaluado ,antes.dat_anio 
    ,antes.dat_grado ,antes.dat_depen ,antes.dat_puesto ,antes.dat_tiempo 
    ,antes.dat_grado_eva ,antes.dat_arma_eva ,antes.dat_puesto_eva ,antes.dat_tiempo_eva 
    ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL ,'' ,NULL ,'D' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".act_eva_datos update on "informix".eva_datos 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eva_datos (dat_cat_evaluado,
    dat_anio,dat_grado,dat_depen,dat_puesto,dat_tiempo,dat_grado_eva,
    dat_arma_eva,dat_puesto_eva,dat_tiempo_eva,desp_dat_cat_evaluado,
    desp_dat_anio,desp_dat_grado,desp_dat_depen,desp_dat_puesto,desp_dat_tiempo,
    desp_dat_grado_eva,desp_dat_arma_eva,desp_dat_puesto_eva,desp_dat_tiempo_eva,
    accion,usuario,hora)  values (antes.dat_cat_evaluado ,antes.dat_anio 
    ,antes.dat_grado ,antes.dat_depen ,antes.dat_puesto ,antes.dat_tiempo 
    ,antes.dat_grado_eva ,antes.dat_arma_eva ,antes.dat_puesto_eva ,antes.dat_tiempo_eva 
    ,luego.dat_cat_evaluado ,luego.dat_anio ,luego.dat_grado ,luego.dat_depen 
    ,luego.dat_puesto ,luego.dat_tiempo ,luego.dat_grado_eva ,luego.dat_arma_eva 
    ,luego.dat_puesto_eva ,luego.dat_tiempo_eva ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_eva_certifica insert on "informix"
    .eva_certifica referencing new as luego
    for each row
        (
        insert into "informix".aud_eva_certifica (cer_evaluado,
    cer_anio,cer_certificador,cer_status,cer_fecha,cer_obs,desp_cer_evaluado,
    desp_cer_anio,desp_cer_certificador,desp_cer_status,desp_cer_fecha,
    desp_cer_obs,accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL 
    ,'' ,'' ,luego.cer_evaluado ,luego.cer_anio ,luego.cer_certificador 
    ,luego.cer_status ,luego.cer_fecha ,luego.cer_obs ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_eva_certifica delete on "informix"
    .eva_certifica referencing old as antes
    for each row
        (
        insert into "informix".aud_eva_certifica (cer_evaluado,
    cer_anio,cer_certificador,cer_status,cer_fecha,cer_obs,desp_cer_evaluado,
    desp_cer_anio,desp_cer_certificador,desp_cer_status,desp_cer_fecha,
    desp_cer_obs,accion,usuario,hora)  values (antes.cer_evaluado ,antes.cer_anio 
    ,antes.cer_certificador ,antes.cer_status ,antes.cer_fecha ,antes.cer_obs 
    ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_eva_certifica update on "informix"
    .eva_certifica referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eva_certifica (cer_evaluado,
    cer_anio,cer_certificador,cer_status,cer_fecha,cer_obs,desp_cer_evaluado,
    desp_cer_anio,desp_cer_certificador,desp_cer_status,desp_cer_fecha,
    desp_cer_obs,accion,usuario,hora)  values (antes.cer_evaluado ,antes.cer_anio 
    ,antes.cer_certificador ,antes.cer_status ,antes.cer_fecha ,antes.cer_obs 
    ,luego.cer_evaluado ,luego.cer_anio ,luego.cer_certificador ,luego.cer_status 
    ,luego.cer_fecha ,luego.cer_obs ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_rnb_casco insert on "informix".rnb_casco 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_casco (cas_codigo,cas_desc_lg,
    cas_desc_ct,desp_cas_codigo,desp_cas_desc_lg,desp_cas_desc_ct,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.cas_codigo ,luego.cas_desc_lg 
    ,luego.cas_desc_ct ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_rnb_casco delete on "informix".rnb_casco 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_casco (cas_codigo,cas_desc_lg,
    cas_desc_ct,desp_cas_codigo,desp_cas_desc_lg,desp_cas_desc_ct,accion,
    usuario,hora)  values (antes.cas_codigo ,antes.cas_desc_lg ,antes.cas_desc_ct 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_rnb_casco update on "informix".rnb_casco 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_casco (cas_codigo,cas_desc_lg,
    cas_desc_ct,desp_cas_codigo,desp_cas_desc_lg,desp_cas_desc_ct,accion,
    usuario,hora)  values (antes.cas_codigo ,antes.cas_desc_lg ,antes.cas_desc_ct 
    ,luego.cas_codigo ,luego.cas_desc_lg ,luego.cas_desc_ct ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_rnb_motor insert on "informix".rnb_motor 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_motor (mot_codigo,mot_embarcacion,
    mot_serie,mot_marca,mot_hp,mot_fueraborda,desp_mot_codigo,desp_mot_embarcacion,
    desp_mot_serie,desp_mot_marca,desp_mot_hp,desp_mot_fueraborda,accion,
    usuario,hora)  values (NULL ,NULL ,'' ,'' ,NULL ,NULL ,luego.mot_codigo 
    ,luego.mot_embarcacion ,luego.mot_serie ,luego.mot_marca ,luego.mot_hp 
    ,luego.mot_fueraborda ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_rnb_motor delete on "informix".rnb_motor 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_motor (mot_codigo,mot_embarcacion,
    mot_serie,mot_marca,mot_hp,mot_fueraborda,desp_mot_codigo,desp_mot_embarcacion,
    desp_mot_serie,desp_mot_marca,desp_mot_hp,desp_mot_fueraborda,accion,
    usuario,hora)  values (antes.mot_codigo ,antes.mot_embarcacion ,antes.mot_serie 
    ,antes.mot_marca ,antes.mot_hp ,antes.mot_fueraborda ,NULL ,NULL 
    ,'' ,'' ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_rnb_motor update on "informix".rnb_motor 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_motor (mot_codigo,mot_embarcacion,
    mot_serie,mot_marca,mot_hp,mot_fueraborda,desp_mot_codigo,desp_mot_embarcacion,
    desp_mot_serie,desp_mot_marca,desp_mot_hp,desp_mot_fueraborda,accion,
    usuario,hora)  values (antes.mot_codigo ,antes.mot_embarcacion ,antes.mot_serie 
    ,antes.mot_marca ,antes.mot_hp ,antes.mot_fueraborda ,luego.mot_codigo 
    ,luego.mot_embarcacion ,luego.mot_serie ,luego.mot_marca ,luego.mot_hp 
    ,luego.mot_fueraborda ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_rnb_marca insert on "informix".rnb_marca 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_marca (mar_codigo,mar_desc_lg,
    mar_desc_ct,desp_mar_codigo,desp_mar_desc_lg,desp_mar_desc_ct,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.mar_codigo ,luego.mar_desc_lg 
    ,luego.mar_desc_ct ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_rnb_marca delete on "informix".rnb_marca 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_marca (mar_codigo,mar_desc_lg,
    mar_desc_ct,desp_mar_codigo,desp_mar_desc_lg,desp_mar_desc_ct,accion,
    usuario,hora)  values (antes.mar_codigo ,antes.mar_desc_lg ,antes.mar_desc_ct 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_rnb_marca update on "informix".rnb_marca 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_marca (mar_codigo,mar_desc_lg,
    mar_desc_ct,desp_mar_codigo,desp_mar_desc_lg,desp_mar_desc_ct,accion,
    usuario,hora)  values (antes.mar_codigo ,antes.mar_desc_lg ,antes.mar_desc_ct 
    ,luego.mar_codigo ,luego.mar_desc_lg ,luego.mar_desc_ct ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_rnb_modificacion insert on "informix"
    .rnb_modificacion referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_modificacion (mod_codigo,
    mod_embarcacion,mod_modificacion,mod_fecha,mod_quien,mod_autoriza,
    desp_mod_codigo,desp_mod_embarcacion,desp_mod_modificacion,desp_mod_fecha,
    desp_mod_quien,desp_mod_autoriza,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,'' ,NULL ,NULL ,luego.mod_codigo ,luego.mod_embarcacion 
    ,luego.mod_modificacion ,luego.mod_fecha ,luego.mod_quien ,luego.mod_autoriza 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_rnb_modificacion delete on "informix"
    .rnb_modificacion referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_modificacion (mod_codigo,
    mod_embarcacion,mod_modificacion,mod_fecha,mod_quien,mod_autoriza,
    desp_mod_codigo,desp_mod_embarcacion,desp_mod_modificacion,desp_mod_fecha,
    desp_mod_quien,desp_mod_autoriza,accion,usuario,hora)  values (antes.mod_codigo 
    ,antes.mod_embarcacion ,antes.mod_modificacion ,antes.mod_fecha ,
    antes.mod_quien ,antes.mod_autoriza ,NULL ,NULL ,NULL ,'' ,NULL ,NULL 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_rnb_modificacion update on "informix"
    .rnb_modificacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_modificacion (mod_codigo,
    mod_embarcacion,mod_modificacion,mod_fecha,mod_quien,mod_autoriza,
    desp_mod_codigo,desp_mod_embarcacion,desp_mod_modificacion,desp_mod_fecha,
    desp_mod_quien,desp_mod_autoriza,accion,usuario,hora)  values (antes.mod_codigo 
    ,antes.mod_embarcacion ,antes.mod_modificacion ,antes.mod_fecha ,
    antes.mod_quien ,antes.mod_autoriza ,luego.mod_codigo ,luego.mod_embarcacion 
    ,luego.mod_modificacion ,luego.mod_fecha ,luego.mod_quien ,luego.mod_autoriza 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_rnb_impuesto insert on "informix"
    .rnb_impuesto referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_impuesto (imp_codigo,imp_embarcacion,
    imp_circulacion,imp_form_sat,imp_fecha,desp_imp_codigo,desp_imp_embarcacion,
    desp_imp_circulacion,desp_imp_form_sat,desp_imp_fecha,accion,usuario,
    hora)  values (NULL ,NULL ,NULL ,'' ,'' ,luego.imp_codigo ,luego.imp_embarcacion 
    ,luego.imp_circulacion ,luego.imp_form_sat ,luego.imp_fecha ,'I' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_rnb_impuesto delete on "informix"
    .rnb_impuesto referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_impuesto (imp_codigo,imp_embarcacion,
    imp_circulacion,imp_form_sat,imp_fecha,desp_imp_codigo,desp_imp_embarcacion,
    desp_imp_circulacion,desp_imp_form_sat,desp_imp_fecha,accion,usuario,
    hora)  values (antes.imp_codigo ,antes.imp_embarcacion ,antes.imp_circulacion 
    ,antes.imp_form_sat ,antes.imp_fecha ,NULL ,NULL ,NULL ,'' ,'' ,'D' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_rnb_impuesto update on "informix"
    .rnb_impuesto referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_impuesto (imp_codigo,imp_embarcacion,
    imp_circulacion,imp_form_sat,imp_fecha,desp_imp_codigo,desp_imp_embarcacion,
    desp_imp_circulacion,desp_imp_form_sat,desp_imp_fecha,accion,usuario,
    hora)  values (antes.imp_codigo ,antes.imp_embarcacion ,antes.imp_circulacion 
    ,antes.imp_form_sat ,antes.imp_fecha ,luego.imp_codigo ,luego.imp_embarcacion 
    ,luego.imp_circulacion ,luego.imp_form_sat ,luego.imp_fecha ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_rnb_tipo_emb insert on "informix"
    .rnb_tipo_emb referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_tipo_emb (tip_codigo,tip_desc_lg,
    tip_desc_ct,desp_tip_codigo,desp_tip_desc_lg,desp_tip_desc_ct,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.tip_codigo ,luego.tip_desc_lg 
    ,luego.tip_desc_ct ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_rnb_tipo_emb delete on "informix"
    .rnb_tipo_emb referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_tipo_emb (tip_codigo,tip_desc_lg,
    tip_desc_ct,desp_tip_codigo,desp_tip_desc_lg,desp_tip_desc_ct,accion,
    usuario,hora)  values (antes.tip_codigo ,antes.tip_desc_lg ,antes.tip_desc_ct 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_rnb_tipo_emb update on "informix"
    .rnb_tipo_emb referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_tipo_emb (tip_codigo,tip_desc_lg,
    tip_desc_ct,desp_tip_codigo,desp_tip_desc_lg,desp_tip_desc_ct,accion,
    usuario,hora)  values (antes.tip_codigo ,antes.tip_desc_lg ,antes.tip_desc_ct 
    ,luego.tip_codigo ,luego.tip_desc_lg ,luego.tip_desc_ct ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_rnb_propietario insert on "informix"
    .rnb_propietario referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_propietario (pro_nit,pro_nom1,
    pro_nom2,pro_ape1,pro_ape2,pro_ape3,pro_dpi,pro_cedula,pro_direccion,
    pro_dep_mun,pro_pais,pro_telefono,pro_celular,pro_email,pro_tipo,
    desp_pro_nit,desp_pro_nom1,desp_pro_nom2,desp_pro_ape1,desp_pro_ape2,
    desp_pro_ape3,desp_pro_dpi,desp_pro_cedula,desp_pro_direccion,desp_pro_dep_mun,
    desp_pro_pais,desp_pro_telefono,desp_pro_celular,desp_pro_email,desp_pro_tipo,
    accion,usuario,hora)  values ('' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL 
    ,'' ,'' ,'' ,NULL ,luego.pro_nit ,luego.pro_nom1 ,luego.pro_nom2 ,luego.pro_ape1 
    ,luego.pro_ape2 ,luego.pro_ape3 ,luego.pro_dpi ,luego.pro_cedula 
    ,luego.pro_direccion ,luego.pro_dep_mun ,luego.pro_pais ,luego.pro_telefono 
    ,luego.pro_celular ,luego.pro_email ,luego.pro_tipo ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_rnb_propietario delete on "informix"
    .rnb_propietario referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_propietario (pro_nit,pro_nom1,
    pro_nom2,pro_ape1,pro_ape2,pro_ape3,pro_dpi,pro_cedula,pro_direccion,
    pro_dep_mun,pro_pais,pro_telefono,pro_celular,pro_email,pro_tipo,
    desp_pro_nit,desp_pro_nom1,desp_pro_nom2,desp_pro_ape1,desp_pro_ape2,
    desp_pro_ape3,desp_pro_dpi,desp_pro_cedula,desp_pro_direccion,desp_pro_dep_mun,
    desp_pro_pais,desp_pro_telefono,desp_pro_celular,desp_pro_email,desp_pro_tipo,
    accion,usuario,hora)  values (antes.pro_nit ,antes.pro_nom1 ,antes.pro_nom2 
    ,antes.pro_ape1 ,antes.pro_ape2 ,antes.pro_ape3 ,antes.pro_dpi ,antes.pro_cedula 
    ,antes.pro_direccion ,antes.pro_dep_mun ,antes.pro_pais ,antes.pro_telefono 
    ,antes.pro_celular ,antes.pro_email ,antes.pro_tipo ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,NULL ,'' ,'' ,'' ,NULL ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_rnb_propietario update on "informix"
    .rnb_propietario referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_propietario (pro_nit,pro_nom1,
    pro_nom2,pro_ape1,pro_ape2,pro_ape3,pro_dpi,pro_cedula,pro_direccion,
    pro_dep_mun,pro_pais,pro_telefono,pro_celular,pro_email,pro_tipo,
    desp_pro_nit,desp_pro_nom1,desp_pro_nom2,desp_pro_ape1,desp_pro_ape2,
    desp_pro_ape3,desp_pro_dpi,desp_pro_cedula,desp_pro_direccion,desp_pro_dep_mun,
    desp_pro_pais,desp_pro_telefono,desp_pro_celular,desp_pro_email,desp_pro_tipo,
    accion,usuario,hora)  values (antes.pro_nit ,antes.pro_nom1 ,antes.pro_nom2 
    ,antes.pro_ape1 ,antes.pro_ape2 ,antes.pro_ape3 ,antes.pro_dpi ,antes.pro_cedula 
    ,antes.pro_direccion ,antes.pro_dep_mun ,antes.pro_pais ,antes.pro_telefono 
    ,antes.pro_celular ,antes.pro_email ,antes.pro_tipo ,luego.pro_nit 
    ,luego.pro_nom1 ,luego.pro_nom2 ,luego.pro_ape1 ,luego.pro_ape2 ,
    luego.pro_ape3 ,luego.pro_dpi ,luego.pro_cedula ,luego.pro_direccion 
    ,luego.pro_dep_mun ,luego.pro_pais ,luego.pro_telefono ,luego.pro_celular 
    ,luego.pro_email ,luego.pro_tipo ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_rnb_color insert on "informix".rnb_color 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_color (col_codigo,col_embarcacion,
    col_color,col_descr,desp_col_codigo,desp_col_embarcacion,desp_col_color,
    desp_col_descr,accion,usuario,hora)  values (NULL ,NULL ,'' ,'' ,luego.col_codigo 
    ,luego.col_embarcacion ,luego.col_color ,luego.col_descr ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_rnb_color delete on "informix".rnb_color 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_color (col_codigo,col_embarcacion,
    col_color,col_descr,desp_col_codigo,desp_col_embarcacion,desp_col_color,
    desp_col_descr,accion,usuario,hora)  values (antes.col_codigo ,antes.col_embarcacion 
    ,antes.col_color ,antes.col_descr ,NULL ,NULL ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_rnb_color update on "informix".rnb_color 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_color (col_codigo,col_embarcacion,
    col_color,col_descr,desp_col_codigo,desp_col_embarcacion,desp_col_color,
    desp_col_descr,accion,usuario,hora)  values (antes.col_codigo ,antes.col_embarcacion 
    ,antes.col_color ,antes.col_descr ,luego.col_codigo ,luego.col_embarcacion 
    ,luego.col_color ,luego.col_descr ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_rnb_embarcacion insert on "informix"
    .rnb_embarcacion referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_embarcacion (emb_codigo,
    emb_nombre,emb_propietario,emb_rep_legal,emb_dir_repleg,emb_tel_repleg,
    emb_matricula,emb_tipo,emb_ind_llama,emb_imo,emb_num_construc,emb_lug_constr,
    emb_marca,emb_tripulantes,emb_operador,emb_eslora,emb_manga,emb_puntal,
    emb_calado,emb_desplaza,emb_mat_casco,emb_pasajeros,emb_ton_neto,
    emb_ton_bruto,emb_cap_carga,emb_cap_gas,emb_cap_agua,emb_freq_radio,
    emb_freq_trab,emb_autorizada,emb_lugar_op,emb_grav_desc,emb_chalecos,
    emb_balsas,emb_botiquin,emb_ext_co2,emb_ext_quim,emb_sist_incen,emb_obs,
    emb_desc_color,emb_desc_motor,emb_desc_hp,emb_desc_mot_serie,desp_emb_codigo,
    desp_emb_nombre,desp_emb_propietario,desp_emb_rep_legal,desp_emb_dir_repleg,
    desp_emb_tel_repleg,desp_emb_matricula,desp_emb_tipo,desp_emb_ind_llama,
    desp_emb_imo,desp_emb_num_construc,desp_emb_lug_constr,desp_emb_marca,
    desp_emb_tripulantes,desp_emb_operador,desp_emb_eslora,desp_emb_manga,
    desp_emb_puntal,desp_emb_calado,desp_emb_desplaza,desp_emb_mat_casco,
    desp_emb_pasajeros,desp_emb_ton_neto,desp_emb_ton_bruto,desp_emb_cap_carga,
    desp_emb_cap_gas,desp_emb_cap_agua,desp_emb_freq_radio,desp_emb_freq_trab,
    desp_emb_autorizada,desp_emb_lugar_op,desp_emb_grav_desc,desp_emb_chalecos,
    desp_emb_balsas,desp_emb_botiquin,desp_emb_ext_co2,desp_emb_ext_quim,
    desp_emb_sist_incen,desp_emb_obs,desp_emb_desc_color,desp_emb_desc_motor,
    desp_emb_desc_hp,desp_emb_desc_mot_serie,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,'' ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,''
     ,luego.emb_codigo ,luego.emb_nombre ,luego.emb_propietario ,luego.emb_rep_legal 
    ,luego.emb_dir_repleg ,luego.emb_tel_repleg ,luego.emb_matricula 
    ,luego.emb_tipo ,luego.emb_ind_llama ,luego.emb_imo ,luego.emb_num_construc 
    ,luego.emb_lug_constr ,luego.emb_marca ,luego.emb_tripulantes ,luego.emb_operador 
    ,luego.emb_eslora ,luego.emb_manga ,luego.emb_puntal ,luego.emb_calado 
    ,luego.emb_desplaza ,luego.emb_mat_casco ,luego.emb_pasajeros ,luego.emb_ton_neto 
    ,luego.emb_ton_bruto ,luego.emb_cap_carga ,luego.emb_cap_gas ,luego.emb_cap_agua 
    ,luego.emb_freq_radio ,luego.emb_freq_trab ,luego.emb_autorizada 
    ,luego.emb_lugar_op ,luego.emb_grav_desc ,luego.emb_chalecos ,luego.emb_balsas 
    ,luego.emb_botiquin ,luego.emb_ext_co2 ,luego.emb_ext_quim ,luego.emb_sist_incen 
    ,luego.emb_obs ,luego.emb_desc_color ,luego.emb_desc_motor ,luego.emb_desc_hp 
    ,luego.emb_desc_mot_serie ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_rnb_embarcacion delete on "informix"
    .rnb_embarcacion referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_embarcacion (emb_codigo,
    emb_nombre,emb_propietario,emb_rep_legal,emb_dir_repleg,emb_tel_repleg,
    emb_matricula,emb_tipo,emb_ind_llama,emb_imo,emb_num_construc,emb_lug_constr,
    emb_marca,emb_tripulantes,emb_operador,emb_eslora,emb_manga,emb_puntal,
    emb_calado,emb_desplaza,emb_mat_casco,emb_pasajeros,emb_ton_neto,
    emb_ton_bruto,emb_cap_carga,emb_cap_gas,emb_cap_agua,emb_freq_radio,
    emb_freq_trab,emb_autorizada,emb_lugar_op,emb_grav_desc,emb_chalecos,
    emb_balsas,emb_botiquin,emb_ext_co2,emb_ext_quim,emb_sist_incen,emb_obs,
    emb_desc_color,emb_desc_motor,emb_desc_hp,emb_desc_mot_serie,desp_emb_codigo,
    desp_emb_nombre,desp_emb_propietario,desp_emb_rep_legal,desp_emb_dir_repleg,
    desp_emb_tel_repleg,desp_emb_matricula,desp_emb_tipo,desp_emb_ind_llama,
    desp_emb_imo,desp_emb_num_construc,desp_emb_lug_constr,desp_emb_marca,
    desp_emb_tripulantes,desp_emb_operador,desp_emb_eslora,desp_emb_manga,
    desp_emb_puntal,desp_emb_calado,desp_emb_desplaza,desp_emb_mat_casco,
    desp_emb_pasajeros,desp_emb_ton_neto,desp_emb_ton_bruto,desp_emb_cap_carga,
    desp_emb_cap_gas,desp_emb_cap_agua,desp_emb_freq_radio,desp_emb_freq_trab,
    desp_emb_autorizada,desp_emb_lugar_op,desp_emb_grav_desc,desp_emb_chalecos,
    desp_emb_balsas,desp_emb_botiquin,desp_emb_ext_co2,desp_emb_ext_quim,
    desp_emb_sist_incen,desp_emb_obs,desp_emb_desc_color,desp_emb_desc_motor,
    desp_emb_desc_hp,desp_emb_desc_mot_serie,accion,usuario,hora)  values 
    (antes.emb_codigo ,antes.emb_nombre ,antes.emb_propietario ,antes.emb_rep_legal 
    ,antes.emb_dir_repleg ,antes.emb_tel_repleg ,antes.emb_matricula 
    ,antes.emb_tipo ,antes.emb_ind_llama ,antes.emb_imo ,antes.emb_num_construc 
    ,antes.emb_lug_constr ,antes.emb_marca ,antes.emb_tripulantes ,antes.emb_operador 
    ,antes.emb_eslora ,antes.emb_manga ,antes.emb_puntal ,antes.emb_calado 
    ,antes.emb_desplaza ,antes.emb_mat_casco ,antes.emb_pasajeros ,antes.emb_ton_neto 
    ,antes.emb_ton_bruto ,antes.emb_cap_carga ,antes.emb_cap_gas ,antes.emb_cap_agua 
    ,antes.emb_freq_radio ,antes.emb_freq_trab ,antes.emb_autorizada 
    ,antes.emb_lugar_op ,antes.emb_grav_desc ,antes.emb_chalecos ,antes.emb_balsas 
    ,antes.emb_botiquin ,antes.emb_ext_co2 ,antes.emb_ext_quim ,antes.emb_sist_incen 
    ,antes.emb_obs ,antes.emb_desc_color ,antes.emb_desc_motor ,antes.emb_desc_hp 
    ,antes.emb_desc_mot_serie ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,'' ,'' ,'' 
    ,'' ,NULL ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_rnb_embarcacion update on "informix"
    .rnb_embarcacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_embarcacion (emb_codigo,
    emb_nombre,emb_propietario,emb_rep_legal,emb_dir_repleg,emb_tel_repleg,
    emb_matricula,emb_tipo,emb_ind_llama,emb_imo,emb_num_construc,emb_lug_constr,
    emb_marca,emb_tripulantes,emb_operador,emb_eslora,emb_manga,emb_puntal,
    emb_calado,emb_desplaza,emb_mat_casco,emb_pasajeros,emb_ton_neto,
    emb_ton_bruto,emb_cap_carga,emb_cap_gas,emb_cap_agua,emb_freq_radio,
    emb_freq_trab,emb_autorizada,emb_lugar_op,emb_grav_desc,emb_chalecos,
    emb_balsas,emb_botiquin,emb_ext_co2,emb_ext_quim,emb_sist_incen,emb_obs,
    emb_desc_color,emb_desc_motor,emb_desc_hp,emb_desc_mot_serie,desp_emb_codigo,
    desp_emb_nombre,desp_emb_propietario,desp_emb_rep_legal,desp_emb_dir_repleg,
    desp_emb_tel_repleg,desp_emb_matricula,desp_emb_tipo,desp_emb_ind_llama,
    desp_emb_imo,desp_emb_num_construc,desp_emb_lug_constr,desp_emb_marca,
    desp_emb_tripulantes,desp_emb_operador,desp_emb_eslora,desp_emb_manga,
    desp_emb_puntal,desp_emb_calado,desp_emb_desplaza,desp_emb_mat_casco,
    desp_emb_pasajeros,desp_emb_ton_neto,desp_emb_ton_bruto,desp_emb_cap_carga,
    desp_emb_cap_gas,desp_emb_cap_agua,desp_emb_freq_radio,desp_emb_freq_trab,
    desp_emb_autorizada,desp_emb_lugar_op,desp_emb_grav_desc,desp_emb_chalecos,
    desp_emb_balsas,desp_emb_botiquin,desp_emb_ext_co2,desp_emb_ext_quim,
    desp_emb_sist_incen,desp_emb_obs,desp_emb_desc_color,desp_emb_desc_motor,
    desp_emb_desc_hp,desp_emb_desc_mot_serie,accion,usuario,hora)  values 
    (antes.emb_codigo ,antes.emb_nombre ,antes.emb_propietario ,antes.emb_rep_legal 
    ,antes.emb_dir_repleg ,antes.emb_tel_repleg ,antes.emb_matricula 
    ,antes.emb_tipo ,antes.emb_ind_llama ,antes.emb_imo ,antes.emb_num_construc 
    ,antes.emb_lug_constr ,antes.emb_marca ,antes.emb_tripulantes ,antes.emb_operador 
    ,antes.emb_eslora ,antes.emb_manga ,antes.emb_puntal ,antes.emb_calado 
    ,antes.emb_desplaza ,antes.emb_mat_casco ,antes.emb_pasajeros ,antes.emb_ton_neto 
    ,antes.emb_ton_bruto ,antes.emb_cap_carga ,antes.emb_cap_gas ,antes.emb_cap_agua 
    ,antes.emb_freq_radio ,antes.emb_freq_trab ,antes.emb_autorizada 
    ,antes.emb_lugar_op ,antes.emb_grav_desc ,antes.emb_chalecos ,antes.emb_balsas 
    ,antes.emb_botiquin ,antes.emb_ext_co2 ,antes.emb_ext_quim ,antes.emb_sist_incen 
    ,antes.emb_obs ,antes.emb_desc_color ,antes.emb_desc_motor ,antes.emb_desc_hp 
    ,antes.emb_desc_mot_serie ,luego.emb_codigo ,luego.emb_nombre ,luego.emb_propietario 
    ,luego.emb_rep_legal ,luego.emb_dir_repleg ,luego.emb_tel_repleg 
    ,luego.emb_matricula ,luego.emb_tipo ,luego.emb_ind_llama ,luego.emb_imo 
    ,luego.emb_num_construc ,luego.emb_lug_constr ,luego.emb_marca ,luego.emb_tripulantes 
    ,luego.emb_operador ,luego.emb_eslora ,luego.emb_manga ,luego.emb_puntal 
    ,luego.emb_calado ,luego.emb_desplaza ,luego.emb_mat_casco ,luego.emb_pasajeros 
    ,luego.emb_ton_neto ,luego.emb_ton_bruto ,luego.emb_cap_carga ,luego.emb_cap_gas 
    ,luego.emb_cap_agua ,luego.emb_freq_radio ,luego.emb_freq_trab ,luego.emb_autorizada 
    ,luego.emb_lugar_op ,luego.emb_grav_desc ,luego.emb_chalecos ,luego.emb_balsas 
    ,luego.emb_botiquin ,luego.emb_ext_co2 ,luego.emb_ext_quim ,luego.emb_sist_incen 
    ,luego.emb_obs ,luego.emb_desc_color ,luego.emb_desc_motor ,luego.emb_desc_hp 
    ,luego.emb_desc_mot_serie ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_rnb_licencia insert on "informix"
    .rnb_licencia referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_licencia (lic_codigo,lic_embarcacion,
    lic_correlativo,lic_anno,lic_fecha,lic_inspector,lic_fecha_insp,lic_secretario,
    lic_comandante,lic_dependencia,lic_precio,lic_situacion,desp_lic_codigo,
    desp_lic_embarcacion,desp_lic_correlativo,desp_lic_anno,desp_lic_fecha,
    desp_lic_inspector,desp_lic_fecha_insp,desp_lic_secretario,desp_lic_comandante,
    desp_lic_dependencia,desp_lic_precio,desp_lic_situacion,accion,usuario,
    hora)  values ('' ,NULL ,NULL ,NULL ,'' ,NULL ,'' ,NULL ,NULL ,NULL 
    ,NULL ,'' ,luego.lic_codigo ,luego.lic_embarcacion ,luego.lic_correlativo 
    ,luego.lic_anno ,luego.lic_fecha ,luego.lic_inspector ,luego.lic_fecha_insp 
    ,luego.lic_secretario ,luego.lic_comandante ,luego.lic_dependencia 
    ,luego.lic_precio ,luego.lic_situacion ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_rnb_licencia delete on "informix"
    .rnb_licencia referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_licencia (lic_codigo,lic_embarcacion,
    lic_correlativo,lic_anno,lic_fecha,lic_inspector,lic_fecha_insp,lic_secretario,
    lic_comandante,lic_dependencia,lic_precio,lic_situacion,desp_lic_codigo,
    desp_lic_embarcacion,desp_lic_correlativo,desp_lic_anno,desp_lic_fecha,
    desp_lic_inspector,desp_lic_fecha_insp,desp_lic_secretario,desp_lic_comandante,
    desp_lic_dependencia,desp_lic_precio,desp_lic_situacion,accion,usuario,
    hora)  values (antes.lic_codigo ,antes.lic_embarcacion ,antes.lic_correlativo 
    ,antes.lic_anno ,antes.lic_fecha ,antes.lic_inspector ,antes.lic_fecha_insp 
    ,antes.lic_secretario ,antes.lic_comandante ,antes.lic_dependencia 
    ,antes.lic_precio ,antes.lic_situacion ,'' ,NULL ,NULL ,NULL ,'' ,NULL 
    ,'' ,NULL ,NULL ,NULL ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_rnb_licencia update on "informix"
    .rnb_licencia referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_licencia (lic_codigo,lic_embarcacion,
    lic_correlativo,lic_anno,lic_fecha,lic_inspector,lic_fecha_insp,lic_secretario,
    lic_comandante,lic_dependencia,lic_precio,lic_situacion,desp_lic_codigo,
    desp_lic_embarcacion,desp_lic_correlativo,desp_lic_anno,desp_lic_fecha,
    desp_lic_inspector,desp_lic_fecha_insp,desp_lic_secretario,desp_lic_comandante,
    desp_lic_dependencia,desp_lic_precio,desp_lic_situacion,accion,usuario,
    hora)  values (antes.lic_codigo ,antes.lic_embarcacion ,antes.lic_correlativo 
    ,antes.lic_anno ,antes.lic_fecha ,antes.lic_inspector ,antes.lic_fecha_insp 
    ,antes.lic_secretario ,antes.lic_comandante ,antes.lic_dependencia 
    ,antes.lic_precio ,antes.lic_situacion ,luego.lic_codigo ,luego.lic_embarcacion 
    ,luego.lic_correlativo ,luego.lic_anno ,luego.lic_fecha ,luego.lic_inspector 
    ,luego.lic_fecha_insp ,luego.lic_secretario ,luego.lic_comandante 
    ,luego.lic_dependencia ,luego.lic_precio ,luego.lic_situacion ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_rnb_usuario insert on "informix"
    .rnb_usuario referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_usuario (usu_catalogo,
    usu_dependencia,usu_situacion,usu_nivel,desp_usu_catalogo,desp_usu_dependencia,
    desp_usu_situacion,desp_usu_nivel,accion,usuario,hora)  values (NULL 
    ,NULL ,'' ,NULL ,luego.usu_catalogo ,luego.usu_dependencia ,luego.usu_situacion 
    ,luego.usu_nivel ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_rnb_usuario delete on "informix"
    .rnb_usuario referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_usuario (usu_catalogo,
    usu_dependencia,usu_situacion,usu_nivel,desp_usu_catalogo,desp_usu_dependencia,
    desp_usu_situacion,desp_usu_nivel,accion,usuario,hora)  values (antes.usu_catalogo 
    ,antes.usu_dependencia ,antes.usu_situacion ,antes.usu_nivel ,NULL 
    ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_rnb_usuario update on "informix"
    .rnb_usuario referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_usuario (usu_catalogo,
    usu_dependencia,usu_situacion,usu_nivel,desp_usu_catalogo,desp_usu_dependencia,
    desp_usu_situacion,desp_usu_nivel,accion,usuario,hora)  values (antes.usu_catalogo 
    ,antes.usu_dependencia ,antes.usu_situacion ,antes.usu_nivel ,luego.usu_catalogo 
    ,luego.usu_dependencia ,luego.usu_situacion ,luego.usu_nivel ,'U' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_rnb_inspeccion insert on "informix"
    .rnb_inspeccion referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_inspeccion (insp_codigo,
    insp_embarcacion,insp_correlativo,insp_anno,insp_fecha,insp_lugar,
    insp_inspector,insp_secretario,insp_comandante,insp_dependencia,insp_observacion,
    insp_resultado,desp_insp_codigo,desp_insp_embarcacion,desp_insp_correlativo,
    desp_insp_anno,desp_insp_fecha,desp_insp_lugar,desp_insp_inspector,
    desp_insp_secretario,desp_insp_comandante,desp_insp_dependencia,desp_insp_observacion,
    desp_insp_resultado,accion,usuario,hora)  values ('' ,NULL ,NULL ,
    NULL ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,luego.insp_codigo ,luego.insp_embarcacion 
    ,luego.insp_correlativo ,luego.insp_anno ,luego.insp_fecha ,luego.insp_lugar 
    ,luego.insp_inspector ,luego.insp_secretario ,luego.insp_comandante 
    ,luego.insp_dependencia ,luego.insp_observacion ,luego.insp_resultado 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_rnb_inspeccion delete on "informix"
    .rnb_inspeccion referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_inspeccion (insp_codigo,
    insp_embarcacion,insp_correlativo,insp_anno,insp_fecha,insp_lugar,
    insp_inspector,insp_secretario,insp_comandante,insp_dependencia,insp_observacion,
    insp_resultado,desp_insp_codigo,desp_insp_embarcacion,desp_insp_correlativo,
    desp_insp_anno,desp_insp_fecha,desp_insp_lugar,desp_insp_inspector,
    desp_insp_secretario,desp_insp_comandante,desp_insp_dependencia,desp_insp_observacion,
    desp_insp_resultado,accion,usuario,hora)  values (antes.insp_codigo 
    ,antes.insp_embarcacion ,antes.insp_correlativo ,antes.insp_anno 
    ,antes.insp_fecha ,antes.insp_lugar ,antes.insp_inspector ,antes.insp_secretario 
    ,antes.insp_comandante ,antes.insp_dependencia ,antes.insp_observacion 
    ,antes.insp_resultado ,'' ,NULL ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_rnb_inspeccion update on "informix"
    .rnb_inspeccion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_inspeccion (insp_codigo,
    insp_embarcacion,insp_correlativo,insp_anno,insp_fecha,insp_lugar,
    insp_inspector,insp_secretario,insp_comandante,insp_dependencia,insp_observacion,
    insp_resultado,desp_insp_codigo,desp_insp_embarcacion,desp_insp_correlativo,
    desp_insp_anno,desp_insp_fecha,desp_insp_lugar,desp_insp_inspector,
    desp_insp_secretario,desp_insp_comandante,desp_insp_dependencia,desp_insp_observacion,
    desp_insp_resultado,accion,usuario,hora)  values (antes.insp_codigo 
    ,antes.insp_embarcacion ,antes.insp_correlativo ,antes.insp_anno 
    ,antes.insp_fecha ,antes.insp_lugar ,antes.insp_inspector ,antes.insp_secretario 
    ,antes.insp_comandante ,antes.insp_dependencia ,antes.insp_observacion 
    ,antes.insp_resultado ,luego.insp_codigo ,luego.insp_embarcacion 
    ,luego.insp_correlativo ,luego.insp_anno ,luego.insp_fecha ,luego.insp_lugar 
    ,luego.insp_inspector ,luego.insp_secretario ,luego.insp_comandante 
    ,luego.insp_dependencia ,luego.insp_observacion ,luego.insp_resultado 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_rnb_dependencia insert on "informix"
    .rnb_dependencia referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_dependencia (dep_codigo,
    dep_desc_lg,dep_desc_md,dep_desc_ct,dep_lugar,dep_clave,desp_dep_codigo,
    desp_dep_desc_lg,desp_dep_desc_md,desp_dep_desc_ct,desp_dep_lugar,
    desp_dep_clave,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' 
    ,luego.dep_codigo ,luego.dep_desc_lg ,luego.dep_desc_md ,luego.dep_desc_ct 
    ,luego.dep_lugar ,luego.dep_clave ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_rnb_dependencia delete on "informix"
    .rnb_dependencia referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_dependencia (dep_codigo,
    dep_desc_lg,dep_desc_md,dep_desc_ct,dep_lugar,dep_clave,desp_dep_codigo,
    desp_dep_desc_lg,desp_dep_desc_md,desp_dep_desc_ct,desp_dep_lugar,
    desp_dep_clave,accion,usuario,hora)  values (antes.dep_codigo ,antes.dep_desc_lg 
    ,antes.dep_desc_md ,antes.dep_desc_ct ,antes.dep_lugar ,antes.dep_clave 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_rnb_dependencia update on "informix"
    .rnb_dependencia referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_dependencia (dep_codigo,
    dep_desc_lg,dep_desc_md,dep_desc_ct,dep_lugar,dep_clave,desp_dep_codigo,
    desp_dep_desc_lg,desp_dep_desc_md,desp_dep_desc_ct,desp_dep_lugar,
    desp_dep_clave,accion,usuario,hora)  values (antes.dep_codigo ,antes.dep_desc_lg 
    ,antes.dep_desc_md ,antes.dep_desc_ct ,antes.dep_lugar ,antes.dep_clave 
    ,luego.dep_codigo ,luego.dep_desc_lg ,luego.dep_desc_md ,luego.dep_desc_ct 
    ,luego.dep_lugar ,luego.dep_clave ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_rnb_matricula insert on "informix"
    .rnb_matricula referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_matricula (mat_codigo,
    mat_embarcacion,mat_correlativo,mat_libro,mat_folio,mat_anno,mat_fecha,
    mat_secretario,mat_comandante,mat_dependencia,mat_precio,mat_situacion,
    desp_mat_codigo,desp_mat_embarcacion,desp_mat_correlativo,desp_mat_libro,
    desp_mat_folio,desp_mat_anno,desp_mat_fecha,desp_mat_secretario,desp_mat_comandante,
    desp_mat_dependencia,desp_mat_precio,desp_mat_situacion,accion,usuario,
    hora)  values ('' ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL 
    ,NULL ,'' ,luego.mat_codigo ,luego.mat_embarcacion ,luego.mat_correlativo 
    ,luego.mat_libro ,luego.mat_folio ,luego.mat_anno ,luego.mat_fecha 
    ,luego.mat_secretario ,luego.mat_comandante ,luego.mat_dependencia 
    ,luego.mat_precio ,luego.mat_situacion ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_rnb_matricula delete on "informix"
    .rnb_matricula referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_matricula (mat_codigo,
    mat_embarcacion,mat_correlativo,mat_libro,mat_folio,mat_anno,mat_fecha,
    mat_secretario,mat_comandante,mat_dependencia,mat_precio,mat_situacion,
    desp_mat_codigo,desp_mat_embarcacion,desp_mat_correlativo,desp_mat_libro,
    desp_mat_folio,desp_mat_anno,desp_mat_fecha,desp_mat_secretario,desp_mat_comandante,
    desp_mat_dependencia,desp_mat_precio,desp_mat_situacion,accion,usuario,
    hora)  values (antes.mat_codigo ,antes.mat_embarcacion ,antes.mat_correlativo 
    ,antes.mat_libro ,antes.mat_folio ,antes.mat_anno ,antes.mat_fecha 
    ,antes.mat_secretario ,antes.mat_comandante ,antes.mat_dependencia 
    ,antes.mat_precio ,antes.mat_situacion ,'' ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_rnb_matricula update on "informix"
    .rnb_matricula referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_matricula (mat_codigo,
    mat_embarcacion,mat_correlativo,mat_libro,mat_folio,mat_anno,mat_fecha,
    mat_secretario,mat_comandante,mat_dependencia,mat_precio,mat_situacion,
    desp_mat_codigo,desp_mat_embarcacion,desp_mat_correlativo,desp_mat_libro,
    desp_mat_folio,desp_mat_anno,desp_mat_fecha,desp_mat_secretario,desp_mat_comandante,
    desp_mat_dependencia,desp_mat_precio,desp_mat_situacion,accion,usuario,
    hora)  values (antes.mat_codigo ,antes.mat_embarcacion ,antes.mat_correlativo 
    ,antes.mat_libro ,antes.mat_folio ,antes.mat_anno ,antes.mat_fecha 
    ,antes.mat_secretario ,antes.mat_comandante ,antes.mat_dependencia 
    ,antes.mat_precio ,antes.mat_situacion ,luego.mat_codigo ,luego.mat_embarcacion 
    ,luego.mat_correlativo ,luego.mat_libro ,luego.mat_folio ,luego.mat_anno 
    ,luego.mat_fecha ,luego.mat_secretario ,luego.mat_comandante ,luego.mat_dependencia 
    ,luego.mat_precio ,luego.mat_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_rnb_zarpe_inter insert on "informix"
    .rnb_zarpe_inter referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_zarpe_inter (zarin_codigo,
    zarin_zarpe,zarin_linea,zarin_titulo,zarin_autoridad,zarin_fechaini,
    zarin_fechafin,desp_zarin_codigo,desp_zarin_zarpe,desp_zarin_linea,
    desp_zarin_titulo,desp_zarin_autoridad,desp_zarin_fechaini,desp_zarin_fechafin,
    accion,usuario,hora)  values (NULL ,'' ,NULL ,'' ,'' ,'' ,'' ,luego.zarin_codigo 
    ,luego.zarin_zarpe ,luego.zarin_linea ,luego.zarin_titulo ,luego.zarin_autoridad 
    ,luego.zarin_fechaini ,luego.zarin_fechafin ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_rnb_zarpe_inter delete on "informix"
    .rnb_zarpe_inter referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_zarpe_inter (zarin_codigo,
    zarin_zarpe,zarin_linea,zarin_titulo,zarin_autoridad,zarin_fechaini,
    zarin_fechafin,desp_zarin_codigo,desp_zarin_zarpe,desp_zarin_linea,
    desp_zarin_titulo,desp_zarin_autoridad,desp_zarin_fechaini,desp_zarin_fechafin,
    accion,usuario,hora)  values (antes.zarin_codigo ,antes.zarin_zarpe 
    ,antes.zarin_linea ,antes.zarin_titulo ,antes.zarin_autoridad ,antes.zarin_fechaini 
    ,antes.zarin_fechafin ,NULL ,'' ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_rnb_zarpe_inter update on "informix"
    .rnb_zarpe_inter referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_zarpe_inter (zarin_codigo,
    zarin_zarpe,zarin_linea,zarin_titulo,zarin_autoridad,zarin_fechaini,
    zarin_fechafin,desp_zarin_codigo,desp_zarin_zarpe,desp_zarin_linea,
    desp_zarin_titulo,desp_zarin_autoridad,desp_zarin_fechaini,desp_zarin_fechafin,
    accion,usuario,hora)  values (antes.zarin_codigo ,antes.zarin_zarpe 
    ,antes.zarin_linea ,antes.zarin_titulo ,antes.zarin_autoridad ,antes.zarin_fechaini 
    ,antes.zarin_fechafin ,luego.zarin_codigo ,luego.zarin_zarpe ,luego.zarin_linea 
    ,luego.zarin_titulo ,luego.zarin_autoridad ,luego.zarin_fechaini 
    ,luego.zarin_fechafin ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_rnb_zarpe insert on "informix".rnb_zarpe 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_zarpe (zar_codigo,zar_emb_codigo,
    zar_correlativo,zar_anno,zar_fecha,zar_secretario,zar_comandante,
    zar_dependencia,zar_precio,zar_matricula,zar_emb_nombre,zar_propietario,
    zar_pro_direccion,zar_bandera,zar_pregistro,zar_fregistro,zar_imo,
    zar_indll,zar_tipo,zar_tonb,zar_tonn,zar_lcons,zar_tripulantes,zar_pasajeros,
    zar_capitan,zar_agente_mar,zar_manifes_cargo,zar_ultimos_puertos,
    zar_desc_carga,zar_destino,desp_zar_codigo,desp_zar_emb_codigo,desp_zar_correlativo,
    desp_zar_anno,desp_zar_fecha,desp_zar_secretario,desp_zar_comandante,
    desp_zar_dependencia,desp_zar_precio,desp_zar_matricula,desp_zar_emb_nombre,
    desp_zar_propietario,desp_zar_pro_direccion,desp_zar_bandera,desp_zar_pregistro,
    desp_zar_fregistro,desp_zar_imo,desp_zar_indll,desp_zar_tipo,desp_zar_tonb,
    desp_zar_tonn,desp_zar_lcons,desp_zar_tripulantes,desp_zar_pasajeros,
    desp_zar_capitan,desp_zar_agente_mar,desp_zar_manifes_cargo,desp_zar_ultimos_puertos,
    desp_zar_desc_carga,desp_zar_destino,accion,usuario,hora)  values 
    ('' ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,luego.zar_codigo 
    ,luego.zar_emb_codigo ,luego.zar_correlativo ,luego.zar_anno ,luego.zar_fecha 
    ,luego.zar_secretario ,luego.zar_comandante ,luego.zar_dependencia 
    ,luego.zar_precio ,luego.zar_matricula ,luego.zar_emb_nombre ,luego.zar_propietario 
    ,luego.zar_pro_direccion ,luego.zar_bandera ,luego.zar_pregistro 
    ,luego.zar_fregistro ,luego.zar_imo ,luego.zar_indll ,luego.zar_tipo 
    ,luego.zar_tonb ,luego.zar_tonn ,luego.zar_lcons ,luego.zar_tripulantes 
    ,luego.zar_pasajeros ,luego.zar_capitan ,luego.zar_agente_mar ,luego.zar_manifes_cargo 
    ,luego.zar_ultimos_puertos ,luego.zar_desc_carga ,luego.zar_destino 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_rnb_zarpe delete on "informix".rnb_zarpe 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_zarpe (zar_codigo,zar_emb_codigo,
    zar_correlativo,zar_anno,zar_fecha,zar_secretario,zar_comandante,
    zar_dependencia,zar_precio,zar_matricula,zar_emb_nombre,zar_propietario,
    zar_pro_direccion,zar_bandera,zar_pregistro,zar_fregistro,zar_imo,
    zar_indll,zar_tipo,zar_tonb,zar_tonn,zar_lcons,zar_tripulantes,zar_pasajeros,
    zar_capitan,zar_agente_mar,zar_manifes_cargo,zar_ultimos_puertos,
    zar_desc_carga,zar_destino,desp_zar_codigo,desp_zar_emb_codigo,desp_zar_correlativo,
    desp_zar_anno,desp_zar_fecha,desp_zar_secretario,desp_zar_comandante,
    desp_zar_dependencia,desp_zar_precio,desp_zar_matricula,desp_zar_emb_nombre,
    desp_zar_propietario,desp_zar_pro_direccion,desp_zar_bandera,desp_zar_pregistro,
    desp_zar_fregistro,desp_zar_imo,desp_zar_indll,desp_zar_tipo,desp_zar_tonb,
    desp_zar_tonn,desp_zar_lcons,desp_zar_tripulantes,desp_zar_pasajeros,
    desp_zar_capitan,desp_zar_agente_mar,desp_zar_manifes_cargo,desp_zar_ultimos_puertos,
    desp_zar_desc_carga,desp_zar_destino,accion,usuario,hora)  values 
    (antes.zar_codigo ,antes.zar_emb_codigo ,antes.zar_correlativo ,antes.zar_anno 
    ,antes.zar_fecha ,antes.zar_secretario ,antes.zar_comandante ,antes.zar_dependencia 
    ,antes.zar_precio ,antes.zar_matricula ,antes.zar_emb_nombre ,antes.zar_propietario 
    ,antes.zar_pro_direccion ,antes.zar_bandera ,antes.zar_pregistro 
    ,antes.zar_fregistro ,antes.zar_imo ,antes.zar_indll ,antes.zar_tipo 
    ,antes.zar_tonb ,antes.zar_tonn ,antes.zar_lcons ,antes.zar_tripulantes 
    ,antes.zar_pasajeros ,antes.zar_capitan ,antes.zar_agente_mar ,antes.zar_manifes_cargo 
    ,antes.zar_ultimos_puertos ,antes.zar_desc_carga ,antes.zar_destino 
    ,'' ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_rnb_zarpe update on "informix".rnb_zarpe 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_zarpe (zar_codigo,zar_emb_codigo,
    zar_correlativo,zar_anno,zar_fecha,zar_secretario,zar_comandante,
    zar_dependencia,zar_precio,zar_matricula,zar_emb_nombre,zar_propietario,
    zar_pro_direccion,zar_bandera,zar_pregistro,zar_fregistro,zar_imo,
    zar_indll,zar_tipo,zar_tonb,zar_tonn,zar_lcons,zar_tripulantes,zar_pasajeros,
    zar_capitan,zar_agente_mar,zar_manifes_cargo,zar_ultimos_puertos,
    zar_desc_carga,zar_destino,desp_zar_codigo,desp_zar_emb_codigo,desp_zar_correlativo,
    desp_zar_anno,desp_zar_fecha,desp_zar_secretario,desp_zar_comandante,
    desp_zar_dependencia,desp_zar_precio,desp_zar_matricula,desp_zar_emb_nombre,
    desp_zar_propietario,desp_zar_pro_direccion,desp_zar_bandera,desp_zar_pregistro,
    desp_zar_fregistro,desp_zar_imo,desp_zar_indll,desp_zar_tipo,desp_zar_tonb,
    desp_zar_tonn,desp_zar_lcons,desp_zar_tripulantes,desp_zar_pasajeros,
    desp_zar_capitan,desp_zar_agente_mar,desp_zar_manifes_cargo,desp_zar_ultimos_puertos,
    desp_zar_desc_carga,desp_zar_destino,accion,usuario,hora)  values 
    (antes.zar_codigo ,antes.zar_emb_codigo ,antes.zar_correlativo ,antes.zar_anno 
    ,antes.zar_fecha ,antes.zar_secretario ,antes.zar_comandante ,antes.zar_dependencia 
    ,antes.zar_precio ,antes.zar_matricula ,antes.zar_emb_nombre ,antes.zar_propietario 
    ,antes.zar_pro_direccion ,antes.zar_bandera ,antes.zar_pregistro 
    ,antes.zar_fregistro ,antes.zar_imo ,antes.zar_indll ,antes.zar_tipo 
    ,antes.zar_tonb ,antes.zar_tonn ,antes.zar_lcons ,antes.zar_tripulantes 
    ,antes.zar_pasajeros ,antes.zar_capitan ,antes.zar_agente_mar ,antes.zar_manifes_cargo 
    ,antes.zar_ultimos_puertos ,antes.zar_desc_carga ,antes.zar_destino 
    ,luego.zar_codigo ,luego.zar_emb_codigo ,luego.zar_correlativo ,luego.zar_anno 
    ,luego.zar_fecha ,luego.zar_secretario ,luego.zar_comandante ,luego.zar_dependencia 
    ,luego.zar_precio ,luego.zar_matricula ,luego.zar_emb_nombre ,luego.zar_propietario 
    ,luego.zar_pro_direccion ,luego.zar_bandera ,luego.zar_pregistro 
    ,luego.zar_fregistro ,luego.zar_imo ,luego.zar_indll ,luego.zar_tipo 
    ,luego.zar_tonb ,luego.zar_tonn ,luego.zar_lcons ,luego.zar_tripulantes 
    ,luego.zar_pasajeros ,luego.zar_capitan ,luego.zar_agente_mar ,luego.zar_manifes_cargo 
    ,luego.zar_ultimos_puertos ,luego.zar_desc_carga ,luego.zar_destino 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_rnb_bitacora insert on "informix"
    .rnb_bitacora referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_bitacora (bit_codigo,bit_tipo,
    bit_accion,bit_fecha,bit_quien,bit_dependencia,desp_bit_codigo,desp_bit_tipo,
    desp_bit_accion,desp_bit_fecha,desp_bit_quien,desp_bit_dependencia,
    accion,usuario,hora)  values (NULL ,'' ,NULL ,'' ,NULL ,NULL ,luego.bit_codigo 
    ,luego.bit_tipo ,luego.bit_accion ,luego.bit_fecha ,luego.bit_quien 
    ,luego.bit_dependencia ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_rnb_bitacora delete on "informix"
    .rnb_bitacora referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_bitacora (bit_codigo,bit_tipo,
    bit_accion,bit_fecha,bit_quien,bit_dependencia,desp_bit_codigo,desp_bit_tipo,
    desp_bit_accion,desp_bit_fecha,desp_bit_quien,desp_bit_dependencia,
    accion,usuario,hora)  values (antes.bit_codigo ,antes.bit_tipo ,antes.bit_accion 
    ,antes.bit_fecha ,antes.bit_quien ,antes.bit_dependencia ,NULL ,''
     ,NULL ,'' ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_rnb_bitacora update on "informix"
    .rnb_bitacora referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_bitacora (bit_codigo,bit_tipo,
    bit_accion,bit_fecha,bit_quien,bit_dependencia,desp_bit_codigo,desp_bit_tipo,
    desp_bit_accion,desp_bit_fecha,desp_bit_quien,desp_bit_dependencia,
    accion,usuario,hora)  values (antes.bit_codigo ,antes.bit_tipo ,antes.bit_accion 
    ,antes.bit_fecha ,antes.bit_quien ,antes.bit_dependencia ,luego.bit_codigo 
    ,luego.bit_tipo ,luego.bit_accion ,luego.bit_fecha ,luego.bit_quien 
    ,luego.bit_dependencia ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_rnb_atraque insert on "informix"
    .rnb_atraque referencing new as luego
    for each row
        (
        insert into "informix".aud_rnb_atraque (atra_codigo,atra_emb_codigo,
    atra_correlativo,atra_anno,atra_fecha,atra_secretario,atra_comandante,
    atra_dependencia,atra_matricula,atra_emb_nombre,atra_propietario,
    atra_pro_direccion,atra_bandera,atra_pregistro,atra_fregistro,atra_imo,
    atra_indll,atra_tipo,atra_tipoatra,atra_tonb,atra_tonn,atra_capitan,
    atra_agente_mar,atra_procedente,desp_atra_codigo,desp_atra_emb_codigo,
    desp_atra_correlativo,desp_atra_anno,desp_atra_fecha,desp_atra_secretario,
    desp_atra_comandante,desp_atra_dependencia,desp_atra_matricula,desp_atra_emb_nombre,
    desp_atra_propietario,desp_atra_pro_direccion,desp_atra_bandera,desp_atra_pregistro,
    desp_atra_fregistro,desp_atra_imo,desp_atra_indll,desp_atra_tipo,
    desp_atra_tipoatra,desp_atra_tonb,desp_atra_tonn,desp_atra_capitan,
    desp_atra_agente_mar,desp_atra_procedente,accion,usuario,hora)  values 
    ('' ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,NULL ,NULL ,'' ,'' ,'' ,luego.atra_codigo ,luego.atra_emb_codigo 
    ,luego.atra_correlativo ,luego.atra_anno ,luego.atra_fecha ,luego.atra_secretario 
    ,luego.atra_comandante ,luego.atra_dependencia ,luego.atra_matricula 
    ,luego.atra_emb_nombre ,luego.atra_propietario ,luego.atra_pro_direccion 
    ,luego.atra_bandera ,luego.atra_pregistro ,luego.atra_fregistro ,
    luego.atra_imo ,luego.atra_indll ,luego.atra_tipo ,luego.atra_tipoatra 
    ,luego.atra_tonb ,luego.atra_tonn ,luego.atra_capitan ,luego.atra_agente_mar 
    ,luego.atra_procedente ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_rnb_atraque delete on "informix"
    .rnb_atraque referencing old as antes
    for each row
        (
        insert into "informix".aud_rnb_atraque (atra_codigo,atra_emb_codigo,
    atra_correlativo,atra_anno,atra_fecha,atra_secretario,atra_comandante,
    atra_dependencia,atra_matricula,atra_emb_nombre,atra_propietario,
    atra_pro_direccion,atra_bandera,atra_pregistro,atra_fregistro,atra_imo,
    atra_indll,atra_tipo,atra_tipoatra,atra_tonb,atra_tonn,atra_capitan,
    atra_agente_mar,atra_procedente,desp_atra_codigo,desp_atra_emb_codigo,
    desp_atra_correlativo,desp_atra_anno,desp_atra_fecha,desp_atra_secretario,
    desp_atra_comandante,desp_atra_dependencia,desp_atra_matricula,desp_atra_emb_nombre,
    desp_atra_propietario,desp_atra_pro_direccion,desp_atra_bandera,desp_atra_pregistro,
    desp_atra_fregistro,desp_atra_imo,desp_atra_indll,desp_atra_tipo,
    desp_atra_tipoatra,desp_atra_tonb,desp_atra_tonn,desp_atra_capitan,
    desp_atra_agente_mar,desp_atra_procedente,accion,usuario,hora)  values 
    (antes.atra_codigo ,antes.atra_emb_codigo ,antes.atra_correlativo 
    ,antes.atra_anno ,antes.atra_fecha ,antes.atra_secretario ,antes.atra_comandante 
    ,antes.atra_dependencia ,antes.atra_matricula ,antes.atra_emb_nombre 
    ,antes.atra_propietario ,antes.atra_pro_direccion ,antes.atra_bandera 
    ,antes.atra_pregistro ,antes.atra_fregistro ,antes.atra_imo ,antes.atra_indll 
    ,antes.atra_tipo ,antes.atra_tipoatra ,antes.atra_tonb ,antes.atra_tonn 
    ,antes.atra_capitan ,antes.atra_agente_mar ,antes.atra_procedente 
    ,'' ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,NULL ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_rnb_atraque update on "informix"
    .rnb_atraque referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rnb_atraque (atra_codigo,atra_emb_codigo,
    atra_correlativo,atra_anno,atra_fecha,atra_secretario,atra_comandante,
    atra_dependencia,atra_matricula,atra_emb_nombre,atra_propietario,
    atra_pro_direccion,atra_bandera,atra_pregistro,atra_fregistro,atra_imo,
    atra_indll,atra_tipo,atra_tipoatra,atra_tonb,atra_tonn,atra_capitan,
    atra_agente_mar,atra_procedente,desp_atra_codigo,desp_atra_emb_codigo,
    desp_atra_correlativo,desp_atra_anno,desp_atra_fecha,desp_atra_secretario,
    desp_atra_comandante,desp_atra_dependencia,desp_atra_matricula,desp_atra_emb_nombre,
    desp_atra_propietario,desp_atra_pro_direccion,desp_atra_bandera,desp_atra_pregistro,
    desp_atra_fregistro,desp_atra_imo,desp_atra_indll,desp_atra_tipo,
    desp_atra_tipoatra,desp_atra_tonb,desp_atra_tonn,desp_atra_capitan,
    desp_atra_agente_mar,desp_atra_procedente,accion,usuario,hora)  values 
    (antes.atra_codigo ,antes.atra_emb_codigo ,antes.atra_correlativo 
    ,antes.atra_anno ,antes.atra_fecha ,antes.atra_secretario ,antes.atra_comandante 
    ,antes.atra_dependencia ,antes.atra_matricula ,antes.atra_emb_nombre 
    ,antes.atra_propietario ,antes.atra_pro_direccion ,antes.atra_bandera 
    ,antes.atra_pregistro ,antes.atra_fregistro ,antes.atra_imo ,antes.atra_indll 
    ,antes.atra_tipo ,antes.atra_tipoatra ,antes.atra_tonb ,antes.atra_tonn 
    ,antes.atra_capitan ,antes.atra_agente_mar ,antes.atra_procedente 
    ,luego.atra_codigo ,luego.atra_emb_codigo ,luego.atra_correlativo 
    ,luego.atra_anno ,luego.atra_fecha ,luego.atra_secretario ,luego.atra_comandante 
    ,luego.atra_dependencia ,luego.atra_matricula ,luego.atra_emb_nombre 
    ,luego.atra_propietario ,luego.atra_pro_direccion ,luego.atra_bandera 
    ,luego.atra_pregistro ,luego.atra_fregistro ,luego.atra_imo ,luego.atra_indll 
    ,luego.atra_tipo ,luego.atra_tipoatra ,luego.atra_tonb ,luego.atra_tonn 
    ,luego.atra_capitan ,luego.atra_agente_mar ,luego.atra_procedente 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_peva_detpersonal insert on "informix"
    .peva_detpersonal referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_detpersonal (det_noevaas,
    det_catalogo,det_grado,det_puesto,det_tiempo,det_depen,det_clasificacion,
    desp_det_noevaas,desp_det_catalogo,desp_det_grado,desp_det_puesto,
    desp_det_tiempo,desp_det_depen,desp_det_clasificacion,accion,usuario,
    hora)  values ('' ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,luego.det_noevaas 
    ,luego.det_catalogo ,luego.det_grado ,luego.det_puesto ,luego.det_tiempo 
    ,luego.det_depen ,luego.det_clasificacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_peva_detpersonal delete on "informix"
    .peva_detpersonal referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_detpersonal (det_noevaas,
    det_catalogo,det_grado,det_puesto,det_tiempo,det_depen,det_clasificacion,
    desp_det_noevaas,desp_det_catalogo,desp_det_grado,desp_det_puesto,
    desp_det_tiempo,desp_det_depen,desp_det_clasificacion,accion,usuario,
    hora)  values (antes.det_noevaas ,antes.det_catalogo ,antes.det_grado 
    ,antes.det_puesto ,antes.det_tiempo ,antes.det_depen ,antes.det_clasificacion 
    ,'' ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_peva_detpersonal update on "informix"
    .peva_detpersonal referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_detpersonal (det_noevaas,
    det_catalogo,det_grado,det_puesto,det_tiempo,det_depen,det_clasificacion,
    desp_det_noevaas,desp_det_catalogo,desp_det_grado,desp_det_puesto,
    desp_det_tiempo,desp_det_depen,desp_det_clasificacion,accion,usuario,
    hora)  values (antes.det_noevaas ,antes.det_catalogo ,antes.det_grado 
    ,antes.det_puesto ,antes.det_tiempo ,antes.det_depen ,antes.det_clasificacion 
    ,luego.det_noevaas ,luego.det_catalogo ,luego.det_grado ,luego.det_puesto 
    ,luego.det_tiempo ,luego.det_depen ,luego.det_clasificacion ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_peva_certificaas insert on "informix"
    .peva_certificaas referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_certificaas (cer_noevaas,
    cer_catalogo,cer_status,cer_certificador,cer_fecha,cer_obs,desp_cer_noevaas,
    desp_cer_catalogo,desp_cer_status,desp_cer_certificador,desp_cer_fecha,
    desp_cer_obs,accion,usuario,hora)  values ('' ,NULL ,NULL ,NULL ,''
     ,'' ,luego.cer_noevaas ,luego.cer_catalogo ,luego.cer_status ,luego.cer_certificador 
    ,luego.cer_fecha ,luego.cer_obs ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_peva_certificaas delete on "informix"
    .peva_certificaas referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_certificaas (cer_noevaas,
    cer_catalogo,cer_status,cer_certificador,cer_fecha,cer_obs,desp_cer_noevaas,
    desp_cer_catalogo,desp_cer_status,desp_cer_certificador,desp_cer_fecha,
    desp_cer_obs,accion,usuario,hora)  values (antes.cer_noevaas ,antes.cer_catalogo 
    ,antes.cer_status ,antes.cer_certificador ,antes.cer_fecha ,antes.cer_obs 
    ,'' ,NULL ,NULL ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_peva_certificaas update on "informix"
    .peva_certificaas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_certificaas (cer_noevaas,
    cer_catalogo,cer_status,cer_certificador,cer_fecha,cer_obs,desp_cer_noevaas,
    desp_cer_catalogo,desp_cer_status,desp_cer_certificador,desp_cer_fecha,
    desp_cer_obs,accion,usuario,hora)  values (antes.cer_noevaas ,antes.cer_catalogo 
    ,antes.cer_status ,antes.cer_certificador ,antes.cer_fecha ,antes.cer_obs 
    ,luego.cer_noevaas ,luego.cer_catalogo ,luego.cer_status ,luego.cer_certificador 
    ,luego.cer_fecha ,luego.cer_obs ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_peva_detbolconcep insert on "informix"
    .peva_detbolconcep referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_detbolconcep (con_noevaas,
    con_evaluado,con_periodo,con_pregunta,con_nota,desp_con_noevaas,desp_con_evaluado,
    desp_con_periodo,desp_con_pregunta,desp_con_nota,accion,usuario,hora) 
     values ('' ,NULL ,NULL ,NULL ,NULL ,luego.con_noevaas ,luego.con_evaluado 
    ,luego.con_periodo ,luego.con_pregunta ,luego.con_nota ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_peva_detbolconcep delete on "informix"
    .peva_detbolconcep referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_detbolconcep (con_noevaas,
    con_evaluado,con_periodo,con_pregunta,con_nota,desp_con_noevaas,desp_con_evaluado,
    desp_con_periodo,desp_con_pregunta,desp_con_nota,accion,usuario,hora) 
     values (antes.con_noevaas ,antes.con_evaluado ,antes.con_periodo 
    ,antes.con_pregunta ,antes.con_nota ,'' ,NULL ,NULL ,NULL ,NULL ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_peva_detbolconcep update on "informix"
    .peva_detbolconcep referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_detbolconcep (con_noevaas,
    con_evaluado,con_periodo,con_pregunta,con_nota,desp_con_noevaas,desp_con_evaluado,
    desp_con_periodo,desp_con_pregunta,desp_con_nota,accion,usuario,hora) 
     values (antes.con_noevaas ,antes.con_evaluado ,antes.con_periodo 
    ,antes.con_pregunta ,antes.con_nota ,luego.con_noevaas ,luego.con_evaluado 
    ,luego.con_periodo ,luego.con_pregunta ,luego.con_nota ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_peva_boletasas insert on "informix"
    .peva_boletasas referencing new as luego
    for each row
        (
        insert into "informix".aud_peva_boletasas (eva_noevaas,
    eva_catalogo,eva_periodo,eva_perfil,eva_eval1,eva_eval2,eva_eval3,
    eva_eval4,eva_pafe,eva_demeritos,eva_arrestos,eva_subt_salud,eva_subt_concep,
    eva_total,eva_catg1,eva_catcomte,eva_obs,desp_eva_noevaas,desp_eva_catalogo,
    desp_eva_periodo,desp_eva_perfil,desp_eva_eval1,desp_eva_eval2,desp_eva_eval3,
    desp_eva_eval4,desp_eva_pafe,desp_eva_demeritos,desp_eva_arrestos,
    desp_eva_subt_salud,desp_eva_subt_concep,desp_eva_total,desp_eva_catg1,
    desp_eva_catcomte,desp_eva_obs,accion,usuario,hora)  values ('' ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,'' ,luego.eva_noevaas ,luego.eva_catalogo ,luego.eva_periodo 
    ,luego.eva_perfil ,luego.eva_eval1 ,luego.eva_eval2 ,luego.eva_eval3 
    ,luego.eva_eval4 ,luego.eva_pafe ,luego.eva_demeritos ,luego.eva_arrestos 
    ,luego.eva_subt_salud ,luego.eva_subt_concep ,luego.eva_total ,luego.eva_catg1 
    ,luego.eva_catcomte ,luego.eva_obs ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_peva_boletasas delete on "informix"
    .peva_boletasas referencing old as antes
    for each row
        (
        insert into "informix".aud_peva_boletasas (eva_noevaas,
    eva_catalogo,eva_periodo,eva_perfil,eva_eval1,eva_eval2,eva_eval3,
    eva_eval4,eva_pafe,eva_demeritos,eva_arrestos,eva_subt_salud,eva_subt_concep,
    eva_total,eva_catg1,eva_catcomte,eva_obs,desp_eva_noevaas,desp_eva_catalogo,
    desp_eva_periodo,desp_eva_perfil,desp_eva_eval1,desp_eva_eval2,desp_eva_eval3,
    desp_eva_eval4,desp_eva_pafe,desp_eva_demeritos,desp_eva_arrestos,
    desp_eva_subt_salud,desp_eva_subt_concep,desp_eva_total,desp_eva_catg1,
    desp_eva_catcomte,desp_eva_obs,accion,usuario,hora)  values (antes.eva_noevaas 
    ,antes.eva_catalogo ,antes.eva_periodo ,antes.eva_perfil ,antes.eva_eval1 
    ,antes.eva_eval2 ,antes.eva_eval3 ,antes.eva_eval4 ,antes.eva_pafe 
    ,antes.eva_demeritos ,antes.eva_arrestos ,antes.eva_subt_salud ,antes.eva_subt_concep 
    ,antes.eva_total ,antes.eva_catg1 ,antes.eva_catcomte ,antes.eva_obs 
    ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_peva_boletasas update on "informix"
    .peva_boletasas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_peva_boletasas (eva_noevaas,
    eva_catalogo,eva_periodo,eva_perfil,eva_eval1,eva_eval2,eva_eval3,
    eva_eval4,eva_pafe,eva_demeritos,eva_arrestos,eva_subt_salud,eva_subt_concep,
    eva_total,eva_catg1,eva_catcomte,eva_obs,desp_eva_noevaas,desp_eva_catalogo,
    desp_eva_periodo,desp_eva_perfil,desp_eva_eval1,desp_eva_eval2,desp_eva_eval3,
    desp_eva_eval4,desp_eva_pafe,desp_eva_demeritos,desp_eva_arrestos,
    desp_eva_subt_salud,desp_eva_subt_concep,desp_eva_total,desp_eva_catg1,
    desp_eva_catcomte,desp_eva_obs,accion,usuario,hora)  values (antes.eva_noevaas 
    ,antes.eva_catalogo ,antes.eva_periodo ,antes.eva_perfil ,antes.eva_eval1 
    ,antes.eva_eval2 ,antes.eva_eval3 ,antes.eva_eval4 ,antes.eva_pafe 
    ,antes.eva_demeritos ,antes.eva_arrestos ,antes.eva_subt_salud ,antes.eva_subt_concep 
    ,antes.eva_total ,antes.eva_catg1 ,antes.eva_catcomte ,antes.eva_obs 
    ,luego.eva_noevaas ,luego.eva_catalogo ,luego.eva_periodo ,luego.eva_perfil 
    ,luego.eva_eval1 ,luego.eva_eval2 ,luego.eva_eval3 ,luego.eva_eval4 
    ,luego.eva_pafe ,luego.eva_demeritos ,luego.eva_arrestos ,luego.eva_subt_salud 
    ,luego.eva_subt_concep ,luego.eva_total ,luego.eva_catg1 ,luego.eva_catcomte 
    ,luego.eva_obs ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_larm_inventario insert on "informix"
    .larm_inventario referencing new as luego
    for each row
        (
        insert into "informix".aud_larm_inventario (inv_id,inv_numero,
    inv_tipo,inv_lote,inv_dependencia,imv_fecha,inv_status,inv_map,inv_museo,
    desp_inv_id,desp_inv_numero,desp_inv_tipo,desp_inv_lote,desp_inv_dependencia,
    desp_imv_fecha,desp_inv_status,desp_inv_map,desp_inv_museo,accion,
    usuario,hora)  values (NULL ,'' ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,luego.inv_id 
    ,luego.inv_numero ,luego.inv_tipo ,luego.inv_lote ,luego.inv_dependencia 
    ,luego.imv_fecha ,luego.inv_status ,luego.inv_map ,luego.inv_museo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_larm_inventario delete on "informix"
    .larm_inventario referencing old as antes
    for each row
        (
        insert into "informix".aud_larm_inventario (inv_id,inv_numero,
    inv_tipo,inv_lote,inv_dependencia,imv_fecha,inv_status,inv_map,inv_museo,
    desp_inv_id,desp_inv_numero,desp_inv_tipo,desp_inv_lote,desp_inv_dependencia,
    desp_imv_fecha,desp_inv_status,desp_inv_map,desp_inv_museo,accion,
    usuario,hora)  values (antes.inv_id ,antes.inv_numero ,antes.inv_tipo 
    ,antes.inv_lote ,antes.inv_dependencia ,antes.imv_fecha ,antes.inv_status 
    ,antes.inv_map ,antes.inv_museo ,NULL ,'' ,NULL ,NULL ,NULL ,'' ,'' 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_larm_inventario update on "informix"
    .larm_inventario referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_larm_inventario (inv_id,inv_numero,
    inv_tipo,inv_lote,inv_dependencia,imv_fecha,inv_status,inv_map,inv_museo,
    desp_inv_id,desp_inv_numero,desp_inv_tipo,desp_inv_lote,desp_inv_dependencia,
    desp_imv_fecha,desp_inv_status,desp_inv_map,desp_inv_museo,accion,
    usuario,hora)  values (antes.inv_id ,antes.inv_numero ,antes.inv_tipo 
    ,antes.inv_lote ,antes.inv_dependencia ,antes.imv_fecha ,antes.inv_status 
    ,antes.inv_map ,antes.inv_museo ,luego.inv_id ,luego.inv_numero ,
    luego.inv_tipo ,luego.inv_lote ,luego.inv_dependencia ,luego.imv_fecha 
    ,luego.inv_status ,luego.inv_map ,luego.inv_museo ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_larm_hallazgo insert on "informix"
    .larm_hallazgo referencing new as luego
    for each row
        (
        insert into "informix".aud_larm_hallazgo (hall_cat,hall_numero,
    hall_fecha,hall_texto,hall_documento,hall_status,hall_usuario,desp_hall_cat,
    desp_hall_numero,desp_hall_fecha,desp_hall_texto,desp_hall_documento,
    desp_hall_status,desp_hall_usuario,accion,usuario,hora)  values (NULL 
    ,NULL ,'' ,'' ,'' ,'' ,NULL ,luego.hall_cat ,luego.hall_numero ,luego.hall_fecha 
    ,luego.hall_texto ,luego.hall_documento ,luego.hall_status ,luego.hall_usuario 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_larm_hallazgo delete on "informix"
    .larm_hallazgo referencing old as antes
    for each row
        (
        insert into "informix".aud_larm_hallazgo (hall_cat,hall_numero,
    hall_fecha,hall_texto,hall_documento,hall_status,hall_usuario,desp_hall_cat,
    desp_hall_numero,desp_hall_fecha,desp_hall_texto,desp_hall_documento,
    desp_hall_status,desp_hall_usuario,accion,usuario,hora)  values (antes.hall_cat 
    ,antes.hall_numero ,antes.hall_fecha ,antes.hall_texto ,antes.hall_documento 
    ,antes.hall_status ,antes.hall_usuario ,NULL ,NULL ,'' ,'' ,'' ,'' ,NULL 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_larm_hallazgo update on "informix"
    .larm_hallazgo referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_larm_hallazgo (hall_cat,hall_numero,
    hall_fecha,hall_texto,hall_documento,hall_status,hall_usuario,desp_hall_cat,
    desp_hall_numero,desp_hall_fecha,desp_hall_texto,desp_hall_documento,
    desp_hall_status,desp_hall_usuario,accion,usuario,hora)  values (antes.hall_cat 
    ,antes.hall_numero ,antes.hall_fecha ,antes.hall_texto ,antes.hall_documento 
    ,antes.hall_status ,antes.hall_usuario ,luego.hall_cat ,luego.hall_numero 
    ,luego.hall_fecha ,luego.hall_texto ,luego.hall_documento ,luego.hall_status 
    ,luego.hall_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lveh_neumaticos insert on "informix"
    .lveh_neumaticos referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_neumaticos (neu_code,
    neu_desc,desp_neu_code,desp_neu_desc,accion,usuario,hora)  values 
    (NULL ,'' ,luego.neu_code ,luego.neu_desc ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_lveh_neumaticos delete on "informix"
    .lveh_neumaticos referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_neumaticos (neu_code,
    neu_desc,desp_neu_code,desp_neu_desc,accion,usuario,hora)  values 
    (antes.neu_code ,antes.neu_desc ,NULL ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_lveh_neumaticos update on "informix"
    .lveh_neumaticos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_neumaticos (neu_code,
    neu_desc,desp_neu_code,desp_neu_desc,accion,usuario,hora)  values 
    (antes.neu_code ,antes.neu_desc ,luego.neu_code ,luego.neu_desc ,
    'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lveh_det_neumaticos insert on "informix"
    .lveh_det_neumaticos referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_det_neumaticos (det_neu_catalogo,
    det_neu_llanta,det_neu_serial,det_neu_fecha,det_neu_cantidad,det_neu_rin,
    det_neu_llanta2,desp_det_neu_catalogo,desp_det_neu_llanta,desp_det_neu_serial,
    desp_det_neu_fecha,desp_det_neu_cantidad,desp_det_neu_rin,desp_det_neu_llanta2,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL 
    ,luego.det_neu_catalogo ,luego.det_neu_llanta ,luego.det_neu_serial 
    ,luego.det_neu_fecha ,luego.det_neu_cantidad ,luego.det_neu_rin ,
    luego.det_neu_llanta2 ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lveh_det_neumaticos delete on "informix"
    .lveh_det_neumaticos referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_det_neumaticos (det_neu_catalogo,
    det_neu_llanta,det_neu_serial,det_neu_fecha,det_neu_cantidad,det_neu_rin,
    det_neu_llanta2,desp_det_neu_catalogo,desp_det_neu_llanta,desp_det_neu_serial,
    desp_det_neu_fecha,desp_det_neu_cantidad,desp_det_neu_rin,desp_det_neu_llanta2,
    accion,usuario,hora)  values (antes.det_neu_catalogo ,antes.det_neu_llanta 
    ,antes.det_neu_serial ,antes.det_neu_fecha ,antes.det_neu_cantidad 
    ,antes.det_neu_rin ,antes.det_neu_llanta2 ,NULL ,NULL ,NULL ,'' ,NULL 
    ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lveh_det_neumaticos update on "informix"
    .lveh_det_neumaticos referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_lveh_det_neumaticos (det_neu_catalogo,
    det_neu_llanta,det_neu_serial,det_neu_fecha,det_neu_cantidad,det_neu_rin,
    det_neu_llanta2,desp_det_neu_catalogo,desp_det_neu_llanta,desp_det_neu_serial,
    desp_det_neu_fecha,desp_det_neu_cantidad,desp_det_neu_rin,desp_det_neu_llanta2,
    accion,usuario,hora)  values (antes.det_neu_catalogo ,antes.det_neu_llanta 
    ,antes.det_neu_serial ,antes.det_neu_fecha ,antes.det_neu_cantidad 
    ,antes.det_neu_rin ,antes.det_neu_llanta2 ,luego.det_neu_catalogo 
    ,luego.det_neu_llanta ,luego.det_neu_serial ,luego.det_neu_fecha 
    ,luego.det_neu_cantidad ,luego.det_neu_rin ,luego.det_neu_llanta2 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lveh_det_plaza insert on "informix"
    .lveh_det_plaza referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_det_plaza (det_pla_catalogo,
    det_pla_plaza,det_pla_fecha,desp_det_pla_catalogo,desp_det_pla_plaza,
    desp_det_pla_fecha,accion,usuario,hora)  values (NULL ,NULL ,'' ,luego.det_pla_catalogo 
    ,luego.det_pla_plaza ,luego.det_pla_fecha ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_lveh_det_plaza delete on "informix"
    .lveh_det_plaza referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_det_plaza (det_pla_catalogo,
    det_pla_plaza,det_pla_fecha,desp_det_pla_catalogo,desp_det_pla_plaza,
    desp_det_pla_fecha,accion,usuario,hora)  values (antes.det_pla_catalogo 
    ,antes.det_pla_plaza ,antes.det_pla_fecha ,NULL ,NULL ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_lveh_det_plaza update on "informix"
    .lveh_det_plaza referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_det_plaza (det_pla_catalogo,
    det_pla_plaza,det_pla_fecha,desp_det_pla_catalogo,desp_det_pla_plaza,
    desp_det_pla_fecha,accion,usuario,hora)  values (antes.det_pla_catalogo 
    ,antes.det_pla_plaza ,antes.det_pla_fecha ,luego.det_pla_catalogo 
    ,luego.det_pla_plaza ,luego.det_pla_fecha ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_lveh_det_otros insert on "informix"
    .lveh_det_otros referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_det_otros (det_otros_catalogo,
    det_otros_caracteristica,det_otros_serial,det_otros_fecha,det_otros_dato,
    desp_det_otros_catalogo,desp_det_otros_caracteristica,desp_det_otros_serial,
    desp_det_otros_fecha,desp_det_otros_dato,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,'' ,'' ,luego.det_otros_catalogo ,luego.det_otros_caracteristica 
    ,luego.det_otros_serial ,luego.det_otros_fecha ,luego.det_otros_dato 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lveh_det_otros delete on "informix"
    .lveh_det_otros referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_det_otros (det_otros_catalogo,
    det_otros_caracteristica,det_otros_serial,det_otros_fecha,det_otros_dato,
    desp_det_otros_catalogo,desp_det_otros_caracteristica,desp_det_otros_serial,
    desp_det_otros_fecha,desp_det_otros_dato,accion,usuario,hora)  values 
    (antes.det_otros_catalogo ,antes.det_otros_caracteristica ,antes.det_otros_serial 
    ,antes.det_otros_fecha ,antes.det_otros_dato ,NULL ,NULL ,NULL ,''
     ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lveh_det_otros update on "informix"
    .lveh_det_otros referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_det_otros (det_otros_catalogo,
    det_otros_caracteristica,det_otros_serial,det_otros_fecha,det_otros_dato,
    desp_det_otros_catalogo,desp_det_otros_caracteristica,desp_det_otros_serial,
    desp_det_otros_fecha,desp_det_otros_dato,accion,usuario,hora)  values 
    (antes.det_otros_catalogo ,antes.det_otros_caracteristica ,antes.det_otros_serial 
    ,antes.det_otros_fecha ,antes.det_otros_dato ,luego.det_otros_catalogo 
    ,luego.det_otros_caracteristica ,luego.det_otros_serial ,luego.det_otros_fecha 
    ,luego.det_otros_dato ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lveh_estilo insert on "informix"
    .lveh_estilo referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_estilo (estilo_code,estilo_desc,
    estilo_marcas,desp_estilo_code,desp_estilo_desc,desp_estilo_marcas,
    accion,usuario,hora)  values (NULL ,'' ,NULL ,luego.estilo_code ,luego.estilo_desc 
    ,luego.estilo_marcas ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lveh_estilo delete on "informix"
    .lveh_estilo referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_estilo (estilo_code,estilo_desc,
    estilo_marcas,desp_estilo_code,desp_estilo_desc,desp_estilo_marcas,
    accion,usuario,hora)  values (antes.estilo_code ,antes.estilo_desc 
    ,antes.estilo_marcas ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_lveh_estilo update on "informix"
    .lveh_estilo referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_estilo (estilo_code,estilo_desc,
    estilo_marcas,desp_estilo_code,desp_estilo_desc,desp_estilo_marcas,
    accion,usuario,hora)  values (antes.estilo_code ,antes.estilo_desc 
    ,antes.estilo_marcas ,luego.estilo_code ,luego.estilo_desc ,luego.estilo_marcas 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lveh_marcas insert on "informix"
    .lveh_marcas referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_marcas (mar_code,mar_desc,
    mar_tipo,desp_mar_code,desp_mar_desc,desp_mar_tipo,accion,usuario,
    hora)  values (NULL ,'' ,NULL ,luego.mar_code ,luego.mar_desc ,luego.mar_tipo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lveh_marcas delete on "informix"
    .lveh_marcas referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_marcas (mar_code,mar_desc,
    mar_tipo,desp_mar_code,desp_mar_desc,desp_mar_tipo,accion,usuario,
    hora)  values (antes.mar_code ,antes.mar_desc ,antes.mar_tipo ,NULL 
    ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lveh_marcas update on "informix"
    .lveh_marcas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_marcas (mar_code,mar_desc,
    mar_tipo,desp_mar_code,desp_mar_desc,desp_mar_tipo,accion,usuario,
    hora)  values (antes.mar_code ,antes.mar_desc ,antes.mar_tipo ,luego.mar_code 
    ,luego.mar_desc ,luego.mar_tipo ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_lveh_tipo insert on "informix".lveh_tipo 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_tipo (tip_code,tip_desc,
    desp_tip_code,desp_tip_desc,accion,usuario,hora)  values (NULL ,''
     ,luego.tip_code ,luego.tip_desc ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_lveh_tipo delete on "informix".lveh_tipo 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_tipo (tip_code,tip_desc,
    desp_tip_code,desp_tip_desc,accion,usuario,hora)  values (antes.tip_code 
    ,antes.tip_desc ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_lveh_tipo update on "informix".lveh_tipo 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_tipo (tip_code,tip_desc,
    desp_tip_code,desp_tip_desc,accion,usuario,hora)  values (antes.tip_code 
    ,antes.tip_desc ,luego.tip_code ,luego.tip_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_lvehiculos insert on "informix".lvehiculos 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lvehiculos (veh_catalogo,veh_placas,
    veh_chasis,veh_vin,veh_serie,veh_tipo,veh_marca,veh_estilo,veh_modelo,
    veh_asientos,veh_puertas,veh_traccion,veh_ejes,veh_tonelaje,desp_veh_catalogo,
    desp_veh_placas,desp_veh_chasis,desp_veh_vin,desp_veh_serie,desp_veh_tipo,
    desp_veh_marca,desp_veh_estilo,desp_veh_modelo,desp_veh_asientos,
    desp_veh_puertas,desp_veh_traccion,desp_veh_ejes,desp_veh_tonelaje,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,luego.veh_catalogo ,luego.veh_placas 
    ,luego.veh_chasis ,luego.veh_vin ,luego.veh_serie ,luego.veh_tipo 
    ,luego.veh_marca ,luego.veh_estilo ,luego.veh_modelo ,luego.veh_asientos 
    ,luego.veh_puertas ,luego.veh_traccion ,luego.veh_ejes ,luego.veh_tonelaje 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lvehiculos delete on "informix".lvehiculos 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lvehiculos (veh_catalogo,veh_placas,
    veh_chasis,veh_vin,veh_serie,veh_tipo,veh_marca,veh_estilo,veh_modelo,
    veh_asientos,veh_puertas,veh_traccion,veh_ejes,veh_tonelaje,desp_veh_catalogo,
    desp_veh_placas,desp_veh_chasis,desp_veh_vin,desp_veh_serie,desp_veh_tipo,
    desp_veh_marca,desp_veh_estilo,desp_veh_modelo,desp_veh_asientos,
    desp_veh_puertas,desp_veh_traccion,desp_veh_ejes,desp_veh_tonelaje,
    accion,usuario,hora)  values (antes.veh_catalogo ,antes.veh_placas 
    ,antes.veh_chasis ,antes.veh_vin ,antes.veh_serie ,antes.veh_tipo 
    ,antes.veh_marca ,antes.veh_estilo ,antes.veh_modelo ,antes.veh_asientos 
    ,antes.veh_puertas ,antes.veh_traccion ,antes.veh_ejes ,antes.veh_tonelaje 
    ,NULL ,'' ,'' ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lvehiculos update on "informix".lvehiculos 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lvehiculos (veh_catalogo,veh_placas,
    veh_chasis,veh_vin,veh_serie,veh_tipo,veh_marca,veh_estilo,veh_modelo,
    veh_asientos,veh_puertas,veh_traccion,veh_ejes,veh_tonelaje,desp_veh_catalogo,
    desp_veh_placas,desp_veh_chasis,desp_veh_vin,desp_veh_serie,desp_veh_tipo,
    desp_veh_marca,desp_veh_estilo,desp_veh_modelo,desp_veh_asientos,
    desp_veh_puertas,desp_veh_traccion,desp_veh_ejes,desp_veh_tonelaje,
    accion,usuario,hora)  values (antes.veh_catalogo ,antes.veh_placas 
    ,antes.veh_chasis ,antes.veh_vin ,antes.veh_serie ,antes.veh_tipo 
    ,antes.veh_marca ,antes.veh_estilo ,antes.veh_modelo ,antes.veh_asientos 
    ,antes.veh_puertas ,antes.veh_traccion ,antes.veh_ejes ,antes.veh_tonelaje 
    ,luego.veh_catalogo ,luego.veh_placas ,luego.veh_chasis ,luego.veh_vin 
    ,luego.veh_serie ,luego.veh_tipo ,luego.veh_marca ,luego.veh_estilo 
    ,luego.veh_modelo ,luego.veh_asientos ,luego.veh_puertas ,luego.veh_traccion 
    ,luego.veh_ejes ,luego.veh_tonelaje ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_lveh_det_transmision insert on 
    "informix".lveh_det_transmision referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_det_transmision (det_trans_catalogo,
    det_trans_tipo,det_trans_fecha,det_trans_aceite,det_trans_aceitecant,
    desp_det_trans_catalogo,desp_det_trans_tipo,desp_det_trans_fecha,
    desp_det_trans_aceite,desp_det_trans_aceitecant,accion,usuario,hora) 
     values (NULL ,'' ,'' ,NULL ,NULL ,luego.det_trans_catalogo ,luego.det_trans_tipo 
    ,luego.det_trans_fecha ,luego.det_trans_aceite ,luego.det_trans_aceitecant 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lveh_det_transmision delete on 
    "informix".lveh_det_transmision referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_det_transmision (det_trans_catalogo,
    det_trans_tipo,det_trans_fecha,det_trans_aceite,det_trans_aceitecant,
    desp_det_trans_catalogo,desp_det_trans_tipo,desp_det_trans_fecha,
    desp_det_trans_aceite,desp_det_trans_aceitecant,accion,usuario,hora) 
     values (antes.det_trans_catalogo ,antes.det_trans_tipo ,antes.det_trans_fecha 
    ,antes.det_trans_aceite ,antes.det_trans_aceitecant ,NULL ,'' ,'' ,
    NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lveh_det_transmision update on 
    "informix".lveh_det_transmision referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_lveh_det_transmision (det_trans_catalogo,
    det_trans_tipo,det_trans_fecha,det_trans_aceite,det_trans_aceitecant,
    desp_det_trans_catalogo,desp_det_trans_tipo,desp_det_trans_fecha,
    desp_det_trans_aceite,desp_det_trans_aceitecant,accion,usuario,hora) 
     values (antes.det_trans_catalogo ,antes.det_trans_tipo ,antes.det_trans_fecha 
    ,antes.det_trans_aceite ,antes.det_trans_aceitecant ,luego.det_trans_catalogo 
    ,luego.det_trans_tipo ,luego.det_trans_fecha ,luego.det_trans_aceite 
    ,luego.det_trans_aceitecant ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_lveh_det_motor insert on "informix"
    .lveh_det_motor referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_det_motor (det_mot_catalogo,
    det_mot_numero,det_mot_fecha,det_mot_cilindros,det_mot_cilindraje,
    det_mot_combustible,det_mot_autonomia,det_mot_aceite,det_mot_aceitecant,
    det_mot_eficiencia,desp_det_mot_catalogo,desp_det_mot_numero,desp_det_mot_fecha,
    desp_det_mot_cilindros,desp_det_mot_cilindraje,desp_det_mot_combustible,
    desp_det_mot_autonomia,desp_det_mot_aceite,desp_det_mot_aceitecant,
    desp_det_mot_eficiencia,accion,usuario,hora)  values (NULL ,'' ,'' 
    ,NULL ,'' ,NULL ,'' ,NULL ,NULL ,NULL ,luego.det_mot_catalogo ,luego.det_mot_numero 
    ,luego.det_mot_fecha ,luego.det_mot_cilindros ,luego.det_mot_cilindraje 
    ,luego.det_mot_combustible ,luego.det_mot_autonomia ,luego.det_mot_aceite 
    ,luego.det_mot_aceitecant ,luego.det_mot_eficiencia ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_lveh_det_motor delete on "informix"
    .lveh_det_motor referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_det_motor (det_mot_catalogo,
    det_mot_numero,det_mot_fecha,det_mot_cilindros,det_mot_cilindraje,
    det_mot_combustible,det_mot_autonomia,det_mot_aceite,det_mot_aceitecant,
    det_mot_eficiencia,desp_det_mot_catalogo,desp_det_mot_numero,desp_det_mot_fecha,
    desp_det_mot_cilindros,desp_det_mot_cilindraje,desp_det_mot_combustible,
    desp_det_mot_autonomia,desp_det_mot_aceite,desp_det_mot_aceitecant,
    desp_det_mot_eficiencia,accion,usuario,hora)  values (antes.det_mot_catalogo 
    ,antes.det_mot_numero ,antes.det_mot_fecha ,antes.det_mot_cilindros 
    ,antes.det_mot_cilindraje ,antes.det_mot_combustible ,antes.det_mot_autonomia 
    ,antes.det_mot_aceite ,antes.det_mot_aceitecant ,antes.det_mot_eficiencia 
    ,NULL ,'' ,'' ,NULL ,'' ,NULL ,'' ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_lveh_det_motor update on "informix"
    .lveh_det_motor referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_det_motor (det_mot_catalogo,
    det_mot_numero,det_mot_fecha,det_mot_cilindros,det_mot_cilindraje,
    det_mot_combustible,det_mot_autonomia,det_mot_aceite,det_mot_aceitecant,
    det_mot_eficiencia,desp_det_mot_catalogo,desp_det_mot_numero,desp_det_mot_fecha,
    desp_det_mot_cilindros,desp_det_mot_cilindraje,desp_det_mot_combustible,
    desp_det_mot_autonomia,desp_det_mot_aceite,desp_det_mot_aceitecant,
    desp_det_mot_eficiencia,accion,usuario,hora)  values (antes.det_mot_catalogo 
    ,antes.det_mot_numero ,antes.det_mot_fecha ,antes.det_mot_cilindros 
    ,antes.det_mot_cilindraje ,antes.det_mot_combustible ,antes.det_mot_autonomia 
    ,antes.det_mot_aceite ,antes.det_mot_aceitecant ,antes.det_mot_eficiencia 
    ,luego.det_mot_catalogo ,luego.det_mot_numero ,luego.det_mot_fecha 
    ,luego.det_mot_cilindros ,luego.det_mot_cilindraje ,luego.det_mot_combustible 
    ,luego.det_mot_autonomia ,luego.det_mot_aceite ,luego.det_mot_aceitecant 
    ,luego.det_mot_eficiencia ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_lveh_solicitud insert on "informix"
    .lveh_solicitud referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_solicitud (sol_numero,
    sol_dependencia,sol_fecha,sol_tipo,sol_motivo,sol_observaciones,sol_estatus,
    sol_cat_comte,sol_cat_logistico,sol_cat_usuario,sol_grado,sol_referencia,
    desp_sol_numero,desp_sol_dependencia,desp_sol_fecha,desp_sol_tipo,
    desp_sol_motivo,desp_sol_observaciones,desp_sol_estatus,desp_sol_cat_comte,
    desp_sol_cat_logistico,desp_sol_cat_usuario,desp_sol_grado,desp_sol_referencia,
    accion,usuario,hora)  values (NULL ,NULL ,'' ,NULL ,'' ,'' ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,'' ,luego.sol_numero ,luego.sol_dependencia ,luego.sol_fecha 
    ,luego.sol_tipo ,luego.sol_motivo ,luego.sol_observaciones ,luego.sol_estatus 
    ,luego.sol_cat_comte ,luego.sol_cat_logistico ,luego.sol_cat_usuario 
    ,luego.sol_grado ,luego.sol_referencia ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_lveh_solicitud delete on "informix"
    .lveh_solicitud referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_solicitud (sol_numero,
    sol_dependencia,sol_fecha,sol_tipo,sol_motivo,sol_observaciones,sol_estatus,
    sol_cat_comte,sol_cat_logistico,sol_cat_usuario,sol_grado,sol_referencia,
    desp_sol_numero,desp_sol_dependencia,desp_sol_fecha,desp_sol_tipo,
    desp_sol_motivo,desp_sol_observaciones,desp_sol_estatus,desp_sol_cat_comte,
    desp_sol_cat_logistico,desp_sol_cat_usuario,desp_sol_grado,desp_sol_referencia,
    accion,usuario,hora)  values (antes.sol_numero ,antes.sol_dependencia 
    ,antes.sol_fecha ,antes.sol_tipo ,antes.sol_motivo ,antes.sol_observaciones 
    ,antes.sol_estatus ,antes.sol_cat_comte ,antes.sol_cat_logistico 
    ,antes.sol_cat_usuario ,antes.sol_grado ,antes.sol_referencia ,NULL 
    ,NULL ,'' ,NULL ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,'D' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".act_lveh_solicitud update on "informix"
    .lveh_solicitud referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_solicitud (sol_numero,
    sol_dependencia,sol_fecha,sol_tipo,sol_motivo,sol_observaciones,sol_estatus,
    sol_cat_comte,sol_cat_logistico,sol_cat_usuario,sol_grado,sol_referencia,
    desp_sol_numero,desp_sol_dependencia,desp_sol_fecha,desp_sol_tipo,
    desp_sol_motivo,desp_sol_observaciones,desp_sol_estatus,desp_sol_cat_comte,
    desp_sol_cat_logistico,desp_sol_cat_usuario,desp_sol_grado,desp_sol_referencia,
    accion,usuario,hora)  values (antes.sol_numero ,antes.sol_dependencia 
    ,antes.sol_fecha ,antes.sol_tipo ,antes.sol_motivo ,antes.sol_observaciones 
    ,antes.sol_estatus ,antes.sol_cat_comte ,antes.sol_cat_logistico 
    ,antes.sol_cat_usuario ,antes.sol_grado ,antes.sol_referencia ,luego.sol_numero 
    ,luego.sol_dependencia ,luego.sol_fecha ,luego.sol_tipo ,luego.sol_motivo 
    ,luego.sol_observaciones ,luego.sol_estatus ,luego.sol_cat_comte 
    ,luego.sol_cat_logistico ,luego.sol_cat_usuario ,luego.sol_grado 
    ,luego.sol_referencia ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lveh_combustible insert on "informix"
    .lveh_combustible referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_combustible (com_code,
    com_desc,desp_com_code,desp_com_desc,accion,usuario,hora)  values 
    (NULL ,'' ,luego.com_code ,luego.com_desc ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_lveh_combustible delete on "informix"
    .lveh_combustible referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_combustible (com_code,
    com_desc,desp_com_code,desp_com_desc,accion,usuario,hora)  values 
    (antes.com_code ,antes.com_desc ,NULL ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_lveh_combustible update on "informix"
    .lveh_combustible referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_combustible (com_code,
    com_desc,desp_com_code,desp_com_desc,accion,usuario,hora)  values 
    (antes.com_code ,antes.com_desc ,luego.com_code ,luego.com_desc ,
    'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lveh_aceite insert on "informix"
    .lveh_aceite referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_aceite (ace_code,ace_desc,
    desp_ace_code,desp_ace_desc,accion,usuario,hora)  values (NULL ,''
     ,luego.ace_code ,luego.ace_desc ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_lveh_aceite delete on "informix"
    .lveh_aceite referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_aceite (ace_code,ace_desc,
    desp_ace_code,desp_ace_desc,accion,usuario,hora)  values (antes.ace_code 
    ,antes.ace_desc ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_lveh_aceite update on "informix"
    .lveh_aceite referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_aceite (ace_code,ace_desc,
    desp_ace_code,desp_ace_desc,accion,usuario,hora)  values (antes.ace_code 
    ,antes.ace_desc ,luego.ace_code ,luego.ace_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_lveh_nuevo insert on "informix".lveh_nuevo 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_nuevo (nue_solicitud,
    nue_dependencia,nue_placas,nue_chasis,nue_vin,nue_serie,nue_tipo_veh,
    nue_modelo,nue_marca,nue_asientos,nue_puertas,nue_traccion,nue_ejes,
    nue_tonelaje,nue_estilo,nue_motor,nue_cilindros,nue_cilindraje,nue_combustible,
    nue_autonomia,nue_aceite_motor,nue_cantidad_mot,nue_transmision,nue_aceite_trans,
    nue_cantidad_trans,nue_llantas,nue_tipo_llantas,nue_rin,nue_plaza,
    nue_dep,nue_estado,nue_situacion,nue_color,nue_uso,nue_adaptacion,
    nue_eficiencia,nue_llanta2,desp_nue_solicitud,desp_nue_dependencia,
    desp_nue_placas,desp_nue_chasis,desp_nue_vin,desp_nue_serie,desp_nue_tipo_veh,
    desp_nue_modelo,desp_nue_marca,desp_nue_asientos,desp_nue_puertas,
    desp_nue_traccion,desp_nue_ejes,desp_nue_tonelaje,desp_nue_estilo,
    desp_nue_motor,desp_nue_cilindros,desp_nue_cilindraje,desp_nue_combustible,
    desp_nue_autonomia,desp_nue_aceite_motor,desp_nue_cantidad_mot,desp_nue_transmision,
    desp_nue_aceite_trans,desp_nue_cantidad_trans,desp_nue_llantas,desp_nue_tipo_llantas,
    desp_nue_rin,desp_nue_plaza,desp_nue_dep,desp_nue_estado,desp_nue_situacion,
    desp_nue_color,desp_nue_uso,desp_nue_adaptacion,desp_nue_eficiencia,
    desp_nue_llanta2,accion,usuario,hora)  values (NULL ,NULL ,'' ,'' ,
    '' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL ,'' ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,'' ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,'' ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,luego.nue_solicitud ,luego.nue_dependencia 
    ,luego.nue_placas ,luego.nue_chasis ,luego.nue_vin ,luego.nue_serie 
    ,luego.nue_tipo_veh ,luego.nue_modelo ,luego.nue_marca ,luego.nue_asientos 
    ,luego.nue_puertas ,luego.nue_traccion ,luego.nue_ejes ,luego.nue_tonelaje 
    ,luego.nue_estilo ,luego.nue_motor ,luego.nue_cilindros ,luego.nue_cilindraje 
    ,luego.nue_combustible ,luego.nue_autonomia ,luego.nue_aceite_motor 
    ,luego.nue_cantidad_mot ,luego.nue_transmision ,luego.nue_aceite_trans 
    ,luego.nue_cantidad_trans ,luego.nue_llantas ,luego.nue_tipo_llantas 
    ,luego.nue_rin ,luego.nue_plaza ,luego.nue_dep ,luego.nue_estado 
    ,luego.nue_situacion ,luego.nue_color ,luego.nue_uso ,luego.nue_adaptacion 
    ,luego.nue_eficiencia ,luego.nue_llanta2 ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_lveh_nuevo delete on "informix".lveh_nuevo 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_nuevo (nue_solicitud,
    nue_dependencia,nue_placas,nue_chasis,nue_vin,nue_serie,nue_tipo_veh,
    nue_modelo,nue_marca,nue_asientos,nue_puertas,nue_traccion,nue_ejes,
    nue_tonelaje,nue_estilo,nue_motor,nue_cilindros,nue_cilindraje,nue_combustible,
    nue_autonomia,nue_aceite_motor,nue_cantidad_mot,nue_transmision,nue_aceite_trans,
    nue_cantidad_trans,nue_llantas,nue_tipo_llantas,nue_rin,nue_plaza,
    nue_dep,nue_estado,nue_situacion,nue_color,nue_uso,nue_adaptacion,
    nue_eficiencia,nue_llanta2,desp_nue_solicitud,desp_nue_dependencia,
    desp_nue_placas,desp_nue_chasis,desp_nue_vin,desp_nue_serie,desp_nue_tipo_veh,
    desp_nue_modelo,desp_nue_marca,desp_nue_asientos,desp_nue_puertas,
    desp_nue_traccion,desp_nue_ejes,desp_nue_tonelaje,desp_nue_estilo,
    desp_nue_motor,desp_nue_cilindros,desp_nue_cilindraje,desp_nue_combustible,
    desp_nue_autonomia,desp_nue_aceite_motor,desp_nue_cantidad_mot,desp_nue_transmision,
    desp_nue_aceite_trans,desp_nue_cantidad_trans,desp_nue_llantas,desp_nue_tipo_llantas,
    desp_nue_rin,desp_nue_plaza,desp_nue_dep,desp_nue_estado,desp_nue_situacion,
    desp_nue_color,desp_nue_uso,desp_nue_adaptacion,desp_nue_eficiencia,
    desp_nue_llanta2,accion,usuario,hora)  values (antes.nue_solicitud 
    ,antes.nue_dependencia ,antes.nue_placas ,antes.nue_chasis ,antes.nue_vin 
    ,antes.nue_serie ,antes.nue_tipo_veh ,antes.nue_modelo ,antes.nue_marca 
    ,antes.nue_asientos ,antes.nue_puertas ,antes.nue_traccion ,antes.nue_ejes 
    ,antes.nue_tonelaje ,antes.nue_estilo ,antes.nue_motor ,antes.nue_cilindros 
    ,antes.nue_cilindraje ,antes.nue_combustible ,antes.nue_autonomia 
    ,antes.nue_aceite_motor ,antes.nue_cantidad_mot ,antes.nue_transmision 
    ,antes.nue_aceite_trans ,antes.nue_cantidad_trans ,antes.nue_llantas 
    ,antes.nue_tipo_llantas ,antes.nue_rin ,antes.nue_plaza ,antes.nue_dep 
    ,antes.nue_estado ,antes.nue_situacion ,antes.nue_color ,antes.nue_uso 
    ,antes.nue_adaptacion ,antes.nue_eficiencia ,antes.nue_llanta2 ,NULL 
    ,NULL ,'' ,'' ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL 
    ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,'' ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,'' ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_lveh_nuevo update on "informix".lveh_nuevo 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_nuevo (nue_solicitud,
    nue_dependencia,nue_placas,nue_chasis,nue_vin,nue_serie,nue_tipo_veh,
    nue_modelo,nue_marca,nue_asientos,nue_puertas,nue_traccion,nue_ejes,
    nue_tonelaje,nue_estilo,nue_motor,nue_cilindros,nue_cilindraje,nue_combustible,
    nue_autonomia,nue_aceite_motor,nue_cantidad_mot,nue_transmision,nue_aceite_trans,
    nue_cantidad_trans,nue_llantas,nue_tipo_llantas,nue_rin,nue_plaza,
    nue_dep,nue_estado,nue_situacion,nue_color,nue_uso,nue_adaptacion,
    nue_eficiencia,nue_llanta2,desp_nue_solicitud,desp_nue_dependencia,
    desp_nue_placas,desp_nue_chasis,desp_nue_vin,desp_nue_serie,desp_nue_tipo_veh,
    desp_nue_modelo,desp_nue_marca,desp_nue_asientos,desp_nue_puertas,
    desp_nue_traccion,desp_nue_ejes,desp_nue_tonelaje,desp_nue_estilo,
    desp_nue_motor,desp_nue_cilindros,desp_nue_cilindraje,desp_nue_combustible,
    desp_nue_autonomia,desp_nue_aceite_motor,desp_nue_cantidad_mot,desp_nue_transmision,
    desp_nue_aceite_trans,desp_nue_cantidad_trans,desp_nue_llantas,desp_nue_tipo_llantas,
    desp_nue_rin,desp_nue_plaza,desp_nue_dep,desp_nue_estado,desp_nue_situacion,
    desp_nue_color,desp_nue_uso,desp_nue_adaptacion,desp_nue_eficiencia,
    desp_nue_llanta2,accion,usuario,hora)  values (antes.nue_solicitud 
    ,antes.nue_dependencia ,antes.nue_placas ,antes.nue_chasis ,antes.nue_vin 
    ,antes.nue_serie ,antes.nue_tipo_veh ,antes.nue_modelo ,antes.nue_marca 
    ,antes.nue_asientos ,antes.nue_puertas ,antes.nue_traccion ,antes.nue_ejes 
    ,antes.nue_tonelaje ,antes.nue_estilo ,antes.nue_motor ,antes.nue_cilindros 
    ,antes.nue_cilindraje ,antes.nue_combustible ,antes.nue_autonomia 
    ,antes.nue_aceite_motor ,antes.nue_cantidad_mot ,antes.nue_transmision 
    ,antes.nue_aceite_trans ,antes.nue_cantidad_trans ,antes.nue_llantas 
    ,antes.nue_tipo_llantas ,antes.nue_rin ,antes.nue_plaza ,antes.nue_dep 
    ,antes.nue_estado ,antes.nue_situacion ,antes.nue_color ,antes.nue_uso 
    ,antes.nue_adaptacion ,antes.nue_eficiencia ,antes.nue_llanta2 ,luego.nue_solicitud 
    ,luego.nue_dependencia ,luego.nue_placas ,luego.nue_chasis ,luego.nue_vin 
    ,luego.nue_serie ,luego.nue_tipo_veh ,luego.nue_modelo ,luego.nue_marca 
    ,luego.nue_asientos ,luego.nue_puertas ,luego.nue_traccion ,luego.nue_ejes 
    ,luego.nue_tonelaje ,luego.nue_estilo ,luego.nue_motor ,luego.nue_cilindros 
    ,luego.nue_cilindraje ,luego.nue_combustible ,luego.nue_autonomia 
    ,luego.nue_aceite_motor ,luego.nue_cantidad_mot ,luego.nue_transmision 
    ,luego.nue_aceite_trans ,luego.nue_cantidad_trans ,luego.nue_llantas 
    ,luego.nue_tipo_llantas ,luego.nue_rin ,luego.nue_plaza ,luego.nue_dep 
    ,luego.nue_estado ,luego.nue_situacion ,luego.nue_color ,luego.nue_uso 
    ,luego.nue_adaptacion ,luego.nue_eficiencia ,luego.nue_llanta2 ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lveh_det_documento insert on "informix"
    .lveh_det_documento referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_det_documento (det_doc_numero,
    det_doc_dependencia,det_doc_fecha,det_doc_referencia,det_doc_usuario,
    det_doc_grado,desp_det_doc_numero,desp_det_doc_dependencia,desp_det_doc_fecha,
    desp_det_doc_referencia,desp_det_doc_usuario,desp_det_doc_grado,accion,
    usuario,hora)  values (NULL ,NULL ,'' ,'' ,NULL ,NULL ,luego.det_doc_numero 
    ,luego.det_doc_dependencia ,luego.det_doc_fecha ,luego.det_doc_referencia 
    ,luego.det_doc_usuario ,luego.det_doc_grado ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_lveh_det_documento delete on "informix"
    .lveh_det_documento referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_det_documento (det_doc_numero,
    det_doc_dependencia,det_doc_fecha,det_doc_referencia,det_doc_usuario,
    det_doc_grado,desp_det_doc_numero,desp_det_doc_dependencia,desp_det_doc_fecha,
    desp_det_doc_referencia,desp_det_doc_usuario,desp_det_doc_grado,accion,
    usuario,hora)  values (antes.det_doc_numero ,antes.det_doc_dependencia 
    ,antes.det_doc_fecha ,antes.det_doc_referencia ,antes.det_doc_usuario 
    ,antes.det_doc_grado ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_lveh_det_documento update on "informix"
    .lveh_det_documento referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_lveh_det_documento (det_doc_numero,
    det_doc_dependencia,det_doc_fecha,det_doc_referencia,det_doc_usuario,
    det_doc_grado,desp_det_doc_numero,desp_det_doc_dependencia,desp_det_doc_fecha,
    desp_det_doc_referencia,desp_det_doc_usuario,desp_det_doc_grado,accion,
    usuario,hora)  values (antes.det_doc_numero ,antes.det_doc_dependencia 
    ,antes.det_doc_fecha ,antes.det_doc_referencia ,antes.det_doc_usuario 
    ,antes.det_doc_grado ,luego.det_doc_numero ,luego.det_doc_dependencia 
    ,luego.det_doc_fecha ,luego.det_doc_referencia ,luego.det_doc_usuario 
    ,luego.det_doc_grado ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lveh_caracteristicas insert on 
    "informix".lveh_caracteristicas referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_caracteristicas (car_code,
    car_desc,desp_car_code,desp_car_desc,accion,usuario,hora)  values 
    (NULL ,'' ,luego.car_code ,luego.car_desc ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_lveh_caracteristicas delete on 
    "informix".lveh_caracteristicas referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_caracteristicas (car_code,
    car_desc,desp_car_code,desp_car_desc,accion,usuario,hora)  values 
    (antes.car_code ,antes.car_desc ,NULL ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_lveh_caracteristicas update on 
    "informix".lveh_caracteristicas referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_lveh_caracteristicas (car_code,
    car_desc,desp_car_code,desp_car_desc,accion,usuario,hora)  values 
    (antes.car_code ,antes.car_desc ,luego.car_code ,luego.car_desc ,
    'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lveh_asigna insert on "informix"
    .lveh_asigna referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_asigna (veh_sol_numero,
    veh_sol_catalogo,desp_veh_sol_numero,desp_veh_sol_catalogo,accion,
    usuario,hora)  values (NULL ,'' ,luego.veh_sol_numero ,luego.veh_sol_catalogo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lveh_asigna delete on "informix"
    .lveh_asigna referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_asigna (veh_sol_numero,
    veh_sol_catalogo,desp_veh_sol_numero,desp_veh_sol_catalogo,accion,
    usuario,hora)  values (antes.veh_sol_numero ,antes.veh_sol_catalogo 
    ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lveh_asigna update on "informix"
    .lveh_asigna referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_asigna (veh_sol_numero,
    veh_sol_catalogo,desp_veh_sol_numero,desp_veh_sol_catalogo,accion,
    usuario,hora)  values (antes.veh_sol_numero ,antes.veh_sol_catalogo 
    ,luego.veh_sol_numero ,luego.veh_sol_catalogo ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_lveh_obser insert on "informix".lveh_obser 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_obser (obs_cat,obs_num,
    obs_fecha,obs_texto,obs_usuario,desp_obs_cat,desp_obs_num,desp_obs_fecha,
    desp_obs_texto,desp_obs_usuario,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,NULL ,' ' ,luego.obs_cat ,luego.obs_num ,luego.obs_fecha 
    ,luego.obs_texto ,luego.obs_usuario ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_lveh_obser update on "informix".lveh_obser 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_obser (obs_cat,obs_num,
    obs_fecha,obs_texto,obs_usuario,desp_obs_cat,desp_obs_num,desp_obs_fecha,
    desp_obs_texto,desp_obs_usuario,accion,usuario,hora)  values (antes.obs_cat 
    ,antes.obs_num ,antes.obs_fecha ,antes.obs_texto ,antes.obs_usuario 
    ,luego.obs_cat ,luego.obs_num ,luego.obs_fecha ,luego.obs_texto ,
    luego.obs_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lveh_obser delete on "informix".lveh_obser 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_obser (obs_cat,obs_num,
    obs_fecha,obs_texto,obs_usuario,desp_obs_cat,desp_obs_num,desp_obs_fecha,
    desp_obs_texto,desp_obs_usuario,accion,usuario,hora)  values (antes.obs_cat 
    ,antes.obs_num ,antes.obs_fecha ,antes.obs_texto ,antes.obs_usuario 
    ,NULL ,NULL ,NULL ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_lveh_his insert on "informix".lveh_his 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_his (his_cat,his_dep,
    his_fec_ini,his_fec_fin,his_usuario,desp_his_cat,desp_his_dep,desp_his_fec_ini,
    desp_his_fec_fin,desp_his_usuario,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,NULL ,' ' ,luego.his_cat ,luego.his_dep ,luego.his_fec_ini 
    ,luego.his_fec_fin ,luego.his_usuario ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_lveh_his update on "informix".lveh_his 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_his (his_cat,his_dep,
    his_fec_ini,his_fec_fin,his_usuario,desp_his_cat,desp_his_dep,desp_his_fec_ini,
    desp_his_fec_fin,desp_his_usuario,accion,usuario,hora)  values (antes.his_cat 
    ,antes.his_dep ,antes.his_fec_ini ,antes.his_fec_fin ,antes.his_usuario 
    ,luego.his_cat ,luego.his_dep ,luego.his_fec_ini ,luego.his_fec_fin 
    ,luego.his_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lveh_his delete on "informix".lveh_his 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_his (his_cat,his_dep,
    his_fec_ini,his_fec_fin,his_usuario,desp_his_cat,desp_his_dep,desp_his_fec_ini,
    desp_his_fec_fin,desp_his_usuario,accion,usuario,hora)  values (antes.his_cat 
    ,antes.his_dep ,antes.his_fec_ini ,antes.his_fec_fin ,antes.his_usuario 
    ,NULL ,NULL ,NULL ,NULL ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_lveh_situacion insert on "informix"
    .lveh_situacion referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_situacion (sit_codigo,
    sit_desc_lg,sit_desc_md,sit_desc_ct,desp_sit_codigo,desp_sit_desc_lg,
    desp_sit_desc_md,desp_sit_desc_ct,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,luego.sit_codigo ,luego.sit_desc_lg ,luego.sit_desc_md 
    ,luego.sit_desc_ct ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lveh_situacion delete on "informix"
    .lveh_situacion referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_situacion (sit_codigo,
    sit_desc_lg,sit_desc_md,sit_desc_ct,desp_sit_codigo,desp_sit_desc_lg,
    desp_sit_desc_md,desp_sit_desc_ct,accion,usuario,hora)  values (antes.sit_codigo 
    ,antes.sit_desc_lg ,antes.sit_desc_md ,antes.sit_desc_ct ,NULL ,''
     ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lveh_situacion update on "informix"
    .lveh_situacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_situacion (sit_codigo,
    sit_desc_lg,sit_desc_md,sit_desc_ct,desp_sit_codigo,desp_sit_desc_lg,
    desp_sit_desc_md,desp_sit_desc_ct,accion,usuario,hora)  values (antes.sit_codigo 
    ,antes.sit_desc_lg ,antes.sit_desc_md ,antes.sit_desc_ct ,luego.sit_codigo 
    ,luego.sit_desc_lg ,luego.sit_desc_md ,luego.sit_desc_ct ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lveh_color insert on "informix".lveh_color 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lveh_color (col_codigo,col_desc_lg,
    col_desc_md,col_desc_ct,desp_col_codigo,desp_col_desc_lg,desp_col_desc_md,
    desp_col_desc_ct,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.col_codigo 
    ,luego.col_desc_lg ,luego.col_desc_md ,luego.col_desc_ct ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_lveh_color delete on "informix".lveh_color 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lveh_color (col_codigo,col_desc_lg,
    col_desc_md,col_desc_ct,desp_col_codigo,desp_col_desc_lg,desp_col_desc_md,
    desp_col_desc_ct,accion,usuario,hora)  values (antes.col_codigo ,
    antes.col_desc_lg ,antes.col_desc_md ,antes.col_desc_ct ,NULL ,'' 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lveh_color update on "informix".lveh_color 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lveh_color (col_codigo,col_desc_lg,
    col_desc_md,col_desc_ct,desp_col_codigo,desp_col_desc_lg,desp_col_desc_md,
    desp_col_desc_ct,accion,usuario,hora)  values (antes.col_codigo ,
    antes.col_desc_lg ,antes.col_desc_md ,antes.col_desc_ct ,luego.col_codigo 
    ,luego.col_desc_lg ,luego.col_desc_md ,luego.col_desc_ct ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_larm_obser insert on "informix".larm_obser 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_larm_obser (obs_cat,obs_num,
    obs_fecha,obs_texto,obs_usuario,desp_obs_cat,desp_obs_num,desp_obs_fecha,
    desp_obs_texto,desp_obs_usuario,accion,usuario,hora)  values (NULL 
    ,NULL ,'' ,NULL ,'' ,luego.obs_cat ,luego.obs_num ,luego.obs_fecha 
    ,luego.obs_texto ,luego.obs_usuario ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_larm_obser update on "informix".larm_obser 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_larm_obser (obs_cat,obs_num,
    obs_fecha,obs_texto,obs_usuario,desp_obs_cat,desp_obs_num,desp_obs_fecha,
    desp_obs_texto,desp_obs_usuario,accion,usuario,hora)  values (antes.obs_cat 
    ,antes.obs_num ,antes.obs_fecha ,antes.obs_texto ,antes.obs_usuario 
    ,luego.obs_cat ,luego.obs_num ,luego.obs_fecha ,luego.obs_texto ,
    luego.obs_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_larm_obser delete on "informix".larm_obser 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_larm_obser (obs_cat,obs_num,
    obs_fecha,obs_texto,obs_usuario,desp_obs_cat,desp_obs_num,desp_obs_fecha,
    desp_obs_texto,desp_obs_usuario,accion,usuario,hora)  values (antes.obs_cat 
    ,antes.obs_num ,antes.obs_fecha ,antes.obs_texto ,antes.obs_usuario 
    ,NULL ,NULL ,' ' ,'' ::lvarchar(32739) ,' ' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_ptel_personal insert on "informix"
    .ptel_personal referencing new as luego
    for each row
        (
        insert into "informix".aud_ptel_personal (tel_catalogo,
    tel_casa,tel_personal,tel_correo_of,tel_correo_per,desp_tel_catalogo,
    desp_tel_casa,desp_tel_personal,desp_tel_correo_of,desp_tel_correo_per,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,'' ,'' ,luego.tel_catalogo 
    ,luego.tel_casa ,luego.tel_personal ,luego.tel_correo_of ,luego.tel_correo_per 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ptel_personal delete on "informix"
    .ptel_personal referencing old as antes
    for each row
        (
        insert into "informix".aud_ptel_personal (tel_catalogo,
    tel_casa,tel_personal,tel_correo_of,tel_correo_per,desp_tel_catalogo,
    desp_tel_casa,desp_tel_personal,desp_tel_correo_of,desp_tel_correo_per,
    accion,usuario,hora)  values (antes.tel_catalogo ,antes.tel_casa 
    ,antes.tel_personal ,antes.tel_correo_of ,antes.tel_correo_per ,NULL 
    ,NULL ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ptel_personal update on "informix"
    .ptel_personal referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ptel_personal (tel_catalogo,
    tel_casa,tel_personal,tel_correo_of,tel_correo_per,desp_tel_catalogo,
    desp_tel_casa,desp_tel_personal,desp_tel_correo_of,desp_tel_correo_per,
    accion,usuario,hora)  values (antes.tel_catalogo ,antes.tel_casa 
    ,antes.tel_personal ,antes.tel_correo_of ,antes.tel_correo_per ,luego.tel_catalogo 
    ,luego.tel_casa ,luego.tel_personal ,luego.tel_correo_of ,luego.tel_correo_per 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ptel_depen insert on "informix".ptel_depen 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ptel_depen (tel_plaza,tel_depen,
    tel_planta1,tel_planta2,tel_centrix,tel_correo,desp_tel_plaza,desp_tel_depen,
    desp_tel_planta1,desp_tel_planta2,desp_tel_centrix,desp_tel_correo,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,'' ,luego.tel_plaza 
    ,luego.tel_depen ,luego.tel_planta1 ,luego.tel_planta2 ,luego.tel_centrix 
    ,luego.tel_correo ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ptel_depen delete on "informix".ptel_depen 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ptel_depen (tel_plaza,tel_depen,
    tel_planta1,tel_planta2,tel_centrix,tel_correo,desp_tel_plaza,desp_tel_depen,
    desp_tel_planta1,desp_tel_planta2,desp_tel_centrix,desp_tel_correo,
    accion,usuario,hora)  values (antes.tel_plaza ,antes.tel_depen ,antes.tel_planta1 
    ,antes.tel_planta2 ,antes.tel_centrix ,antes.tel_correo ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ptel_depen update on "informix".ptel_depen 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ptel_depen (tel_plaza,tel_depen,
    tel_planta1,tel_planta2,tel_centrix,tel_correo,desp_tel_plaza,desp_tel_depen,
    desp_tel_planta1,desp_tel_planta2,desp_tel_centrix,desp_tel_correo,
    accion,usuario,hora)  values (antes.tel_plaza ,antes.tel_depen ,antes.tel_planta1 
    ,antes.tel_planta2 ,antes.tel_centrix ,antes.tel_correo ,luego.tel_plaza 
    ,luego.tel_depen ,luego.tel_planta1 ,luego.tel_planta2 ,luego.tel_centrix 
    ,luego.tel_correo ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ptel_centrix update on "informix"
    .ptel_centrix referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ptel_centrix (tel_plaza,tel_centrix,
    desp_tel_plaza,desp_tel_centrix,accion,usuario,hora)  values (antes.tel_plaza 
    ,antes.tel_centrix ,luego.tel_plaza ,luego.tel_centrix ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_ptel_centrix delete on "informix"
    .ptel_centrix referencing old as antes
    for each row
        (
        insert into "informix".aud_ptel_centrix (tel_plaza,tel_centrix,
    desp_tel_plaza,desp_tel_centrix,accion,usuario,hora)  values (antes.tel_plaza 
    ,antes.tel_centrix ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_ptel_centrix insert on "informix"
    .ptel_centrix referencing new as luego
    for each row
        (
        insert into "informix".aud_ptel_centrix (tel_plaza,tel_centrix,
    desp_tel_plaza,desp_tel_centrix,accion,usuario,hora)  values (NULL 
    ,'' ,luego.tel_plaza ,luego.tel_centrix ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".upd_dfdes update on "informix".dfdes 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dfdes (antes1,antes2,antes3,
    antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,antes12,
    antes13,antes14,antes15,antes16,antes17,despues1,despues2,despues3,
    despues4,despues5,despues6,despues7,despues8,despues9,despues10,despues11,
    despues12,despues13,despues14,despues15,despues16,despues17,hora,
    accion,usuario,tabname)  values (antes.dfd_catalogo ,antes.dfd_codigo 
    ,antes.dfd_nu_reg ,antes.dfd_cod_control ,antes.dfd_tipo_desc ,antes.dfd_fec_ini 
    ,antes.dfd_ult_act ,antes.dfd_fec_cer ,antes.dfd_monto ,antes.dfd_saldo 
    ,antes.dfd_mensual ,antes.dfd_tot_cuotas ,antes.dfd_num_cuotas ,antes.dfd_documen 
    ,antes.dfd_codeudor ,antes.dfd_nom_bene ,antes.dfd_juz_con ,luego.dfd_catalogo 
    ,luego.dfd_codigo ,luego.dfd_nu_reg ,luego.dfd_cod_control ,luego.dfd_tipo_desc 
    ,luego.dfd_fec_ini ,luego.dfd_ult_act ,luego.dfd_fec_cer ,luego.dfd_monto 
    ,luego.dfd_saldo ,luego.dfd_mensual ,luego.dfd_tot_cuotas ,luego.dfd_num_cuotas 
    ,luego.dfd_documen ,luego.dfd_codeudor ,luego.dfd_nom_bene ,luego.dfd_juz_con 
    ,CURRENT year to fraction(3) ,'U' ,USER ,'dfdes' ));

create trigger "informix".ins_dfdes insert on "informix".dfdes 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_dfdes (antes1,antes2,antes3,
    antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,antes12,
    antes13,antes14,antes15,antes16,antes17,despues1,despues2,despues3,
    despues4,despues5,despues6,despues7,despues8,despues9,despues10,despues11,
    despues12,despues13,despues14,despues15,despues16,despues17,hora,
    accion,usuario,tabname)  values (' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,
    ' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.dfd_catalogo ,luego.dfd_codigo 
    ,luego.dfd_nu_reg ,luego.dfd_cod_control ,luego.dfd_tipo_desc ,luego.dfd_fec_ini 
    ,luego.dfd_ult_act ,luego.dfd_fec_cer ,luego.dfd_monto ,luego.dfd_saldo 
    ,luego.dfd_mensual ,luego.dfd_tot_cuotas ,luego.dfd_num_cuotas ,luego.dfd_documen 
    ,luego.dfd_codeudor ,luego.dfd_nom_bene ,luego.dfd_juz_con ,CURRENT 
    year to fraction(3) ,'I' ,USER ,'dfdes' ));

create trigger "informix".del_dfdes delete on "informix".dfdes 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_dfdes (antes1,antes2,antes3,
    antes4,antes5,antes6,antes7,antes8,antes9,antes10,antes11,antes12,
    antes13,antes14,antes15,antes16,antes17,despues1,despues2,despues3,
    despues4,despues5,despues6,despues7,despues8,despues9,despues10,despues11,
    despues12,despues13,despues14,despues15,despues16,despues17,hora,
    accion,usuario,tabname)  values (antes.dfd_catalogo ,antes.dfd_codigo 
    ,antes.dfd_nu_reg ,antes.dfd_cod_control ,antes.dfd_tipo_desc ,antes.dfd_fec_ini 
    ,antes.dfd_ult_act ,antes.dfd_fec_cer ,antes.dfd_monto ,antes.dfd_saldo 
    ,antes.dfd_mensual ,antes.dfd_tot_cuotas ,antes.dfd_num_cuotas ,antes.dfd_documen 
    ,antes.dfd_codeudor ,antes.dfd_nom_bene ,antes.dfd_juz_con ,' ' ,' '
     ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,CURRENT 
    year to fraction(3) ,'D' ,USER ,'dfdes' ));

create trigger "informix".ins_psan_detalle insert on "informix"
    .psan_detalle referencing new as luego
    for each row
        (
        insert into "informix".aud_psan_detalle (det_catalogo,
    det_fecha,det_sancion,det_grado,det_dependencia,det_observaciones,
    det_detalle,det_status,desp_det_catalogo,desp_det_fecha,desp_det_sancion,
    desp_det_grado,desp_det_dependencia,desp_det_observaciones,desp_det_detalle,
    desp_det_status,accion,usuario,hora)  values (NULL ,'' ,NULL ,NULL 
    ,NULL ,'' ,'' ::lvarchar(32739) ,NULL ,luego.det_catalogo ,luego.det_fecha 
    ,luego.det_sancion ,luego.det_grado ,luego.det_dependencia ,luego.det_observaciones 
    ,luego.det_detalle ,luego.det_status ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_psan_detalle update on "informix"
    .psan_detalle referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_psan_detalle (det_catalogo,
    det_fecha,det_sancion,det_grado,det_dependencia,det_observaciones,
    det_detalle,det_status,desp_det_catalogo,desp_det_fecha,desp_det_sancion,
    desp_det_grado,desp_det_dependencia,desp_det_observaciones,desp_det_detalle,
    desp_det_status,accion,usuario,hora)  values (antes.det_catalogo 
    ,antes.det_fecha ,antes.det_sancion ,antes.det_grado ,antes.det_dependencia 
    ,antes.det_observaciones ,antes.det_detalle ,antes.det_status ,luego.det_catalogo 
    ,luego.det_fecha ,luego.det_sancion ,luego.det_grado ,luego.det_dependencia 
    ,luego.det_observaciones ,luego.det_detalle ,luego.det_status ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_psan_detalle delete on "informix"
    .psan_detalle referencing old as antes
    for each row
        (
        insert into "informix".aud_psan_detalle (det_catalogo,
    det_fecha,det_sancion,det_grado,det_dependencia,det_observaciones,
    det_detalle,det_status,desp_det_catalogo,desp_det_fecha,desp_det_sancion,
    desp_det_grado,desp_det_dependencia,desp_det_observaciones,desp_det_detalle,
    desp_det_status,accion,usuario,hora)  values (antes.det_catalogo 
    ,antes.det_fecha ,antes.det_sancion ,antes.det_grado ,antes.det_dependencia 
    ,antes.det_observaciones ,antes.det_detalle ,antes.det_status ,NULL 
    ,'' ,NULL ,NULL ,NULL ,'' ,'' ::lvarchar(32739) ,NULL ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_esp_clase_licencia insert on "informix"
    .esp_clase_licencia referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_clase_licencia (cla_codigo,
    cla_nombre,cla_descripcion,desp_cla_codigo,desp_cla_nombre,desp_cla_descripcion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.cla_codigo ,luego.cla_nombre 
    ,luego.cla_descripcion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_esp_clase_licencia delete on "informix"
    .esp_clase_licencia referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_clase_licencia (cla_codigo,
    cla_nombre,cla_descripcion,desp_cla_codigo,desp_cla_nombre,desp_cla_descripcion,
    accion,usuario,hora)  values (antes.cla_codigo ,antes.cla_nombre 
    ,antes.cla_descripcion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_esp_clase_licencia update on "informix"
    .esp_clase_licencia referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_esp_clase_licencia (cla_codigo,
    cla_nombre,cla_descripcion,desp_cla_codigo,desp_cla_nombre,desp_cla_descripcion,
    accion,usuario,hora)  values (antes.cla_codigo ,antes.cla_nombre 
    ,antes.cla_descripcion ,luego.cla_codigo ,luego.cla_nombre ,luego.cla_descripcion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esp_expertos insert on "informix"
    .esp_expertos referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_expertos (exp_codigo,exp_nom1,
    exp_nom2,exp_ape1,exp_ape2,exp_numerolic,exp_tipolic,exp_fechavence,
    exp_dpi_cedula,exp_empresa,desp_exp_codigo,desp_exp_nom1,desp_exp_nom2,
    desp_exp_ape1,desp_exp_ape2,desp_exp_numerolic,desp_exp_tipolic,desp_exp_fechavence,
    desp_exp_dpi_cedula,desp_exp_empresa,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,luego.exp_codigo ,luego.exp_nom1 
    ,luego.exp_nom2 ,luego.exp_ape1 ,luego.exp_ape2 ,luego.exp_numerolic 
    ,luego.exp_tipolic ,luego.exp_fechavence ,luego.exp_dpi_cedula ,luego.exp_empresa 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esp_expertos delete on "informix"
    .esp_expertos referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_expertos (exp_codigo,exp_nom1,
    exp_nom2,exp_ape1,exp_ape2,exp_numerolic,exp_tipolic,exp_fechavence,
    exp_dpi_cedula,exp_empresa,desp_exp_codigo,desp_exp_nom1,desp_exp_nom2,
    desp_exp_ape1,desp_exp_ape2,desp_exp_numerolic,desp_exp_tipolic,desp_exp_fechavence,
    desp_exp_dpi_cedula,desp_exp_empresa,accion,usuario,hora)  values 
    (antes.exp_codigo ,antes.exp_nom1 ,antes.exp_nom2 ,antes.exp_ape1 
    ,antes.exp_ape2 ,antes.exp_numerolic ,antes.exp_tipolic ,antes.exp_fechavence 
    ,antes.exp_dpi_cedula ,antes.exp_empresa ,NULL ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_esp_expertos update on "informix"
    .esp_expertos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_expertos (exp_codigo,exp_nom1,
    exp_nom2,exp_ape1,exp_ape2,exp_numerolic,exp_tipolic,exp_fechavence,
    exp_dpi_cedula,exp_empresa,desp_exp_codigo,desp_exp_nom1,desp_exp_nom2,
    desp_exp_ape1,desp_exp_ape2,desp_exp_numerolic,desp_exp_tipolic,desp_exp_fechavence,
    desp_exp_dpi_cedula,desp_exp_empresa,accion,usuario,hora)  values 
    (antes.exp_codigo ,antes.exp_nom1 ,antes.exp_nom2 ,antes.exp_ape1 
    ,antes.exp_ape2 ,antes.exp_numerolic ,antes.exp_tipolic ,antes.exp_fechavence 
    ,antes.exp_dpi_cedula ,antes.exp_empresa ,luego.exp_codigo ,luego.exp_nom1 
    ,luego.exp_nom2 ,luego.exp_ape1 ,luego.exp_ape2 ,luego.exp_numerolic 
    ,luego.exp_tipolic ,luego.exp_fechavence ,luego.exp_dpi_cedula ,luego.exp_empresa 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esp_permisos insert on "informix"
    .esp_permisos referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_permisos (per_codigo,per_empresa,
    per_numeroper,per_vehiculo,per_aduana,per_usuario,per_vicemin,per_empresa_ext,
    per_pais,per_dir,per_experto,per_obs,per_status,per_claseper,per_referencia,
    per_fecharefe,per_fec_ac,per_horainicia,per_duracion,per_licencia,
    per_destino,per_fecha_custodia,desp_per_codigo,desp_per_empresa,desp_per_numeroper,
    desp_per_vehiculo,desp_per_aduana,desp_per_usuario,desp_per_vicemin,
    desp_per_empresa_ext,desp_per_pais,desp_per_dir,desp_per_experto,
    desp_per_obs,desp_per_status,desp_per_claseper,desp_per_referencia,
    desp_per_fecharefe,desp_per_fec_ac,desp_per_horainicia,desp_per_duracion,
    desp_per_licencia,desp_per_destino,desp_per_fecha_custodia,accion,
    usuario,hora)  values (NULL ,NULL ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,NULL ,NULL ,'' ,'' ,'' ,NULL ,NULL ,NULL ,'' ,'' ,luego.per_codigo 
    ,luego.per_empresa ,luego.per_numeroper ,luego.per_vehiculo ,luego.per_aduana 
    ,luego.per_usuario ,luego.per_vicemin ,luego.per_empresa_ext ,luego.per_pais 
    ,luego.per_dir ,luego.per_experto ,luego.per_obs ,luego.per_status 
    ,luego.per_claseper ,luego.per_referencia ,luego.per_fecharefe ,luego.per_fec_ac 
    ,luego.per_horainicia ,luego.per_duracion ,luego.per_licencia ,luego.per_destino 
    ,luego.per_fecha_custodia ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_esp_permisos delete on "informix"
    .esp_permisos referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_permisos (per_codigo,per_empresa,
    per_numeroper,per_vehiculo,per_aduana,per_usuario,per_vicemin,per_empresa_ext,
    per_pais,per_dir,per_experto,per_obs,per_status,per_claseper,per_referencia,
    per_fecharefe,per_fec_ac,per_horainicia,per_duracion,per_licencia,
    per_destino,per_fecha_custodia,desp_per_codigo,desp_per_empresa,desp_per_numeroper,
    desp_per_vehiculo,desp_per_aduana,desp_per_usuario,desp_per_vicemin,
    desp_per_empresa_ext,desp_per_pais,desp_per_dir,desp_per_experto,
    desp_per_obs,desp_per_status,desp_per_claseper,desp_per_referencia,
    desp_per_fecharefe,desp_per_fec_ac,desp_per_horainicia,desp_per_duracion,
    desp_per_licencia,desp_per_destino,desp_per_fecha_custodia,accion,
    usuario,hora)  values (antes.per_codigo ,antes.per_empresa ,antes.per_numeroper 
    ,antes.per_vehiculo ,antes.per_aduana ,antes.per_usuario ,antes.per_vicemin 
    ,antes.per_empresa_ext ,antes.per_pais ,antes.per_dir ,antes.per_experto 
    ,antes.per_obs ,antes.per_status ,antes.per_claseper ,antes.per_referencia 
    ,antes.per_fecharefe ,antes.per_fec_ac ,antes.per_horainicia ,antes.per_duracion 
    ,antes.per_licencia ,antes.per_destino ,antes.per_fecha_custodia 
    ,NULL ,NULL ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,'' ,''
     ,NULL ,NULL ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_esp_permisos update on "informix"
    .esp_permisos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_permisos (per_codigo,per_empresa,
    per_numeroper,per_vehiculo,per_aduana,per_usuario,per_vicemin,per_empresa_ext,
    per_pais,per_dir,per_experto,per_obs,per_status,per_claseper,per_referencia,
    per_fecharefe,per_fec_ac,per_horainicia,per_duracion,per_licencia,
    per_destino,per_fecha_custodia,desp_per_codigo,desp_per_empresa,desp_per_numeroper,
    desp_per_vehiculo,desp_per_aduana,desp_per_usuario,desp_per_vicemin,
    desp_per_empresa_ext,desp_per_pais,desp_per_dir,desp_per_experto,
    desp_per_obs,desp_per_status,desp_per_claseper,desp_per_referencia,
    desp_per_fecharefe,desp_per_fec_ac,desp_per_horainicia,desp_per_duracion,
    desp_per_licencia,desp_per_destino,desp_per_fecha_custodia,accion,
    usuario,hora)  values (antes.per_codigo ,antes.per_empresa ,antes.per_numeroper 
    ,antes.per_vehiculo ,antes.per_aduana ,antes.per_usuario ,antes.per_vicemin 
    ,antes.per_empresa_ext ,antes.per_pais ,antes.per_dir ,antes.per_experto 
    ,antes.per_obs ,antes.per_status ,antes.per_claseper ,antes.per_referencia 
    ,antes.per_fecharefe ,antes.per_fec_ac ,antes.per_horainicia ,antes.per_duracion 
    ,antes.per_licencia ,antes.per_destino ,antes.per_fecha_custodia 
    ,luego.per_codigo ,luego.per_empresa ,luego.per_numeroper ,luego.per_vehiculo 
    ,luego.per_aduana ,luego.per_usuario ,luego.per_vicemin ,luego.per_empresa_ext 
    ,luego.per_pais ,luego.per_dir ,luego.per_experto ,luego.per_obs 
    ,luego.per_status ,luego.per_claseper ,luego.per_referencia ,luego.per_fecharefe 
    ,luego.per_fec_ac ,luego.per_horainicia ,luego.per_duracion ,luego.per_licencia 
    ,luego.per_destino ,luego.per_fecha_custodia ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_esp_historial insert on "informix"
    .esp_historial referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_historial (his_codigo,
    his_permiso,his_inventario,his_movimiento,his_fechamov,his_cantidad,
    desp_his_codigo,desp_his_permiso,desp_his_inventario,desp_his_movimiento,
    desp_his_fechamov,desp_his_cantidad,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,NULL ,'' ,NULL ,luego.his_codigo ,luego.his_permiso 
    ,luego.his_inventario ,luego.his_movimiento ,luego.his_fechamov ,
    luego.his_cantidad ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esp_historial delete on "informix"
    .esp_historial referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_historial (his_codigo,
    his_permiso,his_inventario,his_movimiento,his_fechamov,his_cantidad,
    desp_his_codigo,desp_his_permiso,desp_his_inventario,desp_his_movimiento,
    desp_his_fechamov,desp_his_cantidad,accion,usuario,hora)  values 
    (antes.his_codigo ,antes.his_permiso ,antes.his_inventario ,antes.his_movimiento 
    ,antes.his_fechamov ,antes.his_cantidad ,NULL ,NULL ,NULL ,NULL ,
    '' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_esp_historial update on "informix"
    .esp_historial referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_historial (his_codigo,
    his_permiso,his_inventario,his_movimiento,his_fechamov,his_cantidad,
    desp_his_codigo,desp_his_permiso,desp_his_inventario,desp_his_movimiento,
    desp_his_fechamov,desp_his_cantidad,accion,usuario,hora)  values 
    (antes.his_codigo ,antes.his_permiso ,antes.his_inventario ,antes.his_movimiento 
    ,antes.his_fechamov ,antes.his_cantidad ,luego.his_codigo ,luego.his_permiso 
    ,luego.his_inventario ,luego.his_movimiento ,luego.his_fechamov ,
    luego.his_cantidad ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esp_det_permisos insert on "informix"
    .esp_det_permisos referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_det_permisos (dper_codigo,
    dper_codigoper,dper_producto,dper_cantidad,desp_dper_codigo,desp_dper_codigoper,
    desp_dper_producto,desp_dper_cantidad,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,NULL ,luego.dper_codigo ,luego.dper_codigoper 
    ,luego.dper_producto ,luego.dper_cantidad ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_esp_det_permisos delete on "informix"
    .esp_det_permisos referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_det_permisos (dper_codigo,
    dper_codigoper,dper_producto,dper_cantidad,desp_dper_codigo,desp_dper_codigoper,
    desp_dper_producto,desp_dper_cantidad,accion,usuario,hora)  values 
    (antes.dper_codigo ,antes.dper_codigoper ,antes.dper_producto ,antes.dper_cantidad 
    ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_esp_det_permisos update on "informix"
    .esp_det_permisos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_det_permisos (dper_codigo,
    dper_codigoper,dper_producto,dper_cantidad,desp_dper_codigo,desp_dper_codigoper,
    desp_dper_producto,desp_dper_cantidad,accion,usuario,hora)  values 
    (antes.dper_codigo ,antes.dper_codigoper ,antes.dper_producto ,antes.dper_cantidad 
    ,luego.dper_codigo ,luego.dper_codigoper ,luego.dper_producto ,luego.dper_cantidad 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esp_marcas insert on "informix".esp_marcas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_marcas (mar_codigo,mar_descripcion,
    desp_mar_codigo,desp_mar_descripcion,accion,usuario,hora)  values 
    (NULL ,'' ,luego.mar_codigo ,luego.mar_descripcion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_esp_marcas delete on "informix".esp_marcas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_marcas (mar_codigo,mar_descripcion,
    desp_mar_codigo,desp_mar_descripcion,accion,usuario,hora)  values 
    (antes.mar_codigo ,antes.mar_descripcion ,NULL ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_esp_marcas update on "informix".esp_marcas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_marcas (mar_codigo,mar_descripcion,
    desp_mar_codigo,desp_mar_descripcion,accion,usuario,hora)  values 
    (antes.mar_codigo ,antes.mar_descripcion ,luego.mar_codigo ,luego.mar_descripcion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esp_grupo_producto insert on "informix"
    .esp_grupo_producto referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_grupo_producto (gru_codigo,
    gru_nombre,desp_gru_codigo,desp_gru_nombre,accion,usuario,hora)  
    values (NULL ,'' ,luego.gru_codigo ,luego.gru_nombre ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_esp_grupo_producto delete on "informix"
    .esp_grupo_producto referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_grupo_producto (gru_codigo,
    gru_nombre,desp_gru_codigo,desp_gru_nombre,accion,usuario,hora)  
    values (antes.gru_codigo ,antes.gru_nombre ,NULL ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_esp_grupo_producto update on "informix"
    .esp_grupo_producto referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_esp_grupo_producto (gru_codigo,
    gru_nombre,desp_gru_codigo,desp_gru_nombre,accion,usuario,hora)  
    values (antes.gru_codigo ,antes.gru_nombre ,luego.gru_codigo ,luego.gru_nombre 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esp_productos insert on "informix"
    .esp_productos referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_productos (pro_codigo,
    pro_desc_lg,pro_desc_md,pro_desc_ct,pro_umedida,pro_grupo,desp_pro_codigo,
    desp_pro_desc_lg,desp_pro_desc_md,desp_pro_desc_ct,desp_pro_umedida,
    desp_pro_grupo,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,NULL 
    ,NULL ,luego.pro_codigo ,luego.pro_desc_lg ,luego.pro_desc_md ,luego.pro_desc_ct 
    ,luego.pro_umedida ,luego.pro_grupo ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_esp_productos delete on "informix"
    .esp_productos referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_productos (pro_codigo,
    pro_desc_lg,pro_desc_md,pro_desc_ct,pro_umedida,pro_grupo,desp_pro_codigo,
    desp_pro_desc_lg,desp_pro_desc_md,desp_pro_desc_ct,desp_pro_umedida,
    desp_pro_grupo,accion,usuario,hora)  values (antes.pro_codigo ,antes.pro_desc_lg 
    ,antes.pro_desc_md ,antes.pro_desc_ct ,antes.pro_umedida ,antes.pro_grupo 
    ,NULL ,'' ,'' ,'' ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_esp_productos update on "informix"
    .esp_productos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_productos (pro_codigo,
    pro_desc_lg,pro_desc_md,pro_desc_ct,pro_umedida,pro_grupo,desp_pro_codigo,
    desp_pro_desc_lg,desp_pro_desc_md,desp_pro_desc_ct,desp_pro_umedida,
    desp_pro_grupo,accion,usuario,hora)  values (antes.pro_codigo ,antes.pro_desc_lg 
    ,antes.pro_desc_md ,antes.pro_desc_ct ,antes.pro_umedida ,antes.pro_grupo 
    ,luego.pro_codigo ,luego.pro_desc_lg ,luego.pro_desc_md ,luego.pro_desc_ct 
    ,luego.pro_umedida ,luego.pro_grupo ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_esp_unidad_medida insert on "informix"
    .esp_unidad_medida referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_unidad_medida (uni_codigo,
    uni_descripcion,desp_uni_codigo,desp_uni_descripcion,accion,usuario,
    hora)  values (NULL ,'' ,luego.uni_codigo ,luego.uni_descripcion ,
    'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esp_unidad_medida delete on "informix"
    .esp_unidad_medida referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_unidad_medida (uni_codigo,
    uni_descripcion,desp_uni_codigo,desp_uni_descripcion,accion,usuario,
    hora)  values (antes.uni_codigo ,antes.uni_descripcion ,NULL ,'' ,
    'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_esp_unidad_medida update on "informix"
    .esp_unidad_medida referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_unidad_medida (uni_codigo,
    uni_descripcion,desp_uni_codigo,desp_uni_descripcion,accion,usuario,
    hora)  values (antes.uni_codigo ,antes.uni_descripcion ,luego.uni_codigo 
    ,luego.uni_descripcion ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_esp_aduanas insert on "informix"
    .esp_aduanas referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_aduanas (adu_codigo,adu_desc_lg,
    adu_desc_ct,adu_dpmun,desp_adu_codigo,desp_adu_desc_lg,desp_adu_desc_ct,
    desp_adu_dpmun,accion,usuario,hora)  values (NULL ,'' ,'' ,NULL ,luego.adu_codigo 
    ,luego.adu_desc_lg ,luego.adu_desc_ct ,luego.adu_dpmun ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_esp_aduanas delete on "informix"
    .esp_aduanas referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_aduanas (adu_codigo,adu_desc_lg,
    adu_desc_ct,adu_dpmun,desp_adu_codigo,desp_adu_desc_lg,desp_adu_desc_ct,
    desp_adu_dpmun,accion,usuario,hora)  values (antes.adu_codigo ,antes.adu_desc_lg 
    ,antes.adu_desc_ct ,antes.adu_dpmun ,NULL ,'' ,'' ,NULL ,'D' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".act_esp_aduanas update on "informix"
    .esp_aduanas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_aduanas (adu_codigo,adu_desc_lg,
    adu_desc_ct,adu_dpmun,desp_adu_codigo,desp_adu_desc_lg,desp_adu_desc_ct,
    desp_adu_dpmun,accion,usuario,hora)  values (antes.adu_codigo ,antes.adu_desc_lg 
    ,antes.adu_desc_ct ,antes.adu_dpmun ,luego.adu_codigo ,luego.adu_desc_lg 
    ,luego.adu_desc_ct ,luego.adu_dpmun ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_esp_inventario insert on "informix"
    .esp_inventario referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_inventario (inv_codigo,
    inv_licencia,inv_cantidad,inv_producto,desp_inv_codigo,desp_inv_licencia,
    desp_inv_cantidad,desp_inv_producto,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,NULL ,luego.inv_codigo ,luego.inv_licencia ,luego.inv_cantidad 
    ,luego.inv_producto ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esp_inventario delete on "informix"
    .esp_inventario referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_inventario (inv_codigo,
    inv_licencia,inv_cantidad,inv_producto,desp_inv_codigo,desp_inv_licencia,
    desp_inv_cantidad,desp_inv_producto,accion,usuario,hora)  values 
    (antes.inv_codigo ,antes.inv_licencia ,antes.inv_cantidad ,antes.inv_producto 
    ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_esp_inventario update on "informix"
    .esp_inventario referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_inventario (inv_codigo,
    inv_licencia,inv_cantidad,inv_producto,desp_inv_codigo,desp_inv_licencia,
    desp_inv_cantidad,desp_inv_producto,accion,usuario,hora)  values 
    (antes.inv_codigo ,antes.inv_licencia ,antes.inv_cantidad ,antes.inv_producto 
    ,luego.inv_codigo ,luego.inv_licencia ,luego.inv_cantidad ,luego.inv_producto 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esp_det_licencias insert on "informix"
    .esp_det_licencias referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_det_licencias (dlic_codigo,
    dlic_codigolic,dlic_producto,dlic_cantidad,desp_dlic_codigo,desp_dlic_codigolic,
    desp_dlic_producto,desp_dlic_cantidad,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,NULL ,luego.dlic_codigo ,luego.dlic_codigolic 
    ,luego.dlic_producto ,luego.dlic_cantidad ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_esp_det_licencias delete on "informix"
    .esp_det_licencias referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_det_licencias (dlic_codigo,
    dlic_codigolic,dlic_producto,dlic_cantidad,desp_dlic_codigo,desp_dlic_codigolic,
    desp_dlic_producto,desp_dlic_cantidad,accion,usuario,hora)  values 
    (antes.dlic_codigo ,antes.dlic_codigolic ,antes.dlic_producto ,antes.dlic_cantidad 
    ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_esp_det_licencias update on "informix"
    .esp_det_licencias referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_det_licencias (dlic_codigo,
    dlic_codigolic,dlic_producto,dlic_cantidad,desp_dlic_codigo,desp_dlic_codigolic,
    desp_dlic_producto,desp_dlic_cantidad,accion,usuario,hora)  values 
    (antes.dlic_codigo ,antes.dlic_codigolic ,antes.dlic_producto ,antes.dlic_cantidad 
    ,luego.dlic_codigo ,luego.dlic_codigolic ,luego.dlic_producto ,luego.dlic_cantidad 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esp_aseguradoras insert on "informix"
    .esp_aseguradoras referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_aseguradoras (ase_codigo,
    ase_desc_lg,ase_desc_ct,desp_ase_codigo,desp_ase_desc_lg,desp_ase_desc_ct,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.ase_codigo ,luego.ase_desc_lg 
    ,luego.ase_desc_ct ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esp_aseguradoras delete on "informix"
    .esp_aseguradoras referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_aseguradoras (ase_codigo,
    ase_desc_lg,ase_desc_ct,desp_ase_codigo,desp_ase_desc_lg,desp_ase_desc_ct,
    accion,usuario,hora)  values (antes.ase_codigo ,antes.ase_desc_lg 
    ,antes.ase_desc_ct ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_esp_aseguradoras update on "informix"
    .esp_aseguradoras referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_aseguradoras (ase_codigo,
    ase_desc_lg,ase_desc_ct,desp_ase_codigo,desp_ase_desc_lg,desp_ase_desc_ct,
    accion,usuario,hora)  values (antes.ase_codigo ,antes.ase_desc_lg 
    ,antes.ase_desc_ct ,luego.ase_codigo ,luego.ase_desc_lg ,luego.ase_desc_ct 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esp_clase_permiso insert on "informix"
    .esp_clase_permiso referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_clase_permiso (cper_codigo,
    cper_nombre,cper_descripcion,desp_cper_codigo,desp_cper_nombre,desp_cper_descripcion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.cper_codigo ,luego.cper_nombre 
    ,luego.cper_descripcion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_esp_clase_permiso delete on "informix"
    .esp_clase_permiso referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_clase_permiso (cper_codigo,
    cper_nombre,cper_descripcion,desp_cper_codigo,desp_cper_nombre,desp_cper_descripcion,
    accion,usuario,hora)  values (antes.cper_codigo ,antes.cper_nombre 
    ,antes.cper_descripcion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_esp_clase_permiso update on "informix"
    .esp_clase_permiso referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_clase_permiso (cper_codigo,
    cper_nombre,cper_descripcion,desp_cper_codigo,desp_cper_nombre,desp_cper_descripcion,
    accion,usuario,hora)  values (antes.cper_codigo ,antes.cper_nombre 
    ,antes.cper_descripcion ,luego.cper_codigo ,luego.cper_nombre ,luego.cper_descripcion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esp_licencias insert on "informix"
    .esp_licencias referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_licencias (lic_codigo,
    lic_empresa,lic_claselic,lic_fechainicia,lic_fechafin,lic_numerolic,
    lic_seguro,lic_vehiculo,lic_usuario,lic_vicemin,lic_obs,lic_status,
    lic_fecactual,lic_procedencia,desp_lic_codigo,desp_lic_empresa,desp_lic_claselic,
    desp_lic_fechainicia,desp_lic_fechafin,desp_lic_numerolic,desp_lic_seguro,
    desp_lic_vehiculo,desp_lic_usuario,desp_lic_vicemin,desp_lic_obs,
    desp_lic_status,desp_lic_fecactual,desp_lic_procedencia,accion,usuario,
    hora)  values (NULL ,NULL ,NULL ,'' ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,NULL 
    ,'' ,'' ,luego.lic_codigo ,luego.lic_empresa ,luego.lic_claselic ,luego.lic_fechainicia 
    ,luego.lic_fechafin ,luego.lic_numerolic ,luego.lic_seguro ,luego.lic_vehiculo 
    ,luego.lic_usuario ,luego.lic_vicemin ,luego.lic_obs ,luego.lic_status 
    ,luego.lic_fecactual ,luego.lic_procedencia ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_esp_licencias delete on "informix"
    .esp_licencias referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_licencias (lic_codigo,
    lic_empresa,lic_claselic,lic_fechainicia,lic_fechafin,lic_numerolic,
    lic_seguro,lic_vehiculo,lic_usuario,lic_vicemin,lic_obs,lic_status,
    lic_fecactual,lic_procedencia,desp_lic_codigo,desp_lic_empresa,desp_lic_claselic,
    desp_lic_fechainicia,desp_lic_fechafin,desp_lic_numerolic,desp_lic_seguro,
    desp_lic_vehiculo,desp_lic_usuario,desp_lic_vicemin,desp_lic_obs,
    desp_lic_status,desp_lic_fecactual,desp_lic_procedencia,accion,usuario,
    hora)  values (antes.lic_codigo ,antes.lic_empresa ,antes.lic_claselic 
    ,antes.lic_fechainicia ,antes.lic_fechafin ,antes.lic_numerolic ,
    antes.lic_seguro ,antes.lic_vehiculo ,antes.lic_usuario ,antes.lic_vicemin 
    ,antes.lic_obs ,antes.lic_status ,antes.lic_fecactual ,antes.lic_procedencia 
    ,NULL ,NULL ,NULL ,'' ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,NULL ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_esp_licencias update on "informix"
    .esp_licencias referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_licencias (lic_codigo,
    lic_empresa,lic_claselic,lic_fechainicia,lic_fechafin,lic_numerolic,
    lic_seguro,lic_vehiculo,lic_usuario,lic_vicemin,lic_obs,lic_status,
    lic_fecactual,lic_procedencia,desp_lic_codigo,desp_lic_empresa,desp_lic_claselic,
    desp_lic_fechainicia,desp_lic_fechafin,desp_lic_numerolic,desp_lic_seguro,
    desp_lic_vehiculo,desp_lic_usuario,desp_lic_vicemin,desp_lic_obs,
    desp_lic_status,desp_lic_fecactual,desp_lic_procedencia,accion,usuario,
    hora)  values (antes.lic_codigo ,antes.lic_empresa ,antes.lic_claselic 
    ,antes.lic_fechainicia ,antes.lic_fechafin ,antes.lic_numerolic ,
    antes.lic_seguro ,antes.lic_vehiculo ,antes.lic_usuario ,antes.lic_vicemin 
    ,antes.lic_obs ,antes.lic_status ,antes.lic_fecactual ,antes.lic_procedencia 
    ,luego.lic_codigo ,luego.lic_empresa ,luego.lic_claselic ,luego.lic_fechainicia 
    ,luego.lic_fechafin ,luego.lic_numerolic ,luego.lic_seguro ,luego.lic_vehiculo 
    ,luego.lic_usuario ,luego.lic_vicemin ,luego.lic_obs ,luego.lic_status 
    ,luego.lic_fecactual ,luego.lic_procedencia ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_esp_seguro insert on "informix".esp_seguro 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_seguro (seg_codigo,seg_clasepoli,
    seg_numpoli,seg_asegura,desp_seg_codigo,desp_seg_clasepoli,desp_seg_numpoli,
    desp_seg_asegura,accion,usuario,hora)  values (NULL ,'' ,'' ,NULL ,
    luego.seg_codigo ,luego.seg_clasepoli ,luego.seg_numpoli ,luego.seg_asegura 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esp_seguro delete on "informix".esp_seguro 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_seguro (seg_codigo,seg_clasepoli,
    seg_numpoli,seg_asegura,desp_seg_codigo,desp_seg_clasepoli,desp_seg_numpoli,
    desp_seg_asegura,accion,usuario,hora)  values (antes.seg_codigo ,
    antes.seg_clasepoli ,antes.seg_numpoli ,antes.seg_asegura ,NULL ,
    '' ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_esp_seguro update on "informix".esp_seguro 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_seguro (seg_codigo,seg_clasepoli,
    seg_numpoli,seg_asegura,desp_seg_codigo,desp_seg_clasepoli,desp_seg_numpoli,
    desp_seg_asegura,accion,usuario,hora)  values (antes.seg_codigo ,
    antes.seg_clasepoli ,antes.seg_numpoli ,antes.seg_asegura ,luego.seg_codigo 
    ,luego.seg_clasepoli ,luego.seg_numpoli ,luego.seg_asegura ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esp_empresas insert on "informix"
    .esp_empresas referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_empresas (emp_codigo,emp_nit,
    emp_nombre,emp_direccion,emp_tel,emp_mail,emp_nomrep1,emp_nomrep2,
    emp_aperep1,emp_aperep2,emp_tel1,emp_nompropi1,emp_nompropi2,emp_apepropi1,
    emp_apepropi2,emp_tel2,emp_dirbodega,desp_emp_codigo,desp_emp_nit,
    desp_emp_nombre,desp_emp_direccion,desp_emp_tel,desp_emp_mail,desp_emp_nomrep1,
    desp_emp_nomrep2,desp_emp_aperep1,desp_emp_aperep2,desp_emp_tel1,
    desp_emp_nompropi1,desp_emp_nompropi2,desp_emp_apepropi1,desp_emp_apepropi2,
    desp_emp_tel2,desp_emp_dirbodega,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,NULL ,'' ,luego.emp_codigo 
    ,luego.emp_nit ,luego.emp_nombre ,luego.emp_direccion ,luego.emp_tel 
    ,luego.emp_mail ,luego.emp_nomrep1 ,luego.emp_nomrep2 ,luego.emp_aperep1 
    ,luego.emp_aperep2 ,luego.emp_tel1 ,luego.emp_nompropi1 ,luego.emp_nompropi2 
    ,luego.emp_apepropi1 ,luego.emp_apepropi2 ,luego.emp_tel2 ,luego.emp_dirbodega 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esp_empresas delete on "informix"
    .esp_empresas referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_empresas (emp_codigo,emp_nit,
    emp_nombre,emp_direccion,emp_tel,emp_mail,emp_nomrep1,emp_nomrep2,
    emp_aperep1,emp_aperep2,emp_tel1,emp_nompropi1,emp_nompropi2,emp_apepropi1,
    emp_apepropi2,emp_tel2,emp_dirbodega,desp_emp_codigo,desp_emp_nit,
    desp_emp_nombre,desp_emp_direccion,desp_emp_tel,desp_emp_mail,desp_emp_nomrep1,
    desp_emp_nomrep2,desp_emp_aperep1,desp_emp_aperep2,desp_emp_tel1,
    desp_emp_nompropi1,desp_emp_nompropi2,desp_emp_apepropi1,desp_emp_apepropi2,
    desp_emp_tel2,desp_emp_dirbodega,accion,usuario,hora)  values (antes.emp_codigo 
    ,antes.emp_nit ,antes.emp_nombre ,antes.emp_direccion ,antes.emp_tel 
    ,antes.emp_mail ,antes.emp_nomrep1 ,antes.emp_nomrep2 ,antes.emp_aperep1 
    ,antes.emp_aperep2 ,antes.emp_tel1 ,antes.emp_nompropi1 ,antes.emp_nompropi2 
    ,antes.emp_apepropi1 ,antes.emp_apepropi2 ,antes.emp_tel2 ,antes.emp_dirbodega 
    ,NULL ,'' ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,NULL ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_esp_empresas update on "informix"
    .esp_empresas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_empresas (emp_codigo,emp_nit,
    emp_nombre,emp_direccion,emp_tel,emp_mail,emp_nomrep1,emp_nomrep2,
    emp_aperep1,emp_aperep2,emp_tel1,emp_nompropi1,emp_nompropi2,emp_apepropi1,
    emp_apepropi2,emp_tel2,emp_dirbodega,desp_emp_codigo,desp_emp_nit,
    desp_emp_nombre,desp_emp_direccion,desp_emp_tel,desp_emp_mail,desp_emp_nomrep1,
    desp_emp_nomrep2,desp_emp_aperep1,desp_emp_aperep2,desp_emp_tel1,
    desp_emp_nompropi1,desp_emp_nompropi2,desp_emp_apepropi1,desp_emp_apepropi2,
    desp_emp_tel2,desp_emp_dirbodega,accion,usuario,hora)  values (antes.emp_codigo 
    ,antes.emp_nit ,antes.emp_nombre ,antes.emp_direccion ,antes.emp_tel 
    ,antes.emp_mail ,antes.emp_nomrep1 ,antes.emp_nomrep2 ,antes.emp_aperep1 
    ,antes.emp_aperep2 ,antes.emp_tel1 ,antes.emp_nompropi1 ,antes.emp_nompropi2 
    ,antes.emp_apepropi1 ,antes.emp_apepropi2 ,antes.emp_tel2 ,antes.emp_dirbodega 
    ,luego.emp_codigo ,luego.emp_nit ,luego.emp_nombre ,luego.emp_direccion 
    ,luego.emp_tel ,luego.emp_mail ,luego.emp_nomrep1 ,luego.emp_nomrep2 
    ,luego.emp_aperep1 ,luego.emp_aperep2 ,luego.emp_tel1 ,luego.emp_nompropi1 
    ,luego.emp_nompropi2 ,luego.emp_apepropi1 ,luego.emp_apepropi2 ,luego.emp_tel2 
    ,luego.emp_dirbodega ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esp_vehiculos insert on "informix"
    .esp_vehiculos referencing new as luego
    for each row
        (
        insert into "informix".aud_esp_vehiculos (veh_codigo,
    veh_marca,veh_modelo,veh_color,veh_placas,veh_empresa,veh_tipo,veh_doc_auto,
    veh_fecha_auto,veh_capacidad,desp_veh_codigo,desp_veh_marca,desp_veh_modelo,
    desp_veh_color,desp_veh_placas,desp_veh_empresa,desp_veh_tipo,desp_veh_doc_auto,
    desp_veh_fecha_auto,desp_veh_capacidad,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,luego.veh_codigo ,luego.veh_marca 
    ,luego.veh_modelo ,luego.veh_color ,luego.veh_placas ,luego.veh_empresa 
    ,luego.veh_tipo ,luego.veh_doc_auto ,luego.veh_fecha_auto ,luego.veh_capacidad 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esp_vehiculos delete on "informix"
    .esp_vehiculos referencing old as antes
    for each row
        (
        insert into "informix".aud_esp_vehiculos (veh_codigo,
    veh_marca,veh_modelo,veh_color,veh_placas,veh_empresa,veh_tipo,veh_doc_auto,
    veh_fecha_auto,veh_capacidad,desp_veh_codigo,desp_veh_marca,desp_veh_modelo,
    desp_veh_color,desp_veh_placas,desp_veh_empresa,desp_veh_tipo,desp_veh_doc_auto,
    desp_veh_fecha_auto,desp_veh_capacidad,accion,usuario,hora)  values 
    (antes.veh_codigo ,antes.veh_marca ,antes.veh_modelo ,antes.veh_color 
    ,antes.veh_placas ,antes.veh_empresa ,antes.veh_tipo ,antes.veh_doc_auto 
    ,antes.veh_fecha_auto ,antes.veh_capacidad ,NULL ,NULL ,NULL ,'' ,
    '' ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_esp_vehiculos update on "informix"
    .esp_vehiculos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esp_vehiculos (veh_codigo,
    veh_marca,veh_modelo,veh_color,veh_placas,veh_empresa,veh_tipo,veh_doc_auto,
    veh_fecha_auto,veh_capacidad,desp_veh_codigo,desp_veh_marca,desp_veh_modelo,
    desp_veh_color,desp_veh_placas,desp_veh_empresa,desp_veh_tipo,desp_veh_doc_auto,
    desp_veh_fecha_auto,desp_veh_capacidad,accion,usuario,hora)  values 
    (antes.veh_codigo ,antes.veh_marca ,antes.veh_modelo ,antes.veh_color 
    ,antes.veh_placas ,antes.veh_empresa ,antes.veh_tipo ,antes.veh_doc_auto 
    ,antes.veh_fecha_auto ,antes.veh_capacidad ,luego.veh_codigo ,luego.veh_marca 
    ,luego.veh_modelo ,luego.veh_color ,luego.veh_placas ,luego.veh_empresa 
    ,luego.veh_tipo ,luego.veh_doc_auto ,luego.veh_fecha_auto ,luego.veh_capacidad 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_luni_solicitud insert on "informix"
    .luni_solicitud referencing new as luego
    for each row
        (
        insert into "informix".aud_luni_solicitud (sol_numero,
    sol_docto,sol_fecha,sol_obs,sol_dependencia,sol_comte,sol_logistico,
    sol_dotac,sol_usuario,sol_comprobante,desp_sol_numero,desp_sol_docto,
    desp_sol_fecha,desp_sol_obs,desp_sol_dependencia,desp_sol_comte,desp_sol_logistico,
    desp_sol_dotac,desp_sol_usuario,desp_sol_comprobante,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,luego.sol_numero ,luego.sol_docto ,luego.sol_fecha ,luego.sol_obs 
    ,luego.sol_dependencia ,luego.sol_comte ,luego.sol_logistico ,luego.sol_dotac 
    ,luego.sol_usuario ,luego.sol_comprobante ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_luni_solicitud delete on "informix"
    .luni_solicitud referencing old as antes
    for each row
        (
        insert into "informix".aud_luni_solicitud (sol_numero,
    sol_docto,sol_fecha,sol_obs,sol_dependencia,sol_comte,sol_logistico,
    sol_dotac,sol_usuario,sol_comprobante,desp_sol_numero,desp_sol_docto,
    desp_sol_fecha,desp_sol_obs,desp_sol_dependencia,desp_sol_comte,desp_sol_logistico,
    desp_sol_dotac,desp_sol_usuario,desp_sol_comprobante,accion,usuario,
    hora)  values (antes.sol_numero ,antes.sol_docto ,antes.sol_fecha 
    ,antes.sol_obs ,antes.sol_dependencia ,antes.sol_comte ,antes.sol_logistico 
    ,antes.sol_dotac ,antes.sol_usuario ,antes.sol_comprobante ,NULL 
    ,'' ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_luni_solicitud update on "informix"
    .luni_solicitud referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_luni_solicitud (sol_numero,
    sol_docto,sol_fecha,sol_obs,sol_dependencia,sol_comte,sol_logistico,
    sol_dotac,sol_usuario,sol_comprobante,desp_sol_numero,desp_sol_docto,
    desp_sol_fecha,desp_sol_obs,desp_sol_dependencia,desp_sol_comte,desp_sol_logistico,
    desp_sol_dotac,desp_sol_usuario,desp_sol_comprobante,accion,usuario,
    hora)  values (antes.sol_numero ,antes.sol_docto ,antes.sol_fecha 
    ,antes.sol_obs ,antes.sol_dependencia ,antes.sol_comte ,antes.sol_logistico 
    ,antes.sol_dotac ,antes.sol_usuario ,antes.sol_comprobante ,luego.sol_numero 
    ,luego.sol_docto ,luego.sol_fecha ,luego.sol_obs ,luego.sol_dependencia 
    ,luego.sol_comte ,luego.sol_logistico ,luego.sol_dotac ,luego.sol_usuario 
    ,luego.sol_comprobante ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_luni_detallesoli insert on "informix"
    .luni_detallesoli referencing new as luego
    for each row
        (
        insert into "informix".aud_luni_detallesoli (dets_solicitud,
    dets_uniforme,dets_talla,dets_total,dets_status,desp_dets_solicitud,
    desp_dets_uniforme,desp_dets_talla,desp_dets_total,desp_dets_status,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,luego.dets_solicitud 
    ,luego.dets_uniforme ,luego.dets_talla ,luego.dets_total ,luego.dets_status 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_luni_detallesoli delete on "informix"
    .luni_detallesoli referencing old as antes
    for each row
        (
        insert into "informix".aud_luni_detallesoli (dets_solicitud,
    dets_uniforme,dets_talla,dets_total,dets_status,desp_dets_solicitud,
    desp_dets_uniforme,desp_dets_talla,desp_dets_total,desp_dets_status,
    accion,usuario,hora)  values (antes.dets_solicitud ,antes.dets_uniforme 
    ,antes.dets_talla ,antes.dets_total ,antes.dets_status ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_luni_detallesoli update on "informix"
    .luni_detallesoli referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_luni_detallesoli (dets_solicitud,
    dets_uniforme,dets_talla,dets_total,dets_status,desp_dets_solicitud,
    desp_dets_uniforme,desp_dets_talla,desp_dets_total,desp_dets_status,
    accion,usuario,hora)  values (antes.dets_solicitud ,antes.dets_uniforme 
    ,antes.dets_talla ,antes.dets_total ,antes.dets_status ,luego.dets_solicitud 
    ,luego.dets_uniforme ,luego.dets_talla ,luego.dets_total ,luego.dets_status 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_luni_detsol_log insert on "informix"
    .luni_detsol_log referencing new as luego
    for each row
        (
        insert into "informix".aud_luni_detsol_log (detu_solicitud,
    detu_uniforme,detu_talla,detu_total,detu_fecha,detu_usuario,detu_situacion,
    detu_comprobante,detu_dotacion,detu_dependencia,desp_detu_solicitud,
    desp_detu_uniforme,desp_detu_talla,desp_detu_total,desp_detu_fecha,
    desp_detu_usuario,desp_detu_situacion,desp_detu_comprobante,desp_detu_dotacion,
    desp_detu_dependencia,accion,usuario,hora)  values (NULL ,NULL ,NULL 
    ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,luego.detu_solicitud ,luego.detu_uniforme 
    ,luego.detu_talla ,luego.detu_total ,luego.detu_fecha ,luego.detu_usuario 
    ,luego.detu_situacion ,luego.detu_comprobante ,luego.detu_dotacion 
    ,luego.detu_dependencia ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_luni_detsol_log delete on "informix"
    .luni_detsol_log referencing old as antes
    for each row
        (
        insert into "informix".aud_luni_detsol_log (detu_solicitud,
    detu_uniforme,detu_talla,detu_total,detu_fecha,detu_usuario,detu_situacion,
    detu_comprobante,detu_dotacion,detu_dependencia,desp_detu_solicitud,
    desp_detu_uniforme,desp_detu_talla,desp_detu_total,desp_detu_fecha,
    desp_detu_usuario,desp_detu_situacion,desp_detu_comprobante,desp_detu_dotacion,
    desp_detu_dependencia,accion,usuario,hora)  values (antes.detu_solicitud 
    ,antes.detu_uniforme ,antes.detu_talla ,antes.detu_total ,antes.detu_fecha 
    ,antes.detu_usuario ,antes.detu_situacion ,antes.detu_comprobante 
    ,antes.detu_dotacion ,antes.detu_dependencia ,NULL ,NULL ,NULL ,NULL 
    ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_luni_detsol_log update on "informix"
    .luni_detsol_log referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_luni_detsol_log (detu_solicitud,
    detu_uniforme,detu_talla,detu_total,detu_fecha,detu_usuario,detu_situacion,
    detu_comprobante,detu_dotacion,detu_dependencia,desp_detu_solicitud,
    desp_detu_uniforme,desp_detu_talla,desp_detu_total,desp_detu_fecha,
    desp_detu_usuario,desp_detu_situacion,desp_detu_comprobante,desp_detu_dotacion,
    desp_detu_dependencia,accion,usuario,hora)  values (antes.detu_solicitud 
    ,antes.detu_uniforme ,antes.detu_talla ,antes.detu_total ,antes.detu_fecha 
    ,antes.detu_usuario ,antes.detu_situacion ,antes.detu_comprobante 
    ,antes.detu_dotacion ,antes.detu_dependencia ,luego.detu_solicitud 
    ,luego.detu_uniforme ,luego.detu_talla ,luego.detu_total ,luego.detu_fecha 
    ,luego.detu_usuario ,luego.detu_situacion ,luego.detu_comprobante 
    ,luego.detu_dotacion ,luego.detu_dependencia ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_luni_situacion insert on "informix"
    .luni_situacion referencing new as luego
    for each row
        (
        insert into "informix".aud_luni_situacion (sit_codigo,
    sit_descrip,desp_sit_codigo,desp_sit_descrip,accion,usuario,hora) 
     values (NULL ,'' ,luego.sit_codigo ,luego.sit_descrip ,'I' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".del_luni_situacion delete on "informix"
    .luni_situacion referencing old as antes
    for each row
        (
        insert into "informix".aud_luni_situacion (sit_codigo,
    sit_descrip,desp_sit_codigo,desp_sit_descrip,accion,usuario,hora) 
     values (antes.sit_codigo ,antes.sit_descrip ,NULL ,'' ,'D' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".act_luni_situacion update on "informix"
    .luni_situacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_luni_situacion (sit_codigo,
    sit_descrip,desp_sit_codigo,desp_sit_descrip,accion,usuario,hora) 
     values (antes.sit_codigo ,antes.sit_descrip ,luego.sit_codigo ,luego.sit_descrip 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_luni_documento insert on "informix"
    .luni_documento referencing new as luego
    for each row
        (
        insert into "informix".aud_luni_documento (doc_numero,
    doc_documento,doc_situacion,desp_doc_numero,desp_doc_documento,desp_doc_situacion,
    accion,usuario,hora)  values (NULL ,'' ,NULL ,luego.doc_numero ,luego.doc_documento 
    ,luego.doc_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_luni_documento delete on "informix"
    .luni_documento referencing old as antes
    for each row
        (
        insert into "informix".aud_luni_documento (doc_numero,
    doc_documento,doc_situacion,desp_doc_numero,desp_doc_documento,desp_doc_situacion,
    accion,usuario,hora)  values (antes.doc_numero ,antes.doc_documento 
    ,antes.doc_situacion ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_luni_documento update on "informix"
    .luni_documento referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_luni_documento (doc_numero,
    doc_documento,doc_situacion,desp_doc_numero,desp_doc_documento,desp_doc_situacion,
    accion,usuario,hora)  values (antes.doc_numero ,antes.doc_documento 
    ,antes.doc_situacion ,luego.doc_numero ,luego.doc_documento ,luego.doc_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_luni_talla insert on "informix".luni_talla 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_luni_talla (tal_codigo,tal_descrip,
    desp_tal_codigo,desp_tal_descrip,accion,usuario,hora)  values (NULL 
    ,'' ,luego.tal_codigo ,luego.tal_descrip ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_luni_talla delete on "informix".luni_talla 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_luni_talla (tal_codigo,tal_descrip,
    desp_tal_codigo,desp_tal_descrip,accion,usuario,hora)  values (antes.tal_codigo 
    ,antes.tal_descrip ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_luni_talla update on "informix".luni_talla 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_luni_talla (tal_codigo,tal_descrip,
    desp_tal_codigo,desp_tal_descrip,accion,usuario,hora)  values (antes.tal_codigo 
    ,antes.tal_descrip ,luego.tal_codigo ,luego.tal_descrip ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_lmun_tipo update on "informix".lmun_tipo1 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_tipo (tip_cod,tip_desc,
    tip_usuario,desp_tip_cod,desp_tip_desc,desp_tip_usuario,accion,usuario,
    hora)  values (antes.tip_cod ,antes.tip_desc ,antes.tip_usuario ,
    luego.tip_cod ,luego.tip_desc ,luego.tip_usuario ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_lmun_tipo insert on "informix".lmun_tipo1 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_tipo (tip_cod,tip_desc,
    tip_usuario,desp_tip_cod,desp_tip_desc,desp_tip_usuario,accion,usuario,
    hora)  values (NULL ,'' ,NULL ,luego.tip_cod ,luego.tip_desc ,luego.tip_usuario 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_tipo delete on "informix".lmun_tipo1 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_tipo (tip_cod,tip_desc,
    tip_usuario,desp_tip_cod,desp_tip_desc,desp_tip_usuario,accion,usuario,
    hora)  values (antes.tip_cod ,antes.tip_desc ,antes.tip_usuario ,
    NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lmun_calibre update on "informix"
    .lmun_calibre1 referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_calibre (cal_codigo,cal_desc,
    cal_usuario,desp_cal_codigo,desp_cal_desc,desp_cal_usuario,accion,
    usuario,hora)  values (antes.cal_codigo ,antes.cal_desc ,antes.cal_usuario 
    ,luego.cal_codigo ,luego.cal_desc ,luego.cal_usuario ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_lmun_calibre insert on "informix"
    .lmun_calibre1 referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_calibre (cal_codigo,cal_desc,
    cal_usuario,desp_cal_codigo,desp_cal_desc,desp_cal_usuario,accion,
    usuario,hora)  values (NULL ,'' ,NULL ,luego.cal_codigo ,luego.cal_desc 
    ,luego.cal_usuario ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_calibre delete on "informix"
    .lmun_calibre1 referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_calibre (cal_codigo,cal_desc,
    cal_usuario,desp_cal_codigo,desp_cal_desc,desp_cal_usuario,accion,
    usuario,hora)  values (antes.cal_codigo ,antes.cal_desc ,antes.cal_usuario 
    ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lmun_marca update on "informix".lmun_marca 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_marca (mar_codigo,mar_desc,
    mar_usuario,desp_mar_codigo,desp_mar_desc,desp_mar_usuario,accion,
    usuario,hora)  values (antes.mar_codigo ,antes.mar_desc ,antes.mar_usuario 
    ,luego.mar_codigo ,luego.mar_desc ,luego.mar_usuario ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_lmun_marca insert on "informix".lmun_marca 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_marca (mar_codigo,mar_desc,
    mar_usuario,desp_mar_codigo,desp_mar_desc,desp_mar_usuario,accion,
    usuario,hora)  values (NULL ,'' ,NULL ,luego.mar_codigo ,luego.mar_desc 
    ,luego.mar_usuario ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_marca delete on "informix".lmun_marca 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_marca (mar_codigo,mar_desc,
    mar_usuario,desp_mar_codigo,desp_mar_desc,desp_mar_usuario,accion,
    usuario,hora)  values (antes.mar_codigo ,antes.mar_desc ,antes.mar_usuario 
    ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lmun_color update on "informix".lmun_color 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_color (col_cod,col_desc,
    desp_col_cod,desp_col_desc,accion,usuario,hora)  values (antes.col_cod 
    ,antes.col_desc ,luego.col_cod ,luego.col_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_lmun_color insert on "informix".lmun_color 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_color (col_cod,col_desc,
    desp_col_cod,desp_col_desc,accion,usuario,hora)  values (NULL ,'' 
    ,luego.col_cod ,luego.col_desc ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_lmun_color delete on "informix".lmun_color 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_color (col_cod,col_desc,
    desp_col_cod,desp_col_desc,accion,usuario,hora)  values (antes.col_cod 
    ,antes.col_desc ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_lmun_modelo update on "informix"
    .lmun_modelo referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_modelo (mod_codigo,mod_docto,
    mod_desc,mod_cantidad,mod_usuario,desp_mod_codigo,desp_mod_docto,
    desp_mod_desc,desp_mod_cantidad,desp_mod_usuario,accion,usuario,hora) 
     values (antes.mod_codigo ,antes.mod_docto ,antes.mod_desc ,antes.mod_cantidad 
    ,antes.mod_usuario ,luego.mod_codigo ,luego.mod_docto ,luego.mod_desc 
    ,luego.mod_cantidad ,luego.mod_usuario ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_lmun_modelo insert on "informix"
    .lmun_modelo referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_modelo (mod_codigo,mod_docto,
    mod_desc,mod_cantidad,mod_usuario,desp_mod_codigo,desp_mod_docto,
    desp_mod_desc,desp_mod_cantidad,desp_mod_usuario,accion,usuario,hora) 
     values (NULL ,'' ,'' ,NULL ,NULL ,luego.mod_codigo ,luego.mod_docto 
    ,luego.mod_desc ,luego.mod_cantidad ,luego.mod_usuario ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_modelo delete on "informix"
    .lmun_modelo referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_modelo (mod_codigo,mod_docto,
    mod_desc,mod_cantidad,mod_usuario,desp_mod_codigo,desp_mod_docto,
    desp_mod_desc,desp_mod_cantidad,desp_mod_usuario,accion,usuario,hora) 
     values (antes.mod_codigo ,antes.mod_docto ,antes.mod_desc ,antes.mod_cantidad 
    ,antes.mod_usuario ,NULL ,'' ,'' ,NULL ,NULL ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_lmun_fabrica update on "informix"
    .lmun_fabrica referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_fabrica (fab_codigo,fab_desc_lg,
    fab_desc_md,fab_desc_ct,fab_pais,fab_usuario,desp_fab_codigo,desp_fab_desc_lg,
    desp_fab_desc_md,desp_fab_desc_ct,desp_fab_pais,desp_fab_usuario,
    accion,usuario,hora)  values (antes.fab_codigo ,antes.fab_desc_lg 
    ,antes.fab_desc_md ,antes.fab_desc_ct ,antes.fab_pais ,antes.fab_usuario 
    ,luego.fab_codigo ,luego.fab_desc_lg ,luego.fab_desc_md ,luego.fab_desc_ct 
    ,luego.fab_pais ,luego.fab_usuario ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_lmun_fabrica insert on "informix"
    .lmun_fabrica referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_fabrica (fab_codigo,fab_desc_lg,
    fab_desc_md,fab_desc_ct,fab_pais,fab_usuario,desp_fab_codigo,desp_fab_desc_lg,
    desp_fab_desc_md,desp_fab_desc_ct,desp_fab_pais,desp_fab_usuario,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,NULL ,NULL ,luego.fab_codigo 
    ,luego.fab_desc_lg ,luego.fab_desc_md ,luego.fab_desc_ct ,luego.fab_pais 
    ,luego.fab_usuario ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_fabrica delete on "informix"
    .lmun_fabrica referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_fabrica (fab_codigo,fab_desc_lg,
    fab_desc_md,fab_desc_ct,fab_pais,fab_usuario,desp_fab_codigo,desp_fab_desc_lg,
    desp_fab_desc_md,desp_fab_desc_ct,desp_fab_pais,desp_fab_usuario,
    accion,usuario,hora)  values (antes.fab_codigo ,antes.fab_desc_lg 
    ,antes.fab_desc_md ,antes.fab_desc_ct ,antes.fab_pais ,antes.fab_usuario 
    ,NULL ,'' ,'' ,'' ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_lmun_lote update on "informix".lmun_lote1 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_lote (lot_tipo,lot_lote,
    lot_marca,lot_modelo,lot_calibre,lot_fec_cad,lot_fabrica,lot_color_laca,
    lot_cantidad,lot_usuario,lot_dep,lot_fec_fab,lot_fec,desp_lot_tipo,
    desp_lot_lote,desp_lot_marca,desp_lot_modelo,desp_lot_calibre,desp_lot_fec_cad,
    desp_lot_fabrica,desp_lot_color_laca,desp_lot_cantidad,desp_lot_usuario,
    desp_lot_dep,desp_lot_fec_fab,desp_lot_fec,accion,usuario,hora)  
    values (antes.lot_tipo ,antes.lot_lote ,antes.lot_marca ,antes.lot_modelo 
    ,antes.lot_calibre ,antes.lot_fec_cad ,antes.lot_fabrica ,antes.lot_color_laca 
    ,antes.lot_cantidad ,antes.lot_usuario ,antes.lot_dep ,antes.lot_fec_fab 
    ,antes.lot_fec ,luego.lot_tipo ,luego.lot_lote ,luego.lot_marca ,
    luego.lot_modelo ,luego.lot_calibre ,luego.lot_fec_cad ,luego.lot_fabrica 
    ,luego.lot_color_laca ,luego.lot_cantidad ,luego.lot_usuario ,luego.lot_dep 
    ,luego.lot_fec_fab ,luego.lot_fec ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_lmun_lote insert on "informix".lmun_lote1 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_lote (lot_tipo,lot_lote,
    lot_marca,lot_modelo,lot_calibre,lot_fec_cad,lot_fabrica,lot_color_laca,
    lot_cantidad,lot_usuario,lot_dep,lot_fec_fab,lot_fec,desp_lot_tipo,
    desp_lot_lote,desp_lot_marca,desp_lot_modelo,desp_lot_calibre,desp_lot_fec_cad,
    desp_lot_fabrica,desp_lot_color_laca,desp_lot_cantidad,desp_lot_usuario,
    desp_lot_dep,desp_lot_fec_fab,desp_lot_fec,accion,usuario,hora)  
    values (NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,
    NULL ,'' ,'' ,luego.lot_tipo ,luego.lot_lote ,luego.lot_marca ,luego.lot_modelo 
    ,luego.lot_calibre ,luego.lot_fec_cad ,luego.lot_fabrica ,luego.lot_color_laca 
    ,luego.lot_cantidad ,luego.lot_usuario ,luego.lot_dep ,luego.lot_fec_fab 
    ,luego.lot_fec ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_lote delete on "informix".lmun_lote1 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_lote (lot_tipo,lot_lote,
    lot_marca,lot_modelo,lot_calibre,lot_fec_cad,lot_fabrica,lot_color_laca,
    lot_cantidad,lot_usuario,lot_dep,lot_fec_fab,lot_fec,desp_lot_tipo,
    desp_lot_lote,desp_lot_marca,desp_lot_modelo,desp_lot_calibre,desp_lot_fec_cad,
    desp_lot_fabrica,desp_lot_color_laca,desp_lot_cantidad,desp_lot_usuario,
    desp_lot_dep,desp_lot_fec_fab,desp_lot_fec,accion,usuario,hora)  
    values (antes.lot_tipo ,antes.lot_lote ,antes.lot_marca ,antes.lot_modelo 
    ,antes.lot_calibre ,antes.lot_fec_cad ,antes.lot_fabrica ,antes.lot_color_laca 
    ,antes.lot_cantidad ,antes.lot_usuario ,antes.lot_dep ,antes.lot_fec_fab 
    ,antes.lot_fec ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lmun_situacion update on "informix"
    .lmun_situacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_situacion (sit_cod,sit_desc,
    sit_usuario,desp_sit_cod,desp_sit_desc,desp_sit_usuario,accion,usuario,
    hora)  values (antes.sit_cod ,antes.sit_desc ,antes.sit_usuario ,
    luego.sit_cod ,luego.sit_desc ,luego.sit_usuario ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_lmun_situacion insert on "informix"
    .lmun_situacion referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_situacion (sit_cod,sit_desc,
    sit_usuario,desp_sit_cod,desp_sit_desc,desp_sit_usuario,accion,usuario,
    hora)  values (NULL ,'' ,NULL ,luego.sit_cod ,luego.sit_desc ,luego.sit_usuario 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_situacion delete on "informix"
    .lmun_situacion referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_situacion (sit_cod,sit_desc,
    sit_usuario,desp_sit_cod,desp_sit_desc,desp_sit_usuario,accion,usuario,
    hora)  values (antes.sit_cod ,antes.sit_desc ,antes.sit_usuario ,
    NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_l_municion update on "informix".l_municion 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_l_municion (mun_codigo,mun_tipo,
    mun_lote,mun_plaza,mun_cantidad,mun_situacion,mun_fecha_act,mun_usuario,
    desp_mun_codigo,desp_mun_tipo,desp_mun_lote,desp_mun_plaza,desp_mun_cantidad,
    desp_mun_situacion,desp_mun_fecha_act,desp_mun_usuario,accion,usuario,
    hora)  values (antes.mun_codigo ,antes.mun_tipo ,antes.mun_lote ,
    antes.mun_plaza ,antes.mun_cantidad ,antes.mun_situacion ,antes.mun_fecha_act 
    ,antes.mun_usuario ,luego.mun_codigo ,luego.mun_tipo ,luego.mun_lote 
    ,luego.mun_plaza ,luego.mun_cantidad ,luego.mun_situacion ,luego.mun_fecha_act 
    ,luego.mun_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_l_municion insert on "informix".l_municion 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_l_municion (mun_codigo,mun_tipo,
    mun_lote,mun_plaza,mun_cantidad,mun_situacion,mun_fecha_act,mun_usuario,
    desp_mun_codigo,desp_mun_tipo,desp_mun_lote,desp_mun_plaza,desp_mun_cantidad,
    desp_mun_situacion,desp_mun_fecha_act,desp_mun_usuario,accion,usuario,
    hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,luego.mun_codigo 
    ,luego.mun_tipo ,luego.mun_lote ,luego.mun_plaza ,luego.mun_cantidad 
    ,luego.mun_situacion ,luego.mun_fecha_act ,luego.mun_usuario ,'I' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_l_municion delete on "informix".l_municion 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_l_municion (mun_codigo,mun_tipo,
    mun_lote,mun_plaza,mun_cantidad,mun_situacion,mun_fecha_act,mun_usuario,
    desp_mun_codigo,desp_mun_tipo,desp_mun_lote,desp_mun_plaza,desp_mun_cantidad,
    desp_mun_situacion,desp_mun_fecha_act,desp_mun_usuario,accion,usuario,
    hora)  values (antes.mun_codigo ,antes.mun_tipo ,antes.mun_lote ,
    antes.mun_plaza ,antes.mun_cantidad ,antes.mun_situacion ,antes.mun_fecha_act 
    ,antes.mun_usuario ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,
    'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lmun_uso update on "informix".lmun_uso1 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_uso (uso_codigo,uso_desc,
    uso_usuario,desp_uso_codigo,desp_uso_desc,desp_uso_usuario,accion,
    usuario,hora)  values (antes.uso_codigo ,antes.uso_desc ,antes.uso_usuario 
    ,luego.uso_codigo ,luego.uso_desc ,luego.uso_usuario ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_lmun_uso insert on "informix".lmun_uso1 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_uso (uso_codigo,uso_desc,
    uso_usuario,desp_uso_codigo,desp_uso_desc,desp_uso_usuario,accion,
    usuario,hora)  values (NULL ,'' ,NULL ,luego.uso_codigo ,luego.uso_desc 
    ,luego.uso_usuario ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_uso delete on "informix".lmun_uso1 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_uso (uso_codigo,uso_desc,
    uso_usuario,desp_uso_codigo,desp_uso_desc,desp_uso_usuario,accion,
    usuario,hora)  values (antes.uso_codigo ,antes.uso_desc ,antes.uso_usuario 
    ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lmun_carga update on "informix".lmun_carga 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_carga (car_codigo,car_desc,
    car_usuario,desp_car_codigo,desp_car_desc,desp_car_usuario,accion,
    usuario,hora)  values (antes.car_codigo ,antes.car_desc ,antes.car_usuario 
    ,luego.car_codigo ,luego.car_desc ,luego.car_usuario ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_lmun_carga insert on "informix".lmun_carga 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_carga (car_codigo,car_desc,
    car_usuario,desp_car_codigo,desp_car_desc,desp_car_usuario,accion,
    usuario,hora)  values (NULL ,'' ,NULL ,luego.car_codigo ,luego.car_desc 
    ,luego.car_usuario ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_carga delete on "informix".lmun_carga 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_carga (car_codigo,car_desc,
    car_usuario,desp_car_codigo,desp_car_desc,desp_car_usuario,accion,
    usuario,hora)  values (antes.car_codigo ,antes.car_desc ,antes.car_usuario 
    ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lmun_solicitud update on "informix"
    .lmun_solicitud1 referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_solicitud (sol_numero,
    sol_solasigna,sol_tipo_sol,sol_documento,sol_uso,sol_carga,sol_dependencia,
    sol_plaza,sol_motivo,sol_fecha,sol_logistico,sol_inspector,sol_comandante,
    sol_usuario,desp_sol_numero,desp_sol_solasigna,desp_sol_tipo_sol,
    desp_sol_documento,desp_sol_uso,desp_sol_carga,desp_sol_dependencia,
    desp_sol_plaza,desp_sol_motivo,desp_sol_fecha,desp_sol_logistico,
    desp_sol_inspector,desp_sol_comandante,desp_sol_usuario,accion,usuario,
    hora)  values (antes.sol_numero ,antes.sol_solasigna ,antes.sol_tipo_sol 
    ,antes.sol_documento ,antes.sol_uso ,antes.sol_carga ,antes.sol_dependencia 
    ,antes.sol_plaza ,antes.sol_motivo ,antes.sol_fecha ,antes.sol_logistico 
    ,antes.sol_inspector ,antes.sol_comandante ,antes.sol_usuario ,luego.sol_numero 
    ,luego.sol_solasigna ,luego.sol_tipo_sol ,luego.sol_documento ,luego.sol_uso 
    ,luego.sol_carga ,luego.sol_dependencia ,luego.sol_plaza ,luego.sol_motivo 
    ,luego.sol_fecha ,luego.sol_logistico ,luego.sol_inspector ,luego.sol_comandante 
    ,luego.sol_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lmun_solicitud insert on "informix"
    .lmun_solicitud1 referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_solicitud (sol_numero,
    sol_solasigna,sol_tipo_sol,sol_documento,sol_uso,sol_carga,sol_dependencia,
    sol_plaza,sol_motivo,sol_fecha,sol_logistico,sol_inspector,sol_comandante,
    sol_usuario,desp_sol_numero,desp_sol_solasigna,desp_sol_tipo_sol,
    desp_sol_documento,desp_sol_uso,desp_sol_carga,desp_sol_dependencia,
    desp_sol_plaza,desp_sol_motivo,desp_sol_fecha,desp_sol_logistico,
    desp_sol_inspector,desp_sol_comandante,desp_sol_usuario,accion,usuario,
    hora)  values (NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,'' ,'' 
    ,NULL ,NULL ,NULL ,NULL ,luego.sol_numero ,luego.sol_solasigna ,luego.sol_tipo_sol 
    ,luego.sol_documento ,luego.sol_uso ,luego.sol_carga ,luego.sol_dependencia 
    ,luego.sol_plaza ,luego.sol_motivo ,luego.sol_fecha ,luego.sol_logistico 
    ,luego.sol_inspector ,luego.sol_comandante ,luego.sol_usuario ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_solicitud delete on "informix"
    .lmun_solicitud1 referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_solicitud (sol_numero,
    sol_solasigna,sol_tipo_sol,sol_documento,sol_uso,sol_carga,sol_dependencia,
    sol_plaza,sol_motivo,sol_fecha,sol_logistico,sol_inspector,sol_comandante,
    sol_usuario,desp_sol_numero,desp_sol_solasigna,desp_sol_tipo_sol,
    desp_sol_documento,desp_sol_uso,desp_sol_carga,desp_sol_dependencia,
    desp_sol_plaza,desp_sol_motivo,desp_sol_fecha,desp_sol_logistico,
    desp_sol_inspector,desp_sol_comandante,desp_sol_usuario,accion,usuario,
    hora)  values (antes.sol_numero ,antes.sol_solasigna ,antes.sol_tipo_sol 
    ,antes.sol_documento ,antes.sol_uso ,antes.sol_carga ,antes.sol_dependencia 
    ,antes.sol_plaza ,antes.sol_motivo ,antes.sol_fecha ,antes.sol_logistico 
    ,antes.sol_inspector ,antes.sol_comandante ,antes.sol_usuario ,NULL 
    ,NULL ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,NULL ,NULL 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lmun_det_solicitud update on "informix"
    .lmun_det_solicitud referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_lmun_det_solicitud (det_solicitud,
    det_tipo_mun,det_calibre,det_cantidad,det_usuario,desp_det_solicitud,
    desp_det_tipo_mun,desp_det_calibre,desp_det_cantidad,desp_det_usuario,
    accion,usuario,hora)  values (antes.det_solicitud ,antes.det_tipo_mun 
    ,antes.det_calibre ,antes.det_cantidad ,antes.det_usuario ,luego.det_solicitud 
    ,luego.det_tipo_mun ,luego.det_calibre ,luego.det_cantidad ,luego.det_usuario 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lmun_det_solicitud insert on "informix"
    .lmun_det_solicitud referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_det_solicitud (det_solicitud,
    det_tipo_mun,det_calibre,det_cantidad,det_usuario,desp_det_solicitud,
    desp_det_tipo_mun,desp_det_calibre,desp_det_cantidad,desp_det_usuario,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,luego.det_solicitud 
    ,luego.det_tipo_mun ,luego.det_calibre ,luego.det_cantidad ,luego.det_usuario 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_det_solicitud delete on "informix"
    .lmun_det_solicitud referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_det_solicitud (det_solicitud,
    det_tipo_mun,det_calibre,det_cantidad,det_usuario,desp_det_solicitud,
    desp_det_tipo_mun,desp_det_calibre,desp_det_cantidad,desp_det_usuario,
    accion,usuario,hora)  values (antes.det_solicitud ,antes.det_tipo_mun 
    ,antes.det_calibre ,antes.det_cantidad ,antes.det_usuario ,NULL ,
    NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_lmun_det_solasigna update on "informix"
    .lmun_det_solasigna referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_lmun_det_solasigna (deta_solicitud,
    deta_municion,deta_cantidad,deta_usuario,desp_deta_solicitud,desp_deta_municion,
    desp_deta_cantidad,desp_deta_usuario,accion,usuario,hora)  values 
    (antes.deta_solicitud ,antes.deta_municion ,antes.deta_cantidad ,
    antes.deta_usuario ,luego.deta_solicitud ,luego.deta_municion ,luego.deta_cantidad 
    ,luego.deta_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lmun_det_solasigna insert on "informix"
    .lmun_det_solasigna referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_det_solasigna (deta_solicitud,
    deta_municion,deta_cantidad,deta_usuario,desp_deta_solicitud,desp_deta_municion,
    desp_deta_cantidad,desp_deta_usuario,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,NULL ,luego.deta_solicitud ,luego.deta_municion 
    ,luego.deta_cantidad ,luego.deta_usuario ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_lmun_det_solasigna delete on "informix"
    .lmun_det_solasigna referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_det_solasigna (deta_solicitud,
    deta_municion,deta_cantidad,deta_usuario,desp_deta_solicitud,desp_deta_municion,
    desp_deta_cantidad,desp_deta_usuario,accion,usuario,hora)  values 
    (antes.deta_solicitud ,antes.deta_municion ,antes.deta_cantidad ,
    antes.deta_usuario ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_lmun_det_cambiosit update on "informix"
    .lmun_det_cambiosit referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_lmun_det_cambiosit (detc_solicitud,
    detc_municion,detc_cantidad,detc_situacion,detc_usuario,desp_detc_solicitud,
    desp_detc_municion,desp_detc_cantidad,desp_detc_situacion,desp_detc_usuario,
    accion,usuario,hora)  values (antes.detc_solicitud ,antes.detc_municion 
    ,antes.detc_cantidad ,antes.detc_situacion ,antes.detc_usuario ,luego.detc_solicitud 
    ,luego.detc_municion ,luego.detc_cantidad ,luego.detc_situacion ,
    luego.detc_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lmun_det_cambiosit insert on "informix"
    .lmun_det_cambiosit referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_det_cambiosit (detc_solicitud,
    detc_municion,detc_cantidad,detc_situacion,detc_usuario,desp_detc_solicitud,
    desp_detc_municion,desp_detc_cantidad,desp_detc_situacion,desp_detc_usuario,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,luego.detc_solicitud 
    ,luego.detc_municion ,luego.detc_cantidad ,luego.detc_situacion ,
    luego.detc_usuario ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_det_cambiosit delete on "informix"
    .lmun_det_cambiosit referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_det_cambiosit (detc_solicitud,
    detc_municion,detc_cantidad,detc_situacion,detc_usuario,desp_detc_solicitud,
    desp_detc_municion,desp_detc_cantidad,desp_detc_situacion,desp_detc_usuario,
    accion,usuario,hora)  values (antes.detc_solicitud ,antes.detc_municion 
    ,antes.detc_cantidad ,antes.detc_situacion ,antes.detc_usuario ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_lmun_devolentre update on "informix"
    .lmun_devolentre referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_devolentre (dev_solicitud,
    dev_municion,dev_utiles,dev_vainas,dev_fallidas,dev_no_encont,dev_tot_uti,
    dev_usuario,dev_uso,dev_carga,dev_entregue,dev_recibi,dev_status,
    dev_observaciones,dev_fecha,dev_cantidad,dev_dependencia,desp_dev_solicitud,
    desp_dev_municion,desp_dev_utiles,desp_dev_vainas,desp_dev_fallidas,
    desp_dev_no_encont,desp_dev_tot_uti,desp_dev_usuario,desp_dev_uso,
    desp_dev_carga,desp_dev_entregue,desp_dev_recibi,desp_dev_status,
    desp_dev_observaciones,desp_dev_fecha,desp_dev_cantidad,desp_dev_dependencia,
    accion,usuario,hora)  values (antes.dev_solicitud ,antes.dev_municion 
    ,antes.dev_utiles ,antes.dev_vainas ,antes.dev_fallidas ,antes.dev_no_encont 
    ,antes.dev_tot_uti ,antes.dev_usuario ,antes.dev_uso ,antes.dev_carga 
    ,antes.dev_entregue ,antes.dev_recibi ,antes.dev_status ,antes.dev_observaciones 
    ,antes.dev_fecha ,antes.dev_cantidad ,antes.dev_dependencia ,luego.dev_solicitud 
    ,luego.dev_municion ,luego.dev_utiles ,luego.dev_vainas ,luego.dev_fallidas 
    ,luego.dev_no_encont ,luego.dev_tot_uti ,luego.dev_usuario ,luego.dev_uso 
    ,luego.dev_carga ,luego.dev_entregue ,luego.dev_recibi ,luego.dev_status 
    ,luego.dev_observaciones ,luego.dev_fecha ,luego.dev_cantidad ,luego.dev_dependencia 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lmun_devolentre insert on "informix"
    .lmun_devolentre referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_devolentre (dev_solicitud,
    dev_municion,dev_utiles,dev_vainas,dev_fallidas,dev_no_encont,dev_tot_uti,
    dev_usuario,dev_uso,dev_carga,dev_entregue,dev_recibi,dev_status,
    dev_observaciones,dev_fecha,dev_cantidad,dev_dependencia,desp_dev_solicitud,
    desp_dev_municion,desp_dev_utiles,desp_dev_vainas,desp_dev_fallidas,
    desp_dev_no_encont,desp_dev_tot_uti,desp_dev_usuario,desp_dev_uso,
    desp_dev_carga,desp_dev_entregue,desp_dev_recibi,desp_dev_status,
    desp_dev_observaciones,desp_dev_fecha,desp_dev_cantidad,desp_dev_dependencia,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,NULL ,NULL ,luego.dev_solicitud 
    ,luego.dev_municion ,luego.dev_utiles ,luego.dev_vainas ,luego.dev_fallidas 
    ,luego.dev_no_encont ,luego.dev_tot_uti ,luego.dev_usuario ,luego.dev_uso 
    ,luego.dev_carga ,luego.dev_entregue ,luego.dev_recibi ,luego.dev_status 
    ,luego.dev_observaciones ,luego.dev_fecha ,luego.dev_cantidad ,luego.dev_dependencia 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_devolentre delete on "informix"
    .lmun_devolentre referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_devolentre (dev_solicitud,
    dev_municion,dev_utiles,dev_vainas,dev_fallidas,dev_no_encont,dev_tot_uti,
    dev_usuario,dev_uso,dev_carga,dev_entregue,dev_recibi,dev_status,
    dev_observaciones,dev_fecha,dev_cantidad,dev_dependencia,desp_dev_solicitud,
    desp_dev_municion,desp_dev_utiles,desp_dev_vainas,desp_dev_fallidas,
    desp_dev_no_encont,desp_dev_tot_uti,desp_dev_usuario,desp_dev_uso,
    desp_dev_carga,desp_dev_entregue,desp_dev_recibi,desp_dev_status,
    desp_dev_observaciones,desp_dev_fecha,desp_dev_cantidad,desp_dev_dependencia,
    accion,usuario,hora)  values (antes.dev_solicitud ,antes.dev_municion 
    ,antes.dev_utiles ,antes.dev_vainas ,antes.dev_fallidas ,antes.dev_no_encont 
    ,antes.dev_tot_uti ,antes.dev_usuario ,antes.dev_uso ,antes.dev_carga 
    ,antes.dev_entregue ,antes.dev_recibi ,antes.dev_status ,antes.dev_observaciones 
    ,antes.dev_fecha ,antes.dev_cantidad ,antes.dev_dependencia ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,'' ,'' ,'' ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lmun_mov_solicitud update on "informix"
    .lmun_mov_solicitud referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_lmun_mov_solicitud (mov_solicitud,
    mov_correla,mov_fecha,mov_docto,mov_usuario,desp_mov_solicitud,desp_mov_correla,
    desp_mov_fecha,desp_mov_docto,desp_mov_usuario,accion,usuario,hora) 
     values (antes.mov_solicitud ,antes.mov_correla ,antes.mov_fecha 
    ,antes.mov_docto ,antes.mov_usuario ,luego.mov_solicitud ,luego.mov_correla 
    ,luego.mov_fecha ,luego.mov_docto ,luego.mov_usuario ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_lmun_mov_solicitud insert on "informix"
    .lmun_mov_solicitud referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_mov_solicitud (mov_solicitud,
    mov_correla,mov_fecha,mov_docto,mov_usuario,desp_mov_solicitud,desp_mov_correla,
    desp_mov_fecha,desp_mov_docto,desp_mov_usuario,accion,usuario,hora) 
     values (NULL ,NULL ,'' ,'' ,NULL ,luego.mov_solicitud ,luego.mov_correla 
    ,luego.mov_fecha ,luego.mov_docto ,luego.mov_usuario ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_lmun_mov_solicitud delete on "informix"
    .lmun_mov_solicitud referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_mov_solicitud (mov_solicitud,
    mov_correla,mov_fecha,mov_docto,mov_usuario,desp_mov_solicitud,desp_mov_correla,
    desp_mov_fecha,desp_mov_docto,desp_mov_usuario,accion,usuario,hora) 
     values (antes.mov_solicitud ,antes.mov_correla ,antes.mov_fecha 
    ,antes.mov_docto ,antes.mov_usuario ,NULL ,NULL ,'' ,'' ,NULL ,'D' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lmun_correla update on "informix"
    .lmun_correla referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_correla (cor_numero,cor_descrip,
    desp_cor_numero,desp_cor_descrip,accion,usuario,hora)  values (antes.cor_numero 
    ,antes.cor_descrip ,luego.cor_numero ,luego.cor_descrip ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lmun_correla insert on "informix"
    .lmun_correla referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_correla (cor_numero,cor_descrip,
    desp_cor_numero,desp_cor_descrip,accion,usuario,hora)  values (NULL 
    ,'' ,luego.cor_numero ,luego.cor_descrip ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_lmun_correla delete on "informix"
    .lmun_correla referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_correla (cor_numero,cor_descrip,
    desp_cor_numero,desp_cor_descrip,accion,usuario,hora)  values (antes.cor_numero 
    ,antes.cor_descrip ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_lmun_movimientos update on "informix"
    .lmun_movimientos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_movimientos (movi_municion,
    movi_numero,movi_cantidad,movi_plaza,movi_fecha,movi_uso,movi_carga,
    movi_observacion,movi_status,movi_usuario,desp_movi_municion,desp_movi_numero,
    desp_movi_cantidad,desp_movi_plaza,desp_movi_fecha,desp_movi_uso,
    desp_movi_carga,desp_movi_observacion,desp_movi_status,desp_movi_usuario,
    accion,usuario,hora)  values (antes.movi_municion ,antes.movi_numero 
    ,antes.movi_cantidad ,antes.movi_plaza ,antes.movi_fecha ,antes.movi_uso 
    ,antes.movi_carga ,antes.movi_observacion ,antes.movi_status ,antes.movi_usuario 
    ,luego.movi_municion ,luego.movi_numero ,luego.movi_cantidad ,luego.movi_plaza 
    ,luego.movi_fecha ,luego.movi_uso ,luego.movi_carga ,luego.movi_observacion 
    ,luego.movi_status ,luego.movi_usuario ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_lmun_movimientos insert on "informix"
    .lmun_movimientos referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_movimientos (movi_municion,
    movi_numero,movi_cantidad,movi_plaza,movi_fecha,movi_uso,movi_carga,
    movi_observacion,movi_status,movi_usuario,desp_movi_municion,desp_movi_numero,
    desp_movi_cantidad,desp_movi_plaza,desp_movi_fecha,desp_movi_uso,
    desp_movi_carga,desp_movi_observacion,desp_movi_status,desp_movi_usuario,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL 
    ,'' ,'' ,NULL ,luego.movi_municion ,luego.movi_numero ,luego.movi_cantidad 
    ,luego.movi_plaza ,luego.movi_fecha ,luego.movi_uso ,luego.movi_carga 
    ,luego.movi_observacion ,luego.movi_status ,luego.movi_usuario ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_movimientos delete on "informix"
    .lmun_movimientos referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_movimientos (movi_municion,
    movi_numero,movi_cantidad,movi_plaza,movi_fecha,movi_uso,movi_carga,
    movi_observacion,movi_status,movi_usuario,desp_movi_municion,desp_movi_numero,
    desp_movi_cantidad,desp_movi_plaza,desp_movi_fecha,desp_movi_uso,
    desp_movi_carga,desp_movi_observacion,desp_movi_status,desp_movi_usuario,
    accion,usuario,hora)  values (antes.movi_municion ,antes.movi_numero 
    ,antes.movi_cantidad ,antes.movi_plaza ,antes.movi_fecha ,antes.movi_uso 
    ,antes.movi_carga ,antes.movi_observacion ,antes.movi_status ,antes.movi_usuario 
    ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,'' ,'' ,NULL ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_lmun_asignacion update on "informix"
    .lmun_asignacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_asignacion (asig_codigo,
    asig_dependencia,asig_plaza,asig_municion,asig_cantidad,asig_uso,
    asig_carga,asig_observacion,asig_usuario,desp_asig_codigo,desp_asig_dependencia,
    desp_asig_plaza,desp_asig_municion,desp_asig_cantidad,desp_asig_uso,
    desp_asig_carga,desp_asig_observacion,desp_asig_usuario,accion,usuario,
    hora)  values (antes.asig_codigo ,antes.asig_dependencia ,antes.asig_plaza 
    ,antes.asig_municion ,antes.asig_cantidad ,antes.asig_uso ,antes.asig_carga 
    ,antes.asig_observacion ,antes.asig_usuario ,luego.asig_codigo ,luego.asig_dependencia 
    ,luego.asig_plaza ,luego.asig_municion ,luego.asig_cantidad ,luego.asig_uso 
    ,luego.asig_carga ,luego.asig_observacion ,luego.asig_usuario ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lmun_asignacion insert on "informix"
    .lmun_asignacion referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_asignacion (asig_codigo,
    asig_dependencia,asig_plaza,asig_municion,asig_cantidad,asig_uso,
    asig_carga,asig_observacion,asig_usuario,desp_asig_codigo,desp_asig_dependencia,
    desp_asig_plaza,desp_asig_municion,desp_asig_cantidad,desp_asig_uso,
    desp_asig_carga,desp_asig_observacion,desp_asig_usuario,accion,usuario,
    hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL 
    ,luego.asig_codigo ,luego.asig_dependencia ,luego.asig_plaza ,luego.asig_municion 
    ,luego.asig_cantidad ,luego.asig_uso ,luego.asig_carga ,luego.asig_observacion 
    ,luego.asig_usuario ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_asignacion delete on "informix"
    .lmun_asignacion referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_asignacion (asig_codigo,
    asig_dependencia,asig_plaza,asig_municion,asig_cantidad,asig_uso,
    asig_carga,asig_observacion,asig_usuario,desp_asig_codigo,desp_asig_dependencia,
    desp_asig_plaza,desp_asig_municion,desp_asig_cantidad,desp_asig_uso,
    desp_asig_carga,desp_asig_observacion,desp_asig_usuario,accion,usuario,
    hora)  values (antes.asig_codigo ,antes.asig_dependencia ,antes.asig_plaza 
    ,antes.asig_municion ,antes.asig_cantidad ,antes.asig_uso ,antes.asig_carga 
    ,antes.asig_observacion ,antes.asig_usuario ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_lmun_cambio_sit update on "informix"
    .lmun_cambio_sit referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_cambio_sit (cam_codigo,
    cam_dependencia,cam_plaza,cam_municion,cam_cantidad,cam_uso,cam_carga,
    cam_observacion,cam_situacion,cam_usuario,cam_fecha,desp_cam_codigo,
    desp_cam_dependencia,desp_cam_plaza,desp_cam_municion,desp_cam_cantidad,
    desp_cam_uso,desp_cam_carga,desp_cam_observacion,desp_cam_situacion,
    desp_cam_usuario,desp_cam_fecha,accion,usuario,hora)  values (antes.cam_codigo 
    ,antes.cam_dependencia ,antes.cam_plaza ,antes.cam_municion ,antes.cam_cantidad 
    ,antes.cam_uso ,antes.cam_carga ,antes.cam_observacion ,antes.cam_situacion 
    ,antes.cam_usuario ,antes.cam_fecha ,luego.cam_codigo ,luego.cam_dependencia 
    ,luego.cam_plaza ,luego.cam_municion ,luego.cam_cantidad ,luego.cam_uso 
    ,luego.cam_carga ,luego.cam_observacion ,luego.cam_situacion ,luego.cam_usuario 
    ,luego.cam_fecha ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lmun_cambio_sit insert on "informix"
    .lmun_cambio_sit referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_cambio_sit (cam_codigo,
    cam_dependencia,cam_plaza,cam_municion,cam_cantidad,cam_uso,cam_carga,
    cam_observacion,cam_situacion,cam_usuario,cam_fecha,desp_cam_codigo,
    desp_cam_dependencia,desp_cam_plaza,desp_cam_municion,desp_cam_cantidad,
    desp_cam_uso,desp_cam_carga,desp_cam_observacion,desp_cam_situacion,
    desp_cam_usuario,desp_cam_fecha,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,'' ,luego.cam_codigo 
    ,luego.cam_dependencia ,luego.cam_plaza ,luego.cam_municion ,luego.cam_cantidad 
    ,luego.cam_uso ,luego.cam_carga ,luego.cam_observacion ,luego.cam_situacion 
    ,luego.cam_usuario ,luego.cam_fecha ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_lmun_cambio_sit delete on "informix"
    .lmun_cambio_sit referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_cambio_sit (cam_codigo,
    cam_dependencia,cam_plaza,cam_municion,cam_cantidad,cam_uso,cam_carga,
    cam_observacion,cam_situacion,cam_usuario,cam_fecha,desp_cam_codigo,
    desp_cam_dependencia,desp_cam_plaza,desp_cam_municion,desp_cam_cantidad,
    desp_cam_uso,desp_cam_carga,desp_cam_observacion,desp_cam_situacion,
    desp_cam_usuario,desp_cam_fecha,accion,usuario,hora)  values (antes.cam_codigo 
    ,antes.cam_dependencia ,antes.cam_plaza ,antes.cam_municion ,antes.cam_cantidad 
    ,antes.cam_uso ,antes.cam_carga ,antes.cam_observacion ,antes.cam_situacion 
    ,antes.cam_usuario ,antes.cam_fecha ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,'' ,NULL ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_lmun_trasint update on "informix"
    .lmun_trasint referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_trasint (tras_numero,
    tras_docto,tras_lote,tras_entrega,tras_recibe,tras_fecha,tras_plaza,
    tras_cantidad,tras_uso,tras_carga,tras_obser,tras_dependencia,tras_usuario,
    desp_tras_numero,desp_tras_docto,desp_tras_lote,desp_tras_entrega,
    desp_tras_recibe,desp_tras_fecha,desp_tras_plaza,desp_tras_cantidad,
    desp_tras_uso,desp_tras_carga,desp_tras_obser,desp_tras_dependencia,
    desp_tras_usuario,accion,usuario,hora)  values (antes.tras_numero 
    ,antes.tras_docto ,antes.tras_lote ,antes.tras_entrega ,antes.tras_recibe 
    ,antes.tras_fecha ,antes.tras_plaza ,antes.tras_cantidad ,antes.tras_uso 
    ,antes.tras_carga ,antes.tras_obser ,antes.tras_dependencia ,antes.tras_usuario 
    ,luego.tras_numero ,luego.tras_docto ,luego.tras_lote ,luego.tras_entrega 
    ,luego.tras_recibe ,luego.tras_fecha ,luego.tras_plaza ,luego.tras_cantidad 
    ,luego.tras_uso ,luego.tras_carga ,luego.tras_obser ,luego.tras_dependencia 
    ,luego.tras_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lmun_trasint insert on "informix"
    .lmun_trasint referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_trasint (tras_numero,
    tras_docto,tras_lote,tras_entrega,tras_recibe,tras_fecha,tras_plaza,
    tras_cantidad,tras_uso,tras_carga,tras_obser,tras_dependencia,tras_usuario,
    desp_tras_numero,desp_tras_docto,desp_tras_lote,desp_tras_entrega,
    desp_tras_recibe,desp_tras_fecha,desp_tras_plaza,desp_tras_cantidad,
    desp_tras_uso,desp_tras_carga,desp_tras_obser,desp_tras_dependencia,
    desp_tras_usuario,accion,usuario,hora)  values (NULL ,'' ,NULL ,NULL 
    ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,luego.tras_numero 
    ,luego.tras_docto ,luego.tras_lote ,luego.tras_entrega ,luego.tras_recibe 
    ,luego.tras_fecha ,luego.tras_plaza ,luego.tras_cantidad ,luego.tras_uso 
    ,luego.tras_carga ,luego.tras_obser ,luego.tras_dependencia ,luego.tras_usuario 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_trasint delete on "informix"
    .lmun_trasint referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_trasint (tras_numero,
    tras_docto,tras_lote,tras_entrega,tras_recibe,tras_fecha,tras_plaza,
    tras_cantidad,tras_uso,tras_carga,tras_obser,tras_dependencia,tras_usuario,
    desp_tras_numero,desp_tras_docto,desp_tras_lote,desp_tras_entrega,
    desp_tras_recibe,desp_tras_fecha,desp_tras_plaza,desp_tras_cantidad,
    desp_tras_uso,desp_tras_carga,desp_tras_obser,desp_tras_dependencia,
    desp_tras_usuario,accion,usuario,hora)  values (antes.tras_numero 
    ,antes.tras_docto ,antes.tras_lote ,antes.tras_entrega ,antes.tras_recibe 
    ,antes.tras_fecha ,antes.tras_plaza ,antes.tras_cantidad ,antes.tras_uso 
    ,antes.tras_carga ,antes.tras_obser ,antes.tras_dependencia ,antes.tras_usuario 
    ,NULL ,'' ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lmun_det_conocimiento update on 
    "informix".lmun_det_conocimiento referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_lmun_det_conocimiento (detc_conocimiento,
    detc_municion,detc_cantidad,detc_dep,detc_usuario,desp_detc_conocimiento,
    desp_detc_municion,desp_detc_cantidad,desp_detc_dep,desp_detc_usuario,
    accion,usuario,hora)  values (antes.detc_conocimiento ,antes.detc_municion 
    ,antes.detc_cantidad ,antes.detc_dep ,antes.detc_usuario ,luego.detc_conocimiento 
    ,luego.detc_municion ,luego.detc_cantidad ,luego.detc_dep ,luego.detc_usuario 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lmun_det_conocimiento insert on 
    "informix".lmun_det_conocimiento referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_det_conocimiento (detc_conocimiento,
    detc_municion,detc_cantidad,detc_dep,detc_usuario,desp_detc_conocimiento,
    desp_detc_municion,desp_detc_cantidad,desp_detc_dep,desp_detc_usuario,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,luego.detc_conocimiento 
    ,luego.detc_municion ,luego.detc_cantidad ,luego.detc_dep ,luego.detc_usuario 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_det_conocimiento delete on 
    "informix".lmun_det_conocimiento referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_det_conocimiento (detc_conocimiento,
    detc_municion,detc_cantidad,detc_dep,detc_usuario,desp_detc_conocimiento,
    desp_detc_municion,desp_detc_cantidad,desp_detc_dep,desp_detc_usuario,
    accion,usuario,hora)  values (antes.detc_conocimiento ,antes.detc_municion 
    ,antes.detc_cantidad ,antes.detc_dep ,antes.detc_usuario ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lmun_conoc_fab update on "informix"
    .lmun_conoc_fab referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_conoc_fab (conf_numero,
    conf_docto,conf_fecha,conf_entregue,conf_recibi,conf_vo,conf_conforme,
    conf_usuario,conf_status,conf_codigo,desp_conf_numero,desp_conf_docto,
    desp_conf_fecha,desp_conf_entregue,desp_conf_recibi,desp_conf_vo,
    desp_conf_conforme,desp_conf_usuario,desp_conf_status,desp_conf_codigo,
    accion,usuario,hora)  values (antes.conf_numero ,antes.conf_docto 
    ,antes.conf_fecha ,antes.conf_entregue ,antes.conf_recibi ,antes.conf_vo 
    ,antes.conf_conforme ,antes.conf_usuario ,antes.conf_status ,antes.conf_codigo 
    ,luego.conf_numero ,luego.conf_docto ,luego.conf_fecha ,luego.conf_entregue 
    ,luego.conf_recibi ,luego.conf_vo ,luego.conf_conforme ,luego.conf_usuario 
    ,luego.conf_status ,luego.conf_codigo ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_lmun_conoc_fab insert on "informix"
    .lmun_conoc_fab referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_conoc_fab (conf_numero,
    conf_docto,conf_fecha,conf_entregue,conf_recibi,conf_vo,conf_conforme,
    conf_usuario,conf_status,conf_codigo,desp_conf_numero,desp_conf_docto,
    desp_conf_fecha,desp_conf_entregue,desp_conf_recibi,desp_conf_vo,
    desp_conf_conforme,desp_conf_usuario,desp_conf_status,desp_conf_codigo,
    accion,usuario,hora)  values (NULL ,'' ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,'' ,NULL ,luego.conf_numero ,luego.conf_docto ,luego.conf_fecha 
    ,luego.conf_entregue ,luego.conf_recibi ,luego.conf_vo ,luego.conf_conforme 
    ,luego.conf_usuario ,luego.conf_status ,luego.conf_codigo ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_lmun_conoc_fab delete on "informix"
    .lmun_conoc_fab referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_conoc_fab (conf_numero,
    conf_docto,conf_fecha,conf_entregue,conf_recibi,conf_vo,conf_conforme,
    conf_usuario,conf_status,conf_codigo,desp_conf_numero,desp_conf_docto,
    desp_conf_fecha,desp_conf_entregue,desp_conf_recibi,desp_conf_vo,
    desp_conf_conforme,desp_conf_usuario,desp_conf_status,desp_conf_codigo,
    accion,usuario,hora)  values (antes.conf_numero ,antes.conf_docto 
    ,antes.conf_fecha ,antes.conf_entregue ,antes.conf_recibi ,antes.conf_vo 
    ,antes.conf_conforme ,antes.conf_usuario ,antes.conf_status ,antes.conf_codigo 
    ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,'D' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".act_lmun_det_conoc_fab update on "informix"
    .lmun_det_conoc_fab referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_lmun_det_conoc_fab (detf_conocimiento,
    detf_lote,detf_cantidad,detf_usuario,desp_detf_conocimiento,desp_detf_lote,
    desp_detf_cantidad,desp_detf_usuario,accion,usuario,hora)  values 
    (antes.detf_conocimiento ,antes.detf_lote ,antes.detf_cantidad ,antes.detf_usuario 
    ,luego.detf_conocimiento ,luego.detf_lote ,luego.detf_cantidad ,luego.detf_usuario 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lmun_det_conoc_fab insert on "informix"
    .lmun_det_conoc_fab referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_det_conoc_fab (detf_conocimiento,
    detf_lote,detf_cantidad,detf_usuario,desp_detf_conocimiento,desp_detf_lote,
    desp_detf_cantidad,desp_detf_usuario,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,NULL ,luego.detf_conocimiento ,luego.detf_lote 
    ,luego.detf_cantidad ,luego.detf_usuario ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_lmun_det_conoc_fab delete on "informix"
    .lmun_det_conoc_fab referencing old as antes
    for each row
        (
        insert into "informix".aud_lmun_det_conoc_fab (detf_conocimiento,
    detf_lote,detf_cantidad,detf_usuario,desp_detf_conocimiento,desp_detf_lote,
    desp_detf_cantidad,desp_detf_usuario,accion,usuario,hora)  values 
    (antes.detf_conocimiento ,antes.detf_lote ,antes.detf_cantidad ,antes.detf_usuario 
    ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_pcapa_det_solicitud update on "informix"
    .pcapa_det_solicitud referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_pcapa_det_solicitud (cap_solcod,
    cap_catalogo,cap_grado,cap_curso,cap_fec_inicio,cap_fec_fin,cap_pais,
    cap_escuela,cap_valor,cap_tipo,cap_clasifica,cap_equi,cap_punteo,
    cap_puesto,cap_obserba,cap_estado,cap_tipo_doc,cap_aprueba,cap_fec_aprueba,
    cap_obs,desp_cap_solcod,desp_cap_catalogo,desp_cap_grado,desp_cap_curso,
    desp_cap_fec_inicio,desp_cap_fec_fin,desp_cap_pais,desp_cap_escuela,
    desp_cap_valor,desp_cap_tipo,desp_cap_clasifica,desp_cap_equi,desp_cap_punteo,
    desp_cap_puesto,desp_cap_obserba,desp_cap_estado,desp_cap_tipo_doc,
    desp_cap_aprueba,desp_cap_fec_aprueba,desp_cap_obs,accion,usuario,
    hora)  values (antes.cap_solcod ,antes.cap_catalogo ,antes.cap_grado 
    ,antes.cap_curso ,antes.cap_fec_inicio ,antes.cap_fec_fin ,antes.cap_pais 
    ,antes.cap_escuela ,antes.cap_valor ,antes.cap_tipo ,antes.cap_clasifica 
    ,antes.cap_equi ,antes.cap_punteo ,antes.cap_puesto ,antes.cap_obserba 
    ,antes.cap_estado ,antes.cap_tipo_doc ,antes.cap_aprueba ,antes.cap_fec_aprueba 
    ,antes.cap_obs ,luego.cap_solcod ,luego.cap_catalogo ,luego.cap_grado 
    ,luego.cap_curso ,luego.cap_fec_inicio ,luego.cap_fec_fin ,luego.cap_pais 
    ,luego.cap_escuela ,luego.cap_valor ,luego.cap_tipo ,luego.cap_clasifica 
    ,luego.cap_equi ,luego.cap_punteo ,luego.cap_puesto ,luego.cap_obserba 
    ,luego.cap_estado ,luego.cap_tipo_doc ,luego.cap_aprueba ,luego.cap_fec_aprueba 
    ,luego.cap_obs ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_pcapa_det_solicitud insert on "informix"
    .pcapa_det_solicitud referencing new as luego
    for each row
        (
        insert into "informix".aud_pcapa_det_solicitud (cap_solcod,
    cap_catalogo,cap_grado,cap_curso,cap_fec_inicio,cap_fec_fin,cap_pais,
    cap_escuela,cap_valor,cap_tipo,cap_clasifica,cap_equi,cap_punteo,
    cap_puesto,cap_obserba,cap_estado,cap_tipo_doc,cap_aprueba,cap_fec_aprueba,
    cap_obs,desp_cap_solcod,desp_cap_catalogo,desp_cap_grado,desp_cap_curso,
    desp_cap_fec_inicio,desp_cap_fec_fin,desp_cap_pais,desp_cap_escuela,
    desp_cap_valor,desp_cap_tipo,desp_cap_clasifica,desp_cap_equi,desp_cap_punteo,
    desp_cap_puesto,desp_cap_obserba,desp_cap_estado,desp_cap_tipo_doc,
    desp_cap_aprueba,desp_cap_fec_aprueba,desp_cap_obs,accion,usuario,
    hora)  values ('' ,NULL ,NULL ,'' ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,NULL ,'' 
    ,'' ,'' ,NULL ,'' ,NULL ,'' ,'' ,luego.cap_solcod ,luego.cap_catalogo 
    ,luego.cap_grado ,luego.cap_curso ,luego.cap_fec_inicio ,luego.cap_fec_fin 
    ,luego.cap_pais ,luego.cap_escuela ,luego.cap_valor ,luego.cap_tipo 
    ,luego.cap_clasifica ,luego.cap_equi ,luego.cap_punteo ,luego.cap_puesto 
    ,luego.cap_obserba ,luego.cap_estado ,luego.cap_tipo_doc ,luego.cap_aprueba 
    ,luego.cap_fec_aprueba ,luego.cap_obs ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_pcapa_det_solicitud delete on "informix"
    .pcapa_det_solicitud referencing old as antes
    for each row
        (
        insert into "informix".aud_pcapa_det_solicitud (cap_solcod,
    cap_catalogo,cap_grado,cap_curso,cap_fec_inicio,cap_fec_fin,cap_pais,
    cap_escuela,cap_valor,cap_tipo,cap_clasifica,cap_equi,cap_punteo,
    cap_puesto,cap_obserba,cap_estado,cap_tipo_doc,cap_aprueba,cap_fec_aprueba,
    cap_obs,desp_cap_solcod,desp_cap_catalogo,desp_cap_grado,desp_cap_curso,
    desp_cap_fec_inicio,desp_cap_fec_fin,desp_cap_pais,desp_cap_escuela,
    desp_cap_valor,desp_cap_tipo,desp_cap_clasifica,desp_cap_equi,desp_cap_punteo,
    desp_cap_puesto,desp_cap_obserba,desp_cap_estado,desp_cap_tipo_doc,
    desp_cap_aprueba,desp_cap_fec_aprueba,desp_cap_obs,accion,usuario,
    hora)  values (antes.cap_solcod ,antes.cap_catalogo ,antes.cap_grado 
    ,antes.cap_curso ,antes.cap_fec_inicio ,antes.cap_fec_fin ,antes.cap_pais 
    ,antes.cap_escuela ,antes.cap_valor ,antes.cap_tipo ,antes.cap_clasifica 
    ,antes.cap_equi ,antes.cap_punteo ,antes.cap_puesto ,antes.cap_obserba 
    ,antes.cap_estado ,antes.cap_tipo_doc ,antes.cap_aprueba ,antes.cap_fec_aprueba 
    ,antes.cap_obs ,'' ,NULL ,NULL ,'' ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,NULL ,''
     ,'' ,'' ,NULL ,'' ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_pocur_solicitud update on "informix"
    .pocur_solicitud referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_pocur_solicitud (sol_codigo,
    sol_correlativo,sol_comte,sol_ofop,sol_formulario,sol_dependencia,
    sol_fec_solicit,sol_justific,sol_oficio,desp_sol_codigo,desp_sol_correlativo,
    desp_sol_comte,desp_sol_ofop,desp_sol_formulario,desp_sol_dependencia,
    desp_sol_fec_solicit,desp_sol_justific,desp_sol_oficio,accion,usuario,
    hora)  values (antes.sol_codigo ,antes.sol_correlativo ,antes.sol_comte 
    ,antes.sol_ofop ,antes.sol_formulario ,antes.sol_dependencia ,antes.sol_fec_solicit 
    ,antes.sol_justific ,antes.sol_oficio ,luego.sol_codigo ,luego.sol_correlativo 
    ,luego.sol_comte ,luego.sol_ofop ,luego.sol_formulario ,luego.sol_dependencia 
    ,luego.sol_fec_solicit ,luego.sol_justific ,luego.sol_oficio ,'U' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_pocur_solicitud insert on "informix"
    .pocur_solicitud referencing new as luego
    for each row
        (
        insert into "informix".aud_pocur_solicitud (sol_codigo,
    sol_correlativo,sol_comte,sol_ofop,sol_formulario,sol_dependencia,
    sol_fec_solicit,sol_justific,sol_oficio,desp_sol_codigo,desp_sol_correlativo,
    desp_sol_comte,desp_sol_ofop,desp_sol_formulario,desp_sol_dependencia,
    desp_sol_fec_solicit,desp_sol_justific,desp_sol_oficio,accion,usuario,
    hora)  values ('' ,NULL ,NULL ,NULL ,'' ,NULL ,'' ,'' ,'' ,luego.sol_codigo 
    ,luego.sol_correlativo ,luego.sol_comte ,luego.sol_ofop ,luego.sol_formulario 
    ,luego.sol_dependencia ,luego.sol_fec_solicit ,luego.sol_justific 
    ,luego.sol_oficio ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_pocur_solicitud delete on "informix"
    .pocur_solicitud referencing old as antes
    for each row
        (
        insert into "informix".aud_pocur_solicitud (sol_codigo,
    sol_correlativo,sol_comte,sol_ofop,sol_formulario,sol_dependencia,
    sol_fec_solicit,sol_justific,sol_oficio,desp_sol_codigo,desp_sol_correlativo,
    desp_sol_comte,desp_sol_ofop,desp_sol_formulario,desp_sol_dependencia,
    desp_sol_fec_solicit,desp_sol_justific,desp_sol_oficio,accion,usuario,
    hora)  values (antes.sol_codigo ,antes.sol_correlativo ,antes.sol_comte 
    ,antes.sol_ofop ,antes.sol_formulario ,antes.sol_dependencia ,antes.sol_fec_solicit 
    ,antes.sol_justific ,antes.sol_oficio ,'' ,NULL ,NULL ,NULL ,'' ,NULL 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_pdcapacitacion update on "informix"
    .pdcapacitacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_pdcapacitacion (cap_catalogo,
    cap_grado,cap_curso,cap_fec_inicio,cap_fec_fin,cap_solicitud,cap_pais,
    cap_escuela,cap_valor,cap_tipo,cap_clasifica,cap_equi,cap_punteo,
    cap_puesto,cap_obserba,cap_docto_auto,cap_creditos,desp_cap_catalogo,
    desp_cap_grado,desp_cap_curso,desp_cap_fec_inicio,desp_cap_fec_fin,
    desp_cap_solicitud,desp_cap_pais,desp_cap_escuela,desp_cap_valor,
    desp_cap_tipo,desp_cap_clasifica,desp_cap_equi,desp_cap_punteo,desp_cap_puesto,
    desp_cap_obserba,desp_cap_docto_auto,desp_cap_creditos,accion,usuario,
    hora)  values (antes.cap_catalogo ,antes.cap_grado ,antes.cap_curso 
    ,antes.cap_fec_inicio ,antes.cap_fec_fin ,antes.cap_solicitud ,antes.cap_pais 
    ,antes.cap_escuela ,antes.cap_valor ,antes.cap_tipo ,antes.cap_clasifica 
    ,antes.cap_equi ,antes.cap_punteo ,antes.cap_puesto ,antes.cap_obserba 
    ,antes.cap_docto_auto ,antes.cap_creditos ,luego.cap_catalogo ,luego.cap_grado 
    ,luego.cap_curso ,luego.cap_fec_inicio ,luego.cap_fec_fin ,luego.cap_solicitud 
    ,luego.cap_pais ,luego.cap_escuela ,luego.cap_valor ,luego.cap_tipo 
    ,luego.cap_clasifica ,luego.cap_equi ,luego.cap_punteo ,luego.cap_puesto 
    ,luego.cap_obserba ,luego.cap_docto_auto ,luego.cap_creditos ,'U' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_pdcapacitacion insert on "informix"
    .pdcapacitacion referencing new as luego
    for each row
        (
        insert into "informix".aud_pdcapacitacion (cap_catalogo,
    cap_grado,cap_curso,cap_fec_inicio,cap_fec_fin,cap_solicitud,cap_pais,
    cap_escuela,cap_valor,cap_tipo,cap_clasifica,cap_equi,cap_punteo,
    cap_puesto,cap_obserba,cap_docto_auto,cap_creditos,desp_cap_catalogo,
    desp_cap_grado,desp_cap_curso,desp_cap_fec_inicio,desp_cap_fec_fin,
    desp_cap_solicitud,desp_cap_pais,desp_cap_escuela,desp_cap_valor,
    desp_cap_tipo,desp_cap_clasifica,desp_cap_equi,desp_cap_punteo,desp_cap_puesto,
    desp_cap_obserba,desp_cap_docto_auto,desp_cap_creditos,accion,usuario,
    hora)  values (NULL ,NULL ,'' ,'' ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,NULL ,'' 
    ,'' ,'' ,'' ,'' ,luego.cap_catalogo ,luego.cap_grado ,luego.cap_curso 
    ,luego.cap_fec_inicio ,luego.cap_fec_fin ,luego.cap_solicitud ,luego.cap_pais 
    ,luego.cap_escuela ,luego.cap_valor ,luego.cap_tipo ,luego.cap_clasifica 
    ,luego.cap_equi ,luego.cap_punteo ,luego.cap_puesto ,luego.cap_obserba 
    ,luego.cap_docto_auto ,luego.cap_creditos ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_pdcapacitacion delete on "informix"
    .pdcapacitacion referencing old as antes
    for each row
        (
        insert into "informix".aud_pdcapacitacion (cap_catalogo,
    cap_grado,cap_curso,cap_fec_inicio,cap_fec_fin,cap_solicitud,cap_pais,
    cap_escuela,cap_valor,cap_tipo,cap_clasifica,cap_equi,cap_punteo,
    cap_puesto,cap_obserba,cap_docto_auto,cap_creditos,desp_cap_catalogo,
    desp_cap_grado,desp_cap_curso,desp_cap_fec_inicio,desp_cap_fec_fin,
    desp_cap_solicitud,desp_cap_pais,desp_cap_escuela,desp_cap_valor,
    desp_cap_tipo,desp_cap_clasifica,desp_cap_equi,desp_cap_punteo,desp_cap_puesto,
    desp_cap_obserba,desp_cap_docto_auto,desp_cap_creditos,accion,usuario,
    hora)  values (antes.cap_catalogo ,antes.cap_grado ,antes.cap_curso 
    ,antes.cap_fec_inicio ,antes.cap_fec_fin ,antes.cap_solicitud ,antes.cap_pais 
    ,antes.cap_escuela ,antes.cap_valor ,antes.cap_tipo ,antes.cap_clasifica 
    ,antes.cap_equi ,antes.cap_punteo ,antes.cap_puesto ,antes.cap_obserba 
    ,antes.cap_docto_auto ,antes.cap_creditos ,NULL ,NULL ,'' ,'' ,'' ,''
     ,NULL ,'' ,'' ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_ocur_det_solicitud update on "informix"
    .ocur_det_solicitud referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_ocur_det_solicitud (cur_solcod,
    cur_catalogo,cur_grado,cur_curso,cur_fec_inicio,cur_fec_fin,cur_escuela,
    cur_valor,cur_clasifica,cur_punteo,cur_puesto,cur_obserba,cur_estado,
    cur_tipo_doc,cur_aprueba,cur_fec_aprueba,cur_obs,desp_cur_solcod,
    desp_cur_catalogo,desp_cur_grado,desp_cur_curso,desp_cur_fec_inicio,
    desp_cur_fec_fin,desp_cur_escuela,desp_cur_valor,desp_cur_clasifica,
    desp_cur_punteo,desp_cur_puesto,desp_cur_obserba,desp_cur_estado,
    desp_cur_tipo_doc,desp_cur_aprueba,desp_cur_fec_aprueba,desp_cur_obs,
    accion,usuario,hora)  values (antes.cur_solcod ,antes.cur_catalogo 
    ,antes.cur_grado ,antes.cur_curso ,antes.cur_fec_inicio ,antes.cur_fec_fin 
    ,antes.cur_escuela ,antes.cur_valor ,antes.cur_clasifica ,antes.cur_punteo 
    ,antes.cur_puesto ,antes.cur_obserba ,antes.cur_estado ,antes.cur_tipo_doc 
    ,antes.cur_aprueba ,antes.cur_fec_aprueba ,antes.cur_obs ,luego.cur_solcod 
    ,luego.cur_catalogo ,luego.cur_grado ,luego.cur_curso ,luego.cur_fec_inicio 
    ,luego.cur_fec_fin ,luego.cur_escuela ,luego.cur_valor ,luego.cur_clasifica 
    ,luego.cur_punteo ,luego.cur_puesto ,luego.cur_obserba ,luego.cur_estado 
    ,luego.cur_tipo_doc ,luego.cur_aprueba ,luego.cur_fec_aprueba ,luego.cur_obs 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ocur_det_solicitud insert on "informix"
    .ocur_det_solicitud referencing new as luego
    for each row
        (
        insert into "informix".aud_ocur_det_solicitud (cur_solcod,
    cur_catalogo,cur_grado,cur_curso,cur_fec_inicio,cur_fec_fin,cur_escuela,
    cur_valor,cur_clasifica,cur_punteo,cur_puesto,cur_obserba,cur_estado,
    cur_tipo_doc,cur_aprueba,cur_fec_aprueba,cur_obs,desp_cur_solcod,
    desp_cur_catalogo,desp_cur_grado,desp_cur_curso,desp_cur_fec_inicio,
    desp_cur_fec_fin,desp_cur_escuela,desp_cur_valor,desp_cur_clasifica,
    desp_cur_punteo,desp_cur_puesto,desp_cur_obserba,desp_cur_estado,
    desp_cur_tipo_doc,desp_cur_aprueba,desp_cur_fec_aprueba,desp_cur_obs,
    accion,usuario,hora)  values ('' ,NULL ,NULL ,NULL ,'' ,'' ,NULL ,'' 
    ,'' ,'' ,'' ,'' ,NULL ,'' ,NULL ,'' ,'' ,luego.cur_solcod ,luego.cur_catalogo 
    ,luego.cur_grado ,luego.cur_curso ,luego.cur_fec_inicio ,luego.cur_fec_fin 
    ,luego.cur_escuela ,luego.cur_valor ,luego.cur_clasifica ,luego.cur_punteo 
    ,luego.cur_puesto ,luego.cur_obserba ,luego.cur_estado ,luego.cur_tipo_doc 
    ,luego.cur_aprueba ,luego.cur_fec_aprueba ,luego.cur_obs ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_ocur_det_solicitud delete on "informix"
    .ocur_det_solicitud referencing old as antes
    for each row
        (
        insert into "informix".aud_ocur_det_solicitud (cur_solcod,
    cur_catalogo,cur_grado,cur_curso,cur_fec_inicio,cur_fec_fin,cur_escuela,
    cur_valor,cur_clasifica,cur_punteo,cur_puesto,cur_obserba,cur_estado,
    cur_tipo_doc,cur_aprueba,cur_fec_aprueba,cur_obs,desp_cur_solcod,
    desp_cur_catalogo,desp_cur_grado,desp_cur_curso,desp_cur_fec_inicio,
    desp_cur_fec_fin,desp_cur_escuela,desp_cur_valor,desp_cur_clasifica,
    desp_cur_punteo,desp_cur_puesto,desp_cur_obserba,desp_cur_estado,
    desp_cur_tipo_doc,desp_cur_aprueba,desp_cur_fec_aprueba,desp_cur_obs,
    accion,usuario,hora)  values (antes.cur_solcod ,antes.cur_catalogo 
    ,antes.cur_grado ,antes.cur_curso ,antes.cur_fec_inicio ,antes.cur_fec_fin 
    ,antes.cur_escuela ,antes.cur_valor ,antes.cur_clasifica ,antes.cur_punteo 
    ,antes.cur_puesto ,antes.cur_obserba ,antes.cur_estado ,antes.cur_tipo_doc 
    ,antes.cur_aprueba ,antes.cur_fec_aprueba ,antes.cur_obs ,'' ,NULL 
    ,NULL ,NULL ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,'' ,NULL ,'' ,NULL ,'' ,'' ,'D' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_luni_asignacion update on "informix"
    .luni_asignacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_luni_asignacion (asi_catalogo,
    asi_uniforme,asi_numero,asi_tallauni,asi_tallabota,asi_tallagorra,
    asi_fecha,asi_codigobarra,asi_dependencia,asi_usuario,asi_status,
    desp_asi_catalogo,desp_asi_uniforme,desp_asi_numero,desp_asi_tallauni,
    desp_asi_tallabota,desp_asi_tallagorra,desp_asi_fecha,desp_asi_codigobarra,
    desp_asi_dependencia,desp_asi_usuario,desp_asi_status,accion,usuario,
    hora)  values (antes.asi_catalogo ,antes.asi_uniforme ,antes.asi_numero 
    ,antes.asi_tallauni ,antes.asi_tallabota ,antes.asi_tallagorra ,antes.asi_fecha 
    ,antes.asi_codigobarra ,antes.asi_dependencia ,antes.asi_usuario 
    ,antes.asi_status ,luego.asi_catalogo ,luego.asi_uniforme ,luego.asi_numero 
    ,luego.asi_tallauni ,luego.asi_tallabota ,luego.asi_tallagorra ,luego.asi_fecha 
    ,luego.asi_codigobarra ,luego.asi_dependencia ,luego.asi_usuario 
    ,luego.asi_status ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_luni_asignacion insert on "informix"
    .luni_asignacion referencing new as luego
    for each row
        (
        insert into "informix".aud_luni_asignacion (asi_catalogo,
    asi_uniforme,asi_numero,asi_tallauni,asi_tallabota,asi_tallagorra,
    asi_fecha,asi_codigobarra,asi_dependencia,asi_usuario,asi_status,
    desp_asi_catalogo,desp_asi_uniforme,desp_asi_numero,desp_asi_tallauni,
    desp_asi_tallabota,desp_asi_tallagorra,desp_asi_fecha,desp_asi_codigobarra,
    desp_asi_dependencia,desp_asi_usuario,desp_asi_status,accion,usuario,
    hora)  values (NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,luego.asi_catalogo 
    ,luego.asi_uniforme ,luego.asi_numero ,luego.asi_tallauni ,luego.asi_tallabota 
    ,luego.asi_tallagorra ,luego.asi_fecha ,luego.asi_codigobarra ,luego.asi_dependencia 
    ,luego.asi_usuario ,luego.asi_status ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_luni_asignacion delete on "informix"
    .luni_asignacion referencing old as antes
    for each row
        (
        insert into "informix".aud_luni_asignacion (asi_catalogo,
    asi_uniforme,asi_numero,asi_tallauni,asi_tallabota,asi_tallagorra,
    asi_fecha,asi_codigobarra,asi_dependencia,asi_usuario,asi_status,
    desp_asi_catalogo,desp_asi_uniforme,desp_asi_numero,desp_asi_tallauni,
    desp_asi_tallabota,desp_asi_tallagorra,desp_asi_fecha,desp_asi_codigobarra,
    desp_asi_dependencia,desp_asi_usuario,desp_asi_status,accion,usuario,
    hora)  values (antes.asi_catalogo ,antes.asi_uniforme ,antes.asi_numero 
    ,antes.asi_tallauni ,antes.asi_tallabota ,antes.asi_tallagorra ,antes.asi_fecha 
    ,antes.asi_codigobarra ,antes.asi_dependencia ,antes.asi_usuario 
    ,antes.asi_status ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,''
     ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_arco_capacitaciones update on "informix"
    .arco_capacitaciones referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_arco_capacitaciones (acap_catalogo,
    acap_tipo,acap_clasifica,acap_valor,acap_esca,desp_acap_catalogo,
    desp_acap_tipo,desp_acap_clasifica,desp_acap_valor,desp_acap_esca,
    accion,usuario,hora)  values (antes.acap_catalogo ,antes.acap_tipo 
    ,antes.acap_clasifica ,antes.acap_valor ,antes.acap_esca ,luego.acap_catalogo 
    ,luego.acap_tipo ,luego.acap_clasifica ,luego.acap_valor ,luego.acap_esca 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_arco_capacitaciones insert on "informix"
    .arco_capacitaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_capacitaciones (acap_catalogo,
    acap_tipo,acap_clasifica,acap_valor,acap_esca,desp_acap_catalogo,
    desp_acap_tipo,desp_acap_clasifica,desp_acap_valor,desp_acap_esca,
    accion,usuario,hora)  values (NULL ,' ' ,' ' ,' ' ,' ' ,luego.acap_catalogo 
    ,luego.acap_tipo ,luego.acap_clasifica ,luego.acap_valor ,luego.acap_esca 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_arco_capacitaciones delete on "informix"
    .arco_capacitaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_capacitaciones (acap_catalogo,
    acap_tipo,acap_clasifica,acap_valor,acap_esca,desp_acap_catalogo,
    desp_acap_tipo,desp_acap_clasifica,desp_acap_valor,desp_acap_esca,
    accion,usuario,hora)  values (antes.acap_catalogo ,antes.acap_tipo 
    ,antes.acap_clasifica ,antes.acap_valor ,antes.acap_esca ,NULL ,' '
     ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_arco_cond update on "informix".arco_cond 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_cond (conm_codigo,conm_desc,
    conm_equi,conm_fuerza,conm_valor,conm_vigencia,conm_fecha,conm_obs,
    desp_conm_codigo,desp_conm_desc,desp_conm_equi,desp_conm_fuerza,desp_conm_valor,
    desp_conm_vigencia,desp_conm_fecha,desp_conm_obs,accion,usuario,hora) 
     values (antes.conm_codigo ,antes.conm_desc ,antes.conm_equi ,antes.conm_fuerza 
    ,antes.conm_valor ,antes.conm_vigencia ,antes.conm_fecha ,antes.conm_obs 
    ,luego.conm_codigo ,luego.conm_desc ,luego.conm_equi ,luego.conm_fuerza 
    ,luego.conm_valor ,luego.conm_vigencia ,luego.conm_fecha ,luego.conm_obs 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_arco_cond insert on "informix".arco_cond 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_cond (conm_codigo,conm_desc,
    conm_equi,conm_fuerza,conm_valor,conm_vigencia,conm_fecha,conm_obs,
    desp_conm_codigo,desp_conm_desc,desp_conm_equi,desp_conm_fuerza,desp_conm_valor,
    desp_conm_vigencia,desp_conm_fecha,desp_conm_obs,accion,usuario,hora) 
     values (NULL ,' ' ,NULL ,' ' ,' ' ,NULL ,' ' ,'' ,luego.conm_codigo ,
    luego.conm_desc ,luego.conm_equi ,luego.conm_fuerza ,luego.conm_valor 
    ,luego.conm_vigencia ,luego.conm_fecha ,luego.conm_obs ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_arco_cond delete on "informix".arco_cond 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_cond (conm_codigo,conm_desc,
    conm_equi,conm_fuerza,conm_valor,conm_vigencia,conm_fecha,conm_obs,
    desp_conm_codigo,desp_conm_desc,desp_conm_equi,desp_conm_fuerza,desp_conm_valor,
    desp_conm_vigencia,desp_conm_fecha,desp_conm_obs,accion,usuario,hora) 
     values (antes.conm_codigo ,antes.conm_desc ,antes.conm_equi ,antes.conm_fuerza 
    ,antes.conm_valor ,antes.conm_vigencia ,antes.conm_fecha ,antes.conm_obs 
    ,NULL ,' ' ,NULL ,' ' ,' ' ,NULL ,' ' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_arco_dcon update on "informix".arco_dcon 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_dcon (acon_codigo,acon_catalogo,
    acon_valor,acon_esca,desp_acon_codigo,desp_acon_catalogo,desp_acon_valor,
    desp_acon_esca,accion,usuario,hora)  values (antes.acon_codigo ,antes.acon_catalogo 
    ,antes.acon_valor ,antes.acon_esca ,luego.acon_codigo ,luego.acon_catalogo 
    ,luego.acon_valor ,luego.acon_esca ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_arco_dcon insert on "informix".arco_dcon 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_dcon (acon_codigo,acon_catalogo,
    acon_valor,acon_esca,desp_acon_codigo,desp_acon_catalogo,desp_acon_valor,
    desp_acon_esca,accion,usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,
    luego.acon_codigo ,luego.acon_catalogo ,luego.acon_valor ,luego.acon_esca 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_arco_dcon delete on "informix".arco_dcon 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_dcon (acon_codigo,acon_catalogo,
    acon_valor,acon_esca,desp_acon_codigo,desp_acon_catalogo,desp_acon_valor,
    desp_acon_esca,accion,usuario,hora)  values (antes.acon_codigo ,antes.acon_catalogo 
    ,antes.acon_valor ,antes.acon_esca ,NULL ,NULL ,' ' ,' ' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_arco_dcur update on "informix".arco_dcur 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_dcur (acur_codigo,acur_catalogo,
    acur_valor,acur_esca,desp_acur_codigo,desp_acur_catalogo,desp_acur_valor,
    desp_acur_esca,accion,usuario,hora)  values (antes.acur_codigo ,antes.acur_catalogo 
    ,antes.acur_valor ,antes.acur_esca ,luego.acur_codigo ,luego.acur_catalogo 
    ,luego.acur_valor ,luego.acur_esca ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_arco_dcur insert on "informix".arco_dcur 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_dcur (acur_codigo,acur_catalogo,
    acur_valor,acur_esca,desp_acur_codigo,desp_acur_catalogo,desp_acur_valor,
    desp_acur_esca,accion,usuario,hora)  values (NULL ,NULL ,' ' ,' ' ,
    luego.acur_codigo ,luego.acur_catalogo ,luego.acur_valor ,luego.acur_esca 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_arco_dcur delete on "informix".arco_dcur 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_dcur (acur_codigo,acur_catalogo,
    acur_valor,acur_esca,desp_acur_codigo,desp_acur_catalogo,desp_acur_valor,
    desp_acur_esca,accion,usuario,hora)  values (antes.acur_codigo ,antes.acur_catalogo 
    ,antes.acur_valor ,antes.acur_esca ,NULL ,NULL ,' ' ,' ' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_arco_demeritos update on "informix"
    .arco_demeritos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_demeritos (dem_grado,
    dem_fecha,dem_limite,dem_vigente,desp_dem_grado,desp_dem_fecha,desp_dem_limite,
    desp_dem_vigente,accion,usuario,hora)  values (antes.dem_grado ,antes.dem_fecha 
    ,antes.dem_limite ,antes.dem_vigente ,luego.dem_grado ,luego.dem_fecha 
    ,luego.dem_limite ,luego.dem_vigente ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_arco_demeritos insert on "informix"
    .arco_demeritos referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_demeritos (dem_grado,
    dem_fecha,dem_limite,dem_vigente,desp_dem_grado,desp_dem_fecha,desp_dem_limite,
    desp_dem_vigente,accion,usuario,hora)  values (NULL ,'' ,NULL ,NULL 
    ,luego.dem_grado ,luego.dem_fecha ,luego.dem_limite ,luego.dem_vigente 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_arco_demeritos delete on "informix"
    .arco_demeritos referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_demeritos (dem_grado,
    dem_fecha,dem_limite,dem_vigente,desp_dem_grado,desp_dem_fecha,desp_dem_limite,
    desp_dem_vigente,accion,usuario,hora)  values (antes.dem_grado ,antes.dem_fecha 
    ,antes.dem_limite ,antes.dem_vigente ,NULL ,'' ,NULL ,NULL ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_arco_erudiccion update on "informix"
    .arco_erudiccion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_erudiccion (eru_tipo,
    eru_clasifica,eru_descripcion,eru_valor,eru_vigencia,eru_fec,eru_obs,
    desp_eru_tipo,desp_eru_clasifica,desp_eru_descripcion,desp_eru_valor,
    desp_eru_vigencia,desp_eru_fec,desp_eru_obs,accion,usuario,hora) 
     values (antes.eru_tipo ,antes.eru_clasifica ,antes.eru_descripcion 
    ,antes.eru_valor ,antes.eru_vigencia ,antes.eru_fec ,antes.eru_obs 
    ,luego.eru_tipo ,luego.eru_clasifica ,luego.eru_descripcion ,luego.eru_valor 
    ,luego.eru_vigencia ,luego.eru_fec ,luego.eru_obs ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_arco_erudiccion insert on "informix"
    .arco_erudiccion referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_erudiccion (eru_tipo,
    eru_clasifica,eru_descripcion,eru_valor,eru_vigencia,eru_fec,eru_obs,
    desp_eru_tipo,desp_eru_clasifica,desp_eru_descripcion,desp_eru_valor,
    desp_eru_vigencia,desp_eru_fec,desp_eru_obs,accion,usuario,hora) 
     values ('' ,'' ,'' ,'' ,NULL ,'' ,'' ,luego.eru_tipo ,luego.eru_clasifica 
    ,luego.eru_descripcion ,luego.eru_valor ,luego.eru_vigencia ,luego.eru_fec 
    ,luego.eru_obs ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_arco_erudiccion delete on "informix"
    .arco_erudiccion referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_erudiccion (eru_tipo,
    eru_clasifica,eru_descripcion,eru_valor,eru_vigencia,eru_fec,eru_obs,
    desp_eru_tipo,desp_eru_clasifica,desp_eru_descripcion,desp_eru_valor,
    desp_eru_vigencia,desp_eru_fec,desp_eru_obs,accion,usuario,hora) 
     values (antes.eru_tipo ,antes.eru_clasifica ,antes.eru_descripcion 
    ,antes.eru_valor ,antes.eru_vigencia ,antes.eru_fec ,antes.eru_obs 
    ,'' ,'' ,'' ,'' ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_arco_evads update on "informix".arco_evads 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_evads (evad_catalogo,
    evad_periodo,evad_nota,evad_fecha,desp_evad_catalogo,desp_evad_periodo,
    desp_evad_nota,desp_evad_fecha,accion,usuario,hora)  values (antes.evad_catalogo 
    ,antes.evad_periodo ,antes.evad_nota ,antes.evad_fecha ,luego.evad_catalogo 
    ,luego.evad_periodo ,luego.evad_nota ,luego.evad_fecha ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_arco_evads insert on "informix".arco_evads 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_evads (evad_catalogo,
    evad_periodo,evad_nota,evad_fecha,desp_evad_catalogo,desp_evad_periodo,
    desp_evad_nota,desp_evad_fecha,accion,usuario,hora)  values (NULL 
    ,NULL ,'' ,'' ,luego.evad_catalogo ,luego.evad_periodo ,luego.evad_nota 
    ,luego.evad_fecha ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_arco_evads delete on "informix".arco_evads 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_evads (evad_catalogo,
    evad_periodo,evad_nota,evad_fecha,desp_evad_catalogo,desp_evad_periodo,
    desp_evad_nota,desp_evad_fecha,accion,usuario,hora)  values (antes.evad_catalogo 
    ,antes.evad_periodo ,antes.evad_nota ,antes.evad_fecha ,NULL ,NULL 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_arco_grados update on "informix"
    .arco_grados referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_grados (arcgra_codigo,
    arcgra_equivale,arcgra_proximo,arcgra_anterior,arcgra_tiempo,arcgra_desc,
    desp_arcgra_codigo,desp_arcgra_equivale,desp_arcgra_proximo,desp_arcgra_anterior,
    desp_arcgra_tiempo,desp_arcgra_desc,accion,usuario,hora)  values 
    (antes.arcgra_codigo ,antes.arcgra_equivale ,antes.arcgra_proximo 
    ,antes.arcgra_anterior ,antes.arcgra_tiempo ,antes.arcgra_desc ,luego.arcgra_codigo 
    ,luego.arcgra_equivale ,luego.arcgra_proximo ,luego.arcgra_anterior 
    ,luego.arcgra_tiempo ,luego.arcgra_desc ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_arco_grados insert on "informix"
    .arco_grados referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_grados (arcgra_codigo,
    arcgra_equivale,arcgra_proximo,arcgra_anterior,arcgra_tiempo,arcgra_desc,
    desp_arcgra_codigo,desp_arcgra_equivale,desp_arcgra_proximo,desp_arcgra_anterior,
    desp_arcgra_tiempo,desp_arcgra_desc,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,NULL ,NULL ,'' ,luego.arcgra_codigo ,luego.arcgra_equivale 
    ,luego.arcgra_proximo ,luego.arcgra_anterior ,luego.arcgra_tiempo 
    ,luego.arcgra_desc ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_arco_grados delete on "informix"
    .arco_grados referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_grados (arcgra_codigo,
    arcgra_equivale,arcgra_proximo,arcgra_anterior,arcgra_tiempo,arcgra_desc,
    desp_arcgra_codigo,desp_arcgra_equivale,desp_arcgra_proximo,desp_arcgra_anterior,
    desp_arcgra_tiempo,desp_arcgra_desc,accion,usuario,hora)  values 
    (antes.arcgra_codigo ,antes.arcgra_equivale ,antes.arcgra_proximo 
    ,antes.arcgra_anterior ,antes.arcgra_tiempo ,antes.arcgra_desc ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_arco_notas update on "informix".arco_notas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_notas (not_catalogo,not_fecha,
    not_capacidad,not_evad,not_conducta,not_pafe,not_biof,not_creditos,
    desp_not_catalogo,desp_not_fecha,desp_not_capacidad,desp_not_evad,
    desp_not_conducta,desp_not_pafe,desp_not_biof,desp_not_creditos,accion,
    usuario,hora)  values (antes.not_catalogo ,antes.not_fecha ,antes.not_capacidad 
    ,antes.not_evad ,antes.not_conducta ,antes.not_pafe ,antes.not_biof 
    ,antes.not_creditos ,luego.not_catalogo ,luego.not_fecha ,luego.not_capacidad 
    ,luego.not_evad ,luego.not_conducta ,luego.not_pafe ,luego.not_biof 
    ,luego.not_creditos ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_arco_notas insert on "informix".arco_notas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_notas (not_catalogo,not_fecha,
    not_capacidad,not_evad,not_conducta,not_pafe,not_biof,not_creditos,
    desp_not_catalogo,desp_not_fecha,desp_not_capacidad,desp_not_evad,
    desp_not_conducta,desp_not_pafe,desp_not_biof,desp_not_creditos,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.not_catalogo 
    ,luego.not_fecha ,luego.not_capacidad ,luego.not_evad ,luego.not_conducta 
    ,luego.not_pafe ,luego.not_biof ,luego.not_creditos ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_arco_notas delete on "informix".arco_notas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_notas (not_catalogo,not_fecha,
    not_capacidad,not_evad,not_conducta,not_pafe,not_biof,not_creditos,
    desp_not_catalogo,desp_not_fecha,desp_not_capacidad,desp_not_evad,
    desp_not_conducta,desp_not_pafe,desp_not_biof,desp_not_creditos,accion,
    usuario,hora)  values (antes.not_catalogo ,antes.not_fecha ,antes.not_capacidad 
    ,antes.not_evad ,antes.not_conducta ,antes.not_pafe ,antes.not_biof 
    ,antes.not_creditos ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_arco_obligatorio update on "informix"
    .arco_obligatorio referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_obligatorio (aobli_catalogo,
    aobli_curso,aobli_punteo,aobli_esca,desp_aobli_catalogo,desp_aobli_curso,
    desp_aobli_punteo,desp_aobli_esca,accion,usuario,hora)  values (antes.aobli_catalogo 
    ,antes.aobli_curso ,antes.aobli_punteo ,antes.aobli_esca ,luego.aobli_catalogo 
    ,luego.aobli_curso ,luego.aobli_punteo ,luego.aobli_esca ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_arco_obligatorio insert on "informix"
    .arco_obligatorio referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_obligatorio (aobli_catalogo,
    aobli_curso,aobli_punteo,aobli_esca,desp_aobli_catalogo,desp_aobli_curso,
    desp_aobli_punteo,desp_aobli_esca,accion,usuario,hora)  values (NULL 
    ,NULL ,'' ,'' ,luego.aobli_catalogo ,luego.aobli_curso ,luego.aobli_punteo 
    ,luego.aobli_esca ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_arco_obligatorio delete on "informix"
    .arco_obligatorio referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_obligatorio (aobli_catalogo,
    aobli_curso,aobli_punteo,aobli_esca,desp_aobli_catalogo,desp_aobli_curso,
    desp_aobli_punteo,desp_aobli_esca,accion,usuario,hora)  values (antes.aobli_catalogo 
    ,antes.aobli_curso ,antes.aobli_punteo ,antes.aobli_esca ,NULL ,NULL 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_arco_pafes update on "informix".arco_pafes 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_pafes (pafe_catalogo,
    pafe_fecha,pafe_grado,pafe_nota,pafe_tipo,pafe_esca,desp_pafe_catalogo,
    desp_pafe_fecha,desp_pafe_grado,desp_pafe_nota,desp_pafe_tipo,desp_pafe_esca,
    accion,usuario,hora)  values (antes.pafe_catalogo ,antes.pafe_fecha 
    ,antes.pafe_grado ,antes.pafe_nota ,antes.pafe_tipo ,antes.pafe_esca 
    ,luego.pafe_catalogo ,luego.pafe_fecha ,luego.pafe_grado ,luego.pafe_nota 
    ,luego.pafe_tipo ,luego.pafe_esca ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_arco_pafes insert on "informix".arco_pafes 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_pafes (pafe_catalogo,
    pafe_fecha,pafe_grado,pafe_nota,pafe_tipo,pafe_esca,desp_pafe_catalogo,
    desp_pafe_fecha,desp_pafe_grado,desp_pafe_nota,desp_pafe_tipo,desp_pafe_esca,
    accion,usuario,hora)  values (NULL ,'' ,NULL ,'' ,'' ,'' ,luego.pafe_catalogo 
    ,luego.pafe_fecha ,luego.pafe_grado ,luego.pafe_nota ,luego.pafe_tipo 
    ,luego.pafe_esca ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_arco_pafes delete on "informix".arco_pafes 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_pafes (pafe_catalogo,
    pafe_fecha,pafe_grado,pafe_nota,pafe_tipo,pafe_esca,desp_pafe_catalogo,
    desp_pafe_fecha,desp_pafe_grado,desp_pafe_nota,desp_pafe_tipo,desp_pafe_esca,
    accion,usuario,hora)  values (antes.pafe_catalogo ,antes.pafe_fecha 
    ,antes.pafe_grado ,antes.pafe_nota ,antes.pafe_tipo ,antes.pafe_esca 
    ,NULL ,'' ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_arco_ponderacion update on "informix"
    .arco_ponderacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_ponderacion (pon_grado,
    pon_fec_vig,pon_capacidad,pon_evad,pon_conducta,pon_pafe,pon_biof,
    pon_merito,pon_vigencia,desp_pon_grado,desp_pon_fec_vig,desp_pon_capacidad,
    desp_pon_evad,desp_pon_conducta,desp_pon_pafe,desp_pon_biof,desp_pon_merito,
    desp_pon_vigencia,accion,usuario,hora)  values (antes.pon_grado ,
    antes.pon_fec_vig ,antes.pon_capacidad ,antes.pon_evad ,antes.pon_conducta 
    ,antes.pon_pafe ,antes.pon_biof ,antes.pon_merito ,antes.pon_vigencia 
    ,luego.pon_grado ,luego.pon_fec_vig ,luego.pon_capacidad ,luego.pon_evad 
    ,luego.pon_conducta ,luego.pon_pafe ,luego.pon_biof ,luego.pon_merito 
    ,luego.pon_vigencia ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_arco_ponderacion insert on "informix"
    .arco_ponderacion referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_ponderacion (pon_grado,
    pon_fec_vig,pon_capacidad,pon_evad,pon_conducta,pon_pafe,pon_biof,
    pon_merito,pon_vigencia,desp_pon_grado,desp_pon_fec_vig,desp_pon_capacidad,
    desp_pon_evad,desp_pon_conducta,desp_pon_pafe,desp_pon_biof,desp_pon_merito,
    desp_pon_vigencia,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,NULL ,luego.pon_grado ,luego.pon_fec_vig ,luego.pon_capacidad 
    ,luego.pon_evad ,luego.pon_conducta ,luego.pon_pafe ,luego.pon_biof 
    ,luego.pon_merito ,luego.pon_vigencia ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_arco_ponderacion delete on "informix"
    .arco_ponderacion referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_ponderacion (pon_grado,
    pon_fec_vig,pon_capacidad,pon_evad,pon_conducta,pon_pafe,pon_biof,
    pon_merito,pon_vigencia,desp_pon_grado,desp_pon_fec_vig,desp_pon_capacidad,
    desp_pon_evad,desp_pon_conducta,desp_pon_pafe,desp_pon_biof,desp_pon_merito,
    desp_pon_vigencia,accion,usuario,hora)  values (antes.pon_grado ,
    antes.pon_fec_vig ,antes.pon_capacidad ,antes.pon_evad ,antes.pon_conducta 
    ,antes.pon_pafe ,antes.pon_biof ,antes.pon_merito ,antes.pon_vigencia 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_arco_sanciones update on "informix"
    .arco_sanciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_sanciones (asan_catalogo,
    asan_fecha,asan_sancion,asan_cantidad,asan_esca,desp_asan_catalogo,
    desp_asan_fecha,desp_asan_sancion,desp_asan_cantidad,desp_asan_esca,
    accion,usuario,hora)  values (antes.asan_catalogo ,antes.asan_fecha 
    ,antes.asan_sancion ,antes.asan_cantidad ,antes.asan_esca ,luego.asan_catalogo 
    ,luego.asan_fecha ,luego.asan_sancion ,luego.asan_cantidad ,luego.asan_esca 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_arco_sanciones insert on "informix"
    .arco_sanciones referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_sanciones (asan_catalogo,
    asan_fecha,asan_sancion,asan_cantidad,asan_esca,desp_asan_catalogo,
    desp_asan_fecha,desp_asan_sancion,desp_asan_cantidad,desp_asan_esca,
    accion,usuario,hora)  values (NULL ,'' ,NULL ,NULL ,'' ,luego.asan_catalogo 
    ,luego.asan_fecha ,luego.asan_sancion ,luego.asan_cantidad ,luego.asan_esca 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_arco_sanciones delete on "informix"
    .arco_sanciones referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_sanciones (asan_catalogo,
    asan_fecha,asan_sancion,asan_cantidad,asan_esca,desp_asan_catalogo,
    desp_asan_fecha,desp_asan_sancion,desp_asan_cantidad,desp_asan_esca,
    accion,usuario,hora)  values (antes.asan_catalogo ,antes.asan_fecha 
    ,antes.asan_sancion ,antes.asan_cantidad ,antes.asan_esca ,NULL ,
    '' ,NULL ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_arco_cursos update on "informix"
    .arco_cursos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_cursos (curm_codigo,curm_desc,
    curm_equi,curm_valor,curm_fuerza,curm_vigencia,curm_obser,curm_fec,
    desp_curm_codigo,desp_curm_desc,desp_curm_equi,desp_curm_valor,desp_curm_fuerza,
    desp_curm_vigencia,desp_curm_obser,desp_curm_fec,accion,usuario,hora) 
     values (antes.curm_codigo ,antes.curm_desc ,antes.curm_equi ,antes.curm_valor 
    ,antes.curm_fuerza ,antes.curm_vigencia ,antes.curm_obser ,antes.curm_fec 
    ,luego.curm_codigo ,luego.curm_desc ,luego.curm_equi ,luego.curm_valor 
    ,luego.curm_fuerza ,luego.curm_vigencia ,luego.curm_obser ,luego.curm_fec 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_arco_cursos insert on "informix"
    .arco_cursos referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_cursos (curm_codigo,curm_desc,
    curm_equi,curm_valor,curm_fuerza,curm_vigencia,curm_obser,curm_fec,
    desp_curm_codigo,desp_curm_desc,desp_curm_equi,desp_curm_valor,desp_curm_fuerza,
    desp_curm_vigencia,desp_curm_obser,desp_curm_fec,accion,usuario,hora) 
     values (NULL ,'' ,NULL ,'' ,'' ,NULL ,'' ,'' ,luego.curm_codigo ,luego.curm_desc 
    ,luego.curm_equi ,luego.curm_valor ,luego.curm_fuerza ,luego.curm_vigencia 
    ,luego.curm_obser ,luego.curm_fec ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_arco_cursos delete on "informix"
    .arco_cursos referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_cursos (curm_codigo,curm_desc,
    curm_equi,curm_valor,curm_fuerza,curm_vigencia,curm_obser,curm_fec,
    desp_curm_codigo,desp_curm_desc,desp_curm_equi,desp_curm_valor,desp_curm_fuerza,
    desp_curm_vigencia,desp_curm_obser,desp_curm_fec,accion,usuario,hora) 
     values (antes.curm_codigo ,antes.curm_desc ,antes.curm_equi ,antes.curm_valor 
    ,antes.curm_fuerza ,antes.curm_vigencia ,antes.curm_obser ,antes.curm_fec 
    ,NULL ,'' ,NULL ,'' ,'' ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_arco_jefes update on "informix".arco_jefes 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_jefes (ajef_plaza,ajef_categoria,
    ajef_empleo,ajef_fec_vig,ajef_vigencia,ajef_esca,desp_ajef_plaza,
    desp_ajef_categoria,desp_ajef_empleo,desp_ajef_fec_vig,desp_ajef_vigencia,
    desp_ajef_esca,accion,usuario,hora)  values (antes.ajef_plaza ,antes.ajef_categoria 
    ,antes.ajef_empleo ,antes.ajef_fec_vig ,antes.ajef_vigencia ,antes.ajef_esca 
    ,luego.ajef_plaza ,luego.ajef_categoria ,luego.ajef_empleo ,luego.ajef_fec_vig 
    ,luego.ajef_vigencia ,luego.ajef_esca ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_arco_jefes insert on "informix".arco_jefes 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_jefes (ajef_plaza,ajef_categoria,
    ajef_empleo,ajef_fec_vig,ajef_vigencia,ajef_esca,desp_ajef_plaza,
    desp_ajef_categoria,desp_ajef_empleo,desp_ajef_fec_vig,desp_ajef_vigencia,
    desp_ajef_esca,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,NULL 
    ,NULL ,luego.ajef_plaza ,luego.ajef_categoria ,luego.ajef_empleo 
    ,luego.ajef_fec_vig ,luego.ajef_vigencia ,luego.ajef_esca ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_arco_jefes delete on "informix".arco_jefes 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_jefes (ajef_plaza,ajef_categoria,
    ajef_empleo,ajef_fec_vig,ajef_vigencia,ajef_esca,desp_ajef_plaza,
    desp_ajef_categoria,desp_ajef_empleo,desp_ajef_fec_vig,desp_ajef_vigencia,
    desp_ajef_esca,accion,usuario,hora)  values (antes.ajef_plaza ,antes.ajef_categoria 
    ,antes.ajef_empleo ,antes.ajef_fec_vig ,antes.ajef_vigencia ,antes.ajef_esca 
    ,NULL ,'' ,'' ,'' ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_larm_solicitud insert on "informix"
    .larm_solicitud referencing new as luego
    for each row
        (
        insert into "informix".aud_larm_solicitud (sol_num,sol_catalogo,
    sol_tipo,sol_ref,sol_datocambia,sol_contenido,sol_contenido2,sol_motivo,
    sol_logistico,sol_comte,sol_inspector,sol_fecha,sol_usuario,desp_sol_num,
    desp_sol_catalogo,desp_sol_tipo,desp_sol_ref,desp_sol_datocambia,
    desp_sol_contenido,desp_sol_contenido2,desp_sol_motivo,desp_sol_logistico,
    desp_sol_comte,desp_sol_inspector,desp_sol_fecha,desp_sol_usuario,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL 
    ,'' ,NULL ,NULL ,NULL ,'' ,NULL ,luego.sol_num ,luego.sol_catalogo 
    ,luego.sol_tipo ,luego.sol_ref ,luego.sol_datocambia ,luego.sol_contenido 
    ,luego.sol_contenido2 ,luego.sol_motivo ,luego.sol_logistico ,luego.sol_comte 
    ,luego.sol_inspector ,luego.sol_fecha ,luego.sol_usuario ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_larm_solicitud delete on "informix"
    .larm_solicitud referencing old as antes
    for each row
        (
        insert into "informix".aud_larm_solicitud (sol_num,sol_catalogo,
    sol_tipo,sol_ref,sol_datocambia,sol_contenido,sol_contenido2,sol_motivo,
    sol_logistico,sol_comte,sol_inspector,sol_fecha,sol_usuario,desp_sol_num,
    desp_sol_catalogo,desp_sol_tipo,desp_sol_ref,desp_sol_datocambia,
    desp_sol_contenido,desp_sol_contenido2,desp_sol_motivo,desp_sol_logistico,
    desp_sol_comte,desp_sol_inspector,desp_sol_fecha,desp_sol_usuario,
    accion,usuario,hora)  values (antes.sol_num ,antes.sol_catalogo ,
    antes.sol_tipo ,antes.sol_ref ,antes.sol_datocambia ,antes.sol_contenido 
    ,antes.sol_contenido2 ,antes.sol_motivo ,antes.sol_logistico ,antes.sol_comte 
    ,antes.sol_inspector ,antes.sol_fecha ,antes.sol_usuario ,NULL ,NULL 
    ,NULL ,'' ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,NULL ,'' ,NULL ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_larm_solicitud update on "informix"
    .larm_solicitud referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_larm_solicitud (sol_num,sol_catalogo,
    sol_tipo,sol_ref,sol_datocambia,sol_contenido,sol_contenido2,sol_motivo,
    sol_logistico,sol_comte,sol_inspector,sol_fecha,sol_usuario,desp_sol_num,
    desp_sol_catalogo,desp_sol_tipo,desp_sol_ref,desp_sol_datocambia,
    desp_sol_contenido,desp_sol_contenido2,desp_sol_motivo,desp_sol_logistico,
    desp_sol_comte,desp_sol_inspector,desp_sol_fecha,desp_sol_usuario,
    accion,usuario,hora)  values (antes.sol_num ,antes.sol_catalogo ,
    antes.sol_tipo ,antes.sol_ref ,antes.sol_datocambia ,antes.sol_contenido 
    ,antes.sol_contenido2 ,antes.sol_motivo ,antes.sol_logistico ,antes.sol_comte 
    ,antes.sol_inspector ,antes.sol_fecha ,antes.sol_usuario ,luego.sol_num 
    ,luego.sol_catalogo ,luego.sol_tipo ,luego.sol_ref ,luego.sol_datocambia 
    ,luego.sol_contenido ,luego.sol_contenido2 ,luego.sol_motivo ,luego.sol_logistico 
    ,luego.sol_comte ,luego.sol_inspector ,luego.sol_fecha ,luego.sol_usuario 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_coordenadas update on "informix"
    .coc_coordenadas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_coordenadas (coo_reporte,
    coo_anio,coo_dep,coo_id,coo_lat_gra,coo_lat_min,coo_lat_seg,coo_long_gra,
    coo_long_min,coo_long_seg,coo_decimal_lat,coo_decimal_long,coo_utm_x,
    coo_utm_y,coo_lugar,desp_coo_reporte,desp_coo_anio,desp_coo_dep,desp_coo_id,
    desp_coo_lat_gra,desp_coo_lat_min,desp_coo_lat_seg,desp_coo_long_gra,
    desp_coo_long_min,desp_coo_long_seg,desp_coo_decimal_lat,desp_coo_decimal_long,
    desp_coo_utm_x,desp_coo_utm_y,desp_coo_lugar,accion,usuario,hora) 
     values (antes.coo_reporte ,antes.coo_anio ,antes.coo_dep ,antes.coo_id 
    ,antes.coo_lat_gra ,antes.coo_lat_min ,antes.coo_lat_seg ,antes.coo_long_gra 
    ,antes.coo_long_min ,antes.coo_long_seg ,antes.coo_decimal_lat ,antes.coo_decimal_long 
    ,antes.coo_utm_x ,antes.coo_utm_y ,antes.coo_lugar ,luego.coo_reporte 
    ,luego.coo_anio ,luego.coo_dep ,luego.coo_id ,luego.coo_lat_gra ,
    luego.coo_lat_min ,luego.coo_lat_seg ,luego.coo_long_gra ,luego.coo_long_min 
    ,luego.coo_long_seg ,luego.coo_decimal_lat ,luego.coo_decimal_long 
    ,luego.coo_utm_x ,luego.coo_utm_y ,luego.coo_lugar ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_coc_coordenadas insert on "informix"
    .coc_coordenadas referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_coordenadas (coo_reporte,
    coo_anio,coo_dep,coo_id,coo_lat_gra,coo_lat_min,coo_lat_seg,coo_long_gra,
    coo_long_min,coo_long_seg,coo_decimal_lat,coo_decimal_long,coo_utm_x,
    coo_utm_y,coo_lugar,desp_coo_reporte,desp_coo_anio,desp_coo_dep,desp_coo_id,
    desp_coo_lat_gra,desp_coo_lat_min,desp_coo_lat_seg,desp_coo_long_gra,
    desp_coo_long_min,desp_coo_long_seg,desp_coo_decimal_lat,desp_coo_decimal_long,
    desp_coo_utm_x,desp_coo_utm_y,desp_coo_lugar,accion,usuario,hora) 
     values (NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,'' ,'' ,NULL ,NULL ,'' ,luego.coo_reporte ,luego.coo_anio ,luego.coo_dep 
    ,luego.coo_id ,luego.coo_lat_gra ,luego.coo_lat_min ,luego.coo_lat_seg 
    ,luego.coo_long_gra ,luego.coo_long_min ,luego.coo_long_seg ,luego.coo_decimal_lat 
    ,luego.coo_decimal_long ,luego.coo_utm_x ,luego.coo_utm_y ,luego.coo_lugar 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_coordenadas delete on "informix"
    .coc_coordenadas referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_coordenadas (coo_reporte,
    coo_anio,coo_dep,coo_id,coo_lat_gra,coo_lat_min,coo_lat_seg,coo_long_gra,
    coo_long_min,coo_long_seg,coo_decimal_lat,coo_decimal_long,coo_utm_x,
    coo_utm_y,coo_lugar,desp_coo_reporte,desp_coo_anio,desp_coo_dep,desp_coo_id,
    desp_coo_lat_gra,desp_coo_lat_min,desp_coo_lat_seg,desp_coo_long_gra,
    desp_coo_long_min,desp_coo_long_seg,desp_coo_decimal_lat,desp_coo_decimal_long,
    desp_coo_utm_x,desp_coo_utm_y,desp_coo_lugar,accion,usuario,hora) 
     values (antes.coo_reporte ,antes.coo_anio ,antes.coo_dep ,antes.coo_id 
    ,antes.coo_lat_gra ,antes.coo_lat_min ,antes.coo_lat_seg ,antes.coo_long_gra 
    ,antes.coo_long_min ,antes.coo_long_seg ,antes.coo_decimal_lat ,antes.coo_decimal_long 
    ,antes.coo_utm_x ,antes.coo_utm_y ,antes.coo_lugar ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_mision update on "informix".coc_mision 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_mision (mis_codigo,mis_descripcion,
    mis_fuerza,mis_tipo,desp_mis_codigo,desp_mis_descripcion,desp_mis_fuerza,
    desp_mis_tipo,accion,usuario,hora)  values (antes.mis_codigo ,antes.mis_descripcion 
    ,antes.mis_fuerza ,antes.mis_tipo ,luego.mis_codigo ,luego.mis_descripcion 
    ,luego.mis_fuerza ,luego.mis_tipo ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_coc_mision insert on "informix".coc_mision 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_mision (mis_codigo,mis_descripcion,
    mis_fuerza,mis_tipo,desp_mis_codigo,desp_mis_descripcion,desp_mis_fuerza,
    desp_mis_tipo,accion,usuario,hora)  values (NULL ,'' ,NULL ,NULL ,
    luego.mis_codigo ,luego.mis_descripcion ,luego.mis_fuerza ,luego.mis_tipo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_mision delete on "informix".coc_mision 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_mision (mis_codigo,mis_descripcion,
    mis_fuerza,mis_tipo,desp_mis_codigo,desp_mis_descripcion,desp_mis_fuerza,
    desp_mis_tipo,accion,usuario,hora)  values (antes.mis_codigo ,antes.mis_descripcion 
    ,antes.mis_fuerza ,antes.mis_tipo ,NULL ,'' ,NULL ,NULL ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_personal update on "informix"
    .coc_personal referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_personal (per_reporte,
    per_anio,per_dep,per_tipo,per_cantidad,desp_per_reporte,desp_per_anio,
    desp_per_dep,desp_per_tipo,desp_per_cantidad,accion,usuario,hora) 
     values (antes.per_reporte ,antes.per_anio ,antes.per_dep ,antes.per_tipo 
    ,antes.per_cantidad ,luego.per_reporte ,luego.per_anio ,luego.per_dep 
    ,luego.per_tipo ,luego.per_cantidad ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_coc_personal insert on "informix"
    .coc_personal referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_personal (per_reporte,
    per_anio,per_dep,per_tipo,per_cantidad,desp_per_reporte,desp_per_anio,
    desp_per_dep,desp_per_tipo,desp_per_cantidad,accion,usuario,hora) 
     values (NULL ,NULL ,NULL ,NULL ,NULL ,luego.per_reporte ,luego.per_anio 
    ,luego.per_dep ,luego.per_tipo ,luego.per_cantidad ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_coc_personal delete on "informix"
    .coc_personal referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_personal (per_reporte,
    per_anio,per_dep,per_tipo,per_cantidad,desp_per_reporte,desp_per_anio,
    desp_per_dep,desp_per_tipo,desp_per_cantidad,accion,usuario,hora) 
     values (antes.per_reporte ,antes.per_anio ,antes.per_dep ,antes.per_tipo 
    ,antes.per_cantidad ,NULL ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_coc_reporte update on "informix"
    .coc_reporte referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_reporte (rep_id,rep_anio,
    rep_dep,rep_mision,rep_nivel_u,rep_cat_resp,rep_resp_gra,rep_fec_ini,
    rep_fec_fin,rep_fec_fin_e,rep_porque,rep_resultado,rep_of_comte,rep_comte_gra,
    rep_of_ops,rep_ops_gra,rep_mje_orden,rep_mje_inicio,rep_mje_fin,rep_mje_cancela,
    rep_motivo_canc,rep_fec_canc,rep_usuario,rep_fecha,rep_status,desp_rep_id,
    desp_rep_anio,desp_rep_dep,desp_rep_mision,desp_rep_nivel_u,desp_rep_cat_resp,
    desp_rep_resp_gra,desp_rep_fec_ini,desp_rep_fec_fin,desp_rep_fec_fin_e,
    desp_rep_porque,desp_rep_resultado,desp_rep_of_comte,desp_rep_comte_gra,
    desp_rep_of_ops,desp_rep_ops_gra,desp_rep_mje_orden,desp_rep_mje_inicio,
    desp_rep_mje_fin,desp_rep_mje_cancela,desp_rep_motivo_canc,desp_rep_fec_canc,
    desp_rep_usuario,desp_rep_fecha,desp_rep_status,accion,usuario,hora) 
     values (antes.rep_id ,antes.rep_anio ,antes.rep_dep ,antes.rep_mision 
    ,antes.rep_nivel_u ,antes.rep_cat_resp ,antes.rep_resp_gra ,antes.rep_fec_ini 
    ,antes.rep_fec_fin ,antes.rep_fec_fin_e ,antes.rep_porque ,antes.rep_resultado 
    ,antes.rep_of_comte ,antes.rep_comte_gra ,antes.rep_of_ops ,antes.rep_ops_gra 
    ,antes.rep_mje_orden ,antes.rep_mje_inicio ,antes.rep_mje_fin ,antes.rep_mje_cancela 
    ,antes.rep_motivo_canc ,antes.rep_fec_canc ,antes.rep_usuario ,antes.rep_fecha 
    ,antes.rep_status ,luego.rep_id ,luego.rep_anio ,luego.rep_dep ,luego.rep_mision 
    ,luego.rep_nivel_u ,luego.rep_cat_resp ,luego.rep_resp_gra ,luego.rep_fec_ini 
    ,luego.rep_fec_fin ,luego.rep_fec_fin_e ,luego.rep_porque ,luego.rep_resultado 
    ,luego.rep_of_comte ,luego.rep_comte_gra ,luego.rep_of_ops ,luego.rep_ops_gra 
    ,luego.rep_mje_orden ,luego.rep_mje_inicio ,luego.rep_mje_fin ,luego.rep_mje_cancela 
    ,luego.rep_motivo_canc ,luego.rep_fec_canc ,luego.rep_usuario ,luego.rep_fecha 
    ,luego.rep_status ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_reporte insert on "informix"
    .coc_reporte referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_reporte (rep_id,rep_anio,
    rep_dep,rep_mision,rep_nivel_u,rep_cat_resp,rep_resp_gra,rep_fec_ini,
    rep_fec_fin,rep_fec_fin_e,rep_porque,rep_resultado,rep_of_comte,rep_comte_gra,
    rep_of_ops,rep_ops_gra,rep_mje_orden,rep_mje_inicio,rep_mje_fin,rep_mje_cancela,
    rep_motivo_canc,rep_fec_canc,rep_usuario,rep_fecha,rep_status,desp_rep_id,
    desp_rep_anio,desp_rep_dep,desp_rep_mision,desp_rep_nivel_u,desp_rep_cat_resp,
    desp_rep_resp_gra,desp_rep_fec_ini,desp_rep_fec_fin,desp_rep_fec_fin_e,
    desp_rep_porque,desp_rep_resultado,desp_rep_of_comte,desp_rep_comte_gra,
    desp_rep_of_ops,desp_rep_ops_gra,desp_rep_mje_orden,desp_rep_mje_inicio,
    desp_rep_mje_fin,desp_rep_mje_cancela,desp_rep_motivo_canc,desp_rep_fec_canc,
    desp_rep_usuario,desp_rep_fecha,desp_rep_status,accion,usuario,hora) 
     values (NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' 
    ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,'' ,NULL ,luego.rep_id 
    ,luego.rep_anio ,luego.rep_dep ,luego.rep_mision ,luego.rep_nivel_u 
    ,luego.rep_cat_resp ,luego.rep_resp_gra ,luego.rep_fec_ini ,luego.rep_fec_fin 
    ,luego.rep_fec_fin_e ,luego.rep_porque ,luego.rep_resultado ,luego.rep_of_comte 
    ,luego.rep_comte_gra ,luego.rep_of_ops ,luego.rep_ops_gra ,luego.rep_mje_orden 
    ,luego.rep_mje_inicio ,luego.rep_mje_fin ,luego.rep_mje_cancela ,
    luego.rep_motivo_canc ,luego.rep_fec_canc ,luego.rep_usuario ,luego.rep_fecha 
    ,luego.rep_status ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_reporte delete on "informix"
    .coc_reporte referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_reporte (rep_id,rep_anio,
    rep_dep,rep_mision,rep_nivel_u,rep_cat_resp,rep_resp_gra,rep_fec_ini,
    rep_fec_fin,rep_fec_fin_e,rep_porque,rep_resultado,rep_of_comte,rep_comte_gra,
    rep_of_ops,rep_ops_gra,rep_mje_orden,rep_mje_inicio,rep_mje_fin,rep_mje_cancela,
    rep_motivo_canc,rep_fec_canc,rep_usuario,rep_fecha,rep_status,desp_rep_id,
    desp_rep_anio,desp_rep_dep,desp_rep_mision,desp_rep_nivel_u,desp_rep_cat_resp,
    desp_rep_resp_gra,desp_rep_fec_ini,desp_rep_fec_fin,desp_rep_fec_fin_e,
    desp_rep_porque,desp_rep_resultado,desp_rep_of_comte,desp_rep_comte_gra,
    desp_rep_of_ops,desp_rep_ops_gra,desp_rep_mje_orden,desp_rep_mje_inicio,
    desp_rep_mje_fin,desp_rep_mje_cancela,desp_rep_motivo_canc,desp_rep_fec_canc,
    desp_rep_usuario,desp_rep_fecha,desp_rep_status,accion,usuario,hora) 
     values (antes.rep_id ,antes.rep_anio ,antes.rep_dep ,antes.rep_mision 
    ,antes.rep_nivel_u ,antes.rep_cat_resp ,antes.rep_resp_gra ,antes.rep_fec_ini 
    ,antes.rep_fec_fin ,antes.rep_fec_fin_e ,antes.rep_porque ,antes.rep_resultado 
    ,antes.rep_of_comte ,antes.rep_comte_gra ,antes.rep_of_ops ,antes.rep_ops_gra 
    ,antes.rep_mje_orden ,antes.rep_mje_inicio ,antes.rep_mje_fin ,antes.rep_mje_cancela 
    ,antes.rep_motivo_canc ,antes.rep_fec_canc ,antes.rep_usuario ,antes.rep_fecha 
    ,antes.rep_status ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,''
     ,'' ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,'' ,NULL 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_tipo_veh update on "informix"
    .coc_tipo_veh referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_tipo_veh (tve_codigo,tve_descripcion,
    tve_uso,desp_tve_codigo,desp_tve_descripcion,desp_tve_uso,accion,
    usuario,hora)  values (antes.tve_codigo ,antes.tve_descripcion ,antes.tve_uso 
    ,luego.tve_codigo ,luego.tve_descripcion ,luego.tve_uso ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_tipo_veh insert on "informix"
    .coc_tipo_veh referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_tipo_veh (tve_codigo,tve_descripcion,
    tve_uso,desp_tve_codigo,desp_tve_descripcion,desp_tve_uso,accion,
    usuario,hora)  values (NULL ,'' ,NULL ,luego.tve_codigo ,luego.tve_descripcion 
    ,luego.tve_uso ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_tipo_veh delete on "informix"
    .coc_tipo_veh referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_tipo_veh (tve_codigo,tve_descripcion,
    tve_uso,desp_tve_codigo,desp_tve_descripcion,desp_tve_uso,accion,
    usuario,hora)  values (antes.tve_codigo ,antes.tve_descripcion ,antes.tve_uso 
    ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_vehiculo_rep update on "informix"
    .coc_vehiculo_rep referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_vehiculo_rep (veh_reporte,
    veh_anio,veh_dep,veh_tipo,veh_propiedad,veh_cantidad,desp_veh_reporte,
    desp_veh_anio,desp_veh_dep,desp_veh_tipo,desp_veh_propiedad,desp_veh_cantidad,
    accion,usuario,hora)  values (antes.veh_reporte ,antes.veh_anio ,
    antes.veh_dep ,antes.veh_tipo ,antes.veh_propiedad ,antes.veh_cantidad 
    ,luego.veh_reporte ,luego.veh_anio ,luego.veh_dep ,luego.veh_tipo 
    ,luego.veh_propiedad ,luego.veh_cantidad ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_coc_vehiculo_rep insert on "informix"
    .coc_vehiculo_rep referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_vehiculo_rep (veh_reporte,
    veh_anio,veh_dep,veh_tipo,veh_propiedad,veh_cantidad,desp_veh_reporte,
    desp_veh_anio,desp_veh_dep,desp_veh_tipo,desp_veh_propiedad,desp_veh_cantidad,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,luego.veh_reporte ,luego.veh_anio ,luego.veh_dep ,luego.veh_tipo 
    ,luego.veh_propiedad ,luego.veh_cantidad ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_coc_vehiculo_rep delete on "informix"
    .coc_vehiculo_rep referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_vehiculo_rep (veh_reporte,
    veh_anio,veh_dep,veh_tipo,veh_propiedad,veh_cantidad,desp_veh_reporte,
    desp_veh_anio,desp_veh_dep,desp_veh_tipo,desp_veh_propiedad,desp_veh_cantidad,
    accion,usuario,hora)  values (antes.veh_reporte ,antes.veh_anio ,
    antes.veh_dep ,antes.veh_tipo ,antes.veh_propiedad ,antes.veh_cantidad 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_fin_personal update on "informix"
    .fin_personal referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fin_personal (fper_catalogo,
    fper_grado,fper_arma,fper_nom1,fper_nom2,fper_ape1,fper_ape2,fper_ape3,
    fper_ced_ord,fper_ced_reg,fper_fec_ext_ced,fper_ext_ced_lugar,fper_est_civil,
    fper_direccion,fper_zona,fper_dir_lugar,fper_telefono,fper_sexo,fper_fec_nac,
    fper_nac_lugar,fper_sangre,fper_profesion,fper_banco,fper_cuenta,
    fper_tip_cuenta,fper_situacion,fper_dpi,desp_fper_catalogo,desp_fper_grado,
    desp_fper_arma,desp_fper_nom1,desp_fper_nom2,desp_fper_ape1,desp_fper_ape2,
    desp_fper_ape3,desp_fper_ced_ord,desp_fper_ced_reg,desp_fper_fec_ext_ced,
    desp_fper_ext_ced_lugar,desp_fper_est_civil,desp_fper_direccion,desp_fper_zona,
    desp_fper_dir_lugar,desp_fper_telefono,desp_fper_sexo,desp_fper_fec_nac,
    desp_fper_nac_lugar,desp_fper_sangre,desp_fper_profesion,desp_fper_banco,
    desp_fper_cuenta,desp_fper_tip_cuenta,desp_fper_situacion,desp_fper_dpi,
    accion,usuario,hora)  values (antes.fper_catalogo ,antes.fper_grado 
    ,antes.fper_arma ,antes.fper_nom1 ,antes.fper_nom2 ,antes.fper_ape1 
    ,antes.fper_ape2 ,antes.fper_ape3 ,antes.fper_ced_ord ,antes.fper_ced_reg 
    ,antes.fper_fec_ext_ced ,antes.fper_ext_ced_lugar ,antes.fper_est_civil 
    ,antes.fper_direccion ,antes.fper_zona ,antes.fper_dir_lugar ,antes.fper_telefono 
    ,antes.fper_sexo ,antes.fper_fec_nac ,antes.fper_nac_lugar ,antes.fper_sangre 
    ,antes.fper_profesion ,antes.fper_banco ,antes.fper_cuenta ,antes.fper_tip_cuenta 
    ,antes.fper_situacion ,antes.fper_dpi ,luego.fper_catalogo ,luego.fper_grado 
    ,luego.fper_arma ,luego.fper_nom1 ,luego.fper_nom2 ,luego.fper_ape1 
    ,luego.fper_ape2 ,luego.fper_ape3 ,luego.fper_ced_ord ,luego.fper_ced_reg 
    ,luego.fper_fec_ext_ced ,luego.fper_ext_ced_lugar ,luego.fper_est_civil 
    ,luego.fper_direccion ,luego.fper_zona ,luego.fper_dir_lugar ,luego.fper_telefono 
    ,luego.fper_sexo ,luego.fper_fec_nac ,luego.fper_nac_lugar ,luego.fper_sangre 
    ,luego.fper_profesion ,luego.fper_banco ,luego.fper_cuenta ,luego.fper_tip_cuenta 
    ,luego.fper_situacion ,luego.fper_dpi ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_fin_personal insert on "informix"
    .fin_personal referencing new as luego
    for each row
        (
        insert into "informix".aud_fin_personal (fper_catalogo,
    fper_grado,fper_arma,fper_nom1,fper_nom2,fper_ape1,fper_ape2,fper_ape3,
    fper_ced_ord,fper_ced_reg,fper_fec_ext_ced,fper_ext_ced_lugar,fper_est_civil,
    fper_direccion,fper_zona,fper_dir_lugar,fper_telefono,fper_sexo,fper_fec_nac,
    fper_nac_lugar,fper_sangre,fper_profesion,fper_banco,fper_cuenta,
    fper_tip_cuenta,fper_situacion,fper_dpi,desp_fper_catalogo,desp_fper_grado,
    desp_fper_arma,desp_fper_nom1,desp_fper_nom2,desp_fper_ape1,desp_fper_ape2,
    desp_fper_ape3,desp_fper_ced_ord,desp_fper_ced_reg,desp_fper_fec_ext_ced,
    desp_fper_ext_ced_lugar,desp_fper_est_civil,desp_fper_direccion,desp_fper_zona,
    desp_fper_dir_lugar,desp_fper_telefono,desp_fper_sexo,desp_fper_fec_nac,
    desp_fper_nac_lugar,desp_fper_sangre,desp_fper_profesion,desp_fper_banco,
    desp_fper_cuenta,desp_fper_tip_cuenta,desp_fper_situacion,desp_fper_dpi,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,NULL ,'' ,NULL ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,'' ,'' ,''
     ,luego.fper_catalogo ,luego.fper_grado ,luego.fper_arma ,luego.fper_nom1 
    ,luego.fper_nom2 ,luego.fper_ape1 ,luego.fper_ape2 ,luego.fper_ape3 
    ,luego.fper_ced_ord ,luego.fper_ced_reg ,luego.fper_fec_ext_ced ,
    luego.fper_ext_ced_lugar ,luego.fper_est_civil ,luego.fper_direccion 
    ,luego.fper_zona ,luego.fper_dir_lugar ,luego.fper_telefono ,luego.fper_sexo 
    ,luego.fper_fec_nac ,luego.fper_nac_lugar ,luego.fper_sangre ,luego.fper_profesion 
    ,luego.fper_banco ,luego.fper_cuenta ,luego.fper_tip_cuenta ,luego.fper_situacion 
    ,luego.fper_dpi ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fin_personal delete on "informix"
    .fin_personal referencing old as antes
    for each row
        (
        insert into "informix".aud_fin_personal (fper_catalogo,
    fper_grado,fper_arma,fper_nom1,fper_nom2,fper_ape1,fper_ape2,fper_ape3,
    fper_ced_ord,fper_ced_reg,fper_fec_ext_ced,fper_ext_ced_lugar,fper_est_civil,
    fper_direccion,fper_zona,fper_dir_lugar,fper_telefono,fper_sexo,fper_fec_nac,
    fper_nac_lugar,fper_sangre,fper_profesion,fper_banco,fper_cuenta,
    fper_tip_cuenta,fper_situacion,fper_dpi,desp_fper_catalogo,desp_fper_grado,
    desp_fper_arma,desp_fper_nom1,desp_fper_nom2,desp_fper_ape1,desp_fper_ape2,
    desp_fper_ape3,desp_fper_ced_ord,desp_fper_ced_reg,desp_fper_fec_ext_ced,
    desp_fper_ext_ced_lugar,desp_fper_est_civil,desp_fper_direccion,desp_fper_zona,
    desp_fper_dir_lugar,desp_fper_telefono,desp_fper_sexo,desp_fper_fec_nac,
    desp_fper_nac_lugar,desp_fper_sangre,desp_fper_profesion,desp_fper_banco,
    desp_fper_cuenta,desp_fper_tip_cuenta,desp_fper_situacion,desp_fper_dpi,
    accion,usuario,hora)  values (antes.fper_catalogo ,antes.fper_grado 
    ,antes.fper_arma ,antes.fper_nom1 ,antes.fper_nom2 ,antes.fper_ape1 
    ,antes.fper_ape2 ,antes.fper_ape3 ,antes.fper_ced_ord ,antes.fper_ced_reg 
    ,antes.fper_fec_ext_ced ,antes.fper_ext_ced_lugar ,antes.fper_est_civil 
    ,antes.fper_direccion ,antes.fper_zona ,antes.fper_dir_lugar ,antes.fper_telefono 
    ,antes.fper_sexo ,antes.fper_fec_nac ,antes.fper_nac_lugar ,antes.fper_sangre 
    ,antes.fper_profesion ,antes.fper_banco ,antes.fper_cuenta ,antes.fper_tip_cuenta 
    ,antes.fper_situacion ,antes.fper_dpi ,NULL ,NULL ,NULL ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,'' ,NULL ,'' ,'' ,'' ,'' ,NULL ,NULL ,''
     ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_dman update on "informix".coc_dman 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_dman (dman_codigo,dman_dep,
    dman_desc_lg,dman_desc_ct,dman_lat_gra,dman_lat_min,dman_lat_seg,
    dman_long_gra,dman_long_min,dman_long_seg,dman_decimal_lat,dman_decimal_long,
    dman_situacion,desp_dman_codigo,desp_dman_dep,desp_dman_desc_lg,desp_dman_desc_ct,
    desp_dman_lat_gra,desp_dman_lat_min,desp_dman_lat_seg,desp_dman_long_gra,
    desp_dman_long_min,desp_dman_long_seg,desp_dman_decimal_lat,desp_dman_decimal_long,
    desp_dman_situacion,accion,usuario,hora)  values (antes.dman_codigo 
    ,antes.dman_dep ,antes.dman_desc_lg ,antes.dman_desc_ct ,antes.dman_lat_gra 
    ,antes.dman_lat_min ,antes.dman_lat_seg ,antes.dman_long_gra ,antes.dman_long_min 
    ,antes.dman_long_seg ,antes.dman_decimal_lat ,antes.dman_decimal_long 
    ,antes.dman_situacion ,luego.dman_codigo ,luego.dman_dep ,luego.dman_desc_lg 
    ,luego.dman_desc_ct ,luego.dman_lat_gra ,luego.dman_lat_min ,luego.dman_lat_seg 
    ,luego.dman_long_gra ,luego.dman_long_min ,luego.dman_long_seg ,luego.dman_decimal_lat 
    ,luego.dman_decimal_long ,luego.dman_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_coc_dman insert on "informix".coc_dman 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_dman (dman_codigo,dman_dep,
    dman_desc_lg,dman_desc_ct,dman_lat_gra,dman_lat_min,dman_lat_seg,
    dman_long_gra,dman_long_min,dman_long_seg,dman_decimal_lat,dman_decimal_long,
    dman_situacion,desp_dman_codigo,desp_dman_dep,desp_dman_desc_lg,desp_dman_desc_ct,
    desp_dman_lat_gra,desp_dman_lat_min,desp_dman_lat_seg,desp_dman_long_gra,
    desp_dman_long_min,desp_dman_long_seg,desp_dman_decimal_lat,desp_dman_decimal_long,
    desp_dman_situacion,accion,usuario,hora)  values (NULL ,NULL ,'' ,
    '' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,NULL ,luego.dman_codigo 
    ,luego.dman_dep ,luego.dman_desc_lg ,luego.dman_desc_ct ,luego.dman_lat_gra 
    ,luego.dman_lat_min ,luego.dman_lat_seg ,luego.dman_long_gra ,luego.dman_long_min 
    ,luego.dman_long_seg ,luego.dman_decimal_lat ,luego.dman_decimal_long 
    ,luego.dman_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_dman delete on "informix".coc_dman 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_dman (dman_codigo,dman_dep,
    dman_desc_lg,dman_desc_ct,dman_lat_gra,dman_lat_min,dman_lat_seg,
    dman_long_gra,dman_long_min,dman_long_seg,dman_decimal_lat,dman_decimal_long,
    dman_situacion,desp_dman_codigo,desp_dman_dep,desp_dman_desc_lg,desp_dman_desc_ct,
    desp_dman_lat_gra,desp_dman_lat_min,desp_dman_lat_seg,desp_dman_long_gra,
    desp_dman_long_min,desp_dman_long_seg,desp_dman_decimal_lat,desp_dman_decimal_long,
    desp_dman_situacion,accion,usuario,hora)  values (antes.dman_codigo 
    ,antes.dman_dep ,antes.dman_desc_lg ,antes.dman_desc_ct ,antes.dman_lat_gra 
    ,antes.dman_lat_min ,antes.dman_lat_seg ,antes.dman_long_gra ,antes.dman_long_min 
    ,antes.dman_long_seg ,antes.dman_decimal_lat ,antes.dman_decimal_long 
    ,antes.dman_situacion ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,
    NULL ,NULL ,'' ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_fin_contrato update on "informix"
    .fin_contrato referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fin_contrato (con_catalogo,
    con_escuadron,con_empleo,con_inicia,con_termina,con_pago,con_contrato,
    con_fec_alta,con_fec_baja,con_motivo,con_hor_trab,desp_con_catalogo,
    desp_con_escuadron,desp_con_empleo,desp_con_inicia,desp_con_termina,
    desp_con_pago,desp_con_contrato,desp_con_fec_alta,desp_con_fec_baja,
    desp_con_motivo,desp_con_hor_trab,accion,usuario,hora)  values (antes.con_catalogo 
    ,antes.con_escuadron ,antes.con_empleo ,antes.con_inicia ,antes.con_termina 
    ,antes.con_pago ,antes.con_contrato ,antes.con_fec_alta ,antes.con_fec_baja 
    ,antes.con_motivo ,antes.con_hor_trab ,luego.con_catalogo ,luego.con_escuadron 
    ,luego.con_empleo ,luego.con_inicia ,luego.con_termina ,luego.con_pago 
    ,luego.con_contrato ,luego.con_fec_alta ,luego.con_fec_baja ,luego.con_motivo 
    ,luego.con_hor_trab ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fin_contrato insert on "informix"
    .fin_contrato referencing new as luego
    for each row
        (
        insert into "informix".aud_fin_contrato (con_catalogo,
    con_escuadron,con_empleo,con_inicia,con_termina,con_pago,con_contrato,
    con_fec_alta,con_fec_baja,con_motivo,con_hor_trab,desp_con_catalogo,
    desp_con_escuadron,desp_con_empleo,desp_con_inicia,desp_con_termina,
    desp_con_pago,desp_con_contrato,desp_con_fec_alta,desp_con_fec_baja,
    desp_con_motivo,desp_con_hor_trab,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,luego.con_catalogo ,luego.con_escuadron 
    ,luego.con_empleo ,luego.con_inicia ,luego.con_termina ,luego.con_pago 
    ,luego.con_contrato ,luego.con_fec_alta ,luego.con_fec_baja ,luego.con_motivo 
    ,luego.con_hor_trab ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fin_contrato delete on "informix"
    .fin_contrato referencing old as antes
    for each row
        (
        insert into "informix".aud_fin_contrato (con_catalogo,
    con_escuadron,con_empleo,con_inicia,con_termina,con_pago,con_contrato,
    con_fec_alta,con_fec_baja,con_motivo,con_hor_trab,desp_con_catalogo,
    desp_con_escuadron,desp_con_empleo,desp_con_inicia,desp_con_termina,
    desp_con_pago,desp_con_contrato,desp_con_fec_alta,desp_con_fec_baja,
    desp_con_motivo,desp_con_hor_trab,accion,usuario,hora)  values (antes.con_catalogo 
    ,antes.con_escuadron ,antes.con_empleo ,antes.con_inicia ,antes.con_termina 
    ,antes.con_pago ,antes.con_contrato ,antes.con_fec_alta ,antes.con_fec_baja 
    ,antes.con_motivo ,antes.con_hor_trab ,NULL ,NULL ,NULL ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fin_escuadrones update on "informix"
    .fin_escuadrones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fin_escuadrones (esc_codigo,
    esc_desc_lg,esc_desc_md,esc_desc_ct,esc_gru_pago,esc_dependencia,
    desp_esc_codigo,desp_esc_desc_lg,desp_esc_desc_md,desp_esc_desc_ct,
    desp_esc_gru_pago,desp_esc_dependencia,accion,usuario,hora)  values 
    (antes.esc_codigo ,antes.esc_desc_lg ,antes.esc_desc_md ,antes.esc_desc_ct 
    ,antes.esc_gru_pago ,antes.esc_dependencia ,luego.esc_codigo ,luego.esc_desc_lg 
    ,luego.esc_desc_md ,luego.esc_desc_ct ,luego.esc_gru_pago ,luego.esc_dependencia 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fin_escuadrones insert on "informix"
    .fin_escuadrones referencing new as luego
    for each row
        (
        insert into "informix".aud_fin_escuadrones (esc_codigo,
    esc_desc_lg,esc_desc_md,esc_desc_ct,esc_gru_pago,esc_dependencia,
    desp_esc_codigo,desp_esc_desc_lg,desp_esc_desc_md,desp_esc_desc_ct,
    desp_esc_gru_pago,desp_esc_dependencia,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,NULL ,NULL ,luego.esc_codigo ,luego.esc_desc_lg ,
    luego.esc_desc_md ,luego.esc_desc_ct ,luego.esc_gru_pago ,luego.esc_dependencia 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fin_escuadrones delete on "informix"
    .fin_escuadrones referencing old as antes
    for each row
        (
        insert into "informix".aud_fin_escuadrones (esc_codigo,
    esc_desc_lg,esc_desc_md,esc_desc_ct,esc_gru_pago,esc_dependencia,
    desp_esc_codigo,desp_esc_desc_lg,desp_esc_desc_md,desp_esc_desc_ct,
    desp_esc_gru_pago,desp_esc_dependencia,accion,usuario,hora)  values 
    (antes.esc_codigo ,antes.esc_desc_lg ,antes.esc_desc_md ,antes.esc_desc_ct 
    ,antes.esc_gru_pago ,antes.esc_dependencia ,NULL ,'' ,'' ,'' ,NULL ,
    NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_cn update on "informix".cn referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_cn (cn_catalogo,cn_plaza,cn_aplicacion,
    cn_nivel,cn_accion,cn_fecha,desp_cn_catalogo,desp_cn_plaza,desp_cn_aplicacion,
    desp_cn_nivel,desp_cn_accion,desp_cn_fecha,accion,usuario,hora)  
    values (antes.cn_catalogo ,antes.cn_plaza ,antes.cn_aplicacion ,antes.cn_nivel 
    ,antes.cn_accion ,antes.cn_fecha ,luego.cn_catalogo ,luego.cn_plaza 
    ,luego.cn_aplicacion ,luego.cn_nivel ,luego.cn_accion ,luego.cn_fecha 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cn insert on "informix".cn referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_cn (cn_catalogo,cn_plaza,cn_aplicacion,
    cn_nivel,cn_accion,cn_fecha,desp_cn_catalogo,desp_cn_plaza,desp_cn_aplicacion,
    desp_cn_nivel,desp_cn_accion,desp_cn_fecha,accion,usuario,hora)  
    values (NULL ,NULL ,NULL ,' ' ,' ' ,' ' ,luego.cn_catalogo ,luego.cn_plaza 
    ,luego.cn_aplicacion ,luego.cn_nivel ,luego.cn_accion ,luego.cn_fecha 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_cn delete on "informix".cn referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_cn (cn_catalogo,cn_plaza,cn_aplicacion,
    cn_nivel,cn_accion,cn_fecha,desp_cn_catalogo,desp_cn_plaza,desp_cn_aplicacion,
    desp_cn_nivel,desp_cn_accion,desp_cn_fecha,accion,usuario,hora)  
    values (antes.cn_catalogo ,antes.cn_plaza ,antes.cn_aplicacion ,antes.cn_nivel 
    ,antes.cn_accion ,antes.cn_fecha ,NULL ,NULL ,NULL ,' ' ,' ' ,' ' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_cnb update on "informix".cnb referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_cnb (cnb_codigo,cnb_desc_lg,
    desp_cnb_codigo,desp_cnb_desc_lg,accion,usuario,hora)  values (antes.cnb_codigo 
    ,antes.cnb_desc_lg ,luego.cnb_codigo ,luego.cnb_desc_lg ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cnb insert on "informix".cnb referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_cnb (cnb_codigo,cnb_desc_lg,
    desp_cnb_codigo,desp_cnb_desc_lg,accion,usuario,hora)  values (' '
     ,' ' ,luego.cnb_codigo ,luego.cnb_desc_lg ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_cnb delete on "informix".cnb referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_cnb (cnb_codigo,cnb_desc_lg,
    desp_cnb_codigo,desp_cnb_desc_lg,accion,usuario,hora)  values (antes.cnb_codigo 
    ,antes.cnb_desc_lg ,' ' ,' ' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_usu_sistemas update on "informix"
    .cns referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_usu_sistemas (sis_catalogo,
    sis_pass,sis_fecha,sis_permiso,desp_sis_catalogo,desp_sis_pass,desp_sis_fecha,
    desp_sis_permiso,accion,usuario,hora)  values (antes.sis_catalogo 
    ,antes.sis_pass ,antes.sis_fecha ,antes.sis_permiso ,luego.sis_catalogo 
    ,luego.sis_pass ,luego.sis_fecha ,luego.sis_permiso ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_usu_sistemas delete on "informix"
    .cns referencing old as antes
    for each row
        (
        insert into "informix".aud_usu_sistemas (sis_catalogo,
    sis_pass,sis_fecha,sis_permiso,desp_sis_catalogo,desp_sis_pass,desp_sis_fecha,
    desp_sis_permiso,accion,usuario,hora)  values (antes.sis_catalogo 
    ,antes.sis_pass ,antes.sis_fecha ,antes.sis_permiso ,NULL ,' ' ,' '
     ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_planificar update on "informix"
    .coc_planificar referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_planificar (pla_dep_llave,
    pla_codigo,pla_referencia,pla_descripcion,pla_situacion,desp_pla_dep_llave,
    desp_pla_codigo,desp_pla_referencia,desp_pla_descripcion,desp_pla_situacion,
    accion,usuario,hora)  values (antes.pla_dep_llave ,antes.pla_codigo 
    ,antes.pla_referencia ,antes.pla_descripcion ,antes.pla_situacion 
    ,luego.pla_dep_llave ,luego.pla_codigo ,luego.pla_referencia ,luego.pla_descripcion 
    ,luego.pla_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_planificar insert on "informix"
    .coc_planificar referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_planificar (pla_dep_llave,
    pla_codigo,pla_referencia,pla_descripcion,pla_situacion,desp_pla_dep_llave,
    desp_pla_codigo,desp_pla_referencia,desp_pla_descripcion,desp_pla_situacion,
    accion,usuario,hora)  values (NULL ,NULL ,'' ,'' ::lvarchar(1500) ,
    NULL ,luego.pla_dep_llave ,luego.pla_codigo ,luego.pla_referencia 
    ,luego.pla_descripcion ,luego.pla_situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_coc_planificar delete on "informix"
    .coc_planificar referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_planificar (pla_dep_llave,
    pla_codigo,pla_referencia,pla_descripcion,pla_situacion,desp_pla_dep_llave,
    desp_pla_codigo,desp_pla_referencia,desp_pla_descripcion,desp_pla_situacion,
    accion,usuario,hora)  values (antes.pla_dep_llave ,antes.pla_codigo 
    ,antes.pla_referencia ,antes.pla_descripcion ,antes.pla_situacion 
    ,NULL ,NULL ,'' ,'' ::lvarchar(1500) ,NULL ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_temp_fin_personal insert on "informix"
    .temp_fin_personal referencing new as luego
    for each row
        (
        insert into "informix".aud_temp_fin_personal (fper_catalogo,
    fper_grado,fper_arma,fper_nom1,fper_nom2,fper_ape1,fper_ape2,fper_ape3,
    fper_ced_ord,fper_ced_reg,fper_fec_ext_ced,fper_ext_ced_lugar,fper_est_civil,
    fper_direccion,fper_zona,fper_dir_lugar,fper_telefono,fper_sexo,fper_fec_nac,
    fper_nac_lugar,fper_sangre,fper_profesion,fper_banco,fper_cuenta,
    fper_tip_cuenta,fper_situacion,fper_dpi,desp_fper_catalogo,desp_fper_grado,
    desp_fper_arma,desp_fper_nom1,desp_fper_nom2,desp_fper_ape1,desp_fper_ape2,
    desp_fper_ape3,desp_fper_ced_ord,desp_fper_ced_reg,desp_fper_fec_ext_ced,
    desp_fper_ext_ced_lugar,desp_fper_est_civil,desp_fper_direccion,desp_fper_zona,
    desp_fper_dir_lugar,desp_fper_telefono,desp_fper_sexo,desp_fper_fec_nac,
    desp_fper_nac_lugar,desp_fper_sangre,desp_fper_profesion,desp_fper_banco,
    desp_fper_cuenta,desp_fper_tip_cuenta,desp_fper_situacion,desp_fper_dpi,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.fper_catalogo 
    ,luego.fper_grado ,luego.fper_arma ,luego.fper_nom1 ,luego.fper_nom2 
    ,luego.fper_ape1 ,luego.fper_ape2 ,luego.fper_ape3 ,luego.fper_ced_ord 
    ,luego.fper_ced_reg ,luego.fper_fec_ext_ced ,luego.fper_ext_ced_lugar 
    ,luego.fper_est_civil ,luego.fper_direccion ,luego.fper_zona ,luego.fper_dir_lugar 
    ,luego.fper_telefono ,luego.fper_sexo ,luego.fper_fec_nac ,luego.fper_nac_lugar 
    ,luego.fper_sangre ,luego.fper_profesion ,luego.fper_banco ,luego.fper_cuenta 
    ,luego.fper_tip_cuenta ,luego.fper_situacion ,luego.fper_dpi ,'I' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_temp_fin_personal delete on "informix"
    .temp_fin_personal referencing old as antes
    for each row
        (
        insert into "informix".aud_temp_fin_personal (fper_catalogo,
    fper_grado,fper_arma,fper_nom1,fper_nom2,fper_ape1,fper_ape2,fper_ape3,
    fper_ced_ord,fper_ced_reg,fper_fec_ext_ced,fper_ext_ced_lugar,fper_est_civil,
    fper_direccion,fper_zona,fper_dir_lugar,fper_telefono,fper_sexo,fper_fec_nac,
    fper_nac_lugar,fper_sangre,fper_profesion,fper_banco,fper_cuenta,
    fper_tip_cuenta,fper_situacion,fper_dpi,desp_fper_catalogo,desp_fper_grado,
    desp_fper_arma,desp_fper_nom1,desp_fper_nom2,desp_fper_ape1,desp_fper_ape2,
    desp_fper_ape3,desp_fper_ced_ord,desp_fper_ced_reg,desp_fper_fec_ext_ced,
    desp_fper_ext_ced_lugar,desp_fper_est_civil,desp_fper_direccion,desp_fper_zona,
    desp_fper_dir_lugar,desp_fper_telefono,desp_fper_sexo,desp_fper_fec_nac,
    desp_fper_nac_lugar,desp_fper_sangre,desp_fper_profesion,desp_fper_banco,
    desp_fper_cuenta,desp_fper_tip_cuenta,desp_fper_situacion,desp_fper_dpi,
    accion,usuario,hora)  values (antes.fper_catalogo ,antes.fper_grado 
    ,antes.fper_arma ,antes.fper_nom1 ,antes.fper_nom2 ,antes.fper_ape1 
    ,antes.fper_ape2 ,antes.fper_ape3 ,antes.fper_ced_ord ,antes.fper_ced_reg 
    ,antes.fper_fec_ext_ced ,antes.fper_ext_ced_lugar ,antes.fper_est_civil 
    ,antes.fper_direccion ,antes.fper_zona ,antes.fper_dir_lugar ,antes.fper_telefono 
    ,antes.fper_sexo ,antes.fper_fec_nac ,antes.fper_nac_lugar ,antes.fper_sangre 
    ,antes.fper_profesion ,antes.fper_banco ,antes.fper_cuenta ,antes.fper_tip_cuenta 
    ,antes.fper_situacion ,antes.fper_dpi ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_temp_fin_personal update on "informix"
    .temp_fin_personal referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_temp_fin_personal (fper_catalogo,
    fper_grado,fper_arma,fper_nom1,fper_nom2,fper_ape1,fper_ape2,fper_ape3,
    fper_ced_ord,fper_ced_reg,fper_fec_ext_ced,fper_ext_ced_lugar,fper_est_civil,
    fper_direccion,fper_zona,fper_dir_lugar,fper_telefono,fper_sexo,fper_fec_nac,
    fper_nac_lugar,fper_sangre,fper_profesion,fper_banco,fper_cuenta,
    fper_tip_cuenta,fper_situacion,fper_dpi,desp_fper_catalogo,desp_fper_grado,
    desp_fper_arma,desp_fper_nom1,desp_fper_nom2,desp_fper_ape1,desp_fper_ape2,
    desp_fper_ape3,desp_fper_ced_ord,desp_fper_ced_reg,desp_fper_fec_ext_ced,
    desp_fper_ext_ced_lugar,desp_fper_est_civil,desp_fper_direccion,desp_fper_zona,
    desp_fper_dir_lugar,desp_fper_telefono,desp_fper_sexo,desp_fper_fec_nac,
    desp_fper_nac_lugar,desp_fper_sangre,desp_fper_profesion,desp_fper_banco,
    desp_fper_cuenta,desp_fper_tip_cuenta,desp_fper_situacion,desp_fper_dpi,
    accion,usuario,hora)  values (antes.fper_catalogo ,antes.fper_grado 
    ,antes.fper_arma ,antes.fper_nom1 ,antes.fper_nom2 ,antes.fper_ape1 
    ,antes.fper_ape2 ,antes.fper_ape3 ,antes.fper_ced_ord ,antes.fper_ced_reg 
    ,antes.fper_fec_ext_ced ,antes.fper_ext_ced_lugar ,antes.fper_est_civil 
    ,antes.fper_direccion ,antes.fper_zona ,antes.fper_dir_lugar ,antes.fper_telefono 
    ,antes.fper_sexo ,antes.fper_fec_nac ,antes.fper_nac_lugar ,antes.fper_sangre 
    ,antes.fper_profesion ,antes.fper_banco ,antes.fper_cuenta ,antes.fper_tip_cuenta 
    ,antes.fper_situacion ,antes.fper_dpi ,luego.fper_catalogo ,luego.fper_grado 
    ,luego.fper_arma ,luego.fper_nom1 ,luego.fper_nom2 ,luego.fper_ape1 
    ,luego.fper_ape2 ,luego.fper_ape3 ,luego.fper_ced_ord ,luego.fper_ced_reg 
    ,luego.fper_fec_ext_ced ,luego.fper_ext_ced_lugar ,luego.fper_est_civil 
    ,luego.fper_direccion ,luego.fper_zona ,luego.fper_dir_lugar ,luego.fper_telefono 
    ,luego.fper_sexo ,luego.fper_fec_nac ,luego.fper_nac_lugar ,luego.fper_sangre 
    ,luego.fper_profesion ,luego.fper_banco ,luego.fper_cuenta ,luego.fper_tip_cuenta 
    ,luego.fper_situacion ,luego.fper_dpi ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_cor_tipo_docum update on "informix"
    .cor_tipo_docum referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cor_tipo_docum (tipo_codigo,
    tipo_desc,desp_tipo_codigo,desp_tipo_desc,accion,usuario,hora)  values 
    (antes.tipo_codigo ,antes.tipo_desc ,luego.tipo_codigo ,luego.tipo_desc 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cor_tipo_docum insert on "informix"
    .cor_tipo_docum referencing new as luego
    for each row
        (
        insert into "informix".aud_cor_tipo_docum (tipo_codigo,
    tipo_desc,desp_tipo_codigo,desp_tipo_desc,accion,usuario,hora)  values 
    (NULL ,' ' ,luego.tipo_codigo ,luego.tipo_desc ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_cor_tipo_docum delete on "informix"
    .cor_tipo_docum referencing old as antes
    for each row
        (
        insert into "informix".aud_cor_tipo_docum (tipo_codigo,
    tipo_desc,desp_tipo_codigo,desp_tipo_desc,accion,usuario,hora)  values 
    (antes.tipo_codigo ,antes.tipo_desc ,NULL ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_cor_proposito update on "informix"
    .cor_proposito referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cor_proposito (prop_codigo,
    prop_desc,desp_prop_codigo,desp_prop_desc,accion,usuario,hora)  values 
    (antes.prop_codigo ,antes.prop_desc ,luego.prop_codigo ,luego.prop_desc 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cor_proposito insert on "informix"
    .cor_proposito referencing new as luego
    for each row
        (
        insert into "informix".aud_cor_proposito (prop_codigo,
    prop_desc,desp_prop_codigo,desp_prop_desc,accion,usuario,hora)  values 
    (NULL ,' ' ,luego.prop_codigo ,luego.prop_desc ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_cor_proposito delete on "informix"
    .cor_proposito referencing old as antes
    for each row
        (
        insert into "informix".aud_cor_proposito (prop_codigo,
    prop_desc,desp_prop_codigo,desp_prop_desc,accion,usuario,hora)  values 
    (antes.prop_codigo ,antes.prop_desc ,NULL ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_cor_ubicacion_docum update on "informix"
    .cor_ubicacion_docum referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_cor_ubicacion_docum (ubi_codigo,
    ubi_documento,ubi_remite_ofi,ubi_remite_usu,ubi_remite_fec,ubi_remite_folios,
    ubi_tipo_doc_remite,ubi_doc_remite,ubi_observaciones,ubi_int_ext,
    ubi_recibe_of,ubi_recibe_usu,ubi_recibe_fec,ubi_recibe_status,desp_ubi_codigo,
    desp_ubi_documento,desp_ubi_remite_ofi,desp_ubi_remite_usu,desp_ubi_remite_fec,
    desp_ubi_remite_folios,desp_ubi_tipo_doc_remite,desp_ubi_doc_remite,
    desp_ubi_observaciones,desp_ubi_int_ext,desp_ubi_recibe_of,desp_ubi_recibe_usu,
    desp_ubi_recibe_fec,desp_ubi_recibe_status,accion,usuario,hora)  
    values (antes.ubi_codigo ,antes.ubi_documento ,antes.ubi_remite_ofi 
    ,antes.ubi_remite_usu ,antes.ubi_remite_fec ,antes.ubi_remite_folios 
    ,antes.ubi_tipo_doc_remite ,antes.ubi_doc_remite ,antes.ubi_observaciones 
    ,antes.ubi_int_ext ,antes.ubi_recibe_of ,antes.ubi_recibe_usu ,antes.ubi_recibe_fec 
    ,antes.ubi_recibe_status ,luego.ubi_codigo ,luego.ubi_documento ,
    luego.ubi_remite_ofi ,luego.ubi_remite_usu ,luego.ubi_remite_fec 
    ,luego.ubi_remite_folios ,luego.ubi_tipo_doc_remite ,luego.ubi_doc_remite 
    ,luego.ubi_observaciones ,luego.ubi_int_ext ,luego.ubi_recibe_of 
    ,luego.ubi_recibe_usu ,luego.ubi_recibe_fec ,luego.ubi_recibe_status 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cor_ubicacion_docum insert on "informix"
    .cor_ubicacion_docum referencing new as luego
    for each row
        (
        insert into "informix".aud_cor_ubicacion_docum (ubi_codigo,
    ubi_documento,ubi_remite_ofi,ubi_remite_usu,ubi_remite_fec,ubi_remite_folios,
    ubi_tipo_doc_remite,ubi_doc_remite,ubi_observaciones,ubi_int_ext,
    ubi_recibe_of,ubi_recibe_usu,ubi_recibe_fec,ubi_recibe_status,desp_ubi_codigo,
    desp_ubi_documento,desp_ubi_remite_ofi,desp_ubi_remite_usu,desp_ubi_remite_fec,
    desp_ubi_remite_folios,desp_ubi_tipo_doc_remite,desp_ubi_doc_remite,
    desp_ubi_observaciones,desp_ubi_int_ext,desp_ubi_recibe_of,desp_ubi_recibe_usu,
    desp_ubi_recibe_fec,desp_ubi_recibe_status,accion,usuario,hora)  
    values (NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,'' ,'' ,'' ,NULL ,NULL 
    ,'' ,'' ,luego.ubi_codigo ,luego.ubi_documento ,luego.ubi_remite_ofi 
    ,luego.ubi_remite_usu ,luego.ubi_remite_fec ,luego.ubi_remite_folios 
    ,luego.ubi_tipo_doc_remite ,luego.ubi_doc_remite ,luego.ubi_observaciones 
    ,luego.ubi_int_ext ,luego.ubi_recibe_of ,luego.ubi_recibe_usu ,luego.ubi_recibe_fec 
    ,luego.ubi_recibe_status ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_cor_ubicacion_docum delete on "informix"
    .cor_ubicacion_docum referencing old as antes
    for each row
        (
        insert into "informix".aud_cor_ubicacion_docum (ubi_codigo,
    ubi_documento,ubi_remite_ofi,ubi_remite_usu,ubi_remite_fec,ubi_remite_folios,
    ubi_tipo_doc_remite,ubi_doc_remite,ubi_observaciones,ubi_int_ext,
    ubi_recibe_of,ubi_recibe_usu,ubi_recibe_fec,ubi_recibe_status,desp_ubi_codigo,
    desp_ubi_documento,desp_ubi_remite_ofi,desp_ubi_remite_usu,desp_ubi_remite_fec,
    desp_ubi_remite_folios,desp_ubi_tipo_doc_remite,desp_ubi_doc_remite,
    desp_ubi_observaciones,desp_ubi_int_ext,desp_ubi_recibe_of,desp_ubi_recibe_usu,
    desp_ubi_recibe_fec,desp_ubi_recibe_status,accion,usuario,hora)  
    values (antes.ubi_codigo ,antes.ubi_documento ,antes.ubi_remite_ofi 
    ,antes.ubi_remite_usu ,antes.ubi_remite_fec ,antes.ubi_remite_folios 
    ,antes.ubi_tipo_doc_remite ,antes.ubi_doc_remite ,antes.ubi_observaciones 
    ,antes.ubi_int_ext ,antes.ubi_recibe_of ,antes.ubi_recibe_usu ,antes.ubi_recibe_fec 
    ,antes.ubi_recibe_status ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,
    '' ,'' ,'' ,NULL ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_cor_documento update on "informix"
    .cor_documento referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cor_documento (doc_codigo,
    doc_oficina,doc_tipo,doc_nombre,doc_prioridad,doc_asunto,doc_fec_realizado,
    doc_fec_ingresado,doc_num_hojas,doc_destino,doc_procedencia,doc_status,
    doc_interesado,doc_clasificacion,doc_proposito,doc_recibe,doc_interno,
    doc_solucion,doc_referencia,doc_of_actual,doc_ult_tras,doc_fec_limite,
    desp_doc_codigo,desp_doc_oficina,desp_doc_tipo,desp_doc_nombre,desp_doc_prioridad,
    desp_doc_asunto,desp_doc_fec_realizado,desp_doc_fec_ingresado,desp_doc_num_hojas,
    desp_doc_destino,desp_doc_procedencia,desp_doc_status,desp_doc_interesado,
    desp_doc_clasificacion,desp_doc_proposito,desp_doc_recibe,desp_doc_interno,
    desp_doc_solucion,desp_doc_referencia,desp_doc_of_actual,desp_doc_ult_tras,
    desp_doc_fec_limite,accion,usuario,hora)  values (antes.doc_codigo 
    ,antes.doc_oficina ,antes.doc_tipo ,antes.doc_nombre ,antes.doc_prioridad 
    ,antes.doc_asunto ,antes.doc_fec_realizado ,antes.doc_fec_ingresado 
    ,antes.doc_num_hojas ,antes.doc_destino ,antes.doc_procedencia ,antes.doc_status 
    ,antes.doc_interesado ,antes.doc_clasificacion ,antes.doc_proposito 
    ,antes.doc_recibe ,antes.doc_interno ,antes.doc_solucion ,antes.doc_referencia 
    ,antes.doc_of_actual ,antes.doc_ult_tras ,antes.doc_fec_limite ,luego.doc_codigo 
    ,luego.doc_oficina ,luego.doc_tipo ,luego.doc_nombre ,luego.doc_prioridad 
    ,luego.doc_asunto ,luego.doc_fec_realizado ,luego.doc_fec_ingresado 
    ,luego.doc_num_hojas ,luego.doc_destino ,luego.doc_procedencia ,luego.doc_status 
    ,luego.doc_interesado ,luego.doc_clasificacion ,luego.doc_proposito 
    ,luego.doc_recibe ,luego.doc_interno ,luego.doc_solucion ,luego.doc_referencia 
    ,luego.doc_of_actual ,luego.doc_ult_tras ,luego.doc_fec_limite ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cor_documento insert on "informix"
    .cor_documento referencing new as luego
    for each row
        (
        insert into "informix".aud_cor_documento (doc_codigo,
    doc_oficina,doc_tipo,doc_nombre,doc_prioridad,doc_asunto,doc_fec_realizado,
    doc_fec_ingresado,doc_num_hojas,doc_destino,doc_procedencia,doc_status,
    doc_interesado,doc_clasificacion,doc_proposito,doc_recibe,doc_interno,
    doc_solucion,doc_referencia,doc_of_actual,doc_ult_tras,doc_fec_limite,
    desp_doc_codigo,desp_doc_oficina,desp_doc_tipo,desp_doc_nombre,desp_doc_prioridad,
    desp_doc_asunto,desp_doc_fec_realizado,desp_doc_fec_ingresado,desp_doc_num_hojas,
    desp_doc_destino,desp_doc_procedencia,desp_doc_status,desp_doc_interesado,
    desp_doc_clasificacion,desp_doc_proposito,desp_doc_recibe,desp_doc_interno,
    desp_doc_solucion,desp_doc_referencia,desp_doc_of_actual,desp_doc_ult_tras,
    desp_doc_fec_limite,accion,usuario,hora)  values (NULL ,NULL ,NULL 
    ,'' ,NULL ,'' ,'' ,'' ,NULL ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,NULL ,'' ,''
     ,'' ,NULL ,'' ,'' ,luego.doc_codigo ,luego.doc_oficina ,luego.doc_tipo 
    ,luego.doc_nombre ,luego.doc_prioridad ,luego.doc_asunto ,luego.doc_fec_realizado 
    ,luego.doc_fec_ingresado ,luego.doc_num_hojas ,luego.doc_destino 
    ,luego.doc_procedencia ,luego.doc_status ,luego.doc_interesado ,luego.doc_clasificacion 
    ,luego.doc_proposito ,luego.doc_recibe ,luego.doc_interno ,luego.doc_solucion 
    ,luego.doc_referencia ,luego.doc_of_actual ,luego.doc_ult_tras ,luego.doc_fec_limite 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_cor_documento delete on "informix"
    .cor_documento referencing old as antes
    for each row
        (
        insert into "informix".aud_cor_documento (doc_codigo,
    doc_oficina,doc_tipo,doc_nombre,doc_prioridad,doc_asunto,doc_fec_realizado,
    doc_fec_ingresado,doc_num_hojas,doc_destino,doc_procedencia,doc_status,
    doc_interesado,doc_clasificacion,doc_proposito,doc_recibe,doc_interno,
    doc_solucion,doc_referencia,doc_of_actual,doc_ult_tras,doc_fec_limite,
    desp_doc_codigo,desp_doc_oficina,desp_doc_tipo,desp_doc_nombre,desp_doc_prioridad,
    desp_doc_asunto,desp_doc_fec_realizado,desp_doc_fec_ingresado,desp_doc_num_hojas,
    desp_doc_destino,desp_doc_procedencia,desp_doc_status,desp_doc_interesado,
    desp_doc_clasificacion,desp_doc_proposito,desp_doc_recibe,desp_doc_interno,
    desp_doc_solucion,desp_doc_referencia,desp_doc_of_actual,desp_doc_ult_tras,
    desp_doc_fec_limite,accion,usuario,hora)  values (antes.doc_codigo 
    ,antes.doc_oficina ,antes.doc_tipo ,antes.doc_nombre ,antes.doc_prioridad 
    ,antes.doc_asunto ,antes.doc_fec_realizado ,antes.doc_fec_ingresado 
    ,antes.doc_num_hojas ,antes.doc_destino ,antes.doc_procedencia ,antes.doc_status 
    ,antes.doc_interesado ,antes.doc_clasificacion ,antes.doc_proposito 
    ,antes.doc_recibe ,antes.doc_interno ,antes.doc_solucion ,antes.doc_referencia 
    ,antes.doc_of_actual ,antes.doc_ult_tras ,antes.doc_fec_limite ,NULL 
    ,NULL ,NULL ,'' ,NULL ,'' ,'' ,'' ,NULL ,NULL ,NULL ,'' ,'' ,NULL ,NULL 
    ,NULL ,'' ,'' ,'' ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_cor_empresas update on "informix"
    .cor_empresas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cor_empresas (emp_codigo,emp_desc_lg,
    emp_desc_md,emp_desc_ct,desp_emp_codigo,desp_emp_desc_lg,desp_emp_desc_md,
    desp_emp_desc_ct,accion,usuario,hora)  values (antes.emp_codigo ,
    antes.emp_desc_lg ,antes.emp_desc_md ,antes.emp_desc_ct ,luego.emp_codigo 
    ,luego.emp_desc_lg ,luego.emp_desc_md ,luego.emp_desc_ct ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cor_empresas insert on "informix"
    .cor_empresas referencing new as luego
    for each row
        (
        insert into "informix".aud_cor_empresas (emp_codigo,emp_desc_lg,
    emp_desc_md,emp_desc_ct,desp_emp_codigo,desp_emp_desc_lg,desp_emp_desc_md,
    desp_emp_desc_ct,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.emp_codigo 
    ,luego.emp_desc_lg ,luego.emp_desc_md ,luego.emp_desc_ct ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_cor_empresas delete on "informix"
    .cor_empresas referencing old as antes
    for each row
        (
        insert into "informix".aud_cor_empresas (emp_codigo,emp_desc_lg,
    emp_desc_md,emp_desc_ct,desp_emp_codigo,desp_emp_desc_lg,desp_emp_desc_md,
    desp_emp_desc_ct,accion,usuario,hora)  values (antes.emp_codigo ,
    antes.emp_desc_lg ,antes.emp_desc_md ,antes.emp_desc_ct ,NULL ,'' 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_cor_oficinas update on "informix"
    .cor_oficinas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cor_oficinas (of_codigo,of_oficina,
    of_dependencia,of_descripcion,of_mensajes,desp_of_codigo,desp_of_oficina,
    desp_of_dependencia,desp_of_descripcion,desp_of_mensajes,accion,usuario,
    hora)  values (antes.of_codigo ,antes.of_oficina ,antes.of_dependencia 
    ,antes.of_descripcion ,antes.of_mensajes ,luego.of_codigo ,luego.of_oficina 
    ,luego.of_dependencia ,luego.of_descripcion ,luego.of_mensajes ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cor_oficinas insert on "informix"
    .cor_oficinas referencing new as luego
    for each row
        (
        insert into "informix".aud_cor_oficinas (of_codigo,of_oficina,
    of_dependencia,of_descripcion,of_mensajes,desp_of_codigo,desp_of_oficina,
    desp_of_dependencia,desp_of_descripcion,desp_of_mensajes,accion,usuario,
    hora)  values (NULL ,'' ,NULL ,'' ,NULL ,luego.of_codigo ,luego.of_oficina 
    ,luego.of_dependencia ,luego.of_descripcion ,luego.of_mensajes ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_cor_oficinas delete on "informix"
    .cor_oficinas referencing old as antes
    for each row
        (
        insert into "informix".aud_cor_oficinas (of_codigo,of_oficina,
    of_dependencia,of_descripcion,of_mensajes,desp_of_codigo,desp_of_oficina,
    desp_of_dependencia,desp_of_descripcion,desp_of_mensajes,accion,usuario,
    hora)  values (antes.of_codigo ,antes.of_oficina ,antes.of_dependencia 
    ,antes.of_descripcion ,antes.of_mensajes ,NULL ,'' ,NULL ,'' ,NULL 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lmun_ent_sal insert on "informix"
    .lmun_ent_sal referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_ent_sal (es_codigo,es_con_codigo,
    es_con_dep_llave,es_lote_codigo,es_uso_codigo,es_tipo_codigo,es_cal_codigo,
    es_eslabonada,es_carga,es_cantidad,es_status,es_tipo,es_situacion,
    desp_es_codigo,desp_es_con_codigo,desp_es_con_dep_llave,desp_es_lote_codigo,
    desp_es_uso_codigo,desp_es_tipo_codigo,desp_es_cal_codigo,desp_es_eslabonada,
    desp_es_carga,desp_es_cantidad,desp_es_status,desp_es_tipo,desp_es_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,luego.es_codigo ,luego.es_con_codigo ,luego.es_con_dep_llave 
    ,luego.es_lote_codigo ,luego.es_uso_codigo ,luego.es_tipo_codigo 
    ,luego.es_cal_codigo ,luego.es_eslabonada ,luego.es_carga ,luego.es_cantidad 
    ,luego.es_status ,luego.es_tipo ,luego.es_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_lmun_ent_sal update on "informix"
    .lmun_ent_sal referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_ent_sal (es_codigo,es_con_codigo,
    es_con_dep_llave,es_lote_codigo,es_uso_codigo,es_tipo_codigo,es_cal_codigo,
    es_eslabonada,es_carga,es_cantidad,es_status,es_tipo,es_situacion,
    desp_es_codigo,desp_es_con_codigo,desp_es_con_dep_llave,desp_es_lote_codigo,
    desp_es_uso_codigo,desp_es_tipo_codigo,desp_es_cal_codigo,desp_es_eslabonada,
    desp_es_carga,desp_es_cantidad,desp_es_status,desp_es_tipo,desp_es_situacion,
    accion,usuario,hora)  values (antes.es_codigo ,antes.es_con_codigo 
    ,antes.es_con_dep_llave ,antes.es_lote_codigo ,antes.es_uso_codigo 
    ,antes.es_tipo_codigo ,antes.es_cal_codigo ,antes.es_eslabonada ,
    antes.es_carga ,antes.es_cantidad ,antes.es_status ,antes.es_tipo 
    ,antes.es_situacion ,luego.es_codigo ,luego.es_con_codigo ,luego.es_con_dep_llave 
    ,luego.es_lote_codigo ,luego.es_uso_codigo ,luego.es_tipo_codigo 
    ,luego.es_cal_codigo ,luego.es_eslabonada ,luego.es_carga ,luego.es_cantidad 
    ,luego.es_status ,luego.es_tipo ,luego.es_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_mag_egresos update on "informix"
    .mag_egresos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mag_egresos (egr_id,egr_fecha,
    egr_usuario,egr_dependencia,egr_departamento,egr_municipio,egr_observaciones,
    egr_referencia,egr_personal,egr_situacion,desp_egr_id,desp_egr_fecha,
    desp_egr_usuario,desp_egr_dependencia,desp_egr_departamento,desp_egr_municipio,
    desp_egr_observaciones,desp_egr_referencia,desp_egr_personal,desp_egr_situacion,
    accion,usuario,hora)  values (antes.egr_id ,antes.egr_fecha ,antes.egr_usuario 
    ,antes.egr_dependencia ,antes.egr_departamento ,antes.egr_municipio 
    ,antes.egr_observaciones ,antes.egr_referencia ,antes.egr_personal 
    ,antes.egr_situacion ,luego.egr_id ,luego.egr_fecha ,luego.egr_usuario 
    ,luego.egr_dependencia ,luego.egr_departamento ,luego.egr_municipio 
    ,luego.egr_observaciones ,luego.egr_referencia ,luego.egr_personal 
    ,luego.egr_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_mag_egresos insert on "informix"
    .mag_egresos referencing new as luego
    for each row
        (
        insert into "informix".aud_mag_egresos (egr_id,egr_fecha,
    egr_usuario,egr_dependencia,egr_departamento,egr_municipio,egr_observaciones,
    egr_referencia,egr_personal,egr_situacion,desp_egr_id,desp_egr_fecha,
    desp_egr_usuario,desp_egr_dependencia,desp_egr_departamento,desp_egr_municipio,
    desp_egr_observaciones,desp_egr_referencia,desp_egr_personal,desp_egr_situacion,
    accion,usuario,hora)  values (NULL ,'' ,NULL ,NULL ,'' ,'' ,'' ,'' ,NULL 
    ,NULL ,luego.egr_id ,luego.egr_fecha ,luego.egr_usuario ,luego.egr_dependencia 
    ,luego.egr_departamento ,luego.egr_municipio ,luego.egr_observaciones 
    ,luego.egr_referencia ,luego.egr_personal ,luego.egr_situacion ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_mag_egresos delete on "informix"
    .mag_egresos referencing old as antes
    for each row
        (
        insert into "informix".aud_mag_egresos (egr_id,egr_fecha,
    egr_usuario,egr_dependencia,egr_departamento,egr_municipio,egr_observaciones,
    egr_referencia,egr_personal,egr_situacion,desp_egr_id,desp_egr_fecha,
    desp_egr_usuario,desp_egr_dependencia,desp_egr_departamento,desp_egr_municipio,
    desp_egr_observaciones,desp_egr_referencia,desp_egr_personal,desp_egr_situacion,
    accion,usuario,hora)  values (antes.egr_id ,antes.egr_fecha ,antes.egr_usuario 
    ,antes.egr_dependencia ,antes.egr_departamento ,antes.egr_municipio 
    ,antes.egr_observaciones ,antes.egr_referencia ,antes.egr_personal 
    ,antes.egr_situacion ,NULL ,'' ,NULL ,NULL ,'' ,'' ,'' ,'' ,NULL ,NULL 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_mag_inventario update on "informix"
    .mag_inventario referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mag_inventario (inv_id,inv_dependencia,
    inv_departamento,inv_municipio,inv_insumo,inv_cantidad,desp_inv_id,
    desp_inv_dependencia,desp_inv_departamento,desp_inv_municipio,desp_inv_insumo,
    desp_inv_cantidad,accion,usuario,hora)  values (antes.inv_id ,antes.inv_dependencia 
    ,antes.inv_departamento ,antes.inv_municipio ,antes.inv_insumo ,antes.inv_cantidad 
    ,luego.inv_id ,luego.inv_dependencia ,luego.inv_departamento ,luego.inv_municipio 
    ,luego.inv_insumo ,luego.inv_cantidad ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_mag_inventario insert on "informix"
    .mag_inventario referencing new as luego
    for each row
        (
        insert into "informix".aud_mag_inventario (inv_id,inv_dependencia,
    inv_departamento,inv_municipio,inv_insumo,inv_cantidad,desp_inv_id,
    desp_inv_dependencia,desp_inv_departamento,desp_inv_municipio,desp_inv_insumo,
    desp_inv_cantidad,accion,usuario,hora)  values (NULL ,NULL ,'' ,'' 
    ,NULL ,NULL ,luego.inv_id ,luego.inv_dependencia ,luego.inv_departamento 
    ,luego.inv_municipio ,luego.inv_insumo ,luego.inv_cantidad ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_mag_inventario delete on "informix"
    .mag_inventario referencing old as antes
    for each row
        (
        insert into "informix".aud_mag_inventario (inv_id,inv_dependencia,
    inv_departamento,inv_municipio,inv_insumo,inv_cantidad,desp_inv_id,
    desp_inv_dependencia,desp_inv_departamento,desp_inv_municipio,desp_inv_insumo,
    desp_inv_cantidad,accion,usuario,hora)  values (antes.inv_id ,antes.inv_dependencia 
    ,antes.inv_departamento ,antes.inv_municipio ,antes.inv_insumo ,antes.inv_cantidad 
    ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_mag_insumos update on "informix"
    .mag_insumos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mag_insumos (ins_id,ins_descripcion,
    ins_medida,ins_situacion,desp_ins_id,desp_ins_descripcion,desp_ins_medida,
    desp_ins_situacion,accion,usuario,hora)  values (antes.ins_id ,antes.ins_descripcion 
    ,antes.ins_medida ,antes.ins_situacion ,luego.ins_id ,luego.ins_descripcion 
    ,luego.ins_medida ,luego.ins_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_mag_insumos insert on "informix"
    .mag_insumos referencing new as luego
    for each row
        (
        insert into "informix".aud_mag_insumos (ins_id,ins_descripcion,
    ins_medida,ins_situacion,desp_ins_id,desp_ins_descripcion,desp_ins_medida,
    desp_ins_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,NULL 
    ,luego.ins_id ,luego.ins_descripcion ,luego.ins_medida ,luego.ins_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_mag_insumos delete on "informix"
    .mag_insumos referencing old as antes
    for each row
        (
        insert into "informix".aud_mag_insumos (ins_id,ins_descripcion,
    ins_medida,ins_situacion,desp_ins_id,desp_ins_descripcion,desp_ins_medida,
    desp_ins_situacion,accion,usuario,hora)  values (antes.ins_id ,antes.ins_descripcion 
    ,antes.ins_medida ,antes.ins_situacion ,NULL ,'' ,'' ,NULL ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_mag_det_ingreso update on "informix"
    .mag_det_ingreso referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mag_det_ingreso (det_id,det_id_ingreso,
    det_insumo,det_cantidad,desp_det_id,desp_det_id_ingreso,desp_det_insumo,
    desp_det_cantidad,accion,usuario,hora)  values (antes.det_id ,antes.det_id_ingreso 
    ,antes.det_insumo ,antes.det_cantidad ,luego.det_id ,luego.det_id_ingreso 
    ,luego.det_insumo ,luego.det_cantidad ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_mag_det_ingreso insert on "informix"
    .mag_det_ingreso referencing new as luego
    for each row
        (
        insert into "informix".aud_mag_det_ingreso (det_id,det_id_ingreso,
    det_insumo,det_cantidad,desp_det_id,desp_det_id_ingreso,desp_det_insumo,
    desp_det_cantidad,accion,usuario,hora)  values (NULL ,NULL ,NULL 
    ,NULL ,luego.det_id ,luego.det_id_ingreso ,luego.det_insumo ,luego.det_cantidad 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_mag_det_ingreso delete on "informix"
    .mag_det_ingreso referencing old as antes
    for each row
        (
        insert into "informix".aud_mag_det_ingreso (det_id,det_id_ingreso,
    det_insumo,det_cantidad,desp_det_id,desp_det_id_ingreso,desp_det_insumo,
    desp_det_cantidad,accion,usuario,hora)  values (antes.det_id ,antes.det_id_ingreso 
    ,antes.det_insumo ,antes.det_cantidad ,NULL ,NULL ,NULL ,NULL ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_mag_det_egreso update on "informix"
    .mag_det_egreso referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mag_det_egreso (det_id_eg,
    det_id_egreso,det_insumo_eg,det_cantidad_eg,desp_det_id_eg,desp_det_id_egreso,
    desp_det_insumo_eg,desp_det_cantidad_eg,accion,usuario,hora)  values 
    (antes.det_id_eg ,antes.det_id_egreso ,antes.det_insumo_eg ,antes.det_cantidad_eg 
    ,luego.det_id_eg ,luego.det_id_egreso ,luego.det_insumo_eg ,luego.det_cantidad_eg 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_mag_det_egreso insert on "informix"
    .mag_det_egreso referencing new as luego
    for each row
        (
        insert into "informix".aud_mag_det_egreso (det_id_eg,
    det_id_egreso,det_insumo_eg,det_cantidad_eg,desp_det_id_eg,desp_det_id_egreso,
    desp_det_insumo_eg,desp_det_cantidad_eg,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,NULL ,luego.det_id_eg ,luego.det_id_egreso ,luego.det_insumo_eg 
    ,luego.det_cantidad_eg ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_mag_det_egreso delete on "informix"
    .mag_det_egreso referencing old as antes
    for each row
        (
        insert into "informix".aud_mag_det_egreso (det_id_eg,
    det_id_egreso,det_insumo_eg,det_cantidad_eg,desp_det_id_eg,desp_det_id_egreso,
    desp_det_insumo_eg,desp_det_cantidad_eg,accion,usuario,hora)  values 
    (antes.det_id_eg ,antes.det_id_egreso ,antes.det_insumo_eg ,antes.det_cantidad_eg 
    ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_mag_ingresos update on "informix"
    .mag_ingresos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mag_ingresos (ing_id,ing_fecha,
    ing_usuario,ing_dependencia,ing_departamento,ing_municipio,ing_observaciones,
    ing_referencia,ing_personal,ing_situacion,desp_ing_id,desp_ing_fecha,
    desp_ing_usuario,desp_ing_dependencia,desp_ing_departamento,desp_ing_municipio,
    desp_ing_observaciones,desp_ing_referencia,desp_ing_personal,desp_ing_situacion,
    accion,usuario,hora)  values (antes.ing_id ,antes.ing_fecha ,antes.ing_usuario 
    ,antes.ing_dependencia ,antes.ing_departamento ,antes.ing_municipio 
    ,antes.ing_observaciones ,antes.ing_referencia ,antes.ing_personal 
    ,antes.ing_situacion ,luego.ing_id ,luego.ing_fecha ,luego.ing_usuario 
    ,luego.ing_dependencia ,luego.ing_departamento ,luego.ing_municipio 
    ,luego.ing_observaciones ,luego.ing_referencia ,luego.ing_personal 
    ,luego.ing_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_mag_ingresos insert on "informix"
    .mag_ingresos referencing new as luego
    for each row
        (
        insert into "informix".aud_mag_ingresos (ing_id,ing_fecha,
    ing_usuario,ing_dependencia,ing_departamento,ing_municipio,ing_observaciones,
    ing_referencia,ing_personal,ing_situacion,desp_ing_id,desp_ing_fecha,
    desp_ing_usuario,desp_ing_dependencia,desp_ing_departamento,desp_ing_municipio,
    desp_ing_observaciones,desp_ing_referencia,desp_ing_personal,desp_ing_situacion,
    accion,usuario,hora)  values (NULL ,'' ,NULL ,NULL ,'' ,'' ,'' ,'' ,NULL 
    ,NULL ,luego.ing_id ,luego.ing_fecha ,luego.ing_usuario ,luego.ing_dependencia 
    ,luego.ing_departamento ,luego.ing_municipio ,luego.ing_observaciones 
    ,luego.ing_referencia ,luego.ing_personal ,luego.ing_situacion ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_mag_ingresos delete on "informix"
    .mag_ingresos referencing old as antes
    for each row
        (
        insert into "informix".aud_mag_ingresos (ing_id,ing_fecha,
    ing_usuario,ing_dependencia,ing_departamento,ing_municipio,ing_observaciones,
    ing_referencia,ing_personal,ing_situacion,desp_ing_id,desp_ing_fecha,
    desp_ing_usuario,desp_ing_dependencia,desp_ing_departamento,desp_ing_municipio,
    desp_ing_observaciones,desp_ing_referencia,desp_ing_personal,desp_ing_situacion,
    accion,usuario,hora)  values (antes.ing_id ,antes.ing_fecha ,antes.ing_usuario 
    ,antes.ing_dependencia ,antes.ing_departamento ,antes.ing_municipio 
    ,antes.ing_observaciones ,antes.ing_referencia ,antes.ing_personal 
    ,antes.ing_situacion ,NULL ,'' ,NULL ,NULL ,'' ,'' ,'' ,'' ,NULL ,NULL 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lmun_conocimiento insert on "informix"
    .lmun_conocimiento referencing new as luego
    for each row
        (
        insert into "informix".aud_lmun_conocimiento (con_codigo,
    con_dep_llave,con_numero_libro,con_folio_libro,con_conocimiento_libro,
    con_tipo_libro,con_grado_entrego,con_catalogo_entrego,con_dep_llave_entrego,
    con_org_plaza_entrego,con_grado_recibio,con_catalogo_recibio,con_dep_llave_recibio,
    con_org_plaza_recibio,con_grado_autorizo,con_catalogo_autorizo,con_dep_llave_autorizo,
    con_org_plaza_autorizo,con_mensaje,con_fecha_mensaje,con_fecha_conocimiento,
    con_situacion,desp_con_codigo,desp_con_dep_llave,desp_con_numero_libro,
    desp_con_folio_libro,desp_con_conocimiento_libro,desp_con_tipo_libro,
    desp_con_grado_entrego,desp_con_catalogo_entrego,desp_con_dep_llave_entrego,
    desp_con_org_plaza_entrego,desp_con_grado_recibio,desp_con_catalogo_recibio,
    desp_con_dep_llave_recibio,desp_con_org_plaza_recibio,desp_con_grado_autorizo,
    desp_con_catalogo_autorizo,desp_con_dep_llave_autorizo,desp_con_org_plaza_autorizo,
    desp_con_mensaje,desp_con_fecha_mensaje,desp_con_fecha_conocimiento,
    desp_con_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.con_codigo 
    ,luego.con_dep_llave ,luego.con_numero_libro ,luego.con_folio_libro 
    ,luego.con_conocimiento_libro ,luego.con_tipo_libro ,luego.con_grado_entrego 
    ,luego.con_catalogo_entrego ,luego.con_dep_llave_entrego ,luego.con_org_plaza_entrego 
    ,luego.con_grado_recibio ,luego.con_catalogo_recibio ,luego.con_dep_llave_recibio 
    ,luego.con_org_plaza_recibio ,luego.con_grado_autorizo ,luego.con_catalogo_autorizo 
    ,luego.con_dep_llave_autorizo ,luego.con_org_plaza_autorizo ,luego.con_mensaje 
    ,luego.con_fecha_mensaje ,luego.con_fecha_conocimiento ,luego.con_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lmun_conocimiento0 update on "informix"
    .lmun_conocimiento referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lmun_conocimiento (con_codigo,
    con_dep_llave,con_numero_libro,con_folio_libro,con_conocimiento_libro,
    con_tipo_libro,con_grado_entrego,con_catalogo_entrego,con_dep_llave_entrego,
    con_org_plaza_entrego,con_grado_recibio,con_catalogo_recibio,con_dep_llave_recibio,
    con_org_plaza_recibio,con_grado_autorizo,con_catalogo_autorizo,con_dep_llave_autorizo,
    con_org_plaza_autorizo,con_mensaje,con_fecha_mensaje,con_fecha_conocimiento,
    con_situacion,desp_con_codigo,desp_con_dep_llave,desp_con_numero_libro,
    desp_con_folio_libro,desp_con_conocimiento_libro,desp_con_tipo_libro,
    desp_con_grado_entrego,desp_con_catalogo_entrego,desp_con_dep_llave_entrego,
    desp_con_org_plaza_entrego,desp_con_grado_recibio,desp_con_catalogo_recibio,
    desp_con_dep_llave_recibio,desp_con_org_plaza_recibio,desp_con_grado_autorizo,
    desp_con_catalogo_autorizo,desp_con_dep_llave_autorizo,desp_con_org_plaza_autorizo,
    desp_con_mensaje,desp_con_fecha_mensaje,desp_con_fecha_conocimiento,
    desp_con_situacion,accion,usuario,hora)  values (antes.con_codigo 
    ,antes.con_dep_llave ,antes.con_numero_libro ,antes.con_folio_libro 
    ,antes.con_conocimiento_libro ,antes.con_tipo_libro ,antes.con_grado_entrego 
    ,antes.con_catalogo_entrego ,antes.con_dep_llave_entrego ,antes.con_org_plaza_entrego 
    ,antes.con_grado_recibio ,antes.con_catalogo_recibio ,antes.con_dep_llave_recibio 
    ,antes.con_org_plaza_recibio ,antes.con_grado_autorizo ,antes.con_catalogo_autorizo 
    ,antes.con_dep_llave_autorizo ,antes.con_org_plaza_autorizo ,antes.con_mensaje 
    ,antes.con_fecha_mensaje ,antes.con_fecha_conocimiento ,antes.con_situacion 
    ,luego.con_codigo ,luego.con_dep_llave ,luego.con_numero_libro ,luego.con_folio_libro 
    ,luego.con_conocimiento_libro ,luego.con_tipo_libro ,luego.con_grado_entrego 
    ,luego.con_catalogo_entrego ,luego.con_dep_llave_entrego ,luego.con_org_plaza_entrego 
    ,luego.con_grado_recibio ,luego.con_catalogo_recibio ,luego.con_dep_llave_recibio 
    ,luego.con_org_plaza_recibio ,luego.con_grado_autorizo ,luego.con_catalogo_autorizo 
    ,luego.con_dep_llave_autorizo ,luego.con_org_plaza_autorizo ,luego.con_mensaje 
    ,luego.con_fecha_mensaje ,luego.con_fecha_conocimiento ,luego.con_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_cor_corr_seg update on "informix"
    .cor_corr_seg referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cor_corr_seg (seg_usuario,
    seg_pass,seg_oficina,seg_plaza,seg_nivel,seg_seguridad,seg_habilita,
    seg_situacion,desp_seg_usuario,desp_seg_pass,desp_seg_oficina,desp_seg_plaza,
    desp_seg_nivel,desp_seg_seguridad,desp_seg_habilita,desp_seg_situacion,
    accion,usuario,hora)  values (antes.seg_usuario ,antes.seg_pass ,
    antes.seg_oficina ,antes.seg_plaza ,antes.seg_nivel ,antes.seg_seguridad 
    ,antes.seg_habilita ,antes.seg_situacion ,luego.seg_usuario ,luego.seg_pass 
    ,luego.seg_oficina ,luego.seg_plaza ,luego.seg_nivel ,luego.seg_seguridad 
    ,luego.seg_habilita ,luego.seg_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_cor_corr_seg insert on "informix"
    .cor_corr_seg referencing new as luego
    for each row
        (
        insert into "informix".aud_cor_corr_seg (seg_usuario,
    seg_pass,seg_oficina,seg_plaza,seg_nivel,seg_seguridad,seg_habilita,
    seg_situacion,desp_seg_usuario,desp_seg_pass,desp_seg_oficina,desp_seg_plaza,
    desp_seg_nivel,desp_seg_seguridad,desp_seg_habilita,desp_seg_situacion,
    accion,usuario,hora)  values (NULL ,' ' ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,luego.seg_usuario ,luego.seg_pass ,luego.seg_oficina ,luego.seg_plaza 
    ,luego.seg_nivel ,luego.seg_seguridad ,luego.seg_habilita ,luego.seg_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_cor_corr_seg delete on "informix"
    .cor_corr_seg referencing old as antes
    for each row
        (
        insert into "informix".aud_cor_corr_seg (seg_usuario,
    seg_pass,seg_oficina,seg_plaza,seg_nivel,seg_seguridad,seg_habilita,
    seg_situacion,desp_seg_usuario,desp_seg_pass,desp_seg_oficina,desp_seg_plaza,
    desp_seg_nivel,desp_seg_seguridad,desp_seg_habilita,desp_seg_situacion,
    accion,usuario,hora)  values (antes.seg_usuario ,antes.seg_pass ,
    antes.seg_oficina ,antes.seg_plaza ,antes.seg_nivel ,antes.seg_seguridad 
    ,antes.seg_habilita ,antes.seg_situacion ,NULL ,' ' ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_arco_escalafon update on "informix"
    .arco_escalafon referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_escalafon (esca_cat,esca_grado,
    esca_plaza,esca_plaza_nivel,esca_fec_asc,esca_fec_prox_asc,esca_nota,
    esca_ubica,esca_fec,desp_esca_cat,desp_esca_grado,desp_esca_plaza,
    desp_esca_plaza_nivel,desp_esca_fec_asc,desp_esca_fec_prox_asc,desp_esca_nota,
    desp_esca_ubica,desp_esca_fec,accion,usuario,hora)  values (antes.esca_cat 
    ,antes.esca_grado ,antes.esca_plaza ,antes.esca_plaza_nivel ,antes.esca_fec_asc 
    ,antes.esca_fec_prox_asc ,antes.esca_nota ,antes.esca_ubica ,antes.esca_fec 
    ,luego.esca_cat ,luego.esca_grado ,luego.esca_plaza ,luego.esca_plaza_nivel 
    ,luego.esca_fec_asc ,luego.esca_fec_prox_asc ,luego.esca_nota ,luego.esca_ubica 
    ,luego.esca_fec ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_arco_escalafon insert on "informix"
    .arco_escalafon referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_escalafon (esca_cat,esca_grado,
    esca_plaza,esca_plaza_nivel,esca_fec_asc,esca_fec_prox_asc,esca_nota,
    esca_ubica,esca_fec,desp_esca_cat,desp_esca_grado,desp_esca_plaza,
    desp_esca_plaza_nivel,desp_esca_fec_asc,desp_esca_fec_prox_asc,desp_esca_nota,
    desp_esca_ubica,desp_esca_fec,accion,usuario,hora)  values (NULL 
    ,NULL ,NULL ,NULL ,'' ,'' ,'' ,NULL ,'' ,luego.esca_cat ,luego.esca_grado 
    ,luego.esca_plaza ,luego.esca_plaza_nivel ,luego.esca_fec_asc ,luego.esca_fec_prox_asc 
    ,luego.esca_nota ,luego.esca_ubica ,luego.esca_fec ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_arco_escalafon delete on "informix"
    .arco_escalafon referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_escalafon (esca_cat,esca_grado,
    esca_plaza,esca_plaza_nivel,esca_fec_asc,esca_fec_prox_asc,esca_nota,
    esca_ubica,esca_fec,desp_esca_cat,desp_esca_grado,desp_esca_plaza,
    desp_esca_plaza_nivel,desp_esca_fec_asc,desp_esca_fec_prox_asc,desp_esca_nota,
    desp_esca_ubica,desp_esca_fec,accion,usuario,hora)  values (antes.esca_cat 
    ,antes.esca_grado ,antes.esca_plaza ,antes.esca_plaza_nivel ,antes.esca_fec_asc 
    ,antes.esca_fec_prox_asc ,antes.esca_nota ,antes.esca_ubica ,antes.esca_fec 
    ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,NULL ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_dot_uniformes insert on "informix"
    .dot_uniformes referencing new as luego
    for each row
        (
        insert into "informix".aud_dot_uniformes (uni_codigo,
    uni_fuerza,uni_descrip,uni_situacion,desp_uni_codigo,desp_uni_fuerza,
    desp_uni_descrip,desp_uni_situacion,accion,usuario,hora)  values 
    (NULL ,NULL ,'' ,NULL ,luego.uni_codigo ,luego.uni_fuerza ,luego.uni_descrip 
    ,luego.uni_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dot_uniformes delete on "informix"
    .dot_uniformes referencing old as antes
    for each row
        (
        insert into "informix".aud_dot_uniformes (uni_codigo,
    uni_fuerza,uni_descrip,uni_situacion,desp_uni_codigo,desp_uni_fuerza,
    desp_uni_descrip,desp_uni_situacion,accion,usuario,hora)  values 
    (antes.uni_codigo ,antes.uni_fuerza ,antes.uni_descrip ,antes.uni_situacion 
    ,NULL ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_dot_uniformes update on "informix"
    .dot_uniformes referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dot_uniformes (uni_codigo,
    uni_fuerza,uni_descrip,uni_situacion,desp_uni_codigo,desp_uni_fuerza,
    desp_uni_descrip,desp_uni_situacion,accion,usuario,hora)  values 
    (antes.uni_codigo ,antes.uni_fuerza ,antes.uni_descrip ,antes.uni_situacion 
    ,luego.uni_codigo ,luego.uni_fuerza ,luego.uni_descrip ,luego.uni_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_dot_solicitud insert on "informix"
    .dot_solicitud referencing new as luego
    for each row
        (
        insert into "informix".aud_dot_solicitud (sol_numero,
    sol_mensaje,sol_fecha,sol_com_catalogo,sol_log_cat,sol_observaciones,
    sol_situacion,sol_dotacion,sol_dependencia,sol_jerarquia,sol_usuario,
    sol_hoja,sol_cant_hojas,desp_sol_numero,desp_sol_mensaje,desp_sol_fecha,
    desp_sol_com_catalogo,desp_sol_log_cat,desp_sol_observaciones,desp_sol_situacion,
    desp_sol_dotacion,desp_sol_dependencia,desp_sol_jerarquia,desp_sol_usuario,
    desp_sol_hoja,desp_sol_cant_hojas,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,NULL ,NULL ,'' ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,luego.sol_numero 
    ,luego.sol_mensaje ,luego.sol_fecha ,luego.sol_com_catalogo ,luego.sol_log_cat 
    ,luego.sol_observaciones ,luego.sol_situacion ,luego.sol_dotacion 
    ,luego.sol_dependencia ,luego.sol_jerarquia ,luego.sol_usuario ,luego.sol_hoja 
    ,luego.sol_cant_hojas ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dot_solicitud delete on "informix"
    .dot_solicitud referencing old as antes
    for each row
        (
        insert into "informix".aud_dot_solicitud (sol_numero,
    sol_mensaje,sol_fecha,sol_com_catalogo,sol_log_cat,sol_observaciones,
    sol_situacion,sol_dotacion,sol_dependencia,sol_jerarquia,sol_usuario,
    sol_hoja,sol_cant_hojas,desp_sol_numero,desp_sol_mensaje,desp_sol_fecha,
    desp_sol_com_catalogo,desp_sol_log_cat,desp_sol_observaciones,desp_sol_situacion,
    desp_sol_dotacion,desp_sol_dependencia,desp_sol_jerarquia,desp_sol_usuario,
    desp_sol_hoja,desp_sol_cant_hojas,accion,usuario,hora)  values (antes.sol_numero 
    ,antes.sol_mensaje ,antes.sol_fecha ,antes.sol_com_catalogo ,antes.sol_log_cat 
    ,antes.sol_observaciones ,antes.sol_situacion ,antes.sol_dotacion 
    ,antes.sol_dependencia ,antes.sol_jerarquia ,antes.sol_usuario ,antes.sol_hoja 
    ,antes.sol_cant_hojas ,NULL ,'' ,'' ,NULL ,NULL ,'' ,'' ,'' ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_dot_solicitud update on "informix"
    .dot_solicitud referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dot_solicitud (sol_numero,
    sol_mensaje,sol_fecha,sol_com_catalogo,sol_log_cat,sol_observaciones,
    sol_situacion,sol_dotacion,sol_dependencia,sol_jerarquia,sol_usuario,
    sol_hoja,sol_cant_hojas,desp_sol_numero,desp_sol_mensaje,desp_sol_fecha,
    desp_sol_com_catalogo,desp_sol_log_cat,desp_sol_observaciones,desp_sol_situacion,
    desp_sol_dotacion,desp_sol_dependencia,desp_sol_jerarquia,desp_sol_usuario,
    desp_sol_hoja,desp_sol_cant_hojas,accion,usuario,hora)  values (antes.sol_numero 
    ,antes.sol_mensaje ,antes.sol_fecha ,antes.sol_com_catalogo ,antes.sol_log_cat 
    ,antes.sol_observaciones ,antes.sol_situacion ,antes.sol_dotacion 
    ,antes.sol_dependencia ,antes.sol_jerarquia ,antes.sol_usuario ,antes.sol_hoja 
    ,antes.sol_cant_hojas ,luego.sol_numero ,luego.sol_mensaje ,luego.sol_fecha 
    ,luego.sol_com_catalogo ,luego.sol_log_cat ,luego.sol_observaciones 
    ,luego.sol_situacion ,luego.sol_dotacion ,luego.sol_dependencia ,
    luego.sol_jerarquia ,luego.sol_usuario ,luego.sol_hoja ,luego.sol_cant_hojas 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_dot_detalle insert on "informix"
    .dot_detalle referencing new as luego
    for each row
        (
        insert into "informix".aud_dot_detalle (det_solicitud,
    det_catalogo,det_grado,det_codigo_uni,det_talla_uni,det_talla_bota,
    det_talla_gorra,det_situacion,det_fecha,det_usuario,det_comprobante,
    det_codbarra,desp_det_solicitud,desp_det_catalogo,desp_det_grado,
    desp_det_codigo_uni,desp_det_talla_uni,desp_det_talla_bota,desp_det_talla_gorra,
    desp_det_situacion,desp_det_fecha,desp_det_usuario,desp_det_comprobante,
    desp_det_codbarra,accion,usuario,hora)  values (NULL ,NULL ,NULL 
    ,NULL ,'' ,'' ,'' ,NULL ,'' ,NULL ,NULL ,'' ,luego.det_solicitud ,luego.det_catalogo 
    ,luego.det_grado ,luego.det_codigo_uni ,luego.det_talla_uni ,luego.det_talla_bota 
    ,luego.det_talla_gorra ,luego.det_situacion ,luego.det_fecha ,luego.det_usuario 
    ,luego.det_comprobante ,luego.det_codbarra ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_dot_detalle delete on "informix"
    .dot_detalle referencing old as antes
    for each row
        (
        insert into "informix".aud_dot_detalle (det_solicitud,
    det_catalogo,det_grado,det_codigo_uni,det_talla_uni,det_talla_bota,
    det_talla_gorra,det_situacion,det_fecha,det_usuario,det_comprobante,
    det_codbarra,desp_det_solicitud,desp_det_catalogo,desp_det_grado,
    desp_det_codigo_uni,desp_det_talla_uni,desp_det_talla_bota,desp_det_talla_gorra,
    desp_det_situacion,desp_det_fecha,desp_det_usuario,desp_det_comprobante,
    desp_det_codbarra,accion,usuario,hora)  values (antes.det_solicitud 
    ,antes.det_catalogo ,antes.det_grado ,antes.det_codigo_uni ,antes.det_talla_uni 
    ,antes.det_talla_bota ,antes.det_talla_gorra ,antes.det_situacion 
    ,antes.det_fecha ,antes.det_usuario ,antes.det_comprobante ,antes.det_codbarra 
    ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'' ,NULL ,'' ,NULL ,NULL ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_dot_detalle update on "informix"
    .dot_detalle referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dot_detalle (det_solicitud,
    det_catalogo,det_grado,det_codigo_uni,det_talla_uni,det_talla_bota,
    det_talla_gorra,det_situacion,det_fecha,det_usuario,det_comprobante,
    det_codbarra,desp_det_solicitud,desp_det_catalogo,desp_det_grado,
    desp_det_codigo_uni,desp_det_talla_uni,desp_det_talla_bota,desp_det_talla_gorra,
    desp_det_situacion,desp_det_fecha,desp_det_usuario,desp_det_comprobante,
    desp_det_codbarra,accion,usuario,hora)  values (antes.det_solicitud 
    ,antes.det_catalogo ,antes.det_grado ,antes.det_codigo_uni ,antes.det_talla_uni 
    ,antes.det_talla_bota ,antes.det_talla_gorra ,antes.det_situacion 
    ,antes.det_fecha ,antes.det_usuario ,antes.det_comprobante ,antes.det_codbarra 
    ,luego.det_solicitud ,luego.det_catalogo ,luego.det_grado ,luego.det_codigo_uni 
    ,luego.det_talla_uni ,luego.det_talla_bota ,luego.det_talla_gorra 
    ,luego.det_situacion ,luego.det_fecha ,luego.det_usuario ,luego.det_comprobante 
    ,luego.det_codbarra ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_inv_proveedor insert on "informix"
    .inv_proveedor referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_proveedor (pro_codigo,
    pro_nombre,pro_nit,pro_direccion,pro_telefono,pro_correo,pro_situacion,
    desp_pro_codigo,desp_pro_nombre,desp_pro_nit,desp_pro_direccion,desp_pro_telefono,
    desp_pro_correo,desp_pro_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,NULL ,'' ,NULL ,'' ,NULL ,luego.pro_codigo ,luego.pro_nombre ,luego.pro_nit 
    ,luego.pro_direccion ,luego.pro_telefono ,luego.pro_correo ,luego.pro_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".up_inv_proveedor update on "informix"
    .inv_proveedor referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_inv_proveedor (pro_codigo,
    pro_nombre,pro_nit,pro_direccion,pro_telefono,pro_correo,pro_situacion,
    desp_pro_codigo,desp_pro_nombre,desp_pro_nit,desp_pro_direccion,desp_pro_telefono,
    desp_pro_correo,desp_pro_situacion,accion,usuario,hora)  values (antes.pro_codigo 
    ,antes.pro_nombre ,antes.pro_nit ,antes.pro_direccion ,antes.pro_telefono 
    ,antes.pro_correo ,antes.pro_situacion ,luego.pro_codigo ,luego.pro_nombre 
    ,luego.pro_nit ,luego.pro_direccion ,luego.pro_telefono ,luego.pro_correo 
    ,luego.pro_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_inv_proveedor delete on "informix"
    .inv_proveedor referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_proveedor (pro_codigo,
    pro_nombre,pro_nit,pro_direccion,pro_telefono,pro_correo,pro_situacion,
    desp_pro_codigo,desp_pro_nombre,desp_pro_nit,desp_pro_direccion,desp_pro_telefono,
    desp_pro_correo,desp_pro_situacion,accion,usuario,hora)  values (antes.pro_codigo 
    ,antes.pro_nombre ,antes.pro_nit ,antes.pro_direccion ,antes.pro_telefono 
    ,antes.pro_correo ,antes.pro_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_inv_representante insert on "informix"
    .inv_representante referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_representante (rep_codigo,
    rep_nom1,rep_nom2,rep_ape1,rep_ape2,rep_telefono,rep_situacion,desp_rep_codigo,
    desp_rep_nom1,desp_rep_nom2,desp_rep_ape1,desp_rep_ape2,desp_rep_telefono,
    desp_rep_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,NULL ,NULL ,luego.rep_codigo ,luego.rep_nom1 ,luego.rep_nom2 ,luego.rep_ape1 
    ,luego.rep_ape2 ,luego.rep_telefono ,luego.rep_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".up_inv_representante update on "informix"
    .inv_representante referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_inv_representante (rep_codigo,
    rep_nom1,rep_nom2,rep_ape1,rep_ape2,rep_telefono,rep_situacion,desp_rep_codigo,
    desp_rep_nom1,desp_rep_nom2,desp_rep_ape1,desp_rep_ape2,desp_rep_telefono,
    desp_rep_situacion,accion,usuario,hora)  values (antes.rep_codigo 
    ,antes.rep_nom1 ,antes.rep_nom2 ,antes.rep_ape1 ,antes.rep_ape2 ,
    antes.rep_telefono ,antes.rep_situacion ,luego.rep_codigo ,luego.rep_nom1 
    ,luego.rep_nom2 ,luego.rep_ape1 ,luego.rep_ape2 ,luego.rep_telefono 
    ,luego.rep_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_inv_representante delete on "informix"
    .inv_representante referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_representante (rep_codigo,
    rep_nom1,rep_nom2,rep_ape1,rep_ape2,rep_telefono,rep_situacion,desp_rep_codigo,
    desp_rep_nom1,desp_rep_nom2,desp_rep_ape1,desp_rep_ape2,desp_rep_telefono,
    desp_rep_situacion,accion,usuario,hora)  values (antes.rep_codigo 
    ,antes.rep_nom1 ,antes.rep_nom2 ,antes.rep_ape1 ,antes.rep_ape2 ,
    antes.rep_telefono ,antes.rep_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,
    'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_inv_asig_repre_provee insert on 
    "informix".inv_asig_repre_provee referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_asig_repre_provee (asig_codigo,
    asig_proveedor,asig_representante,asig_situacion,desp_asig_codigo,
    desp_asig_proveedor,desp_asig_representante,desp_asig_situacion,accion,
    usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,luego.asig_codigo 
    ,luego.asig_proveedor ,luego.asig_representante ,luego.asig_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".up_inv_asig_repre_provee update on 
    "informix".inv_asig_repre_provee referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_inv_asig_repre_provee (asig_codigo,
    asig_proveedor,asig_representante,asig_situacion,desp_asig_codigo,
    desp_asig_proveedor,desp_asig_representante,desp_asig_situacion,accion,
    usuario,hora)  values (antes.asig_codigo ,antes.asig_proveedor ,antes.asig_representante 
    ,antes.asig_situacion ,luego.asig_codigo ,luego.asig_proveedor ,luego.asig_representante 
    ,luego.asig_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_inv_asig_repre_provee delete on 
    "informix".inv_asig_repre_provee referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_asig_repre_provee (asig_codigo,
    asig_proveedor,asig_representante,asig_situacion,desp_asig_codigo,
    desp_asig_proveedor,desp_asig_representante,desp_asig_situacion,accion,
    usuario,hora)  values (antes.asig_codigo ,antes.asig_proveedor ,antes.asig_representante 
    ,antes.asig_situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_inv_detalle insert on "informix"
    .inv_detalle referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_detalle (det_codigo,det_formulario,
    det_tipo,det_lote,det_articulo,det_grupo,det_cantidad,det_calidad,
    det_observaciones,det_situaciones,desp_det_codigo,desp_det_formulario,
    desp_det_tipo,desp_det_lote,desp_det_articulo,desp_det_grupo,desp_det_cantidad,
    desp_det_calidad,desp_det_observaciones,desp_det_situaciones,accion,
    usuario,hora)  values (NULL ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,'' ,
    '' ,NULL ,luego.det_codigo ,luego.det_formulario ,luego.det_tipo ,
    luego.det_lote ,luego.det_articulo ,luego.det_grupo ,luego.det_cantidad 
    ,luego.det_calidad ,luego.det_observaciones ,luego.det_situaciones 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".up_inv_detalle update on "informix".inv_detalle 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_inv_detalle (det_codigo,det_formulario,
    det_tipo,det_lote,det_articulo,det_grupo,det_cantidad,det_calidad,
    det_observaciones,det_situaciones,desp_det_codigo,desp_det_formulario,
    desp_det_tipo,desp_det_lote,desp_det_articulo,desp_det_grupo,desp_det_cantidad,
    desp_det_calidad,desp_det_observaciones,desp_det_situaciones,accion,
    usuario,hora)  values (antes.det_codigo ,antes.det_formulario ,antes.det_tipo 
    ,antes.det_lote ,antes.det_articulo ,antes.det_grupo ,antes.det_cantidad 
    ,antes.det_calidad ,antes.det_observaciones ,antes.det_situaciones 
    ,luego.det_codigo ,luego.det_formulario ,luego.det_tipo ,luego.det_lote 
    ,luego.det_articulo ,luego.det_grupo ,luego.det_cantidad ,luego.det_calidad 
    ,luego.det_observaciones ,luego.det_situaciones ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_inv_detalle delete on "informix"
    .inv_detalle referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_detalle (det_codigo,det_formulario,
    det_tipo,det_lote,det_articulo,det_grupo,det_cantidad,det_calidad,
    det_observaciones,det_situaciones,desp_det_codigo,desp_det_formulario,
    desp_det_tipo,desp_det_lote,desp_det_articulo,desp_det_grupo,desp_det_cantidad,
    desp_det_calidad,desp_det_observaciones,desp_det_situaciones,accion,
    usuario,hora)  values (antes.det_codigo ,antes.det_formulario ,antes.det_tipo 
    ,antes.det_lote ,antes.det_articulo ,antes.det_grupo ,antes.det_cantidad 
    ,antes.det_calidad ,antes.det_observaciones ,antes.det_situaciones 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_inv_articulo insert on "informix"
    .inv_articulo referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_articulo (art_codigo,art_grupo,
    art_desc_corta,art_desc_larga,art_situacion,desp_art_codigo,desp_art_grupo,
    desp_art_desc_corta,desp_art_desc_larga,desp_art_situacion,accion,
    usuario,hora)  values (NULL ,NULL ,'' ,'' ,NULL ,luego.art_codigo ,
    luego.art_grupo ,luego.art_desc_corta ,luego.art_desc_larga ,luego.art_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".up_inv_articulo update on "informix"
    .inv_articulo referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_inv_articulo (art_codigo,art_grupo,
    art_desc_corta,art_desc_larga,art_situacion,desp_art_codigo,desp_art_grupo,
    desp_art_desc_corta,desp_art_desc_larga,desp_art_situacion,accion,
    usuario,hora)  values (antes.art_codigo ,antes.art_grupo ,antes.art_desc_corta 
    ,antes.art_desc_larga ,antes.art_situacion ,luego.art_codigo ,luego.art_grupo 
    ,luego.art_desc_corta ,luego.art_desc_larga ,luego.art_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_inv_articulo delete on "informix"
    .inv_articulo referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_articulo (art_codigo,art_grupo,
    art_desc_corta,art_desc_larga,art_situacion,desp_art_codigo,desp_art_grupo,
    desp_art_desc_corta,desp_art_desc_larga,desp_art_situacion,accion,
    usuario,hora)  values (antes.art_codigo ,antes.art_grupo ,antes.art_desc_corta 
    ,antes.art_desc_larga ,antes.art_situacion ,NULL ,'' ,'' ,'' ,'' ,'D' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_inv_clase insert on "informix".inv_clase 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_clase (cla_codigo,cla_nombre,
    cla_descripcion,cla_situacion,desp_cla_codigo,desp_cla_nombre,desp_cla_descripcion,
    desp_cla_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.cla_codigo 
    ,luego.cla_nombre ,luego.cla_descripcion ,luego.cla_situacion ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".up_inv_clase update on "informix".inv_clase 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_inv_clase (cla_codigo,cla_nombre,
    cla_descripcion,cla_situacion,desp_cla_codigo,desp_cla_nombre,desp_cla_descripcion,
    desp_cla_situacion,accion,usuario,hora)  values (antes.cla_codigo 
    ,antes.cla_nombre ,antes.cla_descripcion ,antes.cla_situacion ,luego.cla_codigo 
    ,luego.cla_nombre ,luego.cla_descripcion ,luego.cla_situacion ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_inv_clase delete on "informix".inv_clase 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_clase (cla_codigo,cla_nombre,
    cla_descripcion,cla_situacion,desp_cla_codigo,desp_cla_nombre,desp_cla_descripcion,
    desp_cla_situacion,accion,usuario,hora)  values (antes.cla_codigo 
    ,antes.cla_nombre ,antes.cla_descripcion ,antes.cla_situacion ,NULL 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_inv_grupo insert on "informix".inv_grupo 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_grupo (grup_codigo,grup_clase,
    grup_tipo,grup_descripcion,grup_situacion,desp_grup_codigo,desp_grup_clase,
    desp_grup_tipo,desp_grup_descripcion,desp_grup_situacion,accion,usuario,
    hora)  values (NULL ,NULL ,'' ,'' ,NULL ,luego.grup_codigo ,luego.grup_clase 
    ,luego.grup_tipo ,luego.grup_descripcion ,luego.grup_situacion ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".up_inv_grupo update on "informix".inv_grupo 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_inv_grupo (grup_codigo,grup_clase,
    grup_tipo,grup_descripcion,grup_situacion,desp_grup_codigo,desp_grup_clase,
    desp_grup_tipo,desp_grup_descripcion,desp_grup_situacion,accion,usuario,
    hora)  values (antes.grup_codigo ,antes.grup_clase ,antes.grup_tipo 
    ,antes.grup_descripcion ,antes.grup_situacion ,luego.grup_codigo 
    ,luego.grup_clase ,luego.grup_tipo ,luego.grup_descripcion ,luego.grup_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_inv_grupo delete on "informix".inv_grupo 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_grupo (grup_codigo,grup_tipo,
    grup_descripcion,grup_situacion,desp_grup_codigo,desp_grup_tipo,desp_grup_descripcion,
    desp_grup_situacion,accion,usuario,hora)  values (antes.grup_codigo 
    ,antes.grup_tipo ,antes.grup_descripcion ,antes.grup_situacion ,NULL 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_inv_lote insert on "informix".inv_lote 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_lote (lot_codigo,lot_articulo,
    lot_grupo,lot_dependencia,lot_desc_corta,lot_desc_larga,lot_existencias,
    lot_ubicacion,lot_numserie,lot_modelo,lot_version,lot_frecuencia,
    lot_situacion,desp_lot_codigo,desp_lot_articulo,desp_lot_grupo,desp_lot_dependencia,
    desp_lot_desc_corta,desp_lot_desc_larga,desp_lot_existencias,desp_lot_ubicacion,
    desp_lot_numserie,desp_lot_modelo,desp_lot_version,desp_lot_frecuencia,
    desp_lot_situacion,accion,usuario,hora)  values (NULL ,NULL ,NULL 
    ,'' ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,'' ,NULL ,luego.lot_codigo ,luego.lot_articulo 
    ,luego.lot_grupo ,luego.lot_dependencia ,luego.lot_desc_corta ,luego.lot_desc_larga 
    ,luego.lot_existencias ,luego.lot_ubicacion ,luego.lot_numserie ,
    luego.lot_modelo ,luego.lot_version ,luego.lot_frecuencia ,luego.lot_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".up_inv_lote update on "informix".inv_lote 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_inv_lote (lot_codigo,lot_articulo,
    lot_grupo,lot_dependencia,lot_desc_corta,lot_desc_larga,lot_existencias,
    lot_ubicacion,lot_numserie,lot_modelo,lot_version,lot_frecuencia,
    lot_situacion,desp_lot_codigo,desp_lot_articulo,desp_lot_grupo,desp_lot_dependencia,
    desp_lot_desc_corta,desp_lot_desc_larga,desp_lot_existencias,desp_lot_ubicacion,
    desp_lot_numserie,desp_lot_modelo,desp_lot_version,desp_lot_frecuencia,
    desp_lot_situacion,accion,usuario,hora)  values (antes.lot_codigo 
    ,antes.lot_articulo ,antes.lot_grupo ,antes.lot_dependencia ,antes.lot_desc_corta 
    ,antes.lot_desc_larga ,antes.lot_existencias ,antes.lot_ubicacion 
    ,antes.lot_numserie ,antes.lot_modelo ,antes.lot_version ,antes.lot_frecuencia 
    ,antes.lot_situacion ,luego.lot_codigo ,luego.lot_articulo ,luego.lot_grupo 
    ,luego.lot_dependencia ,luego.lot_desc_corta ,luego.lot_desc_larga 
    ,luego.lot_existencias ,luego.lot_ubicacion ,luego.lot_numserie ,
    luego.lot_modelo ,luego.lot_version ,luego.lot_frecuencia ,luego.lot_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_inv_lote delete on "informix".inv_lote 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_lote (lot_codigo,lot_articulo,
    lot_grupo,lot_dependencia,lot_desc_corta,lot_desc_larga,lot_existencias,
    lot_ubicacion,lot_numserie,lot_modelo,lot_version,lot_frecuencia,
    lot_situacion,desp_lot_codigo,desp_lot_articulo,desp_lot_grupo,desp_lot_dependencia,
    desp_lot_desc_corta,desp_lot_desc_larga,desp_lot_existencias,desp_lot_ubicacion,
    desp_lot_numserie,desp_lot_modelo,desp_lot_version,desp_lot_frecuencia,
    desp_lot_situacion,accion,usuario,hora)  values (antes.lot_codigo 
    ,antes.lot_articulo ,antes.lot_grupo ,antes.lot_dependencia ,antes.lot_desc_corta 
    ,antes.lot_desc_larga ,antes.lot_existencias ,antes.lot_ubicacion 
    ,antes.lot_numserie ,antes.lot_modelo ,antes.lot_version ,antes.lot_frecuencia 
    ,antes.lot_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_inv_formulario insert on "informix"
    .inv_formulario referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_formulario (for_codigo,
    for_tipo,for_fechora,for_proveedor,for_dep_entrega,for_dep_recibe,
    for_representante,for_cat_entrega,for_cat_recibe,for_cat_encargado,
    for_cat_jefe,for_grad_entrega,for_grad_recibe,for_grad_encargado,
    for_grad_jefe,for_observaciones,for_situaciones,desp_for_codigo,desp_for_tipo,
    desp_for_fechora,desp_for_proveedor,desp_for_dep_entrega,desp_for_dep_recibe,
    desp_for_representante,desp_for_cat_entrega,desp_for_cat_recibe,desp_for_cat_encargado,
    desp_for_cat_jefe,desp_for_grad_entrega,desp_for_grad_recibe,desp_for_grad_encargado,
    desp_for_grad_jefe,desp_for_observaciones,desp_for_situaciones,accion,
    usuario,hora)  values (NULL ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,
    NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,luego.for_codigo 
    ,luego.for_tipo ,luego.for_fechora ,luego.for_proveedor ,luego.for_dep_entrega 
    ,luego.for_dep_recibe ,luego.for_representante ,luego.for_cat_entrega 
    ,luego.for_cat_recibe ,luego.for_cat_encargado ,luego.for_cat_jefe 
    ,luego.for_grad_entrega ,luego.for_grad_recibe ,luego.for_grad_encargado 
    ,luego.for_grad_jefe ,luego.for_observaciones ,luego.for_situaciones 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".up_inv_formulario update on "informix"
    .inv_formulario referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_inv_formulario (for_codigo,
    for_tipo,for_fechora,for_proveedor,for_dep_entrega,for_dep_recibe,
    for_representante,for_cat_entrega,for_cat_recibe,for_cat_encargado,
    for_cat_jefe,for_grad_entrega,for_grad_recibe,for_grad_encargado,
    for_grad_jefe,for_observaciones,for_situaciones,desp_for_codigo,desp_for_tipo,
    desp_for_fechora,desp_for_proveedor,desp_for_dep_entrega,desp_for_dep_recibe,
    desp_for_representante,desp_for_cat_entrega,desp_for_cat_recibe,desp_for_cat_encargado,
    desp_for_cat_jefe,desp_for_grad_entrega,desp_for_grad_recibe,desp_for_grad_encargado,
    desp_for_grad_jefe,desp_for_observaciones,desp_for_situaciones,accion,
    usuario,hora)  values (antes.for_codigo ,antes.for_tipo ,antes.for_fechora 
    ,antes.for_proveedor ,antes.for_dep_entrega ,antes.for_dep_recibe 
    ,antes.for_representante ,antes.for_cat_entrega ,antes.for_cat_recibe 
    ,antes.for_cat_encargado ,antes.for_cat_jefe ,antes.for_grad_entrega 
    ,antes.for_grad_recibe ,antes.for_grad_encargado ,antes.for_grad_jefe 
    ,antes.for_observaciones ,antes.for_situaciones ,luego.for_codigo 
    ,luego.for_tipo ,luego.for_fechora ,luego.for_proveedor ,luego.for_dep_entrega 
    ,luego.for_dep_recibe ,luego.for_representante ,luego.for_cat_entrega 
    ,luego.for_cat_recibe ,luego.for_cat_encargado ,luego.for_cat_jefe 
    ,luego.for_grad_entrega ,luego.for_grad_recibe ,luego.for_grad_encargado 
    ,luego.for_grad_jefe ,luego.for_observaciones ,luego.for_situaciones 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_inv_formulario delete on "informix"
    .inv_formulario referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_formulario (for_codigo,
    for_tipo,for_fechora,for_proveedor,for_dep_entrega,for_dep_recibe,
    for_representante,for_cat_entrega,for_cat_recibe,for_cat_encargado,
    for_cat_jefe,for_grad_entrega,for_grad_recibe,for_grad_encargado,
    for_grad_jefe,for_observaciones,for_situaciones,desp_for_codigo,desp_for_tipo,
    desp_for_fechora,desp_for_proveedor,desp_for_dep_entrega,desp_for_dep_recibe,
    desp_for_representante,desp_for_cat_entrega,desp_for_cat_recibe,desp_for_cat_encargado,
    desp_for_cat_jefe,desp_for_grad_entrega,desp_for_grad_recibe,desp_for_grad_encargado,
    desp_for_grad_jefe,desp_for_observaciones,desp_for_situaciones,accion,
    usuario,hora)  values (antes.for_codigo ,antes.for_tipo ,antes.for_fechora 
    ,antes.for_proveedor ,antes.for_dep_entrega ,antes.for_dep_recibe 
    ,antes.for_representante ,antes.for_cat_entrega ,antes.for_cat_recibe 
    ,antes.for_cat_encargado ,antes.for_cat_jefe ,antes.for_grad_entrega 
    ,antes.for_grad_recibe ,antes.for_grad_encargado ,antes.for_grad_jefe 
    ,antes.for_observaciones ,antes.for_situaciones ,NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_dtx_accesorio insert on "informix"
    .dtx_accesorio referencing new as luego
    for each row
        (
        insert into "informix".aud_dtx_accesorio (acc_id,acc_desc_ct,
    acc_desc_lg,acc_marca,acc_no_serie,acc_modelo,acc_version,acc_estado,
    acc_observaciones,acc_situacion,desp_acc_id,desp_acc_desc_ct,desp_acc_desc_lg,
    desp_acc_marca,desp_acc_no_serie,desp_acc_modelo,desp_acc_version,
    desp_acc_estado,desp_acc_observaciones,desp_acc_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,luego.acc_id 
    ,luego.acc_desc_ct ,luego.acc_desc_lg ,luego.acc_marca ,luego.acc_no_serie 
    ,luego.acc_modelo ,luego.acc_version ,luego.acc_estado ,luego.acc_observaciones 
    ,luego.acc_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dtx_accesorio delete on "informix"
    .dtx_accesorio referencing old as antes
    for each row
        (
        insert into "informix".aud_dtx_accesorio (acc_id,acc_desc_ct,
    acc_desc_lg,acc_marca,acc_no_serie,acc_modelo,acc_version,acc_estado,
    acc_observaciones,acc_situacion,desp_acc_id,desp_acc_desc_ct,desp_acc_desc_lg,
    desp_acc_marca,desp_acc_no_serie,desp_acc_modelo,desp_acc_version,
    desp_acc_estado,desp_acc_observaciones,desp_acc_situacion,accion,
    usuario,hora)  values (antes.acc_id ,antes.acc_desc_ct ,antes.acc_desc_lg 
    ,antes.acc_marca ,antes.acc_no_serie ,antes.acc_modelo ,antes.acc_version 
    ,antes.acc_estado ,antes.acc_observaciones ,antes.acc_situacion ,
    NULL ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_dtx_accesorio update on "informix"
    .dtx_accesorio referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dtx_accesorio (acc_id,acc_desc_ct,
    acc_desc_lg,acc_marca,acc_no_serie,acc_modelo,acc_version,acc_estado,
    acc_observaciones,acc_situacion,desp_acc_id,desp_acc_desc_ct,desp_acc_desc_lg,
    desp_acc_marca,desp_acc_no_serie,desp_acc_modelo,desp_acc_version,
    desp_acc_estado,desp_acc_observaciones,desp_acc_situacion,accion,
    usuario,hora)  values (antes.acc_id ,antes.acc_desc_ct ,antes.acc_desc_lg 
    ,antes.acc_marca ,antes.acc_no_serie ,antes.acc_modelo ,antes.acc_version 
    ,antes.acc_estado ,antes.acc_observaciones ,antes.acc_situacion ,
    luego.acc_id ,luego.acc_desc_ct ,luego.acc_desc_lg ,luego.acc_marca 
    ,luego.acc_no_serie ,luego.acc_modelo ,luego.acc_version ,luego.acc_estado 
    ,luego.acc_observaciones ,luego.acc_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_dtx_marca insert on "informix".dtx_marca 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_dtx_marca (mar_id,mar_desc,
    mar_situacion,desp_mar_id,desp_mar_desc,desp_mar_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.mar_id ,luego.mar_desc ,
    luego.mar_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dtx_marca delete on "informix".dtx_marca 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_dtx_marca (mar_id,mar_desc,
    mar_situacion,desp_mar_id,desp_mar_desc,desp_mar_situacion,accion,
    usuario,hora)  values (antes.mar_id ,antes.mar_desc ,antes.mar_situacion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_dtx_marca update on "informix".dtx_marca 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dtx_marca (mar_id,mar_desc,
    mar_situacion,desp_mar_id,desp_mar_desc,desp_mar_situacion,accion,
    usuario,hora)  values (antes.mar_id ,antes.mar_desc ,antes.mar_situacion 
    ,luego.mar_id ,luego.mar_desc ,luego.mar_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_dtx_articulo insert on "informix"
    .dtx_articulo referencing new as luego
    for each row
        (
        insert into "informix".aud_dtx_articulo (art_id,art_desc_ct,
    art_desc_lg,art_marca,art_no_serie,art_modelo,art_version,art_r_frecuencia,
    art_estado,art_observaciones,art_situacion,desp_art_id,desp_art_desc_ct,
    desp_art_desc_lg,desp_art_marca,desp_art_no_serie,desp_art_modelo,
    desp_art_version,desp_art_r_frecuencia,desp_art_estado,desp_art_observaciones,
    desp_art_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.art_id ,luego.art_desc_ct ,luego.art_desc_lg 
    ,luego.art_marca ,luego.art_no_serie ,luego.art_modelo ,luego.art_version 
    ,luego.art_r_frecuencia ,luego.art_estado ,luego.art_observaciones 
    ,luego.art_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dtx_articulo delete on "informix"
    .dtx_articulo referencing old as antes
    for each row
        (
        insert into "informix".aud_dtx_articulo (art_id,art_desc_ct,
    art_desc_lg,art_marca,art_no_serie,art_modelo,art_version,art_r_frecuencia,
    art_estado,art_observaciones,art_situacion,desp_art_id,desp_art_desc_ct,
    desp_art_desc_lg,desp_art_marca,desp_art_no_serie,desp_art_modelo,
    desp_art_version,desp_art_r_frecuencia,desp_art_estado,desp_art_observaciones,
    desp_art_situacion,accion,usuario,hora)  values (antes.art_id ,antes.art_desc_ct 
    ,antes.art_desc_lg ,antes.art_marca ,antes.art_no_serie ,antes.art_modelo 
    ,antes.art_version ,antes.art_r_frecuencia ,antes.art_estado ,antes.art_observaciones 
    ,antes.art_situacion ,NULL ,'' ,'' ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_dtx_articulo update on "informix"
    .dtx_articulo referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dtx_articulo (art_id,art_desc_ct,
    art_desc_lg,art_marca,art_no_serie,art_modelo,art_version,art_r_frecuencia,
    art_estado,art_observaciones,art_situacion,desp_art_id,desp_art_desc_ct,
    desp_art_desc_lg,desp_art_marca,desp_art_no_serie,desp_art_modelo,
    desp_art_version,desp_art_r_frecuencia,desp_art_estado,desp_art_observaciones,
    desp_art_situacion,accion,usuario,hora)  values (antes.art_id ,antes.art_desc_ct 
    ,antes.art_desc_lg ,antes.art_marca ,antes.art_no_serie ,antes.art_modelo 
    ,antes.art_version ,antes.art_r_frecuencia ,antes.art_estado ,antes.art_observaciones 
    ,antes.art_situacion ,luego.art_id ,luego.art_desc_ct ,luego.art_desc_lg 
    ,luego.art_marca ,luego.art_no_serie ,luego.art_modelo ,luego.art_version 
    ,luego.art_r_frecuencia ,luego.art_estado ,luego.art_observaciones 
    ,luego.art_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_dtx_equipo insert on "informix".dtx_equipo 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_dtx_equipo (eq_art,eq_acc,
    eq_observaciones,eq_situacion,desp_eq_art,desp_eq_acc,desp_eq_observaciones,
    desp_eq_situacion,accion,usuario,hora)  values (NULL ,NULL ,'' ,'' 
    ,luego.eq_art ,luego.eq_acc ,luego.eq_observaciones ,luego.eq_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dtx_equipo delete on "informix".dtx_equipo 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_dtx_equipo (eq_art,eq_acc,
    eq_observaciones,eq_situacion,desp_eq_art,desp_eq_acc,desp_eq_observaciones,
    desp_eq_situacion,accion,usuario,hora)  values (antes.eq_art ,antes.eq_acc 
    ,antes.eq_observaciones ,antes.eq_situacion ,NULL ,NULL ,'' ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_dtx_equipo update on "informix".dtx_equipo 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dtx_equipo (eq_art,eq_acc,
    eq_observaciones,eq_situacion,desp_eq_art,desp_eq_acc,desp_eq_observaciones,
    desp_eq_situacion,accion,usuario,hora)  values (antes.eq_art ,antes.eq_acc 
    ,antes.eq_observaciones ,antes.eq_situacion ,luego.eq_art ,luego.eq_acc 
    ,luego.eq_observaciones ,luego.eq_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_dtx_distribucion insert on "informix"
    .dtx_distribucion referencing new as luego
    for each row
        (
        insert into "informix".aud_dtx_distribucion (dist_dman_dep,
    dist_dman_codigo,dist_eq_art,dist_eq_acc,dist_calidad,dist_f_asignacion,
    dist_catalogo_entrega,dist_grado_entrega,dist_catalogo_recibe,dist_grado_recibe,
    dist_situacion,dist_doc_ref,desp_dist_dman_dep,desp_dist_dman_codigo,
    desp_dist_eq_art,desp_dist_eq_acc,desp_dist_calidad,desp_dist_f_asignacion,
    desp_dist_catalogo_entrega,desp_dist_grado_entrega,desp_dist_catalogo_recibe,
    desp_dist_grado_recibe,desp_dist_situacion,desp_dist_doc_ref,accion,
    usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,
    NULL ,NULL ,'' ,'' ,luego.dist_dman_dep ,luego.dist_dman_codigo ,luego.dist_eq_art 
    ,luego.dist_eq_acc ,luego.dist_calidad ,luego.dist_f_asignacion ,
    luego.dist_catalogo_entrega ,luego.dist_grado_entrega ,luego.dist_catalogo_recibe 
    ,luego.dist_grado_recibe ,luego.dist_situacion ,luego.dist_doc_ref 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dtx_distribucion delete on "informix"
    .dtx_distribucion referencing old as antes
    for each row
        (
        insert into "informix".aud_dtx_distribucion (dist_dman_dep,
    dist_dman_codigo,dist_eq_art,dist_eq_acc,dist_calidad,dist_f_asignacion,
    dist_catalogo_entrega,dist_grado_entrega,dist_catalogo_recibe,dist_grado_recibe,
    dist_situacion,dist_doc_ref,desp_dist_dman_dep,desp_dist_dman_codigo,
    desp_dist_eq_art,desp_dist_eq_acc,desp_dist_calidad,desp_dist_f_asignacion,
    desp_dist_catalogo_entrega,desp_dist_grado_entrega,desp_dist_catalogo_recibe,
    desp_dist_grado_recibe,desp_dist_situacion,desp_dist_doc_ref,accion,
    usuario,hora)  values (antes.dist_dman_dep ,antes.dist_dman_codigo 
    ,antes.dist_eq_art ,antes.dist_eq_acc ,antes.dist_calidad ,antes.dist_f_asignacion 
    ,antes.dist_catalogo_entrega ,antes.dist_grado_entrega ,antes.dist_catalogo_recibe 
    ,antes.dist_grado_recibe ,antes.dist_situacion ,antes.dist_doc_ref 
    ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,'' ,'' ,'D' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_dtx_distribucion update on "informix"
    .dtx_distribucion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dtx_distribucion (dist_dman_dep,
    dist_dman_codigo,dist_eq_art,dist_eq_acc,dist_calidad,dist_f_asignacion,
    dist_catalogo_entrega,dist_grado_entrega,dist_catalogo_recibe,dist_grado_recibe,
    dist_situacion,dist_doc_ref,desp_dist_dman_dep,desp_dist_dman_codigo,
    desp_dist_eq_art,desp_dist_eq_acc,desp_dist_calidad,desp_dist_f_asignacion,
    desp_dist_catalogo_entrega,desp_dist_grado_entrega,desp_dist_catalogo_recibe,
    desp_dist_grado_recibe,desp_dist_situacion,desp_dist_doc_ref,accion,
    usuario,hora)  values (antes.dist_dman_dep ,antes.dist_dman_codigo 
    ,antes.dist_eq_art ,antes.dist_eq_acc ,antes.dist_calidad ,antes.dist_f_asignacion 
    ,antes.dist_catalogo_entrega ,antes.dist_grado_entrega ,antes.dist_catalogo_recibe 
    ,antes.dist_grado_recibe ,antes.dist_situacion ,antes.dist_doc_ref 
    ,luego.dist_dman_dep ,luego.dist_dman_codigo ,luego.dist_eq_art ,
    luego.dist_eq_acc ,luego.dist_calidad ,luego.dist_f_asignacion ,luego.dist_catalogo_entrega 
    ,luego.dist_grado_entrega ,luego.dist_catalogo_recibe ,luego.dist_grado_recibe 
    ,luego.dist_situacion ,luego.dist_doc_ref ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_bin_adquisicion insert on "informix"
    .bin_adquisicion referencing new as luego
    for each row
        (
        insert into "informix".aud_bin_adquisicion (adq_id,adq_descripcion,
    adq_situacion,desp_adq_id,desp_adq_descripcion,desp_adq_situacion,
    accion,usuario,hora)  values (NULL ,'' ,NULL ,luego.adq_id ,luego.adq_descripcion 
    ,luego.adq_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_bin_adquisicion delete on "informix"
    .bin_adquisicion referencing old as antes
    for each row
        (
        insert into "informix".aud_bin_adquisicion (adq_id,adq_descripcion,
    adq_situacion,desp_adq_id,desp_adq_descripcion,desp_adq_situacion,
    accion,usuario,hora)  values (antes.adq_id ,antes.adq_descripcion 
    ,antes.adq_situacion ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_bin_adquisicion update on "informix"
    .bin_adquisicion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bin_adquisicion (adq_id,adq_descripcion,
    adq_situacion,desp_adq_id,desp_adq_descripcion,desp_adq_situacion,
    accion,usuario,hora)  values (antes.adq_id ,antes.adq_descripcion 
    ,antes.adq_situacion ,luego.adq_id ,luego.adq_descripcion ,luego.adq_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".bin_tipos insert on "informix".bin_tipos 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_bin_tipos (tip_id,tip_descripcion,
    tip_situacion,desp_tip_id,desp_tip_descripcion,desp_tip_situacion,
    accion,usuario,hora)  values (NULL ,'' ,NULL ,luego.tip_id ,luego.tip_descripcion 
    ,luego.tip_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_bin_tipos delete on "informix".bin_tipos 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_bin_tipos (tip_id,tip_descripcion,
    tip_situacion,desp_tip_id,desp_tip_descripcion,desp_tip_situacion,
    accion,usuario,hora)  values (antes.tip_id ,antes.tip_descripcion 
    ,antes.tip_situacion ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_bin_tipos update on "informix".bin_tipos 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bin_tipos (tip_id,tip_descripcion,
    tip_situacion,desp_tip_id,desp_tip_descripcion,desp_tip_situacion,
    accion,usuario,hora)  values (antes.tip_id ,antes.tip_descripcion 
    ,antes.tip_situacion ,luego.tip_id ,luego.tip_descripcion ,luego.tip_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_bin_accion insert on "informix".bin_accion 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_bin_accion (acc_codigo,acc_incidencia,
    acc_accion,acc_fecha,acc_usuario,acc_situacion,desp_acc_codigo,desp_acc_incidencia,
    desp_acc_accion,desp_acc_fecha,desp_acc_usuario,desp_acc_situacion,
    accion,usuario,hora)  values (NULL ,NULL ,'' ,'' ,NULL ,NULL ,luego.acc_codigo 
    ,luego.acc_incidencia ,luego.acc_accion ,luego.acc_fecha ,luego.acc_usuario 
    ,luego.acc_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_bin_accion delete on "informix".bin_accion 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_bin_accion (acc_codigo,acc_incidencia,
    acc_accion,acc_fecha,acc_usuario,acc_situacion,desp_acc_codigo,desp_acc_incidencia,
    desp_acc_accion,desp_acc_fecha,desp_acc_usuario,desp_acc_situacion,
    accion,usuario,hora)  values (antes.acc_codigo ,antes.acc_incidencia 
    ,antes.acc_accion ,antes.acc_fecha ,antes.acc_usuario ,antes.acc_situacion 
    ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_bin_accion update on "informix".bin_accion 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bin_accion (acc_codigo,acc_incidencia,
    acc_accion,acc_fecha,acc_usuario,acc_situacion,desp_acc_codigo,desp_acc_incidencia,
    desp_acc_accion,desp_acc_fecha,desp_acc_usuario,desp_acc_situacion,
    accion,usuario,hora)  values (antes.acc_codigo ,antes.acc_incidencia 
    ,antes.acc_accion ,antes.acc_fecha ,antes.acc_usuario ,antes.acc_situacion 
    ,luego.acc_codigo ,luego.acc_incidencia ,luego.acc_accion ,luego.acc_fecha 
    ,luego.acc_usuario ,luego.acc_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_bin_utm insert on "informix".bin_utm 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_bin_utm (utm_codigo,utm_inmueble,
    utm_vertice,utm_coor,utm_situacion,desp_utm_codigo,desp_utm_inmueble,
    desp_utm_vertice,desp_utm_coor,desp_utm_situacion,accion,usuario,
    hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,luego.utm_codigo ,luego.utm_inmueble 
    ,luego.utm_vertice ,luego.utm_coor ,luego.utm_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_bin_utm delete on "informix".bin_utm 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_bin_utm (utm_codigo,utm_inmueble,
    utm_vertice,utm_coor,utm_situacion,desp_utm_codigo,desp_utm_inmueble,
    desp_utm_vertice,desp_utm_coor,desp_utm_situacion,accion,usuario,
    hora)  values (antes.utm_codigo ,antes.utm_inmueble ,antes.utm_vertice 
    ,antes.utm_coor ,antes.utm_situacion ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_bin_utm update on "informix".bin_utm 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bin_utm (utm_codigo,utm_inmueble,
    utm_vertice,utm_coor,utm_situacion,desp_utm_codigo,desp_utm_inmueble,
    desp_utm_vertice,desp_utm_coor,desp_utm_situacion,accion,usuario,
    hora)  values (antes.utm_codigo ,antes.utm_inmueble ,antes.utm_vertice 
    ,antes.utm_coor ,antes.utm_situacion ,luego.utm_codigo ,luego.utm_inmueble 
    ,luego.utm_vertice ,luego.utm_coor ,luego.utm_situacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_bin_inmueble insert on "informix"
    .bin_inmueble referencing new as luego
    for each row
        (
        insert into "informix".aud_bin_inmueble (inm_codigo,inm_descripcion,
    inm_situacion,inm_tipo,inm_adquisicion,inm_direccion,inm_depto,inm_municipio,
    inm_area,inm_area_reg,inm_finca,inm_folio,inm_libro,inm_esc_publica,
    inm_ac_gub,inm_bienes_estado,inm_referencia,inm_status,inm_catastro,
    inm_fecha_cat,inm_obs,desp_inm_codigo,desp_inm_descripcion,desp_inm_situacion,
    desp_inm_tipo,desp_inm_adquisicion,desp_inm_direccion,desp_inm_depto,
    desp_inm_municipio,desp_inm_area,desp_inm_area_reg,desp_inm_finca,
    desp_inm_folio,desp_inm_libro,desp_inm_esc_publica,desp_inm_ac_gub,
    desp_inm_bienes_estado,desp_inm_referencia,desp_inm_status,desp_inm_catastro,
    desp_inm_fecha_cat,desp_inm_obs,accion,usuario,hora)  values (NULL 
    ,'' ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,NULL 
    ,NULL ,'' ,'' ,luego.inm_codigo ,luego.inm_descripcion ,luego.inm_situacion 
    ,luego.inm_tipo ,luego.inm_adquisicion ,luego.inm_direccion ,luego.inm_depto 
    ,luego.inm_municipio ,luego.inm_area ,luego.inm_area_reg ,luego.inm_finca 
    ,luego.inm_folio ,luego.inm_libro ,luego.inm_esc_publica ,luego.inm_ac_gub 
    ,luego.inm_bienes_estado ,luego.inm_referencia ,luego.inm_status 
    ,luego.inm_catastro ,luego.inm_fecha_cat ,luego.inm_obs ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_bin_inmueble delete on "informix"
    .bin_inmueble referencing old as antes
    for each row
        (
        insert into "informix".aud_bin_inmueble (inm_codigo,inm_descripcion,
    inm_situacion,inm_tipo,inm_adquisicion,inm_direccion,inm_depto,inm_municipio,
    inm_area,inm_area_reg,inm_finca,inm_folio,inm_libro,inm_esc_publica,
    inm_ac_gub,inm_bienes_estado,inm_referencia,inm_status,inm_catastro,
    inm_fecha_cat,inm_obs,desp_inm_codigo,desp_inm_descripcion,desp_inm_situacion,
    desp_inm_tipo,desp_inm_adquisicion,desp_inm_direccion,desp_inm_depto,
    desp_inm_municipio,desp_inm_area,desp_inm_area_reg,desp_inm_finca,
    desp_inm_folio,desp_inm_libro,desp_inm_esc_publica,desp_inm_ac_gub,
    desp_inm_bienes_estado,desp_inm_referencia,desp_inm_status,desp_inm_catastro,
    desp_inm_fecha_cat,desp_inm_obs,accion,usuario,hora)  values (antes.inm_codigo 
    ,antes.inm_descripcion ,antes.inm_situacion ,antes.inm_tipo ,antes.inm_adquisicion 
    ,antes.inm_direccion ,antes.inm_depto ,antes.inm_municipio ,antes.inm_area 
    ,antes.inm_area_reg ,antes.inm_finca ,antes.inm_folio ,antes.inm_libro 
    ,antes.inm_esc_publica ,antes.inm_ac_gub ,antes.inm_bienes_estado 
    ,antes.inm_referencia ,antes.inm_status ,antes.inm_catastro ,antes.inm_fecha_cat 
    ,antes.inm_obs ,NULL ,'' ,NULL ,NULL ,NULL ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,NULL ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_bin_inmueble update on "informix"
    .bin_inmueble referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bin_inmueble (inm_codigo,inm_descripcion,
    inm_situacion,inm_tipo,inm_adquisicion,inm_direccion,inm_depto,inm_municipio,
    inm_area,inm_area_reg,inm_finca,inm_folio,inm_libro,inm_esc_publica,
    inm_ac_gub,inm_bienes_estado,inm_referencia,inm_status,inm_catastro,
    inm_fecha_cat,inm_obs,desp_inm_codigo,desp_inm_descripcion,desp_inm_situacion,
    desp_inm_tipo,desp_inm_adquisicion,desp_inm_direccion,desp_inm_depto,
    desp_inm_municipio,desp_inm_area,desp_inm_area_reg,desp_inm_finca,
    desp_inm_folio,desp_inm_libro,desp_inm_esc_publica,desp_inm_ac_gub,
    desp_inm_bienes_estado,desp_inm_referencia,desp_inm_status,desp_inm_catastro,
    desp_inm_fecha_cat,desp_inm_obs,accion,usuario,hora)  values (antes.inm_codigo 
    ,antes.inm_descripcion ,antes.inm_situacion ,antes.inm_tipo ,antes.inm_adquisicion 
    ,antes.inm_direccion ,antes.inm_depto ,antes.inm_municipio ,antes.inm_area 
    ,antes.inm_area_reg ,antes.inm_finca ,antes.inm_folio ,antes.inm_libro 
    ,antes.inm_esc_publica ,antes.inm_ac_gub ,antes.inm_bienes_estado 
    ,antes.inm_referencia ,antes.inm_status ,antes.inm_catastro ,antes.inm_fecha_cat 
    ,antes.inm_obs ,luego.inm_codigo ,luego.inm_descripcion ,luego.inm_situacion 
    ,luego.inm_tipo ,luego.inm_adquisicion ,luego.inm_direccion ,luego.inm_depto 
    ,luego.inm_municipio ,luego.inm_area ,luego.inm_area_reg ,luego.inm_finca 
    ,luego.inm_folio ,luego.inm_libro ,luego.inm_esc_publica ,luego.inm_ac_gub 
    ,luego.inm_bienes_estado ,luego.inm_referencia ,luego.inm_status 
    ,luego.inm_catastro ,luego.inm_fecha_cat ,luego.inm_obs ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_bin_ubicacion insert on "informix"
    .bin_ubicacion referencing new as luego
    for each row
        (
        insert into "informix".aud_bin_ubicacion (ubi_codigo,
    ubi_inmueble,ubi_vertice,ubi_latitud,ubi_longitud,ubi_situacion,desp_ubi_codigo,
    desp_ubi_inmueble,desp_ubi_vertice,desp_ubi_latitud,desp_ubi_longitud,
    desp_ubi_situacion,accion,usuario,hora)  values (NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,luego.ubi_codigo ,luego.ubi_inmueble ,luego.ubi_vertice 
    ,luego.ubi_latitud ,luego.ubi_longitud ,luego.ubi_situacion ,'I' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_bin_ubicacion delete on "informix"
    .bin_ubicacion referencing old as antes
    for each row
        (
        insert into "informix".aud_bin_ubicacion (ubi_codigo,
    ubi_inmueble,ubi_vertice,ubi_latitud,ubi_longitud,ubi_situacion,desp_ubi_codigo,
    desp_ubi_inmueble,desp_ubi_vertice,desp_ubi_latitud,desp_ubi_longitud,
    desp_ubi_situacion,accion,usuario,hora)  values (antes.ubi_codigo 
    ,antes.ubi_inmueble ,antes.ubi_vertice ,antes.ubi_latitud ,antes.ubi_longitud 
    ,antes.ubi_situacion ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_bin_ubicacion update on "informix"
    .bin_ubicacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bin_ubicacion (ubi_codigo,
    ubi_inmueble,ubi_vertice,ubi_latitud,ubi_longitud,ubi_situacion,desp_ubi_codigo,
    desp_ubi_inmueble,desp_ubi_vertice,desp_ubi_latitud,desp_ubi_longitud,
    desp_ubi_situacion,accion,usuario,hora)  values (antes.ubi_codigo 
    ,antes.ubi_inmueble ,antes.ubi_vertice ,antes.ubi_latitud ,antes.ubi_longitud 
    ,antes.ubi_situacion ,luego.ubi_codigo ,luego.ubi_inmueble ,luego.ubi_vertice 
    ,luego.ubi_latitud ,luego.ubi_longitud ,luego.ubi_situacion ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_bin_incidencia insert on "informix"
    .bin_incidencia referencing new as luego
    for each row
        (
        insert into "informix".aud_bin_incidencia (inc_codigo,
    inc_inmueble,inc_fecha,inc_tipo,inc_descripcion,inc_referencia,inc_usuario,
    inc_situacion,desp_inc_codigo,desp_inc_inmueble,desp_inc_fecha,desp_inc_tipo,
    desp_inc_descripcion,desp_inc_referencia,desp_inc_usuario,desp_inc_situacion,
    accion,usuario,hora)  values (NULL ,NULL ,'' ,'' ,'' ,'' ,NULL ,NULL 
    ,luego.inc_codigo ,luego.inc_inmueble ,luego.inc_fecha ,luego.inc_tipo 
    ,luego.inc_descripcion ,luego.inc_referencia ,luego.inc_usuario ,
    luego.inc_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_bin_incidencia delete on "informix"
    .bin_incidencia referencing old as antes
    for each row
        (
        insert into "informix".aud_bin_incidencia (inc_codigo,
    inc_inmueble,inc_fecha,inc_tipo,inc_descripcion,inc_referencia,inc_usuario,
    inc_situacion,desp_inc_codigo,desp_inc_inmueble,desp_inc_fecha,desp_inc_tipo,
    desp_inc_descripcion,desp_inc_referencia,desp_inc_usuario,desp_inc_situacion,
    accion,usuario,hora)  values (antes.inc_codigo ,antes.inc_inmueble 
    ,antes.inc_fecha ,antes.inc_tipo ,antes.inc_descripcion ,antes.inc_referencia 
    ,antes.inc_usuario ,antes.inc_situacion ,NULL ,NULL ,'' ,'' ,'' ,'' ,
    NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_bin_incidencia update on "informix"
    .bin_incidencia referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bin_incidencia (inc_codigo,
    inc_inmueble,inc_fecha,inc_tipo,inc_descripcion,inc_referencia,inc_usuario,
    inc_situacion,desp_inc_codigo,desp_inc_inmueble,desp_inc_fecha,desp_inc_tipo,
    desp_inc_descripcion,desp_inc_referencia,desp_inc_usuario,desp_inc_situacion,
    accion,usuario,hora)  values (antes.inc_codigo ,antes.inc_inmueble 
    ,antes.inc_fecha ,antes.inc_tipo ,antes.inc_descripcion ,antes.inc_referencia 
    ,antes.inc_usuario ,antes.inc_situacion ,luego.inc_codigo ,luego.inc_inmueble 
    ,luego.inc_fecha ,luego.inc_tipo ,luego.inc_descripcion ,luego.inc_referencia 
    ,luego.inc_usuario ,luego.inc_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_bin_asignacion insert on "informix"
    .bin_asignacion referencing new as luego
    for each row
        (
        insert into "informix".aud_bin_asignacion (asi_codigo,
    asi_inmueble,asi_referencia,asi_fecha,asi_responsable,asi_dependencia,
    asi_autentica,asi_usuario,asi_obs,asi_resp_grado,asi_aut_grado,desp_asi_codigo,
    desp_asi_inmueble,desp_asi_referencia,desp_asi_fecha,desp_asi_responsable,
    desp_asi_dependencia,desp_asi_autentica,desp_asi_usuario,desp_asi_obs,
    desp_asi_resp_grado,desp_asi_aut_grado,accion,usuario,hora)  values 
    (NULL ,NULL ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,luego.asi_codigo 
    ,luego.asi_inmueble ,luego.asi_referencia ,luego.asi_fecha ,luego.asi_responsable 
    ,luego.asi_dependencia ,luego.asi_autentica ,luego.asi_usuario ,luego.asi_obs 
    ,luego.asi_resp_grado ,luego.asi_aut_grado ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_bin_asignacion delete on "informix"
    .bin_asignacion referencing old as antes
    for each row
        (
        insert into "informix".aud_bin_asignacion (asi_codigo,
    asi_inmueble,asi_referencia,asi_fecha,asi_responsable,asi_dependencia,
    asi_autentica,asi_usuario,asi_obs,asi_resp_grado,asi_aut_grado,desp_asi_codigo,
    desp_asi_inmueble,desp_asi_referencia,desp_asi_fecha,desp_asi_responsable,
    desp_asi_dependencia,desp_asi_autentica,desp_asi_usuario,desp_asi_obs,
    desp_asi_resp_grado,desp_asi_aut_grado,accion,usuario,hora)  values 
    (antes.asi_codigo ,antes.asi_inmueble ,antes.asi_referencia ,antes.asi_fecha 
    ,antes.asi_responsable ,antes.asi_dependencia ,antes.asi_autentica 
    ,antes.asi_usuario ,antes.asi_obs ,antes.asi_resp_grado ,antes.asi_aut_grado 
    ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,NULL ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_bin_asignacion update on "informix"
    .bin_asignacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bin_asignacion (asi_codigo,
    asi_inmueble,asi_referencia,asi_fecha,asi_responsable,asi_dependencia,
    asi_autentica,asi_usuario,asi_obs,asi_resp_grado,asi_aut_grado,desp_asi_codigo,
    desp_asi_inmueble,desp_asi_referencia,desp_asi_fecha,desp_asi_responsable,
    desp_asi_dependencia,desp_asi_autentica,desp_asi_usuario,desp_asi_obs,
    desp_asi_resp_grado,desp_asi_aut_grado,accion,usuario,hora)  values 
    (antes.asi_codigo ,antes.asi_inmueble ,antes.asi_referencia ,antes.asi_fecha 
    ,antes.asi_responsable ,antes.asi_dependencia ,antes.asi_autentica 
    ,antes.asi_usuario ,antes.asi_obs ,antes.asi_resp_grado ,antes.asi_aut_grado 
    ,luego.asi_codigo ,luego.asi_inmueble ,luego.asi_referencia ,luego.asi_fecha 
    ,luego.asi_responsable ,luego.asi_dependencia ,luego.asi_autentica 
    ,luego.asi_usuario ,luego.asi_obs ,luego.asi_resp_grado ,luego.asi_aut_grado 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_psan_boleta insert on "informix"
    .psan_boleta referencing new as luego
    for each row
        (
        insert into "informix".aud_psan_boleta (bol_det_catalogo,
    bol_det_fecha,bol_det_sancion,bol_det_grado,bol_dependencia,bol_desc_empleo,
    bol_jerarquia_sancionado,bol_sancionador,bol_gra_sancionador,bol_empleo_sancionador,
    bol_justicia,bol_gra_justicia,bol_comte,bol_gra_comte,bol_fech_cumple,
    bol_det_status,desp_bol_det_catalogo,desp_bol_det_fecha,desp_bol_det_sancion,
    desp_bol_det_grado,desp_bol_dependencia,desp_bol_desc_empleo,desp_bol_jerarquia_sancionado,
    desp_bol_sancionador,desp_bol_gra_sancionador,desp_bol_empleo_sancionador,
    desp_bol_justicia,desp_bol_gra_justicia,desp_bol_comte,desp_bol_gra_comte,
    desp_bol_fech_cumple,desp_bol_det_status,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.bol_det_catalogo 
    ,luego.bol_det_fecha ,luego.bol_det_sancion ,luego.bol_det_grado 
    ,luego.bol_dependencia ,luego.bol_desc_empleo ,luego.bol_jerarquia_sancionado 
    ,luego.bol_sancionador ,luego.bol_gra_sancionador ,luego.bol_empleo_sancionador 
    ,luego.bol_justicia ,luego.bol_gra_justicia ,luego.bol_comte ,luego.bol_gra_comte 
    ,luego.bol_fech_cumple ,luego.bol_det_status ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_psan_boleta delete on "informix"
    .psan_boleta referencing old as antes
    for each row
        (
        insert into "informix".aud_psan_boleta (bol_det_catalogo,
    bol_det_fecha,bol_det_sancion,bol_det_grado,bol_dependencia,bol_desc_empleo,
    bol_jerarquia_sancionado,bol_sancionador,bol_gra_sancionador,bol_empleo_sancionador,
    bol_justicia,bol_gra_justicia,bol_comte,bol_gra_comte,bol_fech_cumple,
    bol_det_status,desp_bol_det_catalogo,desp_bol_det_fecha,desp_bol_det_sancion,
    desp_bol_det_grado,desp_bol_dependencia,desp_bol_desc_empleo,desp_bol_jerarquia_sancionado,
    desp_bol_sancionador,desp_bol_gra_sancionador,desp_bol_empleo_sancionador,
    desp_bol_justicia,desp_bol_gra_justicia,desp_bol_comte,desp_bol_gra_comte,
    desp_bol_fech_cumple,desp_bol_det_status,accion,usuario,hora)  values 
    (antes.bol_det_catalogo ,antes.bol_det_fecha ,antes.bol_det_sancion 
    ,antes.bol_det_grado ,antes.bol_dependencia ,antes.bol_desc_empleo 
    ,antes.bol_jerarquia_sancionado ,antes.bol_sancionador ,antes.bol_gra_sancionador 
    ,antes.bol_empleo_sancionador ,antes.bol_justicia ,antes.bol_gra_justicia 
    ,antes.bol_comte ,antes.bol_gra_comte ,antes.bol_fech_cumple ,antes.bol_det_status 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_psan_boleta update on "informix"
    .psan_boleta referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_psan_boleta (bol_det_catalogo,
    bol_det_fecha,bol_det_sancion,bol_det_grado,bol_dependencia,bol_desc_empleo,
    bol_jerarquia_sancionado,bol_sancionador,bol_gra_sancionador,bol_empleo_sancionador,
    bol_justicia,bol_gra_justicia,bol_comte,bol_gra_comte,bol_fech_cumple,
    bol_det_status,desp_bol_det_catalogo,desp_bol_det_fecha,desp_bol_det_sancion,
    desp_bol_det_grado,desp_bol_dependencia,desp_bol_desc_empleo,desp_bol_jerarquia_sancionado,
    desp_bol_sancionador,desp_bol_gra_sancionador,desp_bol_empleo_sancionador,
    desp_bol_justicia,desp_bol_gra_justicia,desp_bol_comte,desp_bol_gra_comte,
    desp_bol_fech_cumple,desp_bol_det_status,accion,usuario,hora)  values 
    (antes.bol_det_catalogo ,antes.bol_det_fecha ,antes.bol_det_sancion 
    ,antes.bol_det_grado ,antes.bol_dependencia ,antes.bol_desc_empleo 
    ,antes.bol_jerarquia_sancionado ,antes.bol_sancionador ,antes.bol_gra_sancionador 
    ,antes.bol_empleo_sancionador ,antes.bol_justicia ,antes.bol_gra_justicia 
    ,antes.bol_comte ,antes.bol_gra_comte ,antes.bol_fech_cumple ,antes.bol_det_status 
    ,luego.bol_det_catalogo ,luego.bol_det_fecha ,luego.bol_det_sancion 
    ,luego.bol_det_grado ,luego.bol_dependencia ,luego.bol_desc_empleo 
    ,luego.bol_jerarquia_sancionado ,luego.bol_sancionador ,luego.bol_gra_sancionador 
    ,luego.bol_empleo_sancionador ,luego.bol_justicia ,luego.bol_gra_justicia 
    ,luego.bol_comte ,luego.bol_gra_comte ,luego.bol_fech_cumple ,luego.bol_det_status 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ing_asig_maquinas insert on "informix"
    .ing_asi_maquinas referencing new as luego
    for each row
        (
        insert into "informix".aud_ing_asi_maquinas (asimaq_codigo,
    asimaq_proyecto,asimaq_maquina,asimaq_fecha_inicio,asimaq_fecha_fin,
    asimaq_situacion,desp_asimaq_codigo,desp_asimaq_proyecto,desp_asimaq_maquina,
    desp_asimaq_fecha_inicio,desp_asimaq_fecha_fin,desp_asimaq_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.asimaq_codigo 
    ,luego.asimaq_proyecto ,luego.asimaq_maquina ,luego.asimaq_fecha_inicio 
    ,luego.asimaq_fecha_fin ,luego.asimaq_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_ing_asig_maquinas delete on "informix"
    .ing_asi_maquinas referencing old as antes
    for each row
        (
        insert into "informix".aud_ing_asi_maquinas (asimaq_codigo,
    asimaq_proyecto,asimaq_maquina,asimaq_fecha_inicio,asimaq_fecha_fin,
    asimaq_situacion,desp_asimaq_codigo,desp_asimaq_proyecto,desp_asimaq_maquina,
    desp_asimaq_fecha_inicio,desp_asimaq_fecha_fin,desp_asimaq_situacion,
    accion,usuario,hora)  values (antes.asimaq_codigo ,antes.asimaq_proyecto 
    ,antes.asimaq_maquina ,antes.asimaq_fecha_inicio ,antes.asimaq_fecha_fin 
    ,antes.asimaq_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_ing_asig_maquinas update on "informix"
    .ing_asi_maquinas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ing_asi_maquinas (asimaq_codigo,
    asimaq_proyecto,asimaq_maquina,asimaq_fecha_inicio,asimaq_fecha_fin,
    asimaq_situacion,desp_asimaq_codigo,desp_asimaq_proyecto,desp_asimaq_maquina,
    desp_asimaq_fecha_inicio,desp_asimaq_fecha_fin,desp_asimaq_situacion,
    accion,usuario,hora)  values (antes.asimaq_codigo ,antes.asimaq_proyecto 
    ,antes.asimaq_maquina ,antes.asimaq_fecha_inicio ,antes.asimaq_fecha_fin 
    ,antes.asimaq_situacion ,luego.asimaq_codigo ,luego.asimaq_proyecto 
    ,luego.asimaq_maquina ,luego.asimaq_fecha_inicio ,luego.asimaq_fecha_fin 
    ,luego.asimaq_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_ing_asi_subren insert on "informix"
    .ing_asi_subren referencing new as luego
    for each row
        (
        insert into "informix".aud_ing_asi_subren (asu_codigo,
    asu_renglon,asu_subrenglon,asu_situacion,desp_asu_codigo,desp_asu_renglon,
    desp_asu_subrenglon,desp_asu_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,luego.asu_codigo ,luego.asu_renglon ,luego.asu_subrenglon 
    ,luego.asu_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ing_asi_subren delete on "informix"
    .ing_asi_subren referencing old as antes
    for each row
        (
        insert into "informix".aud_ing_asi_subren (asu_codigo,
    asu_renglon,asu_subrenglon,asu_situacion,desp_asu_codigo,desp_asu_renglon,
    desp_asu_subrenglon,desp_asu_situacion,accion,usuario,hora)  values 
    (antes.asu_codigo ,antes.asu_renglon ,antes.asu_subrenglon ,antes.asu_situacion 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ing_asi_subren update on "informix"
    .ing_asi_subren referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ing_asi_subren (asu_codigo,
    asu_renglon,asu_subrenglon,asu_situacion,desp_asu_codigo,desp_asu_renglon,
    desp_asu_subrenglon,desp_asu_situacion,accion,usuario,hora)  values 
    (antes.asu_codigo ,antes.asu_renglon ,antes.asu_subrenglon ,antes.asu_situacion 
    ,luego.asu_codigo ,luego.asu_renglon ,luego.asu_subrenglon ,luego.asu_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ing_asi_vehiculos insert on "informix"
    .ing_asi_vehiculos referencing new as luego
    for each row
        (
        insert into "informix".aud_ing_asi_vehiculos (asiveh_codigo,
    asiveh_proyecto,asiveh_vehiculo,asiveh_fecha_inicio,asiveh_fecha_fin,
    asiveh_situacion,desp_asiveh_codigo,desp_asiveh_proyecto,desp_asiveh_vehiculo,
    desp_asiveh_fecha_inicio,desp_asiveh_fecha_fin,desp_asiveh_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.asiveh_codigo 
    ,luego.asiveh_proyecto ,luego.asiveh_vehiculo ,luego.asiveh_fecha_inicio 
    ,luego.asiveh_fecha_fin ,luego.asiveh_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_ing_asi_vehiculos delete on "informix"
    .ing_asi_vehiculos referencing old as antes
    for each row
        (
        insert into "informix".aud_ing_asi_vehiculos (asiveh_codigo,
    asiveh_proyecto,asiveh_vehiculo,asiveh_fecha_inicio,asiveh_fecha_fin,
    asiveh_situacion,desp_asiveh_codigo,desp_asiveh_proyecto,desp_asiveh_vehiculo,
    desp_asiveh_fecha_inicio,desp_asiveh_fecha_fin,desp_asiveh_situacion,
    accion,usuario,hora)  values (antes.asiveh_codigo ,antes.asiveh_proyecto 
    ,antes.asiveh_vehiculo ,antes.asiveh_fecha_inicio ,antes.asiveh_fecha_fin 
    ,antes.asiveh_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_ing_asi_vehiculos update on "informix"
    .ing_asi_vehiculos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ing_asi_vehiculos (asiveh_codigo,
    asiveh_proyecto,asiveh_vehiculo,asiveh_fecha_inicio,asiveh_fecha_fin,
    asiveh_situacion,desp_asiveh_codigo,desp_asiveh_proyecto,desp_asiveh_vehiculo,
    desp_asiveh_fecha_inicio,desp_asiveh_fecha_fin,desp_asiveh_situacion,
    accion,usuario,hora)  values (antes.asiveh_codigo ,antes.asiveh_proyecto 
    ,antes.asiveh_vehiculo ,antes.asiveh_fecha_inicio ,antes.asiveh_fecha_fin 
    ,antes.asiveh_situacion ,luego.asiveh_codigo ,luego.asiveh_proyecto 
    ,luego.asiveh_vehiculo ,luego.asiveh_fecha_inicio ,luego.asiveh_fecha_fin 
    ,luego.asiveh_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_ing_avances insert on "informix"
    .ing_avances referencing new as luego
    for each row
        (
        insert into "informix".aud_ing_avances (avan_codigo,avan_fecha,
    avan_tramo,avan_subrenglon,avan_avance,avan_medida,desp_avan_codigo,
    desp_avan_fecha,desp_avan_tramo,desp_avan_subrenglon,desp_avan_avance,
    desp_avan_medida,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,
    '' ,luego.avan_codigo ,luego.avan_fecha ,luego.avan_tramo ,luego.avan_subrenglon 
    ,luego.avan_avance ,luego.avan_medida ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_ing_avances delete on "informix"
    .ing_avances referencing old as antes
    for each row
        (
        insert into "informix".aud_ing_avances (avan_codigo,avan_fecha,
    avan_tramo,avan_subrenglon,avan_avance,avan_medida,desp_avan_codigo,
    desp_avan_fecha,desp_avan_tramo,desp_avan_subrenglon,desp_avan_avance,
    desp_avan_medida,accion,usuario,hora)  values (antes.avan_codigo 
    ,antes.avan_fecha ,antes.avan_tramo ,antes.avan_subrenglon ,antes.avan_avance 
    ,antes.avan_medida ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_ing_avances update on "informix"
    .ing_avances referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ing_avances (avan_codigo,avan_fecha,
    avan_tramo,avan_subrenglon,avan_avance,avan_medida,desp_avan_codigo,
    desp_avan_fecha,desp_avan_tramo,desp_avan_subrenglon,desp_avan_avance,
    desp_avan_medida,accion,usuario,hora)  values (antes.avan_codigo 
    ,antes.avan_fecha ,antes.avan_tramo ,antes.avan_subrenglon ,antes.avan_avance 
    ,antes.avan_medida ,luego.avan_codigo ,luego.avan_fecha ,luego.avan_tramo 
    ,luego.avan_subrenglon ,luego.avan_avance ,luego.avan_medida ,'U' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ing_hist_maquinas insert on "informix"
    .ing_hist_maquinas referencing new as luego
    for each row
        (
        insert into "informix".aud_ing_hist_maquinas (hisma_codigo,
    hisma_maquina,hisma_fecha,hisma_htrab,hisma_hhombre,hisma_combustible,
    hisma_cph,hisma_hinicio,hisma_hfinal,hisma_proyecto,desp_hisma_codigo,
    desp_hisma_maquina,desp_hisma_fecha,desp_hisma_htrab,desp_hisma_hhombre,
    desp_hisma_combustible,desp_hisma_cph,desp_hisma_hinicio,desp_hisma_hfinal,
    desp_hisma_proyecto,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,luego.hisma_codigo ,luego.hisma_maquina ,luego.hisma_fecha 
    ,luego.hisma_htrab ,luego.hisma_hhombre ,luego.hisma_combustible 
    ,luego.hisma_cph ,luego.hisma_hinicio ,luego.hisma_hfinal ,luego.hisma_proyecto 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ing_hist_maquinas delete on "informix"
    .ing_hist_maquinas referencing old as antes
    for each row
        (
        insert into "informix".aud_ing_hist_maquinas (hisma_codigo,
    hisma_maquina,hisma_fecha,hisma_htrab,hisma_hhombre,hisma_combustible,
    hisma_cph,hisma_hinicio,hisma_hfinal,hisma_proyecto,desp_hisma_codigo,
    desp_hisma_maquina,desp_hisma_fecha,desp_hisma_htrab,desp_hisma_hhombre,
    desp_hisma_combustible,desp_hisma_cph,desp_hisma_hinicio,desp_hisma_hfinal,
    desp_hisma_proyecto,accion,usuario,hora)  values (antes.hisma_codigo 
    ,antes.hisma_maquina ,antes.hisma_fecha ,antes.hisma_htrab ,antes.hisma_hhombre 
    ,antes.hisma_combustible ,antes.hisma_cph ,antes.hisma_hinicio ,antes.hisma_hfinal 
    ,antes.hisma_proyecto ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_ing_hist_maquinas update on "informix"
    .ing_hist_maquinas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ing_hist_maquinas (hisma_codigo,
    hisma_maquina,hisma_fecha,hisma_htrab,hisma_hhombre,hisma_combustible,
    hisma_cph,hisma_hinicio,hisma_hfinal,hisma_proyecto,desp_hisma_codigo,
    desp_hisma_maquina,desp_hisma_fecha,desp_hisma_htrab,desp_hisma_hhombre,
    desp_hisma_combustible,desp_hisma_cph,desp_hisma_hinicio,desp_hisma_hfinal,
    desp_hisma_proyecto,accion,usuario,hora)  values (antes.hisma_codigo 
    ,antes.hisma_maquina ,antes.hisma_fecha ,antes.hisma_htrab ,antes.hisma_hhombre 
    ,antes.hisma_combustible ,antes.hisma_cph ,antes.hisma_hinicio ,antes.hisma_hfinal 
    ,antes.hisma_proyecto ,luego.hisma_codigo ,luego.hisma_maquina ,luego.hisma_fecha 
    ,luego.hisma_htrab ,luego.hisma_hhombre ,luego.hisma_combustible 
    ,luego.hisma_cph ,luego.hisma_hinicio ,luego.hisma_hfinal ,luego.hisma_proyecto 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ing_hist_vehiculos insert on "informix"
    .ing_hist_vehiculos referencing new as luego
    for each row
        (
        insert into "informix".aud_ing_hist_vehiculos (hisve_codigo,
    hisve_vehiculo,hisve_fecha,hisve_kreco,hisve_htrab,hisve_hhombre,
    hisve_combustible,hisve_cph,hisve_hinicio,hisve_hfinal,hisve_proyecto,
    desp_hisve_codigo,desp_hisve_vehiculo,desp_hisve_fecha,desp_hisve_kreco,
    desp_hisve_htrab,desp_hisve_hhombre,desp_hisve_combustible,desp_hisve_cph,
    desp_hisve_hinicio,desp_hisve_hfinal,desp_hisve_proyecto,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.hisve_codigo 
    ,luego.hisve_vehiculo ,luego.hisve_fecha ,luego.hisve_kreco ,luego.hisve_htrab 
    ,luego.hisve_hhombre ,luego.hisve_combustible ,luego.hisve_cph ,luego.hisve_hinicio 
    ,luego.hisve_hfinal ,luego.hisve_proyecto ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_ing_hist_vehiculos delete on "informix"
    .ing_hist_vehiculos referencing old as antes
    for each row
        (
        insert into "informix".aud_ing_hist_vehiculos (hisve_codigo,
    hisve_vehiculo,hisve_fecha,hisve_kreco,hisve_htrab,hisve_hhombre,
    hisve_combustible,hisve_cph,hisve_hinicio,hisve_hfinal,hisve_proyecto,
    desp_hisve_codigo,desp_hisve_vehiculo,desp_hisve_fecha,desp_hisve_kreco,
    desp_hisve_htrab,desp_hisve_hhombre,desp_hisve_combustible,desp_hisve_cph,
    desp_hisve_hinicio,desp_hisve_hfinal,desp_hisve_proyecto,accion,usuario,
    hora)  values (antes.hisve_codigo ,antes.hisve_vehiculo ,antes.hisve_fecha 
    ,antes.hisve_kreco ,antes.hisve_htrab ,antes.hisve_hhombre ,antes.hisve_combustible 
    ,antes.hisve_cph ,antes.hisve_hinicio ,antes.hisve_hfinal ,antes.hisve_proyecto 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_ing_hist_vehiculos update on "informix"
    .ing_hist_vehiculos referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_ing_hist_vehiculos (hisve_codigo,
    hisve_vehiculo,hisve_fecha,hisve_kreco,hisve_htrab,hisve_hhombre,
    hisve_combustible,hisve_cph,hisve_hinicio,hisve_hfinal,hisve_proyecto,
    desp_hisve_codigo,desp_hisve_vehiculo,desp_hisve_fecha,desp_hisve_kreco,
    desp_hisve_htrab,desp_hisve_hhombre,desp_hisve_combustible,desp_hisve_cph,
    desp_hisve_hinicio,desp_hisve_hfinal,desp_hisve_proyecto,accion,usuario,
    hora)  values (antes.hisve_codigo ,antes.hisve_vehiculo ,antes.hisve_fecha 
    ,antes.hisve_kreco ,antes.hisve_htrab ,antes.hisve_hhombre ,antes.hisve_combustible 
    ,antes.hisve_cph ,antes.hisve_hinicio ,antes.hisve_hfinal ,antes.hisve_proyecto 
    ,luego.hisve_codigo ,luego.hisve_vehiculo ,luego.hisve_fecha ,luego.hisve_kreco 
    ,luego.hisve_htrab ,luego.hisve_hhombre ,luego.hisve_combustible 
    ,luego.hisve_cph ,luego.hisve_hinicio ,luego.hisve_hfinal ,luego.hisve_proyecto 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ing_renglones insert on "informix"
    .ing_renglones referencing new as luego
    for each row
        (
        insert into "informix".aud_ing_renglones (ren_codigo,
    ren_descripcion,ren_observacion,ren_situacion,desp_ren_codigo,desp_ren_descripcion,
    desp_ren_observacion,desp_ren_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,luego.ren_codigo ,luego.ren_descripcion ,luego.ren_observacion 
    ,luego.ren_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ing_renglones delete on "informix"
    .ing_renglones referencing old as antes
    for each row
        (
        insert into "informix".aud_ing_renglones (ren_codigo,
    ren_descripcion,ren_observacion,ren_situacion,desp_ren_codigo,desp_ren_descripcion,
    desp_ren_observacion,desp_ren_situacion,accion,usuario,hora)  values 
    (antes.ren_codigo ,antes.ren_descripcion ,antes.ren_observacion ,
    antes.ren_situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_ing_renglones update on "informix"
    .ing_renglones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ing_renglones (ren_codigo,
    ren_descripcion,ren_observacion,ren_situacion,desp_ren_codigo,desp_ren_descripcion,
    desp_ren_observacion,desp_ren_situacion,accion,usuario,hora)  values 
    (antes.ren_codigo ,antes.ren_descripcion ,antes.ren_observacion ,
    antes.ren_situacion ,luego.ren_codigo ,luego.ren_descripcion ,luego.ren_observacion 
    ,luego.ren_situacion ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ing_subrenglones insert on "informix"
    .ing_subrenglones referencing new as luego
    for each row
        (
        insert into "informix".aud_ing_subrenglones (subr_codigo,
    subr_descripcion,subr_medida,subr_observacion,subr_situacion,desp_subr_codigo,
    desp_subr_descripcion,desp_subr_medida,desp_subr_observacion,desp_subr_situacion,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,'' ,NULL ,luego.subr_codigo 
    ,luego.subr_descripcion ,luego.subr_medida ,luego.subr_observacion 
    ,luego.subr_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ing_subrenglones delete on "informix"
    .ing_subrenglones referencing old as antes
    for each row
        (
        insert into "informix".aud_ing_subrenglones (subr_codigo,
    subr_descripcion,subr_medida,subr_observacion,subr_situacion,desp_subr_codigo,
    desp_subr_descripcion,desp_subr_medida,desp_subr_observacion,desp_subr_situacion,
    accion,usuario,hora)  values (antes.subr_codigo ,antes.subr_descripcion 
    ,antes.subr_medida ,antes.subr_observacion ,antes.subr_situacion 
    ,NULL ,NULL ,NULL ,'' ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_ing_subrenglones update on "informix"
    .ing_subrenglones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ing_subrenglones (subr_codigo,
    subr_descripcion,subr_medida,subr_observacion,subr_situacion,desp_subr_codigo,
    desp_subr_descripcion,desp_subr_medida,desp_subr_observacion,desp_subr_situacion,
    accion,usuario,hora)  values (antes.subr_codigo ,antes.subr_descripcion 
    ,antes.subr_medida ,antes.subr_observacion ,antes.subr_situacion 
    ,luego.subr_codigo ,luego.subr_descripcion ,luego.subr_medida ,luego.subr_observacion 
    ,luego.subr_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ing_maq_servicios insert on "informix"
    .ing_maq_servicios referencing new as luego
    for each row
        (
        insert into "informix".aud_ing_maq_servicios (mser_codigo,
    mser_maquina,mser_fecha,mser_horometro,mser_situacion,mser_observacion,
    desp_mser_codigo,desp_mser_maquina,desp_mser_fecha,desp_mser_horometro,
    desp_mser_situacion,desp_mser_observacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,luego.mser_codigo ,luego.mser_maquina ,luego.mser_fecha 
    ,luego.mser_horometro ,luego.mser_situacion ,luego.mser_observacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ing_maq_servicios delete on "informix"
    .ing_maq_servicios referencing old as antes
    for each row
        (
        insert into "informix".aud_ing_maq_servicios (mser_codigo,
    mser_maquina,mser_fecha,mser_horometro,mser_situacion,mser_observacion,
    desp_mser_codigo,desp_mser_maquina,desp_mser_fecha,desp_mser_horometro,
    desp_mser_situacion,desp_mser_observacion,accion,usuario,hora)  values 
    (antes.mser_codigo ,antes.mser_maquina ,antes.mser_fecha ,antes.mser_horometro 
    ,antes.mser_situacion ,antes.mser_observacion ,NULL ,'' ,'' ,'' ,'' ,
    '' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ing_maq_servicios update on "informix"
    .ing_maq_servicios referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ing_maq_servicios (mser_codigo,
    mser_maquina,mser_fecha,mser_horometro,mser_situacion,mser_observacion,
    desp_mser_codigo,desp_mser_maquina,desp_mser_fecha,desp_mser_horometro,
    desp_mser_situacion,desp_mser_observacion,accion,usuario,hora)  values 
    (antes.mser_codigo ,antes.mser_maquina ,antes.mser_fecha ,antes.mser_horometro 
    ,antes.mser_situacion ,antes.mser_observacion ,luego.mser_codigo 
    ,luego.mser_maquina ,luego.mser_fecha ,luego.mser_horometro ,luego.mser_situacion 
    ,luego.mser_observacion ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_ing_proyecto insert on "informix"
    .ing_proyecto referencing new as luego
    for each row
        (
        insert into "informix".aud_ing_proyecto (pro_codigo,pro_nombre,
    pro_ubicacion,pro_fecha_despliegue,pro_fecha_final,pro_fecha_real,
    pro_personal,pro_latitud,pro_longitud,pro_of_encargado,pro_grado_encargado,
    pro_num_encargado,pro_situacion,desp_pro_codigo,desp_pro_nombre,desp_pro_ubicacion,
    desp_pro_fecha_despliegue,desp_pro_fecha_final,desp_pro_fecha_real,
    desp_pro_personal,desp_pro_latitud,desp_pro_longitud,desp_pro_of_encargado,
    desp_pro_grado_encargado,desp_pro_num_encargado,desp_pro_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,luego.pro_codigo ,luego.pro_nombre ,luego.pro_ubicacion ,luego.pro_fecha_despliegue 
    ,luego.pro_fecha_final ,luego.pro_fecha_real ,luego.pro_personal 
    ,luego.pro_latitud ,luego.pro_longitud ,luego.pro_of_encargado ,luego.pro_grado_encargado 
    ,luego.pro_num_encargado ,luego.pro_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_ing_proyecto update on "informix"
    .ing_proyecto referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ing_proyecto (pro_codigo,pro_nombre,
    pro_ubicacion,pro_fecha_despliegue,pro_fecha_final,pro_fecha_real,
    pro_personal,pro_latitud,pro_longitud,pro_of_encargado,pro_grado_encargado,
    pro_num_encargado,pro_situacion,desp_pro_codigo,desp_pro_nombre,desp_pro_ubicacion,
    desp_pro_fecha_despliegue,desp_pro_fecha_final,desp_pro_fecha_real,
    desp_pro_personal,desp_pro_latitud,desp_pro_longitud,desp_pro_of_encargado,
    desp_pro_grado_encargado,desp_pro_num_encargado,desp_pro_situacion,
    accion,usuario,hora)  values (antes.pro_codigo ,antes.pro_nombre 
    ,antes.pro_ubicacion ,antes.pro_fecha_despliegue ,antes.pro_fecha_final 
    ,antes.pro_fecha_real ,antes.pro_personal ,antes.pro_latitud ,antes.pro_longitud 
    ,antes.pro_of_encargado ,antes.pro_grado_encargado ,antes.pro_num_encargado 
    ,antes.pro_situacion ,luego.pro_codigo ,luego.pro_nombre ,luego.pro_ubicacion 
    ,luego.pro_fecha_despliegue ,luego.pro_fecha_final ,luego.pro_fecha_real 
    ,luego.pro_personal ,luego.pro_latitud ,luego.pro_longitud ,luego.pro_of_encargado 
    ,luego.pro_grado_encargado ,luego.pro_num_encargado ,luego.pro_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ing_proyecto delete on "informix"
    .ing_proyecto referencing old as antes
    for each row
        (
        insert into "informix".aud_ing_proyecto (pro_codigo,pro_nombre,
    pro_ubicacion,pro_fecha_despliegue,pro_fecha_final,pro_fecha_real,
    pro_personal,pro_latitud,pro_longitud,pro_of_encargado,pro_grado_encargado,
    pro_num_encargado,pro_situacion,desp_pro_codigo,desp_pro_nombre,desp_pro_ubicacion,
    desp_pro_fecha_despliegue,desp_pro_fecha_final,desp_pro_fecha_real,
    desp_pro_personal,desp_pro_latitud,desp_pro_longitud,desp_pro_of_encargado,
    desp_pro_grado_encargado,desp_pro_num_encargado,desp_pro_situacion,
    accion,usuario,hora)  values (antes.pro_codigo ,antes.pro_nombre 
    ,antes.pro_ubicacion ,antes.pro_fecha_real ,antes.pro_personal ,antes.pro_fecha_despliegue 
    ,antes.pro_fecha_final ,antes.pro_latitud ,antes.pro_longitud ,antes.pro_of_encargado 
    ,antes.pro_grado_encargado ,antes.pro_num_encargado ,antes.pro_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_ing_veh_servicios insert on "informix"
    .ing_veh_servicios referencing new as luego
    for each row
        (
        insert into "informix".aud_ing_veh_servicios (ivser_codigo,
    ivser_vehiculo,ivser_fecha,ivser_odometro,isver_situacion,isver_observacion,
    desp_ivser_codigo,desp_ivser_vehiculo,desp_ivser_fecha,desp_ivser_odometro,
    desp_isver_situacion,desp_isver_observacion,accion,usuario,hora) 
     values (NULL ,NULL ,'' ,NULL ,'' ,'' ,luego.ivser_codigo ,luego.ivser_vehiculo 
    ,luego.ivser_fecha ,luego.ivser_odometro ,luego.isver_situacion ,
    luego.isver_observacion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_ing_veh_servicios delete on "informix"
    .ing_veh_servicios referencing old as antes
    for each row
        (
        insert into "informix".aud_ing_veh_servicios (ivser_codigo,
    ivser_vehiculo,ivser_fecha,ivser_odometro,isver_situacion,isver_observacion,
    desp_ivser_codigo,desp_ivser_vehiculo,desp_ivser_fecha,desp_ivser_odometro,
    desp_isver_situacion,desp_isver_observacion,accion,usuario,hora) 
     values (antes.ivser_codigo ,antes.ivser_vehiculo ,antes.ivser_fecha 
    ,antes.ivser_odometro ,antes.isver_situacion ,antes.isver_observacion 
    ,NULL ,NULL ,'' ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_ing_veh_servicios update on "informix"
    .ing_veh_servicios referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ing_veh_servicios (ivser_codigo,
    ivser_vehiculo,ivser_fecha,ivser_odometro,isver_situacion,isver_observacion,
    desp_ivser_codigo,desp_ivser_vehiculo,desp_ivser_fecha,desp_ivser_odometro,
    desp_isver_situacion,desp_isver_observacion,accion,usuario,hora) 
     values (antes.ivser_codigo ,antes.ivser_vehiculo ,antes.ivser_fecha 
    ,antes.ivser_odometro ,antes.isver_situacion ,antes.isver_observacion 
    ,luego.ivser_codigo ,luego.ivser_vehiculo ,luego.ivser_fecha ,luego.ivser_odometro 
    ,luego.isver_situacion ,luego.isver_observacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_historial_relestcivil insert on 
    "informix".historial_relestcivil referencing new as luego
    for each row
        (
        insert into "informix".aud_historial_relestcivil (his_id,
    his_catalogo,his_religion,his_fecha,desp_his_id,desp_his_catalogo,
    desp_his_religion,desp_his_fecha,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,luego.his_id ,luego.his_catalogo ,luego.his_religion ,luego.his_fecha 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_historial_relestcivil delete on 
    "informix".historial_relestcivil referencing old as antes
    for each row
        (
        insert into "informix".aud_historial_relestcivil (his_id,
    his_catalogo,his_religion,his_fecha,desp_his_id,desp_his_catalogo,
    desp_his_religion,desp_his_fecha,accion,usuario,hora)  values (antes.his_id 
    ,antes.his_catalogo ,antes.his_religion ,antes.his_fecha ,NULL ,''
     ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_historial_relestcivil update on 
    "informix".historial_relestcivil referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_historial_relestcivil (his_id,
    his_catalogo,his_religion,his_fecha,desp_his_id,desp_his_catalogo,
    desp_his_religion,desp_his_fecha,accion,usuario,hora)  values (antes.his_id 
    ,antes.his_catalogo ,antes.his_religion ,antes.his_fecha ,luego.his_id 
    ,luego.his_catalogo ,luego.his_religion ,luego.his_fecha ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_religion_personal insert on "informix"
    .religion_personal referencing new as luego
    for each row
        (
        insert into "informix".aud_religion_personal (rel_id,
    rel_catalogo,rel_religion,rel_fecha,rel_situacion,desp_rel_id,desp_rel_catalogo,
    desp_rel_religion,desp_rel_fecha,desp_rel_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.rel_id ,luego.rel_catalogo 
    ,luego.rel_religion ,luego.rel_fecha ,luego.rel_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_religion_personal delete on "informix"
    .religion_personal referencing old as antes
    for each row
        (
        insert into "informix".aud_religion_personal (rel_id,
    rel_catalogo,rel_religion,rel_fecha,rel_situacion,desp_rel_id,desp_rel_catalogo,
    desp_rel_religion,desp_rel_fecha,desp_rel_situacion,accion,usuario,
    hora)  values (antes.rel_id ,antes.rel_catalogo ,antes.rel_religion 
    ,antes.rel_fecha ,antes.rel_situacion ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_religion_personal update on "informix"
    .religion_personal referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_religion_personal (rel_id,
    rel_catalogo,rel_religion,rel_fecha,rel_situacion,desp_rel_id,desp_rel_catalogo,
    desp_rel_religion,desp_rel_fecha,desp_rel_situacion,accion,usuario,
    hora)  values (antes.rel_id ,antes.rel_catalogo ,antes.rel_religion 
    ,antes.rel_fecha ,antes.rel_situacion ,luego.rel_id ,luego.rel_catalogo 
    ,luego.rel_religion ,luego.rel_fecha ,luego.rel_situacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_eva_factores insert on "informix"
    .eva_factores referencing new as luego
    for each row
        (
        insert into "informix".aud_eva_factores (fac_id,fac_desc_lg,
    fac_situacion,desp_fac_id,desp_fac_desc_lg,desp_fac_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.fac_id ,luego.fac_desc_lg 
    ,luego.fac_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_eva_factores delete on "informix"
    .eva_factores referencing old as antes
    for each row
        (
        insert into "informix".aud_eva_factores (fac_id,fac_desc_lg,
    fac_situacion,desp_fac_id,desp_fac_desc_lg,desp_fac_situacion,accion,
    usuario,hora)  values (antes.fac_id ,antes.fac_desc_lg ,antes.fac_situacion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_eva_factores update on "informix"
    .eva_factores referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eva_factores (fac_id,fac_desc_lg,
    fac_situacion,desp_fac_id,desp_fac_desc_lg,desp_fac_situacion,accion,
    usuario,hora)  values (antes.fac_id ,antes.fac_desc_lg ,antes.fac_situacion 
    ,luego.fac_id ,luego.fac_desc_lg ,luego.fac_situacion ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_eva_linea insert on "informix".eva_linea 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_eva_linea (lin_id,lin_desc_lg,
    lin_situacion,desp_lin_id,desp_lin_desc_lg,desp_lin_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.lin_id ,luego.lin_desc_lg 
    ,luego.lin_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_eva_linea delete on "informix".eva_linea 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_eva_linea (lin_id,lin_desc_lg,
    lin_situacion,desp_lin_id,desp_lin_desc_lg,desp_lin_situacion,accion,
    usuario,hora)  values (antes.lin_id ,antes.lin_desc_lg ,antes.lin_situacion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_eva_linea update on "informix".eva_linea 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eva_linea (lin_id,lin_desc_lg,
    lin_situacion,desp_lin_id,desp_lin_desc_lg,desp_lin_situacion,accion,
    usuario,hora)  values (antes.lin_id ,antes.lin_desc_lg ,antes.lin_situacion 
    ,luego.lin_id ,luego.lin_desc_lg ,luego.lin_situacion ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".act_eva_evaluacion update on "informix"
    .eva_evaluacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eva_evaluacion (eva_id,eva_periodo,
    eva_renglon,eva_linea,eva_dest_actual,eva_cat1,eva_cat2,eva_cat3,
    eva_arma1,eva_arma2,eva_arma3,eva_grado1,eva_grado2,eva_grado3,eva_empleo1,
    eva_empleo2,eva_empleo3,eva_tiempo1,eva_tiempo2,eva_tiempo3,eva_emp_ant,
    eva_situacion,eva_obs_inm,eva_obs_final,eva_dep,eva_obs,eva_usuario,
    eva_fecha_aprov,desp_eva_id,desp_eva_periodo,desp_eva_renglon,desp_eva_linea,
    desp_eva_dest_actual,desp_eva_cat1,desp_eva_cat2,desp_eva_cat3,desp_eva_arma1,
    desp_eva_arma2,desp_eva_arma3,desp_eva_grado1,desp_eva_grado2,desp_eva_grado3,
    desp_eva_empleo1,desp_eva_empleo2,desp_eva_empleo3,desp_eva_tiempo1,
    desp_eva_tiempo2,desp_eva_tiempo3,desp_eva_emp_ant,desp_eva_situacion,
    desp_eva_obs_inm,desp_eva_obs_final,desp_eva_dep,desp_eva_obs,desp_eva_usuario,
    desp_eva_fecha_aprov,accion,usuario,hora)  values (antes.eva_id ,
    antes.eva_periodo ,antes.eva_renglon ,antes.eva_linea ,antes.eva_dest_actual 
    ,antes.eva_cat1 ,antes.eva_cat2 ,antes.eva_cat3 ,antes.eva_arma1 
    ,antes.eva_arma2 ,antes.eva_arma3 ,antes.eva_grado1 ,antes.eva_grado2 
    ,antes.eva_grado3 ,antes.eva_empleo1 ,antes.eva_empleo2 ,antes.eva_empleo3 
    ,antes.eva_tiempo1 ,antes.eva_tiempo2 ,antes.eva_tiempo3 ,antes.eva_emp_ant 
    ,antes.eva_situacion ,antes.eva_obs_inm ,antes.eva_obs_final ,antes.eva_dep 
    ,antes.eva_obs ,antes.eva_usuario ,antes.eva_fecha_aprov ,luego.eva_id 
    ,luego.eva_periodo ,luego.eva_renglon ,luego.eva_linea ,luego.eva_dest_actual 
    ,luego.eva_cat1 ,luego.eva_cat2 ,luego.eva_cat3 ,luego.eva_arma1 
    ,luego.eva_arma2 ,luego.eva_arma3 ,luego.eva_grado1 ,luego.eva_grado2 
    ,luego.eva_grado3 ,luego.eva_empleo1 ,luego.eva_empleo2 ,luego.eva_empleo3 
    ,luego.eva_tiempo1 ,luego.eva_tiempo2 ,luego.eva_tiempo3 ,luego.eva_emp_ant 
    ,luego.eva_situacion ,luego.eva_obs_inm ,luego.eva_obs_final ,luego.eva_dep 
    ,luego.eva_obs ,luego.eva_usuario ,luego.eva_fecha_aprov ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_eva_evaluacion delete on "informix"
    .eva_evaluacion referencing old as antes
    for each row
        (
        insert into "informix".aud_eva_evaluacion (eva_id,eva_periodo,
    eva_renglon,eva_linea,eva_dest_actual,eva_cat1,eva_cat2,eva_cat3,
    eva_arma1,eva_arma2,eva_arma3,eva_grado1,eva_grado2,eva_grado3,eva_empleo1,
    eva_empleo2,eva_empleo3,eva_tiempo1,eva_tiempo2,eva_tiempo3,eva_emp_ant,
    eva_situacion,eva_obs_inm,eva_obs_final,eva_dep,eva_obs,eva_usuario,
    eva_fecha_aprov,desp_eva_id,desp_eva_periodo,desp_eva_renglon,desp_eva_linea,
    desp_eva_dest_actual,desp_eva_cat1,desp_eva_cat2,desp_eva_cat3,desp_eva_arma1,
    desp_eva_arma2,desp_eva_arma3,desp_eva_grado1,desp_eva_grado2,desp_eva_grado3,
    desp_eva_empleo1,desp_eva_empleo2,desp_eva_empleo3,desp_eva_tiempo1,
    desp_eva_tiempo2,desp_eva_tiempo3,desp_eva_emp_ant,desp_eva_situacion,
    desp_eva_obs_inm,desp_eva_obs_final,desp_eva_dep,desp_eva_obs,desp_eva_usuario,
    desp_eva_fecha_aprov,accion,usuario,hora)  values (antes.eva_id ,
    antes.eva_periodo ,antes.eva_renglon ,antes.eva_linea ,antes.eva_dest_actual 
    ,antes.eva_cat1 ,antes.eva_cat2 ,antes.eva_cat3 ,antes.eva_arma1 
    ,antes.eva_arma2 ,antes.eva_arma3 ,antes.eva_grado1 ,antes.eva_grado2 
    ,antes.eva_grado3 ,antes.eva_empleo1 ,antes.eva_empleo2 ,antes.eva_empleo3 
    ,antes.eva_tiempo1 ,antes.eva_tiempo2 ,antes.eva_tiempo3 ,antes.eva_emp_ant 
    ,antes.eva_situacion ,antes.eva_obs_inm ,antes.eva_obs_final ,antes.eva_dep 
    ,antes.eva_obs ,antes.eva_usuario ,antes.eva_fecha_aprov ,NULL ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_eva_evaluacion insert on "informix"
    .eva_evaluacion referencing new as luego
    for each row
        (
        insert into "informix".aud_eva_evaluacion (eva_id,eva_periodo,
    eva_renglon,eva_linea,eva_dest_actual,eva_cat1,eva_cat2,eva_cat3,
    eva_arma1,eva_arma2,eva_arma3,eva_grado1,eva_grado2,eva_grado3,eva_empleo1,
    eva_empleo2,eva_empleo3,eva_tiempo1,eva_tiempo2,eva_tiempo3,eva_emp_ant,
    eva_situacion,eva_obs_inm,eva_obs_final,eva_dep,eva_obs,eva_usuario,
    eva_fecha_aprov,desp_eva_id,desp_eva_periodo,desp_eva_renglon,desp_eva_linea,
    desp_eva_dest_actual,desp_eva_cat1,desp_eva_cat2,desp_eva_cat3,desp_eva_arma1,
    desp_eva_arma2,desp_eva_arma3,desp_eva_grado1,desp_eva_grado2,desp_eva_grado3,
    desp_eva_empleo1,desp_eva_empleo2,desp_eva_empleo3,desp_eva_tiempo1,
    desp_eva_tiempo2,desp_eva_tiempo3,desp_eva_emp_ant,desp_eva_situacion,
    desp_eva_obs_inm,desp_eva_obs_final,desp_eva_dep,desp_eva_obs,desp_eva_usuario,
    desp_eva_fecha_aprov,accion,usuario,hora)  values (NULL ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,luego.eva_id ,luego.eva_periodo ,luego.eva_renglon ,luego.eva_linea 
    ,luego.eva_dest_actual ,luego.eva_cat1 ,luego.eva_cat2 ,luego.eva_cat3 
    ,luego.eva_arma1 ,luego.eva_arma2 ,luego.eva_arma3 ,luego.eva_grado1 
    ,luego.eva_grado2 ,luego.eva_grado3 ,luego.eva_empleo1 ,luego.eva_empleo2 
    ,luego.eva_empleo3 ,luego.eva_tiempo1 ,luego.eva_tiempo2 ,luego.eva_tiempo3 
    ,luego.eva_emp_ant ,luego.eva_situacion ,luego.eva_obs_inm ,luego.eva_obs_final 
    ,luego.eva_dep ,luego.eva_obs ,luego.eva_usuario ,luego.eva_fecha_aprov 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_eva_notas insert on "informix".eva_notas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_eva_notas (not_id,not_factores,
    not_evaluacion,not_preg,not_nota,not_tipo,not_fecha,not_usuario,desp_not_id,
    desp_not_factores,desp_not_evaluacion,desp_not_preg,desp_not_nota,
    desp_not_tipo,desp_not_fecha,desp_not_usuario,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.not_id ,luego.not_factores 
    ,luego.not_evaluacion ,luego.not_preg ,luego.not_nota ,luego.not_tipo 
    ,luego.not_fecha ,luego.not_usuario ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_eva_notas delete on "informix".eva_notas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_eva_notas (not_id,not_factores,
    not_evaluacion,not_preg,not_nota,not_tipo,not_fecha,not_usuario,desp_not_id,
    desp_not_factores,desp_not_evaluacion,desp_not_preg,desp_not_nota,
    desp_not_tipo,desp_not_fecha,desp_not_usuario,accion,usuario,hora) 
     values (antes.not_id ,antes.not_factores ,antes.not_evaluacion ,
    antes.not_preg ,antes.not_nota ,antes.not_tipo ,antes.not_fecha ,
    antes.not_usuario ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_eva_notas update on "informix".eva_notas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eva_notas (not_id,not_factores,
    not_evaluacion,not_preg,not_nota,not_tipo,not_fecha,not_usuario,desp_not_id,
    desp_not_factores,desp_not_evaluacion,desp_not_preg,desp_not_nota,
    desp_not_tipo,desp_not_fecha,desp_not_usuario,accion,usuario,hora) 
     values (antes.not_id ,antes.not_factores ,antes.not_evaluacion ,
    antes.not_preg ,antes.not_nota ,antes.not_tipo ,antes.not_fecha ,
    antes.not_usuario ,luego.not_id ,luego.not_factores ,luego.not_evaluacion 
    ,luego.not_preg ,luego.not_nota ,luego.not_tipo ,luego.not_fecha 
    ,luego.not_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ing_maquinas insert on "informix"
    .ing_maquinas referencing new as luego
    for each row
        (
        insert into "informix".aud_ing_maquinas (maq_codigo,maq_no_asignacion,
    maq_catalogo,maq_placas,maq_tipo,maq_marca,maq_modelo,maq_no_motor,
    maq_no_chasis,maq_tonelaje,maq_color,maq_combustible,maq_estado,maq_situacion,
    maq_destino,maq_horometro,maq_observaciones,desp_maq_codigo,desp_maq_no_asignacion,
    desp_maq_catalogo,desp_maq_placas,desp_maq_tipo,desp_maq_marca,desp_maq_modelo,
    desp_maq_no_motor,desp_maq_no_chasis,desp_maq_tonelaje,desp_maq_color,
    desp_maq_combustible,desp_maq_estado,desp_maq_situacion,desp_maq_destino,
    desp_maq_horometro,desp_maq_observaciones,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.maq_codigo 
    ,luego.maq_no_asignacion ,luego.maq_catalogo ,luego.maq_placas ,luego.maq_tipo 
    ,luego.maq_marca ,luego.maq_modelo ,luego.maq_no_motor ,luego.maq_no_chasis 
    ,luego.maq_tonelaje ,luego.maq_color ,luego.maq_combustible ,luego.maq_estado 
    ,luego.maq_situacion ,luego.maq_destino ,luego.maq_horometro ,luego.maq_observaciones 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ing_ing_maquinas delete on "informix"
    .ing_maquinas referencing old as antes
    for each row
        (
        insert into "informix".aud_ing_maquinas (maq_codigo,maq_no_asignacion,
    maq_catalogo,maq_placas,maq_tipo,maq_marca,maq_modelo,maq_no_motor,
    maq_no_chasis,maq_tonelaje,maq_color,maq_combustible,maq_estado,maq_situacion,
    maq_destino,maq_horometro,maq_observaciones,desp_maq_codigo,desp_maq_no_asignacion,
    desp_maq_catalogo,desp_maq_placas,desp_maq_tipo,desp_maq_marca,desp_maq_modelo,
    desp_maq_no_motor,desp_maq_no_chasis,desp_maq_tonelaje,desp_maq_color,
    desp_maq_combustible,desp_maq_estado,desp_maq_situacion,desp_maq_destino,
    desp_maq_horometro,desp_maq_observaciones,accion,usuario,hora)  values 
    (antes.maq_codigo ,antes.maq_no_asignacion ,antes.maq_catalogo ,antes.maq_placas 
    ,antes.maq_tipo ,antes.maq_marca ,antes.maq_modelo ,antes.maq_no_motor 
    ,antes.maq_no_chasis ,antes.maq_tonelaje ,antes.maq_color ,antes.maq_combustible 
    ,antes.maq_estado ,antes.maq_situacion ,antes.maq_destino ,antes.maq_horometro 
    ,antes.maq_observaciones ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ing_maquinas update on "informix"
    .ing_maquinas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ing_maquinas (maq_codigo,maq_no_asignacion,
    maq_catalogo,maq_placas,maq_tipo,maq_marca,maq_modelo,maq_no_motor,
    maq_no_chasis,maq_tonelaje,maq_color,maq_combustible,maq_estado,maq_situacion,
    maq_destino,maq_horometro,maq_observaciones,desp_maq_codigo,desp_maq_no_asignacion,
    desp_maq_catalogo,desp_maq_placas,desp_maq_tipo,desp_maq_marca,desp_maq_modelo,
    desp_maq_no_motor,desp_maq_no_chasis,desp_maq_tonelaje,desp_maq_color,
    desp_maq_combustible,desp_maq_estado,desp_maq_situacion,desp_maq_destino,
    desp_maq_horometro,desp_maq_observaciones,accion,usuario,hora)  values 
    (antes.maq_codigo ,antes.maq_no_asignacion ,antes.maq_catalogo ,antes.maq_placas 
    ,antes.maq_tipo ,antes.maq_marca ,antes.maq_modelo ,antes.maq_no_motor 
    ,antes.maq_no_chasis ,antes.maq_tonelaje ,antes.maq_color ,antes.maq_combustible 
    ,antes.maq_estado ,antes.maq_situacion ,antes.maq_destino ,antes.maq_horometro 
    ,antes.maq_observaciones ,luego.maq_codigo ,luego.maq_no_asignacion 
    ,luego.maq_catalogo ,luego.maq_placas ,luego.maq_tipo ,luego.maq_marca 
    ,luego.maq_modelo ,luego.maq_no_motor ,luego.maq_no_chasis ,luego.maq_tonelaje 
    ,luego.maq_color ,luego.maq_combustible ,luego.maq_estado ,luego.maq_situacion 
    ,luego.maq_destino ,luego.maq_horometro ,luego.maq_observaciones 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ing_vehiculos insert on "informix"
    .ing_vehiculos referencing new as luego
    for each row
        (
        insert into "informix".aud_ing_vehiculos (iveh_codigo,
    iveh_no_asignacion,iveh_catalogo,iveh_placas,iveh_tipo,iveh_marca,
    iveh_modelo,iveh_no_motor,iveh_no_chasis,iveh_tonelaje,iveh_color,
    iveh_combustible,iveh_estado,iveh_situacion,iveh_destino,iveh_odometro,
    iveh_observaciones,desp_iveh_codigo,desp_iveh_no_asignacion,desp_iveh_catalogo,
    desp_iveh_placas,desp_iveh_tipo,desp_iveh_marca,desp_iveh_modelo,
    desp_iveh_no_motor,desp_iveh_no_chasis,desp_iveh_tonelaje,desp_iveh_color,
    desp_iveh_combustible,desp_iveh_estado,desp_iveh_situacion,desp_iveh_destino,
    desp_iveh_odometro,desp_iveh_observaciones,accion,usuario,hora)  
    values (NULL ,'' ,NULL ,'' ,NULL ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,NULL 
    ,'' ,'' ,'' ,NULL ,'' ,luego.iveh_codigo ,luego.iveh_no_asignacion ,luego.iveh_catalogo 
    ,luego.iveh_placas ,luego.iveh_tipo ,luego.iveh_marca ,luego.iveh_modelo 
    ,luego.iveh_no_motor ,luego.iveh_no_chasis ,luego.iveh_tonelaje ,
    luego.iveh_color ,luego.iveh_combustible ,luego.iveh_estado ,luego.iveh_situacion 
    ,luego.iveh_destino ,luego.iveh_odometro ,luego.iveh_observaciones 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ing_vehiculos delete on "informix"
    .ing_vehiculos referencing old as antes
    for each row
        (
        insert into "informix".aud_ing_vehiculos (iveh_codigo,
    iveh_no_asignacion,iveh_catalogo,iveh_placas,iveh_tipo,iveh_marca,
    iveh_modelo,iveh_no_motor,iveh_no_chasis,iveh_tonelaje,iveh_color,
    iveh_combustible,iveh_estado,iveh_situacion,iveh_destino,iveh_odometro,
    iveh_observaciones,desp_iveh_codigo,desp_iveh_no_asignacion,desp_iveh_catalogo,
    desp_iveh_placas,desp_iveh_tipo,desp_iveh_marca,desp_iveh_modelo,
    desp_iveh_no_motor,desp_iveh_no_chasis,desp_iveh_tonelaje,desp_iveh_color,
    desp_iveh_combustible,desp_iveh_estado,desp_iveh_situacion,desp_iveh_destino,
    desp_iveh_odometro,desp_iveh_observaciones,accion,usuario,hora)  
    values (antes.iveh_codigo ,antes.iveh_no_asignacion ,antes.iveh_catalogo 
    ,antes.iveh_placas ,antes.iveh_tipo ,antes.iveh_marca ,antes.iveh_modelo 
    ,antes.iveh_no_motor ,antes.iveh_no_chasis ,antes.iveh_tonelaje ,
    antes.iveh_color ,antes.iveh_combustible ,antes.iveh_estado ,antes.iveh_situacion 
    ,antes.iveh_destino ,antes.iveh_odometro ,antes.iveh_observaciones 
    ,NULL ,'' ,NULL ,'' ,NULL ,NULL ,NULL ,'' ,'' ,NULL ,NULL ,NULL ,'' ,''
     ,'' ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ing_vehiculos update on "informix"
    .ing_vehiculos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ing_vehiculos (iveh_codigo,
    iveh_no_asignacion,iveh_catalogo,iveh_placas,iveh_tipo,iveh_marca,
    iveh_modelo,iveh_no_motor,iveh_no_chasis,iveh_tonelaje,iveh_color,
    iveh_combustible,iveh_estado,iveh_situacion,iveh_destino,iveh_odometro,
    iveh_observaciones,desp_iveh_codigo,desp_iveh_no_asignacion,desp_iveh_catalogo,
    desp_iveh_placas,desp_iveh_tipo,desp_iveh_marca,desp_iveh_modelo,
    desp_iveh_no_motor,desp_iveh_no_chasis,desp_iveh_tonelaje,desp_iveh_color,
    desp_iveh_combustible,desp_iveh_estado,desp_iveh_situacion,desp_iveh_destino,
    desp_iveh_odometro,desp_iveh_observaciones,accion,usuario,hora)  
    values (antes.iveh_codigo ,antes.iveh_no_asignacion ,antes.iveh_catalogo 
    ,antes.iveh_placas ,antes.iveh_tipo ,antes.iveh_marca ,antes.iveh_modelo 
    ,antes.iveh_no_motor ,antes.iveh_no_chasis ,antes.iveh_tonelaje ,
    antes.iveh_color ,antes.iveh_combustible ,antes.iveh_estado ,antes.iveh_situacion 
    ,antes.iveh_destino ,antes.iveh_odometro ,antes.iveh_observaciones 
    ,luego.iveh_codigo ,luego.iveh_no_asignacion ,luego.iveh_catalogo 
    ,luego.iveh_placas ,luego.iveh_tipo ,luego.iveh_marca ,luego.iveh_modelo 
    ,luego.iveh_no_motor ,luego.iveh_no_chasis ,luego.iveh_tonelaje ,
    luego.iveh_color ,luego.iveh_combustible ,luego.iveh_estado ,luego.iveh_situacion 
    ,luego.iveh_destino ,luego.iveh_odometro ,luego.iveh_observaciones 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_res_personal insert on "informix"
    .res_personal referencing new as luego
    for each row
        (
        insert into "informix".aud_res_personal (resper_catalogo,
    resper_dep,resper_plaza,resper_alta,resper_baja,resper_nom1,resper_nom2,
    resper_nom3,resper_ape1,resper_ape2,resper_ape3,resper_grado,resper_fechnac,
    resper_dpi,resper_fech_dpi,resper_mundpi,resper_lunac,resper_direccion,
    resper_tel1,resper_tel2,resper_dirtrajo,resper_estado,resper_sableer,
    resper_tpantalon,resper_tcamisa,resper_tbotas,resper_tgorra,resper_anio_apro,
    resper_profesion,resper_correo,resper_genero,resper_sangre,resper_situacion,
    resper_obs,desp_resper_catalogo,desp_resper_dep,desp_resper_plaza,
    desp_resper_alta,desp_resper_baja,desp_resper_nom1,desp_resper_nom2,
    desp_resper_nom3,desp_resper_ape1,desp_resper_ape2,desp_resper_ape3,
    desp_resper_grado,desp_resper_fechnac,desp_resper_dpi,desp_resper_fech_dpi,
    desp_resper_mundpi,desp_resper_lunac,desp_resper_direccion,desp_resper_tel1,
    desp_resper_tel2,desp_resper_dirtrajo,desp_resper_estado,desp_resper_sableer,
    desp_resper_tpantalon,desp_resper_tcamisa,desp_resper_tbotas,desp_resper_tgorra,
    desp_resper_anio_apro,desp_resper_profesion,desp_resper_correo,desp_resper_genero,
    desp_resper_sangre,desp_resper_situacion,desp_resper_obs,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.resper_catalogo 
    ,luego.resper_dep ,luego.resper_plaza ,luego.resper_alta ,luego.resper_baja 
    ,luego.resper_nom1 ,luego.resper_nom2 ,luego.resper_nom3 ,luego.resper_ape1 
    ,luego.resper_ape2 ,luego.resper_ape3 ,luego.resper_grado ,luego.resper_fechnac 
    ,luego.resper_dpi ,luego.resper_fech_dpi ,luego.resper_mundpi ,luego.resper_lunac 
    ,luego.resper_direccion ,luego.resper_tel1 ,luego.resper_tel2 ,luego.resper_dirtrajo 
    ,luego.resper_estado ,luego.resper_sableer ,luego.resper_tpantalon 
    ,luego.resper_tcamisa ,luego.resper_tbotas ,luego.resper_tgorra ,
    luego.resper_anio_apro ,luego.resper_profesion ,luego.resper_correo 
    ,luego.resper_genero ,luego.resper_sangre ,luego.resper_situacion 
    ,luego.resper_obs ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_res_personal delete on "informix"
    .res_personal referencing old as antes
    for each row
        (
        insert into "informix".aud_res_personal (resper_catalogo,
    resper_dep,resper_plaza,resper_alta,resper_baja,resper_nom1,resper_nom2,
    resper_nom3,resper_ape1,resper_ape2,resper_ape3,resper_grado,resper_fechnac,
    resper_dpi,resper_fech_dpi,resper_mundpi,resper_lunac,resper_direccion,
    resper_tel1,resper_tel2,resper_dirtrajo,resper_estado,resper_sableer,
    resper_tpantalon,resper_tcamisa,resper_tbotas,resper_tgorra,resper_anio_apro,
    resper_profesion,resper_correo,resper_genero,resper_sangre,resper_situacion,
    resper_obs,desp_resper_catalogo,desp_resper_dep,desp_resper_plaza,
    desp_resper_alta,desp_resper_baja,desp_resper_nom1,desp_resper_nom2,
    desp_resper_nom3,desp_resper_ape1,desp_resper_ape2,desp_resper_ape3,
    desp_resper_grado,desp_resper_fechnac,desp_resper_dpi,desp_resper_fech_dpi,
    desp_resper_mundpi,desp_resper_lunac,desp_resper_direccion,desp_resper_tel1,
    desp_resper_tel2,desp_resper_dirtrajo,desp_resper_estado,desp_resper_sableer,
    desp_resper_tpantalon,desp_resper_tcamisa,desp_resper_tbotas,desp_resper_tgorra,
    desp_resper_anio_apro,desp_resper_profesion,desp_resper_correo,desp_resper_genero,
    desp_resper_sangre,desp_resper_situacion,desp_resper_obs,accion,usuario,
    hora)  values (antes.resper_catalogo ,antes.resper_dep ,antes.resper_plaza 
    ,antes.resper_alta ,antes.resper_baja ,antes.resper_nom1 ,antes.resper_nom2 
    ,antes.resper_nom3 ,antes.resper_ape1 ,antes.resper_ape2 ,antes.resper_ape3 
    ,antes.resper_grado ,antes.resper_fechnac ,antes.resper_dpi ,antes.resper_fech_dpi 
    ,antes.resper_mundpi ,antes.resper_lunac ,antes.resper_direccion 
    ,antes.resper_tel1 ,antes.resper_tel2 ,antes.resper_dirtrajo ,antes.resper_estado 
    ,antes.resper_sableer ,antes.resper_tpantalon ,antes.resper_tcamisa 
    ,antes.resper_tbotas ,antes.resper_tgorra ,antes.resper_anio_apro 
    ,antes.resper_profesion ,antes.resper_correo ,antes.resper_genero 
    ,antes.resper_sangre ,antes.resper_situacion ,antes.resper_obs ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_res_personal update on "informix"
    .res_personal referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_res_personal (resper_catalogo,
    resper_dep,resper_plaza,resper_alta,resper_baja,resper_nom1,resper_nom2,
    resper_nom3,resper_ape1,resper_ape2,resper_ape3,resper_grado,resper_fechnac,
    resper_dpi,resper_fech_dpi,resper_mundpi,resper_lunac,resper_direccion,
    resper_tel1,resper_tel2,resper_dirtrajo,resper_estado,resper_sableer,
    resper_tpantalon,resper_tcamisa,resper_tbotas,resper_tgorra,resper_anio_apro,
    resper_profesion,resper_correo,resper_genero,resper_sangre,resper_situacion,
    resper_obs,desp_resper_catalogo,desp_resper_dep,desp_resper_plaza,
    desp_resper_alta,desp_resper_baja,desp_resper_nom1,desp_resper_nom2,
    desp_resper_nom3,desp_resper_ape1,desp_resper_ape2,desp_resper_ape3,
    desp_resper_grado,desp_resper_fechnac,desp_resper_dpi,desp_resper_fech_dpi,
    desp_resper_mundpi,desp_resper_lunac,desp_resper_direccion,desp_resper_tel1,
    desp_resper_tel2,desp_resper_dirtrajo,desp_resper_estado,desp_resper_sableer,
    desp_resper_tpantalon,desp_resper_tcamisa,desp_resper_tbotas,desp_resper_tgorra,
    desp_resper_anio_apro,desp_resper_profesion,desp_resper_correo,desp_resper_genero,
    desp_resper_sangre,desp_resper_situacion,desp_resper_obs,accion,usuario,
    hora)  values (antes.resper_catalogo ,antes.resper_dep ,antes.resper_plaza 
    ,antes.resper_alta ,antes.resper_baja ,antes.resper_nom1 ,antes.resper_nom2 
    ,antes.resper_nom3 ,antes.resper_ape1 ,antes.resper_ape2 ,antes.resper_ape3 
    ,antes.resper_grado ,antes.resper_fechnac ,antes.resper_dpi ,antes.resper_fech_dpi 
    ,antes.resper_mundpi ,antes.resper_lunac ,antes.resper_direccion 
    ,antes.resper_tel1 ,antes.resper_tel2 ,antes.resper_dirtrajo ,antes.resper_estado 
    ,antes.resper_sableer ,antes.resper_tpantalon ,antes.resper_tcamisa 
    ,antes.resper_tbotas ,antes.resper_tgorra ,antes.resper_anio_apro 
    ,antes.resper_profesion ,antes.resper_correo ,antes.resper_genero 
    ,antes.resper_sangre ,antes.resper_situacion ,antes.resper_obs ,luego.resper_catalogo 
    ,luego.resper_dep ,luego.resper_plaza ,luego.resper_alta ,luego.resper_baja 
    ,luego.resper_nom1 ,luego.resper_nom2 ,luego.resper_nom3 ,luego.resper_ape1 
    ,luego.resper_ape2 ,luego.resper_ape3 ,luego.resper_grado ,luego.resper_fechnac 
    ,luego.resper_dpi ,luego.resper_fech_dpi ,luego.resper_mundpi ,luego.resper_lunac 
    ,luego.resper_direccion ,luego.resper_tel1 ,luego.resper_tel2 ,luego.resper_dirtrajo 
    ,luego.resper_estado ,luego.resper_sableer ,luego.resper_tpantalon 
    ,luego.resper_tcamisa ,luego.resper_tbotas ,luego.resper_tgorra ,
    luego.resper_anio_apro ,luego.resper_profesion ,luego.resper_correo 
    ,luego.resper_genero ,luego.resper_sangre ,luego.resper_situacion 
    ,luego.resper_obs ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_respafe insert on "informix".respafe 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_respafe (not_codigo,not_catalogo,
    not_fecha,not_tiempalta,not_nota,desp_not_codigo,desp_not_catalogo,
    desp_not_fecha,desp_not_tiempalta,desp_not_nota,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,luego.not_codigo ,luego.not_catalogo ,
    luego.not_fecha ,luego.not_tiempalta ,luego.not_nota ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_respafe delete on "informix".respafe 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_respafe (not_codigo,not_catalogo,
    not_fecha,not_tiempalta,not_nota,desp_not_codigo,desp_not_catalogo,
    desp_not_fecha,desp_not_tiempalta,desp_not_nota,accion,usuario,hora) 
     values (antes.not_codigo ,antes.not_catalogo ,antes.not_fecha ,antes.not_tiempalta 
    ,antes.not_nota ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_respafe update on "informix".respafe 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_respafe (not_codigo,not_catalogo,
    not_fecha,not_tiempalta,not_nota,desp_not_codigo,desp_not_catalogo,
    desp_not_fecha,desp_not_tiempalta,desp_not_nota,accion,usuario,hora) 
     values (antes.not_codigo ,antes.not_catalogo ,antes.not_fecha ,antes.not_tiempalta 
    ,antes.not_nota ,luego.not_codigo ,luego.not_catalogo ,luego.not_fecha 
    ,luego.not_tiempalta ,luego.not_nota ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_resascensos insert on "informix"
    .resascensos referencing new as luego
    for each row
        (
        insert into "informix".aud_resascensos (asc_codigo,asc_catalogo,
    asc_fech,asc_grado,desp_asc_codigo,desp_asc_catalogo,desp_asc_fech,
    desp_asc_grado,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.asc_codigo 
    ,luego.asc_catalogo ,luego.asc_fech ,luego.asc_grado ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_resascensos delete on "informix"
    .resascensos referencing old as antes
    for each row
        (
        insert into "informix".aud_resascensos (asc_codigo,asc_catalogo,
    asc_fech,asc_grado,desp_asc_codigo,desp_asc_catalogo,desp_asc_fech,
    desp_asc_grado,accion,usuario,hora)  values (antes.asc_codigo ,antes.asc_catalogo 
    ,antes.asc_fech ,antes.asc_grado ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_resascensos update on "informix"
    .resascensos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_resascensos (asc_codigo,asc_catalogo,
    asc_fech,asc_grado,desp_asc_codigo,desp_asc_catalogo,desp_asc_fech,
    desp_asc_grado,accion,usuario,hora)  values (antes.asc_codigo ,antes.asc_catalogo 
    ,antes.asc_fech ,antes.asc_grado ,luego.asc_codigo ,luego.asc_catalogo 
    ,luego.asc_fech ,luego.asc_grado ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_resdfam insert on "informix".resdfam 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_resdfam (resfam_codigo,resfam_catalogo,
    resfam_nom1,resfam_nom2,resfam_ape1,resfam_ape2,resfam_parentesco,
    resfam_genero,resfam_direccion,resfam_telefono,resfam_emergencia,
    desp_resfam_codigo,desp_resfam_catalogo,desp_resfam_nom1,desp_resfam_nom2,
    desp_resfam_ape1,desp_resfam_ape2,desp_resfam_parentesco,desp_resfam_genero,
    desp_resfam_direccion,desp_resfam_telefono,desp_resfam_emergencia,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,luego.resfam_codigo ,luego.resfam_catalogo ,luego.resfam_nom1 ,luego.resfam_nom2 
    ,luego.resfam_ape1 ,luego.resfam_ape2 ,luego.resfam_parentesco ,luego.resfam_genero 
    ,luego.resfam_direccion ,luego.resfam_telefono ,luego.resfam_emergencia 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_resdfam delete on "informix".resdfam 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_resdfam (resfam_codigo,resfam_catalogo,
    resfam_nom1,resfam_nom2,resfam_ape1,resfam_ape2,resfam_parentesco,
    resfam_genero,resfam_direccion,resfam_telefono,resfam_emergencia,
    desp_resfam_codigo,desp_resfam_catalogo,desp_resfam_nom1,desp_resfam_nom2,
    desp_resfam_ape1,desp_resfam_ape2,desp_resfam_parentesco,desp_resfam_genero,
    desp_resfam_direccion,desp_resfam_telefono,desp_resfam_emergencia,
    accion,usuario,hora)  values (antes.resfam_codigo ,antes.resfam_catalogo 
    ,antes.resfam_nom1 ,antes.resfam_nom2 ,antes.resfam_ape1 ,antes.resfam_ape2 
    ,antes.resfam_parentesco ,antes.resfam_genero ,antes.resfam_direccion 
    ,antes.resfam_telefono ,antes.resfam_emergencia ,NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_resdfam update on "informix".resdfam 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_resdfam (resfam_codigo,resfam_catalogo,
    resfam_nom1,resfam_nom2,resfam_ape1,resfam_ape2,resfam_parentesco,
    resfam_genero,resfam_direccion,resfam_telefono,resfam_emergencia,
    desp_resfam_codigo,desp_resfam_catalogo,desp_resfam_nom1,desp_resfam_nom2,
    desp_resfam_ape1,desp_resfam_ape2,desp_resfam_parentesco,desp_resfam_genero,
    desp_resfam_direccion,desp_resfam_telefono,desp_resfam_emergencia,
    accion,usuario,hora)  values (antes.resfam_codigo ,antes.resfam_catalogo 
    ,antes.resfam_nom1 ,antes.resfam_nom2 ,antes.resfam_ape1 ,antes.resfam_ape2 
    ,antes.resfam_parentesco ,antes.resfam_genero ,antes.resfam_direccion 
    ,antes.resfam_telefono ,antes.resfam_emergencia ,luego.resfam_codigo 
    ,luego.resfam_catalogo ,luego.resfam_nom1 ,luego.resfam_nom2 ,luego.resfam_ape1 
    ,luego.resfam_ape2 ,luego.resfam_parentesco ,luego.resfam_genero 
    ,luego.resfam_direccion ,luego.resfam_telefono ,luego.resfam_emergencia 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_resorg insert on "informix".resorg 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_resorg (resorg_plaza,resorg_dependencia,
    resorg_descripcion,resorg_situacion,resorg_fecha_mod,desp_resorg_plaza,
    desp_resorg_dependencia,desp_resorg_descripcion,desp_resorg_situacion,
    desp_resorg_fecha_mod,accion,usuario,hora)  values (NULL ,'' ,'' ,''
     ,'' ,luego.resorg_plaza ,luego.resorg_dependencia ,luego.resorg_descripcion 
    ,luego.resorg_situacion ,luego.resorg_fecha_mod ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_resorg delete on "informix".resorg 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_resorg (resorg_plaza,resorg_dependencia,
    resorg_descripcion,resorg_situacion,resorg_fecha_mod,desp_resorg_plaza,
    desp_resorg_dependencia,desp_resorg_descripcion,desp_resorg_situacion,
    desp_resorg_fecha_mod,accion,usuario,hora)  values (antes.resorg_plaza 
    ,antes.resorg_dependencia ,antes.resorg_descripcion ,antes.resorg_situacion 
    ,antes.resorg_fecha_mod ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_resorg update on "informix".resorg 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_resorg (resorg_plaza,resorg_dependencia,
    resorg_descripcion,resorg_situacion,resorg_fecha_mod,desp_resorg_plaza,
    desp_resorg_dependencia,desp_resorg_descripcion,desp_resorg_situacion,
    desp_resorg_fecha_mod,accion,usuario,hora)  values (antes.resorg_plaza 
    ,antes.resorg_dependencia ,antes.resorg_descripcion ,antes.resorg_situacion 
    ,antes.resorg_fecha_mod ,luego.resorg_plaza ,luego.resorg_dependencia 
    ,luego.resorg_descripcion ,luego.resorg_situacion ,luego.resorg_fecha_mod 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_dep_reservas insert on "informix"
    .dep_reservas referencing new as luego
    for each row
        (
        insert into "informix".aud_dep_reservas (deprr_clave,
    deprr_nombre,desp_deprr_clave,desp_deprr_nombre,accion,usuario,hora) 
     values (NULL ,'' ,luego.deprr_clave ,luego.deprr_nombre ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_dep_reservas delete on "informix"
    .dep_reservas referencing old as antes
    for each row
        (
        insert into "informix".aud_dep_reservas (deprr_clave,
    deprr_nombre,desp_deprr_clave,desp_deprr_nombre,accion,usuario,hora) 
     values (antes.deprr_clave ,antes.deprr_nombre ,NULL ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_dep_reservas update on "informix"
    .dep_reservas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dep_reservas (deprr_clave,
    deprr_nombre,desp_deprr_clave,desp_deprr_nombre,accion,usuario,hora) 
     values (antes.deprr_clave ,antes.deprr_nombre ,luego.deprr_clave 
    ,luego.deprr_nombre ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ing_tramos insert on "informix".ing_tramos 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ing_tramos (tra_codigo,tra_nombre,
    tra_ubicacion,tra_direccion,tra_dimension,tra_medida,tra_renglon,
    tra_fecha_inicio,tra_fecha_fin,tra_situacion,tra_proyecto,tra_obser,
    des_tra_codigo,desp_tra_nombre,desp_tra_ubicacion,desp_tra_direccion,
    desp_tra_dimension,desp_tra_medida,desp_tra_renglon,desp_tra_fecha_inicio,
    desp_tra_fecha_fin,desp_tra_situacion,desp_tra_proyecto,desp_tra_obser,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,'' ,NULL ,'' ,NULL 
    ,'' ,'' ,'' ,NULL ,'' ,luego.tra_codigo ,luego.tra_nombre ,luego.tra_ubicacion 
    ,luego.tra_direccion ,luego.tra_dimension ,luego.tra_medida ,luego.tra_renglon 
    ,luego.tra_fecha_inicio ,luego.tra_fecha_fin ,luego.tra_situacion 
    ,luego.tra_proyecto ,luego.tra_obser ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_ing_tramos delete on "informix".ing_tramos 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ing_tramos (tra_codigo,tra_nombre,
    tra_ubicacion,tra_direccion,tra_dimension,tra_medida,tra_renglon,
    tra_fecha_inicio,tra_fecha_fin,tra_situacion,tra_proyecto,tra_obser,
    des_tra_codigo,desp_tra_nombre,desp_tra_ubicacion,desp_tra_direccion,
    desp_tra_dimension,desp_tra_medida,desp_tra_renglon,desp_tra_fecha_inicio,
    desp_tra_fecha_fin,desp_tra_situacion,desp_tra_proyecto,desp_tra_obser,
    accion,usuario,hora)  values (antes.tra_codigo ,antes.tra_nombre 
    ,antes.tra_ubicacion ,antes.tra_direccion ,antes.tra_dimension ,antes.tra_medida 
    ,antes.tra_renglon ,antes.tra_fecha_inicio ,antes.tra_fecha_fin ,
    antes.tra_situacion ,antes.tra_proyecto ,antes.tra_obser ,NULL ,NULL 
    ,NULL ,'' ,NULL ,'' ,NULL ,'' ,'' ,'' ,NULL ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_ing_tramos update on "informix".ing_tramos 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ing_tramos (tra_codigo,tra_nombre,
    tra_ubicacion,tra_direccion,tra_dimension,tra_medida,tra_renglon,
    tra_fecha_inicio,tra_fecha_fin,tra_situacion,tra_proyecto,tra_obser,
    des_tra_codigo,desp_tra_nombre,desp_tra_ubicacion,desp_tra_direccion,
    desp_tra_dimension,desp_tra_medida,desp_tra_renglon,desp_tra_fecha_inicio,
    desp_tra_fecha_fin,desp_tra_situacion,desp_tra_proyecto,desp_tra_obser,
    accion,usuario,hora)  values (antes.tra_codigo ,antes.tra_nombre 
    ,antes.tra_ubicacion ,antes.tra_direccion ,antes.tra_dimension ,antes.tra_medida 
    ,antes.tra_renglon ,antes.tra_fecha_inicio ,antes.tra_fecha_fin ,
    antes.tra_situacion ,antes.tra_proyecto ,antes.tra_obser ,luego.tra_codigo 
    ,luego.tra_nombre ,luego.tra_ubicacion ,luego.tra_direccion ,luego.tra_dimension 
    ,luego.tra_medida ,luego.tra_renglon ,luego.tra_fecha_inicio ,luego.tra_fecha_fin 
    ,luego.tra_situacion ,luego.tra_proyecto ,luego.tra_obser ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_llamada_atencion insert on "informix"
    .llamada_atencion referencing new as luego
    for each row
        (
        insert into "informix".aud_llamada_atencion (id_llamada,
    no_orden,punto_orden,no_oficio,llamada_atencion,catalogo_impone,grado_impone,
    arma_impone,dep_impone,plaza_impone,catalogo_sancionado,grado_sancionado,
    arma_sancionado,dep_sancionado,plaza_sancionado,catalogo_ingresa,
    grado_ingresa,arma_ingresa,dep_ingresa,plaza_ingresa,fecha_i_sist,
    fecha_llamada,situacion,extra1,extra2,desp_id_llamada,desp_no_orden,
    desp_punto_orden,desp_no_oficio,desp_llamada_atencion,desp_catalogo_impone,
    desp_grado_impone,desp_arma_impone,desp_dep_impone,desp_plaza_impone,
    desp_catalogo_sancionado,desp_grado_sancionado,desp_arma_sancionado,
    desp_dep_sancionado,desp_plaza_sancionado,desp_catalogo_ingresa,desp_grado_ingresa,
    desp_arma_ingresa,desp_dep_ingresa,desp_plaza_ingresa,desp_fecha_i_sist,
    desp_fecha_llamada,desp_situacion,desp_extra1,desp_extra2,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.id_llamada ,luego.no_orden 
    ,luego.punto_orden ,luego.no_oficio ,luego.llamada_atencion ,luego.catalogo_impone 
    ,luego.grado_impone ,luego.arma_impone ,luego.dep_impone ,luego.plaza_impone 
    ,luego.catalogo_sancionado ,luego.grado_sancionado ,luego.arma_sancionado 
    ,luego.dep_sancionado ,luego.plaza_sancionado ,luego.catalogo_ingresa 
    ,luego.grado_ingresa ,luego.arma_ingresa ,luego.dep_ingresa ,luego.plaza_ingresa 
    ,luego.fecha_i_sist ,luego.fecha_llamada ,luego.situacion ,luego.extra1 
    ,luego.extra2 ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_llamada_atencion delete on "informix"
    .llamada_atencion referencing old as antes
    for each row
        (
        insert into "informix".aud_llamada_atencion (id_llamada,
    no_orden,punto_orden,no_oficio,llamada_atencion,catalogo_impone,grado_impone,
    arma_impone,dep_impone,plaza_impone,catalogo_sancionado,grado_sancionado,
    arma_sancionado,dep_sancionado,plaza_sancionado,catalogo_ingresa,
    grado_ingresa,arma_ingresa,dep_ingresa,plaza_ingresa,fecha_i_sist,
    fecha_llamada,situacion,extra1,extra2,desp_id_llamada,desp_no_orden,
    desp_punto_orden,desp_no_oficio,desp_llamada_atencion,desp_catalogo_impone,
    desp_grado_impone,desp_arma_impone,desp_dep_impone,desp_plaza_impone,
    desp_catalogo_sancionado,desp_grado_sancionado,desp_arma_sancionado,
    desp_dep_sancionado,desp_plaza_sancionado,desp_catalogo_ingresa,desp_grado_ingresa,
    desp_arma_ingresa,desp_dep_ingresa,desp_plaza_ingresa,desp_fecha_i_sist,
    desp_fecha_llamada,desp_situacion,desp_extra1,desp_extra2,accion,
    usuario,hora)  values (antes.id_llamada ,antes.no_orden ,antes.punto_orden 
    ,antes.no_oficio ,antes.llamada_atencion ,antes.catalogo_impone ,
    antes.grado_impone ,antes.arma_impone ,antes.dep_impone ,antes.plaza_impone 
    ,antes.catalogo_sancionado ,antes.grado_sancionado ,antes.arma_sancionado 
    ,antes.dep_sancionado ,antes.plaza_sancionado ,antes.catalogo_ingresa 
    ,antes.grado_ingresa ,antes.arma_ingresa ,antes.dep_ingresa ,antes.plaza_ingresa 
    ,antes.fecha_i_sist ,antes.fecha_llamada ,antes.situacion ,antes.extra1 
    ,antes.extra2 ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_llamada_atencion update on "informix"
    .llamada_atencion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_llamada_atencion (id_llamada,
    no_orden,punto_orden,no_oficio,llamada_atencion,catalogo_impone,grado_impone,
    arma_impone,dep_impone,plaza_impone,catalogo_sancionado,grado_sancionado,
    arma_sancionado,dep_sancionado,plaza_sancionado,catalogo_ingresa,
    grado_ingresa,arma_ingresa,dep_ingresa,plaza_ingresa,fecha_i_sist,
    fecha_llamada,situacion,extra1,extra2,desp_id_llamada,desp_no_orden,
    desp_punto_orden,desp_no_oficio,desp_llamada_atencion,desp_catalogo_impone,
    desp_grado_impone,desp_arma_impone,desp_dep_impone,desp_plaza_impone,
    desp_catalogo_sancionado,desp_grado_sancionado,desp_arma_sancionado,
    desp_dep_sancionado,desp_plaza_sancionado,desp_catalogo_ingresa,desp_grado_ingresa,
    desp_arma_ingresa,desp_dep_ingresa,desp_plaza_ingresa,desp_fecha_i_sist,
    desp_fecha_llamada,desp_situacion,desp_extra1,desp_extra2,accion,
    usuario,hora)  values (antes.id_llamada ,antes.no_orden ,antes.punto_orden 
    ,antes.no_oficio ,antes.llamada_atencion ,antes.catalogo_impone ,
    antes.grado_impone ,antes.arma_impone ,antes.dep_impone ,antes.plaza_impone 
    ,antes.catalogo_sancionado ,antes.grado_sancionado ,antes.arma_sancionado 
    ,antes.dep_sancionado ,antes.plaza_sancionado ,antes.catalogo_ingresa 
    ,antes.grado_ingresa ,antes.arma_ingresa ,antes.dep_ingresa ,antes.plaza_ingresa 
    ,antes.fecha_i_sist ,antes.fecha_llamada ,antes.situacion ,antes.extra1 
    ,antes.extra2 ,luego.id_llamada ,luego.no_orden ,luego.punto_orden 
    ,luego.no_oficio ,luego.llamada_atencion ,luego.catalogo_impone ,
    luego.grado_impone ,luego.arma_impone ,luego.dep_impone ,luego.plaza_impone 
    ,luego.catalogo_sancionado ,luego.grado_sancionado ,luego.arma_sancionado 
    ,luego.dep_sancionado ,luego.plaza_sancionado ,luego.catalogo_ingresa 
    ,luego.grado_ingresa ,luego.arma_ingresa ,luego.dep_ingresa ,luego.plaza_ingresa 
    ,luego.fecha_i_sist ,luego.fecha_llamada ,luego.situacion ,luego.extra1 
    ,luego.extra2 ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_llamada_atencion_mod insert on 
    "informix".llamada_atencion_mod referencing new as luego
    for each row
        (
        insert into "informix".aud_llamada_atencion_mod (id_llamada,
    mod_id_llamada,no_orden,punto_orden,no_oficio,llamada_atencion,catalogo_impone,
    grado_impone,arma_impone,dep_impone,plaza_impone,catalogo_sancionado,
    grado_sancionado,arma_sancionado,dep_sancionado,plaza_sancionado,
    catalogo_ingresa,grado_ingresa,arma_ingresa,dep_ingresa,plaza_ingresa,
    catalogo_mod,grado_mod,arma_mod,dep_mod,plaza_mod,fecha_i_sist,fecha_llamada,
    fecha_mod,motivo_mod,doc_ref_mod,extra1,extra2,situacion,desp_id_llamada,
    desp_mod_id_llamada,desp_no_orden,desp_punto_orden,desp_no_oficio,
    desp_llamada_atencion,desp_catalogo_impone,desp_grado_impone,desp_arma_impone,
    desp_dep_impone,desp_plaza_impone,desp_catalogo_sancionado,desp_grado_sancionado,
    desp_arma_sancionado,desp_dep_sancionado,desp_plaza_sancionado,desp_catalogo_ingresa,
    desp_grado_ingresa,desp_arma_ingresa,desp_dep_ingresa,desp_plaza_ingresa,
    desp_catalogo_mod,desp_grado_mod,desp_arma_mod,desp_dep_mod,desp_plaza_mod,
    desp_fecha_i_sist,desp_fecha_llamada,desp_fecha_mod,desp_motivo_mod,
    desp_doc_ref_mod,desp_extra1,desp_extra2,desp_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.id_llamada 
    ,luego.mod_id_llamada ,luego.no_orden ,luego.punto_orden ,luego.no_oficio 
    ,luego.llamada_atencion ,luego.catalogo_impone ,luego.grado_impone 
    ,luego.arma_impone ,luego.dep_impone ,luego.plaza_impone ,luego.catalogo_sancionado 
    ,luego.grado_sancionado ,luego.arma_sancionado ,luego.dep_sancionado 
    ,luego.plaza_sancionado ,luego.catalogo_ingresa ,luego.grado_ingresa 
    ,luego.arma_ingresa ,luego.dep_ingresa ,luego.plaza_ingresa ,luego.catalogo_mod 
    ,luego.grado_mod ,luego.arma_mod ,luego.dep_mod ,luego.plaza_mod 
    ,luego.fecha_i_sist ,luego.fecha_llamada ,luego.fecha_mod ,luego.motivo_mod 
    ,luego.doc_ref_mod ,luego.extra1 ,luego.extra2 ,luego.situacion ,
    'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_llamada_atencion_mod delete on 
    "informix".llamada_atencion_mod referencing old as antes
    for each row
        (
        insert into "informix".aud_llamada_atencion_mod (id_llamada,
    mod_id_llamada,no_orden,punto_orden,no_oficio,llamada_atencion,catalogo_impone,
    grado_impone,arma_impone,dep_impone,plaza_impone,catalogo_sancionado,
    grado_sancionado,arma_sancionado,dep_sancionado,plaza_sancionado,
    catalogo_ingresa,grado_ingresa,arma_ingresa,dep_ingresa,plaza_ingresa,
    catalogo_mod,grado_mod,arma_mod,dep_mod,plaza_mod,fecha_i_sist,fecha_llamada,
    fecha_mod,motivo_mod,doc_ref_mod,extra1,extra2,situacion,desp_id_llamada,
    desp_mod_id_llamada,desp_no_orden,desp_punto_orden,desp_no_oficio,
    desp_llamada_atencion,desp_catalogo_impone,desp_grado_impone,desp_arma_impone,
    desp_dep_impone,desp_plaza_impone,desp_catalogo_sancionado,desp_grado_sancionado,
    desp_arma_sancionado,desp_dep_sancionado,desp_plaza_sancionado,desp_catalogo_ingresa,
    desp_grado_ingresa,desp_arma_ingresa,desp_dep_ingresa,desp_plaza_ingresa,
    desp_catalogo_mod,desp_grado_mod,desp_arma_mod,desp_dep_mod,desp_plaza_mod,
    desp_fecha_i_sist,desp_fecha_llamada,desp_fecha_mod,desp_motivo_mod,
    desp_doc_ref_mod,desp_extra1,desp_extra2,desp_situacion,accion,usuario,
    hora)  values (antes.id_llamada ,antes.mod_id_llamada ,antes.no_orden 
    ,antes.punto_orden ,antes.no_oficio ,antes.llamada_atencion ,antes.catalogo_impone 
    ,antes.grado_impone ,antes.arma_impone ,antes.dep_impone ,antes.plaza_impone 
    ,antes.catalogo_sancionado ,antes.grado_sancionado ,antes.arma_sancionado 
    ,antes.dep_sancionado ,antes.plaza_sancionado ,antes.catalogo_ingresa 
    ,antes.grado_ingresa ,antes.arma_ingresa ,antes.dep_ingresa ,antes.plaza_ingresa 
    ,antes.catalogo_mod ,antes.grado_mod ,antes.arma_mod ,antes.dep_mod 
    ,antes.plaza_mod ,antes.fecha_i_sist ,antes.fecha_llamada ,antes.fecha_mod 
    ,antes.motivo_mod ,antes.doc_ref_mod ,antes.extra1 ,antes.extra2 
    ,antes.situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_llamada_atencion_mod update on 
    "informix".llamada_atencion_mod referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_llamada_atencion_mod (id_llamada,
    mod_id_llamada,no_orden,punto_orden,no_oficio,llamada_atencion,catalogo_impone,
    grado_impone,arma_impone,dep_impone,plaza_impone,catalogo_sancionado,
    grado_sancionado,arma_sancionado,dep_sancionado,plaza_sancionado,
    catalogo_ingresa,grado_ingresa,arma_ingresa,dep_ingresa,plaza_ingresa,
    catalogo_mod,grado_mod,arma_mod,dep_mod,plaza_mod,fecha_i_sist,fecha_llamada,
    fecha_mod,motivo_mod,doc_ref_mod,extra1,extra2,situacion,desp_id_llamada,
    desp_mod_id_llamada,desp_no_orden,desp_punto_orden,desp_no_oficio,
    desp_llamada_atencion,desp_catalogo_impone,desp_grado_impone,desp_arma_impone,
    desp_dep_impone,desp_plaza_impone,desp_catalogo_sancionado,desp_grado_sancionado,
    desp_arma_sancionado,desp_dep_sancionado,desp_plaza_sancionado,desp_catalogo_ingresa,
    desp_grado_ingresa,desp_arma_ingresa,desp_dep_ingresa,desp_plaza_ingresa,
    desp_catalogo_mod,desp_grado_mod,desp_arma_mod,desp_dep_mod,desp_plaza_mod,
    desp_fecha_i_sist,desp_fecha_llamada,desp_fecha_mod,desp_motivo_mod,
    desp_doc_ref_mod,desp_extra1,desp_extra2,desp_situacion,accion,usuario,
    hora)  values (antes.id_llamada ,antes.mod_id_llamada ,antes.no_orden 
    ,antes.punto_orden ,antes.no_oficio ,antes.llamada_atencion ,antes.catalogo_impone 
    ,antes.grado_impone ,antes.arma_impone ,antes.dep_impone ,antes.plaza_impone 
    ,antes.catalogo_sancionado ,antes.grado_sancionado ,antes.arma_sancionado 
    ,antes.dep_sancionado ,antes.plaza_sancionado ,antes.catalogo_ingresa 
    ,antes.grado_ingresa ,antes.arma_ingresa ,antes.dep_ingresa ,antes.plaza_ingresa 
    ,antes.catalogo_mod ,antes.grado_mod ,antes.arma_mod ,antes.dep_mod 
    ,antes.plaza_mod ,antes.fecha_i_sist ,antes.fecha_llamada ,antes.fecha_mod 
    ,antes.motivo_mod ,antes.doc_ref_mod ,antes.extra1 ,antes.extra2 
    ,antes.situacion ,luego.id_llamada ,luego.mod_id_llamada ,luego.no_orden 
    ,luego.punto_orden ,luego.no_oficio ,luego.llamada_atencion ,luego.catalogo_impone 
    ,luego.grado_impone ,luego.arma_impone ,luego.dep_impone ,luego.plaza_impone 
    ,luego.catalogo_sancionado ,luego.grado_sancionado ,luego.arma_sancionado 
    ,luego.dep_sancionado ,luego.plaza_sancionado ,luego.catalogo_ingresa 
    ,luego.grado_ingresa ,luego.arma_ingresa ,luego.dep_ingresa ,luego.plaza_ingresa 
    ,luego.catalogo_mod ,luego.grado_mod ,luego.arma_mod ,luego.dep_mod 
    ,luego.plaza_mod ,luego.fecha_i_sist ,luego.fecha_llamada ,luego.fecha_mod 
    ,luego.motivo_mod ,luego.doc_ref_mod ,luego.extra1 ,luego.extra2 
    ,luego.situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_exp_conocimiento insert on "578898"
    .exp_conocimiento referencing new as luego
    for each row
        (
        insert into "informix".aud_exp_conocimiento (con_dep_llave,
    con_codigo,con_libro_numero,con_libro_folio,con_libro_tipo,con_libro_conocimiento,
    con_libro_conocimiento_fecha,con_mensaje,con_mensaje_fecha,con_entrego_dep_llave,
    con_entrego_grado,con_entrego_catalogo,con_recibio_dep_llave,con_recibio_grado,
    con_recibio_catalogo,con_autorizo_dep_llave,con_autorizo_grado,con_autorizo_catalogo,
    con_situacion,desp_con_dep_llave,desp_con_codigo,desp_con_libro_numero,
    desp_con_libro_folio,desp_con_libro_tipo,desp_con_libro_conocimiento,
    desp_con_libro_conocimiento_fecha,desp_con_mensaje,desp_con_mensaje_fecha,
    desp_con_entrego_dep_llave,desp_con_entrego_grado,desp_con_entrego_catalogo,
    desp_con_recibio_dep_llave,desp_con_recibio_grado,desp_con_recibio_catalogo,
    desp_con_autorizo_dep_llave,desp_con_autorizo_grado,desp_con_autorizo_catalogo,
    desp_con_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.con_dep_llave ,
    luego.con_codigo ,luego.con_libro_numero ,luego.con_libro_folio ,
    luego.con_libro_tipo ,luego.con_libro_conocimiento ,luego.con_libro_conocimiento_fecha 
    ,luego.con_mensaje ,luego.con_mensaje_fecha ,luego.con_entrego_dep_llave 
    ,luego.con_entrego_grado ,luego.con_entrego_catalogo ,luego.con_recibio_dep_llave 
    ,luego.con_recibio_grado ,luego.con_recibio_catalogo ,luego.con_autorizo_dep_llave 
    ,luego.con_autorizo_grado ,luego.con_autorizo_catalogo ,luego.con_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_exp_conocimiento delete on "578898"
    .exp_conocimiento referencing old as antes
    for each row
        (
        insert into "informix".aud_exp_conocimiento (con_dep_llave,
    con_codigo,con_libro_numero,con_libro_folio,con_libro_tipo,con_libro_conocimiento,
    con_libro_conocimiento_fecha,con_mensaje,con_mensaje_fecha,con_entrego_dep_llave,
    con_entrego_grado,con_entrego_catalogo,con_recibio_dep_llave,con_recibio_grado,
    con_recibio_catalogo,con_autorizo_dep_llave,con_autorizo_grado,con_autorizo_catalogo,
    con_situacion,desp_con_dep_llave,desp_con_codigo,desp_con_libro_numero,
    desp_con_libro_folio,desp_con_libro_tipo,desp_con_libro_conocimiento,
    desp_con_libro_conocimiento_fecha,desp_con_mensaje,desp_con_mensaje_fecha,
    desp_con_entrego_dep_llave,desp_con_entrego_grado,desp_con_entrego_catalogo,
    desp_con_recibio_dep_llave,desp_con_recibio_grado,desp_con_recibio_catalogo,
    desp_con_autorizo_dep_llave,desp_con_autorizo_grado,desp_con_autorizo_catalogo,
    desp_con_situacion,accion,usuario,hora)  values (antes.con_dep_llave 
    ,antes.con_codigo ,antes.con_libro_numero ,antes.con_libro_folio 
    ,antes.con_libro_tipo ,antes.con_libro_conocimiento ,antes.con_libro_conocimiento_fecha 
    ,antes.con_mensaje ,antes.con_mensaje_fecha ,antes.con_entrego_dep_llave 
    ,antes.con_entrego_grado ,antes.con_entrego_catalogo ,antes.con_recibio_dep_llave 
    ,antes.con_recibio_grado ,antes.con_recibio_catalogo ,antes.con_autorizo_dep_llave 
    ,antes.con_autorizo_grado ,antes.con_autorizo_catalogo ,antes.con_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_exp_conocimiento update on "578898"
    .exp_conocimiento referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_exp_conocimiento (con_dep_llave,
    con_codigo,con_libro_numero,con_libro_folio,con_libro_tipo,con_libro_conocimiento,
    con_libro_conocimiento_fecha,con_mensaje,con_mensaje_fecha,con_entrego_dep_llave,
    con_entrego_grado,con_entrego_catalogo,con_recibio_dep_llave,con_recibio_grado,
    con_recibio_catalogo,con_autorizo_dep_llave,con_autorizo_grado,con_autorizo_catalogo,
    con_situacion,desp_con_dep_llave,desp_con_codigo,desp_con_libro_numero,
    desp_con_libro_folio,desp_con_libro_tipo,desp_con_libro_conocimiento,
    desp_con_libro_conocimiento_fecha,desp_con_mensaje,desp_con_mensaje_fecha,
    desp_con_entrego_dep_llave,desp_con_entrego_grado,desp_con_entrego_catalogo,
    desp_con_recibio_dep_llave,desp_con_recibio_grado,desp_con_recibio_catalogo,
    desp_con_autorizo_dep_llave,desp_con_autorizo_grado,desp_con_autorizo_catalogo,
    desp_con_situacion,accion,usuario,hora)  values (antes.con_dep_llave 
    ,antes.con_codigo ,antes.con_libro_numero ,antes.con_libro_folio 
    ,antes.con_libro_tipo ,antes.con_libro_conocimiento ,antes.con_libro_conocimiento_fecha 
    ,antes.con_mensaje ,antes.con_mensaje_fecha ,antes.con_entrego_dep_llave 
    ,antes.con_entrego_grado ,antes.con_entrego_catalogo ,antes.con_recibio_dep_llave 
    ,antes.con_recibio_grado ,antes.con_recibio_catalogo ,antes.con_autorizo_dep_llave 
    ,antes.con_autorizo_grado ,antes.con_autorizo_catalogo ,antes.con_situacion 
    ,luego.con_dep_llave ,luego.con_codigo ,luego.con_libro_numero ,luego.con_libro_folio 
    ,luego.con_libro_tipo ,luego.con_libro_conocimiento ,luego.con_libro_conocimiento_fecha 
    ,luego.con_mensaje ,luego.con_mensaje_fecha ,luego.con_entrego_dep_llave 
    ,luego.con_entrego_grado ,luego.con_entrego_catalogo ,luego.con_recibio_dep_llave 
    ,luego.con_recibio_grado ,luego.con_recibio_catalogo ,luego.con_autorizo_dep_llave 
    ,luego.con_autorizo_grado ,luego.con_autorizo_catalogo ,luego.con_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_exp_solicitud insert on "578898"
    .exp_solicitud referencing new as luego
    for each row
        (
        insert into "informix".aud_exp_solicitud (sol_codigo,
    sol_dep_llave,sol_solicito_dep_llave,sol_solicito_grado,sol_solicito_catalogo,
    sol_solicito_mensaje,sol_solicito_fecha,sol_autorizo_dep_llave,sol_autorizo_grado,
    sol_autorizo_catalogo,sol_autorizo_mensaje,sol_autorizo_fecha,sol_ordeno_dep_llave,
    sol_ordeno_grado,sol_ordeno_catalogo,sol_ordeno_mensaje,sol_ordeno_fecha,
    sol_pro_codigo,sol_dep_llave2,sol_situacion,desp_sol_codigo,desp_sol_dep_llave,
    desp_sol_solicito_dep_llave,desp_sol_solicito_grado,desp_sol_solicito_catalogo,
    desp_sol_solicito_mensaje,desp_sol_solicito_fecha,desp_sol_autorizo_dep_llave,
    desp_sol_autorizo_grado,desp_sol_autorizo_catalogo,desp_sol_autorizo_mensaje,
    desp_sol_autorizo_fecha,desp_sol_ordeno_dep_llave,desp_sol_ordeno_grado,
    desp_sol_ordeno_catalogo,desp_sol_ordeno_mensaje,desp_sol_ordeno_fecha,
    desp_sol_pro_codigo,desp_sol_dep_llave2,desp_sol_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.sol_codigo ,luego.sol_dep_llave ,luego.sol_solicito_dep_llave 
    ,luego.sol_solicito_grado ,luego.sol_solicito_catalogo ,luego.sol_solicito_mensaje 
    ,luego.sol_solicito_fecha ,luego.sol_autorizo_dep_llave ,luego.sol_autorizo_grado 
    ,luego.sol_autorizo_catalogo ,luego.sol_autorizo_mensaje ,luego.sol_autorizo_fecha 
    ,luego.sol_ordeno_dep_llave ,luego.sol_ordeno_grado ,luego.sol_ordeno_catalogo 
    ,luego.sol_ordeno_mensaje ,luego.sol_ordeno_fecha ,luego.sol_pro_codigo 
    ,luego.sol_dep_llave2 ,luego.sol_situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_exp_solicitud delete on "578898"
    .exp_solicitud referencing old as antes
    for each row
        (
        insert into "informix".aud_exp_solicitud (sol_codigo,
    sol_dep_llave,sol_solicito_dep_llave,sol_solicito_grado,sol_solicito_catalogo,
    sol_solicito_mensaje,sol_solicito_fecha,sol_autorizo_dep_llave,sol_autorizo_grado,
    sol_autorizo_catalogo,sol_autorizo_mensaje,sol_autorizo_fecha,sol_ordeno_dep_llave,
    sol_ordeno_grado,sol_ordeno_catalogo,sol_ordeno_mensaje,sol_ordeno_fecha,
    sol_pro_codigo,sol_dep_llave2,sol_situacion,desp_sol_codigo,desp_sol_dep_llave,
    desp_sol_solicito_dep_llave,desp_sol_solicito_grado,desp_sol_solicito_catalogo,
    desp_sol_solicito_mensaje,desp_sol_solicito_fecha,desp_sol_autorizo_dep_llave,
    desp_sol_autorizo_grado,desp_sol_autorizo_catalogo,desp_sol_autorizo_mensaje,
    desp_sol_autorizo_fecha,desp_sol_ordeno_dep_llave,desp_sol_ordeno_grado,
    desp_sol_ordeno_catalogo,desp_sol_ordeno_mensaje,desp_sol_ordeno_fecha,
    desp_sol_pro_codigo,desp_sol_dep_llave2,desp_sol_situacion,accion,
    usuario,hora)  values (antes.sol_codigo ,antes.sol_dep_llave ,antes.sol_solicito_dep_llave 
    ,antes.sol_solicito_grado ,antes.sol_solicito_catalogo ,antes.sol_solicito_mensaje 
    ,antes.sol_solicito_fecha ,antes.sol_autorizo_dep_llave ,antes.sol_autorizo_grado 
    ,antes.sol_autorizo_catalogo ,antes.sol_autorizo_mensaje ,antes.sol_autorizo_fecha 
    ,antes.sol_ordeno_dep_llave ,antes.sol_ordeno_grado ,antes.sol_ordeno_catalogo 
    ,antes.sol_ordeno_mensaje ,antes.sol_ordeno_fecha ,antes.sol_pro_codigo 
    ,antes.sol_dep_llave2 ,antes.sol_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_exp_solicitud update on "578898"
    .exp_solicitud referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_exp_solicitud (sol_codigo,
    sol_dep_llave,sol_solicito_dep_llave,sol_solicito_grado,sol_solicito_catalogo,
    sol_solicito_mensaje,sol_solicito_fecha,sol_autorizo_dep_llave,sol_autorizo_grado,
    sol_autorizo_catalogo,sol_autorizo_mensaje,sol_autorizo_fecha,sol_ordeno_dep_llave,
    sol_ordeno_grado,sol_ordeno_catalogo,sol_ordeno_mensaje,sol_ordeno_fecha,
    sol_pro_codigo,sol_dep_llave2,sol_situacion,desp_sol_codigo,desp_sol_dep_llave,
    desp_sol_solicito_dep_llave,desp_sol_solicito_grado,desp_sol_solicito_catalogo,
    desp_sol_solicito_mensaje,desp_sol_solicito_fecha,desp_sol_autorizo_dep_llave,
    desp_sol_autorizo_grado,desp_sol_autorizo_catalogo,desp_sol_autorizo_mensaje,
    desp_sol_autorizo_fecha,desp_sol_ordeno_dep_llave,desp_sol_ordeno_grado,
    desp_sol_ordeno_catalogo,desp_sol_ordeno_mensaje,desp_sol_ordeno_fecha,
    desp_sol_pro_codigo,desp_sol_dep_llave2,desp_sol_situacion,accion,
    usuario,hora)  values (antes.sol_codigo ,antes.sol_dep_llave ,antes.sol_solicito_dep_llave 
    ,antes.sol_solicito_grado ,antes.sol_solicito_catalogo ,antes.sol_solicito_mensaje 
    ,antes.sol_solicito_fecha ,antes.sol_autorizo_dep_llave ,antes.sol_autorizo_grado 
    ,antes.sol_autorizo_catalogo ,antes.sol_autorizo_mensaje ,antes.sol_autorizo_fecha 
    ,antes.sol_ordeno_dep_llave ,antes.sol_ordeno_grado ,antes.sol_ordeno_catalogo 
    ,antes.sol_ordeno_mensaje ,antes.sol_ordeno_fecha ,antes.sol_pro_codigo 
    ,antes.sol_dep_llave2 ,antes.sol_situacion ,luego.sol_codigo ,luego.sol_dep_llave 
    ,luego.sol_solicito_dep_llave ,luego.sol_solicito_grado ,luego.sol_solicito_catalogo 
    ,luego.sol_solicito_mensaje ,luego.sol_solicito_fecha ,luego.sol_autorizo_dep_llave 
    ,luego.sol_autorizo_grado ,luego.sol_autorizo_catalogo ,luego.sol_autorizo_mensaje 
    ,luego.sol_autorizo_fecha ,luego.sol_ordeno_dep_llave ,luego.sol_ordeno_grado 
    ,luego.sol_ordeno_catalogo ,luego.sol_ordeno_mensaje ,luego.sol_ordeno_fecha 
    ,luego.sol_pro_codigo ,luego.sol_dep_llave2 ,luego.sol_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_control_toe insert on "informix"
    .control_toe referencing new as luego
    for each row
        (
        insert into "informix".aud_control_toe (toe_codigo,toe_catalogo,
    toe_grado,toe_arma,toe_nombre,toe_plaza,toe_dependencia,toe_horaactual,
    toe_fecha,toe_depgenero,desp_toe_codigo,desp_toe_catalogo,desp_toe_grado,
    desp_toe_arma,desp_toe_nombre,desp_toe_plaza,desp_toe_dependencia,
    desp_toe_horaactual,desp_toe_fecha,desp_toe_depgenero,accion,usuario,
    hora)  values (NULL ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,luego.toe_codigo ,luego.toe_catalogo ,luego.toe_grado ,luego.toe_arma 
    ,luego.toe_nombre ,luego.toe_plaza ,luego.toe_dependencia ,luego.toe_horaactual 
    ,luego.toe_fecha ,luego.toe_depgenero ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".up_control_toe update on "informix".control_toe 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_control_toe (toe_codigo,toe_catalogo,
    toe_grado,toe_arma,toe_nombre,toe_plaza,toe_dependencia,toe_horaactual,
    toe_fecha,toe_depgenero,desp_toe_codigo,desp_toe_catalogo,desp_toe_grado,
    desp_toe_arma,desp_toe_nombre,desp_toe_plaza,desp_toe_dependencia,
    desp_toe_horaactual,desp_toe_fecha,desp_toe_depgenero,accion,usuario,
    hora)  values (antes.toe_codigo ,antes.toe_catalogo ,antes.toe_grado 
    ,antes.toe_arma ,antes.toe_nombre ,antes.toe_plaza ,antes.toe_dependencia 
    ,antes.toe_horaactual ,antes.toe_fecha ,antes.toe_depgenero ,luego.toe_codigo 
    ,luego.toe_catalogo ,luego.toe_grado ,luego.toe_arma ,luego.toe_nombre 
    ,luego.toe_plaza ,luego.toe_dependencia ,luego.toe_horaactual ,luego.toe_fecha 
    ,luego.toe_depgenero ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_control_toe delete on "informix"
    .control_toe referencing old as antes
    for each row
        (
        insert into "informix".aud_control_toe (toe_codigo,toe_catalogo,
    toe_grado,toe_arma,toe_nombre,toe_plaza,toe_dependencia,toe_horaactual,
    toe_fecha,toe_depgenero,desp_toe_codigo,desp_toe_catalogo,desp_toe_grado,
    desp_toe_arma,desp_toe_nombre,desp_toe_plaza,desp_toe_dependencia,
    desp_toe_horaactual,desp_toe_fecha,desp_toe_depgenero,accion,usuario,
    hora)  values (antes.toe_codigo ,antes.toe_catalogo ,antes.toe_grado 
    ,antes.toe_arma ,antes.toe_nombre ,antes.toe_plaza ,antes.toe_dependencia 
    ,antes.toe_horaactual ,antes.toe_fecha ,antes.toe_depgenero ,NULL 
    ,NULL ,'' ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_religion_segcontalu insert on "informix"
    .religion_segcontalu referencing new as luego
    for each row
        (
        insert into "informix".aud_religion_segcontalu (rel_id,
    rel_unidad,rel_escuadron,rel_religions,rel_cantidad,rel_fecha,rel_usuario,
    rel_comando,rel_situacion,desp_rel_id,desp_rel_unidad,desp_rel_escuadron,
    desp_rel_religions,desp_rel_cantidad,desp_rel_fecha,desp_rel_usuario,
    desp_rel_comando,desp_rel_situacion,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,luego.rel_id 
    ,luego.rel_unidad ,luego.rel_escuadron ,luego.rel_religions ,luego.rel_cantidad 
    ,luego.rel_fecha ,luego.rel_usuario ,luego.rel_comando ,luego.rel_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".up_religion_segcontalu update on "informix"
    .religion_segcontalu referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_religion_segcontalu (rel_id,
    rel_unidad,rel_escuadron,rel_religions,rel_cantidad,rel_fecha,rel_usuario,
    rel_comando,rel_situacion,desp_rel_id,desp_rel_unidad,desp_rel_escuadron,
    desp_rel_religions,desp_rel_cantidad,desp_rel_fecha,desp_rel_usuario,
    desp_rel_comando,desp_rel_situacion,accion,usuario,hora)  values 
    (antes.rel_id ,antes.rel_unidad ,antes.rel_escuadron ,antes.rel_religions 
    ,antes.rel_cantidad ,antes.rel_fecha ,antes.rel_usuario ,antes.rel_comando 
    ,antes.rel_situacion ,luego.rel_id ,luego.rel_unidad ,luego.rel_escuadron 
    ,luego.rel_religions ,luego.rel_cantidad ,luego.rel_fecha ,luego.rel_usuario 
    ,luego.rel_comando ,luego.rel_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_religion_segcontalu delete on "informix"
    .religion_segcontalu referencing old as antes
    for each row
        (
        insert into "informix".aud_religion_segcontalu (rel_id,
    rel_unidad,rel_escuadron,rel_religions,rel_cantidad,rel_fecha,rel_usuario,
    rel_comando,rel_situacion,desp_rel_id,desp_rel_unidad,desp_rel_escuadron,
    desp_rel_religions,desp_rel_cantidad,desp_rel_fecha,desp_rel_usuario,
    desp_rel_comando,desp_rel_situacion,accion,usuario,hora)  values 
    (antes.rel_id ,antes.rel_unidad ,antes.rel_escuadron ,antes.rel_religions 
    ,antes.rel_cantidad ,antes.rel_fecha ,antes.rel_usuario ,antes.rel_comando 
    ,antes.rel_situacion ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_con_mdep update on "informix".con_mdep 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_mdep (con_dep_llave,con_dep_desc_lg,
    con_dep_desc_md,con_dep_desc_ct,con_dep_unidad,con_dep_situacion,
    con_mdep,desp_con_dep_llave,desp_con_dep_desc_lg,desp_con_dep_desc_md,
    desp_con_dep_desc_ct,desp_con_dep_unidad,desp_con_dep_situacion,desp_con_mdep,
    accion,usuario,hora)  values (antes.con_dep_llave ,antes.con_dep_desc_lg 
    ,antes.con_dep_desc_md ,antes.con_dep_desc_ct ,antes.con_dep_unidad 
    ,antes.con_dep_situacion ,antes.con_mdep ,luego.con_dep_llave ,luego.con_dep_desc_lg 
    ,luego.con_dep_desc_md ,luego.con_dep_desc_ct ,luego.con_dep_unidad 
    ,luego.con_dep_situacion ,luego.con_mdep ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_con_mdep delete on "informix".con_mdep 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_con_mdep (con_dep_llave,con_dep_desc_lg,
    con_dep_desc_md,con_dep_desc_ct,con_dep_unidad,con_dep_situacion,
    con_mdep,desp_con_dep_llave,desp_con_dep_desc_lg,desp_con_dep_desc_md,
    desp_con_dep_desc_ct,desp_con_dep_unidad,desp_con_dep_situacion,desp_con_mdep,
    accion,usuario,hora)  values (antes.con_dep_llave ,antes.con_dep_desc_lg 
    ,antes.con_dep_desc_md ,antes.con_dep_desc_ct ,antes.con_dep_unidad 
    ,antes.con_dep_situacion ,antes.con_mdep ,NULL ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_con_mdep insert on "informix".con_mdep 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_con_mdep (con_dep_llave,con_dep_desc_lg,
    con_dep_desc_md,con_dep_desc_ct,con_dep_unidad,con_dep_situacion,
    con_mdep,desp_con_dep_llave,desp_con_dep_desc_lg,desp_con_dep_desc_md,
    desp_con_dep_desc_ct,desp_con_dep_unidad,desp_con_dep_situacion,desp_con_mdep,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,luego.con_dep_llave 
    ,luego.con_dep_desc_lg ,luego.con_dep_desc_md ,luego.con_dep_desc_ct 
    ,luego.con_dep_unidad ,luego.con_dep_situacion ,luego.con_mdep ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_con_unidades insert on "informix"
    .con_unidades referencing new as luego
    for each row
        (
        insert into "informix".aud_con_unidades (uni_codigo,uni_descripcion,
    uni_situacion,desp_uni_codigo,desp_uni_descripcion,desp_uni_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.uni_codigo ,luego.uni_descripcion 
    ,luego.uni_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_con_unidades delete on "informix"
    .con_unidades referencing old as antes
    for each row
        (
        insert into "informix".aud_con_unidades (uni_codigo,uni_descripcion,
    uni_situacion,desp_uni_codigo,desp_uni_descripcion,desp_uni_situacion,
    accion,usuario,hora)  values (antes.uni_codigo ,antes.uni_descripcion 
    ,antes.uni_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_con_unidades update on "informix"
    .con_unidades referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_unidades (uni_codigo,uni_descripcion,
    uni_situacion,desp_uni_codigo,desp_uni_descripcion,desp_uni_situacion,
    accion,usuario,hora)  values (antes.uni_codigo ,antes.uni_descripcion 
    ,antes.uni_situacion ,luego.uni_codigo ,luego.uni_descripcion ,luego.uni_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_con_area insert on "informix".con_area 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_con_area (area_id,area_descripcion,
    area_situacion,area_manual,area_extra1,desp_area_id,desp_area_descripcion,
    desp_area_situacion,desp_area_manual,desp_area_extra1,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.area_id ,luego.area_descripcion 
    ,luego.area_situacion ,luego.area_manual ,luego.area_extra1 ,'I' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_con_area delete on "informix".con_area 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_con_area (area_id,area_descripcion,
    area_situacion,area_manual,area_extra1,desp_area_id,desp_area_descripcion,
    desp_area_situacion,desp_area_manual,desp_area_extra1,accion,usuario,
    hora)  values (antes.area_id ,antes.area_descripcion ,antes.area_situacion 
    ,antes.area_manual ,antes.area_extra1 ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_con_area update on "informix".con_area 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_area (area_id,area_descripcion,
    area_situacion,area_manual,area_extra1,desp_area_id,desp_area_descripcion,
    desp_area_situacion,desp_area_manual,desp_area_extra1,accion,usuario,
    hora)  values (antes.area_id ,antes.area_descripcion ,antes.area_situacion 
    ,antes.area_manual ,antes.area_extra1 ,luego.area_id ,luego.area_descripcion 
    ,luego.area_situacion ,luego.area_manual ,luego.area_extra1 ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_con_asignacion_plaza insert on 
    "informix".con_asignacion_plaza referencing new as luego
    for each row
        (
        insert into "informix".aud_con_asignacion_plaza (asig_id,
    asig_manual,asig_area,asig_subarea,asig_plaza,desp_asig_id,desp_asig_manual,
    desp_asig_area,desp_asig_subarea,desp_asig_plaza,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,luego.asig_id ,luego.asig_manual ,luego.asig_area 
    ,luego.asig_subarea ,luego.asig_plaza ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_con_asignacion_plaza delete on 
    "informix".con_asignacion_plaza referencing old as antes
    for each row
        (
        insert into "informix".aud_con_asignacion_plaza (asig_id,
    asig_manual,asig_area,asig_subarea,asig_plaza,desp_asig_id,desp_asig_manual,
    desp_asig_area,desp_asig_subarea,desp_asig_plaza,accion,usuario,hora) 
     values (antes.asig_id ,antes.asig_manual ,antes.asig_area ,antes.asig_subarea 
    ,antes.asig_plaza ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_con_asignacion_plaza update on 
    "informix".con_asignacion_plaza referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_con_asignacion_plaza (asig_id,
    asig_manual,asig_area,asig_subarea,asig_plaza,desp_asig_id,desp_asig_manual,
    desp_asig_area,desp_asig_subarea,desp_asig_plaza,accion,usuario,hora) 
     values (antes.asig_id ,antes.asig_manual ,antes.asig_area ,antes.asig_subarea 
    ,antes.asig_plaza ,luego.asig_id ,luego.asig_manual ,luego.asig_area 
    ,luego.asig_subarea ,luego.asig_plaza ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_con_boleta insert on "informix".con_boleta 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_con_boleta (bol_id,bol_dependencia,
    bol_cat_revisor,bol_gra_revisor,bol_nombre,bol_grado,bol_empleo,bol_cat_comte,
    bol_gra_comte,bol_contrato,bol_unidad,bol_ejecutora,bol_fe_revision,
    bol_fe_emision,bol_observaciones,bol_situacion,desp_bol_id,desp_bol_dependencia,
    desp_bol_cat_revisor,desp_bol_gra_revisor,desp_bol_nombre,desp_bol_grado,
    desp_bol_empleo,desp_bol_cat_comte,desp_bol_gra_comte,desp_bol_contrato,
    desp_bol_unidad,desp_bol_ejecutora,desp_bol_fe_revision,desp_bol_fe_emision,
    desp_bol_observaciones,desp_bol_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.bol_id 
    ,luego.bol_dependencia ,luego.bol_cat_revisor ,luego.bol_gra_revisor 
    ,luego.bol_nombre ,luego.bol_grado ,luego.bol_empleo ,luego.bol_cat_comte 
    ,luego.bol_gra_comte ,luego.bol_contrato ,luego.bol_unidad ,luego.bol_ejecutora 
    ,luego.bol_fe_revision ,luego.bol_fe_emision ,luego.bol_observaciones 
    ,luego.bol_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_con_boleta delete on "informix".con_boleta 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_con_boleta (bol_id,bol_dependencia,
    bol_cat_revisor,bol_gra_revisor,bol_nombre,bol_grado,bol_empleo,bol_cat_comte,
    bol_gra_comte,bol_contrato,bol_unidad,bol_ejecutora,bol_fe_revision,
    bol_fe_emision,bol_observaciones,bol_situacion,desp_bol_id,desp_bol_dependencia,
    desp_bol_cat_revisor,desp_bol_gra_revisor,desp_bol_nombre,desp_bol_grado,
    desp_bol_empleo,desp_bol_cat_comte,desp_bol_gra_comte,desp_bol_contrato,
    desp_bol_unidad,desp_bol_ejecutora,desp_bol_fe_revision,desp_bol_fe_emision,
    desp_bol_observaciones,desp_bol_situacion,accion,usuario,hora)  values 
    (antes.bol_id ,antes.bol_dependencia ,antes.bol_cat_revisor ,antes.bol_gra_revisor 
    ,antes.bol_nombre ,antes.bol_grado ,antes.bol_empleo ,antes.bol_cat_comte 
    ,antes.bol_gra_comte ,antes.bol_contrato ,antes.bol_unidad ,antes.bol_ejecutora 
    ,antes.bol_fe_revision ,antes.bol_fe_emision ,antes.bol_observaciones 
    ,antes.bol_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_con_boleta update on "informix".con_boleta 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_boleta (bol_id,bol_dependencia,
    bol_cat_revisor,bol_gra_revisor,bol_nombre,bol_grado,bol_empleo,bol_cat_comte,
    bol_gra_comte,bol_contrato,bol_unidad,bol_ejecutora,bol_fe_revision,
    bol_fe_emision,bol_observaciones,bol_situacion,desp_bol_id,desp_bol_dependencia,
    desp_bol_cat_revisor,desp_bol_gra_revisor,desp_bol_nombre,desp_bol_grado,
    desp_bol_empleo,desp_bol_cat_comte,desp_bol_gra_comte,desp_bol_contrato,
    desp_bol_unidad,desp_bol_ejecutora,desp_bol_fe_revision,desp_bol_fe_emision,
    desp_bol_observaciones,desp_bol_situacion,accion,usuario,hora)  values 
    (antes.bol_id ,antes.bol_dependencia ,antes.bol_cat_revisor ,antes.bol_gra_revisor 
    ,antes.bol_nombre ,antes.bol_grado ,antes.bol_empleo ,antes.bol_cat_comte 
    ,antes.bol_gra_comte ,antes.bol_contrato ,antes.bol_unidad ,antes.bol_ejecutora 
    ,antes.bol_fe_revision ,antes.bol_fe_emision ,antes.bol_observaciones 
    ,antes.bol_situacion ,luego.bol_id ,luego.bol_dependencia ,luego.bol_cat_revisor 
    ,luego.bol_gra_revisor ,luego.bol_nombre ,luego.bol_grado ,luego.bol_empleo 
    ,luego.bol_cat_comte ,luego.bol_gra_comte ,luego.bol_contrato ,luego.bol_unidad 
    ,luego.bol_ejecutora ,luego.bol_fe_revision ,luego.bol_fe_emision 
    ,luego.bol_observaciones ,luego.bol_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_con_mper_contratos insert on "informix"
    .con_mper_contratos referencing new as luego
    for each row
        (
        insert into "informix".aud_con_mper_contratos (perc_id,
    perc_dpi,perc_nom1,perc_nom2,perc_nom3,perc_ape1,perc_ape2,perc_ape3,
    perc_direccion,perc_estado_civil,perc_sexo,perc_profesion,perc_departamento,
    perc_municipio,perc_fech_nac,perc_status,desp_perc_id,desp_perc_dpi,
    desp_perc_nom1,desp_perc_nom2,desp_perc_nom3,desp_perc_ape1,desp_perc_ape2,
    desp_perc_ape3,desp_perc_direccion,desp_perc_estado_civil,desp_perc_sexo,
    desp_perc_profesion,desp_perc_departamento,desp_perc_municipio,desp_perc_fech_nac,
    desp_perc_status,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.perc_id ,luego.perc_dpi ,luego.perc_nom1 
    ,luego.perc_nom2 ,luego.perc_nom3 ,luego.perc_ape1 ,luego.perc_ape2 
    ,luego.perc_ape3 ,luego.perc_direccion ,luego.perc_estado_civil ,
    luego.perc_sexo ,luego.perc_profesion ,luego.perc_departamento ,luego.perc_municipio 
    ,luego.perc_fech_nac ,luego.perc_status ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_con_mper_contratos delete on "informix"
    .con_mper_contratos referencing old as antes
    for each row
        (
        insert into "informix".aud_con_mper_contratos (perc_id,
    perc_dpi,perc_nom1,perc_nom2,perc_nom3,perc_ape1,perc_ape2,perc_ape3,
    perc_direccion,perc_estado_civil,perc_sexo,perc_profesion,perc_departamento,
    perc_municipio,perc_fech_nac,perc_status,desp_perc_id,desp_perc_dpi,
    desp_perc_nom1,desp_perc_nom2,desp_perc_nom3,desp_perc_ape1,desp_perc_ape2,
    desp_perc_ape3,desp_perc_direccion,desp_perc_estado_civil,desp_perc_sexo,
    desp_perc_profesion,desp_perc_departamento,desp_perc_municipio,desp_perc_fech_nac,
    desp_perc_status,accion,usuario,hora)  values (antes.perc_id ,antes.perc_dpi 
    ,antes.perc_nom1 ,antes.perc_nom2 ,antes.perc_nom3 ,antes.perc_ape1 
    ,antes.perc_ape2 ,antes.perc_ape3 ,antes.perc_direccion ,antes.perc_estado_civil 
    ,antes.perc_sexo ,antes.perc_profesion ,antes.perc_departamento ,
    antes.perc_municipio ,antes.perc_fech_nac ,antes.perc_status ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_con_mper_contratos update on "informix"
    .con_mper_contratos referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_con_mper_contratos (perc_id,
    perc_dpi,perc_nom1,perc_nom2,perc_nom3,perc_ape1,perc_ape2,perc_ape3,
    perc_direccion,perc_estado_civil,perc_sexo,perc_profesion,perc_departamento,
    perc_municipio,perc_fech_nac,perc_status,desp_perc_id,desp_perc_dpi,
    desp_perc_nom1,desp_perc_nom2,desp_perc_nom3,desp_perc_ape1,desp_perc_ape2,
    desp_perc_ape3,desp_perc_direccion,desp_perc_estado_civil,desp_perc_sexo,
    desp_perc_profesion,desp_perc_departamento,desp_perc_municipio,desp_perc_fech_nac,
    desp_perc_status,accion,usuario,hora)  values (antes.perc_id ,antes.perc_dpi 
    ,antes.perc_nom1 ,antes.perc_nom2 ,antes.perc_nom3 ,antes.perc_ape1 
    ,antes.perc_ape2 ,antes.perc_ape3 ,antes.perc_direccion ,antes.perc_estado_civil 
    ,antes.perc_sexo ,antes.perc_profesion ,antes.perc_departamento ,
    antes.perc_municipio ,antes.perc_fech_nac ,antes.perc_status ,luego.perc_id 
    ,luego.perc_dpi ,luego.perc_nom1 ,luego.perc_nom2 ,luego.perc_nom3 
    ,luego.perc_ape1 ,luego.perc_ape2 ,luego.perc_ape3 ,luego.perc_direccion 
    ,luego.perc_estado_civil ,luego.perc_sexo ,luego.perc_profesion ,
    luego.perc_departamento ,luego.perc_municipio ,luego.perc_fech_nac 
    ,luego.perc_status ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_con_contrato insert on "informix"
    .con_contrato referencing new as luego
    for each row
        (
        insert into "informix".aud_con_contrato (con_id,con_num_contrato,
    con_contratado,con_fech_contrato,con_jur_datos,con_fech_inicio,con_fech_fin,
    con_horas_trabajo,con_hora_entra,con_hora_salida,con_hora_entra2,
    con_hora_salida2,con_meses,con_sueldo,con_sueldo_mensual,con_bono66,
    con_bono_pro,con_colegiado,con_seguro,con_desc_seguro,con_mont_asegu,
    con_ocupacion,con_horario,con_cant_peisol,con_esp_peisol,con_minuta,
    con_dependencia,con_asignacion,con_ant_asignacion,con_con_modi,con_observaciones,
    con_status,desp_con_id,desp_con_num_contrato,desp_con_contratado,
    desp_con_fech_contrato,desp_con_jur_datos,desp_con_fech_inicio,desp_con_fech_fin,
    desp_con_horas_trabajo,desp_con_hora_entra,desp_con_hora_salida,desp_con_hora_entra2,
    desp_con_hora_salida2,desp_con_meses,desp_con_sueldo,desp_con_sueldo_mensual,
    desp_con_bono66,desp_con_bono_pro,desp_con_colegiado,desp_con_seguro,
    desp_con_desc_seguro,desp_con_mont_asegu,desp_con_ocupacion,desp_con_horario,
    desp_con_cant_peisol,desp_con_esp_peisol,desp_con_minuta,desp_con_dependencia,
    desp_con_asignacion,desp_con_ant_asignacion,desp_con_con_modi,desp_con_observaciones,
    desp_con_status,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,luego.con_id ,luego.con_num_contrato ,luego.con_contratado 
    ,luego.con_fech_contrato ,luego.con_jur_datos ,luego.con_fech_inicio 
    ,luego.con_fech_fin ,luego.con_horas_trabajo ,luego.con_hora_entra 
    ,luego.con_hora_salida ,luego.con_hora_entra2 ,luego.con_hora_salida2 
    ,luego.con_meses ,luego.con_sueldo ,luego.con_sueldo_mensual ,luego.con_bono66 
    ,luego.con_bono_pro ,luego.con_colegiado ,luego.con_seguro ,luego.con_desc_seguro 
    ,luego.con_mont_asegu ,luego.con_ocupacion ,luego.con_horario ,luego.con_cant_peisol 
    ,luego.con_esp_peisol ,luego.con_minuta ,luego.con_dependencia ,luego.con_asignacion 
    ,luego.con_ant_asignacion ,luego.con_con_modi ,luego.con_observaciones 
    ,luego.con_status ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_con_contrato delete on "informix"
    .con_contrato referencing old as antes
    for each row
        (
        insert into "informix".aud_con_contrato (con_id,con_num_contrato,
    con_contratado,con_fech_contrato,con_jur_datos,con_fech_inicio,con_fech_fin,
    con_horas_trabajo,con_hora_entra,con_hora_salida,con_hora_entra2,
    con_hora_salida2,con_meses,con_sueldo,con_sueldo_mensual,con_bono66,
    con_bono_pro,con_colegiado,con_seguro,con_desc_seguro,con_mont_asegu,
    con_ocupacion,con_horario,con_cant_peisol,con_esp_peisol,con_minuta,
    con_dependencia,con_asignacion,con_ant_asignacion,con_con_modi,con_observaciones,
    con_status,desp_con_id,desp_con_num_contrato,desp_con_contratado,
    desp_con_fech_contrato,desp_con_jur_datos,desp_con_fech_inicio,desp_con_fech_fin,
    desp_con_horas_trabajo,desp_con_hora_entra,desp_con_hora_salida,desp_con_hora_entra2,
    desp_con_hora_salida2,desp_con_meses,desp_con_sueldo,desp_con_sueldo_mensual,
    desp_con_bono66,desp_con_bono_pro,desp_con_colegiado,desp_con_seguro,
    desp_con_desc_seguro,desp_con_mont_asegu,desp_con_ocupacion,desp_con_horario,
    desp_con_cant_peisol,desp_con_esp_peisol,desp_con_minuta,desp_con_dependencia,
    desp_con_asignacion,desp_con_ant_asignacion,desp_con_con_modi,desp_con_observaciones,
    desp_con_status,accion,usuario,hora)  values (antes.con_id ,antes.con_num_contrato 
    ,antes.con_contratado ,antes.con_fech_contrato ,antes.con_jur_datos 
    ,antes.con_fech_inicio ,antes.con_fech_fin ,antes.con_horas_trabajo 
    ,antes.con_hora_entra ,antes.con_hora_salida ,antes.con_hora_entra2 
    ,antes.con_hora_salida2 ,antes.con_meses ,antes.con_sueldo ,antes.con_sueldo_mensual 
    ,antes.con_bono66 ,antes.con_bono_pro ,antes.con_colegiado ,antes.con_seguro 
    ,antes.con_desc_seguro ,antes.con_mont_asegu ,antes.con_ocupacion 
    ,antes.con_horario ,antes.con_cant_peisol ,antes.con_esp_peisol ,
    antes.con_minuta ,antes.con_dependencia ,antes.con_asignacion ,antes.con_ant_asignacion 
    ,antes.con_con_modi ,antes.con_observaciones ,antes.con_status ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_con_contrato update on "informix"
    .con_contrato referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_contrato (con_id,con_num_contrato,
    con_contratado,con_fech_contrato,con_jur_datos,con_fech_inicio,con_fech_fin,
    con_horas_trabajo,con_hora_entra,con_hora_salida,con_hora_entra2,
    con_hora_salida2,con_meses,con_sueldo,con_sueldo_mensual,con_bono66,
    con_bono_pro,con_colegiado,con_seguro,con_desc_seguro,con_mont_asegu,
    con_ocupacion,con_horario,con_cant_peisol,con_esp_peisol,con_minuta,
    con_dependencia,con_asignacion,con_ant_asignacion,con_con_modi,con_observaciones,
    con_status,desp_con_id,desp_con_num_contrato,desp_con_contratado,
    desp_con_fech_contrato,desp_con_jur_datos,desp_con_fech_inicio,desp_con_fech_fin,
    desp_con_horas_trabajo,desp_con_hora_entra,desp_con_hora_salida,desp_con_hora_entra2,
    desp_con_hora_salida2,desp_con_meses,desp_con_sueldo,desp_con_sueldo_mensual,
    desp_con_bono66,desp_con_bono_pro,desp_con_colegiado,desp_con_seguro,
    desp_con_desc_seguro,desp_con_mont_asegu,desp_con_ocupacion,desp_con_horario,
    desp_con_cant_peisol,desp_con_esp_peisol,desp_con_minuta,desp_con_dependencia,
    desp_con_asignacion,desp_con_ant_asignacion,desp_con_con_modi,desp_con_observaciones,
    desp_con_status,accion,usuario,hora)  values (antes.con_id ,antes.con_num_contrato 
    ,antes.con_contratado ,antes.con_fech_contrato ,antes.con_jur_datos 
    ,antes.con_fech_inicio ,antes.con_fech_fin ,antes.con_horas_trabajo 
    ,antes.con_hora_entra ,antes.con_hora_salida ,antes.con_hora_entra2 
    ,antes.con_hora_salida2 ,antes.con_meses ,antes.con_sueldo ,antes.con_sueldo_mensual 
    ,antes.con_bono66 ,antes.con_bono_pro ,antes.con_colegiado ,antes.con_seguro 
    ,antes.con_desc_seguro ,antes.con_mont_asegu ,antes.con_ocupacion 
    ,antes.con_horario ,antes.con_cant_peisol ,antes.con_esp_peisol ,
    antes.con_minuta ,antes.con_dependencia ,antes.con_asignacion ,antes.con_ant_asignacion 
    ,antes.con_con_modi ,antes.con_observaciones ,antes.con_status ,luego.con_id 
    ,luego.con_num_contrato ,luego.con_contratado ,luego.con_fech_contrato 
    ,luego.con_jur_datos ,luego.con_fech_inicio ,luego.con_fech_fin ,
    luego.con_horas_trabajo ,luego.con_hora_entra ,luego.con_hora_salida 
    ,luego.con_hora_entra2 ,luego.con_hora_salida2 ,luego.con_meses ,
    luego.con_sueldo ,luego.con_sueldo_mensual ,luego.con_bono66 ,luego.con_bono_pro 
    ,luego.con_colegiado ,luego.con_seguro ,luego.con_desc_seguro ,luego.con_mont_asegu 
    ,luego.con_ocupacion ,luego.con_horario ,luego.con_cant_peisol ,luego.con_esp_peisol 
    ,luego.con_minuta ,luego.con_dependencia ,luego.con_asignacion ,luego.con_ant_asignacion 
    ,luego.con_con_modi ,luego.con_observaciones ,luego.con_status ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_con_desc_area insert on "informix"
    .con_desc_area referencing new as luego
    for each row
        (
        insert into "informix".aud_con_desc_area (desc_area_id,
    desc_area_descripcion,desp_desc_area_id,desp_desc_area_descripcion,
    accion,usuario,hora)  values (NULL ,'' ,luego.desc_area_id ,luego.desc_area_descripcion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_con_desc_area delete on "informix"
    .con_desc_area referencing old as antes
    for each row
        (
        insert into "informix".aud_con_desc_area (desc_area_id,
    desc_area_descripcion,desp_desc_area_id,desp_desc_area_descripcion,
    accion,usuario,hora)  values (antes.desc_area_id ,antes.desc_area_descripcion 
    ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_con_desc_area update on "informix"
    .con_desc_area referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_desc_area (desc_area_id,
    desc_area_descripcion,desp_desc_area_id,desp_desc_area_descripcion,
    accion,usuario,hora)  values (antes.desc_area_id ,antes.desc_area_descripcion 
    ,luego.desc_area_id ,luego.desc_area_descripcion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_con_desc_subareas insert on "informix"
    .con_desc_subareas referencing new as luego
    for each row
        (
        insert into "informix".aud_con_desc_subareas (desc_sub_id,
    desc_sub_descripcion,desp_desc_sub_id,desp_desc_sub_descripcion,accion,
    usuario,hora)  values (NULL ,'' ,luego.desc_sub_id ,luego.desc_sub_descripcion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_con_desc_subareas delete on "informix"
    .con_desc_subareas referencing old as antes
    for each row
        (
        insert into "informix".aud_con_desc_subareas (desc_sub_id,
    desc_sub_descripcion,desp_desc_sub_id,desp_desc_sub_descripcion,accion,
    usuario,hora)  values (antes.desc_sub_id ,antes.desc_sub_descripcion 
    ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_con_desc_subareas update on "informix"
    .con_desc_subareas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_desc_subareas (desc_sub_id,
    desc_sub_descripcion,desp_desc_sub_id,desp_desc_sub_descripcion,accion,
    usuario,hora)  values (antes.desc_sub_id ,antes.desc_sub_descripcion 
    ,luego.desc_sub_id ,luego.desc_sub_descripcion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_con_manual insert on "informix".con_manual 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_con_manual (man_id,man_descripcion,
    man_situacion,man_extra1,desp_man_id,desp_man_descripcion,desp_man_situacion,
    desp_man_extra1,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.man_id 
    ,luego.man_descripcion ,luego.man_situacion ,luego.man_extra1 ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_con_manual delete on "informix".con_manual 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_con_manual (man_id,man_descripcion,
    man_situacion,man_extra1,desp_man_id,desp_man_descripcion,desp_man_situacion,
    desp_man_extra1,accion,usuario,hora)  values (antes.man_id ,antes.man_descripcion 
    ,antes.man_situacion ,antes.man_extra1 ,NULL ,'' ,'' ,'' ,'D' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".act_con_manual update on "informix".con_manual 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_manual (man_id,man_descripcion,
    man_situacion,man_extra1,desp_man_id,desp_man_descripcion,desp_man_situacion,
    desp_man_extra1,accion,usuario,hora)  values (antes.man_id ,antes.man_descripcion 
    ,antes.man_situacion ,antes.man_extra1 ,luego.man_id ,luego.man_descripcion 
    ,luego.man_situacion ,luego.man_extra1 ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_con_minuta insert on "informix".con_minuta 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_con_minuta (min_id,min_descripcion,
    min_situacion,desp_min_id,desp_min_descripcion,desp_min_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.min_id ,luego.min_descripcion 
    ,luego.min_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_con_minuta delete on "informix".con_minuta 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_con_minuta (min_id,min_descripcion,
    min_situacion,desp_min_id,desp_min_descripcion,desp_min_situacion,
    accion,usuario,hora)  values (antes.min_id ,antes.min_descripcion 
    ,antes.min_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_con_minuta update on "informix".con_minuta 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_minuta (min_id,min_descripcion,
    min_situacion,desp_min_id,desp_min_descripcion,desp_min_situacion,
    accion,usuario,hora)  values (antes.min_id ,antes.min_descripcion 
    ,antes.min_situacion ,luego.min_id ,luego.min_descripcion ,luego.min_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_con_observaciones insert on "informix"
    .con_observaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_con_observaciones (obs_id,
    obs_contrato,obs_depen,obs_obser,obs_fecha,obs_salario,obs_situacion,
    obs_usuario,desp_obs_id,desp_obs_contrato,desp_obs_depen,desp_obs_obser,
    desp_obs_fecha,desp_obs_salario,desp_obs_situacion,desp_obs_usuario,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.obs_id 
    ,luego.obs_contrato ,luego.obs_depen ,luego.obs_obser ,luego.obs_fecha 
    ,luego.obs_salario ,luego.obs_situacion ,luego.obs_usuario ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_con_observaciones delete on "informix"
    .con_observaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_con_observaciones (obs_id,
    obs_contrato,obs_depen,obs_obser,obs_fecha,obs_salario,obs_situacion,
    obs_usuario,desp_obs_id,desp_obs_contrato,desp_obs_depen,desp_obs_obser,
    desp_obs_fecha,desp_obs_salario,desp_obs_situacion,desp_obs_usuario,
    accion,usuario,hora)  values (antes.obs_id ,antes.obs_contrato ,antes.obs_depen 
    ,antes.obs_obser ,antes.obs_fecha ,antes.obs_salario ,antes.obs_situacion 
    ,antes.obs_usuario ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_con_observaciones update on "informix"
    .con_observaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_observaciones (obs_id,
    obs_contrato,obs_depen,obs_obser,obs_fecha,obs_salario,obs_situacion,
    obs_usuario,desp_obs_id,desp_obs_contrato,desp_obs_depen,desp_obs_obser,
    desp_obs_fecha,desp_obs_salario,desp_obs_situacion,desp_obs_usuario,
    accion,usuario,hora)  values (antes.obs_id ,antes.obs_contrato ,antes.obs_depen 
    ,antes.obs_obser ,antes.obs_fecha ,antes.obs_salario ,antes.obs_situacion 
    ,antes.obs_usuario ,luego.obs_id ,luego.obs_contrato ,luego.obs_depen 
    ,luego.obs_obser ,luego.obs_fecha ,luego.obs_salario ,luego.obs_situacion 
    ,luego.obs_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_con_permisos insert on "informix"
    .con_permisos referencing new as luego
    for each row
        (
        insert into "informix".aud_con_permisos (con_per_id,con_per_cat,
    con_per_dep,con_per_situacion,desp_con_per_id,desp_con_per_cat,desp_con_per_dep,
    desp_con_per_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,
    '' ,luego.con_per_id ,luego.con_per_cat ,luego.con_per_dep ,luego.con_per_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_con_permisos delete on "informix"
    .con_permisos referencing old as antes
    for each row
        (
        insert into "informix".aud_con_permisos (con_per_id,con_per_cat,
    con_per_dep,con_per_situacion,desp_con_per_id,desp_con_per_cat,desp_con_per_dep,
    desp_con_per_situacion,accion,usuario,hora)  values (antes.con_per_id 
    ,antes.con_per_cat ,antes.con_per_dep ,antes.con_per_situacion ,NULL 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_con_permisos update on "informix"
    .con_permisos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_permisos (con_per_id,con_per_cat,
    con_per_dep,con_per_situacion,desp_con_per_id,desp_con_per_cat,desp_con_per_dep,
    desp_con_per_situacion,accion,usuario,hora)  values (antes.con_per_id 
    ,antes.con_per_cat ,antes.con_per_dep ,antes.con_per_situacion ,luego.con_per_id 
    ,luego.con_per_cat ,luego.con_per_dep ,luego.con_per_situacion ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_con_plaza insert on "informix".con_plaza 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_con_plaza (plaza_id,plaza_descripcion,
    plaza_situacion,plaza_area,plaza_extra1,desp_plaza_id,desp_plaza_descripcion,
    desp_plaza_situacion,desp_plaza_area,desp_plaza_extra1,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.plaza_id ,luego.plaza_descripcion 
    ,luego.plaza_situacion ,luego.plaza_area ,luego.plaza_extra1 ,'I' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_con_plaza delete on "informix".con_plaza 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_con_plaza (plaza_id,plaza_descripcion,
    plaza_situacion,plaza_area,plaza_extra1,desp_plaza_id,desp_plaza_descripcion,
    desp_plaza_situacion,desp_plaza_area,desp_plaza_extra1,accion,usuario,
    hora)  values (antes.plaza_id ,antes.plaza_descripcion ,antes.plaza_situacion 
    ,antes.plaza_area ,antes.plaza_extra1 ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_con_plaza update on "informix".con_plaza 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_plaza (plaza_id,plaza_descripcion,
    plaza_situacion,plaza_area,plaza_extra1,desp_plaza_id,desp_plaza_descripcion,
    desp_plaza_situacion,desp_plaza_area,desp_plaza_extra1,accion,usuario,
    hora)  values (antes.plaza_id ,antes.plaza_descripcion ,antes.plaza_situacion 
    ,antes.plaza_area ,antes.plaza_extra1 ,luego.plaza_id ,luego.plaza_descripcion 
    ,luego.plaza_situacion ,luego.plaza_area ,luego.plaza_extra1 ,'U' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_con_seguimiento insert on "informix"
    .con_seguimiento referencing new as luego
    for each row
        (
        insert into "informix".aud_con_seguimiento (seg_id,seg_contrato,
    seg_ubicacion,seg_fecha,seg_motivo,seg_catalogo,desp_seg_id,desp_seg_contrato,
    desp_seg_ubicacion,desp_seg_fecha,desp_seg_motivo,desp_seg_catalogo,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.seg_id ,
    luego.seg_contrato ,luego.seg_ubicacion ,luego.seg_fecha ,luego.seg_motivo 
    ,luego.seg_catalogo ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_con_seguimiento delete on "informix"
    .con_seguimiento referencing old as antes
    for each row
        (
        insert into "informix".aud_con_seguimiento (seg_id,seg_contrato,
    seg_ubicacion,seg_fecha,seg_motivo,seg_catalogo,desp_seg_id,desp_seg_contrato,
    desp_seg_ubicacion,desp_seg_fecha,desp_seg_motivo,desp_seg_catalogo,
    accion,usuario,hora)  values (antes.seg_id ,antes.seg_contrato ,antes.seg_ubicacion 
    ,antes.seg_fecha ,antes.seg_motivo ,antes.seg_catalogo ,NULL ,'' ,
    '' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_con_seguimiento update on "informix"
    .con_seguimiento referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_seguimiento (seg_id,seg_contrato,
    seg_ubicacion,seg_fecha,seg_motivo,seg_catalogo,desp_seg_id,desp_seg_contrato,
    desp_seg_ubicacion,desp_seg_fecha,desp_seg_motivo,desp_seg_catalogo,
    accion,usuario,hora)  values (antes.seg_id ,antes.seg_contrato ,antes.seg_ubicacion 
    ,antes.seg_fecha ,antes.seg_motivo ,antes.seg_catalogo ,luego.seg_id 
    ,luego.seg_contrato ,luego.seg_ubicacion ,luego.seg_fecha ,luego.seg_motivo 
    ,luego.seg_catalogo ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_con_solicitud insert on "informix"
    .cont_solicitud referencing new as luego
    for each row
        (
        insert into "informix".aud_cont_solicitud (sol_codigo,
    sol_anio,sol_formulario,sol_dependencia,sol_fec_solicit,sol_justific,
    sol_oficio,desp_sol_codigo,desp_sol_anio,desp_sol_formulario,desp_sol_dependencia,
    desp_sol_fec_solicit,desp_sol_justific,desp_sol_oficio,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,luego.sol_codigo ,luego.sol_anio 
    ,luego.sol_formulario ,luego.sol_dependencia ,luego.sol_fec_solicit 
    ,luego.sol_justific ,luego.sol_oficio ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_con_solicitud delete on "informix"
    .cont_solicitud referencing old as antes
    for each row
        (
        insert into "informix".aud_cont_solicitud (sol_codigo,
    sol_anio,sol_formulario,sol_dependencia,sol_fec_solicit,sol_justific,
    sol_oficio,desp_sol_codigo,desp_sol_anio,desp_sol_formulario,desp_sol_dependencia,
    desp_sol_fec_solicit,desp_sol_justific,desp_sol_oficio,accion,usuario,
    hora)  values (antes.sol_codigo ,antes.sol_anio ,antes.sol_formulario 
    ,antes.sol_dependencia ,antes.sol_fec_solicit ,antes.sol_justific 
    ,antes.sol_oficio ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_con_solicitud update on "informix"
    .cont_solicitud referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cont_solicitud (sol_codigo,
    sol_anio,sol_formulario,sol_dependencia,sol_fec_solicit,sol_justific,
    sol_oficio,desp_sol_codigo,desp_sol_anio,desp_sol_formulario,desp_sol_dependencia,
    desp_sol_fec_solicit,desp_sol_justific,desp_sol_oficio,accion,usuario,
    hora)  values (antes.sol_codigo ,antes.sol_anio ,antes.sol_formulario 
    ,antes.sol_dependencia ,antes.sol_fec_solicit ,antes.sol_justific 
    ,antes.sol_oficio ,luego.sol_codigo ,luego.sol_anio ,luego.sol_formulario 
    ,luego.sol_dependencia ,luego.sol_fec_solicit ,luego.sol_justific 
    ,luego.sol_oficio ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_con_subareas insert on "informix"
    .con_subareas referencing new as luego
    for each row
        (
        insert into "informix".aud_con_subareas (sub_id,sub_descripcion,
    sub_sueldobase,sub_bono66,sub_situacion,sub_area,sub_dependencia,
    sub_extra2,desp_sub_id,desp_sub_descripcion,desp_sub_sueldobase,desp_sub_bono66,
    desp_sub_situacion,desp_sub_area,desp_sub_dependencia,desp_sub_extra2,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.sub_id 
    ,luego.sub_descripcion ,luego.sub_sueldobase ,luego.sub_bono66 ,luego.sub_situacion 
    ,luego.sub_area ,luego.sub_dependencia ,luego.sub_extra2 ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_con_subareas delete on "informix"
    .con_subareas referencing old as antes
    for each row
        (
        insert into "informix".aud_con_subareas (sub_id,sub_descripcion,
    sub_sueldobase,sub_bono66,sub_situacion,sub_area,sub_dependencia,
    sub_extra2,desp_sub_id,desp_sub_descripcion,desp_sub_sueldobase,desp_sub_bono66,
    desp_sub_situacion,desp_sub_area,desp_sub_dependencia,desp_sub_extra2,
    accion,usuario,hora)  values (antes.sub_id ,antes.sub_descripcion 
    ,antes.sub_sueldobase ,antes.sub_bono66 ,antes.sub_situacion ,antes.sub_area 
    ,antes.sub_dependencia ,antes.sub_extra2 ,NULL ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_con_subareas update on "informix"
    .con_subareas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_subareas (sub_id,sub_descripcion,
    sub_sueldobase,sub_bono66,sub_situacion,sub_area,sub_dependencia,
    sub_extra2,desp_sub_id,desp_sub_descripcion,desp_sub_sueldobase,desp_sub_bono66,
    desp_sub_situacion,desp_sub_area,desp_sub_dependencia,desp_sub_extra2,
    accion,usuario,hora)  values (antes.sub_id ,antes.sub_descripcion 
    ,antes.sub_sueldobase ,antes.sub_bono66 ,antes.sub_situacion ,antes.sub_area 
    ,antes.sub_dependencia ,antes.sub_extra2 ,luego.sub_id ,luego.sub_descripcion 
    ,luego.sub_sueldobase ,luego.sub_bono66 ,luego.sub_situacion ,luego.sub_area 
    ,luego.sub_dependencia ,luego.sub_extra2 ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_con_usuarios insert on "informix"
    .con_usuarios referencing new as luego
    for each row
        (
        insert into "informix".aud_con_usuarios (usu_id,usu_usuario,
    usu_pass,usu_nom1,usu_nom2,usu_ape1,usu_ape2,usu_ape3,usu_grado,usu_empleo,
    usu_dependencia,usu_situacion,desp_usu_id,desp_usu_usuario,desp_usu_pass,
    desp_usu_nom1,desp_usu_nom2,desp_usu_ape1,desp_usu_ape2,desp_usu_ape3,
    desp_usu_grado,desp_usu_empleo,desp_usu_dependencia,desp_usu_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,luego.usu_id ,luego.usu_usuario ,luego.usu_pass ,luego.usu_nom1 
    ,luego.usu_nom2 ,luego.usu_ape1 ,luego.usu_ape2 ,luego.usu_ape3 ,
    luego.usu_grado ,luego.usu_empleo ,luego.usu_dependencia ,luego.usu_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_con_usuarios delete on "informix"
    .con_usuarios referencing old as antes
    for each row
        (
        insert into "informix".aud_con_usuarios (usu_id,usu_usuario,
    usu_pass,usu_nom1,usu_nom2,usu_ape1,usu_ape2,usu_ape3,usu_grado,usu_empleo,
    usu_dependencia,usu_situacion,desp_usu_id,desp_usu_usuario,desp_usu_pass,
    desp_usu_nom1,desp_usu_nom2,desp_usu_ape1,desp_usu_ape2,desp_usu_ape3,
    desp_usu_grado,desp_usu_empleo,desp_usu_dependencia,desp_usu_situacion,
    accion,usuario,hora)  values (antes.usu_id ,antes.usu_usuario ,antes.usu_pass 
    ,antes.usu_nom1 ,antes.usu_nom2 ,antes.usu_ape1 ,antes.usu_ape2 ,
    antes.usu_ape3 ,antes.usu_grado ,antes.usu_empleo ,antes.usu_dependencia 
    ,antes.usu_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_con_usuarios update on "informix"
    .con_usuarios referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_usuarios (usu_id,usu_usuario,
    usu_pass,usu_nom1,usu_nom2,usu_ape1,usu_ape2,usu_ape3,usu_grado,usu_empleo,
    usu_dependencia,desp_usu_id,desp_usu_usuario,desp_usu_pass,desp_usu_nom1,
    desp_usu_nom2,desp_usu_ape1,desp_usu_ape2,desp_usu_ape3,desp_usu_grado,
    desp_usu_empleo,desp_usu_dependencia,accion,usuario,hora)  values 
    (antes.usu_id ,antes.usu_usuario ,antes.usu_pass ,antes.usu_nom1 
    ,antes.usu_nom2 ,antes.usu_ape1 ,antes.usu_ape2 ,antes.usu_ape3 ,
    antes.usu_grado ,antes.usu_empleo ,antes.usu_dependencia ,luego.usu_id 
    ,luego.usu_usuario ,luego.usu_pass ,luego.usu_nom1 ,luego.usu_nom2 
    ,luego.usu_ape1 ,luego.usu_ape2 ,luego.usu_ape3 ,luego.usu_grado 
    ,luego.usu_empleo ,luego.usu_dependencia ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_con_juridico insert on "informix"
    .con_juridico referencing new as luego
    for each row
        (
        insert into "informix".aud_con_juridico (jur_id,jur_cat_vice,
    jur_gra_vice,jur_cat_ministro,jur_gra_ministro,jur_nom_ministro,jur_nom_vice,
    jur_no_acuer_gub,jur_fecha_acuer_gub,jur_cert_acta,jur_fech_acta,
    jur_ofi_no,jur_fech_ofi,jur_status,desp_jur_id,desp_jur_cat_vice,
    desp_jur_gra_vice,desp_jur_cat_ministro,desp_jur_gra_ministro,desp_jur_nom_ministro,
    desp_jur_nom_vice,desp_jur_no_acuer_gub,desp_jur_fecha_acuer_gub,
    desp_jur_cert_acta,desp_jur_fech_acta,desp_jur_ofi_no,desp_jur_fech_ofi,
    desp_jur_status,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.jur_id ,luego.jur_cat_vice ,luego.jur_gra_vice 
    ,luego.jur_cat_ministro ,luego.jur_gra_ministro ,luego.jur_nom_ministro 
    ,luego.jur_nom_vice ,luego.jur_no_acuer_gub ,luego.jur_fecha_acuer_gub 
    ,luego.jur_cert_acta ,luego.jur_fech_acta ,luego.jur_ofi_no ,luego.jur_fech_ofi 
    ,luego.jur_status ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_con_juridico delete on "informix"
    .con_juridico referencing old as antes
    for each row
        (
        insert into "informix".aud_con_juridico (jur_id,jur_cat_vice,
    jur_gra_vice,jur_cat_ministro,jur_gra_ministro,jur_nom_ministro,jur_nom_vice,
    jur_no_acuer_gub,jur_fecha_acuer_gub,jur_cert_acta,jur_fech_acta,
    jur_ofi_no,jur_fech_ofi,jur_status,desp_jur_id,desp_jur_cat_vice,
    desp_jur_gra_vice,desp_jur_cat_ministro,desp_jur_gra_ministro,desp_jur_nom_ministro,
    desp_jur_nom_vice,desp_jur_no_acuer_gub,desp_jur_fecha_acuer_gub,
    desp_jur_cert_acta,desp_jur_fech_acta,desp_jur_ofi_no,desp_jur_fech_ofi,
    desp_jur_status,accion,usuario,hora)  values (antes.jur_id ,antes.jur_cat_vice 
    ,antes.jur_gra_vice ,antes.jur_cat_ministro ,antes.jur_gra_ministro 
    ,antes.jur_nom_ministro ,antes.jur_nom_vice ,antes.jur_no_acuer_gub 
    ,antes.jur_fecha_acuer_gub ,antes.jur_cert_acta ,antes.jur_fech_acta 
    ,antes.jur_ofi_no ,antes.jur_fech_ofi ,antes.jur_status ,NULL ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_con_juridico update on "informix"
    .con_juridico referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_juridico (jur_id,jur_cat_vice,
    jur_gra_vice,jur_cat_ministro,jur_gra_ministro,jur_nom_ministro,jur_nom_vice,
    jur_no_acuer_gub,jur_fecha_acuer_gub,jur_cert_acta,jur_fech_acta,
    jur_ofi_no,jur_fech_ofi,jur_status,desp_jur_id,desp_jur_cat_vice,
    desp_jur_gra_vice,desp_jur_cat_ministro,desp_jur_gra_ministro,desp_jur_nom_ministro,
    desp_jur_nom_vice,desp_jur_no_acuer_gub,desp_jur_fecha_acuer_gub,
    desp_jur_cert_acta,desp_jur_fech_acta,desp_jur_ofi_no,desp_jur_fech_ofi,
    desp_jur_status,accion,usuario,hora)  values (antes.jur_id ,antes.jur_cat_vice 
    ,antes.jur_gra_vice ,antes.jur_cat_ministro ,antes.jur_gra_ministro 
    ,antes.jur_nom_ministro ,antes.jur_nom_vice ,antes.jur_no_acuer_gub 
    ,antes.jur_fecha_acuer_gub ,antes.jur_cert_acta ,antes.jur_fech_acta 
    ,antes.jur_ofi_no ,antes.jur_fech_ofi ,antes.jur_status ,luego.jur_id 
    ,luego.jur_cat_vice ,luego.jur_gra_vice ,luego.jur_cat_ministro ,
    luego.jur_gra_ministro ,luego.jur_nom_ministro ,luego.jur_nom_vice 
    ,luego.jur_no_acuer_gub ,luego.jur_fecha_acuer_gub ,luego.jur_cert_acta 
    ,luego.jur_fech_acta ,luego.jur_ofi_no ,luego.jur_fech_ofi ,luego.jur_status 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_con_ef_personal insert on "informix"
    .con_ef_personal referencing new as luego
    for each row
        (
        insert into "informix".aud_con_ef_personal (ef_id,ef_disponibles,
    ef_vacantes,ef_unidadejecutora,ef_fechaactual,ef_fechaef,ef_total,
    ef_situacion,ef_extra,desp_ef_id,desp_ef_disponibles,desp_ef_vacantes,
    desp_ef_unidadejecutora,desp_ef_fechaactual,desp_ef_fechaef,desp_ef_total,
    desp_ef_situacion,desp_ef_extra,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.ef_id ,luego.ef_disponibles ,luego.ef_vacantes 
    ,luego.ef_unidadejecutora ,luego.ef_fechaactual ,luego.ef_fechaef 
    ,luego.ef_total ,luego.ef_situacion ,luego.ef_extra ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_con_ef_personal delete on "informix"
    .con_ef_personal referencing old as antes
    for each row
        (
        insert into "informix".aud_con_ef_personal (ef_id,ef_disponibles,
    ef_vacantes,ef_unidadejecutora,ef_fechaactual,ef_fechaef,ef_total,
    ef_situacion,ef_extra,desp_ef_id,desp_ef_disponibles,desp_ef_vacantes,
    desp_ef_unidadejecutora,desp_ef_fechaactual,desp_ef_fechaef,desp_ef_total,
    desp_ef_situacion,desp_ef_extra,accion,usuario,hora)  values (antes.ef_id 
    ,antes.ef_disponibles ,antes.ef_vacantes ,antes.ef_unidadejecutora 
    ,antes.ef_fechaactual ,antes.ef_fechaef ,antes.ef_total ,antes.ef_situacion 
    ,antes.ef_extra ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_con_ef_personal update on "informix"
    .con_ef_personal referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_ef_personal (ef_id,ef_disponibles,
    ef_vacantes,ef_unidadejecutora,ef_fechaactual,ef_fechaef,ef_total,
    ef_situacion,ef_extra,desp_ef_id,desp_ef_disponibles,desp_ef_vacantes,
    desp_ef_unidadejecutora,desp_ef_fechaactual,desp_ef_fechaef,desp_ef_total,
    desp_ef_situacion,desp_ef_extra,accion,usuario,hora)  values (antes.ef_id 
    ,antes.ef_disponibles ,antes.ef_vacantes ,antes.ef_unidadejecutora 
    ,antes.ef_fechaactual ,antes.ef_fechaef ,antes.ef_total ,antes.ef_situacion 
    ,antes.ef_extra ,luego.ef_id ,luego.ef_disponibles ,luego.ef_vacantes 
    ,luego.ef_unidadejecutora ,luego.ef_fechaactual ,luego.ef_fechaef 
    ,luego.ef_total ,luego.ef_situacion ,luego.ef_extra ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_cci_est_destino insert on "informix"
    .cci_est_destino referencing new as luego
    for each row
        (
        insert into "informix".aud_cci_est_destino (est_des_codigo,
    est_des_descripcion,desp_est_des_codigo,desp_est_des_descripcion,
    accion,usuario,hora)  values (NULL ,NULL ,luego.est_des_codigo ,luego.est_des_descripcion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_cci_est_destino update on "informix"
    .cci_est_destino referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cci_est_destino (est_des_codigo,
    est_des_descripcion,desp_est_des_codigo,desp_est_des_descripcion,
    accion,usuario,hora)  values (antes.est_des_codigo ,antes.est_des_descripcion 
    ,luego.est_des_codigo ,luego.est_des_descripcion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_cci_est_destino delete on "informix"
    .cci_est_destino referencing old as antes
    for each row
        (
        insert into "informix".aud_cci_est_destino (est_des_codigo,
    est_des_descripcion,desp_est_des_codigo,desp_est_des_descripcion,
    accion,usuario,hora)  values (antes.est_des_codigo ,antes.est_des_descripcion 
    ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cci_est_fuerza insert on "informix"
    .cci_est_fuerza referencing new as luego
    for each row
        (
        insert into "informix".aud_cci_est_fuerza (est_codigo,
    est_catalogo,est_jerarquia,est_clase,est_codigo_grado,est_grado,est_nombres,
    est_destino,est_observacion,est_situacion,desp_est_codigo,desp_est_catalogo,
    desp_est_jerarquia,desp_est_clase,desp_est_codigo_grado,desp_est_grado,
    desp_est_nombres,desp_est_destino,desp_est_observacion,desp_est_situacion,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,'' ,NULL ,luego.est_codigo ,luego.est_catalogo ,luego.est_jerarquia 
    ,luego.est_clase ,luego.est_codigo_grado ,luego.est_grado ,luego.est_nombres 
    ,luego.est_destino ,luego.est_observacion ,luego.est_situacion ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_cci_est_fuerza update on "informix"
    .cci_est_fuerza referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cci_est_fuerza (est_codigo,
    est_catalogo,est_jerarquia,est_clase,est_codigo_grado,est_grado,est_nombres,
    est_destino,est_observacion,est_situacion,desp_est_codigo,desp_est_catalogo,
    desp_est_jerarquia,desp_est_clase,desp_est_codigo_grado,desp_est_grado,
    desp_est_nombres,desp_est_destino,desp_est_observacion,desp_est_situacion,
    accion,usuario,hora)  values (antes.est_codigo ,antes.est_catalogo 
    ,antes.est_jerarquia ,antes.est_clase ,antes.est_codigo_grado ,antes.est_grado 
    ,antes.est_nombres ,antes.est_destino ,antes.est_observacion ,antes.est_situacion 
    ,luego.est_codigo ,luego.est_catalogo ,luego.est_jerarquia ,luego.est_clase 
    ,luego.est_codigo_grado ,luego.est_grado ,luego.est_nombres ,luego.est_destino 
    ,luego.est_observacion ,luego.est_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_cci_est_fuerza delete on "informix"
    .cci_est_fuerza referencing old as antes
    for each row
        (
        insert into "informix".aud_cci_est_fuerza (est_codigo,
    est_catalogo,est_jerarquia,est_clase,est_codigo_grado,est_grado,est_nombres,
    est_destino,est_observacion,est_situacion,desp_est_codigo,desp_est_catalogo,
    desp_est_jerarquia,desp_est_clase,desp_est_codigo_grado,desp_est_grado,
    desp_est_nombres,desp_est_destino,desp_est_observacion,desp_est_situacion,
    accion,usuario,hora)  values (antes.est_codigo ,antes.est_catalogo 
    ,antes.est_jerarquia ,antes.est_clase ,antes.est_codigo_grado ,antes.est_grado 
    ,antes.est_nombres ,antes.est_destino ,antes.est_observacion ,antes.est_situacion 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'' ,NULL ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cci_novedades insert on "informix"
    .cci_novedades referencing new as luego
    for each row
        (
        insert into "informix".aud_cci_novedades (novcci_codigo,
    novcci_fecha,novcci_novedad,novcci_sitacion,desp_novcci_codigo,desp_novcci_fecha,
    desp_novcci_novedad,desp_novcci_sitacion,accion,usuario,hora)  values 
    (NULL ,NULL ,NULL ,NULL ,luego.novcci_codigo ,luego.novcci_fecha 
    ,luego.novcci_novedad ,luego.novcci_sitacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_cci_novedades update on "informix"
    .cci_novedades referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cci_novedades (novcci_codigo,
    novcci_fecha,novcci_novedad,novcci_sitacion,desp_novcci_codigo,desp_novcci_fecha,
    desp_novcci_novedad,desp_novcci_sitacion,accion,usuario,hora)  values 
    (antes.novcci_codigo ,antes.novcci_fecha ,antes.novcci_novedad ,antes.novcci_sitacion 
    ,luego.novcci_codigo ,luego.novcci_fecha ,luego.novcci_novedad ,luego.novcci_sitacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_cci_novedades delete on "informix"
    .cci_novedades referencing old as antes
    for each row
        (
        insert into "informix".aud_cci_novedades (novcci_codigo,
    novcci_fecha,novcci_novedad,novcci_sitacion,desp_novcci_codigo,desp_novcci_fecha,
    desp_novcci_novedad,desp_novcci_sitacion,accion,usuario,hora)  values 
    (antes.novcci_codigo ,antes.novcci_fecha ,antes.novcci_novedad ,antes.novcci_sitacion 
    ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_vlh_t_cisterna insert on "informix"
    .vlh_t_cisterna referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_t_cisterna (cis_id_t,cis_desc,
    cis_cap,desp_cis_id_t,desp_cis_desc,desp_cis_cap,accion,usuario,hora) 
     values (NULL ,'' ,'' ,luego.cis_id_t ,luego.cis_desc ,luego.cis_cap 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_t_cisterna delete on "informix"
    .vlh_t_cisterna referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_t_cisterna (cis_id_t,cis_desc,
    cis_cap,desp_cis_id_t,desp_cis_desc,desp_cis_cap,accion,usuario,hora) 
     values (antes.cis_id_t ,antes.cis_desc ,antes.cis_cap ,NULL ,'' ,
    '' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_t_cisterna update on "informix"
    .vlh_t_cisterna referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_t_cisterna (cis_id_t,cis_desc,
    cis_cap,desp_cis_id_t,desp_cis_desc,desp_cis_cap,accion,usuario,hora) 
     values (antes.cis_id_t ,antes.cis_desc ,antes.cis_cap ,luego.cis_id_t 
    ,luego.cis_desc ,luego.cis_cap ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_vlh_t_vehiculo insert on "informix"
    .vlh_t_vehiculo referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_t_vehiculo (tve_id,tve_desc,
    tve_situacion,desp_tve_id,desp_tve_desc,desp_tve_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.tve_id ,luego.tve_desc ,
    luego.tve_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_t_vehiculo delete on "informix"
    .vlh_t_vehiculo referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_t_vehiculo (tve_id,tve_desc,
    tve_situacion,desp_tve_id,desp_tve_desc,desp_tve_situacion,accion,
    usuario,hora)  values (antes.tve_id ,antes.tve_desc ,antes.tve_situacion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_t_vehiculo update on "informix"
    .vlh_t_vehiculo referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_t_vehiculo (tve_id,tve_desc,
    tve_situacion,desp_tve_id,desp_tve_desc,desp_tve_situacion,accion,
    usuario,hora)  values (antes.tve_id ,antes.tve_desc ,antes.tve_situacion 
    ,luego.tve_id ,luego.tve_desc ,luego.tve_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_vlh_llantas insert on "informix"
    .vlh_llantas referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_llantas (lla_id,lla_cantidad_delanteras,
    lla_cantidad_traseras,lla_rin_delanteras,lla_rin_traseras,lla_ancho_delanteras,
    lla_ancho_traseras,lla_altura_delanteras,lla_altura_traseras,lla_psi_delanteras,
    lla_psi_traseras,lla_tipo,desp_lla_id,desp_lla_cantidad_delanteras,
    desp_lla_cantidad_traseras,desp_lla_rin_delanteras,desp_lla_rin_traseras,
    desp_lla_ancho_delanteras,desp_lla_ancho_traseras,desp_lla_altura_delanteras,
    desp_lla_altura_traseras,desp_lla_psi_delanteras,desp_lla_psi_traseras,
    desp_lla_tipo,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,luego.lla_id ,luego.lla_cantidad_delanteras ,luego.lla_cantidad_traseras 
    ,luego.lla_rin_delanteras ,luego.lla_rin_traseras ,luego.lla_ancho_delanteras 
    ,luego.lla_ancho_traseras ,luego.lla_altura_delanteras ,luego.lla_altura_traseras 
    ,luego.lla_psi_delanteras ,luego.lla_psi_traseras ,luego.lla_tipo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_llantas delete on "informix"
    .vlh_llantas referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_llantas (lla_id,lla_cantidad_delanteras,
    lla_cantidad_traseras,lla_rin_delanteras,lla_rin_traseras,lla_ancho_delanteras,
    lla_ancho_traseras,lla_altura_delanteras,lla_altura_traseras,lla_psi_delanteras,
    lla_psi_traseras,lla_tipo,desp_lla_id,desp_lla_cantidad_delanteras,
    desp_lla_cantidad_traseras,desp_lla_rin_delanteras,desp_lla_rin_traseras,
    desp_lla_ancho_delanteras,desp_lla_ancho_traseras,desp_lla_altura_delanteras,
    desp_lla_altura_traseras,desp_lla_psi_delanteras,desp_lla_psi_traseras,
    desp_lla_tipo,accion,usuario,hora)  values (antes.lla_id ,antes.lla_cantidad_delanteras 
    ,antes.lla_cantidad_traseras ,antes.lla_rin_delanteras ,antes.lla_rin_traseras 
    ,antes.lla_ancho_delanteras ,antes.lla_ancho_traseras ,antes.lla_altura_delanteras 
    ,antes.lla_altura_traseras ,antes.lla_psi_delanteras ,antes.lla_psi_traseras 
    ,antes.lla_tipo ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_llantas update on "informix"
    .vlh_llantas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_llantas (lla_id,lla_cantidad_delanteras,
    lla_cantidad_traseras,lla_rin_delanteras,lla_rin_traseras,lla_ancho_delanteras,
    lla_ancho_traseras,lla_altura_delanteras,lla_altura_traseras,lla_psi_delanteras,
    lla_psi_traseras,lla_tipo,desp_lla_id,desp_lla_cantidad_delanteras,
    desp_lla_cantidad_traseras,desp_lla_rin_delanteras,desp_lla_rin_traseras,
    desp_lla_ancho_delanteras,desp_lla_ancho_traseras,desp_lla_altura_delanteras,
    desp_lla_altura_traseras,desp_lla_psi_delanteras,desp_lla_psi_traseras,
    desp_lla_tipo,accion,usuario,hora)  values (antes.lla_id ,antes.lla_cantidad_delanteras 
    ,antes.lla_cantidad_traseras ,antes.lla_rin_delanteras ,antes.lla_rin_traseras 
    ,antes.lla_ancho_delanteras ,antes.lla_ancho_traseras ,antes.lla_altura_delanteras 
    ,antes.lla_altura_traseras ,antes.lla_psi_delanteras ,antes.lla_psi_traseras 
    ,antes.lla_tipo ,luego.lla_id ,luego.lla_cantidad_delanteras ,luego.lla_cantidad_traseras 
    ,luego.lla_rin_delanteras ,luego.lla_rin_traseras ,luego.lla_ancho_delanteras 
    ,luego.lla_ancho_traseras ,luego.lla_altura_delanteras ,luego.lla_altura_traseras 
    ,luego.lla_psi_delanteras ,luego.lla_psi_traseras ,luego.lla_tipo 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_marcas insert on "informix".vlh_marcas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_marcas (mar_id,mar_desc,
    desp_mar_id,desp_mar_desc,accion,usuario,hora)  values (NULL ,'' ,
    luego.mar_id ,luego.mar_desc ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_vlh_marcas delete on "informix".vlh_marcas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_marcas (mar_id,mar_desc,
    desp_mar_id,desp_mar_desc,accion,usuario,hora)  values (antes.mar_id 
    ,antes.mar_desc ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_vlh_marcas update on "informix".vlh_marcas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_marcas (mar_id,mar_desc,
    desp_mar_id,desp_mar_desc,accion,usuario,hora)  values (antes.mar_id 
    ,antes.mar_desc ,luego.mar_id ,luego.mar_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_vlh_hidraulico_fag delete on "informix"
    .vlh_hidraulico_fag referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_hidraulico_fag (hid_id_fag,
    hid_tipo_fag,hid_cant_fag,desp_hid_id_fag,desp_hid_tipo_fag,desp_hid_cant_fag,
    accion,usuario,hora)  values (antes.hid_id_fag ,antes.hid_tipo_fag 
    ,antes.hid_cant_fag ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_vlh_hidraulico_fag update on "informix"
    .vlh_hidraulico_fag referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_vlh_hidraulico_fag (hid_id_fag,
    hid_tipo_fag,hid_cant_fag,desp_hid_id_fag,desp_hid_tipo_fag,desp_hid_cant_fag,
    accion,usuario,hora)  values (antes.hid_id_fag ,antes.hid_tipo_fag 
    ,antes.hid_cant_fag ,luego.hid_id_fag ,luego.hid_tipo_fag ,luego.hid_cant_fag 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_linea insert on "informix".vlh_linea 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_linea (lin_id,lin_desc,
    lin_marca,desp_lin_id,desp_lin_desc,desp_lin_marca,accion,usuario,
    hora)  values (NULL ,'' ,'' ,luego.lin_id ,luego.lin_desc ,luego.lin_marca 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_linea delete on "informix".vlh_linea 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_linea (lin_id,lin_desc,
    lin_marca,desp_lin_id,desp_lin_desc,desp_lin_marca,accion,usuario,
    hora)  values (antes.lin_id ,antes.lin_desc ,antes.lin_marca ,NULL 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_aceite_fag insert on "informix"
    .vlh_aceite_fag referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_aceite_fag (ace_id_fag,
    ace_tipo_fag,ace_cant_fag,desp_ace_id_fag,desp_ace_tipo_fag,desp_ace_cant_fag,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.ace_id_fag ,luego.ace_tipo_fag 
    ,luego.ace_cant_fag ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_aceite_fag delete on "informix"
    .vlh_aceite_fag referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_aceite_fag (ace_id_fag,
    ace_tipo_fag,ace_cant_fag,desp_ace_id_fag,desp_ace_tipo_fag,desp_ace_cant_fag,
    accion,usuario,hora)  values (antes.ace_id_fag ,antes.ace_tipo_fag 
    ,antes.ace_cant_fag ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_vlh_aceite_fag update on "informix"
    .vlh_aceite_fag referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_aceite_fag (ace_id_fag,
    ace_tipo_fag,ace_cant_fag,desp_ace_id_fag,desp_ace_tipo_fag,desp_ace_cant_fag,
    accion,usuario,hora)  values (antes.ace_id_fag ,antes.ace_tipo_fag 
    ,antes.ace_cant_fag ,luego.ace_id_fag ,luego.ace_tipo_fag ,luego.ace_cant_fag 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_aeronave insert on "informix"
    .vlh_aeronave referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_aeronave (aer_id,aer_desc,
    desp_aer_id,desp_aer_desc,accion,usuario,hora)  values (NULL ,'' ,
    luego.aer_id ,luego.aer_desc ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_vlh_aeronave delete on "informix"
    .vlh_aeronave referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_aeronave (aer_id,aer_desc,
    desp_aer_id,desp_aer_desc,accion,usuario,hora)  values (antes.aer_id 
    ,antes.aer_desc ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_vlh_aeronave update on "informix"
    .vlh_aeronave referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_aeronave (aer_id,aer_desc,
    desp_aer_id,desp_aer_desc,accion,usuario,hora)  values (antes.aer_id 
    ,antes.aer_desc ,luego.aer_id ,luego.aer_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_vlh_apu insert on "informix".vlh_apu 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_apu (apu_id,apu_tipo_aceite,
    apu_tipo_conbustible,apu_capacidad,apu_serie,desp_apu_id,desp_apu_tipo_aceite,
    desp_apu_tipo_conbustible,desp_apu_capacidad,desp_apu_serie,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.apu_id ,luego.apu_tipo_aceite 
    ,luego.apu_tipo_conbustible ,luego.apu_capacidad ,luego.apu_serie 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_apu delete on "informix".vlh_apu 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_apu (apu_id,apu_tipo_aceite,
    apu_tipo_conbustible,apu_capacidad,apu_serie,desp_apu_id,desp_apu_tipo_aceite,
    desp_apu_tipo_conbustible,desp_apu_capacidad,desp_apu_serie,accion,
    usuario,hora)  values (antes.apu_id ,antes.apu_tipo_aceite ,antes.apu_tipo_conbustible 
    ,antes.apu_capacidad ,antes.apu_serie ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_apu update on "informix".vlh_apu 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_apu (apu_id,apu_tipo_aceite,
    apu_tipo_conbustible,apu_capacidad,apu_serie,desp_apu_id,desp_apu_tipo_aceite,
    desp_apu_tipo_conbustible,desp_apu_capacidad,desp_apu_serie,accion,
    usuario,hora)  values (antes.apu_id ,antes.apu_tipo_aceite ,antes.apu_tipo_conbustible 
    ,antes.apu_capacidad ,antes.apu_serie ,luego.apu_id ,luego.apu_tipo_aceite 
    ,luego.apu_tipo_conbustible ,luego.apu_capacidad ,luego.apu_serie 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_baterias insert on "informix"
    .vlh_baterias referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_baterias (bat_id_fag,bat_cant_fag,
    bat_tipo_fag,bat_amperaje_fag,bat_voltaje_fag,bat_cant_placas_fag,
    desp_bat_id_fag,desp_bat_cant_fag,desp_bat_tipo_fag,desp_bat_amperaje_fag,
    desp_bat_voltaje_fag,desp_bat_cant_placas_fag,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.bat_id_fag ,luego.bat_cant_fag 
    ,luego.bat_tipo_fag ,luego.bat_amperaje_fag ,luego.bat_voltaje_fag 
    ,luego.bat_cant_placas_fag ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_vlh_baterias delete on "informix"
    .vlh_baterias referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_baterias (bat_id_fag,bat_cant_fag,
    bat_tipo_fag,bat_amperaje_fag,bat_voltaje_fag,bat_cant_placas_fag,
    desp_bat_id_fag,desp_bat_cant_fag,desp_bat_tipo_fag,desp_bat_amperaje_fag,
    desp_bat_voltaje_fag,desp_bat_cant_placas_fag,accion,usuario,hora) 
     values (antes.bat_id_fag ,antes.bat_cant_fag ,antes.bat_tipo_fag 
    ,antes.bat_amperaje_fag ,antes.bat_voltaje_fag ,antes.bat_cant_placas_fag 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_baterias update on "informix"
    .vlh_baterias referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_baterias (bat_id_fag,bat_cant_fag,
    bat_tipo_fag,bat_amperaje_fag,bat_voltaje_fag,bat_cant_placas_fag,
    desp_bat_id_fag,desp_bat_cant_fag,desp_bat_tipo_fag,desp_bat_amperaje_fag,
    desp_bat_voltaje_fag,desp_bat_cant_placas_fag,accion,usuario,hora) 
     values (antes.bat_id_fag ,antes.bat_cant_fag ,antes.bat_tipo_fag 
    ,antes.bat_amperaje_fag ,antes.bat_voltaje_fag ,antes.bat_cant_placas_fag 
    ,luego.bat_id_fag ,luego.bat_cant_fag ,luego.bat_tipo_fag ,luego.bat_amperaje_fag 
    ,luego.bat_voltaje_fag ,luego.bat_cant_placas_fag ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_vlh_tipo_carroceria insert on "informix"
    .vlh_tipo_carroceria referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_tipo_carroceria (tca_id_t,
    tca_marca,tca_estado,tca_material,tca_lona,desp_tca_id_t,desp_tca_marca,
    desp_tca_estado,desp_tca_material,desp_tca_lona,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,luego.tca_id_t ,luego.tca_marca ,luego.tca_estado 
    ,luego.tca_material ,luego.tca_lona ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_vlh_tipo_carroceria delete on "informix"
    .vlh_tipo_carroceria referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_tipo_carroceria (tca_id_t,
    tca_marca,tca_estado,tca_material,tca_lona,desp_tca_id_t,desp_tca_marca,
    desp_tca_estado,desp_tca_material,desp_tca_lona,accion,usuario,hora) 
     values (antes.tca_id_t ,antes.tca_marca ,antes.tca_estado ,antes.tca_material 
    ,antes.tca_lona ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_vlh_tipo_carroceria update on "informix"
    .vlh_tipo_carroceria referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_vlh_tipo_carroceria (tca_id_t,
    tca_marca,tca_estado,tca_material,tca_lona,desp_tca_id_t,desp_tca_marca,
    desp_tca_estado,desp_tca_material,desp_tca_lona,accion,usuario,hora) 
     values (antes.tca_id_t ,antes.tca_marca ,antes.tca_estado ,antes.tca_material 
    ,antes.tca_lona ,luego.tca_id_t ,luego.tca_marca ,luego.tca_estado 
    ,luego.tca_material ,luego.tca_lona ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_vlh_tipo_combustible insert on 
    "informix".vlh_tipo_combustible referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_tipo_combustible (com_id,
    com_desc,com_aceite,com_cant_mezcla_aceite,desp_com_id,desp_com_desc,
    desp_com_aceite,desp_com_cant_mezcla_aceite,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,luego.com_id ,luego.com_desc ,luego.com_aceite 
    ,luego.com_cant_mezcla_aceite ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_vlh_tipo_combustible delete on 
    "informix".vlh_tipo_combustible referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_tipo_combustible (com_id,
    com_desc,com_aceite,com_cant_mezcla_aceite,desp_com_id,desp_com_desc,
    desp_com_aceite,desp_com_cant_mezcla_aceite,accion,usuario,hora) 
     values (antes.com_id ,antes.com_desc ,antes.com_aceite ,antes.com_cant_mezcla_aceite 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_tipo_combustible update on 
    "informix".vlh_tipo_combustible referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_vlh_tipo_combustible (com_id,
    com_desc,com_aceite,com_cant_mezcla_aceite,desp_com_id,desp_com_desc,
    desp_com_aceite,desp_com_cant_mezcla_aceite,accion,usuario,hora) 
     values (antes.com_id ,antes.com_desc ,antes.com_aceite ,antes.com_cant_mezcla_aceite 
    ,luego.com_id ,luego.com_desc ,luego.com_aceite ,luego.com_cant_mezcla_aceite 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_traccion_vehiculo insert on 
    "informix".vlh_traccion_vehiculo referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_traccion_vehiculo (trc_id_vehiculo,
    trc_desc_vehiculo,desp_trc_id_vehiculo,desp_trc_desc_vehiculo,accion,
    usuario,hora)  values (NULL ,'' ,luego.trc_id_vehiculo ,luego.trc_desc_vehiculo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_traccion_vehiculo delete on 
    "informix".vlh_traccion_vehiculo referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_traccion_vehiculo (trc_id_vehiculo,
    trc_desc_vehiculo,desp_trc_id_vehiculo,desp_trc_desc_vehiculo,accion,
    usuario,hora)  values (antes.trc_id_vehiculo ,antes.trc_desc_vehiculo 
    ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_traccion_vehiculo update on 
    "informix".vlh_traccion_vehiculo referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_vlh_traccion_vehiculo (trc_id_vehiculo,
    trc_desc_vehiculo,desp_trc_id_vehiculo,desp_trc_desc_vehiculo,accion,
    usuario,hora)  values (antes.trc_id_vehiculo ,antes.trc_desc_vehiculo 
    ,luego.trc_id_vehiculo ,luego.trc_desc_vehiculo ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_vlh_transmision_vehiculo insert 
    on "informix".vlh_transmision_vehiculo referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_vlh_transmision_vehiculo (tra_id_vehiculo,
    tra_desc_vehiculo,tra_cant_velocidades,desp_tra_id_vehiculo,desp_tra_desc_vehiculo,
    desp_tra_cant_velocidades,accion,usuario,hora)  values (NULL ,'' ,
    '' ,luego.tra_id_vehiculo ,luego.tra_desc_vehiculo ,luego.tra_cant_velocidades 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_transmision_vehiculo delete 
    on "informix".vlh_transmision_vehiculo referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_vlh_transmision_vehiculo (tra_id_vehiculo,
    tra_desc_vehiculo,tra_cant_velocidades,desp_tra_id_vehiculo,desp_tra_desc_vehiculo,
    desp_tra_cant_velocidades,accion,usuario,hora)  values (antes.tra_id_vehiculo 
    ,antes.tra_desc_vehiculo ,antes.tra_cant_velocidades ,NULL ,'' ,'' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_transmision_vehiculo update 
    on "informix".vlh_transmision_vehiculo referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_transmision_vehiculo (tra_id_vehiculo,
    tra_desc_vehiculo,tra_cant_velocidades,desp_tra_id_vehiculo,desp_tra_desc_vehiculo,
    desp_tra_cant_velocidades,accion,usuario,hora)  values (antes.tra_id_vehiculo 
    ,antes.tra_desc_vehiculo ,antes.tra_cant_velocidades ,luego.tra_id_vehiculo 
    ,luego.tra_desc_vehiculo ,luego.tra_cant_velocidades ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_vlh_validaciones insert on "informix"
    .vlh_validaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_validaciones (val_id,val_catalogo,
    val_revisor,val_comte,val_fecha,val_situacion,val_dependencia,val_fecha_emision,
    desp_val_id,desp_val_catalogo,desp_val_revisor,desp_val_comte,desp_val_fecha,
    desp_val_situacion,desp_val_dependencia,desp_val_fecha_emision,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.val_id ,luego.val_catalogo 
    ,luego.val_revisor ,luego.val_comte ,luego.val_fecha ,luego.val_situacion 
    ,luego.val_dependencia ,luego.val_fecha_emision ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_vlh_validaciones delete on "informix"
    .vlh_validaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_validaciones (val_id,val_catalogo,
    val_revisor,val_comte,val_fecha,val_situacion,val_dependencia,val_fecha_emision,
    desp_val_id,desp_val_catalogo,desp_val_revisor,desp_val_comte,desp_val_fecha,
    desp_val_situacion,desp_val_dependencia,desp_val_fecha_emision,accion,
    usuario,hora)  values (antes.val_id ,antes.val_catalogo ,antes.val_revisor 
    ,antes.val_comte ,antes.val_fecha ,antes.val_situacion ,antes.val_dependencia 
    ,antes.val_fecha_emision ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_vlh_validaciones update on "informix"
    .vlh_validaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_validaciones (val_id,val_catalogo,
    val_revisor,val_comte,val_fecha,val_situacion,val_dependencia,val_fecha_emision,
    desp_val_id,desp_val_catalogo,desp_val_revisor,desp_val_comte,desp_val_fecha,
    desp_val_situacion,desp_val_dependencia,desp_val_fecha_emision,accion,
    usuario,hora)  values (antes.val_id ,antes.val_catalogo ,antes.val_revisor 
    ,antes.val_comte ,antes.val_fecha ,antes.val_situacion ,antes.val_dependencia 
    ,antes.val_fecha_emision ,luego.val_id ,luego.val_catalogo ,luego.val_revisor 
    ,luego.val_comte ,luego.val_fecha ,luego.val_situacion ,luego.val_dependencia 
    ,luego.val_fecha_emision ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_vlh_permisos insert on "informix"
    .vlh_permisos referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_permisos (vlh_per_id,vlh_per_cat,
    vlh_per_dep,vlh_per_situacion,desp_vlh_per_id,desp_vlh_per_cat,desp_vlh_per_dep,
    desp_vlh_per_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,
    '' ,luego.vlh_per_id ,luego.vlh_per_cat ,luego.vlh_per_dep ,luego.vlh_per_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_permisos delete on "informix"
    .vlh_permisos referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_permisos (vlh_per_id,vlh_per_cat,
    vlh_per_dep,vlh_per_situacion,desp_vlh_per_id,desp_vlh_per_cat,desp_vlh_per_dep,
    desp_vlh_per_situacion,accion,usuario,hora)  values (antes.vlh_per_id 
    ,antes.vlh_per_cat ,antes.vlh_per_dep ,antes.vlh_per_situacion ,NULL 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_permisos update on "informix"
    .vlh_permisos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_permisos (vlh_per_id,vlh_per_cat,
    vlh_per_dep,vlh_per_situacion,desp_vlh_per_id,desp_vlh_per_cat,desp_vlh_per_dep,
    desp_vlh_per_situacion,accion,usuario,hora)  values (antes.vlh_per_id 
    ,antes.vlh_per_cat ,antes.vlh_per_dep ,antes.vlh_per_situacion ,luego.vlh_per_id 
    ,luego.vlh_per_cat ,luego.vlh_per_dep ,luego.vlh_per_situacion ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_motor_fag insert on "informix"
    .vlh_motor_fag referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_motor_fag (mot_id_fag,
    mot_cant_fag,mot_tipo_fag,mot_marca_fag,mot_modelo_fag,mot_serie_fag,
    desp_mot_id_fag,desp_mot_cant_fag,desp_mot_tipo_fag,desp_mot_marca_fag,
    desp_mot_modelo_fag,desp_mot_serie_fag,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,luego.mot_id_fag ,luego.mot_cant_fag ,luego.mot_tipo_fag 
    ,luego.mot_marca_fag ,luego.mot_modelo_fag ,luego.mot_serie_fag ,
    'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_motor_fag delete on "informix"
    .vlh_motor_fag referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_motor_fag (mot_id_fag,
    mot_cant_fag,mot_tipo_fag,mot_marca_fag,mot_modelo_fag,mot_serie_fag,
    desp_mot_id_fag,desp_mot_cant_fag,desp_mot_tipo_fag,desp_mot_marca_fag,
    desp_mot_modelo_fag,desp_mot_serie_fag,accion,usuario,hora)  values 
    (antes.mot_id_fag ,antes.mot_cant_fag ,antes.mot_tipo_fag ,antes.mot_marca_fag 
    ,antes.mot_modelo_fag ,antes.mot_serie_fag ,NULL ,'' ,'' ,'' ,'' ,'' ,
    'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_motor_fag update on "informix"
    .vlh_motor_fag referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_motor_fag (mot_id_fag,
    mot_cant_fag,mot_tipo_fag,mot_marca_fag,mot_modelo_fag,mot_serie_fag,
    desp_mot_id_fag,desp_mot_cant_fag,desp_mot_tipo_fag,desp_mot_marca_fag,
    desp_mot_modelo_fag,desp_mot_serie_fag,accion,usuario,hora)  values 
    (antes.mot_id_fag ,antes.mot_cant_fag ,antes.mot_tipo_fag ,antes.mot_marca_fag 
    ,antes.mot_modelo_fag ,antes.mot_serie_fag ,luego.mot_id_fag ,luego.mot_cant_fag 
    ,luego.mot_tipo_fag ,luego.mot_marca_fag ,luego.mot_modelo_fag ,luego.mot_serie_fag 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_neumaticos_fag insert on "informix"
    .vlh_neumaticos_fag referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_neumaticos_fag (neu_id_neumaticos_fag,
    neu_cantidad_principal,neu_especificaciones_principal,neu_cantidad_nariz,
    neu_especificaciones_nariz,neu_cantidad_cola,neu_especificaciones_cola,
    neu_tipo_gas,desp_neu_id_neumaticos_fag,desp_neu_cantidad_principal,
    desp_neu_especificaciones_principal,desp_neu_cantidad_nariz,desp_neu_especificaciones_nariz,
    desp_neu_cantidad_cola,desp_neu_especificaciones_cola,desp_neu_tipo_gas,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.neu_id_neumaticos_fag 
    ,luego.neu_cantidad_principal ,luego.neu_especificaciones_principal 
    ,luego.neu_cantidad_nariz ,luego.neu_especificaciones_nariz ,luego.neu_cantidad_cola 
    ,luego.neu_especificaciones_cola ,luego.neu_tipo_gas ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_vlh_neumaticos_fag delete on "informix"
    .vlh_neumaticos_fag referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_neumaticos_fag (neu_id_neumaticos_fag,
    neu_cantidad_principal,neu_especificaciones_principal,neu_cantidad_nariz,
    neu_especificaciones_nariz,neu_cantidad_cola,neu_especificaciones_cola,
    neu_tipo_gas,desp_neu_id_neumaticos_fag,desp_neu_cantidad_principal,
    desp_neu_especificaciones_principal,desp_neu_cantidad_nariz,desp_neu_especificaciones_nariz,
    desp_neu_cantidad_cola,desp_neu_especificaciones_cola,desp_neu_tipo_gas,
    accion,usuario,hora)  values (antes.neu_id_neumaticos_fag ,antes.neu_cantidad_principal 
    ,antes.neu_especificaciones_principal ,antes.neu_cantidad_nariz ,
    antes.neu_especificaciones_nariz ,antes.neu_cantidad_cola ,antes.neu_especificaciones_cola 
    ,antes.neu_tipo_gas ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_vlh_neumaticos_fag update on "informix"
    .vlh_neumaticos_fag referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_vlh_neumaticos_fag (neu_id_neumaticos_fag,
    neu_cantidad_principal,neu_especificaciones_principal,neu_cantidad_nariz,
    neu_especificaciones_nariz,neu_cantidad_cola,neu_especificaciones_cola,
    neu_tipo_gas,desp_neu_id_neumaticos_fag,desp_neu_cantidad_principal,
    desp_neu_especificaciones_principal,desp_neu_cantidad_nariz,desp_neu_especificaciones_nariz,
    desp_neu_cantidad_cola,desp_neu_especificaciones_cola,desp_neu_tipo_gas,
    accion,usuario,hora)  values (antes.neu_id_neumaticos_fag ,antes.neu_cantidad_principal 
    ,antes.neu_especificaciones_principal ,antes.neu_cantidad_nariz ,
    antes.neu_especificaciones_nariz ,antes.neu_cantidad_cola ,antes.neu_especificaciones_cola 
    ,antes.neu_tipo_gas ,luego.neu_id_neumaticos_fag ,luego.neu_cantidad_principal 
    ,luego.neu_especificaciones_principal ,luego.neu_cantidad_nariz ,
    luego.neu_especificaciones_nariz ,luego.neu_cantidad_cola ,luego.neu_especificaciones_cola 
    ,luego.neu_tipo_gas ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_origen_vehiculo insert on "informix"
    .vlh_origen_vehiculo referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_origen_vehiculo (vlh_id_vehiculo,
    vlh_desc_vehiculo,desp_vlh_id_vehiculo,desp_vlh_desc_vehiculo,accion,
    usuario,hora)  values (NULL ,'' ,luego.vlh_id_vehiculo ,luego.vlh_desc_vehiculo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_origen_vehiculo delete on "informix"
    .vlh_origen_vehiculo referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_origen_vehiculo (vlh_id_vehiculo,
    vlh_desc_vehiculo,desp_vlh_id_vehiculo,desp_vlh_desc_vehiculo,accion,
    usuario,hora)  values (antes.vlh_id_vehiculo ,antes.vlh_desc_vehiculo 
    ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_origen_vehiculo update on "informix"
    .vlh_origen_vehiculo referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_vlh_origen_vehiculo (vlh_id_vehiculo,
    vlh_desc_vehiculo,desp_vlh_id_vehiculo,desp_vlh_desc_vehiculo,accion,
    usuario,hora)  values (antes.vlh_id_vehiculo ,antes.vlh_desc_vehiculo 
    ,luego.vlh_id_vehiculo ,luego.vlh_desc_vehiculo ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_vlh_estado_vehiculo insert on "informix"
    .vlh_estado_vehiculo referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_estado_vehiculo (est_id_estado,
    est_descripcion,desp_est_id_estado,desp_est_descripcion,accion,usuario,
    hora)  values (NULL ,'' ,luego.est_id_estado ,luego.est_descripcion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_estado_vehiculo delete on "informix"
    .vlh_estado_vehiculo referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_estado_vehiculo (est_id_estado,
    est_descripcion,desp_est_id_estado,desp_est_descripcion,accion,usuario,
    hora)  values (antes.est_id_estado ,antes.est_descripcion ,NULL ,
    '' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_estado_vehiculo update on "informix"
    .vlh_estado_vehiculo referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_vlh_estado_vehiculo (est_id_estado,
    est_descripcion,desp_est_id_estado,desp_est_descripcion,accion,usuario,
    hora)  values (antes.est_id_estado ,antes.est_descripcion ,luego.est_id_estado 
    ,luego.est_descripcion ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_vlh_combustible_fag insert on "informix"
    .vlh_combustible_fag referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_combustible_fag (comb_id_fag,
    comb_tipo_fag,comb_cap_tanques,comb_cap_tanq_externos,desp_comb_id_fag,
    desp_comb_tipo_fag,desp_comb_cap_tanques,desp_comb_cap_tanq_externos,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.comb_id_fag ,luego.comb_tipo_fag 
    ,luego.comb_cap_tanques ,luego.comb_cap_tanq_externos ,'I' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_combustible_fag delete on "informix"
    .vlh_combustible_fag referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_combustible_fag (comb_id_fag,
    comb_tipo_fag,comb_cap_tanques,comb_cap_tanq_externos,desp_comb_id_fag,
    desp_comb_tipo_fag,desp_comb_cap_tanques,desp_comb_cap_tanq_externos,
    accion,usuario,hora)  values (antes.comb_id_fag ,antes.comb_tipo_fag 
    ,antes.comb_cap_tanques ,antes.comb_cap_tanq_externos ,NULL ,'' ,''
     ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_combustible_fag update on "informix"
    .vlh_combustible_fag referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_vlh_combustible_fag (comb_id_fag,
    comb_tipo_fag,comb_cap_tanques,comb_cap_tanq_externos,desp_comb_id_fag,
    desp_comb_tipo_fag,desp_comb_cap_tanques,desp_comb_cap_tanq_externos,
    accion,usuario,hora)  values (antes.comb_id_fag ,antes.comb_tipo_fag 
    ,antes.comb_cap_tanques ,antes.comb_cap_tanq_externos ,luego.comb_id_fag 
    ,luego.comb_tipo_fag ,luego.comb_cap_tanques ,luego.comb_cap_tanq_externos 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_cons_comb_vehi insert on "informix"
    .vlh_cons_comb_vehi referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_cons_comb_vehi (con_id_comb,
    con_cap_galones,con_hrs,con_gls,con_odometro,desp_con_id_comb,desp_con_cap_galones,
    desp_con_hrs,desp_con_gls,desp_con_odometro,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,luego.con_id_comb ,luego.con_cap_galones 
    ,luego.con_hrs ,luego.con_gls ,luego.con_odometro ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_vlh_cons_comb_vehi delete on "informix"
    .vlh_cons_comb_vehi referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_cons_comb_vehi (con_id_comb,
    con_cap_galones,con_hrs,con_gls,con_odometro,desp_con_id_comb,desp_con_cap_galones,
    desp_con_hrs,desp_con_gls,desp_con_odometro,accion,usuario,hora) 
     values (antes.con_id_comb ,antes.con_cap_galones ,antes.con_hrs 
    ,antes.con_gls ,antes.con_odometro ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_vlh_cons_comb_vehi update on "informix"
    .vlh_cons_comb_vehi referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_vlh_cons_comb_vehi (con_id_comb,
    con_cap_galones,con_hrs,con_gls,con_odometro,desp_con_id_comb,desp_con_cap_galones,
    desp_con_hrs,desp_con_gls,desp_con_odometro,accion,usuario,hora) 
     values (antes.con_id_comb ,antes.con_cap_galones ,antes.con_hrs 
    ,antes.con_gls ,antes.con_odometro ,luego.con_id_comb ,luego.con_cap_galones 
    ,luego.con_hrs ,luego.con_gls ,luego.con_odometro ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_vlh_cons_lubri_vehi insert on "informix"
    .vlh_cons_lubri_vehi referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_cons_lubri_vehi (con_id_lub,
    con_tipo_aceite_motor,con_cap_aceite_motor,con_tipo_aceite_hidraulico,
    con_cap_aceite_hidraulico,con_tipo_aceite_transmision,con_cap_aceite_transmision,
    con_aceite_motor,desp_con_id_lub,desp_con_tipo_aceite_motor,desp_con_cap_aceite_motor,
    desp_con_tipo_aceite_hidraulico,desp_con_cap_aceite_hidraulico,desp_con_tipo_aceite_transmision,
    desp_con_cap_aceite_transmision,desp_con_aceite_motor,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.con_id_lub ,luego.con_tipo_aceite_motor 
    ,luego.con_cap_aceite_motor ,luego.con_tipo_aceite_hidraulico ,luego.con_cap_aceite_hidraulico 
    ,luego.con_tipo_aceite_transmision ,luego.con_cap_aceite_transmision 
    ,luego.con_aceite_motor ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_vlh_cons_lubri_vehi delete on "informix"
    .vlh_cons_lubri_vehi referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_cons_lubri_vehi (con_id_lub,
    con_tipo_aceite_motor,con_cap_aceite_motor,con_tipo_aceite_hidraulico,
    con_cap_aceite_hidraulico,con_tipo_aceite_transmision,con_cap_aceite_transmision,
    con_aceite_motor,desp_con_id_lub,desp_con_tipo_aceite_motor,desp_con_cap_aceite_motor,
    desp_con_tipo_aceite_hidraulico,desp_con_cap_aceite_hidraulico,desp_con_tipo_aceite_transmision,
    desp_con_cap_aceite_transmision,desp_con_aceite_motor,accion,usuario,
    hora)  values (antes.con_id_lub ,antes.con_tipo_aceite_motor ,antes.con_cap_aceite_motor 
    ,antes.con_tipo_aceite_hidraulico ,antes.con_cap_aceite_hidraulico 
    ,antes.con_tipo_aceite_transmision ,antes.con_cap_aceite_transmision 
    ,antes.con_aceite_motor ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_vlh_cons_lubri_vehi update on "informix"
    .vlh_cons_lubri_vehi referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_vlh_cons_lubri_vehi (con_id_lub,
    con_tipo_aceite_motor,con_cap_aceite_motor,con_tipo_aceite_hidraulico,
    con_cap_aceite_hidraulico,con_tipo_aceite_transmision,con_cap_aceite_transmision,
    con_aceite_motor,desp_con_id_lub,desp_con_tipo_aceite_motor,desp_con_cap_aceite_motor,
    desp_con_tipo_aceite_hidraulico,desp_con_cap_aceite_hidraulico,desp_con_tipo_aceite_transmision,
    desp_con_cap_aceite_transmision,desp_con_aceite_motor,accion,usuario,
    hora)  values (antes.con_id_lub ,antes.con_tipo_aceite_motor ,antes.con_cap_aceite_motor 
    ,antes.con_tipo_aceite_hidraulico ,antes.con_cap_aceite_hidraulico 
    ,antes.con_tipo_aceite_transmision ,antes.con_cap_aceite_transmision 
    ,antes.con_aceite_motor ,luego.con_id_lub ,luego.con_tipo_aceite_motor 
    ,luego.con_cap_aceite_motor ,luego.con_tipo_aceite_hidraulico ,luego.con_cap_aceite_hidraulico 
    ,luego.con_tipo_aceite_transmision ,luego.con_cap_aceite_transmision 
    ,luego.con_aceite_motor ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_vlh_destino insert on "informix"
    .vlh_destino referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_destino (des_id,des_desc,
    desp_des_id,desp_des_desc,accion,usuario,hora)  values (NULL ,'' ,
    luego.des_id ,luego.des_desc ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_vlh_destino delete on "informix"
    .vlh_destino referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_destino (des_id,des_desc,
    desp_des_id,desp_des_desc,accion,usuario,hora)  values (antes.des_id 
    ,antes.des_desc ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_vlh_destino update on "informix"
    .vlh_destino referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_destino (des_id,des_desc,
    desp_des_id,desp_des_desc,accion,usuario,hora)  values (antes.des_id 
    ,antes.des_desc ,luego.des_id ,luego.des_desc ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_vlh_carretones insert on "informix"
    .vlh_carretones referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_carretones (carr_id,carr_catalogo,
    carr_adquisicion,carr_observacion,carr_ubicacion,carr_dependencia,
    carr_estado,carr_llantas,carr_cap_toneladas,carr_tipo_cisterna,carr_cap_cisterna,
    carr_situacion,desp_carr_id,desp_carr_catalogo,desp_carr_adquisicion,
    desp_carr_observacion,desp_carr_ubicacion,desp_carr_dependencia,desp_carr_estado,
    desp_carr_llantas,desp_carr_cap_toneladas,desp_carr_tipo_cisterna,
    desp_carr_cap_cisterna,desp_carr_situacion,accion,usuario,hora)  
    values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.carr_id ,luego.carr_catalogo 
    ,luego.carr_adquisicion ,luego.carr_observacion ,luego.carr_ubicacion 
    ,luego.carr_dependencia ,luego.carr_estado ,luego.carr_llantas ,luego.carr_cap_toneladas 
    ,luego.carr_tipo_cisterna ,luego.carr_cap_cisterna ,luego.carr_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_carretones delete on "informix"
    .vlh_carretones referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_carretones (carr_id,carr_catalogo,
    carr_adquisicion,carr_observacion,carr_ubicacion,carr_dependencia,
    carr_estado,carr_llantas,carr_cap_toneladas,carr_tipo_cisterna,carr_cap_cisterna,
    carr_situacion,desp_carr_id,desp_carr_catalogo,desp_carr_adquisicion,
    desp_carr_observacion,desp_carr_ubicacion,desp_carr_dependencia,desp_carr_estado,
    desp_carr_llantas,desp_carr_cap_toneladas,desp_carr_tipo_cisterna,
    desp_carr_cap_cisterna,desp_carr_situacion,accion,usuario,hora)  
    values (antes.carr_id ,antes.carr_catalogo ,antes.carr_adquisicion 
    ,antes.carr_observacion ,antes.carr_ubicacion ,antes.carr_dependencia 
    ,antes.carr_estado ,antes.carr_llantas ,antes.carr_cap_toneladas 
    ,antes.carr_tipo_cisterna ,antes.carr_cap_cisterna ,antes.carr_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_vlh_carretones update on "informix"
    .vlh_carretones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_carretones (carr_id,carr_catalogo,
    carr_adquisicion,carr_observacion,carr_ubicacion,carr_dependencia,
    carr_estado,carr_llantas,carr_cap_toneladas,carr_tipo_cisterna,carr_cap_cisterna,
    carr_situacion,desp_carr_id,desp_carr_catalogo,desp_carr_adquisicion,
    desp_carr_observacion,desp_carr_ubicacion,desp_carr_dependencia,desp_carr_estado,
    desp_carr_llantas,desp_carr_cap_toneladas,desp_carr_tipo_cisterna,
    desp_carr_cap_cisterna,desp_carr_situacion,accion,usuario,hora)  
    values (antes.carr_id ,antes.carr_catalogo ,antes.carr_adquisicion 
    ,antes.carr_observacion ,antes.carr_ubicacion ,antes.carr_dependencia 
    ,antes.carr_estado ,antes.carr_llantas ,antes.carr_cap_toneladas 
    ,antes.carr_tipo_cisterna ,antes.carr_cap_cisterna ,antes.carr_situacion 
    ,luego.carr_id ,luego.carr_catalogo ,luego.carr_adquisicion ,luego.carr_observacion 
    ,luego.carr_ubicacion ,luego.carr_dependencia ,luego.carr_estado 
    ,luego.carr_llantas ,luego.carr_cap_toneladas ,luego.carr_tipo_cisterna 
    ,luego.carr_cap_cisterna ,luego.carr_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_vlh_equipo_terrestre_fag insert 
    on "informix".vlh_equipo_terrestre_fag referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_vlh_equipo_terrestre_fag (equ_id,
    equ_catalogo,equ_matricula,equ_tipo,equ_ubicacion,equ_dependencia,
    equ_adquisicion,equ_modelo,equ_serie,equ_fabricacion,equ_proposito,
    equ_capacidad,equ_motor,equ_neumatico,equ_tipo_comb,equ_cap_comb,
    equ_aceite,equ_cant_aceite,equ_baterias,equ_estado,equ_situacion,
    desp_equ_id,desp_equ_catalogo,desp_equ_matricula,desp_equ_tipo,desp_equ_ubicacion,
    desp_equ_dependencia,desp_equ_adquisicion,desp_equ_modelo,desp_equ_serie,
    desp_equ_fabricacion,desp_equ_proposito,desp_equ_capacidad,desp_equ_motor,
    desp_equ_neumatico,desp_equ_tipo_comb,desp_equ_cap_comb,desp_equ_aceite,
    desp_equ_cant_aceite,desp_equ_baterias,desp_equ_estado,desp_equ_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.equ_id ,luego.equ_catalogo ,
    luego.equ_matricula ,luego.equ_tipo ,luego.equ_ubicacion ,luego.equ_dependencia 
    ,luego.equ_adquisicion ,luego.equ_modelo ,luego.equ_serie ,luego.equ_fabricacion 
    ,luego.equ_proposito ,luego.equ_capacidad ,luego.equ_motor ,luego.equ_neumatico 
    ,luego.equ_tipo_comb ,luego.equ_cap_comb ,luego.equ_aceite ,luego.equ_cant_aceite 
    ,luego.equ_baterias ,luego.equ_estado ,luego.equ_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_equipo_terrestre_fag delete 
    on "informix".vlh_equipo_terrestre_fag referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_vlh_equipo_terrestre_fag (equ_id,
    equ_catalogo,equ_matricula,equ_tipo,equ_ubicacion,equ_dependencia,
    equ_adquisicion,equ_modelo,equ_serie,equ_fabricacion,equ_proposito,
    equ_capacidad,equ_motor,equ_neumatico,equ_tipo_comb,equ_cap_comb,
    equ_aceite,equ_cant_aceite,equ_baterias,equ_estado,equ_situacion,
    desp_equ_id,desp_equ_catalogo,desp_equ_matricula,desp_equ_tipo,desp_equ_ubicacion,
    desp_equ_dependencia,desp_equ_adquisicion,desp_equ_modelo,desp_equ_serie,
    desp_equ_fabricacion,desp_equ_proposito,desp_equ_capacidad,desp_equ_motor,
    desp_equ_neumatico,desp_equ_tipo_comb,desp_equ_cap_comb,desp_equ_aceite,
    desp_equ_cant_aceite,desp_equ_baterias,desp_equ_estado,desp_equ_situacion,
    accion,usuario,hora)  values (antes.equ_id ,antes.equ_catalogo ,antes.equ_matricula 
    ,antes.equ_tipo ,antes.equ_ubicacion ,antes.equ_dependencia ,antes.equ_adquisicion 
    ,antes.equ_modelo ,antes.equ_serie ,antes.equ_fabricacion ,antes.equ_proposito 
    ,antes.equ_capacidad ,antes.equ_motor ,antes.equ_neumatico ,antes.equ_tipo_comb 
    ,antes.equ_cap_comb ,antes.equ_aceite ,antes.equ_cant_aceite ,antes.equ_baterias 
    ,antes.equ_estado ,antes.equ_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_vlh_equipo_terrestre_fag update 
    on "informix".vlh_equipo_terrestre_fag referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_equipo_terrestre_fag (equ_id,
    equ_catalogo,equ_matricula,equ_tipo,equ_ubicacion,equ_dependencia,
    equ_adquisicion,equ_modelo,equ_serie,equ_fabricacion,equ_proposito,
    equ_capacidad,equ_motor,equ_neumatico,equ_tipo_comb,equ_cap_comb,
    equ_aceite,equ_cant_aceite,equ_baterias,equ_estado,equ_situacion,
    desp_equ_id,desp_equ_catalogo,desp_equ_matricula,desp_equ_tipo,desp_equ_ubicacion,
    desp_equ_dependencia,desp_equ_adquisicion,desp_equ_modelo,desp_equ_serie,
    desp_equ_fabricacion,desp_equ_proposito,desp_equ_capacidad,desp_equ_motor,
    desp_equ_neumatico,desp_equ_tipo_comb,desp_equ_cap_comb,desp_equ_aceite,
    desp_equ_cant_aceite,desp_equ_baterias,desp_equ_estado,desp_equ_situacion,
    accion,usuario,hora)  values (antes.equ_id ,antes.equ_catalogo ,antes.equ_matricula 
    ,antes.equ_tipo ,antes.equ_ubicacion ,antes.equ_dependencia ,antes.equ_adquisicion 
    ,antes.equ_modelo ,antes.equ_serie ,antes.equ_fabricacion ,antes.equ_proposito 
    ,antes.equ_capacidad ,antes.equ_motor ,antes.equ_neumatico ,antes.equ_tipo_comb 
    ,antes.equ_cap_comb ,antes.equ_aceite ,antes.equ_cant_aceite ,antes.equ_baterias 
    ,antes.equ_estado ,antes.equ_situacion ,luego.equ_id ,luego.equ_catalogo 
    ,luego.equ_matricula ,luego.equ_tipo ,luego.equ_ubicacion ,luego.equ_dependencia 
    ,luego.equ_adquisicion ,luego.equ_modelo ,luego.equ_serie ,luego.equ_fabricacion 
    ,luego.equ_proposito ,luego.equ_capacidad ,luego.equ_motor ,luego.equ_neumatico 
    ,luego.equ_tipo_comb ,luego.equ_cap_comb ,luego.equ_aceite ,luego.equ_cant_aceite 
    ,luego.equ_baterias ,luego.equ_estado ,luego.equ_situacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_embarcacion insert on "informix"
    .vlh_embarcacion referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_embarcacion (emb_id_embarcacion,
    emb_catalogo,emb_matricula,emb_nombre,emb_indicativo,emb_linea,emb_modelo,
    emb_color,emb_origen,emb_ubicacion,emb_observaciones,emb_fabricacion,
    emb_constructora,emb_dependencia,emb_tipo,emb_estado,emb_desplazamiento,
    emb_repotenciado,emb_fecha_repotenciado,emb_vel_emergencia,emb_vel_crucero,
    emb_tripulacion,emb_autonomia,emb_cap_agua,emb_eslora,emb_manga,emb_calado,
    emb_puntal,emb_cap_combustible,emb_tipo_combustible,emb_cant_motores,
    emb_marca_motor,emb_modelo_motor,emb_situacion,desp_emb_id_embarcacion,
    desp_emb_catalogo,desp_emb_matricula,desp_emb_nombre,desp_emb_indicativo,
    desp_emb_linea,desp_emb_modelo,desp_emb_color,desp_emb_origen,desp_emb_ubicacion,
    desp_emb_observaciones,desp_emb_fabricacion,desp_emb_constructora,
    desp_emb_dependencia,desp_emb_tipo,desp_emb_estado,desp_emb_desplazamiento,
    desp_emb_repotenciado,desp_emb_fecha_repotenciado,desp_emb_vel_emergencia,
    desp_emb_vel_crucero,desp_emb_tripulacion,desp_emb_autonomia,desp_emb_cap_agua,
    desp_emb_eslora,desp_emb_manga,desp_emb_calado,desp_emb_puntal,desp_emb_cap_combustible,
    desp_emb_tipo_combustible,desp_emb_cant_motores,desp_emb_marca_motor,
    desp_emb_modelo_motor,desp_emb_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.emb_id_embarcacion 
    ,luego.emb_catalogo ,luego.emb_matricula ,luego.emb_nombre ,luego.emb_indicativo 
    ,luego.emb_linea ,luego.emb_modelo ,luego.emb_color ,luego.emb_origen 
    ,luego.emb_ubicacion ,luego.emb_observaciones ,luego.emb_fabricacion 
    ,luego.emb_constructora ,luego.emb_dependencia ,luego.emb_tipo ,luego.emb_estado 
    ,luego.emb_desplazamiento ,luego.emb_repotenciado ,luego.emb_fecha_repotenciado 
    ,luego.emb_vel_emergencia ,luego.emb_vel_crucero ,luego.emb_tripulacion 
    ,luego.emb_autonomia ,luego.emb_cap_agua ,luego.emb_eslora ,luego.emb_manga 
    ,luego.emb_calado ,luego.emb_puntal ,luego.emb_cap_combustible ,luego.emb_tipo_combustible 
    ,luego.emb_cant_motores ,luego.emb_marca_motor ,luego.emb_modelo_motor 
    ,luego.emb_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_embarcacion delete on "informix"
    .vlh_embarcacion referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_embarcacion (emb_id_embarcacion,
    emb_catalogo,emb_matricula,emb_nombre,emb_indicativo,emb_linea,emb_modelo,
    emb_color,emb_origen,emb_ubicacion,emb_observaciones,emb_fabricacion,
    emb_constructora,emb_dependencia,emb_tipo,emb_estado,emb_desplazamiento,
    emb_repotenciado,emb_fecha_repotenciado,emb_vel_emergencia,emb_vel_crucero,
    emb_tripulacion,emb_autonomia,emb_cap_agua,emb_eslora,emb_manga,emb_calado,
    emb_puntal,emb_cap_combustible,emb_tipo_combustible,emb_cant_motores,
    emb_marca_motor,emb_modelo_motor,emb_situacion,desp_emb_id_embarcacion,
    desp_emb_catalogo,desp_emb_matricula,desp_emb_nombre,desp_emb_indicativo,
    desp_emb_linea,desp_emb_modelo,desp_emb_color,desp_emb_origen,desp_emb_ubicacion,
    desp_emb_observaciones,desp_emb_fabricacion,desp_emb_constructora,
    desp_emb_dependencia,desp_emb_tipo,desp_emb_estado,desp_emb_desplazamiento,
    desp_emb_repotenciado,desp_emb_fecha_repotenciado,desp_emb_vel_emergencia,
    desp_emb_vel_crucero,desp_emb_tripulacion,desp_emb_autonomia,desp_emb_cap_agua,
    desp_emb_eslora,desp_emb_manga,desp_emb_calado,desp_emb_puntal,desp_emb_cap_combustible,
    desp_emb_tipo_combustible,desp_emb_cant_motores,desp_emb_marca_motor,
    desp_emb_modelo_motor,desp_emb_situacion,accion,usuario,hora)  values 
    (antes.emb_id_embarcacion ,antes.emb_catalogo ,antes.emb_matricula 
    ,antes.emb_nombre ,antes.emb_indicativo ,antes.emb_linea ,antes.emb_modelo 
    ,antes.emb_color ,antes.emb_origen ,antes.emb_ubicacion ,antes.emb_observaciones 
    ,antes.emb_fabricacion ,antes.emb_constructora ,antes.emb_dependencia 
    ,antes.emb_tipo ,antes.emb_estado ,antes.emb_desplazamiento ,antes.emb_repotenciado 
    ,antes.emb_fecha_repotenciado ,antes.emb_vel_emergencia ,antes.emb_vel_crucero 
    ,antes.emb_tripulacion ,antes.emb_autonomia ,antes.emb_cap_agua ,
    antes.emb_eslora ,antes.emb_manga ,antes.emb_calado ,antes.emb_puntal 
    ,antes.emb_cap_combustible ,antes.emb_tipo_combustible ,antes.emb_cant_motores 
    ,antes.emb_marca_motor ,antes.emb_modelo_motor ,antes.emb_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_vlh_embarcacion update on "informix"
    .vlh_embarcacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_embarcacion (emb_id_embarcacion,
    emb_catalogo,emb_matricula,emb_nombre,emb_indicativo,emb_linea,emb_modelo,
    emb_color,emb_origen,emb_ubicacion,emb_observaciones,emb_fabricacion,
    emb_constructora,emb_dependencia,emb_tipo,emb_estado,emb_desplazamiento,
    emb_repotenciado,emb_fecha_repotenciado,emb_vel_emergencia,emb_vel_crucero,
    emb_tripulacion,emb_autonomia,emb_cap_agua,emb_eslora,emb_manga,emb_calado,
    emb_puntal,emb_cap_combustible,emb_tipo_combustible,emb_cant_motores,
    emb_marca_motor,emb_modelo_motor,emb_situacion,desp_emb_id_embarcacion,
    desp_emb_catalogo,desp_emb_matricula,desp_emb_nombre,desp_emb_indicativo,
    desp_emb_linea,desp_emb_modelo,desp_emb_color,desp_emb_origen,desp_emb_ubicacion,
    desp_emb_observaciones,desp_emb_fabricacion,desp_emb_constructora,
    desp_emb_dependencia,desp_emb_tipo,desp_emb_estado,desp_emb_desplazamiento,
    desp_emb_repotenciado,desp_emb_fecha_repotenciado,desp_emb_vel_emergencia,
    desp_emb_vel_crucero,desp_emb_tripulacion,desp_emb_autonomia,desp_emb_cap_agua,
    desp_emb_eslora,desp_emb_manga,desp_emb_calado,desp_emb_puntal,desp_emb_cap_combustible,
    desp_emb_tipo_combustible,desp_emb_cant_motores,desp_emb_marca_motor,
    desp_emb_modelo_motor,desp_emb_situacion,accion,usuario,hora)  values 
    (antes.emb_id_embarcacion ,antes.emb_catalogo ,antes.emb_matricula 
    ,antes.emb_nombre ,antes.emb_indicativo ,antes.emb_linea ,antes.emb_modelo 
    ,antes.emb_color ,antes.emb_origen ,antes.emb_ubicacion ,antes.emb_observaciones 
    ,antes.emb_fabricacion ,antes.emb_constructora ,antes.emb_dependencia 
    ,antes.emb_tipo ,antes.emb_estado ,antes.emb_desplazamiento ,antes.emb_repotenciado 
    ,antes.emb_fecha_repotenciado ,antes.emb_vel_emergencia ,antes.emb_vel_crucero 
    ,antes.emb_tripulacion ,antes.emb_autonomia ,antes.emb_cap_agua ,
    antes.emb_eslora ,antes.emb_manga ,antes.emb_calado ,antes.emb_puntal 
    ,antes.emb_cap_combustible ,antes.emb_tipo_combustible ,antes.emb_cant_motores 
    ,antes.emb_marca_motor ,antes.emb_modelo_motor ,antes.emb_situacion 
    ,luego.emb_id_embarcacion ,luego.emb_catalogo ,luego.emb_matricula 
    ,luego.emb_nombre ,luego.emb_indicativo ,luego.emb_linea ,luego.emb_modelo 
    ,luego.emb_color ,luego.emb_origen ,luego.emb_ubicacion ,luego.emb_observaciones 
    ,luego.emb_fabricacion ,luego.emb_constructora ,luego.emb_dependencia 
    ,luego.emb_tipo ,luego.emb_estado ,luego.emb_desplazamiento ,luego.emb_repotenciado 
    ,luego.emb_fecha_repotenciado ,luego.emb_vel_emergencia ,luego.emb_vel_crucero 
    ,luego.emb_tripulacion ,luego.emb_autonomia ,luego.emb_cap_agua ,
    luego.emb_eslora ,luego.emb_manga ,luego.emb_calado ,luego.emb_puntal 
    ,luego.emb_cap_combustible ,luego.emb_tipo_combustible ,luego.emb_cant_motores 
    ,luego.emb_marca_motor ,luego.emb_modelo_motor ,luego.emb_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_remolques insert on "informix"
    .vlh_remolques referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_remolques (rem_id,rem_serie,
    rem_catalogo,rem_ubicacion,rem_origen,rem_modelo,rem_asig,rem_dep,
    rem_estado,rem_cap,rem_ancho,rem_largo,rem_sistema,rem_tipo_sist,
    rem_estado_sist,rem_cap_sist,rem_sist_electrico,rem_estado_sist_electrico,
    rem_neumaticos,rem_situacion,desp_rem_id,desp_rem_serie,desp_rem_catalogo,
    desp_rem_ubicacion,desp_rem_origen,desp_rem_modelo,desp_rem_asig,
    desp_rem_dep,desp_rem_estado,desp_rem_cap,desp_rem_ancho,desp_rem_largo,
    desp_rem_sistema,desp_rem_tipo_sist,desp_rem_estado_sist,desp_rem_cap_sist,
    desp_rem_sist_electrico,desp_rem_estado_sist_electrico,desp_rem_neumaticos,
    desp_rem_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.rem_id ,luego.rem_serie 
    ,luego.rem_catalogo ,luego.rem_ubicacion ,luego.rem_origen ,luego.rem_modelo 
    ,luego.rem_asig ,luego.rem_dep ,luego.rem_estado ,luego.rem_cap ,
    luego.rem_ancho ,luego.rem_largo ,luego.rem_sistema ,luego.rem_tipo_sist 
    ,luego.rem_estado_sist ,luego.rem_cap_sist ,luego.rem_sist_electrico 
    ,luego.rem_estado_sist_electrico ,luego.rem_neumaticos ,luego.rem_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_remolques delete on "informix"
    .vlh_remolques referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_remolques (rem_id,rem_serie,
    rem_catalogo,rem_ubicacion,rem_origen,rem_modelo,rem_asig,rem_dep,
    rem_estado,rem_cap,rem_ancho,rem_largo,rem_sistema,rem_tipo_sist,
    rem_estado_sist,rem_cap_sist,rem_sist_electrico,rem_estado_sist_electrico,
    rem_neumaticos,rem_situacion,desp_rem_id,desp_rem_serie,desp_rem_catalogo,
    desp_rem_ubicacion,desp_rem_origen,desp_rem_modelo,desp_rem_asig,
    desp_rem_dep,desp_rem_estado,desp_rem_cap,desp_rem_ancho,desp_rem_largo,
    desp_rem_sistema,desp_rem_tipo_sist,desp_rem_estado_sist,desp_rem_cap_sist,
    desp_rem_sist_electrico,desp_rem_estado_sist_electrico,desp_rem_neumaticos,
    desp_rem_situacion,accion,usuario,hora)  values (antes.rem_id ,antes.rem_serie 
    ,antes.rem_catalogo ,antes.rem_ubicacion ,antes.rem_origen ,antes.rem_modelo 
    ,antes.rem_asig ,antes.rem_dep ,antes.rem_estado ,antes.rem_cap ,
    antes.rem_ancho ,antes.rem_largo ,antes.rem_sistema ,antes.rem_tipo_sist 
    ,antes.rem_estado_sist ,antes.rem_cap_sist ,antes.rem_sist_electrico 
    ,antes.rem_estado_sist_electrico ,antes.rem_neumaticos ,antes.rem_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_remolques update on "informix"
    .vlh_remolques referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_remolques (rem_id,rem_serie,
    rem_catalogo,rem_ubicacion,rem_origen,rem_modelo,rem_asig,rem_dep,
    rem_estado,rem_cap,rem_ancho,rem_largo,rem_sistema,rem_tipo_sist,
    rem_estado_sist,rem_cap_sist,rem_sist_electrico,rem_estado_sist_electrico,
    rem_neumaticos,rem_situacion,desp_rem_id,desp_rem_serie,desp_rem_catalogo,
    desp_rem_ubicacion,desp_rem_origen,desp_rem_modelo,desp_rem_asig,
    desp_rem_dep,desp_rem_estado,desp_rem_cap,desp_rem_ancho,desp_rem_largo,
    desp_rem_sistema,desp_rem_tipo_sist,desp_rem_estado_sist,desp_rem_cap_sist,
    desp_rem_sist_electrico,desp_rem_estado_sist_electrico,desp_rem_neumaticos,
    desp_rem_situacion,accion,usuario,hora)  values (antes.rem_id ,antes.rem_serie 
    ,antes.rem_catalogo ,antes.rem_ubicacion ,antes.rem_origen ,antes.rem_modelo 
    ,antes.rem_asig ,antes.rem_dep ,antes.rem_estado ,antes.rem_cap ,
    antes.rem_ancho ,antes.rem_largo ,antes.rem_sistema ,antes.rem_tipo_sist 
    ,antes.rem_estado_sist ,antes.rem_cap_sist ,antes.rem_sist_electrico 
    ,antes.rem_estado_sist_electrico ,antes.rem_neumaticos ,antes.rem_situacion 
    ,luego.rem_id ,luego.rem_serie ,luego.rem_catalogo ,luego.rem_ubicacion 
    ,luego.rem_origen ,luego.rem_modelo ,luego.rem_asig ,luego.rem_dep 
    ,luego.rem_estado ,luego.rem_cap ,luego.rem_ancho ,luego.rem_largo 
    ,luego.rem_sistema ,luego.rem_tipo_sist ,luego.rem_estado_sist ,luego.rem_cap_sist 
    ,luego.rem_sist_electrico ,luego.rem_estado_sist_electrico ,luego.rem_neumaticos 
    ,luego.rem_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_caract_vehiculos insert on 
    "informix".vlh_caract_vehiculos referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_caract_vehiculos (car_id_vehiculo,
    car_serie_vehiculo,car_catalogo_vehiculo,car_placas_vehiculo,car_indicativo_vehiculo,
    car_siglas_vehiculo,car_t_circulacion,car_t_vehiculo,car_estado_vehiculo,
    car_marca_vehiculo,car_linea_vehiculo,car_modelo_vehiculo,car_motor_vehiculo,
    car_chasis_vehiculo,car_color_vehiculo,car_cap_toneladas_vehiculo,
    car_cap_pasajeros_vehiculo,car_tipo_carroceria,car_tipo_combustible,
    car_llantas_vehiculo,car_gancho_pinzon_vehiculo,car_cap_gancho,car_tipo_cisterna,
    car_origen_vehiculo,car_ubicacion_vehiculo,car_obs_vehiculo,car_comb_consumo,
    car_lubri_consumo,car_transmision_vehiculo,car_traccion_vehiculo,
    car_aire_acond,car_impuesto_vehiculo,car_poliza,car_bateria,car_dependencia,
    car_destino,car_vehi_situacion,desp_car_id_vehiculo,desp_car_serie_vehiculo,
    desp_car_catalogo_vehiculo,desp_car_placas_vehiculo,desp_car_indicativo_vehiculo,
    desp_car_siglas_vehiculo,desp_car_t_circulacion,desp_car_t_vehiculo,
    desp_car_estado_vehiculo,desp_car_marca_vehiculo,desp_car_linea_vehiculo,
    desp_car_modelo_vehiculo,desp_car_motor_vehiculo,desp_car_chasis_vehiculo,
    desp_car_color_vehiculo,desp_car_cap_toneladas_vehiculo,desp_car_cap_pasajeros_vehiculo,
    desp_car_tipo_carroceria,desp_car_tipo_combustible,desp_car_llantas_vehiculo,
    desp_car_gancho_pinzon_vehiculo,desp_car_cap_gancho,desp_car_tipo_cisterna,
    desp_car_origen_vehiculo,desp_car_ubicacion_vehiculo,desp_car_obs_vehiculo,
    desp_car_comb_consumo,desp_car_lubri_consumo,desp_car_transmision_vehiculo,
    desp_car_traccion_vehiculo,desp_car_aire_acond,desp_car_impuesto_vehiculo,
    desp_car_poliza,desp_car_bateria,desp_car_dependencia,desp_car_destino,
    desp_car_vehi_situacion,accion,usuario,hora)  values (NULL ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.car_id_vehiculo ,luego.car_serie_vehiculo 
    ,luego.car_catalogo_vehiculo ,luego.car_placas_vehiculo ,luego.car_indicativo_vehiculo 
    ,luego.car_siglas_vehiculo ,luego.car_t_circulacion ,luego.car_t_vehiculo 
    ,luego.car_estado_vehiculo ,luego.car_marca_vehiculo ,luego.car_linea_vehiculo 
    ,luego.car_modelo_vehiculo ,luego.car_motor_vehiculo ,luego.car_chasis_vehiculo 
    ,luego.car_color_vehiculo ,luego.car_cap_toneladas_vehiculo ,luego.car_cap_pasajeros_vehiculo 
    ,luego.car_tipo_carroceria ,luego.car_tipo_combustible ,luego.car_llantas_vehiculo 
    ,luego.car_gancho_pinzon_vehiculo ,luego.car_cap_gancho ,luego.car_tipo_cisterna 
    ,luego.car_origen_vehiculo ,luego.car_ubicacion_vehiculo ,luego.car_obs_vehiculo 
    ,luego.car_comb_consumo ,luego.car_lubri_consumo ,luego.car_transmision_vehiculo 
    ,luego.car_traccion_vehiculo ,luego.car_aire_acond ,luego.car_impuesto_vehiculo 
    ,luego.car_poliza ,luego.car_bateria ,luego.car_dependencia ,luego.car_destino 
    ,luego.car_vehi_situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_vlh_caract_vehiculos delete on 
    "informix".vlh_caract_vehiculos referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_caract_vehiculos (car_id_vehiculo,
    car_serie_vehiculo,car_catalogo_vehiculo,car_placas_vehiculo,car_indicativo_vehiculo,
    car_siglas_vehiculo,car_t_circulacion,car_t_vehiculo,car_estado_vehiculo,
    car_marca_vehiculo,car_linea_vehiculo,car_modelo_vehiculo,car_motor_vehiculo,
    car_chasis_vehiculo,car_color_vehiculo,car_cap_toneladas_vehiculo,
    car_cap_pasajeros_vehiculo,car_tipo_carroceria,car_tipo_combustible,
    car_llantas_vehiculo,car_gancho_pinzon_vehiculo,car_cap_gancho,car_tipo_cisterna,
    car_origen_vehiculo,car_ubicacion_vehiculo,car_obs_vehiculo,car_comb_consumo,
    car_lubri_consumo,car_transmision_vehiculo,car_traccion_vehiculo,
    car_aire_acond,car_impuesto_vehiculo,car_poliza,car_bateria,car_dependencia,
    car_destino,car_vehi_situacion,desp_car_id_vehiculo,desp_car_serie_vehiculo,
    desp_car_catalogo_vehiculo,desp_car_placas_vehiculo,desp_car_indicativo_vehiculo,
    desp_car_siglas_vehiculo,desp_car_t_circulacion,desp_car_t_vehiculo,
    desp_car_estado_vehiculo,desp_car_marca_vehiculo,desp_car_linea_vehiculo,
    desp_car_modelo_vehiculo,desp_car_motor_vehiculo,desp_car_chasis_vehiculo,
    desp_car_color_vehiculo,desp_car_cap_toneladas_vehiculo,desp_car_cap_pasajeros_vehiculo,
    desp_car_tipo_carroceria,desp_car_tipo_combustible,desp_car_llantas_vehiculo,
    desp_car_gancho_pinzon_vehiculo,desp_car_cap_gancho,desp_car_tipo_cisterna,
    desp_car_origen_vehiculo,desp_car_ubicacion_vehiculo,desp_car_obs_vehiculo,
    desp_car_comb_consumo,desp_car_lubri_consumo,desp_car_transmision_vehiculo,
    desp_car_traccion_vehiculo,desp_car_aire_acond,desp_car_impuesto_vehiculo,
    desp_car_poliza,desp_car_bateria,desp_car_dependencia,desp_car_destino,
    desp_car_vehi_situacion,accion,usuario,hora)  values (antes.car_id_vehiculo 
    ,antes.car_serie_vehiculo ,antes.car_catalogo_vehiculo ,antes.car_placas_vehiculo 
    ,antes.car_indicativo_vehiculo ,antes.car_siglas_vehiculo ,antes.car_t_circulacion 
    ,antes.car_t_vehiculo ,antes.car_estado_vehiculo ,antes.car_marca_vehiculo 
    ,antes.car_linea_vehiculo ,antes.car_modelo_vehiculo ,antes.car_motor_vehiculo 
    ,antes.car_chasis_vehiculo ,antes.car_color_vehiculo ,antes.car_cap_toneladas_vehiculo 
    ,antes.car_cap_pasajeros_vehiculo ,antes.car_tipo_carroceria ,antes.car_tipo_combustible 
    ,antes.car_llantas_vehiculo ,antes.car_gancho_pinzon_vehiculo ,antes.car_cap_gancho 
    ,antes.car_tipo_cisterna ,antes.car_origen_vehiculo ,antes.car_ubicacion_vehiculo 
    ,antes.car_obs_vehiculo ,antes.car_comb_consumo ,antes.car_lubri_consumo 
    ,antes.car_transmision_vehiculo ,antes.car_traccion_vehiculo ,antes.car_aire_acond 
    ,antes.car_impuesto_vehiculo ,antes.car_poliza ,antes.car_bateria 
    ,antes.car_dependencia ,antes.car_destino ,antes.car_vehi_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_vlh_caract_vehiculos update on 
    "informix".vlh_caract_vehiculos referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_vlh_caract_vehiculos (car_id_vehiculo,
    car_serie_vehiculo,car_catalogo_vehiculo,car_placas_vehiculo,car_indicativo_vehiculo,
    car_siglas_vehiculo,car_t_circulacion,car_t_vehiculo,car_estado_vehiculo,
    car_marca_vehiculo,car_linea_vehiculo,car_modelo_vehiculo,car_motor_vehiculo,
    car_chasis_vehiculo,car_color_vehiculo,car_cap_toneladas_vehiculo,
    car_cap_pasajeros_vehiculo,car_tipo_carroceria,car_tipo_combustible,
    car_llantas_vehiculo,car_gancho_pinzon_vehiculo,car_cap_gancho,car_tipo_cisterna,
    car_origen_vehiculo,car_ubicacion_vehiculo,car_obs_vehiculo,car_comb_consumo,
    car_lubri_consumo,car_transmision_vehiculo,car_traccion_vehiculo,
    car_aire_acond,car_impuesto_vehiculo,car_poliza,car_bateria,car_dependencia,
    car_destino,car_vehi_situacion,desp_car_id_vehiculo,desp_car_serie_vehiculo,
    desp_car_catalogo_vehiculo,desp_car_placas_vehiculo,desp_car_indicativo_vehiculo,
    desp_car_siglas_vehiculo,desp_car_t_circulacion,desp_car_t_vehiculo,
    desp_car_estado_vehiculo,desp_car_marca_vehiculo,desp_car_linea_vehiculo,
    desp_car_modelo_vehiculo,desp_car_motor_vehiculo,desp_car_chasis_vehiculo,
    desp_car_color_vehiculo,desp_car_cap_toneladas_vehiculo,desp_car_cap_pasajeros_vehiculo,
    desp_car_tipo_carroceria,desp_car_tipo_combustible,desp_car_llantas_vehiculo,
    desp_car_gancho_pinzon_vehiculo,desp_car_cap_gancho,desp_car_tipo_cisterna,
    desp_car_origen_vehiculo,desp_car_ubicacion_vehiculo,desp_car_obs_vehiculo,
    desp_car_comb_consumo,desp_car_lubri_consumo,desp_car_transmision_vehiculo,
    desp_car_traccion_vehiculo,desp_car_aire_acond,desp_car_impuesto_vehiculo,
    desp_car_poliza,desp_car_bateria,desp_car_dependencia,desp_car_destino,
    desp_car_vehi_situacion,accion,usuario,hora)  values (antes.car_id_vehiculo 
    ,antes.car_serie_vehiculo ,antes.car_catalogo_vehiculo ,antes.car_placas_vehiculo 
    ,antes.car_indicativo_vehiculo ,antes.car_siglas_vehiculo ,antes.car_t_circulacion 
    ,antes.car_t_vehiculo ,antes.car_estado_vehiculo ,antes.car_marca_vehiculo 
    ,antes.car_linea_vehiculo ,antes.car_modelo_vehiculo ,antes.car_motor_vehiculo 
    ,antes.car_chasis_vehiculo ,antes.car_color_vehiculo ,antes.car_cap_toneladas_vehiculo 
    ,antes.car_cap_pasajeros_vehiculo ,antes.car_tipo_carroceria ,antes.car_tipo_combustible 
    ,antes.car_llantas_vehiculo ,antes.car_gancho_pinzon_vehiculo ,antes.car_cap_gancho 
    ,antes.car_tipo_cisterna ,antes.car_origen_vehiculo ,antes.car_ubicacion_vehiculo 
    ,antes.car_obs_vehiculo ,antes.car_comb_consumo ,antes.car_lubri_consumo 
    ,antes.car_transmision_vehiculo ,antes.car_traccion_vehiculo ,antes.car_aire_acond 
    ,antes.car_impuesto_vehiculo ,antes.car_poliza ,antes.car_bateria 
    ,antes.car_dependencia ,antes.car_destino ,antes.car_vehi_situacion 
    ,luego.car_id_vehiculo ,luego.car_serie_vehiculo ,luego.car_catalogo_vehiculo 
    ,luego.car_placas_vehiculo ,luego.car_indicativo_vehiculo ,luego.car_siglas_vehiculo 
    ,luego.car_t_circulacion ,luego.car_t_vehiculo ,luego.car_estado_vehiculo 
    ,luego.car_marca_vehiculo ,luego.car_linea_vehiculo ,luego.car_modelo_vehiculo 
    ,luego.car_motor_vehiculo ,luego.car_chasis_vehiculo ,luego.car_color_vehiculo 
    ,luego.car_cap_toneladas_vehiculo ,luego.car_cap_pasajeros_vehiculo 
    ,luego.car_tipo_carroceria ,luego.car_tipo_combustible ,luego.car_llantas_vehiculo 
    ,luego.car_gancho_pinzon_vehiculo ,luego.car_cap_gancho ,luego.car_tipo_cisterna 
    ,luego.car_origen_vehiculo ,luego.car_ubicacion_vehiculo ,luego.car_obs_vehiculo 
    ,luego.car_comb_consumo ,luego.car_lubri_consumo ,luego.car_transmision_vehiculo 
    ,luego.car_traccion_vehiculo ,luego.car_aire_acond ,luego.car_impuesto_vehiculo 
    ,luego.car_poliza ,luego.car_bateria ,luego.car_dependencia ,luego.car_destino 
    ,luego.car_vehi_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_vlh_fag_caracteristicas insert 
    on "informix".vlh_fag_caracteristicas referencing new as luego
    
    for each row
        (
        insert into "informix".aud_vlh_fag_caracteristicas (fag_id_carct,
    fag_catalogo,fag_tipo,fag_serie,fag_ubicacion_exacta,fag_dependencia,
    fag_forma_adquisicion,fag_aeronave,fag_fabricacion,fag_proposito,
    fag_tripulacion,fag_pasajero,fag_peso_despliegue,fag_estado,fag_color,
    fag_motor,fag_combustible,fag_aceite,fag_hidraulico,fag_baterias,
    fag_neumaticos,fag_apu,fag_hrs_vuelo,fag_hrs_vuelo_disp,fag_consumo_combustible,
    fag_fecha_ult_fase,fag_tipo_fase,fag_autonomia,fag_obs,fag_aceite_transmision_heli,
    fag_cant_ac_transmision_heli,fag_aceite_caja90_heli,fag_cant_aceite_caja90_heli,
    fag_aceite_caja42_heli,fag_cant_aceite_caja42_heli,fag_aceite_rotor_gearbox_heli,
    fag_cant_aceite_rotor_gearbox_heli,fag_situacion,desp_fag_id_carct,
    desp_fag_catalogo,desp_fag_tipo,desp_fag_serie,desp_fag_ubicacion_exacta,
    desp_fag_dependencia,desp_fag_forma_adquisicion,desp_fag_aeronave,
    desp_fag_fabricacion,desp_fag_proposito,desp_fag_tripulacion,desp_fag_pasajero,
    desp_fag_peso_despliegue,desp_fag_estado,desp_fag_color,desp_fag_motor,
    desp_fag_combustible,desp_fag_aceite,desp_fag_hidraulico,desp_fag_baterias,
    desp_fag_neumaticos,desp_fag_apu,desp_fag_hrs_vuelo,desp_fag_hrs_vuelo_disp,
    desp_fag_consumo_combustible,desp_fag_fecha_ult_fase,desp_fag_tipo_fase,
    desp_fag_autonomia,desp_fag_obs,desp_fag_aceite_transmision_heli,
    desp_fag_cant_ac_transmision_heli,desp_fag_aceite_caja90_heli,desp_fag_cant_aceite_caja90_heli,
    desp_fag_aceite_caja42_heli,desp_fag_cant_aceite_caja42_heli,desp_fag_aceite_rotor_gearbox_heli,
    desp_fag_cant_aceite_rotor_gearbox_heli,desp_fag_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,luego.fag_id_carct ,luego.fag_catalogo ,luego.fag_tipo 
    ,luego.fag_serie ,luego.fag_ubicacion_exacta ,luego.fag_dependencia 
    ,luego.fag_forma_adquisicion ,luego.fag_aeronave ,luego.fag_fabricacion 
    ,luego.fag_proposito ,luego.fag_tripulacion ,luego.fag_pasajero ,
    luego.fag_peso_despliegue ,luego.fag_estado ,luego.fag_color ,luego.fag_motor 
    ,luego.fag_combustible ,luego.fag_aceite ,luego.fag_hidraulico ,luego.fag_baterias 
    ,luego.fag_neumaticos ,luego.fag_apu ,luego.fag_hrs_vuelo ,luego.fag_hrs_vuelo_disp 
    ,luego.fag_consumo_combustible ,luego.fag_fecha_ult_fase ,luego.fag_tipo_fase 
    ,luego.fag_autonomia ,luego.fag_obs ,luego.fag_aceite_transmision_heli 
    ,luego.fag_cant_ac_transmision_heli ,luego.fag_aceite_caja90_heli 
    ,luego.fag_cant_aceite_caja90_heli ,luego.fag_aceite_caja42_heli 
    ,luego.fag_cant_aceite_caja42_heli ,luego.fag_aceite_rotor_gearbox_heli 
    ,luego.fag_cant_aceite_rotor_gearbox_heli ,luego.fag_situacion ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_fag_caracteristicas delete 
    on "informix".vlh_fag_caracteristicas referencing old as antes
    
    for each row
        (
        insert into "informix".aud_vlh_fag_caracteristicas (fag_id_carct,
    fag_catalogo,fag_tipo,fag_serie,fag_ubicacion_exacta,fag_dependencia,
    fag_forma_adquisicion,fag_aeronave,fag_fabricacion,fag_proposito,
    fag_tripulacion,fag_pasajero,fag_peso_despliegue,fag_estado,fag_color,
    fag_motor,fag_combustible,fag_aceite,fag_hidraulico,fag_baterias,
    fag_neumaticos,fag_apu,fag_hrs_vuelo,fag_hrs_vuelo_disp,fag_consumo_combustible,
    fag_fecha_ult_fase,fag_tipo_fase,fag_autonomia,fag_obs,fag_aceite_transmision_heli,
    fag_cant_ac_transmision_heli,fag_aceite_caja90_heli,fag_cant_aceite_caja90_heli,
    fag_aceite_caja42_heli,fag_cant_aceite_caja42_heli,fag_aceite_rotor_gearbox_heli,
    fag_cant_aceite_rotor_gearbox_heli,fag_situacion,desp_fag_id_carct,
    desp_fag_catalogo,desp_fag_tipo,desp_fag_serie,desp_fag_ubicacion_exacta,
    desp_fag_dependencia,desp_fag_forma_adquisicion,desp_fag_aeronave,
    desp_fag_fabricacion,desp_fag_proposito,desp_fag_tripulacion,desp_fag_pasajero,
    desp_fag_peso_despliegue,desp_fag_estado,desp_fag_color,desp_fag_motor,
    desp_fag_combustible,desp_fag_aceite,desp_fag_hidraulico,desp_fag_baterias,
    desp_fag_neumaticos,desp_fag_apu,desp_fag_hrs_vuelo,desp_fag_hrs_vuelo_disp,
    desp_fag_consumo_combustible,desp_fag_fecha_ult_fase,desp_fag_tipo_fase,
    desp_fag_autonomia,desp_fag_obs,desp_fag_aceite_transmision_heli,
    desp_fag_cant_ac_transmision_heli,desp_fag_aceite_caja90_heli,desp_fag_cant_aceite_caja90_heli,
    desp_fag_aceite_caja42_heli,desp_fag_cant_aceite_caja42_heli,desp_fag_aceite_rotor_gearbox_heli,
    desp_fag_cant_aceite_rotor_gearbox_heli,desp_fag_situacion,accion,
    usuario,hora)  values (antes.fag_id_carct ,antes.fag_catalogo ,antes.fag_tipo 
    ,antes.fag_serie ,antes.fag_ubicacion_exacta ,antes.fag_dependencia 
    ,antes.fag_forma_adquisicion ,antes.fag_aeronave ,antes.fag_fabricacion 
    ,antes.fag_proposito ,antes.fag_tripulacion ,antes.fag_pasajero ,
    antes.fag_peso_despliegue ,antes.fag_estado ,antes.fag_color ,antes.fag_motor 
    ,antes.fag_combustible ,antes.fag_aceite ,antes.fag_hidraulico ,antes.fag_baterias 
    ,antes.fag_neumaticos ,antes.fag_apu ,antes.fag_hrs_vuelo ,antes.fag_hrs_vuelo_disp 
    ,antes.fag_consumo_combustible ,antes.fag_fecha_ult_fase ,antes.fag_tipo_fase 
    ,antes.fag_autonomia ,antes.fag_obs ,antes.fag_aceite_transmision_heli 
    ,antes.fag_cant_ac_transmision_heli ,antes.fag_aceite_caja90_heli 
    ,antes.fag_cant_aceite_caja90_heli ,antes.fag_aceite_caja42_heli 
    ,antes.fag_cant_aceite_caja42_heli ,antes.fag_aceite_rotor_gearbox_heli 
    ,antes.fag_cant_aceite_rotor_gearbox_heli ,antes.fag_situacion ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_vlh_fag_caracteristicas update 
    on "informix".vlh_fag_caracteristicas referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_vlh_fag_caracteristicas (fag_id_carct,
    fag_catalogo,fag_tipo,fag_serie,fag_ubicacion_exacta,fag_dependencia,
    fag_forma_adquisicion,fag_aeronave,fag_fabricacion,fag_proposito,
    fag_tripulacion,fag_pasajero,fag_peso_despliegue,fag_estado,fag_color,
    fag_motor,fag_combustible,fag_aceite,fag_hidraulico,fag_baterias,
    fag_neumaticos,fag_apu,fag_hrs_vuelo,fag_hrs_vuelo_disp,fag_consumo_combustible,
    fag_fecha_ult_fase,fag_tipo_fase,fag_autonomia,fag_obs,fag_aceite_transmision_heli,
    fag_cant_ac_transmision_heli,fag_aceite_caja90_heli,fag_cant_aceite_caja90_heli,
    fag_aceite_caja42_heli,fag_cant_aceite_caja42_heli,fag_aceite_rotor_gearbox_heli,
    fag_cant_aceite_rotor_gearbox_heli,fag_situacion,desp_fag_id_carct,
    desp_fag_catalogo,desp_fag_tipo,desp_fag_serie,desp_fag_ubicacion_exacta,
    desp_fag_dependencia,desp_fag_forma_adquisicion,desp_fag_aeronave,
    desp_fag_fabricacion,desp_fag_proposito,desp_fag_tripulacion,desp_fag_pasajero,
    desp_fag_peso_despliegue,desp_fag_estado,desp_fag_color,desp_fag_motor,
    desp_fag_combustible,desp_fag_aceite,desp_fag_hidraulico,desp_fag_baterias,
    desp_fag_neumaticos,desp_fag_apu,desp_fag_hrs_vuelo,desp_fag_hrs_vuelo_disp,
    desp_fag_consumo_combustible,desp_fag_fecha_ult_fase,desp_fag_tipo_fase,
    desp_fag_autonomia,desp_fag_obs,desp_fag_aceite_transmision_heli,
    desp_fag_cant_ac_transmision_heli,desp_fag_aceite_caja90_heli,desp_fag_cant_aceite_caja90_heli,
    desp_fag_aceite_caja42_heli,desp_fag_cant_aceite_caja42_heli,desp_fag_aceite_rotor_gearbox_heli,
    desp_fag_cant_aceite_rotor_gearbox_heli,desp_fag_situacion,accion,
    usuario,hora)  values (antes.fag_id_carct ,antes.fag_catalogo ,antes.fag_tipo 
    ,antes.fag_serie ,antes.fag_ubicacion_exacta ,antes.fag_dependencia 
    ,antes.fag_forma_adquisicion ,antes.fag_aeronave ,antes.fag_fabricacion 
    ,antes.fag_proposito ,antes.fag_tripulacion ,antes.fag_pasajero ,
    antes.fag_peso_despliegue ,antes.fag_estado ,antes.fag_color ,antes.fag_motor 
    ,antes.fag_combustible ,antes.fag_aceite ,antes.fag_hidraulico ,antes.fag_baterias 
    ,antes.fag_neumaticos ,antes.fag_apu ,antes.fag_hrs_vuelo ,antes.fag_hrs_vuelo_disp 
    ,antes.fag_consumo_combustible ,antes.fag_fecha_ult_fase ,antes.fag_tipo_fase 
    ,antes.fag_autonomia ,antes.fag_obs ,antes.fag_aceite_transmision_heli 
    ,antes.fag_cant_ac_transmision_heli ,antes.fag_aceite_caja90_heli 
    ,antes.fag_cant_aceite_caja90_heli ,antes.fag_aceite_caja42_heli 
    ,antes.fag_cant_aceite_caja42_heli ,antes.fag_aceite_rotor_gearbox_heli 
    ,antes.fag_cant_aceite_rotor_gearbox_heli ,antes.fag_situacion ,luego.fag_id_carct 
    ,luego.fag_catalogo ,luego.fag_tipo ,luego.fag_serie ,luego.fag_ubicacion_exacta 
    ,luego.fag_dependencia ,luego.fag_forma_adquisicion ,luego.fag_aeronave 
    ,luego.fag_fabricacion ,luego.fag_proposito ,luego.fag_tripulacion 
    ,luego.fag_pasajero ,luego.fag_peso_despliegue ,luego.fag_estado 
    ,luego.fag_color ,luego.fag_motor ,luego.fag_combustible ,luego.fag_aceite 
    ,luego.fag_hidraulico ,luego.fag_baterias ,luego.fag_neumaticos ,
    luego.fag_apu ,luego.fag_hrs_vuelo ,luego.fag_hrs_vuelo_disp ,luego.fag_consumo_combustible 
    ,luego.fag_fecha_ult_fase ,luego.fag_tipo_fase ,luego.fag_autonomia 
    ,luego.fag_obs ,luego.fag_aceite_transmision_heli ,luego.fag_cant_ac_transmision_heli 
    ,luego.fag_aceite_caja90_heli ,luego.fag_cant_aceite_caja90_heli 
    ,luego.fag_aceite_caja42_heli ,luego.fag_cant_aceite_caja42_heli 
    ,luego.fag_aceite_rotor_gearbox_heli ,luego.fag_cant_aceite_rotor_gearbox_heli 
    ,luego.fag_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_gpl_t_comision insert on "informix"
    .gpl_t_comision referencing new as luego
    for each row
        (
        insert into "informix".aud_gpl_t_comision (com_id,com_descripcion,
    com_situacion,desp_com_id,desp_com_descripcion,desp_com_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.com_id ,luego.com_descripcion 
    ,luego.com_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_gpl_t_comision delete on "informix"
    .gpl_t_comision referencing old as antes
    for each row
        (
        insert into "informix".aud_gpl_t_comision (com_id,com_descripcion,
    com_situacion,desp_com_id,desp_com_descripcion,desp_com_situacion,
    accion,usuario,hora)  values (antes.com_id ,antes.com_descripcion 
    ,antes.com_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_gpl_t_comision update on "informix"
    .gpl_t_comision referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_gpl_t_comision (com_id,com_descripcion,
    com_situacion,desp_com_id,desp_com_descripcion,desp_com_situacion,
    accion,usuario,hora)  values (antes.com_id ,antes.com_descripcion 
    ,antes.com_situacion ,luego.com_id ,luego.com_descripcion ,luego.com_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_gpl_ubicacion insert on "informix"
    .gpl_ubicacion referencing new as luego
    for each row
        (
        insert into "informix".aud_gpl_ubicacion (uba_codigo,
    uba_comision,uba_vertice,uba_latitud,uba_longitud,uba_situacion,desp_uba_codigo,
    desp_uba_comision,desp_uba_vertice,desp_uba_latitud,desp_uba_longitud,
    desp_uba_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,luego.uba_codigo ,luego.uba_comision ,luego.uba_vertice ,luego.uba_latitud 
    ,luego.uba_longitud ,luego.uba_situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_gpl_ubicacion delete on "informix"
    .gpl_ubicacion referencing old as antes
    for each row
        (
        insert into "informix".aud_gpl_ubicacion (uba_codigo,
    uba_comision,uba_vertice,uba_latitud,uba_longitud,uba_situacion,desp_uba_codigo,
    desp_uba_comision,desp_uba_vertice,desp_uba_latitud,desp_uba_longitud,
    desp_uba_situacion,accion,usuario,hora)  values (antes.uba_codigo 
    ,antes.uba_comision ,antes.uba_vertice ,antes.uba_latitud ,antes.uba_longitud 
    ,antes.uba_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_gpl_ubicacion update on "informix"
    .gpl_ubicacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_gpl_ubicacion (uba_codigo,
    uba_comision,uba_vertice,uba_latitud,uba_longitud,uba_situacion,desp_uba_codigo,
    desp_uba_comision,desp_uba_vertice,desp_uba_latitud,desp_uba_longitud,
    desp_uba_situacion,accion,usuario,hora)  values (antes.uba_codigo 
    ,antes.uba_comision ,antes.uba_vertice ,antes.uba_latitud ,antes.uba_longitud 
    ,antes.uba_situacion ,luego.uba_codigo ,luego.uba_comision ,luego.uba_vertice 
    ,luego.uba_latitud ,luego.uba_longitud ,luego.uba_situacion ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_gpl_lugar insert on "informix".gpl_lugar 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_gpl_lugar (lug_id,lug_desc_lg,
    lug_desc_ct,lug_depto,lug_municipio,lug_situacion,desp_lug_id,desp_lug_desc_lg,
    desp_lug_desc_ct,desp_lug_depto,desp_lug_municipio,desp_lug_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.lug_id ,
    luego.lug_desc_lg ,luego.lug_desc_ct ,luego.lug_depto ,luego.lug_municipio 
    ,luego.lug_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_gpl_lugar delete on "informix".gpl_lugar 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_gpl_lugar (lug_id,lug_desc_lg,
    lug_desc_ct,lug_depto,lug_municipio,lug_situacion,desp_lug_id,desp_lug_desc_lg,
    desp_lug_desc_ct,desp_lug_depto,desp_lug_municipio,desp_lug_situacion,
    accion,usuario,hora)  values (antes.lug_id ,antes.lug_desc_lg ,antes.lug_desc_ct 
    ,antes.lug_depto ,antes.lug_municipio ,antes.lug_situacion ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_gpl_lugar update on "informix".gpl_lugar 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_gpl_lugar (lug_id,lug_desc_lg,
    lug_desc_ct,lug_depto,lug_municipio,lug_situacion,desp_lug_id,desp_lug_desc_lg,
    desp_lug_desc_ct,desp_lug_depto,desp_lug_municipio,desp_lug_situacion,
    accion,usuario,hora)  values (antes.lug_id ,antes.lug_desc_lg ,antes.lug_desc_ct 
    ,antes.lug_depto ,antes.lug_municipio ,antes.lug_situacion ,luego.lug_id 
    ,luego.lug_desc_lg ,luego.lug_desc_ct ,luego.lug_depto ,luego.lug_municipio 
    ,luego.lug_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_gpl_transporte insert on "informix"
    .gpl_transporte referencing new as luego
    for each row
        (
        insert into "informix".aud_gpl_transporte (tra_id,tra_comision,
    tra_cat_esp,tra_uso_veh,tra_cat_veh,tra_placas,tra_tipo_veh,desp_tra_id,
    desp_tra_comision,desp_tra_cat_esp,desp_tra_uso_veh,desp_tra_cat_veh,
    desp_tra_placas,desp_tra_tipo_veh,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,luego.tra_id ,luego.tra_comision ,luego.tra_cat_esp 
    ,luego.tra_uso_veh ,luego.tra_cat_veh ,luego.tra_placas ,luego.tra_tipo_veh 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_gpl_transporte delete on "informix"
    .gpl_transporte referencing old as antes
    for each row
        (
        insert into "informix".aud_gpl_transporte (tra_id,tra_comision,
    tra_cat_esp,tra_uso_veh,tra_cat_veh,tra_placas,tra_tipo_veh,desp_tra_id,
    desp_tra_comision,desp_tra_cat_esp,desp_tra_uso_veh,desp_tra_cat_veh,
    desp_tra_placas,desp_tra_tipo_veh,accion,usuario,hora)  values (antes.tra_id 
    ,antes.tra_comision ,antes.tra_cat_esp ,antes.tra_uso_veh ,antes.tra_cat_veh 
    ,antes.tra_placas ,antes.tra_tipo_veh ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_gpl_transporte update on "informix"
    .gpl_transporte referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_gpl_transporte (tra_id,tra_comision,
    tra_cat_esp,tra_uso_veh,tra_cat_veh,tra_placas,tra_tipo_veh,desp_tra_id,
    desp_tra_comision,desp_tra_cat_esp,desp_tra_uso_veh,desp_tra_cat_veh,
    desp_tra_placas,desp_tra_tipo_veh,accion,usuario,hora)  values (antes.tra_id 
    ,antes.tra_comision ,antes.tra_cat_esp ,antes.tra_uso_veh ,antes.tra_cat_veh 
    ,antes.tra_placas ,antes.tra_tipo_veh ,luego.tra_id ,luego.tra_comision 
    ,luego.tra_cat_esp ,luego.tra_uso_veh ,luego.tra_cat_veh ,luego.tra_placas 
    ,luego.tra_tipo_veh ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cont_curriculo insert on "informix"
    .cont_curriculo referencing new as luego
    for each row
        (
        insert into "informix".aud_cont_curriculo (curr_codigo,
    curr_catalogo,curr_grado,curr_arma,curr_nombre,curr_dependencia,curr_horaactual,
    curr_fecha,curr_generado,desp_curr_codigo,desp_curr_catalogo,desp_curr_grado,
    desp_curr_arma,desp_curr_nombre,desp_curr_dependencia,desp_curr_horaactual,
    desp_curr_fecha,desp_curr_generado,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.curr_codigo ,luego.curr_catalogo ,
    luego.curr_grado ,luego.curr_arma ,luego.curr_nombre ,luego.curr_dependencia 
    ,luego.curr_horaactual ,luego.curr_fecha ,luego.curr_generado ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_cont_curriculo delete on "informix"
    .cont_curriculo referencing old as antes
    for each row
        (
        insert into "informix".aud_cont_curriculo (curr_codigo,
    curr_catalogo,curr_grado,curr_arma,curr_nombre,curr_dependencia,curr_horaactual,
    curr_fecha,curr_generado,desp_curr_codigo,desp_curr_catalogo,desp_curr_grado,
    desp_curr_arma,desp_curr_nombre,desp_curr_dependencia,desp_curr_horaactual,
    desp_curr_fecha,desp_curr_generado,accion,usuario,hora)  values (antes.curr_codigo 
    ,antes.curr_catalogo ,antes.curr_grado ,antes.curr_arma ,antes.curr_nombre 
    ,antes.curr_dependencia ,antes.curr_horaactual ,antes.curr_fecha 
    ,antes.curr_generado ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_cont_curriculo update on "informix"
    .cont_curriculo referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cont_curriculo (curr_codigo,
    curr_catalogo,curr_grado,curr_arma,curr_nombre,curr_dependencia,curr_horaactual,
    curr_fecha,curr_generado,desp_curr_codigo,desp_curr_catalogo,desp_curr_grado,
    desp_curr_arma,desp_curr_nombre,desp_curr_dependencia,desp_curr_horaactual,
    desp_curr_fecha,desp_curr_generado,accion,usuario,hora)  values (antes.curr_codigo 
    ,antes.curr_catalogo ,antes.curr_grado ,antes.curr_arma ,antes.curr_nombre 
    ,antes.curr_dependencia ,antes.curr_horaactual ,antes.curr_fecha 
    ,antes.curr_generado ,luego.curr_codigo ,luego.curr_catalogo ,luego.curr_grado 
    ,luego.curr_arma ,luego.curr_nombre ,luego.curr_dependencia ,luego.curr_horaactual 
    ,luego.curr_fecha ,luego.curr_generado ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_vlh_tow insert on "informix".vlh_tow 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_tow (tow_id,tow_sicoin,
    tow_catalogo,tow_ubicacion,tow_adquisicion,tow_modelo,tow_serie,tow_pais,
    tow_proposito,tow_dependencia,tow_tipo,tow_estado,tow_marca,tow_linea,
    tow_cap_libras,tow_traccion,tow_cant_motor,tow_t_motor,tow_marca_motor,
    tow_serie_motor,tow_actuadores,tow_cant_bat,tow_t_bat,tow_amperaje,
    tow_voltaje,tow_placas,tow_acum,tow_fuentes,tow_tiempo,tow_combustible,
    tow_neumaticos,tow_lubri,tow_lubri_esp,tow_situacion,desp_tow_id,
    desp_tow_sicoin,desp_tow_catalogo,desp_tow_ubicacion,desp_tow_adquisicion,
    desp_tow_modelo,desp_tow_serie,desp_tow_pais,desp_tow_proposito,desp_tow_dependencia,
    desp_tow_tipo,desp_tow_estado,desp_tow_marca,desp_tow_linea,desp_tow_cap_libras,
    desp_tow_traccion,desp_tow_cant_motor,desp_tow_t_motor,desp_tow_marca_motor,
    desp_tow_serie_motor,desp_tow_actuadores,desp_tow_cant_bat,desp_tow_t_bat,
    desp_tow_amperaje,desp_tow_voltaje,desp_tow_placas,desp_tow_acum,
    desp_tow_fuentes,desp_tow_tiempo,desp_tow_combustible,desp_tow_neumaticos,
    desp_tow_lubri,desp_tow_lubri_esp,desp_tow_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.tow_id 
    ,luego.tow_sicoin ,luego.tow_catalogo ,luego.tow_ubicacion ,luego.tow_adquisicion 
    ,luego.tow_modelo ,luego.tow_serie ,luego.tow_pais ,luego.tow_proposito 
    ,luego.tow_dependencia ,luego.tow_tipo ,luego.tow_estado ,luego.tow_marca 
    ,luego.tow_linea ,luego.tow_cap_libras ,luego.tow_traccion ,luego.tow_cant_motor 
    ,luego.tow_t_motor ,luego.tow_marca_motor ,luego.tow_serie_motor 
    ,luego.tow_actuadores ,luego.tow_cant_bat ,luego.tow_t_bat ,luego.tow_amperaje 
    ,luego.tow_voltaje ,luego.tow_placas ,luego.tow_acum ,luego.tow_fuentes 
    ,luego.tow_tiempo ,luego.tow_combustible ,luego.tow_neumaticos ,luego.tow_lubri 
    ,luego.tow_lubri_esp ,luego.tow_situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_vlh_tow delete on "informix".vlh_tow 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_tow (tow_id,tow_sicoin,
    tow_catalogo,tow_ubicacion,tow_adquisicion,tow_modelo,tow_serie,tow_pais,
    tow_proposito,tow_dependencia,tow_tipo,tow_estado,tow_marca,tow_linea,
    tow_cap_libras,tow_traccion,tow_cant_motor,tow_t_motor,tow_marca_motor,
    tow_serie_motor,tow_actuadores,tow_cant_bat,tow_t_bat,tow_amperaje,
    tow_voltaje,tow_placas,tow_acum,tow_fuentes,tow_tiempo,tow_combustible,
    tow_neumaticos,tow_lubri,tow_lubri_esp,tow_situacion,desp_tow_id,
    desp_tow_sicoin,desp_tow_catalogo,desp_tow_ubicacion,desp_tow_adquisicion,
    desp_tow_modelo,desp_tow_serie,desp_tow_pais,desp_tow_proposito,desp_tow_dependencia,
    desp_tow_tipo,desp_tow_estado,desp_tow_marca,desp_tow_linea,desp_tow_cap_libras,
    desp_tow_traccion,desp_tow_cant_motor,desp_tow_t_motor,desp_tow_marca_motor,
    desp_tow_serie_motor,desp_tow_actuadores,desp_tow_cant_bat,desp_tow_t_bat,
    desp_tow_amperaje,desp_tow_voltaje,desp_tow_placas,desp_tow_acum,
    desp_tow_fuentes,desp_tow_tiempo,desp_tow_combustible,desp_tow_neumaticos,
    desp_tow_lubri,desp_tow_lubri_esp,desp_tow_situacion,accion,usuario,
    hora)  values (antes.tow_id ,antes.tow_sicoin ,antes.tow_catalogo 
    ,antes.tow_ubicacion ,antes.tow_adquisicion ,antes.tow_modelo ,antes.tow_serie 
    ,antes.tow_pais ,antes.tow_proposito ,antes.tow_dependencia ,antes.tow_tipo 
    ,antes.tow_estado ,antes.tow_marca ,antes.tow_linea ,antes.tow_cap_libras 
    ,antes.tow_traccion ,antes.tow_cant_motor ,antes.tow_t_motor ,antes.tow_marca_motor 
    ,antes.tow_serie_motor ,antes.tow_actuadores ,antes.tow_cant_bat 
    ,antes.tow_t_bat ,antes.tow_amperaje ,antes.tow_voltaje ,antes.tow_placas 
    ,antes.tow_acum ,antes.tow_fuentes ,antes.tow_tiempo ,antes.tow_combustible 
    ,antes.tow_neumaticos ,antes.tow_lubri ,antes.tow_lubri_esp ,antes.tow_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_vlh_tow update on "informix".vlh_tow 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_tow (tow_id,tow_sicoin,
    tow_catalogo,tow_ubicacion,tow_adquisicion,tow_modelo,tow_serie,tow_pais,
    tow_proposito,tow_dependencia,tow_tipo,tow_estado,tow_marca,tow_linea,
    tow_cap_libras,tow_traccion,tow_cant_motor,tow_t_motor,tow_marca_motor,
    tow_serie_motor,tow_actuadores,tow_cant_bat,tow_t_bat,tow_amperaje,
    tow_voltaje,tow_placas,tow_acum,tow_fuentes,tow_tiempo,tow_combustible,
    tow_neumaticos,tow_lubri,tow_lubri_esp,tow_situacion,desp_tow_id,
    desp_tow_sicoin,desp_tow_catalogo,desp_tow_ubicacion,desp_tow_adquisicion,
    desp_tow_modelo,desp_tow_serie,desp_tow_pais,desp_tow_proposito,desp_tow_dependencia,
    desp_tow_tipo,desp_tow_estado,desp_tow_marca,desp_tow_linea,desp_tow_cap_libras,
    desp_tow_traccion,desp_tow_cant_motor,desp_tow_t_motor,desp_tow_marca_motor,
    desp_tow_serie_motor,desp_tow_actuadores,desp_tow_cant_bat,desp_tow_t_bat,
    desp_tow_amperaje,desp_tow_voltaje,desp_tow_placas,desp_tow_acum,
    desp_tow_fuentes,desp_tow_tiempo,desp_tow_combustible,desp_tow_neumaticos,
    desp_tow_lubri,desp_tow_lubri_esp,desp_tow_situacion,accion,usuario,
    hora)  values (antes.tow_id ,antes.tow_sicoin ,antes.tow_catalogo 
    ,antes.tow_ubicacion ,antes.tow_adquisicion ,antes.tow_modelo ,antes.tow_serie 
    ,antes.tow_pais ,antes.tow_proposito ,antes.tow_dependencia ,antes.tow_tipo 
    ,antes.tow_estado ,antes.tow_marca ,antes.tow_linea ,antes.tow_cap_libras 
    ,antes.tow_traccion ,antes.tow_cant_motor ,antes.tow_t_motor ,antes.tow_marca_motor 
    ,antes.tow_serie_motor ,antes.tow_actuadores ,antes.tow_cant_bat 
    ,antes.tow_t_bat ,antes.tow_amperaje ,antes.tow_voltaje ,antes.tow_placas 
    ,antes.tow_acum ,antes.tow_fuentes ,antes.tow_tiempo ,antes.tow_combustible 
    ,antes.tow_neumaticos ,antes.tow_lubri ,antes.tow_lubri_esp ,antes.tow_situacion 
    ,luego.tow_id ,luego.tow_sicoin ,luego.tow_catalogo ,luego.tow_ubicacion 
    ,luego.tow_adquisicion ,luego.tow_modelo ,luego.tow_serie ,luego.tow_pais 
    ,luego.tow_proposito ,luego.tow_dependencia ,luego.tow_tipo ,luego.tow_estado 
    ,luego.tow_marca ,luego.tow_linea ,luego.tow_cap_libras ,luego.tow_traccion 
    ,luego.tow_cant_motor ,luego.tow_t_motor ,luego.tow_marca_motor ,
    luego.tow_serie_motor ,luego.tow_actuadores ,luego.tow_cant_bat ,
    luego.tow_t_bat ,luego.tow_amperaje ,luego.tow_voltaje ,luego.tow_placas 
    ,luego.tow_acum ,luego.tow_fuentes ,luego.tow_tiempo ,luego.tow_combustible 
    ,luego.tow_neumaticos ,luego.tow_lubri ,luego.tow_lubri_esp ,luego.tow_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_dfdes_banrural insert on "informix"
    .dfdes_banrural referencing new as luego
    for each row
        (
        insert into "informix".aud_dfdes_banrural (dfdr_catalogo,
    dfdr_codigo,dfdr_nu_reg,dfdr_tipo_desc,dfdr_fec_ini,dfdr_mes_act,
    dfdr_fin_pres,dfdr_monto,dfdr_saldo,dfdr_mensual,dfdr_tot_cuotas,
    dfdr_num_cuotas,dfdr_nom_banco,dfdr_codeudor,dfdr_nom_bene,dfdr_no_prest,
    dfdr_si_no,des_dfdr_catalogo,des_dfdr_codigo,des_dfdr_nu_reg,des_dfdr_tipo_desc,
    des_dfdr_fec_ini,des_dfdr_mes_act,des_dfdr_fin_pres,des_dfdr_monto,
    des_dfdr_saldo,des_dfdr_mensual,des_dfdr_tot_cuotas,des_dfdr_num_cuotas,
    des_dfdr_nom_banco,des_dfdr_codeudor,des_dfdr_nom_bene,des_dfdr_no_prest,
    des_dfdr_si_no,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.dfdr_catalogo ,luego.dfdr_codigo 
    ,luego.dfdr_nu_reg ,luego.dfdr_tipo_desc ,luego.dfdr_fec_ini ,luego.dfdr_mes_act 
    ,luego.dfdr_fin_pres ,luego.dfdr_monto ,luego.dfdr_saldo ,luego.dfdr_mensual 
    ,luego.dfdr_tot_cuotas ,luego.dfdr_num_cuotas ,luego.dfdr_nom_banco 
    ,luego.dfdr_codeudor ,luego.dfdr_nom_bene ,luego.dfdr_no_prest ,luego.dfdr_si_no 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dfdes_banrural delete on "informix"
    .dfdes_banrural referencing old as antes
    for each row
        (
        insert into "informix".aud_dfdes_banrural (dfdr_catalogo,
    dfdr_codigo,dfdr_nu_reg,dfdr_tipo_desc,dfdr_fec_ini,dfdr_mes_act,
    dfdr_fin_pres,dfdr_monto,dfdr_saldo,dfdr_mensual,dfdr_tot_cuotas,
    dfdr_num_cuotas,dfdr_nom_banco,dfdr_codeudor,dfdr_nom_bene,dfdr_no_prest,
    dfdr_si_no,des_dfdr_catalogo,des_dfdr_codigo,des_dfdr_nu_reg,des_dfdr_tipo_desc,
    des_dfdr_fec_ini,des_dfdr_mes_act,des_dfdr_fin_pres,des_dfdr_monto,
    des_dfdr_saldo,des_dfdr_mensual,des_dfdr_tot_cuotas,des_dfdr_num_cuotas,
    des_dfdr_nom_banco,des_dfdr_codeudor,des_dfdr_nom_bene,des_dfdr_no_prest,
    des_dfdr_si_no,accion,usuario,hora)  values (antes.dfdr_catalogo 
    ,antes.dfdr_codigo ,antes.dfdr_nu_reg ,antes.dfdr_tipo_desc ,antes.dfdr_fec_ini 
    ,antes.dfdr_mes_act ,antes.dfdr_fin_pres ,antes.dfdr_monto ,antes.dfdr_saldo 
    ,antes.dfdr_mensual ,antes.dfdr_tot_cuotas ,antes.dfdr_num_cuotas 
    ,antes.dfdr_nom_banco ,antes.dfdr_codeudor ,antes.dfdr_nom_bene ,
    antes.dfdr_no_prest ,antes.dfdr_si_no ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_dfdes_banrural update on "informix"
    .dfdes_banrural referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dfdes_banrural (dfdr_catalogo,
    dfdr_codigo,dfdr_nu_reg,dfdr_tipo_desc,dfdr_fec_ini,dfdr_mes_act,
    dfdr_fin_pres,dfdr_monto,dfdr_saldo,dfdr_mensual,dfdr_tot_cuotas,
    dfdr_num_cuotas,dfdr_nom_banco,dfdr_codeudor,dfdr_nom_bene,dfdr_no_prest,
    dfdr_si_no,des_dfdr_catalogo,des_dfdr_codigo,des_dfdr_nu_reg,des_dfdr_tipo_desc,
    des_dfdr_fec_ini,des_dfdr_mes_act,des_dfdr_fin_pres,des_dfdr_monto,
    des_dfdr_saldo,des_dfdr_mensual,des_dfdr_tot_cuotas,des_dfdr_num_cuotas,
    des_dfdr_nom_banco,des_dfdr_codeudor,des_dfdr_nom_bene,des_dfdr_no_prest,
    des_dfdr_si_no,accion,usuario,hora)  values (antes.dfdr_catalogo 
    ,antes.dfdr_codigo ,antes.dfdr_nu_reg ,antes.dfdr_tipo_desc ,antes.dfdr_fec_ini 
    ,antes.dfdr_mes_act ,antes.dfdr_fin_pres ,antes.dfdr_monto ,antes.dfdr_saldo 
    ,antes.dfdr_mensual ,antes.dfdr_tot_cuotas ,antes.dfdr_num_cuotas 
    ,antes.dfdr_nom_banco ,antes.dfdr_codeudor ,antes.dfdr_nom_bene ,
    antes.dfdr_no_prest ,antes.dfdr_si_no ,luego.dfdr_catalogo ,luego.dfdr_codigo 
    ,luego.dfdr_nu_reg ,luego.dfdr_tipo_desc ,luego.dfdr_fec_ini ,luego.dfdr_mes_act 
    ,luego.dfdr_fin_pres ,luego.dfdr_monto ,luego.dfdr_saldo ,luego.dfdr_mensual 
    ,luego.dfdr_tot_cuotas ,luego.dfdr_num_cuotas ,luego.dfdr_nom_banco 
    ,luego.dfdr_codeudor ,luego.dfdr_nom_bene ,luego.dfdr_no_prest ,luego.dfdr_si_no 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_com_ent_sal2 insert on "informix"
    .com_ent_sal2 referencing new as luego
    for each row
        (
        insert into "informix".aud_com_ent_sal2 (es_codigo,es_documento,
    es_dep_llave_entrada,es_dep_llave_salida,es_forma,es_fecha,es_galones,
    es_cargo,es_tipo,es_saldo,es_precio,es_lugar,es_situacion,es_catalogo,
    es_dependencia,es_obs,desp_es_codigo,desp_es_documento,desp_es_dep_llave_entrada,
    desp_es_dep_llave_salida,desp_es_forma,desp_es_fecha,desp_es_galones,
    desp_es_cargo,desp_es_tipo,desp_es_saldo,desp_es_precio,desp_es_lugar,
    desp_es_situacion,desp_es_catalogo,desp_es_dependencia,desp_es_obs,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,luego.es_codigo ,luego.es_documento ,luego.es_dep_llave_entrada 
    ,luego.es_dep_llave_salida ,luego.es_forma ,luego.es_fecha ,luego.es_galones 
    ,luego.es_cargo ,luego.es_tipo ,luego.es_saldo ,luego.es_precio ,
    luego.es_lugar ,luego.es_situacion ,luego.es_catalogo ,luego.es_dependencia 
    ,luego.es_obs ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_com_ent_sal2 delete on "informix"
    .com_ent_sal2 referencing old as antes
    for each row
        (
        insert into "informix".aud_com_ent_sal2 (es_codigo,es_documento,
    es_dep_llave_entrada,es_dep_llave_salida,es_forma,es_fecha,es_galones,
    es_cargo,es_tipo,es_saldo,es_precio,es_lugar,es_situacion,es_catalogo,
    es_dependencia,es_obs,desp_es_codigo,desp_es_documento,desp_es_dep_llave_entrada,
    desp_es_dep_llave_salida,desp_es_forma,desp_es_fecha,desp_es_galones,
    desp_es_cargo,desp_es_tipo,desp_es_saldo,desp_es_precio,desp_es_lugar,
    desp_es_situacion,desp_es_catalogo,desp_es_dependencia,desp_es_obs,
    accion,usuario,hora)  values (antes.es_codigo ,antes.es_documento 
    ,antes.es_dep_llave_entrada ,antes.es_dep_llave_salida ,antes.es_forma 
    ,antes.es_fecha ,antes.es_galones ,antes.es_cargo ,antes.es_tipo 
    ,antes.es_saldo ,antes.es_precio ,antes.es_lugar ,antes.es_situacion 
    ,antes.es_catalogo ,antes.es_dependencia ,antes.es_obs ,NULL ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_com_ent_sal2 update on "informix"
    .com_ent_sal2 referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_com_ent_sal2 (es_codigo,es_documento,
    es_dep_llave_entrada,es_dep_llave_salida,es_forma,es_fecha,es_galones,
    es_cargo,es_tipo,es_saldo,es_precio,es_lugar,es_situacion,es_catalogo,
    es_dependencia,es_obs,desp_es_codigo,desp_es_documento,desp_es_dep_llave_entrada,
    desp_es_dep_llave_salida,desp_es_forma,desp_es_fecha,desp_es_galones,
    desp_es_cargo,desp_es_tipo,desp_es_saldo,desp_es_precio,desp_es_lugar,
    desp_es_situacion,desp_es_catalogo,desp_es_dependencia,desp_es_obs,
    accion,usuario,hora)  values (antes.es_codigo ,antes.es_documento 
    ,antes.es_dep_llave_entrada ,antes.es_dep_llave_salida ,antes.es_forma 
    ,antes.es_fecha ,antes.es_galones ,antes.es_cargo ,antes.es_tipo 
    ,antes.es_saldo ,antes.es_precio ,antes.es_lugar ,antes.es_situacion 
    ,antes.es_catalogo ,antes.es_dependencia ,antes.es_obs ,luego.es_codigo 
    ,luego.es_documento ,luego.es_dep_llave_entrada ,luego.es_dep_llave_salida 
    ,luego.es_forma ,luego.es_fecha ,luego.es_galones ,luego.es_cargo 
    ,luego.es_tipo ,luego.es_saldo ,luego.es_precio ,luego.es_lugar ,
    luego.es_situacion ,luego.es_catalogo ,luego.es_dependencia ,luego.es_obs 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_area_mision insert on "informix"
    .coc_area_mision referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_area_mision (are_codigo,
    are_descripcion,are_responsabilidad,are_tipo_seg,are_situacion,desp_are_codigo,
    desp_are_descripcion,desp_are_responsabilidad,desp_are_tipo_seg,desp_are_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.are_codigo 
    ,luego.are_descripcion ,luego.are_responsabilidad ,luego.are_tipo_seg 
    ,luego.are_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_area_mision delete on "informix"
    .coc_area_mision referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_area_mision (are_codigo,
    are_descripcion,are_responsabilidad,are_tipo_seg,are_situacion,desp_are_codigo,
    desp_are_descripcion,desp_are_responsabilidad,desp_are_tipo_seg,desp_are_situacion,
    accion,usuario,hora)  values (antes.are_codigo ,antes.are_descripcion 
    ,antes.are_responsabilidad ,antes.are_tipo_seg ,antes.are_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_area_mision update on "informix"
    .coc_area_mision referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_area_mision (are_codigo,
    are_descripcion,are_responsabilidad,are_tipo_seg,are_situacion,desp_are_codigo,
    desp_are_descripcion,desp_are_responsabilidad,desp_are_tipo_seg,desp_are_situacion,
    accion,usuario,hora)  values (antes.are_codigo ,antes.are_descripcion 
    ,antes.are_responsabilidad ,antes.are_tipo_seg ,antes.are_situacion 
    ,luego.are_codigo ,luego.are_descripcion ,luego.are_responsabilidad 
    ,luego.are_tipo_seg ,luego.are_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_coc_metodo_ejec insert on "informix"
    .coc_metodo_ejec referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_metodo_ejec (met_ejec_codigo,
    met_ejec_descripcion,met_ejec_situacion,desp_met_ejec_codigo,desp_met_ejec_descripcion,
    desp_met_ejec_situacion,accion,usuario,hora)  values (NULL ,'' ,'' 
    ,luego.met_ejec_codigo ,luego.met_ejec_descripcion ,luego.met_ejec_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_metodo_ejec delete on "informix"
    .coc_metodo_ejec referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_metodo_ejec (met_ejec_codigo,
    met_ejec_descripcion,met_ejec_situacion,desp_met_ejec_codigo,desp_met_ejec_descripcion,
    desp_met_ejec_situacion,accion,usuario,hora)  values (antes.met_ejec_codigo 
    ,antes.met_ejec_descripcion ,antes.met_ejec_situacion ,NULL ,'' ,''
     ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_metodo_ejec update on "informix"
    .coc_metodo_ejec referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_metodo_ejec (met_ejec_codigo,
    met_ejec_descripcion,met_ejec_situacion,desp_met_ejec_codigo,desp_met_ejec_descripcion,
    desp_met_ejec_situacion,accion,usuario,hora)  values (antes.met_ejec_codigo 
    ,antes.met_ejec_descripcion ,antes.met_ejec_situacion ,luego.met_ejec_codigo 
    ,luego.met_ejec_descripcion ,luego.met_ejec_situacion ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_metas insert on "informix".coc_metas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_metas (met_codigo,met_anio,
    met_dep,met_mes,met_cantidad,met_situacion,desp_met_codigo,desp_met_anio,
    desp_met_dep,desp_met_mes,desp_met_cantidad,desp_met_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.met_codigo ,luego.met_anio 
    ,luego.met_dep ,luego.met_mes ,luego.met_cantidad ,luego.met_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_metas delete on "informix".coc_metas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_metas (met_codigo,met_anio,
    met_dep,met_mes,met_cantidad,met_situacion,desp_met_codigo,desp_met_anio,
    desp_met_dep,desp_met_mes,desp_met_cantidad,desp_met_situacion,accion,
    usuario,hora)  values (antes.met_codigo ,antes.met_anio ,antes.met_dep 
    ,antes.met_mes ,antes.met_cantidad ,antes.met_situacion ,NULL ,'' 
    ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_metas update on "informix".coc_metas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_metas (met_codigo,met_anio,
    met_dep,met_mes,met_cantidad,met_situacion,desp_met_codigo,desp_met_anio,
    desp_met_dep,desp_met_mes,desp_met_cantidad,desp_met_situacion,accion,
    usuario,hora)  values (antes.met_codigo ,antes.met_anio ,antes.met_dep 
    ,antes.met_mes ,antes.met_cantidad ,antes.met_situacion ,luego.met_codigo 
    ,luego.met_anio ,luego.met_dep ,luego.met_mes ,luego.met_cantidad 
    ,luego.met_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_coordenadas2 insert on "informix"
    .coc_coordenadas2 referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_coordenadas2 (coo_reporte,
    coo_anio,coo_dep,coo_id,coo_lat_gra,coo_lat_min,coo_lat_seg,coo_long_gra,
    coo_long_min,coo_long_seg,coo_decimal_lat,coo_decimal_long,coo_utm_x,
    coo_utm_y,coo_lugar,desp_coo_reporte,desp_coo_anio,desp_coo_dep,desp_coo_id,
    desp_coo_lat_gra,desp_coo_lat_min,desp_coo_lat_seg,desp_coo_long_gra,
    desp_coo_long_min,desp_coo_long_seg,desp_coo_decimal_lat,desp_coo_decimal_long,
    desp_coo_utm_x,desp_coo_utm_y,desp_coo_lugar,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.coo_reporte 
    ,luego.coo_anio ,luego.coo_dep ,luego.coo_id ,luego.coo_lat_gra ,
    luego.coo_lat_min ,luego.coo_lat_seg ,luego.coo_long_gra ,luego.coo_long_min 
    ,luego.coo_long_seg ,luego.coo_decimal_lat ,luego.coo_decimal_long 
    ,luego.coo_utm_x ,luego.coo_utm_y ,luego.coo_lugar ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_coc_coordenadas2 delete on "informix"
    .coc_coordenadas2 referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_coordenadas2 (coo_reporte,
    coo_anio,coo_dep,coo_id,coo_lat_gra,coo_lat_min,coo_lat_seg,coo_long_gra,
    coo_long_min,coo_long_seg,coo_decimal_lat,coo_decimal_long,coo_utm_x,
    coo_utm_y,coo_lugar,desp_coo_reporte,desp_coo_anio,desp_coo_dep,desp_coo_id,
    desp_coo_lat_gra,desp_coo_lat_min,desp_coo_lat_seg,desp_coo_long_gra,
    desp_coo_long_min,desp_coo_long_seg,desp_coo_decimal_lat,desp_coo_decimal_long,
    desp_coo_utm_x,desp_coo_utm_y,desp_coo_lugar,accion,usuario,hora) 
     values (antes.coo_reporte ,antes.coo_anio ,antes.coo_dep ,antes.coo_id 
    ,antes.coo_lat_gra ,antes.coo_lat_min ,antes.coo_lat_seg ,antes.coo_long_gra 
    ,antes.coo_long_min ,antes.coo_long_seg ,antes.coo_decimal_lat ,antes.coo_decimal_long 
    ,antes.coo_utm_x ,antes.coo_utm_y ,antes.coo_lugar ,NULL ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_coc_coordenadas2 update on "informix"
    .coc_coordenadas2 referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_coordenadas2 (coo_reporte,
    coo_anio,coo_dep,coo_id,coo_lat_gra,coo_lat_min,coo_lat_seg,coo_long_gra,
    coo_long_min,coo_long_seg,coo_decimal_lat,coo_decimal_long,coo_utm_x,
    coo_utm_y,coo_lugar,desp_coo_reporte,desp_coo_anio,desp_coo_dep,desp_coo_id,
    desp_coo_lat_gra,desp_coo_lat_min,desp_coo_lat_seg,desp_coo_long_gra,
    desp_coo_long_min,desp_coo_long_seg,desp_coo_decimal_lat,desp_coo_decimal_long,
    desp_coo_utm_x,desp_coo_utm_y,desp_coo_lugar,accion,usuario,hora) 
     values (antes.coo_reporte ,antes.coo_anio ,antes.coo_dep ,antes.coo_id 
    ,antes.coo_lat_gra ,antes.coo_lat_min ,antes.coo_lat_seg ,antes.coo_long_gra 
    ,antes.coo_long_min ,antes.coo_long_seg ,antes.coo_decimal_lat ,antes.coo_decimal_long 
    ,antes.coo_utm_x ,antes.coo_utm_y ,antes.coo_lugar ,luego.coo_reporte 
    ,luego.coo_anio ,luego.coo_dep ,luego.coo_id ,luego.coo_lat_gra ,
    luego.coo_lat_min ,luego.coo_lat_seg ,luego.coo_long_gra ,luego.coo_long_min 
    ,luego.coo_long_seg ,luego.coo_decimal_lat ,luego.coo_decimal_long 
    ,luego.coo_utm_x ,luego.coo_utm_y ,luego.coo_lugar ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_coc_vehiculo_rep2 insert on "informix"
    .coc_vehiculo_rep2 referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_vehiculo_rep2 (veh_id,
    veh_reporte,veh_anio,veh_dep,veh_tipo,veh_propiedad,veh_cantidad,
    desp_veh_id,desp_veh_reporte,desp_veh_anio,desp_veh_dep,desp_veh_tipo,
    desp_veh_propiedad,desp_veh_cantidad,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,luego.veh_id ,luego.veh_reporte ,luego.veh_anio 
    ,luego.veh_dep ,luego.veh_tipo ,luego.veh_propiedad ,luego.veh_cantidad 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_vehiculo_rep2 delete on "informix"
    .coc_vehiculo_rep2 referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_vehiculo_rep2 (veh_id,
    veh_reporte,veh_anio,veh_dep,veh_tipo,veh_propiedad,veh_cantidad,
    desp_veh_id,desp_veh_reporte,desp_veh_anio,desp_veh_dep,desp_veh_tipo,
    desp_veh_propiedad,desp_veh_cantidad,accion,usuario,hora)  values 
    (antes.veh_id ,antes.veh_reporte ,antes.veh_anio ,antes.veh_dep ,
    antes.veh_tipo ,antes.veh_propiedad ,antes.veh_cantidad ,NULL ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_vehiculo_rep2 update on "informix"
    .coc_vehiculo_rep2 referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_vehiculo_rep2 (veh_id,
    veh_reporte,veh_anio,veh_dep,veh_tipo,veh_propiedad,veh_cantidad,
    desp_veh_id,desp_veh_reporte,desp_veh_anio,desp_veh_dep,desp_veh_tipo,
    desp_veh_propiedad,desp_veh_cantidad,accion,usuario,hora)  values 
    (antes.veh_id ,antes.veh_reporte ,antes.veh_anio ,antes.veh_dep ,
    antes.veh_tipo ,antes.veh_propiedad ,antes.veh_cantidad ,luego.veh_id 
    ,luego.veh_reporte ,luego.veh_anio ,luego.veh_dep ,luego.veh_tipo 
    ,luego.veh_propiedad ,luego.veh_cantidad ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_ipm_dfam_temp insert on "informix"
    .ipm_dfam_temp referencing new as luego
    for each row
        (
        insert into "informix".aud_ipm_dfam_temp (fam_cat_militar,
    fam_cat_familiar,fam_nom1,fam_nom2,fam_ape1,fam_ape2,fam_parentesco,
    fam_sexo,fam_sangre,fam_est_civil,fam_fec_nac,fam_nac_lugar,fam_ced_ord,
    fam_ced_reg,fam_fec_ext_ced,fam_lugar_ext_ced,fam_direccion,fam_zona,
    fam_dir_lugar,fam_telefono,fam_ocupacion,fam_empresa,fam_cheque,fam_beneficiario,
    fam_emergencia,fam_clase_pasiva,desp_fam_cat_militar,desp_fam_cat_familiar,
    desp_fam_nom1,desp_fam_nom2,desp_fam_ape1,desp_fam_ape2,desp_fam_parentesco,
    desp_fam_sexo,desp_fam_sangre,desp_fam_est_civil,desp_fam_fec_nac,
    desp_fam_nac_lugar,desp_fam_ced_ord,desp_fam_ced_reg,desp_fam_fec_ext_ced,
    desp_fam_lugar_ext_ced,desp_fam_direccion,desp_fam_zona,desp_fam_dir_lugar,
    desp_fam_telefono,desp_fam_ocupacion,desp_fam_empresa,desp_fam_cheque,
    desp_fam_beneficiario,desp_fam_emergencia,desp_fam_clase_pasiva,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.fam_cat_militar ,luego.fam_cat_familiar 
    ,luego.fam_nom1 ,luego.fam_nom2 ,luego.fam_ape1 ,luego.fam_ape2 ,
    luego.fam_parentesco ,luego.fam_sexo ,luego.fam_sangre ,luego.fam_est_civil 
    ,luego.fam_fec_nac ,luego.fam_nac_lugar ,luego.fam_ced_ord ,luego.fam_ced_reg 
    ,luego.fam_fec_ext_ced ,luego.fam_lugar_ext_ced ,luego.fam_direccion 
    ,luego.fam_zona ,luego.fam_dir_lugar ,luego.fam_telefono ,luego.fam_ocupacion 
    ,luego.fam_empresa ,luego.fam_cheque ,luego.fam_beneficiario ,luego.fam_emergencia 
    ,luego.fam_clase_pasiva ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_ipm_dfam_temp delete on "informix"
    .ipm_dfam_temp referencing old as antes
    for each row
        (
        insert into "informix".aud_ipm_dfam_temp (fam_cat_militar,
    fam_cat_familiar,fam_nom1,fam_nom2,fam_ape1,fam_ape2,fam_parentesco,
    fam_sexo,fam_sangre,fam_est_civil,fam_fec_nac,fam_nac_lugar,fam_ced_ord,
    fam_ced_reg,fam_fec_ext_ced,fam_lugar_ext_ced,fam_direccion,fam_zona,
    fam_dir_lugar,fam_telefono,fam_ocupacion,fam_empresa,fam_cheque,fam_beneficiario,
    fam_emergencia,fam_clase_pasiva,desp_fam_cat_militar,desp_fam_cat_familiar,
    desp_fam_nom1,desp_fam_nom2,desp_fam_ape1,desp_fam_ape2,desp_fam_parentesco,
    desp_fam_sexo,desp_fam_sangre,desp_fam_est_civil,desp_fam_fec_nac,
    desp_fam_nac_lugar,desp_fam_ced_ord,desp_fam_ced_reg,desp_fam_fec_ext_ced,
    desp_fam_lugar_ext_ced,desp_fam_direccion,desp_fam_zona,desp_fam_dir_lugar,
    desp_fam_telefono,desp_fam_ocupacion,desp_fam_empresa,desp_fam_cheque,
    desp_fam_beneficiario,desp_fam_emergencia,desp_fam_clase_pasiva,accion,
    usuario,hora)  values (antes.fam_cat_militar ,antes.fam_cat_familiar 
    ,antes.fam_nom1 ,antes.fam_nom2 ,antes.fam_ape1 ,antes.fam_ape2 ,
    antes.fam_parentesco ,antes.fam_sexo ,antes.fam_sangre ,antes.fam_est_civil 
    ,antes.fam_fec_nac ,antes.fam_nac_lugar ,antes.fam_ced_ord ,antes.fam_ced_reg 
    ,antes.fam_fec_ext_ced ,antes.fam_lugar_ext_ced ,antes.fam_direccion 
    ,antes.fam_zona ,antes.fam_dir_lugar ,antes.fam_telefono ,antes.fam_ocupacion 
    ,antes.fam_empresa ,antes.fam_cheque ,antes.fam_beneficiario ,antes.fam_emergencia 
    ,antes.fam_clase_pasiva ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_ipm_dfam_temp update on "informix"
    .ipm_dfam_temp referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ipm_dfam_temp (fam_cat_militar,
    fam_cat_familiar,fam_nom1,fam_nom2,fam_ape1,fam_ape2,fam_parentesco,
    fam_sexo,fam_sangre,fam_est_civil,fam_fec_nac,fam_nac_lugar,fam_ced_ord,
    fam_ced_reg,fam_fec_ext_ced,fam_lugar_ext_ced,fam_direccion,fam_zona,
    fam_dir_lugar,fam_telefono,fam_ocupacion,fam_empresa,fam_cheque,fam_beneficiario,
    fam_emergencia,fam_clase_pasiva,desp_fam_cat_militar,desp_fam_cat_familiar,
    desp_fam_nom1,desp_fam_nom2,desp_fam_ape1,desp_fam_ape2,desp_fam_parentesco,
    desp_fam_sexo,desp_fam_sangre,desp_fam_est_civil,desp_fam_fec_nac,
    desp_fam_nac_lugar,desp_fam_ced_ord,desp_fam_ced_reg,desp_fam_fec_ext_ced,
    desp_fam_lugar_ext_ced,desp_fam_direccion,desp_fam_zona,desp_fam_dir_lugar,
    desp_fam_telefono,desp_fam_ocupacion,desp_fam_empresa,desp_fam_cheque,
    desp_fam_beneficiario,desp_fam_emergencia,desp_fam_clase_pasiva,accion,
    usuario,hora)  values (antes.fam_cat_militar ,antes.fam_cat_familiar 
    ,antes.fam_nom1 ,antes.fam_nom2 ,antes.fam_ape1 ,antes.fam_ape2 ,
    antes.fam_parentesco ,antes.fam_sexo ,antes.fam_sangre ,antes.fam_est_civil 
    ,antes.fam_fec_nac ,antes.fam_nac_lugar ,antes.fam_ced_ord ,antes.fam_ced_reg 
    ,antes.fam_fec_ext_ced ,antes.fam_lugar_ext_ced ,antes.fam_direccion 
    ,antes.fam_zona ,antes.fam_dir_lugar ,antes.fam_telefono ,antes.fam_ocupacion 
    ,antes.fam_empresa ,antes.fam_cheque ,antes.fam_beneficiario ,antes.fam_emergencia 
    ,antes.fam_clase_pasiva ,luego.fam_cat_militar ,luego.fam_cat_familiar 
    ,luego.fam_nom1 ,luego.fam_nom2 ,luego.fam_ape1 ,luego.fam_ape2 ,
    luego.fam_parentesco ,luego.fam_sexo ,luego.fam_sangre ,luego.fam_est_civil 
    ,luego.fam_fec_nac ,luego.fam_nac_lugar ,luego.fam_ced_ord ,luego.fam_ced_reg 
    ,luego.fam_fec_ext_ced ,luego.fam_lugar_ext_ced ,luego.fam_direccion 
    ,luego.fam_zona ,luego.fam_dir_lugar ,luego.fam_telefono ,luego.fam_ocupacion 
    ,luego.fam_empresa ,luego.fam_cheque ,luego.fam_beneficiario ,luego.fam_emergencia 
    ,luego.fam_clase_pasiva ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_coc_mensaje insert on "informix"
    .coc_mensaje referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_mensaje (men_codigo,men_ope_pla_cod,
    men_dependencia,men_fecha,men_lugar,men_numero_men,men_contenido,
    men_cat_comte,men_comte_empleo,men_cat_resp,men_resp_empleo,men_situacion,
    men_observacion,desp_men_codigo,desp_men_ope_pla_cod,desp_men_dependencia,
    desp_men_fecha,desp_men_lugar,desp_men_numero_men,desp_men_contenido,
    desp_men_cat_comte,desp_men_comte_empleo,desp_men_cat_resp,desp_men_resp_empleo,
    desp_men_situacion,desp_men_observacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.men_codigo ,luego.men_ope_pla_cod 
    ,luego.men_dependencia ,luego.men_fecha ,luego.men_lugar ,luego.men_numero_men 
    ,luego.men_contenido ,luego.men_cat_comte ,luego.men_comte_empleo 
    ,luego.men_cat_resp ,luego.men_resp_empleo ,luego.men_situacion ,
    luego.men_observacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_mensaje delete on "informix"
    .coc_mensaje referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_mensaje (men_codigo,men_ope_pla_cod,
    men_dependencia,men_fecha,men_lugar,men_numero_men,men_contenido,
    men_cat_comte,men_comte_empleo,men_cat_resp,men_resp_empleo,men_situacion,
    men_observacion,desp_men_codigo,desp_men_ope_pla_cod,desp_men_dependencia,
    desp_men_fecha,desp_men_lugar,desp_men_numero_men,desp_men_contenido,
    desp_men_cat_comte,desp_men_comte_empleo,desp_men_cat_resp,desp_men_resp_empleo,
    desp_men_situacion,desp_men_observacion,accion,usuario,hora)  values 
    (antes.men_codigo ,antes.men_ope_pla_cod ,antes.men_dependencia ,
    antes.men_fecha ,antes.men_lugar ,antes.men_numero_men ,antes.men_contenido 
    ,antes.men_cat_comte ,antes.men_comte_empleo ,antes.men_cat_resp 
    ,antes.men_resp_empleo ,antes.men_situacion ,antes.men_observacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_coc_mensaje update on "informix"
    .coc_mensaje referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_mensaje (men_codigo,men_ope_pla_cod,
    men_dependencia,men_fecha,men_lugar,men_numero_men,men_contenido,
    men_cat_comte,men_comte_empleo,men_cat_resp,men_resp_empleo,men_situacion,
    men_observacion,desp_men_codigo,desp_men_ope_pla_cod,desp_men_dependencia,
    desp_men_fecha,desp_men_lugar,desp_men_numero_men,desp_men_contenido,
    desp_men_cat_comte,desp_men_comte_empleo,desp_men_cat_resp,desp_men_resp_empleo,
    desp_men_situacion,desp_men_observacion,accion,usuario,hora)  values 
    (antes.men_codigo ,antes.men_ope_pla_cod ,antes.men_dependencia ,
    antes.men_fecha ,antes.men_lugar ,antes.men_numero_men ,antes.men_contenido 
    ,antes.men_cat_comte ,antes.men_comte_empleo ,antes.men_cat_resp 
    ,antes.men_resp_empleo ,antes.men_situacion ,antes.men_observacion 
    ,luego.men_codigo ,luego.men_ope_pla_cod ,luego.men_dependencia ,
    luego.men_fecha ,luego.men_lugar ,luego.men_numero_men ,luego.men_contenido 
    ,luego.men_cat_comte ,luego.men_comte_empleo ,luego.men_cat_resp 
    ,luego.men_resp_empleo ,luego.men_situacion ,luego.men_observacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_opaf_notas1 insert on "informix"
    .opaf_notas1 referencing new as luego
    for each row
        (
        insert into "informix".aud_opaf_notas1 (not_catalogo,
    not_fecha,not_dominadas,not_punteo_dom,not_abdominales,not_punteo_abd,
    not_carrera,not_punteo_car,not_promedio,not_obs,not_tipo,not_revisado,
    not_dependencia,not_peso,not_estatura,not_imc,not_perfil,not_fec_certi,
    not_grado,not_usuario,not_acta,not_extemporaneo,not_evento,desp_not_catalogo,
    desp_not_fecha,desp_not_dominadas,desp_not_punteo_dom,desp_not_abdominales,
    desp_not_punteo_abd,desp_not_carrera,desp_not_punteo_car,desp_not_promedio,
    desp_not_obs,desp_not_tipo,desp_not_revisado,desp_not_dependencia,
    desp_not_peso,desp_not_estatura,desp_not_imc,desp_not_perfil,desp_not_fec_certi,
    desp_not_grado,desp_not_usuario,desp_not_acta,desp_not_extemporaneo,
    desp_not_evento,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.not_catalogo 
    ,luego.not_fecha ,luego.not_dominadas ,luego.not_punteo_dom ,luego.not_abdominales 
    ,luego.not_punteo_abd ,luego.not_carrera ,luego.not_punteo_car ,luego.not_promedio 
    ,luego.not_obs ,luego.not_tipo ,luego.not_revisado ,luego.not_dependencia 
    ,luego.not_peso ,luego.not_estatura ,luego.not_imc ,luego.not_perfil 
    ,luego.not_fec_certi ,luego.not_grado ,luego.not_usuario ,luego.not_acta 
    ,luego.not_extemporaneo ,luego.not_evento ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_opaf_notas1 delete on "informix"
    .opaf_notas1 referencing old as antes
    for each row
        (
        insert into "informix".aud_opaf_notas1 (not_catalogo,
    not_fecha,not_dominadas,not_punteo_dom,not_abdominales,not_punteo_abd,
    not_carrera,not_punteo_car,not_promedio,not_obs,not_tipo,not_revisado,
    not_dependencia,not_peso,not_estatura,not_imc,not_perfil,not_fec_certi,
    not_grado,not_usuario,not_acta,not_extemporaneo,not_evento,desp_not_catalogo,
    desp_not_fecha,desp_not_dominadas,desp_not_punteo_dom,desp_not_abdominales,
    desp_not_punteo_abd,desp_not_carrera,desp_not_punteo_car,desp_not_promedio,
    desp_not_obs,desp_not_tipo,desp_not_revisado,desp_not_dependencia,
    desp_not_peso,desp_not_estatura,desp_not_imc,desp_not_perfil,desp_not_fec_certi,
    desp_not_grado,desp_not_usuario,desp_not_acta,desp_not_extemporaneo,
    desp_not_evento,accion,usuario,hora)  values (antes.not_catalogo 
    ,antes.not_fecha ,antes.not_dominadas ,antes.not_punteo_dom ,antes.not_abdominales 
    ,antes.not_punteo_abd ,antes.not_carrera ,antes.not_punteo_car ,antes.not_promedio 
    ,antes.not_obs ,antes.not_tipo ,antes.not_revisado ,antes.not_dependencia 
    ,antes.not_peso ,antes.not_estatura ,antes.not_imc ,antes.not_perfil 
    ,antes.not_fec_certi ,antes.not_grado ,antes.not_usuario ,antes.not_acta 
    ,antes.not_extemporaneo ,antes.not_evento ,NULL ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_opaf_notas1 update on "informix"
    .opaf_notas1 referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_opaf_notas1 (not_catalogo,
    not_fecha,not_dominadas,not_punteo_dom,not_abdominales,not_punteo_abd,
    not_carrera,not_punteo_car,not_promedio,not_obs,not_tipo,not_revisado,
    not_dependencia,not_peso,not_estatura,not_imc,not_perfil,not_fec_certi,
    not_grado,not_usuario,not_acta,not_extemporaneo,not_evento,desp_not_catalogo,
    desp_not_fecha,desp_not_dominadas,desp_not_punteo_dom,desp_not_abdominales,
    desp_not_punteo_abd,desp_not_carrera,desp_not_punteo_car,desp_not_promedio,
    desp_not_obs,desp_not_tipo,desp_not_revisado,desp_not_dependencia,
    desp_not_peso,desp_not_estatura,desp_not_imc,desp_not_perfil,desp_not_fec_certi,
    desp_not_grado,desp_not_usuario,desp_not_acta,desp_not_extemporaneo,
    desp_not_evento,accion,usuario,hora)  values (antes.not_catalogo 
    ,antes.not_fecha ,antes.not_dominadas ,antes.not_punteo_dom ,antes.not_abdominales 
    ,antes.not_punteo_abd ,antes.not_carrera ,antes.not_punteo_car ,antes.not_promedio 
    ,antes.not_obs ,antes.not_tipo ,antes.not_revisado ,antes.not_dependencia 
    ,antes.not_peso ,antes.not_estatura ,antes.not_imc ,antes.not_perfil 
    ,antes.not_fec_certi ,antes.not_grado ,antes.not_usuario ,antes.not_acta 
    ,antes.not_extemporaneo ,antes.not_evento ,luego.not_catalogo ,luego.not_fecha 
    ,luego.not_dominadas ,luego.not_punteo_dom ,luego.not_abdominales 
    ,luego.not_punteo_abd ,luego.not_carrera ,luego.not_punteo_car ,luego.not_promedio 
    ,luego.not_obs ,luego.not_tipo ,luego.not_revisado ,luego.not_dependencia 
    ,luego.not_peso ,luego.not_estatura ,luego.not_imc ,luego.not_perfil 
    ,luego.not_fec_certi ,luego.not_grado ,luego.not_usuario ,luego.not_acta 
    ,luego.not_extemporaneo ,luego.not_evento ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_coc_control insert on "informix"
    .coc_control referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_control (con_codigo,con_catalogo,
    con_grado,con_arma,con_nombre,con_dependencia,con_hora_ingreso,desp_con_codigo,
    desp_con_catalogo,desp_con_grado,desp_con_arma,desp_con_nombre,desp_con_dependencia,
    desp_con_hora_ingreso,accion,usuario,hora)  values (NULL ,'' ,'' ,''
     ,'' ,'' ,'' ,luego.con_codigo ,luego.con_catalogo ,luego.con_grado 
    ,luego.con_arma ,luego.con_nombre ,luego.con_dependencia ,luego.con_hora_ingreso 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_control delete on "informix"
    .coc_control referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_control (con_codigo,con_catalogo,
    con_grado,con_arma,con_nombre,con_dependencia,con_hora_ingreso,desp_con_codigo,
    desp_con_catalogo,desp_con_grado,desp_con_arma,desp_con_nombre,desp_con_dependencia,
    desp_con_hora_ingreso,accion,usuario,hora)  values (antes.con_codigo 
    ,antes.con_catalogo ,antes.con_grado ,antes.con_arma ,antes.con_nombre 
    ,antes.con_dependencia ,antes.con_hora_ingreso ,NULL ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_control update on "informix"
    .coc_control referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_control (con_codigo,con_catalogo,
    con_grado,con_arma,con_nombre,con_dependencia,con_hora_ingreso,desp_con_codigo,
    desp_con_catalogo,desp_con_grado,desp_con_arma,desp_con_nombre,desp_con_dependencia,
    desp_con_hora_ingreso,accion,usuario,hora)  values (antes.con_codigo 
    ,antes.con_catalogo ,antes.con_grado ,antes.con_arma ,antes.con_nombre 
    ,antes.con_dependencia ,antes.con_hora_ingreso ,luego.con_codigo 
    ,luego.con_catalogo ,luego.con_grado ,luego.con_arma ,luego.con_nombre 
    ,luego.con_dependencia ,luego.con_hora_ingreso ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_opaf_evento_per insert on "informix"
    .opaf_evento_per referencing new as luego
    for each row
        (
        insert into "informix".aud_opaf_evento_per (eve_codigo,
    eve_catalogo,eve_evento,eve_acta,eve_situacion,eve_observacion,desp_eve_codigo,
    desp_eve_catalogo,desp_eve_evento,desp_eve_acta,desp_eve_situacion,
    desp_eve_observacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' 
    ,'' ,'' ,luego.eve_codigo ,luego.eve_catalogo ,luego.eve_evento ,luego.eve_acta 
    ,luego.eve_situacion ,luego.eve_observacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_opaf_evento_per delete on "informix"
    .opaf_evento_per referencing old as antes
    for each row
        (
        insert into "informix".aud_opaf_evento_per (eve_codigo,
    eve_catalogo,eve_evento,eve_acta,eve_situacion,eve_observacion,desp_eve_codigo,
    desp_eve_catalogo,desp_eve_evento,desp_eve_acta,desp_eve_situacion,
    desp_eve_observacion,accion,usuario,hora)  values (antes.eve_codigo 
    ,antes.eve_catalogo ,antes.eve_evento ,antes.eve_acta ,antes.eve_situacion 
    ,antes.eve_observacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_opaf_evento_per update on "informix"
    .opaf_evento_per referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_opaf_evento_per (eve_codigo,
    eve_catalogo,eve_evento,eve_acta,eve_situacion,eve_observacion,desp_eve_codigo,
    desp_eve_catalogo,desp_eve_evento,desp_eve_acta,desp_eve_situacion,
    desp_eve_observacion,accion,usuario,hora)  values (antes.eve_codigo 
    ,antes.eve_catalogo ,antes.eve_evento ,antes.eve_acta ,antes.eve_situacion 
    ,antes.eve_observacion ,luego.eve_codigo ,luego.eve_catalogo ,luego.eve_evento 
    ,luego.eve_acta ,luego.eve_situacion ,luego.eve_observacion ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cumple_jefes insert on "informix"
    .cumple_jefes referencing new as luego
    for each row
        (
        insert into "informix".aud_cumple_jefes (cum_id,cum_dependencia,
    cum_desc_empleo,cum_jerarquia,cum_plaza,cum_situacion,desp_cum_id,
    desp_cum_dependencia,desp_cum_desc_empleo,desp_cum_jerarquia,desp_cum_plaza,
    desp_cum_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,luego.cum_id ,luego.cum_dependencia ,luego.cum_desc_empleo ,
    luego.cum_jerarquia ,luego.cum_plaza ,luego.cum_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_cumple_jefes delete on "informix"
    .cumple_jefes referencing old as antes
    for each row
        (
        insert into "informix".aud_cumple_jefes (cum_id,cum_dependencia,
    cum_desc_empleo,cum_jerarquia,cum_plaza,cum_situacion,desp_cum_id,
    desp_cum_dependencia,desp_cum_desc_empleo,desp_cum_jerarquia,desp_cum_plaza,
    desp_cum_situacion,accion,usuario,hora)  values (antes.cum_id ,antes.cum_dependencia 
    ,antes.cum_desc_empleo ,antes.cum_jerarquia ,antes.cum_plaza ,antes.cum_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_cumple_jefes update on "informix"
    .cumple_jefes referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cumple_jefes (cum_id,cum_dependencia,
    cum_desc_empleo,cum_jerarquia,cum_plaza,cum_situacion,desp_cum_id,
    desp_cum_dependencia,desp_cum_desc_empleo,desp_cum_jerarquia,desp_cum_plaza,
    desp_cum_situacion,accion,usuario,hora)  values (antes.cum_id ,antes.cum_dependencia 
    ,antes.cum_desc_empleo ,antes.cum_jerarquia ,antes.cum_plaza ,antes.cum_situacion 
    ,luego.cum_id ,luego.cum_dependencia ,luego.cum_desc_empleo ,luego.cum_jerarquia 
    ,luego.cum_plaza ,luego.cum_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_coc_ope_planificada insert on "informix"
    .coc_ope_planificada referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_ope_planificada (ope_pla_codigo,
    ope_pla_planificar,ope_pla_area,ope_pla_operacion,ope_pla_proposito,
    ope_pla_met_ejec,ope_pla_uni_org,ope_pla_cat_responsable,ope_pla_fecha,
    ope_pla_tel_resp,ope_pla_inicia,ope_pla_termina,ope_pla_usuario,ope_pla_dependencia,
    ope_pla_situacion,ope_pla_observacion,desp_ope_pla_codigo,desp_ope_pla_planificar,
    desp_ope_pla_area,desp_ope_pla_operacion,desp_ope_pla_proposito,desp_ope_pla_met_ejec,
    desp_ope_pla_uni_org,desp_ope_pla_cat_responsable,desp_ope_pla_fecha,
    desp_ope_pla_tel_resp,desp_ope_pla_inicia,desp_ope_pla_termina,desp_ope_pla_usuario,
    desp_ope_pla_dependencia,desp_ope_pla_situacion,desp_ope_pla_observacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,luego.ope_pla_codigo ,luego.ope_pla_planificar ,luego.ope_pla_area 
    ,luego.ope_pla_operacion ,luego.ope_pla_proposito ,luego.ope_pla_met_ejec 
    ,luego.ope_pla_uni_org ,luego.ope_pla_cat_responsable ,luego.ope_pla_fecha 
    ,luego.ope_pla_tel_resp ,luego.ope_pla_inicia ,luego.ope_pla_termina 
    ,luego.ope_pla_usuario ,luego.ope_pla_dependencia ,luego.ope_pla_situacion 
    ,luego.ope_pla_observacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_coc_ope_planificada delete on "informix"
    .coc_ope_planificada referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_ope_planificada (ope_pla_codigo,
    ope_pla_planificar,ope_pla_area,ope_pla_operacion,ope_pla_proposito,
    ope_pla_met_ejec,ope_pla_uni_org,ope_pla_cat_responsable,ope_pla_fecha,
    ope_pla_tel_resp,ope_pla_inicia,ope_pla_termina,ope_pla_usuario,ope_pla_dependencia,
    ope_pla_situacion,ope_pla_observacion,desp_ope_pla_codigo,desp_ope_pla_planificar,
    desp_ope_pla_area,desp_ope_pla_operacion,desp_ope_pla_proposito,desp_ope_pla_met_ejec,
    desp_ope_pla_uni_org,desp_ope_pla_cat_responsable,desp_ope_pla_fecha,
    desp_ope_pla_tel_resp,desp_ope_pla_inicia,desp_ope_pla_termina,desp_ope_pla_usuario,
    desp_ope_pla_dependencia,desp_ope_pla_situacion,desp_ope_pla_observacion,
    accion,usuario,hora)  values (antes.ope_pla_codigo ,antes.ope_pla_planificar 
    ,antes.ope_pla_area ,antes.ope_pla_operacion ,antes.ope_pla_proposito 
    ,antes.ope_pla_met_ejec ,antes.ope_pla_uni_org ,antes.ope_pla_cat_responsable 
    ,antes.ope_pla_fecha ,antes.ope_pla_tel_resp ,antes.ope_pla_inicia 
    ,antes.ope_pla_termina ,antes.ope_pla_usuario ,antes.ope_pla_dependencia 
    ,antes.ope_pla_situacion ,antes.ope_pla_observacion ,NULL ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_coc_ope_planificada update on "informix"
    .coc_ope_planificada referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_coc_ope_planificada (ope_pla_codigo,
    ope_pla_planificar,ope_pla_area,ope_pla_operacion,ope_pla_proposito,
    ope_pla_met_ejec,ope_pla_uni_org,ope_pla_cat_responsable,ope_pla_fecha,
    ope_pla_tel_resp,ope_pla_inicia,ope_pla_termina,ope_pla_usuario,ope_pla_dependencia,
    ope_pla_situacion,ope_pla_observacion,desp_ope_pla_codigo,desp_ope_pla_planificar,
    desp_ope_pla_area,desp_ope_pla_operacion,desp_ope_pla_proposito,desp_ope_pla_met_ejec,
    desp_ope_pla_uni_org,desp_ope_pla_cat_responsable,desp_ope_pla_fecha,
    desp_ope_pla_tel_resp,desp_ope_pla_inicia,desp_ope_pla_termina,desp_ope_pla_usuario,
    desp_ope_pla_dependencia,desp_ope_pla_situacion,desp_ope_pla_observacion,
    accion,usuario,hora)  values (antes.ope_pla_codigo ,antes.ope_pla_planificar 
    ,antes.ope_pla_area ,antes.ope_pla_operacion ,antes.ope_pla_proposito 
    ,antes.ope_pla_met_ejec ,antes.ope_pla_uni_org ,antes.ope_pla_cat_responsable 
    ,antes.ope_pla_fecha ,antes.ope_pla_tel_resp ,antes.ope_pla_inicia 
    ,antes.ope_pla_termina ,antes.ope_pla_usuario ,antes.ope_pla_dependencia 
    ,antes.ope_pla_situacion ,antes.ope_pla_observacion ,luego.ope_pla_codigo 
    ,luego.ope_pla_planificar ,luego.ope_pla_area ,luego.ope_pla_operacion 
    ,luego.ope_pla_proposito ,luego.ope_pla_met_ejec ,luego.ope_pla_uni_org 
    ,luego.ope_pla_cat_responsable ,luego.ope_pla_fecha ,luego.ope_pla_tel_resp 
    ,luego.ope_pla_inicia ,luego.ope_pla_termina ,luego.ope_pla_usuario 
    ,luego.ope_pla_dependencia ,luego.ope_pla_situacion ,luego.ope_pla_observacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_sig_agregados insert on "informix"
    .sig_agregados referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_agregados (agr_id,agr_cat,
    agr_dep,agr_sit,desp_agr_id,desp_agr_cat,desp_agr_dep,desp_agr_sit,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.agr_id ,luego.agr_cat 
    ,luego.agr_dep ,luego.agr_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_sig_agregados update on "informix"
    .sig_agregados referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_agregados (agr_id,agr_cat,
    agr_dep,agr_sit,desp_agr_id,desp_agr_cat,desp_agr_dep,desp_agr_sit,
    accion,usuario,hora)  values (antes.agr_id ,antes.agr_cat ,antes.agr_dep 
    ,antes.agr_sit ,luego.agr_id ,luego.agr_cat ,luego.agr_dep ,luego.agr_sit 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sig_agregados delete on "informix"
    .sig_agregados referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_agregados (agr_id,agr_cat,
    agr_dep,agr_sit,desp_agr_id,desp_agr_cat,desp_agr_dep,desp_agr_sit,
    accion,usuario,hora)  values (antes.agr_id ,antes.agr_cat ,antes.agr_dep 
    ,antes.agr_sit ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_sig_destinos insert on "informix"
    .sig_destinos referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_destinos (dest_id,dest_desc,
    dest_dep,dest_sit,desp_dest_id,desp_dest_desc,desp_dest_dep,desp_dest_sit,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.dest_id ,luego.dest_desc 
    ,luego.dest_dep ,luego.dest_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_sig_destinos update on "informix"
    .sig_destinos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_destinos (dest_id,dest_desc,
    dest_dep,dest_sit,desp_dest_id,desp_dest_desc,desp_dest_dep,desp_dest_sit,
    accion,usuario,hora)  values (antes.dest_id ,antes.dest_desc ,antes.dest_dep 
    ,antes.dest_sit ,luego.dest_id ,luego.dest_desc ,luego.dest_dep ,
    luego.dest_sit ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sig_destinos delete on "informix"
    .sig_destinos referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_destinos (dest_id,dest_desc,
    dest_dep,dest_sit,desp_dest_id,desp_dest_desc,desp_dest_dep,desp_dest_sit,
    accion,usuario,hora)  values (antes.dest_id ,antes.dest_desc ,antes.dest_dep 
    ,antes.dest_sit ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_sig_unidades insert on "informix"
    .sig_unidades referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_unidades (uni_id,uni_desc,
    uni_dep,uni_sit,desp_uni_id,desp_uni_desc,desp_uni_dep,desp_uni_sit,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.uni_id ,luego.uni_desc 
    ,luego.uni_dep ,luego.uni_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_sig_unidades update on "informix"
    .sig_unidades referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_unidades (uni_id,uni_desc,
    uni_dep,uni_sit,desp_uni_id,desp_uni_desc,desp_uni_dep,desp_uni_sit,
    accion,usuario,hora)  values (antes.uni_id ,antes.uni_desc ,antes.uni_dep 
    ,antes.uni_sit ,luego.uni_id ,luego.uni_desc ,luego.uni_dep ,luego.uni_sit 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sig_unidades delete on "informix"
    .sig_unidades referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_unidades (uni_id,uni_desc,
    uni_dep,uni_sit,desp_uni_id,desp_uni_desc,desp_uni_dep,desp_uni_sit,
    accion,usuario,hora)  values (antes.uni_id ,antes.uni_desc ,antes.uni_dep 
    ,antes.uni_sit ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_sig_companias insert on "informix"
    .sig_companias referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_companias (com_id,com_desc,
    com_uni,com_sit,desp_com_id,desp_com_desc,desp_com_uni,desp_com_sit,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.com_id ,luego.com_desc 
    ,luego.com_uni ,luego.com_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_sig_companias update on "informix"
    .sig_companias referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_companias (com_id,com_desc,
    com_uni,com_sit,desp_com_id,desp_com_desc,desp_com_uni,desp_com_sit,
    accion,usuario,hora)  values (antes.com_id ,antes.com_desc ,antes.com_uni 
    ,antes.com_sit ,luego.com_id ,luego.com_desc ,luego.com_uni ,luego.com_sit 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sig_companias delete on "informix"
    .sig_companias referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_companias (com_id,com_desc,
    com_uni,com_sit,desp_com_id,desp_com_desc,desp_com_uni,desp_com_sit,
    accion,usuario,hora)  values (antes.com_id ,antes.com_desc ,antes.com_uni 
    ,antes.com_sit ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_sig_comisiones insert on "informix"
    .sig_comisiones referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_comisiones (com_id,com_desc,
    com_lugar,com_doc,com_fec_inicio,com_fec_fin,com_detalle,com_info,
    com_sit,com_ing,com_dep,desp_com_id,desp_com_desc,desp_com_lugar,
    desp_com_doc,desp_com_fec_inicio,desp_com_fec_fin,desp_com_detalle,
    desp_com_info,desp_com_sit,desp_com_ing,desp_com_dep,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.com_id ,
    luego.com_desc ,luego.com_lugar ,luego.com_doc ,luego.com_fec_inicio 
    ,luego.com_fec_fin ,luego.com_detalle ,luego.com_info ,luego.com_sit 
    ,luego.com_ing ,luego.com_dep ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_sig_comisiones update on "informix"
    .sig_comisiones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_comisiones (com_id,com_desc,
    com_lugar,com_doc,com_fec_inicio,com_fec_fin,com_detalle,com_info,
    com_sit,com_ing,com_dep,desp_com_id,desp_com_desc,desp_com_lugar,
    desp_com_doc,desp_com_fec_inicio,desp_com_fec_fin,desp_com_detalle,
    desp_com_info,desp_com_sit,desp_com_ing,desp_com_dep,accion,usuario,
    hora)  values (antes.com_id ,antes.com_desc ,antes.com_lugar ,antes.com_doc 
    ,antes.com_fec_inicio ,antes.com_fec_fin ,antes.com_detalle ,antes.com_info 
    ,antes.com_sit ,antes.com_ing ,antes.com_dep ,luego.com_id ,luego.com_desc 
    ,luego.com_lugar ,luego.com_doc ,luego.com_fec_inicio ,luego.com_fec_fin 
    ,luego.com_detalle ,luego.com_info ,luego.com_sit ,luego.com_ing 
    ,luego.com_dep ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sig_comisiones delete on "informix"
    .sig_comisiones referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_comisiones (com_id,com_desc,
    com_lugar,com_doc,com_fec_inicio,com_fec_fin,com_detalle,com_info,
    com_sit,com_ing,com_dep,desp_com_id,desp_com_desc,desp_com_lugar,
    desp_com_doc,desp_com_fec_inicio,desp_com_fec_fin,desp_com_detalle,
    desp_com_info,desp_com_sit,desp_com_ing,desp_com_dep,accion,usuario,
    hora)  values (antes.com_id ,antes.com_desc ,antes.com_lugar ,antes.com_doc 
    ,antes.com_fec_inicio ,antes.com_fec_fin ,antes.com_detalle ,antes.com_info 
    ,antes.com_sit ,antes.com_ing ,antes.com_dep ,NULL ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_sig_com_asig insert on "informix"
    .sig_com_asig referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_com_asig (asi_id,asi_com,
    asi_asig,asi_sit,desp_asi_id,desp_asi_com,desp_asi_asig,desp_asi_sit,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.asi_id ,luego.asi_com 
    ,luego.asi_asig ,luego.asi_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_sig_com_asig update on "informix"
    .sig_com_asig referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_com_asig (asi_id,asi_com,
    asi_asig,asi_sit,desp_asi_id,desp_asi_com,desp_asi_asig,desp_asi_sit,
    accion,usuario,hora)  values (antes.asi_id ,antes.asi_com ,antes.asi_asig 
    ,antes.asi_sit ,luego.asi_id ,luego.asi_com ,luego.asi_asig ,luego.asi_sit 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sig_com_asig delete on "informix"
    .sig_com_asig referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_com_asig (asi_id,asi_com,
    asi_asig,asi_sit,desp_asi_id,desp_asi_com,desp_asi_asig,desp_asi_sit,
    accion,usuario,hora)  values (antes.asi_id ,antes.asi_com ,antes.asi_asig 
    ,antes.asi_sit ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_sig_fuerza insert on "informix".sig_fuerza 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_fuerza (fue_id,fue_cat,
    fue_hora,fue_fecha,fue_destino,fue_sit,fue_obs,desp_fue_id,desp_fue_cat,
    desp_fue_hora,desp_fue_fecha,desp_fue_destino,desp_fue_sit,desp_fue_obs,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,luego.fue_id 
    ,luego.fue_cat ,luego.fue_hora ,luego.fue_fecha ,luego.fue_destino 
    ,luego.fue_sit ,luego.fue_obs ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_sig_fuerza update on "informix".sig_fuerza 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_fuerza (fue_id,fue_cat,
    fue_hora,fue_fecha,fue_destino,fue_sit,fue_obs,desp_fue_id,desp_fue_cat,
    desp_fue_hora,desp_fue_fecha,desp_fue_destino,desp_fue_sit,desp_fue_obs,
    accion,usuario,hora)  values (antes.fue_id ,antes.fue_cat ,antes.fue_hora 
    ,antes.fue_fecha ,antes.fue_destino ,antes.fue_sit ,antes.fue_obs 
    ,luego.fue_id ,luego.fue_cat ,luego.fue_hora ,luego.fue_fecha ,luego.fue_destino 
    ,luego.fue_sit ,luego.fue_obs ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_sig_fuerza delete on "informix".sig_fuerza 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_fuerza (fue_id,fue_cat,
    fue_hora,fue_fecha,fue_destino,fue_sit,fue_obs,desp_fue_id,desp_fue_cat,
    desp_fue_hora,desp_fue_fecha,desp_fue_destino,desp_fue_sit,desp_fue_obs,
    accion,usuario,hora)  values (antes.fue_id ,antes.fue_cat ,antes.fue_hora 
    ,antes.fue_fecha ,antes.fue_destino ,antes.fue_sit ,antes.fue_obs 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_sig_asig_companias insert on "informix"
    .sig_asig_companias referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_asig_companias (asi_id,
    asi_cat,asi_com,asi_sit,desp_asi_id,desp_asi_cat,desp_asi_com,desp_asi_sit,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.asi_id ,luego.asi_cat 
    ,luego.asi_com ,luego.asi_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_sig_asig_companias update on "informix"
    .sig_asig_companias referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_sig_asig_companias (asi_id,
    asi_cat,asi_com,asi_sit,desp_asi_id,desp_asi_cat,desp_asi_com,desp_asi_sit,
    accion,usuario,hora)  values (antes.asi_id ,antes.asi_cat ,antes.asi_com 
    ,antes.asi_sit ,luego.asi_id ,luego.asi_cat ,luego.asi_com ,luego.asi_sit 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sig_asig_companias delete on "informix"
    .sig_asig_companias referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_asig_companias (asi_id,
    asi_cat,asi_com,asi_sit,desp_asi_id,desp_asi_cat,desp_asi_com,desp_asi_sit,
    accion,usuario,hora)  values (antes.asi_id ,antes.asi_cat ,antes.asi_com 
    ,antes.asi_sit ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_sig_marcas insert on "informix".sig_marcas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_marcas (mar_id,mar_nombre,
    desp_mar_id,desp_mar_nombre,accion,usuario,hora)  values (NULL ,''
     ,luego.mar_id ,luego.mar_nombre ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_sig_marcas update on "informix".sig_marcas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_marcas (mar_id,mar_nombre,
    desp_mar_id,desp_mar_nombre,accion,usuario,hora)  values (antes.mar_id 
    ,antes.mar_nombre ,luego.mar_id ,luego.mar_nombre ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_sig_marcas delete on "informix".sig_marcas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_marcas (mar_id,mar_nombre,
    desp_mar_id,desp_mar_nombre,accion,usuario,hora)  values (antes.mar_id 
    ,antes.mar_nombre ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_sig_soporteotr insert on "informix"
    .sig_soporteotr referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_soporteotr (otr_registro,
    otr_fecha,otr_oficio,otr_usuario,otr_telefono,otr_tecnico,otr_dependencia,
    otr_marca,otr_modelo,otr_noserie,otr_motivo,otr_trabajo,otr_situacion,
    desp_otr_registro,desp_otr_fecha,desp_otr_oficio,desp_otr_usuario,
    desp_otr_telefono,desp_otr_tecnico,desp_otr_dependencia,desp_otr_marca,
    desp_otr_modelo,desp_otr_noserie,desp_otr_motivo,desp_otr_trabajo,
    desp_otr_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.otr_registro ,luego.otr_fecha ,luego.otr_oficio 
    ,luego.otr_usuario ,luego.otr_telefono ,luego.otr_tecnico ,luego.otr_dependencia 
    ,luego.otr_marca ,luego.otr_modelo ,luego.otr_noserie ,luego.otr_motivo 
    ,luego.otr_trabajo ,luego.otr_situacion ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_sig_soporteotr update on "informix"
    .sig_soporteotr referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_soporteotr (otr_registro,
    otr_fecha,otr_oficio,otr_usuario,otr_telefono,otr_tecnico,otr_dependencia,
    otr_marca,otr_modelo,otr_noserie,otr_motivo,otr_trabajo,otr_situacion,
    desp_otr_registro,desp_otr_fecha,desp_otr_oficio,desp_otr_usuario,
    desp_otr_telefono,desp_otr_tecnico,desp_otr_dependencia,desp_otr_marca,
    desp_otr_modelo,desp_otr_noserie,desp_otr_motivo,desp_otr_trabajo,
    desp_otr_situacion,accion,usuario,hora)  values (antes.otr_registro 
    ,antes.otr_fecha ,antes.otr_oficio ,antes.otr_usuario ,antes.otr_telefono 
    ,antes.otr_tecnico ,antes.otr_dependencia ,antes.otr_marca ,antes.otr_modelo 
    ,antes.otr_noserie ,antes.otr_motivo ,antes.otr_trabajo ,antes.otr_situacion 
    ,luego.otr_registro ,luego.otr_fecha ,luego.otr_oficio ,luego.otr_usuario 
    ,luego.otr_telefono ,luego.otr_tecnico ,luego.otr_dependencia ,luego.otr_marca 
    ,luego.otr_modelo ,luego.otr_noserie ,luego.otr_motivo ,luego.otr_trabajo 
    ,luego.otr_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sig_soporteotr delete on "informix"
    .sig_soporteotr referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_soporteotr (otr_registro,
    otr_fecha,otr_oficio,otr_usuario,otr_telefono,otr_tecnico,otr_dependencia,
    otr_marca,otr_modelo,otr_noserie,otr_motivo,otr_trabajo,otr_situacion,
    desp_otr_registro,desp_otr_fecha,desp_otr_oficio,desp_otr_usuario,
    desp_otr_telefono,desp_otr_tecnico,desp_otr_dependencia,desp_otr_marca,
    desp_otr_modelo,desp_otr_noserie,desp_otr_motivo,desp_otr_trabajo,
    desp_otr_situacion,accion,usuario,hora)  values (antes.otr_registro 
    ,antes.otr_fecha ,antes.otr_oficio ,antes.otr_usuario ,antes.otr_telefono 
    ,antes.otr_tecnico ,antes.otr_dependencia ,antes.otr_marca ,antes.otr_modelo 
    ,antes.otr_noserie ,antes.otr_motivo ,antes.otr_trabajo ,antes.otr_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_sig_soporteimp insert on "informix"
    .sig_soporteimp referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_soporteimp (imp_registro,
    imp_fecha,imp_oficio,imp_usuario,imp_telefono,imp_tecnico,imp_dependencia,
    imp_tipo,imp_marca,imp_modelo,imp_noserie,imp_cable,imp_motivo,imp_cableparalelo,
    imp_situacion,desp_imp_registro,desp_imp_fecha,desp_imp_oficio,desp_imp_usuario,
    desp_imp_telefono,desp_imp_tecnico,desp_imp_dependencia,desp_imp_tipo,
    desp_imp_marca,desp_imp_modelo,desp_imp_noserie,desp_imp_cable,desp_imp_motivo,
    desp_imp_cableparalelo,desp_imp_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.imp_registro 
    ,luego.imp_fecha ,luego.imp_oficio ,luego.imp_usuario ,luego.imp_telefono 
    ,luego.imp_tecnico ,luego.imp_dependencia ,luego.imp_tipo ,luego.imp_marca 
    ,luego.imp_modelo ,luego.imp_noserie ,luego.imp_cable ,luego.imp_motivo 
    ,luego.imp_cableparalelo ,luego.imp_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_sig_soporteimp update on "informix"
    .sig_soporteimp referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_soporteimp (imp_registro,
    imp_fecha,imp_oficio,imp_usuario,imp_telefono,imp_tecnico,imp_dependencia,
    imp_tipo,imp_marca,imp_modelo,imp_noserie,imp_cable,imp_motivo,imp_cableparalelo,
    imp_situacion,desp_imp_registro,desp_imp_fecha,desp_imp_oficio,desp_imp_usuario,
    desp_imp_telefono,desp_imp_tecnico,desp_imp_dependencia,desp_imp_tipo,
    desp_imp_marca,desp_imp_modelo,desp_imp_noserie,desp_imp_cable,desp_imp_motivo,
    desp_imp_cableparalelo,desp_imp_situacion,accion,usuario,hora)  values 
    (antes.imp_registro ,antes.imp_fecha ,antes.imp_oficio ,antes.imp_usuario 
    ,antes.imp_telefono ,antes.imp_tecnico ,antes.imp_dependencia ,antes.imp_tipo 
    ,antes.imp_marca ,antes.imp_modelo ,antes.imp_noserie ,antes.imp_cable 
    ,antes.imp_motivo ,antes.imp_cableparalelo ,antes.imp_situacion ,
    luego.imp_registro ,luego.imp_fecha ,luego.imp_oficio ,luego.imp_usuario 
    ,luego.imp_telefono ,luego.imp_tecnico ,luego.imp_dependencia ,luego.imp_tipo 
    ,luego.imp_marca ,luego.imp_modelo ,luego.imp_noserie ,luego.imp_cable 
    ,luego.imp_motivo ,luego.imp_cableparalelo ,luego.imp_situacion ,
    'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sig_soporteimp delete on "informix"
    .sig_soporteimp referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_soporteimp (imp_registro,
    imp_fecha,imp_oficio,imp_usuario,imp_telefono,imp_tecnico,imp_dependencia,
    imp_tipo,imp_marca,imp_modelo,imp_noserie,imp_cable,imp_motivo,imp_cableparalelo,
    imp_situacion,desp_imp_registro,desp_imp_fecha,desp_imp_oficio,desp_imp_usuario,
    desp_imp_telefono,desp_imp_tecnico,desp_imp_dependencia,desp_imp_tipo,
    desp_imp_marca,desp_imp_modelo,desp_imp_noserie,desp_imp_cable,desp_imp_motivo,
    desp_imp_cableparalelo,desp_imp_situacion,accion,usuario,hora)  values 
    (antes.imp_registro ,antes.imp_fecha ,antes.imp_oficio ,antes.imp_usuario 
    ,antes.imp_telefono ,antes.imp_tecnico ,antes.imp_dependencia ,antes.imp_tipo 
    ,antes.imp_marca ,antes.imp_modelo ,antes.imp_noserie ,antes.imp_cable 
    ,antes.imp_motivo ,antes.imp_cableparalelo ,antes.imp_situacion ,
    NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_sig_soportecpu insert on "informix"
    .sig_soportecpu referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_soportecpu (cpu_registro,
    cpu_fecha,cpu_oficio,cpu_usuario,cpu_telefono,cpu_tecnico,cpu_dependencia,
    cpu_procesador,cpu_cdrom,cpu_tarjetasonido,cpu_drivers,cpu_discoduro,
    cpu_tarjetavideo,cpu_teclado,cpu_mouse,cpu_fuente,cpu_cable,cpu_motivo,
    cpu_situacion,desp_cpu_registro,desp_cpu_fecha,desp_cpu_oficio,desp_cpu_usuario,
    desp_cpu_telefono,desp_cpu_tecnico,desp_cpu_dependencia,desp_cpu_procesador,
    desp_cpu_cdrom,desp_cpu_tarjetasonido,desp_cpu_drivers,desp_cpu_discoduro,
    desp_cpu_tarjetavideo,desp_cpu_teclado,desp_cpu_mouse,desp_cpu_fuente,
    desp_cpu_cable,desp_cpu_motivo,desp_cpu_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,luego.cpu_registro ,luego.cpu_fecha ,luego.cpu_oficio ,
    luego.cpu_usuario ,luego.cpu_telefono ,luego.cpu_tecnico ,luego.cpu_dependencia 
    ,luego.cpu_procesador ,luego.cpu_cdrom ,luego.cpu_tarjetasonido ,
    luego.cpu_drivers ,luego.cpu_discoduro ,luego.cpu_tarjetavideo ,luego.cpu_teclado 
    ,luego.cpu_mouse ,luego.cpu_fuente ,luego.cpu_cable ,luego.cpu_motivo 
    ,luego.cpu_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_sig_soportecpu update on "informix"
    .sig_soportecpu referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_soportecpu (cpu_registro,
    cpu_fecha,cpu_oficio,cpu_usuario,cpu_telefono,cpu_tecnico,cpu_dependencia,
    cpu_procesador,cpu_cdrom,cpu_tarjetasonido,cpu_drivers,cpu_discoduro,
    cpu_tarjetavideo,cpu_teclado,cpu_mouse,cpu_fuente,cpu_cable,cpu_motivo,
    cpu_situacion,desp_cpu_registro,desp_cpu_fecha,desp_cpu_oficio,desp_cpu_usuario,
    desp_cpu_telefono,desp_cpu_tecnico,desp_cpu_dependencia,desp_cpu_procesador,
    desp_cpu_cdrom,desp_cpu_tarjetasonido,desp_cpu_drivers,desp_cpu_discoduro,
    desp_cpu_tarjetavideo,desp_cpu_teclado,desp_cpu_mouse,desp_cpu_fuente,
    desp_cpu_cable,desp_cpu_motivo,desp_cpu_situacion,accion,usuario,
    hora)  values (antes.cpu_registro ,antes.cpu_fecha ,antes.cpu_oficio 
    ,antes.cpu_usuario ,antes.cpu_telefono ,antes.cpu_tecnico ,antes.cpu_dependencia 
    ,antes.cpu_procesador ,antes.cpu_cdrom ,antes.cpu_tarjetasonido ,
    antes.cpu_drivers ,antes.cpu_discoduro ,antes.cpu_tarjetavideo ,antes.cpu_teclado 
    ,antes.cpu_mouse ,antes.cpu_fuente ,antes.cpu_cable ,antes.cpu_motivo 
    ,antes.cpu_situacion ,luego.cpu_registro ,luego.cpu_fecha ,luego.cpu_oficio 
    ,luego.cpu_usuario ,luego.cpu_telefono ,luego.cpu_tecnico ,luego.cpu_dependencia 
    ,luego.cpu_procesador ,luego.cpu_cdrom ,luego.cpu_tarjetasonido ,
    luego.cpu_drivers ,luego.cpu_discoduro ,luego.cpu_tarjetavideo ,luego.cpu_teclado 
    ,luego.cpu_mouse ,luego.cpu_fuente ,luego.cpu_cable ,luego.cpu_motivo 
    ,luego.cpu_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sig_soportecpu delete on "informix"
    .sig_soportecpu referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_soportecpu (cpu_registro,
    cpu_fecha,cpu_oficio,cpu_usuario,cpu_telefono,cpu_tecnico,cpu_dependencia,
    cpu_procesador,cpu_cdrom,cpu_tarjetasonido,cpu_drivers,cpu_discoduro,
    cpu_tarjetavideo,cpu_teclado,cpu_mouse,cpu_fuente,cpu_cable,cpu_motivo,
    cpu_situacion,desp_cpu_registro,desp_cpu_fecha,desp_cpu_oficio,desp_cpu_usuario,
    desp_cpu_telefono,desp_cpu_tecnico,desp_cpu_dependencia,desp_cpu_procesador,
    desp_cpu_cdrom,desp_cpu_tarjetasonido,desp_cpu_drivers,desp_cpu_discoduro,
    desp_cpu_tarjetavideo,desp_cpu_teclado,desp_cpu_mouse,desp_cpu_fuente,
    desp_cpu_cable,desp_cpu_motivo,desp_cpu_situacion,accion,usuario,
    hora)  values (antes.cpu_registro ,antes.cpu_fecha ,antes.cpu_oficio 
    ,antes.cpu_usuario ,antes.cpu_telefono ,antes.cpu_tecnico ,antes.cpu_dependencia 
    ,antes.cpu_procesador ,antes.cpu_cdrom ,antes.cpu_tarjetasonido ,
    antes.cpu_drivers ,antes.cpu_discoduro ,antes.cpu_tarjetavideo ,antes.cpu_teclado 
    ,antes.cpu_mouse ,antes.cpu_fuente ,antes.cpu_cable ,antes.cpu_motivo 
    ,antes.cpu_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_sig_soportemon insert on "informix"
    .sig_soportemon referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_soportemon (mon_registro,
    mon_fecha,mon_oficio,mon_usuario,mon_telefono,mon_tecnico,mon_dependencia,
    mon_marca,mon_modelo,mon_noserial,mon_tipo,mon_cable,mon_motivo,mon_situacion,
    desp_mon_registro,desp_mon_fecha,desp_mon_oficio,desp_mon_usuario,
    desp_mon_telefono,desp_mon_tecnico,desp_mon_dependencia,desp_mon_marca,
    desp_mon_modelo,desp_mon_noserial,desp_mon_tipo,desp_mon_cable,desp_mon_motivo,
    desp_mon_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.mon_registro ,luego.mon_fecha 
    ,luego.mon_oficio ,luego.mon_usuario ,luego.mon_telefono ,luego.mon_tecnico 
    ,luego.mon_dependencia ,luego.mon_marca ,luego.mon_modelo ,luego.mon_noserial 
    ,luego.mon_tipo ,luego.mon_cable ,luego.mon_motivo ,luego.mon_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_sig_soportemon update on "informix"
    .sig_soportemon referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_soportemon (mon_registro,
    mon_fecha,mon_oficio,mon_usuario,mon_telefono,mon_tecnico,mon_dependencia,
    mon_marca,mon_modelo,mon_noserial,mon_tipo,mon_cable,mon_motivo,mon_situacion,
    desp_mon_registro,desp_mon_fecha,desp_mon_oficio,desp_mon_usuario,
    desp_mon_telefono,desp_mon_tecnico,desp_mon_dependencia,desp_mon_marca,
    desp_mon_modelo,desp_mon_noserial,desp_mon_tipo,desp_mon_cable,desp_mon_motivo,
    desp_mon_situacion,accion,usuario,hora)  values (antes.mon_registro 
    ,antes.mon_fecha ,antes.mon_oficio ,antes.mon_usuario ,antes.mon_telefono 
    ,antes.mon_tecnico ,antes.mon_dependencia ,antes.mon_marca ,antes.mon_modelo 
    ,antes.mon_noserial ,antes.mon_tipo ,antes.mon_cable ,antes.mon_motivo 
    ,antes.mon_situacion ,luego.mon_registro ,luego.mon_fecha ,luego.mon_oficio 
    ,luego.mon_usuario ,luego.mon_telefono ,luego.mon_tecnico ,luego.mon_dependencia 
    ,luego.mon_marca ,luego.mon_modelo ,luego.mon_noserial ,luego.mon_tipo 
    ,luego.mon_cable ,luego.mon_motivo ,luego.mon_situacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_sig_soportemon delete on "informix"
    .sig_soportemon referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_soportemon (mon_registro,
    mon_fecha,mon_oficio,mon_usuario,mon_telefono,mon_tecnico,mon_dependencia,
    mon_marca,mon_modelo,mon_noserial,mon_tipo,mon_cable,mon_motivo,mon_situacion,
    desp_mon_registro,desp_mon_fecha,desp_mon_oficio,desp_mon_usuario,
    desp_mon_telefono,desp_mon_tecnico,desp_mon_dependencia,desp_mon_marca,
    desp_mon_modelo,desp_mon_noserial,desp_mon_tipo,desp_mon_cable,desp_mon_motivo,
    desp_mon_situacion,accion,usuario,hora)  values (antes.mon_registro 
    ,antes.mon_fecha ,antes.mon_oficio ,antes.mon_usuario ,antes.mon_telefono 
    ,antes.mon_tecnico ,antes.mon_dependencia ,antes.mon_marca ,antes.mon_modelo 
    ,antes.mon_noserial ,antes.mon_tipo ,antes.mon_cable ,antes.mon_motivo 
    ,antes.mon_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_sig_novedades insert on "informix"
    .sig_novedades referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_novedades (nov_id,nov_catalogo,
    nov_fecha,nov_descripcion,nov_dependencia,nov_sit,desp_nov_id,desp_nov_catalogo,
    desp_nov_fecha,desp_nov_descripcion,desp_nov_dependencia,desp_nov_sit,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ::lvarchar(2000) ,'' ,
    '' ,luego.nov_id ,luego.nov_catalogo ,luego.nov_fecha ,luego.nov_descripcion 
    ,luego.nov_dependencia ,luego.nov_sit ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_sig_novedades update on "informix"
    .sig_novedades referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_novedades (nov_id,nov_catalogo,
    nov_fecha,nov_descripcion,nov_dependencia,nov_sit,desp_nov_id,desp_nov_catalogo,
    desp_nov_fecha,desp_nov_descripcion,desp_nov_dependencia,desp_nov_sit,
    accion,usuario,hora)  values (antes.nov_id ,antes.nov_catalogo ,antes.nov_fecha 
    ,antes.nov_descripcion ,antes.nov_dependencia ,antes.nov_sit ,luego.nov_id 
    ,luego.nov_catalogo ,luego.nov_fecha ,luego.nov_descripcion ,luego.nov_dependencia 
    ,luego.nov_sit ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sig_novedades delete on "informix"
    .sig_novedades referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_novedades (nov_id,nov_catalogo,
    nov_fecha,nov_descripcion,nov_dependencia,nov_sit,desp_nov_id,desp_nov_catalogo,
    desp_nov_fecha,desp_nov_descripcion,desp_nov_dependencia,desp_nov_sit,
    accion,usuario,hora)  values (antes.nov_id ,antes.nov_catalogo ,antes.nov_fecha 
    ,antes.nov_descripcion ,antes.nov_dependencia ,antes.nov_sit ,NULL 
    ,'' ,'' ,'' ::lvarchar(2000) ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_sig_jefes_servicio insert on "informix"
    .sig_jefes_servicio referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_jefes_servicio (jefe_hist_id,
    jefe_grado,jefe_arma,jefe_fecha_inicial,jefe_fecha_final,jefe_catalogo,
    jefe_dependencia,desp_jefe_hist_id,desp_jefe_grado,desp_jefe_arma,
    desp_jefe_fecha_inicial,desp_jefe_fecha_final,desp_jefe_catalogo,
    desp_jefe_dependencia,accion,usuario,hora)  values (NULL ,'' ,'' ,''
     ,'' ,'' ,'' ,luego.jefe_hist_id ,luego.jefe_grado ,luego.jefe_arma 
    ,luego.jefe_fecha_inicial ,luego.jefe_fecha_final ,luego.jefe_catalogo 
    ,luego.jefe_dependencia ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_sig_jefes_servicio update on "informix"
    .sig_jefes_servicio referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_sig_jefes_servicio (jefe_hist_id,
    jefe_grado,jefe_arma,jefe_fecha_inicial,jefe_fecha_final,jefe_catalogo,
    jefe_dependencia,desp_jefe_hist_id,desp_jefe_grado,desp_jefe_arma,
    desp_jefe_fecha_inicial,desp_jefe_fecha_final,desp_jefe_catalogo,
    desp_jefe_dependencia,accion,usuario,hora)  values (antes.jefe_hist_id 
    ,antes.jefe_grado ,antes.jefe_arma ,antes.jefe_fecha_inicial ,antes.jefe_fecha_final 
    ,antes.jefe_catalogo ,antes.jefe_dependencia ,luego.jefe_hist_id 
    ,luego.jefe_grado ,luego.jefe_arma ,luego.jefe_fecha_inicial ,luego.jefe_fecha_final 
    ,luego.jefe_catalogo ,luego.jefe_dependencia ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_sig_jefes_servicio delete on "informix"
    .sig_jefes_servicio referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_jefes_servicio (jefe_hist_id,
    jefe_grado,jefe_arma,jefe_fecha_inicial,jefe_fecha_final,jefe_catalogo,
    jefe_dependencia,desp_jefe_hist_id,desp_jefe_grado,desp_jefe_arma,
    desp_jefe_fecha_inicial,desp_jefe_fecha_final,desp_jefe_catalogo,
    desp_jefe_dependencia,accion,usuario,hora)  values (antes.jefe_hist_id 
    ,antes.jefe_grado ,antes.jefe_arma ,antes.jefe_fecha_inicial ,antes.jefe_fecha_final 
    ,antes.jefe_catalogo ,antes.jefe_dependencia ,NULL ,'' ,'' ,'' ,'' ,''
     ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_sig_personal_contrato insert on 
    "informix".sig_personal_contrato referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_personal_contrato (con_catalogo,
    con_nom1,con_nom2,con_ape1,con_ape2,con_grado,con_dep,con_sit,desp_con_catalogo,
    desp_con_nom1,desp_con_nom2,desp_con_ape1,desp_con_ape2,desp_con_grado,
    desp_con_dep,desp_con_sit,accion,usuario,hora)  values (NULL ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,luego.con_catalogo ,luego.con_nom1 ,luego.con_nom2 
    ,luego.con_ape1 ,luego.con_ape2 ,luego.con_grado ,luego.con_dep ,
    luego.con_sit ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_sig_personal_contrato update on 
    "informix".sig_personal_contrato referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_sig_personal_contrato (con_catalogo,
    con_nom1,con_nom2,con_ape1,con_ape2,con_grado,con_dep,con_sit,desp_con_catalogo,
    desp_con_nom1,desp_con_nom2,desp_con_ape1,desp_con_ape2,desp_con_grado,
    desp_con_dep,desp_con_sit,accion,usuario,hora)  values (antes.con_catalogo 
    ,antes.con_nom1 ,antes.con_nom2 ,antes.con_ape1 ,antes.con_ape2 ,
    antes.con_grado ,antes.con_dep ,antes.con_sit ,luego.con_catalogo 
    ,luego.con_nom1 ,luego.con_nom2 ,luego.con_ape1 ,luego.con_ape2 ,
    luego.con_grado ,luego.con_dep ,luego.con_sit ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_sig_personal_contrato delete on 
    "informix".sig_personal_contrato referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_personal_contrato (con_catalogo,
    con_nom1,con_nom2,con_ape1,con_ape2,con_grado,con_dep,con_sit,desp_con_catalogo,
    desp_con_nom1,desp_con_nom2,desp_con_ape1,desp_con_ape2,desp_con_grado,
    desp_con_dep,desp_con_sit,accion,usuario,hora)  values (antes.con_catalogo 
    ,antes.con_nom1 ,antes.con_nom2 ,antes.con_ape1 ,antes.con_ape2 ,
    antes.con_grado ,antes.con_dep ,antes.con_sit ,NULL ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_smg_tipos_mantenimiento insert 
    on "informix".smg_tipos_mantenimiento referencing new as luego
    
    for each row
        (
        insert into "informix".aud_smg_tipos_mantenimiento (mant_id,
    mant_nombre,mant_desc,mant_resp,mant_sit,desp_mant_id,desp_mant_nombre,
    desp_mant_desc,desp_mant_resp,desp_mant_sit,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,luego.mant_id ,luego.mant_nombre ,luego.mant_desc 
    ,luego.mant_resp ,luego.mant_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_smg_tipos_mantenimiento delete 
    on "informix".smg_tipos_mantenimiento referencing old as antes
    
    for each row
        (
        insert into "informix".aud_smg_tipos_mantenimiento (mant_id,
    mant_nombre,mant_desc,mant_resp,mant_sit,desp_mant_id,desp_mant_nombre,
    desp_mant_desc,desp_mant_resp,desp_mant_sit,accion,usuario,hora) 
     values (antes.mant_id ,antes.mant_nombre ,antes.mant_desc ,antes.mant_resp 
    ,antes.mant_sit ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_smg_tipos_mantenimiento update 
    on "informix".smg_tipos_mantenimiento referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_smg_tipos_mantenimiento (mant_id,
    mant_nombre,mant_desc,mant_resp,mant_sit,desp_mant_id,desp_mant_nombre,
    desp_mant_desc,desp_mant_resp,desp_mant_sit,accion,usuario,hora) 
     values (antes.mant_id ,antes.mant_nombre ,antes.mant_desc ,antes.mant_resp 
    ,antes.mant_sit ,luego.mant_id ,luego.mant_nombre ,luego.mant_desc 
    ,luego.mant_resp ,luego.mant_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_smg_motivos insert on "informix"
    .smg_motivos referencing new as luego
    for each row
        (
        insert into "informix".aud_smg_motivos (mot_id,mot_nombre,
    mot_desc,mot_sit,desp_mot_id,desp_mot_nombre,desp_mot_desc,desp_mot_sit,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.mot_id ,luego.mot_nombre 
    ,luego.mot_desc ,luego.mot_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_smg_motivos delete on "informix"
    .smg_motivos referencing old as antes
    for each row
        (
        insert into "informix".aud_smg_motivos (mot_id,mot_nombre,
    mot_desc,mot_sit,desp_mot_id,desp_mot_nombre,desp_mot_desc,desp_mot_sit,
    accion,usuario,hora)  values (antes.mot_id ,antes.mot_nombre ,antes.mot_desc 
    ,antes.mot_sit ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_smg_motivos update on "informix"
    .smg_motivos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_smg_motivos (mot_id,mot_nombre,
    mot_desc,mot_sit,desp_mot_id,desp_mot_nombre,desp_mot_desc,desp_mot_sit,
    accion,usuario,hora)  values (antes.mot_id ,antes.mot_nombre ,antes.mot_desc 
    ,antes.mot_sit ,luego.mot_id ,luego.mot_nombre ,luego.mot_desc ,luego.mot_sit 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_smg_historial_mantenimiento insert 
    on "informix".smg_historial_mantenimiento referencing new 
    as luego
    for each row
        (
        insert into "informix".aud_smg_historial_mantenimiento 
    (mant_codigo,mant_fusil,mant_cat,mant_mant,mant_fecha,mant_det,mant_sit,
    desp_mant_codigo,desp_mant_fusil,desp_mant_cat,desp_mant_mant,desp_mant_fecha,
    desp_mant_det,desp_mant_sit,accion,usuario,hora)  values (NULL ,''
     ,'' ,'' ,'' ,'' ,'' ,luego.mant_codigo ,luego.mant_fusil ,luego.mant_cat 
    ,luego.mant_mant ,luego.mant_fecha ,luego.mant_det ,luego.mant_sit 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_smg_historial_mantenimiento delete 
    on "informix".smg_historial_mantenimiento referencing old 
    as antes
    for each row
        (
        insert into "informix".aud_smg_historial_mantenimiento 
    (mant_codigo,mant_fusil,mant_cat,mant_mant,mant_fecha,mant_det,mant_sit,
    desp_mant_codigo,desp_mant_fusil,desp_mant_cat,desp_mant_mant,desp_mant_fecha,
    desp_mant_det,desp_mant_sit,accion,usuario,hora)  values (antes.mant_codigo 
    ,antes.mant_fusil ,antes.mant_cat ,antes.mant_mant ,antes.mant_fecha 
    ,antes.mant_det ,antes.mant_sit ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_smg_historial_mantenimiento update 
    on "informix".smg_historial_mantenimiento referencing old 
    as antes new as luego
    for each row
        (
        insert into "informix".aud_smg_historial_mantenimiento 
    (mant_codigo,mant_fusil,mant_cat,mant_mant,mant_fecha,mant_det,mant_sit,
    desp_mant_codigo,desp_mant_fusil,desp_mant_cat,desp_mant_mant,desp_mant_fecha,
    desp_mant_det,desp_mant_sit,accion,usuario,hora)  values (antes.mant_codigo 
    ,antes.mant_fusil ,antes.mant_cat ,antes.mant_mant ,antes.mant_fecha 
    ,antes.mant_det ,antes.mant_sit ,luego.mant_codigo ,luego.mant_fusil 
    ,luego.mant_cat ,luego.mant_mant ,luego.mant_fecha ,luego.mant_det 
    ,luego.mant_sit ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_smg_historial_disparos insert on 
    "informix".smg_historial_disparos referencing new as luego
    
    for each row
        (
        insert into "informix".aud_smg_historial_disparos (dis_id,
    dis_fusil,dis_cantidad,dis_fecha,dis_doc,dis_mot,dis_det,dis_sit,
    desp_dis_id,desp_dis_fusil,desp_dis_cantidad,desp_dis_fecha,desp_dis_doc,
    desp_dis_mot,desp_dis_det,desp_dis_sit,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.dis_id ,luego.dis_fusil ,luego.dis_cantidad 
    ,luego.dis_fecha ,luego.dis_doc ,luego.dis_mot ,luego.dis_det ,luego.dis_sit 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_smg_historial_disparos delete on 
    "informix".smg_historial_disparos referencing old as antes
    
    for each row
        (
        insert into "informix".aud_smg_historial_disparos (dis_id,
    dis_fusil,dis_cantidad,dis_fecha,dis_doc,dis_mot,dis_det,dis_sit,
    desp_dis_id,desp_dis_fusil,desp_dis_cantidad,desp_dis_fecha,desp_dis_doc,
    desp_dis_mot,desp_dis_det,desp_dis_sit,accion,usuario,hora)  values 
    (antes.dis_id ,antes.dis_fusil ,antes.dis_cantidad ,antes.dis_fecha 
    ,antes.dis_doc ,antes.dis_mot ,antes.dis_det ,antes.dis_sit ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_smg_historial_disparos update on 
    "informix".smg_historial_disparos referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_smg_historial_disparos (dis_id,
    dis_fusil,dis_cantidad,dis_fecha,dis_doc,dis_mot,dis_det,dis_sit,
    desp_dis_id,desp_dis_fusil,desp_dis_cantidad,desp_dis_fecha,desp_dis_doc,
    desp_dis_mot,desp_dis_det,desp_dis_sit,accion,usuario,hora)  values 
    (antes.dis_id ,antes.dis_fusil ,antes.dis_cantidad ,antes.dis_fecha 
    ,antes.dis_doc ,antes.dis_mot ,antes.dis_det ,antes.dis_sit ,luego.dis_id 
    ,luego.dis_fusil ,luego.dis_cantidad ,luego.dis_fecha ,luego.dis_doc 
    ,luego.dis_mot ,luego.dis_det ,luego.dis_sit ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_fp_fondo insert on "informix".fp_fondo 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_fp_fondo (fon_codigo,fon_desc,
    fon_stat,desp_fon_codigo,desp_fon_desc,desp_fon_stat,accion,usuario,
    hora)  values (NULL ,'' ,'' ,luego.fon_codigo ,luego.fon_desc ,luego.fon_stat 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fp_fondoo delete on "informix".fp_fondo 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_fp_fondo (fon_codigo,fon_desc,
    fon_stat,desp_fon_codigo,desp_fon_desc,desp_fon_stat,accion,usuario,
    hora)  values (antes.fon_codigo ,antes.fon_desc ,antes.fon_stat ,
    NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fp_fondo update on "informix".fp_fondo 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fp_fondo (fon_codigo,fon_desc,
    fon_stat,desp_fon_codigo,desp_fon_desc,desp_fon_stat,accion,usuario,
    hora)  values (antes.fon_codigo ,antes.fon_desc ,antes.fon_stat ,
    luego.fon_codigo ,luego.fon_desc ,luego.fon_stat ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_fp_uso insert on "informix".fp_uso 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_fp_uso (uso_codigo,uso_desc,
    uso_stat,desp_uso_codigo,desp_uso_desc,desp_uso_stat,accion,usuario,
    hora)  values (NULL ,'' ,'' ,luego.uso_codigo ,luego.uso_desc ,luego.uso_stat 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fp_uso delete on "informix".fp_uso 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_fp_uso (uso_codigo,uso_desc,
    uso_stat,desp_uso_codigo,desp_uso_desc,desp_uso_stat,accion,usuario,
    hora)  values (antes.uso_codigo ,antes.uso_desc ,antes.uso_stat ,
    NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fp_uso update on "informix".fp_uso 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fp_uso (uso_codigo,uso_desc,
    uso_stat,desp_uso_codigo,desp_uso_desc,desp_uso_stat,accion,usuario,
    hora)  values (antes.uso_codigo ,antes.uso_desc ,antes.uso_stat ,
    luego.uso_codigo ,luego.uso_desc ,luego.uso_stat ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_fp_clasificacion insert on "informix"
    .fp_clasificacion referencing new as luego
    for each row
        (
        insert into "informix".aud_fp_clasificacion (clas_codigo,
    clas_desc,clas_stat,desp_clas_codigo,desp_clas_desc,desp_clas_stat,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.clas_codigo ,luego.clas_desc 
    ,luego.clas_stat ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fp_clasificacion delete on "informix"
    .fp_clasificacion referencing old as antes
    for each row
        (
        insert into "informix".aud_fp_clasificacion (clas_codigo,
    clas_desc,clas_stat,desp_clas_codigo,desp_clas_desc,desp_clas_stat,
    accion,usuario,hora)  values (antes.clas_codigo ,antes.clas_desc 
    ,antes.clas_stat ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_fp_clasificacion update on "informix"
    .fp_clasificacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fp_clasificacion (clas_codigo,
    clas_desc,clas_stat,desp_clas_codigo,desp_clas_desc,desp_clas_stat,
    accion,usuario,hora)  values (antes.clas_codigo ,antes.clas_desc 
    ,antes.clas_stat ,luego.clas_codigo ,luego.clas_desc ,luego.clas_stat 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fp_estado insert on "informix".fp_estado 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_fp_estado (est_codigo,est_desc,
    est_stat,desp_est_codigo,desp_est_desc,desp_est_stat,accion,usuario,
    hora)  values (NULL ,'' ,'' ,luego.est_codigo ,luego.est_desc ,luego.est_stat 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fp_estado delete on "informix".fp_estado 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_fp_estado (est_codigo,est_desc,
    est_stat,desp_est_codigo,desp_est_desc,desp_est_stat,accion,usuario,
    hora)  values (antes.est_codigo ,antes.est_desc ,antes.est_stat ,
    NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fp_estado update on "informix".fp_estado 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fp_estado (est_codigo,est_desc,
    est_stat,desp_est_codigo,desp_est_desc,desp_est_stat,accion,usuario,
    hora)  values (antes.est_codigo ,antes.est_desc ,antes.est_stat ,
    luego.est_codigo ,luego.est_desc ,luego.est_stat ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_fp_documentos insert on "informix"
    .fp_documentos referencing new as luego
    for each row
        (
        insert into "informix".aud_fp_documentos (doc_codigo,
    doc_titulo,doc_descripcion,doc_tamanio,doc_tipo,doc_nombre_archivo,
    doc_respuesta,doc_fec_ini,doc_fec_print,doc_fec_fin,doc_obs1,doc_obs2,
    doc_obs3,doc_fondo,doc_uso,doc_estado,doc_clasificacion,doc_monto,
    doc_prov,doc_catalogo,doc_dependencia,doc_cantidad,doc_objeto_uso,
    desp_doc_codigo,desp_doc_titulo,desp_doc_descripcion,desp_doc_tamanio,
    desp_doc_tipo,desp_doc_nombre_archivo,desp_doc_respuesta,desp_doc_fec_ini,
    desp_doc_fec_print,desp_doc_fec_fin,desp_doc_obs1,desp_doc_obs2,desp_doc_obs3,
    desp_doc_fondo,desp_doc_uso,desp_doc_estado,desp_doc_clasificacion,
    desp_doc_monto,desp_doc_prov,desp_doc_catalogo,desp_doc_dependencia,
    desp_doc_cantidad,desp_doc_objeto_uso,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,luego.doc_codigo ,luego.doc_titulo ,luego.doc_descripcion 
    ,luego.doc_tamanio ,luego.doc_tipo ,luego.doc_nombre_archivo ,luego.doc_respuesta 
    ,luego.doc_fec_ini ,luego.doc_fec_print ,luego.doc_fec_fin ,luego.doc_obs1 
    ,luego.doc_obs2 ,luego.doc_obs3 ,luego.doc_fondo ,luego.doc_uso ,
    luego.doc_estado ,luego.doc_clasificacion ,luego.doc_monto ,luego.doc_prov 
    ,luego.doc_catalogo ,luego.doc_dependencia ,luego.doc_cantidad ,luego.doc_objeto_uso 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fp_documentos delete on "informix"
    .fp_documentos referencing old as antes
    for each row
        (
        insert into "informix".aud_fp_documentos (doc_codigo,
    doc_titulo,doc_descripcion,doc_tamanio,doc_tipo,doc_nombre_archivo,
    doc_respuesta,doc_fec_ini,doc_fec_print,doc_fec_fin,doc_obs1,doc_obs2,
    doc_obs3,doc_fondo,doc_uso,doc_estado,doc_clasificacion,doc_monto,
    doc_prov,doc_catalogo,doc_dependencia,doc_cantidad,doc_objeto_uso,
    desp_doc_codigo,desp_doc_titulo,desp_doc_descripcion,desp_doc_tamanio,
    desp_doc_tipo,desp_doc_nombre_archivo,desp_doc_respuesta,desp_doc_fec_ini,
    desp_doc_fec_print,desp_doc_fec_fin,desp_doc_obs1,desp_doc_obs2,desp_doc_obs3,
    desp_doc_fondo,desp_doc_uso,desp_doc_estado,desp_doc_clasificacion,
    desp_doc_monto,desp_doc_prov,desp_doc_catalogo,desp_doc_dependencia,
    desp_doc_cantidad,desp_doc_objeto_uso,accion,usuario,hora)  values 
    (antes.doc_codigo ,antes.doc_titulo ,antes.doc_descripcion ,antes.doc_tamanio 
    ,antes.doc_tipo ,antes.doc_nombre_archivo ,antes.doc_respuesta ,antes.doc_fec_ini 
    ,antes.doc_fec_print ,antes.doc_fec_fin ,antes.doc_obs1 ,antes.doc_obs2 
    ,antes.doc_obs3 ,antes.doc_fondo ,antes.doc_uso ,antes.doc_estado 
    ,antes.doc_clasificacion ,antes.doc_monto ,antes.doc_prov ,antes.doc_catalogo 
    ,antes.doc_dependencia ,antes.doc_cantidad ,antes.doc_objeto_uso 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fp_documentos update on "informix"
    .fp_documentos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fp_documentos (doc_codigo,
    doc_titulo,doc_descripcion,doc_tamanio,doc_tipo,doc_nombre_archivo,
    doc_respuesta,doc_fec_ini,doc_fec_print,doc_fec_fin,doc_obs1,doc_obs2,
    doc_obs3,doc_fondo,doc_uso,doc_estado,doc_clasificacion,doc_monto,
    doc_prov,doc_catalogo,doc_dependencia,doc_cantidad,doc_objeto_uso,
    desp_doc_codigo,desp_doc_titulo,desp_doc_descripcion,desp_doc_tamanio,
    desp_doc_tipo,desp_doc_nombre_archivo,desp_doc_respuesta,desp_doc_fec_ini,
    desp_doc_fec_print,desp_doc_fec_fin,desp_doc_obs1,desp_doc_obs2,desp_doc_obs3,
    desp_doc_fondo,desp_doc_uso,desp_doc_estado,desp_doc_clasificacion,
    desp_doc_monto,desp_doc_prov,desp_doc_catalogo,desp_doc_dependencia,
    desp_doc_cantidad,desp_doc_objeto_uso,accion,usuario,hora)  values 
    (antes.doc_codigo ,antes.doc_titulo ,antes.doc_descripcion ,antes.doc_tamanio 
    ,antes.doc_tipo ,antes.doc_nombre_archivo ,antes.doc_respuesta ,antes.doc_fec_ini 
    ,antes.doc_fec_print ,antes.doc_fec_fin ,antes.doc_obs1 ,antes.doc_obs2 
    ,antes.doc_obs3 ,antes.doc_fondo ,antes.doc_uso ,antes.doc_estado 
    ,antes.doc_clasificacion ,antes.doc_monto ,antes.doc_prov ,antes.doc_catalogo 
    ,antes.doc_dependencia ,antes.doc_cantidad ,antes.doc_objeto_uso 
    ,luego.doc_codigo ,luego.doc_titulo ,luego.doc_descripcion ,luego.doc_tamanio 
    ,luego.doc_tipo ,luego.doc_nombre_archivo ,luego.doc_respuesta ,luego.doc_fec_ini 
    ,luego.doc_fec_print ,luego.doc_fec_fin ,luego.doc_obs1 ,luego.doc_obs2 
    ,luego.doc_obs3 ,luego.doc_fondo ,luego.doc_uso ,luego.doc_estado 
    ,luego.doc_clasificacion ,luego.doc_monto ,luego.doc_prov ,luego.doc_catalogo 
    ,luego.doc_dependencia ,luego.doc_cantidad ,luego.doc_objeto_uso 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fp_seguridad insert on "informix"
    .fp_seguridad referencing new as luego
    for each row
        (
        insert into "informix".aud_fp_seguridad (sec_codigo,sec_catalogo,
    sec_fecha,sec_estado,sec_documento,sec_respuesta,desp_sec_codigo,
    desp_sec_catalogo,desp_sec_fecha,desp_sec_estado,desp_sec_documento,
    desp_sec_respuesta,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,luego.sec_codigo ,luego.sec_catalogo ,luego.sec_fecha ,luego.sec_estado 
    ,luego.sec_documento ,luego.sec_respuesta ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_fp_seguridad delete on "informix"
    .fp_seguridad referencing old as antes
    for each row
        (
        insert into "informix".aud_fp_seguridad (sec_codigo,sec_catalogo,
    sec_fecha,sec_estado,sec_documento,sec_respuesta,desp_sec_codigo,
    desp_sec_catalogo,desp_sec_fecha,desp_sec_estado,desp_sec_documento,
    desp_sec_respuesta,accion,usuario,hora)  values (antes.sec_codigo 
    ,antes.sec_catalogo ,antes.sec_fecha ,antes.sec_estado ,antes.sec_documento 
    ,antes.sec_respuesta ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_fp_seguridad update on "informix"
    .fp_seguridad referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fp_seguridad (sec_codigo,sec_catalogo,
    sec_fecha,sec_estado,sec_documento,sec_respuesta,desp_sec_codigo,
    desp_sec_catalogo,desp_sec_fecha,desp_sec_estado,desp_sec_documento,
    desp_sec_respuesta,accion,usuario,hora)  values (antes.sec_codigo 
    ,antes.sec_catalogo ,antes.sec_fecha ,antes.sec_estado ,antes.sec_documento 
    ,antes.sec_respuesta ,luego.sec_codigo ,luego.sec_catalogo ,luego.sec_fecha 
    ,luego.sec_estado ,luego.sec_documento ,luego.sec_respuesta ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_etnias insert on "informix".etnias 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_etnias (etn_id,etn_desc,etn_clase,
    etn_situacion,desp_etn_id,desp_etn_desc,desp_etn_clase,desp_etn_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.etn_id ,luego.etn_desc 
    ,luego.etn_clase ,luego.etn_situacion ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_etnias delete on "informix".etnias 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_etnias (etn_id,etn_desc,etn_clase,
    etn_situacion,desp_etn_id,desp_etn_desc,desp_etn_clase,desp_etn_situacion,
    accion,usuario,hora)  values (antes.etn_id ,antes.etn_desc ,antes.etn_clase 
    ,antes.etn_situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_etnias update on "informix".etnias 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_etnias (etn_id,etn_desc,etn_clase,
    etn_situacion,desp_etn_id,desp_etn_desc,desp_etn_clase,desp_etn_situacion,
    accion,usuario,hora)  values (antes.etn_id ,antes.etn_desc ,antes.etn_clase 
    ,antes.etn_situacion ,luego.etn_id ,luego.etn_desc ,luego.etn_clase 
    ,luego.etn_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_act_etnia insert on "informix".act_etnia 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_act_etnia (et_cat,et_etnia,
    et_fec,et_leng,et_clase,et_sit,desp_et_cat,desp_et_etnia,desp_et_fec,
    desp_et_leng,desp_et_clase,desp_et_sit,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,luego.et_cat ,luego.et_etnia ,luego.et_fec 
    ,luego.et_leng ,luego.et_clase ,luego.et_sit ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_act_etnia delete on "informix".act_etnia 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_act_etnia (et_cat,et_etnia,
    et_fec,et_leng,et_clase,et_sit,desp_et_cat,desp_et_etnia,desp_et_fec,
    desp_et_leng,desp_et_clase,desp_et_sit,accion,usuario,hora)  values 
    (antes.et_cat ,antes.et_etnia ,antes.et_fec ,antes.et_leng ,antes.et_clase 
    ,antes.et_sit ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_act_etnia update on "informix".act_etnia 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_act_etnia (et_cat,et_etnia,
    et_fec,et_leng,et_clase,et_sit,desp_et_cat,desp_et_etnia,desp_et_fec,
    desp_et_leng,desp_et_clase,desp_et_sit,accion,usuario,hora)  values 
    (antes.et_cat ,antes.et_etnia ,antes.et_fec ,antes.et_leng ,antes.et_clase 
    ,antes.et_sit ,luego.et_cat ,luego.et_etnia ,luego.et_fec ,luego.et_leng 
    ,luego.et_clase ,luego.et_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_ep_mper insert on "informix".ep_mper 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ep_mper (per_control,per_catalogo,
    per_serie,per_grado,per_arma,per_nom1,per_nom2,per_ape1,per_ape2,
    per_ape3,per_ced_ord,per_ced_reg,per_fec_ext_ced,per_ext_ced_lugar,
    per_est_civil,per_direccion,per_zona,per_dir_lugar,per_telefono,per_sexo,
    per_fec_nac,per_nac_lugar,per_promocion,per_afil_ipm,per_sangre,per_antiguedad,
    per_bienal,per_plaza,per_desc_empleo,per_fec_nomb,per_ord_gral,per_punto_og,
    per_situacion,per_prima_prof,per_dpi,per_cambio,per_fecambio,desp_per_control,
    desp_per_catalogo,desp_per_serie,desp_per_grado,desp_per_arma,desp_per_nom1,
    desp_per_nom2,desp_per_ape1,desp_per_ape2,desp_per_ape3,desp_per_ced_ord,
    desp_per_ced_reg,desp_per_fec_ext_ced,desp_per_ext_ced_lugar,desp_per_est_civil,
    desp_per_direccion,desp_per_zona,desp_per_dir_lugar,desp_per_telefono,
    desp_per_sexo,desp_per_fec_nac,desp_per_nac_lugar,desp_per_promocion,
    desp_per_afil_ipm,desp_per_sangre,desp_per_antiguedad,desp_per_bienal,
    desp_per_plaza,desp_per_desc_empleo,desp_per_fec_nomb,desp_per_ord_gral,
    desp_per_punto_og,desp_per_situacion,desp_per_prima_prof,desp_per_dpi,
    desp_per_cambio,desp_per_fecambio,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.per_control ,luego.per_catalogo 
    ,luego.per_serie ,luego.per_grado ,luego.per_arma ,luego.per_nom1 
    ,luego.per_nom2 ,luego.per_ape1 ,luego.per_ape2 ,luego.per_ape3 ,
    luego.per_ced_ord ,luego.per_ced_reg ,luego.per_fec_ext_ced ,luego.per_ext_ced_lugar 
    ,luego.per_est_civil ,luego.per_direccion ,luego.per_zona ,luego.per_dir_lugar 
    ,luego.per_telefono ,luego.per_sexo ,luego.per_fec_nac ,luego.per_nac_lugar 
    ,luego.per_promocion ,luego.per_afil_ipm ,luego.per_sangre ,luego.per_antiguedad 
    ,luego.per_bienal ,luego.per_plaza ,luego.per_desc_empleo ,luego.per_fec_nomb 
    ,luego.per_ord_gral ,luego.per_punto_og ,luego.per_situacion ,luego.per_prima_prof 
    ,luego.per_dpi ,luego.per_cambio ,luego.per_fecambio ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_ep_mper delete on "informix".ep_mper 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ep_mper (per_control,per_catalogo,
    per_serie,per_grado,per_arma,per_nom1,per_nom2,per_ape1,per_ape2,
    per_ape3,per_ced_ord,per_ced_reg,per_fec_ext_ced,per_ext_ced_lugar,
    per_est_civil,per_direccion,per_zona,per_dir_lugar,per_telefono,per_sexo,
    per_fec_nac,per_nac_lugar,per_promocion,per_afil_ipm,per_sangre,per_antiguedad,
    per_bienal,per_plaza,per_desc_empleo,per_fec_nomb,per_ord_gral,per_punto_og,
    per_situacion,per_prima_prof,per_dpi,per_cambio,per_fecambio,desp_per_control,
    desp_per_catalogo,desp_per_serie,desp_per_grado,desp_per_arma,desp_per_nom1,
    desp_per_nom2,desp_per_ape1,desp_per_ape2,desp_per_ape3,desp_per_ced_ord,
    desp_per_ced_reg,desp_per_fec_ext_ced,desp_per_ext_ced_lugar,desp_per_est_civil,
    desp_per_direccion,desp_per_zona,desp_per_dir_lugar,desp_per_telefono,
    desp_per_sexo,desp_per_fec_nac,desp_per_nac_lugar,desp_per_promocion,
    desp_per_afil_ipm,desp_per_sangre,desp_per_antiguedad,desp_per_bienal,
    desp_per_plaza,desp_per_desc_empleo,desp_per_fec_nomb,desp_per_ord_gral,
    desp_per_punto_og,desp_per_situacion,desp_per_prima_prof,desp_per_dpi,
    desp_per_cambio,desp_per_fecambio,accion,usuario,hora)  values (antes.per_control 
    ,antes.per_catalogo ,antes.per_serie ,antes.per_grado ,antes.per_arma 
    ,antes.per_nom1 ,antes.per_nom2 ,antes.per_ape1 ,antes.per_ape2 ,
    antes.per_ape3 ,antes.per_ced_ord ,antes.per_ced_reg ,antes.per_fec_ext_ced 
    ,antes.per_ext_ced_lugar ,antes.per_est_civil ,antes.per_direccion 
    ,antes.per_zona ,antes.per_dir_lugar ,antes.per_telefono ,antes.per_sexo 
    ,antes.per_fec_nac ,antes.per_nac_lugar ,antes.per_promocion ,antes.per_afil_ipm 
    ,antes.per_sangre ,antes.per_antiguedad ,antes.per_bienal ,antes.per_plaza 
    ,antes.per_desc_empleo ,antes.per_fec_nomb ,antes.per_ord_gral ,antes.per_punto_og 
    ,antes.per_situacion ,antes.per_prima_prof ,antes.per_dpi ,antes.per_cambio 
    ,antes.per_fecambio ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ep_mper update on "informix".ep_mper 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ep_mper (per_control,per_catalogo,
    per_serie,per_grado,per_arma,per_nom1,per_nom2,per_ape1,per_ape2,
    per_ape3,per_ced_ord,per_ced_reg,per_fec_ext_ced,per_ext_ced_lugar,
    per_est_civil,per_direccion,per_zona,per_dir_lugar,per_telefono,per_sexo,
    per_fec_nac,per_nac_lugar,per_promocion,per_afil_ipm,per_sangre,per_antiguedad,
    per_bienal,per_plaza,per_desc_empleo,per_fec_nomb,per_ord_gral,per_punto_og,
    per_situacion,per_prima_prof,per_dpi,per_cambio,per_fecambio,desp_per_control,
    desp_per_catalogo,desp_per_serie,desp_per_grado,desp_per_arma,desp_per_nom1,
    desp_per_nom2,desp_per_ape1,desp_per_ape2,desp_per_ape3,desp_per_ced_ord,
    desp_per_ced_reg,desp_per_fec_ext_ced,desp_per_ext_ced_lugar,desp_per_est_civil,
    desp_per_direccion,desp_per_zona,desp_per_dir_lugar,desp_per_telefono,
    desp_per_sexo,desp_per_fec_nac,desp_per_nac_lugar,desp_per_promocion,
    desp_per_afil_ipm,desp_per_sangre,desp_per_antiguedad,desp_per_bienal,
    desp_per_plaza,desp_per_desc_empleo,desp_per_fec_nomb,desp_per_ord_gral,
    desp_per_punto_og,desp_per_situacion,desp_per_prima_prof,desp_per_dpi,
    desp_per_cambio,desp_per_fecambio,accion,usuario,hora)  values (antes.per_control 
    ,antes.per_catalogo ,antes.per_serie ,antes.per_grado ,antes.per_arma 
    ,antes.per_nom1 ,antes.per_nom2 ,antes.per_ape1 ,antes.per_ape2 ,
    antes.per_ape3 ,antes.per_ced_ord ,antes.per_ced_reg ,antes.per_fec_ext_ced 
    ,antes.per_ext_ced_lugar ,antes.per_est_civil ,antes.per_direccion 
    ,antes.per_zona ,antes.per_dir_lugar ,antes.per_telefono ,antes.per_sexo 
    ,antes.per_fec_nac ,antes.per_nac_lugar ,antes.per_promocion ,antes.per_afil_ipm 
    ,antes.per_sangre ,antes.per_antiguedad ,antes.per_bienal ,antes.per_plaza 
    ,antes.per_desc_empleo ,antes.per_fec_nomb ,antes.per_ord_gral ,antes.per_punto_og 
    ,antes.per_situacion ,antes.per_prima_prof ,antes.per_dpi ,antes.per_cambio 
    ,antes.per_fecambio ,luego.per_control ,luego.per_catalogo ,luego.per_serie 
    ,luego.per_grado ,luego.per_arma ,luego.per_nom1 ,luego.per_nom2 
    ,luego.per_ape1 ,luego.per_ape2 ,luego.per_ape3 ,luego.per_ced_ord 
    ,luego.per_ced_reg ,luego.per_fec_ext_ced ,luego.per_ext_ced_lugar 
    ,luego.per_est_civil ,luego.per_direccion ,luego.per_zona ,luego.per_dir_lugar 
    ,luego.per_telefono ,luego.per_sexo ,luego.per_fec_nac ,luego.per_nac_lugar 
    ,luego.per_promocion ,luego.per_afil_ipm ,luego.per_sangre ,luego.per_antiguedad 
    ,luego.per_bienal ,luego.per_plaza ,luego.per_desc_empleo ,luego.per_fec_nomb 
    ,luego.per_ord_gral ,luego.per_punto_og ,luego.per_situacion ,luego.per_prima_prof 
    ,luego.per_dpi ,luego.per_cambio ,luego.per_fecambio ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_fp_respuesta insert on "informix"
    .fp_respuesta referencing new as luego
    for each row
        (
        insert into "informix".aud_fp_respuesta (res_codigo,res_titulo,
    res_descripcion,res_tamanio,res_tipo,res_nombre_archivo,res_fec,res_status,
    res_catalogo,res_dependencia,desp_res_codigo,desp_res_titulo,desp_res_descripcion,
    desp_res_tamanio,desp_res_tipo,desp_res_nombre_archivo,desp_res_fec,
    desp_res_status,desp_res_catalogo,desp_res_dependencia,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.res_codigo 
    ,luego.res_titulo ,luego.res_descripcion ,luego.res_tamanio ,luego.res_tipo 
    ,luego.res_nombre_archivo ,luego.res_fec ,luego.res_status ,luego.res_catalogo 
    ,luego.res_dependencia ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_fp_respuesta delete on "informix"
    .fp_respuesta referencing old as antes
    for each row
        (
        insert into "informix".aud_fp_respuesta (res_codigo,res_titulo,
    res_descripcion,res_tamanio,res_tipo,res_nombre_archivo,res_fec,res_status,
    res_catalogo,res_dependencia,desp_res_codigo,desp_res_titulo,desp_res_descripcion,
    desp_res_tamanio,desp_res_tipo,desp_res_nombre_archivo,desp_res_fec,
    desp_res_status,desp_res_catalogo,desp_res_dependencia,accion,usuario,
    hora)  values (antes.res_codigo ,antes.res_titulo ,antes.res_descripcion 
    ,antes.res_tamanio ,antes.res_tipo ,antes.res_nombre_archivo ,antes.res_fec 
    ,antes.res_status ,antes.res_catalogo ,antes.res_dependencia ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_fp_respuesta update on "informix"
    .fp_respuesta referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fp_respuesta (res_codigo,res_titulo,
    res_descripcion,res_tamanio,res_tipo,res_nombre_archivo,res_fec,res_status,
    res_catalogo,res_dependencia,desp_res_codigo,desp_res_titulo,desp_res_descripcion,
    desp_res_tamanio,desp_res_tipo,desp_res_nombre_archivo,desp_res_fec,
    desp_res_status,desp_res_catalogo,desp_res_dependencia,accion,usuario,
    hora)  values (antes.res_codigo ,antes.res_titulo ,antes.res_descripcion 
    ,antes.res_tamanio ,antes.res_tipo ,antes.res_nombre_archivo ,antes.res_fec 
    ,antes.res_status ,antes.res_catalogo ,antes.res_dependencia ,luego.res_codigo 
    ,luego.res_titulo ,luego.res_descripcion ,luego.res_tamanio ,luego.res_tipo 
    ,luego.res_nombre_archivo ,luego.res_fec ,luego.res_status ,luego.res_catalogo 
    ,luego.res_dependencia ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_fag_tip_aeronave insert on "informix"
    .fag_tip_aeronave referencing new as luego
    for each row
        (
        insert into "informix".aud_fag_tip_aeronave (aer_tip_registro,
    aer_desc_aeronave,aer_tip_ala,aer_tip_situacion,desp_aer_tip_registro,
    desp_aer_desc_aeronave,desp_aer_tip_ala,desp_aer_tip_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.aer_tip_registro ,luego.aer_desc_aeronave 
    ,luego.aer_tip_ala ,luego.aer_tip_situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_fag_tip_aeronave delete on "informix"
    .fag_tip_aeronave referencing old as antes
    for each row
        (
        insert into "informix".aud_fag_tip_aeronave (aer_tip_registro,
    aer_desc_aeronave,aer_tip_ala,aer_tip_situacion,desp_aer_tip_registro,
    desp_aer_desc_aeronave,desp_aer_tip_ala,desp_aer_tip_situacion,accion,
    usuario,hora)  values (antes.aer_tip_registro ,antes.aer_desc_aeronave 
    ,antes.aer_tip_ala ,antes.aer_tip_situacion ,NULL ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_fag_tip_aeronave update on "informix"
    .fag_tip_aeronave referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fag_tip_aeronave (aer_tip_registro,
    aer_desc_aeronave,aer_tip_ala,aer_tip_situacion,desp_aer_tip_registro,
    desp_aer_desc_aeronave,desp_aer_tip_ala,desp_aer_tip_situacion,accion,
    usuario,hora)  values (antes.aer_tip_registro ,antes.aer_desc_aeronave 
    ,antes.aer_tip_ala ,antes.aer_tip_situacion ,luego.aer_tip_registro 
    ,luego.aer_desc_aeronave ,luego.aer_tip_ala ,luego.aer_tip_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fag_aero_gt insert on "informix"
    .fag_aero_gt referencing new as luego
    for each row
        (
        insert into "informix".aud_fag_aero_gt (aero_id,aero_matricula,
    aero_tip_aeronave,aero_hrs_voladas,aero_situacion,desp_aero_id,desp_aero_matricula,
    desp_aero_tip_aeronave,desp_aero_hrs_voladas,desp_aero_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.aero_id ,luego.aero_matricula 
    ,luego.aero_tip_aeronave ,luego.aero_hrs_voladas ,luego.aero_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fag_aero_gt delete on "informix"
    .fag_aero_gt referencing old as antes
    for each row
        (
        insert into "informix".aud_fag_aero_gt (aero_id,aero_matricula,
    aero_tip_aeronave,aero_hrs_voladas,aero_situacion,desp_aero_id,desp_aero_matricula,
    desp_aero_tip_aeronave,desp_aero_hrs_voladas,desp_aero_situacion,
    accion,usuario,hora)  values (antes.aero_id ,antes.aero_matricula 
    ,antes.aero_tip_aeronave ,antes.aero_hrs_voladas ,antes.aero_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fag_aero_gt update on "informix"
    .fag_aero_gt referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fag_aero_gt (aero_id,aero_matricula,
    aero_tip_aeronave,aero_hrs_voladas,aero_situacion,desp_aero_id,desp_aero_matricula,
    desp_aero_tip_aeronave,desp_aero_hrs_voladas,desp_aero_situacion,
    accion,usuario,hora)  values (antes.aero_id ,antes.aero_matricula 
    ,antes.aero_tip_aeronave ,antes.aero_hrs_voladas ,antes.aero_situacion 
    ,luego.aero_id ,luego.aero_matricula ,luego.aero_tip_aeronave ,luego.aero_hrs_voladas 
    ,luego.aero_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fag_dep_estado insert on "informix"
    .fag_dep_estado referencing new as luego
    for each row
        (
        insert into "informix".aud_fag_dep_estado (dep_est_registro,
    dep_est_desc_lg,dep_est_desc_ct,dep_est_situacion,desp_dep_est_registro,
    desp_dep_est_desc_lg,desp_dep_est_desc_ct,desp_dep_est_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.dep_est_registro 
    ,luego.dep_est_desc_lg ,luego.dep_est_desc_ct ,luego.dep_est_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fag_dep_estado delete on "informix"
    .fag_dep_estado referencing old as antes
    for each row
        (
        insert into "informix".aud_fag_dep_estado (dep_est_registro,
    dep_est_desc_lg,dep_est_desc_ct,dep_est_situacion,desp_dep_est_registro,
    desp_dep_est_desc_lg,desp_dep_est_desc_ct,desp_dep_est_situacion,
    accion,usuario,hora)  values (antes.dep_est_registro ,antes.dep_est_desc_lg 
    ,antes.dep_est_desc_ct ,antes.dep_est_situacion ,NULL ,'' ,'' ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fag_dep_estado update on "informix"
    .fag_dep_estado referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fag_dep_estado (dep_est_registro,
    dep_est_desc_lg,dep_est_desc_ct,dep_est_situacion,desp_dep_est_registro,
    desp_dep_est_desc_lg,desp_dep_est_desc_ct,desp_dep_est_situacion,
    accion,usuario,hora)  values (antes.dep_est_registro ,antes.dep_est_desc_lg 
    ,antes.dep_est_desc_ct ,antes.dep_est_situacion ,luego.dep_est_registro 
    ,luego.dep_est_desc_lg ,luego.dep_est_desc_ct ,luego.dep_est_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fag_hrs_historial_vuelo insert 
    on "informix".fag_hrs_historial_vuelo referencing new as luego
    
    for each row
        (
        insert into "informix".aud_fag_hrs_historial_vuelo (hist_catalogo,
    hist_hrs_dia,hist_hrs_noche,hist_hrs_nav,hist_hrs_instrum,hist_horas_total,
    hist_ala,hist_situacion,desp_hist_catalogo,desp_hist_hrs_dia,desp_hist_hrs_noche,
    desp_hist_hrs_nav,desp_hist_hrs_instrum,desp_hist_horas_total,desp_hist_ala,
    desp_hist_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,luego.hist_catalogo ,luego.hist_hrs_dia ,luego.hist_hrs_noche 
    ,luego.hist_hrs_nav ,luego.hist_hrs_instrum ,luego.hist_horas_total 
    ,luego.hist_ala ,luego.hist_situacion ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_fag_hrs_historial_vuelo delete 
    on "informix".fag_hrs_historial_vuelo referencing old as antes
    
    for each row
        (
        insert into "informix".aud_fag_hrs_historial_vuelo (hist_catalogo,
    hist_hrs_dia,hist_hrs_noche,hist_hrs_nav,hist_hrs_instrum,hist_horas_total,
    hist_ala,hist_situacion,desp_hist_catalogo,desp_hist_hrs_dia,desp_hist_hrs_noche,
    desp_hist_hrs_nav,desp_hist_hrs_instrum,desp_hist_horas_total,desp_hist_ala,
    desp_hist_situacion,accion,usuario,hora)  values (antes.hist_catalogo 
    ,antes.hist_hrs_dia ,antes.hist_hrs_noche ,antes.hist_hrs_nav ,antes.hist_hrs_instrum 
    ,antes.hist_horas_total ,antes.hist_ala ,antes.hist_situacion ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fag_hrs_historial_vuelo update 
    on "informix".fag_hrs_historial_vuelo referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_fag_hrs_historial_vuelo (hist_catalogo,
    hist_hrs_dia,hist_hrs_noche,hist_hrs_nav,hist_hrs_instrum,hist_horas_total,
    hist_ala,hist_situacion,desp_hist_catalogo,desp_hist_hrs_dia,desp_hist_hrs_noche,
    desp_hist_hrs_nav,desp_hist_hrs_instrum,desp_hist_horas_total,desp_hist_ala,
    desp_hist_situacion,accion,usuario,hora)  values (antes.hist_catalogo 
    ,antes.hist_hrs_dia ,antes.hist_hrs_noche ,antes.hist_hrs_nav ,antes.hist_hrs_instrum 
    ,antes.hist_horas_total ,antes.hist_ala ,antes.hist_situacion ,luego.hist_catalogo 
    ,luego.hist_hrs_dia ,luego.hist_hrs_noche ,luego.hist_hrs_nav ,luego.hist_hrs_instrum 
    ,luego.hist_horas_total ,luego.hist_ala ,luego.hist_situacion ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fag_rep_mision_vuelo insert on 
    "informix".fag_rep_mision_vuelo referencing new as luego
    for each row
        (
        insert into "informix".aud_fag_rep_mision_vuelo (rep_registro,
    rep_fecha,rep_matricula,rep_cat_piloto_mili,rep_piloto_civ,rep_cat_copiloto_mili,
    rep_copiloto_civ,rep_cat_3ernav_mili,rep_3ernav_civ,rep_invitado,
    rep_hrs_voladas_dia,rep_hrs_voladas_noche,rep_hrs_voladas_nvg,rep_hrs_voladas_instrum,
    rep_hrs_voladas_total,rep_dep_ejercito,rep_dep_estado,rep_cant_pasa,
    rep_nom_pasa,rep_obs,rep_cat_of_op,rep_situacion,desp_rep_registro,
    desp_rep_fecha,desp_rep_matricula,desp_rep_cat_piloto_mili,desp_rep_piloto_civ,
    desp_rep_cat_copiloto_mili,desp_rep_copiloto_civ,desp_rep_cat_3ernav_mili,
    desp_rep_3ernav_civ,desp_rep_invitado,desp_rep_hrs_voladas_dia,desp_rep_hrs_voladas_noche,
    desp_rep_hrs_voladas_nvg,desp_rep_hrs_voladas_instrum,desp_rep_hrs_voladas_total,
    desp_rep_dep_ejercito,desp_rep_dep_estado,desp_rep_cant_pasa,desp_rep_nom_pasa,
    desp_rep_obs,desp_rep_cat_of_op,desp_rep_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,luego.rep_registro ,luego.rep_fecha ,luego.rep_matricula 
    ,luego.rep_cat_piloto_mili ,luego.rep_piloto_civ ,luego.rep_cat_copiloto_mili 
    ,luego.rep_copiloto_civ ,luego.rep_cat_3ernav_mili ,luego.rep_3ernav_civ 
    ,luego.rep_invitado ,luego.rep_hrs_voladas_dia ,luego.rep_hrs_voladas_noche 
    ,luego.rep_hrs_voladas_nvg ,luego.rep_hrs_voladas_instrum ,luego.rep_hrs_voladas_total 
    ,luego.rep_dep_ejercito ,luego.rep_dep_estado ,luego.rep_cant_pasa 
    ,luego.rep_nom_pasa ,luego.rep_obs ,luego.rep_cat_of_op ,luego.rep_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fag_rep_mision_vuelo delete on 
    "informix".fag_rep_mision_vuelo referencing old as antes
    for each row
        (
        insert into "informix".aud_fag_rep_mision_vuelo (rep_registro,
    rep_fecha,rep_matricula,rep_cat_piloto_mili,rep_piloto_civ,rep_cat_copiloto_mili,
    rep_copiloto_civ,rep_cat_3ernav_mili,rep_3ernav_civ,rep_invitado,
    rep_hrs_voladas_dia,rep_hrs_voladas_noche,rep_hrs_voladas_nvg,rep_hrs_voladas_instrum,
    rep_hrs_voladas_total,rep_dep_ejercito,rep_dep_estado,rep_cant_pasa,
    rep_nom_pasa,rep_obs,rep_cat_of_op,rep_situacion,desp_rep_registro,
    desp_rep_fecha,desp_rep_matricula,desp_rep_cat_piloto_mili,desp_rep_piloto_civ,
    desp_rep_cat_copiloto_mili,desp_rep_copiloto_civ,desp_rep_cat_3ernav_mili,
    desp_rep_3ernav_civ,desp_rep_invitado,desp_rep_hrs_voladas_dia,desp_rep_hrs_voladas_noche,
    desp_rep_hrs_voladas_nvg,desp_rep_hrs_voladas_instrum,desp_rep_hrs_voladas_total,
    desp_rep_dep_ejercito,desp_rep_dep_estado,desp_rep_cant_pasa,desp_rep_nom_pasa,
    desp_rep_obs,desp_rep_cat_of_op,desp_rep_situacion,accion,usuario,
    hora)  values (antes.rep_registro ,antes.rep_fecha ,antes.rep_matricula 
    ,antes.rep_cat_piloto_mili ,antes.rep_piloto_civ ,antes.rep_cat_copiloto_mili 
    ,antes.rep_copiloto_civ ,antes.rep_cat_3ernav_mili ,antes.rep_3ernav_civ 
    ,antes.rep_invitado ,antes.rep_hrs_voladas_dia ,antes.rep_hrs_voladas_noche 
    ,antes.rep_hrs_voladas_nvg ,antes.rep_hrs_voladas_instrum ,antes.rep_hrs_voladas_total 
    ,antes.rep_dep_ejercito ,antes.rep_dep_estado ,antes.rep_cant_pasa 
    ,antes.rep_nom_pasa ,antes.rep_obs ,antes.rep_cat_of_op ,antes.rep_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fag_rep_mision_vuelo update on 
    "informix".fag_rep_mision_vuelo referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_fag_rep_mision_vuelo (rep_registro,
    rep_fecha,rep_matricula,rep_cat_piloto_mili,rep_piloto_civ,rep_cat_copiloto_mili,
    rep_copiloto_civ,rep_cat_3ernav_mili,rep_3ernav_civ,rep_invitado,
    rep_hrs_voladas_dia,rep_hrs_voladas_noche,rep_hrs_voladas_nvg,rep_hrs_voladas_instrum,
    rep_hrs_voladas_total,rep_dep_ejercito,rep_dep_estado,rep_cant_pasa,
    rep_nom_pasa,rep_obs,rep_cat_of_op,rep_situacion,desp_rep_registro,
    desp_rep_fecha,desp_rep_matricula,desp_rep_cat_piloto_mili,desp_rep_piloto_civ,
    desp_rep_cat_copiloto_mili,desp_rep_copiloto_civ,desp_rep_cat_3ernav_mili,
    desp_rep_3ernav_civ,desp_rep_invitado,desp_rep_hrs_voladas_dia,desp_rep_hrs_voladas_noche,
    desp_rep_hrs_voladas_nvg,desp_rep_hrs_voladas_instrum,desp_rep_hrs_voladas_total,
    desp_rep_dep_ejercito,desp_rep_dep_estado,desp_rep_cant_pasa,desp_rep_nom_pasa,
    desp_rep_obs,desp_rep_cat_of_op,desp_rep_situacion,accion,usuario,
    hora)  values (antes.rep_registro ,antes.rep_fecha ,antes.rep_matricula 
    ,antes.rep_cat_piloto_mili ,antes.rep_piloto_civ ,antes.rep_cat_copiloto_mili 
    ,antes.rep_copiloto_civ ,antes.rep_cat_3ernav_mili ,antes.rep_3ernav_civ 
    ,antes.rep_invitado ,antes.rep_hrs_voladas_dia ,antes.rep_hrs_voladas_noche 
    ,antes.rep_hrs_voladas_nvg ,antes.rep_hrs_voladas_instrum ,antes.rep_hrs_voladas_total 
    ,antes.rep_dep_ejercito ,antes.rep_dep_estado ,antes.rep_cant_pasa 
    ,antes.rep_nom_pasa ,antes.rep_obs ,antes.rep_cat_of_op ,antes.rep_situacion 
    ,luego.rep_registro ,luego.rep_fecha ,luego.rep_matricula ,luego.rep_cat_piloto_mili 
    ,luego.rep_piloto_civ ,luego.rep_cat_copiloto_mili ,luego.rep_copiloto_civ 
    ,luego.rep_cat_3ernav_mili ,luego.rep_3ernav_civ ,luego.rep_invitado 
    ,luego.rep_hrs_voladas_dia ,luego.rep_hrs_voladas_noche ,luego.rep_hrs_voladas_nvg 
    ,luego.rep_hrs_voladas_instrum ,luego.rep_hrs_voladas_total ,luego.rep_dep_ejercito 
    ,luego.rep_dep_estado ,luego.rep_cant_pasa ,luego.rep_nom_pasa ,luego.rep_obs 
    ,luego.rep_cat_of_op ,luego.rep_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_fag_dest_vuelos insert on "informix"
    .fag_dest_vuelos referencing new as luego
    for each row
        (
        insert into "informix".aud_fag_dest_vuelos (dest_registro,
    dest_pais,dest_depto,dest_mun,dest_otros,dest_reg_rmv,desp_dest_registro,
    desp_dest_pais,desp_dest_depto,desp_dest_mun,desp_dest_otros,desp_dest_reg_rmv,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.dest_registro 
    ,luego.dest_pais ,luego.dest_depto ,luego.dest_mun ,luego.dest_otros 
    ,luego.dest_reg_rmv ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fag_dest_vuelos delete on "informix"
    .fag_dest_vuelos referencing old as antes
    for each row
        (
        insert into "informix".aud_fag_dest_vuelos (dest_registro,
    dest_pais,dest_depto,dest_mun,dest_otros,dest_reg_rmv,desp_dest_registro,
    desp_dest_pais,desp_dest_depto,desp_dest_mun,desp_dest_otros,desp_dest_reg_rmv,
    accion,usuario,hora)  values (antes.dest_registro ,antes.dest_pais 
    ,antes.dest_depto ,antes.dest_mun ,antes.dest_otros ,antes.dest_reg_rmv 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fag_dest_vuelos update on "informix"
    .fag_dest_vuelos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fag_dest_vuelos (dest_registro,
    dest_pais,dest_depto,dest_mun,dest_otros,dest_reg_rmv,desp_dest_registro,
    desp_dest_pais,desp_dest_depto,desp_dest_mun,desp_dest_otros,desp_dest_reg_rmv,
    accion,usuario,hora)  values (antes.dest_registro ,antes.dest_pais 
    ,antes.dest_depto ,antes.dest_mun ,antes.dest_otros ,antes.dest_reg_rmv 
    ,luego.dest_registro ,luego.dest_pais ,luego.dest_depto ,luego.dest_mun 
    ,luego.dest_otros ,luego.dest_reg_rmv ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_fag_rep_consumo_combustible insert 
    on "informix".fag_rep_consumo_combustible referencing new 
    as luego
    for each row
        (
        insert into "informix".aud_fag_rep_consumo_combustible 
    (comb_id,comb_cantidad,comb_reg_vuelo,desp_comb_id,desp_comb_cantidad,
    desp_comb_reg_vuelo,accion,usuario,hora)  values (NULL ,'' ,'' ,luego.comb_id 
    ,luego.comb_cantidad ,luego.comb_reg_vuelo ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_fag_rep_consumo_combustible delete 
    on "informix".fag_rep_consumo_combustible referencing old 
    as antes
    for each row
        (
        insert into "informix".aud_fag_rep_consumo_combustible 
    (comb_id,comb_cantidad,comb_reg_vuelo,desp_comb_id,desp_comb_cantidad,
    desp_comb_reg_vuelo,accion,usuario,hora)  values (antes.comb_id ,
    antes.comb_cantidad ,antes.comb_reg_vuelo ,NULL ,'' ,'' ,'D' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".act_fag_rep_consumo_combustible update 
    on "informix".fag_rep_consumo_combustible referencing old 
    as antes new as luego
    for each row
        (
        insert into "informix".aud_fag_rep_consumo_combustible 
    (comb_id,comb_cantidad,comb_reg_vuelo,desp_comb_id,desp_comb_cantidad,
    desp_comb_reg_vuelo,accion,usuario,hora)  values (antes.comb_id ,
    antes.comb_cantidad ,antes.comb_reg_vuelo ,luego.comb_id ,luego.comb_cantidad 
    ,luego.comb_reg_vuelo ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fag_vuelo_mision insert on "informix"
    .fag_vuelo_mision referencing new as luego
    for each row
        (
        insert into "informix".aud_fag_vuelo_mision (mision_id,
    mision_reco,mision_transporte,mision_ferry,mision_ev_med,mision_cobertura,
    mision_abasto,mision_pist_clandest,mision_lanz_paraca,mision_areas_front,
    mision_sofoc_incend,mision_desas_natur,mision_comb_narco,mision_instruccion,
    mision_manto,mision_emerg_nac,mision_det_emerg,mision_estandarizacion,
    mision_patrulla,mision_registro_vuelo,mision_hrs,mision_situacion,
    desp_mision_id,desp_mision_reco,desp_mision_transporte,desp_mision_ferry,
    desp_mision_ev_med,desp_mision_cobertura,desp_mision_abasto,desp_mision_pist_clandest,
    desp_mision_lanz_paraca,desp_mision_areas_front,desp_mision_sofoc_incend,
    desp_mision_desas_natur,desp_mision_comb_narco,desp_mision_instruccion,
    desp_mision_manto,desp_mision_emerg_nac,desp_mision_det_emerg,desp_mision_estandarizacion,
    desp_mision_patrulla,desp_mision_registro_vuelo,desp_mision_hrs,desp_mision_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.mision_id ,luego.mision_reco 
    ,luego.mision_transporte ,luego.mision_ferry ,luego.mision_ev_med 
    ,luego.mision_cobertura ,luego.mision_abasto ,luego.mision_pist_clandest 
    ,luego.mision_lanz_paraca ,luego.mision_areas_front ,luego.mision_sofoc_incend 
    ,luego.mision_desas_natur ,luego.mision_comb_narco ,luego.mision_instruccion 
    ,luego.mision_manto ,luego.mision_emerg_nac ,luego.mision_det_emerg 
    ,luego.mision_estandarizacion ,luego.mision_patrulla ,luego.mision_registro_vuelo 
    ,luego.mision_hrs ,luego.mision_situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_fag_vuelo_mision delete on "informix"
    .fag_vuelo_mision referencing old as antes
    for each row
        (
        insert into "informix".aud_fag_vuelo_mision (mision_id,
    mision_reco,mision_transporte,mision_ferry,mision_ev_med,mision_cobertura,
    mision_abasto,mision_pist_clandest,mision_lanz_paraca,mision_areas_front,
    mision_sofoc_incend,mision_desas_natur,mision_comb_narco,mision_instruccion,
    mision_manto,mision_emerg_nac,mision_det_emerg,mision_estandarizacion,
    mision_patrulla,mision_registro_vuelo,mision_hrs,mision_situacion,
    desp_mision_id,desp_mision_reco,desp_mision_transporte,desp_mision_ferry,
    desp_mision_ev_med,desp_mision_cobertura,desp_mision_abasto,desp_mision_pist_clandest,
    desp_mision_lanz_paraca,desp_mision_areas_front,desp_mision_sofoc_incend,
    desp_mision_desas_natur,desp_mision_comb_narco,desp_mision_instruccion,
    desp_mision_manto,desp_mision_emerg_nac,desp_mision_det_emerg,desp_mision_estandarizacion,
    desp_mision_patrulla,desp_mision_registro_vuelo,desp_mision_hrs,desp_mision_situacion,
    accion,usuario,hora)  values (antes.mision_id ,antes.mision_reco 
    ,antes.mision_transporte ,antes.mision_ferry ,antes.mision_ev_med 
    ,antes.mision_cobertura ,antes.mision_abasto ,antes.mision_pist_clandest 
    ,antes.mision_lanz_paraca ,antes.mision_areas_front ,antes.mision_sofoc_incend 
    ,antes.mision_desas_natur ,antes.mision_comb_narco ,antes.mision_instruccion 
    ,antes.mision_manto ,antes.mision_emerg_nac ,antes.mision_det_emerg 
    ,antes.mision_estandarizacion ,antes.mision_patrulla ,antes.mision_registro_vuelo 
    ,antes.mision_hrs ,antes.mision_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_fag_vuelo_mision update on "informix"
    .fag_vuelo_mision referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fag_vuelo_mision (mision_id,
    mision_reco,mision_transporte,mision_ferry,mision_ev_med,mision_cobertura,
    mision_abasto,mision_pist_clandest,mision_lanz_paraca,mision_areas_front,
    mision_sofoc_incend,mision_desas_natur,mision_comb_narco,mision_instruccion,
    mision_manto,mision_emerg_nac,mision_det_emerg,mision_estandarizacion,
    mision_patrulla,mision_registro_vuelo,mision_hrs,mision_situacion,
    desp_mision_id,desp_mision_reco,desp_mision_transporte,desp_mision_ferry,
    desp_mision_ev_med,desp_mision_cobertura,desp_mision_abasto,desp_mision_pist_clandest,
    desp_mision_lanz_paraca,desp_mision_areas_front,desp_mision_sofoc_incend,
    desp_mision_desas_natur,desp_mision_comb_narco,desp_mision_instruccion,
    desp_mision_manto,desp_mision_emerg_nac,desp_mision_det_emerg,desp_mision_estandarizacion,
    desp_mision_patrulla,desp_mision_registro_vuelo,desp_mision_hrs,desp_mision_situacion,
    accion,usuario,hora)  values (antes.mision_id ,antes.mision_reco 
    ,antes.mision_transporte ,antes.mision_ferry ,antes.mision_ev_med 
    ,antes.mision_cobertura ,antes.mision_abasto ,antes.mision_pist_clandest 
    ,antes.mision_lanz_paraca ,antes.mision_areas_front ,antes.mision_sofoc_incend 
    ,antes.mision_desas_natur ,antes.mision_comb_narco ,antes.mision_instruccion 
    ,antes.mision_manto ,antes.mision_emerg_nac ,antes.mision_det_emerg 
    ,antes.mision_estandarizacion ,antes.mision_patrulla ,antes.mision_registro_vuelo 
    ,antes.mision_hrs ,antes.mision_situacion ,luego.mision_id ,luego.mision_reco 
    ,luego.mision_transporte ,luego.mision_ferry ,luego.mision_ev_med 
    ,luego.mision_cobertura ,luego.mision_abasto ,luego.mision_pist_clandest 
    ,luego.mision_lanz_paraca ,luego.mision_areas_front ,luego.mision_sofoc_incend 
    ,luego.mision_desas_natur ,luego.mision_comb_narco ,luego.mision_instruccion 
    ,luego.mision_manto ,luego.mision_emerg_nac ,luego.mision_det_emerg 
    ,luego.mision_estandarizacion ,luego.mision_patrulla ,luego.mision_registro_vuelo 
    ,luego.mision_hrs ,luego.mision_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_far_forma_pago insert on "informix"
    .far_forma_pago referencing new as luego
    for each row
        (
        insert into "informix".aud_far_forma_pago (form_id,form_desc,
    form_situacion,desp_form_id,desp_form_desc,desp_form_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.form_id ,luego.form_desc 
    ,luego.form_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_far_forma_pago delete on "informix"
    .far_forma_pago referencing old as antes
    for each row
        (
        insert into "informix".aud_far_forma_pago (form_id,form_desc,
    form_situacion,desp_form_id,desp_form_desc,desp_form_situacion,accion,
    usuario,hora)  values (antes.form_id ,antes.form_desc ,antes.form_situacion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_far_forma_pago update on "informix"
    .far_forma_pago referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_far_forma_pago (form_id,form_desc,
    form_situacion,desp_form_id,desp_form_desc,desp_form_situacion,accion,
    usuario,hora)  values (antes.form_id ,antes.form_desc ,antes.form_situacion 
    ,luego.form_id ,luego.form_desc ,luego.form_situacion ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_farma_dependencias_asignadas insert 
    on "informix".farma_dependencias_asignadas referencing new 
    as luego
    for each row
        (
        insert into "informix".aud_farma_dependencias_asignadas 
    (dep_asig_id,dep_asig_uni_eje,dep_asig_dep,dep_asig_sit,desp_dep_asig_id,
    desp_dep_asig_uni_eje,desp_dep_asig_dep,desp_dep_asig_sit,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.dep_asig_id ,luego.dep_asig_uni_eje 
    ,luego.dep_asig_dep ,luego.dep_asig_sit ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_farma_dependencias_asignadas delete 
    on "informix".farma_dependencias_asignadas referencing old 
    as antes
    for each row
        (
        insert into "informix".aud_farma_dependencias_asignadas 
    (dep_asig_id,dep_asig_uni_eje,dep_asig_dep,dep_asig_sit,desp_dep_asig_id,
    desp_dep_asig_uni_eje,desp_dep_asig_dep,desp_dep_asig_sit,accion,
    usuario,hora)  values (antes.dep_asig_id ,antes.dep_asig_uni_eje 
    ,antes.dep_asig_dep ,antes.dep_asig_sit ,NULL ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_farma_dependencias_asignadas update 
    on "informix".farma_dependencias_asignadas referencing old 
    as antes new as luego
    for each row
        (
        insert into "informix".aud_farma_dependencias_asignadas 
    (dep_asig_id,dep_asig_uni_eje,dep_asig_dep,dep_asig_sit,desp_dep_asig_id,
    desp_dep_asig_uni_eje,desp_dep_asig_dep,desp_dep_asig_sit,accion,
    usuario,hora)  values (antes.dep_asig_id ,antes.dep_asig_uni_eje 
    ,antes.dep_asig_dep ,antes.dep_asig_sit ,luego.dep_asig_id ,luego.dep_asig_uni_eje 
    ,luego.dep_asig_dep ,luego.dep_asig_sit ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_com_uniejec insert on "informix"
    .com_uniejec referencing new as luego
    for each row
        (
        insert into "informix".aud_com_uniejec (uni_codigo,uni_desc_lg,
    uni_desc_ct,uni_obs,uni_sit,desp_uni_codigo,desp_uni_desc_lg,desp_uni_desc_ct,
    desp_uni_obs,desp_uni_sit,accion,usuario,hora)  values (NULL ,'' ,
    '' ,'' ,'' ,luego.uni_codigo ,luego.uni_desc_lg ,luego.uni_desc_ct ,
    luego.uni_obs ,luego.uni_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_com_uniejec delete on "informix"
    .com_uniejec referencing old as antes
    for each row
        (
        insert into "informix".aud_com_uniejec (uni_codigo,uni_desc_lg,
    uni_desc_ct,uni_obs,uni_sit,desp_uni_codigo,desp_uni_desc_lg,desp_uni_desc_ct,
    desp_uni_obs,desp_uni_sit,accion,usuario,hora)  values (antes.uni_codigo 
    ,antes.uni_desc_lg ,antes.uni_desc_ct ,antes.uni_obs ,antes.uni_sit 
    ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_com_uniejec update on "informix"
    .com_uniejec referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_com_uniejec (uni_codigo,uni_desc_lg,
    uni_desc_ct,uni_obs,uni_sit,desp_uni_codigo,desp_uni_desc_lg,desp_uni_desc_ct,
    desp_uni_obs,desp_uni_sit,accion,usuario,hora)  values (antes.uni_codigo 
    ,antes.uni_desc_lg ,antes.uni_desc_ct ,antes.uni_obs ,antes.uni_sit 
    ,luego.uni_codigo ,luego.uni_desc_lg ,luego.uni_desc_ct ,luego.uni_obs 
    ,luego.uni_sit ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_far_contrato insert on "informix"
    .far_contrato referencing new as luego
    for each row
        (
        insert into "informix".aud_far_contrato (con_id,con_desc,
    con_situacion,con_observacion,desp_con_id,desp_con_desc,desp_con_situacion,
    desp_con_observacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' 
    ,luego.con_id ,luego.con_desc ,luego.con_situacion ,luego.con_observacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_far_contrato delete on "informix"
    .far_contrato referencing old as antes
    for each row
        (
        insert into "informix".aud_far_contrato (con_id,con_desc,
    con_situacion,con_observacion,desp_con_id,desp_con_desc,desp_con_situacion,
    desp_con_observacion,accion,usuario,hora)  values (antes.con_id ,
    antes.con_desc ,antes.con_situacion ,antes.con_observacion ,NULL 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_far_contrato update on "informix"
    .far_contrato referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_far_contrato (con_id,con_desc,
    con_situacion,con_observacion,desp_con_id,desp_con_desc,desp_con_situacion,
    desp_con_observacion,accion,usuario,hora)  values (antes.con_id ,
    antes.con_desc ,antes.con_situacion ,antes.con_observacion ,luego.con_id 
    ,luego.con_desc ,luego.con_situacion ,luego.con_observacion ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_far_proveedor insert on "informix"
    .far_proveedor referencing new as luego
    for each row
        (
        insert into "informix".aud_far_proveedor (prov_id,prov_nom_emp,
    prov_dir_emp,prov_tel1_emp,prov_tel2_emp,prov_correo_emp,prov_nom1_enc,
    prov_nom2_enc,prov_ape1_enc,prov_ape2_enc,prov_dir_enc,prov_tel1_enc,
    prov_tel2_enc,prov_correo_enc,prov_situacion,prov_observacion,desp_prov_id,
    desp_prov_nom_emp,desp_prov_dir_emp,desp_prov_tel1_emp,desp_prov_tel2_emp,
    desp_prov_correo_emp,desp_prov_nom1_enc,desp_prov_nom2_enc,desp_prov_ape1_enc,
    desp_prov_ape2_enc,desp_prov_dir_enc,desp_prov_tel1_enc,desp_prov_tel2_enc,
    desp_prov_correo_enc,desp_prov_situacion,desp_prov_observacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,luego.prov_id ,luego.prov_nom_emp ,luego.prov_dir_emp ,luego.prov_tel1_emp 
    ,luego.prov_tel2_emp ,luego.prov_correo_emp ,luego.prov_nom1_enc 
    ,luego.prov_nom2_enc ,luego.prov_ape1_enc ,luego.prov_ape2_enc ,luego.prov_dir_enc 
    ,luego.prov_tel1_enc ,luego.prov_tel2_enc ,luego.prov_correo_enc 
    ,luego.prov_situacion ,luego.prov_observacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_far_proveedor delete on "informix"
    .far_proveedor referencing old as antes
    for each row
        (
        insert into "informix".aud_far_proveedor (prov_id,prov_nom_emp,
    prov_dir_emp,prov_tel1_emp,prov_tel2_emp,prov_correo_emp,prov_nom1_enc,
    prov_nom2_enc,prov_ape1_enc,prov_ape2_enc,prov_dir_enc,prov_tel1_enc,
    prov_tel2_enc,prov_correo_enc,prov_situacion,prov_observacion,desp_prov_id,
    desp_prov_nom_emp,desp_prov_dir_emp,desp_prov_tel1_emp,desp_prov_tel2_emp,
    desp_prov_correo_emp,desp_prov_nom1_enc,desp_prov_nom2_enc,desp_prov_ape1_enc,
    desp_prov_ape2_enc,desp_prov_dir_enc,desp_prov_tel1_enc,desp_prov_tel2_enc,
    desp_prov_correo_enc,desp_prov_situacion,desp_prov_observacion,accion,
    usuario,hora)  values (antes.prov_id ,antes.prov_nom_emp ,antes.prov_dir_emp 
    ,antes.prov_tel1_emp ,antes.prov_tel2_emp ,antes.prov_correo_emp 
    ,antes.prov_nom1_enc ,antes.prov_nom2_enc ,antes.prov_ape1_enc ,antes.prov_ape2_enc 
    ,antes.prov_dir_enc ,antes.prov_tel1_enc ,antes.prov_tel2_enc ,antes.prov_correo_enc 
    ,antes.prov_situacion ,antes.prov_observacion ,NULL ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_far_proveedor update on "informix"
    .far_proveedor referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_far_proveedor (prov_id,prov_nom_emp,
    prov_dir_emp,prov_tel1_emp,prov_tel2_emp,prov_correo_emp,prov_nom1_enc,
    prov_nom2_enc,prov_ape1_enc,prov_ape2_enc,prov_dir_enc,prov_tel1_enc,
    prov_tel2_enc,prov_correo_enc,prov_situacion,prov_observacion,desp_prov_id,
    desp_prov_nom_emp,desp_prov_dir_emp,desp_prov_tel1_emp,desp_prov_tel2_emp,
    desp_prov_correo_emp,desp_prov_nom1_enc,desp_prov_nom2_enc,desp_prov_ape1_enc,
    desp_prov_ape2_enc,desp_prov_dir_enc,desp_prov_tel1_enc,desp_prov_tel2_enc,
    desp_prov_correo_enc,desp_prov_situacion,desp_prov_observacion,accion,
    usuario,hora)  values (antes.prov_id ,antes.prov_nom_emp ,antes.prov_dir_emp 
    ,antes.prov_tel1_emp ,antes.prov_tel2_emp ,antes.prov_correo_emp 
    ,antes.prov_nom1_enc ,antes.prov_nom2_enc ,antes.prov_ape1_enc ,antes.prov_ape2_enc 
    ,antes.prov_dir_enc ,antes.prov_tel1_enc ,antes.prov_tel2_enc ,antes.prov_correo_enc 
    ,antes.prov_situacion ,antes.prov_observacion ,luego.prov_id ,luego.prov_nom_emp 
    ,luego.prov_dir_emp ,luego.prov_tel1_emp ,luego.prov_tel2_emp ,luego.prov_correo_emp 
    ,luego.prov_nom1_enc ,luego.prov_nom2_enc ,luego.prov_ape1_enc ,luego.prov_ape2_enc 
    ,luego.prov_dir_enc ,luego.prov_tel1_enc ,luego.prov_tel2_enc ,luego.prov_correo_enc 
    ,luego.prov_situacion ,luego.prov_observacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_farma_presentaciones insert on 
    "informix".farma_presentaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_farma_presentaciones (pres_id,
    pres_codigo,pres_nom,pres_sit,pres_obs,desp_pres_id,desp_pres_codigo,
    desp_pres_nom,desp_pres_sit,desp_pres_obs,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,luego.pres_id ,luego.pres_codigo ,luego.pres_nom 
    ,luego.pres_sit ,luego.pres_obs ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_farma_presentaciones delete on 
    "informix".farma_presentaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_farma_presentaciones (pres_id,
    pres_codigo,pres_nom,pres_sit,pres_obs,desp_pres_id,desp_pres_codigo,
    desp_pres_nom,desp_pres_sit,desp_pres_obs,accion,usuario,hora)  values 
    (antes.pres_id ,antes.pres_codigo ,antes.pres_nom ,antes.pres_sit 
    ,antes.pres_obs ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_farma_presentaciones update on 
    "informix".farma_presentaciones referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_farma_presentaciones (pres_id,
    pres_codigo,pres_nom,pres_sit,pres_obs,desp_pres_id,desp_pres_codigo,
    desp_pres_nom,desp_pres_sit,desp_pres_obs,accion,usuario,hora)  values 
    (antes.pres_id ,antes.pres_codigo ,antes.pres_nom ,antes.pres_sit 
    ,antes.pres_obs ,luego.pres_id ,luego.pres_codigo ,luego.pres_nom 
    ,luego.pres_sit ,luego.pres_obs ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_farma_unidades_medida insert on 
    "informix".farma_unidades_medida referencing new as luego
    for each row
        (
        insert into "informix".aud_farma_unidades_medida (uni_med_id,
    uni_med_desc_lg,uni_med_desc_ct,uni_med_sit,uni_med_obs,desp_uni_med_id,
    desp_uni_med_desc_lg,desp_uni_med_desc_ct,desp_uni_med_sit,desp_uni_med_obs,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.uni_med_id 
    ,luego.uni_med_desc_lg ,luego.uni_med_desc_ct ,luego.uni_med_sit 
    ,luego.uni_med_obs ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_farma_unidades_medida delete on 
    "informix".farma_unidades_medida referencing old as antes
    for each row
        (
        insert into "informix".aud_farma_unidades_medida (uni_med_id,
    uni_med_desc_lg,uni_med_desc_ct,uni_med_sit,uni_med_obs,desp_uni_med_id,
    desp_uni_med_desc_lg,desp_uni_med_desc_ct,desp_uni_med_sit,desp_uni_med_obs,
    accion,usuario,hora)  values (antes.uni_med_id ,antes.uni_med_desc_lg 
    ,antes.uni_med_desc_ct ,antes.uni_med_sit ,antes.uni_med_obs ,NULL 
    ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_farma_unidades_medida update on 
    "informix".farma_unidades_medida referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_farma_unidades_medida (uni_med_id,
    uni_med_desc_lg,uni_med_desc_ct,uni_med_sit,uni_med_obs,desp_uni_med_id,
    desp_uni_med_desc_lg,desp_uni_med_desc_ct,desp_uni_med_sit,desp_uni_med_obs,
    accion,usuario,hora)  values (antes.uni_med_id ,antes.uni_med_desc_lg 
    ,antes.uni_med_desc_ct ,antes.uni_med_sit ,antes.uni_med_obs ,luego.uni_med_id 
    ,luego.uni_med_desc_lg ,luego.uni_med_desc_ct ,luego.uni_med_sit 
    ,luego.uni_med_obs ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_farma_tipo_medicamentos insert 
    on "informix".farma_tipo_medicamentos referencing new as luego
    
    for each row
        (
        insert into "informix".aud_farma_tipo_medicamentos (tipo_med_id,
    tipo_med_nom,tipo_med_sit,tipo_med_obs,desp_tipo_med_id,desp_tipo_med_nom,
    desp_tipo_med_sit,desp_tipo_med_obs,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,luego.tipo_med_id ,luego.tipo_med_nom ,luego.tipo_med_sit 
    ,luego.tipo_med_obs ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_farma_tipo_medicamentos delete 
    on "informix".farma_tipo_medicamentos referencing old as antes
    
    for each row
        (
        insert into "informix".aud_farma_tipo_medicamentos (tipo_med_id,
    tipo_med_nom,tipo_med_sit,tipo_med_obs,desp_tipo_med_id,desp_tipo_med_nom,
    desp_tipo_med_sit,desp_tipo_med_obs,accion,usuario,hora)  values 
    (antes.tipo_med_id ,antes.tipo_med_nom ,antes.tipo_med_sit ,antes.tipo_med_obs 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_farma_tipo_medicamentos update 
    on "informix".farma_tipo_medicamentos referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_farma_tipo_medicamentos (tipo_med_id,
    tipo_med_nom,tipo_med_sit,tipo_med_obs,desp_tipo_med_id,desp_tipo_med_nom,
    desp_tipo_med_sit,desp_tipo_med_obs,accion,usuario,hora)  values 
    (antes.tipo_med_id ,antes.tipo_med_nom ,antes.tipo_med_sit ,antes.tipo_med_obs 
    ,luego.tipo_med_id ,luego.tipo_med_nom ,luego.tipo_med_sit ,luego.tipo_med_obs 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_farma_renglones_presupuestarios 
    insert on "informix".farma_renglones_presupuestarios referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_farma_renglones_presupuestarios 
    (ren_pres_id,ren_pres_num,ren_pres_desc,ren_pres_sit,ren_pres_obs,
    desp_ren_pres_id,desp_ren_pres_num,desp_ren_pres_desc,desp_ren_pres_sit,
    desp_ren_pres_obs,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' 
    ,luego.ren_pres_id ,luego.ren_pres_num ,luego.ren_pres_desc ,luego.ren_pres_sit 
    ,luego.ren_pres_obs ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_farma_renglones_presupuestarios 
    delete on "informix".farma_renglones_presupuestarios referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_farma_renglones_presupuestarios 
    (ren_pres_id,ren_pres_num,ren_pres_desc,ren_pres_sit,ren_pres_obs,
    desp_ren_pres_id,desp_ren_pres_num,desp_ren_pres_desc,desp_ren_pres_sit,
    desp_ren_pres_obs,accion,usuario,hora)  values (antes.ren_pres_id 
    ,antes.ren_pres_num ,antes.ren_pres_desc ,antes.ren_pres_sit ,antes.ren_pres_obs 
    ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_farma_renglones_presupuestarios 
    update on "informix".farma_renglones_presupuestarios referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_farma_renglones_presupuestarios 
    (ren_pres_id,ren_pres_num,ren_pres_desc,ren_pres_sit,ren_pres_obs,
    desp_ren_pres_id,desp_ren_pres_num,desp_ren_pres_desc,desp_ren_pres_sit,
    desp_ren_pres_obs,accion,usuario,hora)  values (antes.ren_pres_id 
    ,antes.ren_pres_num ,antes.ren_pres_desc ,antes.ren_pres_sit ,antes.ren_pres_obs 
    ,luego.ren_pres_id ,luego.ren_pres_num ,luego.ren_pres_desc ,luego.ren_pres_sit 
    ,luego.ren_pres_obs ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_farma_facturacion insert on "informix"
    .farma_facturacion referencing new as luego
    for each row
        (
        insert into "informix".aud_farma_facturacion (fac_id,
    fac_dep,fac_dir,fac_tel1,fac_tel2,fac_nit,fac_sit,fac_obs,desp_fac_id,
    desp_fac_dep,desp_fac_dir,desp_fac_tel1,desp_fac_tel2,desp_fac_nit,
    desp_fac_sit,desp_fac_obs,accion,usuario,hora)  values (NULL ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,luego.fac_id ,luego.fac_dep ,luego.fac_dir ,luego.fac_tel1 
    ,luego.fac_tel2 ,luego.fac_nit ,luego.fac_sit ,luego.fac_obs ,'I' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_farma_facturacion delete on "informix"
    .farma_facturacion referencing old as antes
    for each row
        (
        insert into "informix".aud_farma_facturacion (fac_id,
    fac_dep,fac_dir,fac_tel1,fac_tel2,fac_nit,fac_sit,fac_obs,desp_fac_id,
    desp_fac_dep,desp_fac_dir,desp_fac_tel1,desp_fac_tel2,desp_fac_nit,
    desp_fac_sit,desp_fac_obs,accion,usuario,hora)  values (antes.fac_id 
    ,antes.fac_dep ,antes.fac_dir ,antes.fac_tel1 ,antes.fac_tel2 ,antes.fac_nit 
    ,antes.fac_sit ,antes.fac_obs ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_farma_facturacion update on "informix"
    .farma_facturacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_farma_facturacion (fac_id,
    fac_dep,fac_dir,fac_tel1,fac_tel2,fac_nit,fac_sit,fac_obs,desp_fac_id,
    desp_fac_dep,desp_fac_dir,desp_fac_tel1,desp_fac_tel2,desp_fac_nit,
    desp_fac_sit,desp_fac_obs,accion,usuario,hora)  values (antes.fac_id 
    ,antes.fac_dep ,antes.fac_dir ,antes.fac_tel1 ,antes.fac_tel2 ,antes.fac_nit 
    ,antes.fac_sit ,antes.fac_obs ,luego.fac_id ,luego.fac_dep ,luego.fac_dir 
    ,luego.fac_tel1 ,luego.fac_tel2 ,luego.fac_nit ,luego.fac_sit ,luego.fac_obs 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_farma_orden_compra insert on "informix"
    .farma_orden_compra referencing new as luego
    for each row
        (
        insert into "informix".aud_farma_orden_compra (ord_comp_id,
    ord_comp_num,ord_comp_dep,ord_comp_cont,ord_comp_prov,ord_comp_sit,
    ord_comp_fech_creac,ord_comp_fech_impr,ord_comp_obs,desp_ord_comp_id,
    desp_ord_comp_num,desp_ord_comp_dep,desp_ord_comp_cont,desp_ord_comp_prov,
    desp_ord_comp_sit,desp_ord_comp_fech_creac,desp_ord_comp_fech_impr,
    desp_ord_comp_obs,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,luego.ord_comp_id ,luego.ord_comp_num ,luego.ord_comp_dep 
    ,luego.ord_comp_cont ,luego.ord_comp_prov ,luego.ord_comp_sit ,luego.ord_comp_fech_creac 
    ,luego.ord_comp_fech_impr ,luego.ord_comp_obs ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_farma_orden_compra delete on "informix"
    .farma_orden_compra referencing old as antes
    for each row
        (
        insert into "informix".aud_farma_orden_compra (ord_comp_id,
    ord_comp_num,ord_comp_dep,ord_comp_cont,ord_comp_prov,ord_comp_sit,
    ord_comp_fech_creac,ord_comp_fech_impr,ord_comp_obs,desp_ord_comp_id,
    desp_ord_comp_num,desp_ord_comp_dep,desp_ord_comp_cont,desp_ord_comp_prov,
    desp_ord_comp_sit,desp_ord_comp_fech_creac,desp_ord_comp_fech_impr,
    desp_ord_comp_obs,accion,usuario,hora)  values (antes.ord_comp_id 
    ,antes.ord_comp_num ,antes.ord_comp_dep ,antes.ord_comp_cont ,antes.ord_comp_prov 
    ,antes.ord_comp_sit ,antes.ord_comp_fech_creac ,antes.ord_comp_fech_impr 
    ,antes.ord_comp_obs ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_farma_orden_compra update on "informix"
    .farma_orden_compra referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_farma_orden_compra (ord_comp_id,
    ord_comp_num,ord_comp_dep,ord_comp_cont,ord_comp_prov,ord_comp_sit,
    ord_comp_fech_creac,ord_comp_fech_impr,ord_comp_obs,desp_ord_comp_id,
    desp_ord_comp_num,desp_ord_comp_dep,desp_ord_comp_cont,desp_ord_comp_prov,
    desp_ord_comp_sit,desp_ord_comp_fech_creac,desp_ord_comp_fech_impr,
    desp_ord_comp_obs,accion,usuario,hora)  values (antes.ord_comp_id 
    ,antes.ord_comp_num ,antes.ord_comp_dep ,antes.ord_comp_cont ,antes.ord_comp_prov 
    ,antes.ord_comp_sit ,antes.ord_comp_fech_creac ,antes.ord_comp_fech_impr 
    ,antes.ord_comp_obs ,luego.ord_comp_id ,luego.ord_comp_num ,luego.ord_comp_dep 
    ,luego.ord_comp_cont ,luego.ord_comp_prov ,luego.ord_comp_sit ,luego.ord_comp_fech_creac 
    ,luego.ord_comp_fech_impr ,luego.ord_comp_obs ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_farma_compra_asignada insert on 
    "informix".farma_compra_asignada referencing new as luego
    for each row
        (
        insert into "informix".aud_farma_compra_asignada (comp_asig_id,
    comp_asig_ord_id,comp_asig_ins,comp_asig_pres,comp_asig_cant,comp_asig_prec,
    comp_asig_total,comp_asig_sit,comp_asig_obs,desp_comp_asig_id,desp_comp_asig_ord_id,
    desp_comp_asig_ins,desp_comp_asig_pres,desp_comp_asig_cant,desp_comp_asig_prec,
    desp_comp_asig_total,desp_comp_asig_sit,desp_comp_asig_obs,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.comp_asig_id 
    ,luego.comp_asig_ord_id ,luego.comp_asig_ins ,luego.comp_asig_pres 
    ,luego.comp_asig_cant ,luego.comp_asig_prec ,luego.comp_asig_total 
    ,luego.comp_asig_sit ,luego.comp_asig_obs ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_farma_compra_asignada delete on 
    "informix".farma_compra_asignada referencing old as antes
    for each row
        (
        insert into "informix".aud_farma_compra_asignada (comp_asig_id,
    comp_asig_ord_id,comp_asig_ins,comp_asig_pres,comp_asig_cant,comp_asig_prec,
    comp_asig_total,comp_asig_sit,comp_asig_obs,desp_comp_asig_id,desp_comp_asig_ord_id,
    desp_comp_asig_ins,desp_comp_asig_pres,desp_comp_asig_cant,desp_comp_asig_prec,
    desp_comp_asig_total,desp_comp_asig_sit,desp_comp_asig_obs,accion,
    usuario,hora)  values (antes.comp_asig_id ,antes.comp_asig_ord_id 
    ,antes.comp_asig_ins ,antes.comp_asig_pres ,antes.comp_asig_cant 
    ,antes.comp_asig_prec ,antes.comp_asig_total ,antes.comp_asig_sit 
    ,antes.comp_asig_obs ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_farma_compra_asignada update on 
    "informix".farma_compra_asignada referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_farma_compra_asignada (comp_asig_id,
    comp_asig_ord_id,comp_asig_ins,comp_asig_pres,comp_asig_cant,comp_asig_prec,
    comp_asig_total,comp_asig_sit,comp_asig_obs,desp_comp_asig_id,desp_comp_asig_ord_id,
    desp_comp_asig_ins,desp_comp_asig_pres,desp_comp_asig_cant,desp_comp_asig_prec,
    desp_comp_asig_total,desp_comp_asig_sit,desp_comp_asig_obs,accion,
    usuario,hora)  values (antes.comp_asig_id ,antes.comp_asig_ord_id 
    ,antes.comp_asig_ins ,antes.comp_asig_pres ,antes.comp_asig_cant 
    ,antes.comp_asig_prec ,antes.comp_asig_total ,antes.comp_asig_sit 
    ,antes.comp_asig_obs ,luego.comp_asig_id ,luego.comp_asig_ord_id 
    ,luego.comp_asig_ins ,luego.comp_asig_pres ,luego.comp_asig_cant 
    ,luego.comp_asig_prec ,luego.comp_asig_total ,luego.comp_asig_sit 
    ,luego.comp_asig_obs ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_farma_presentacion_asignada insert 
    on "informix".farma_presentacion_asignada referencing new 
    as luego
    for each row
        (
        insert into "informix".aud_farma_presentacion_asignada 
    (pres_asig_id,pres_asig_far_id,pres_asig_cod,pres_asig_pres,pres_asig_uni_med,
    pres_asig_precio,pres_asig_sit,pres_asig_obs,desp_pres_asig_id,desp_pres_asig_far_id,
    desp_pres_asig_cod,desp_pres_asig_pres,desp_pres_asig_uni_med,desp_pres_asig_precio,
    desp_pres_asig_sit,desp_pres_asig_obs,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.pres_asig_id ,luego.pres_asig_far_id 
    ,luego.pres_asig_cod ,luego.pres_asig_pres ,luego.pres_asig_uni_med 
    ,luego.pres_asig_precio ,luego.pres_asig_sit ,luego.pres_asig_obs 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_farma_presentacion_asignada delete 
    on "informix".farma_presentacion_asignada referencing old 
    as antes
    for each row
        (
        insert into "informix".aud_farma_presentacion_asignada 
    (pres_asig_id,pres_asig_far_id,pres_asig_cod,pres_asig_pres,pres_asig_uni_med,
    pres_asig_precio,pres_asig_sit,pres_asig_obs,desp_pres_asig_id,desp_pres_asig_far_id,
    desp_pres_asig_cod,desp_pres_asig_pres,desp_pres_asig_uni_med,desp_pres_asig_precio,
    desp_pres_asig_sit,desp_pres_asig_obs,accion,usuario,hora)  values 
    (antes.pres_asig_id ,antes.pres_asig_far_id ,antes.pres_asig_cod 
    ,antes.pres_asig_pres ,antes.pres_asig_uni_med ,antes.pres_asig_precio 
    ,antes.pres_asig_sit ,antes.pres_asig_obs ,NULL ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_farma_presentacion_asignada update 
    on "informix".farma_presentacion_asignada referencing old 
    as antes new as luego
    for each row
        (
        insert into "informix".aud_farma_presentacion_asignada 
    (pres_asig_id,pres_asig_far_id,pres_asig_cod,pres_asig_pres,pres_asig_uni_med,
    pres_asig_precio,pres_asig_sit,pres_asig_obs,desp_pres_asig_id,desp_pres_asig_far_id,
    desp_pres_asig_cod,desp_pres_asig_pres,desp_pres_asig_uni_med,desp_pres_asig_precio,
    desp_pres_asig_sit,desp_pres_asig_obs,accion,usuario,hora)  values 
    (antes.pres_asig_id ,antes.pres_asig_far_id ,antes.pres_asig_cod 
    ,antes.pres_asig_pres ,antes.pres_asig_uni_med ,antes.pres_asig_precio 
    ,antes.pres_asig_sit ,antes.pres_asig_obs ,luego.pres_asig_id ,luego.pres_asig_far_id 
    ,luego.pres_asig_cod ,luego.pres_asig_pres ,luego.pres_asig_uni_med 
    ,luego.pres_asig_precio ,luego.pres_asig_sit ,luego.pres_asig_obs 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_res_situacion insert on "informix"
    .res_situacion referencing new as luego
    for each row
        (
        insert into "informix".aud_res_situacion (sit_res_id,
    sit_res_situacion,sit_res_obs,sit_res_sit,desp_sit_res_id,desp_sit_res_situacion,
    desp_sit_res_obs,desp_sit_res_sit,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,luego.sit_res_id ,luego.sit_res_situacion ,luego.sit_res_obs 
    ,luego.sit_res_sit ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_res_situacion delete on "informix"
    .res_situacion referencing old as antes
    for each row
        (
        insert into "informix".aud_res_situacion (sit_res_id,
    sit_res_situacion,sit_res_obs,sit_res_sit,desp_sit_res_id,desp_sit_res_situacion,
    desp_sit_res_obs,desp_sit_res_sit,accion,usuario,hora)  values (antes.sit_res_id 
    ,antes.sit_res_situacion ,antes.sit_res_obs ,antes.sit_res_sit ,NULL 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_res_situacion update on "informix"
    .res_situacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_res_situacion (sit_res_id,
    sit_res_situacion,sit_res_obs,sit_res_sit,desp_sit_res_id,desp_sit_res_situacion,
    desp_sit_res_obs,desp_sit_res_sit,accion,usuario,hora)  values (antes.sit_res_id 
    ,antes.sit_res_situacion ,antes.sit_res_obs ,antes.sit_res_sit ,luego.sit_res_id 
    ,luego.sit_res_situacion ,luego.sit_res_obs ,luego.sit_res_sit ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_res_tipo insert on "informix".res_tipo 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_res_tipo (tip_id,tip_descripcion,
    tip_obs,tip_situacion,desp_tip_id,desp_tip_descripcion,desp_tip_obs,
    desp_tip_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.tip_id 
    ,luego.tip_descripcion ,luego.tip_obs ,luego.tip_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_res_tipo delete on "informix".res_tipo 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_res_tipo (tip_id,tip_descripcion,
    tip_obs,tip_situacion,desp_tip_id,desp_tip_descripcion,desp_tip_obs,
    desp_tip_situacion,accion,usuario,hora)  values (antes.tip_id ,antes.tip_descripcion 
    ,antes.tip_obs ,antes.tip_situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_res_tipo update on "informix".res_tipo 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_res_tipo (tip_id,tip_descripcion,
    tip_obs,tip_situacion,desp_tip_id,desp_tip_descripcion,desp_tip_obs,
    desp_tip_situacion,accion,usuario,hora)  values (antes.tip_id ,antes.tip_descripcion 
    ,antes.tip_obs ,antes.tip_situacion ,luego.tip_id ,luego.tip_descripcion 
    ,luego.tip_obs ,luego.tip_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_mprof insert on "informix".mprof 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_mprof (prof_codigo,prof_desc_lg,
    prof_desc_ct,prof_clase,desp_prof_codigo,desp_prof_desc_lg,desp_prof_desc_ct,
    desp_prof_clase,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.prof_codigo 
    ,luego.prof_desc_lg ,luego.prof_desc_ct ,luego.prof_clase ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_mprof delete on "informix".mprof 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_mprof (prof_codigo,prof_desc_lg,
    prof_desc_ct,prof_clase,desp_prof_codigo,desp_prof_desc_lg,desp_prof_desc_ct,
    desp_prof_clase,accion,usuario,hora)  values (antes.prof_codigo ,
    antes.prof_desc_lg ,antes.prof_desc_ct ,antes.prof_clase ,NULL ,''
     ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_mprof update on "informix".mprof 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mprof (prof_codigo,prof_desc_lg,
    prof_desc_ct,prof_clase,desp_prof_codigo,desp_prof_desc_lg,desp_prof_desc_ct,
    desp_prof_clase,accion,usuario,hora)  values (antes.prof_codigo ,
    antes.prof_desc_lg ,antes.prof_desc_ct ,antes.prof_clase ,luego.prof_codigo 
    ,luego.prof_desc_lg ,luego.prof_desc_ct ,luego.prof_clase ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_personalc insert on "informix".personalc 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_personalc (cper_id,cper_dpi,
    cper_nombre1,cper_nombre2,cper_nombre3,cper_apellido1,cper_apellido2,
    cper_apellido3,cper_direccion,cper_estado_civil,cper_sexo,cper_sangre,
    cper_profesion,cper_telefono,cper_celular,cper_email,cper_fecha_nacimiento,
    cper_dep_nacimiento,cper_muni_nacimiento,cper_religion,cper_nit,cper_situacion,
    cper_app,cper_na1,cper_na2,desp_cper_id,desp_cper_dpi,desp_cper_nombre1,
    desp_cper_nombre2,desp_cper_nombre3,desp_cper_apellido1,desp_cper_apellido2,
    desp_cper_apellido3,desp_cper_direccion,desp_cper_estado_civil,desp_cper_sexo,
    desp_cper_sangre,desp_cper_profesion,desp_cper_telefono,desp_cper_celular,
    desp_cper_email,desp_cper_fecha_nacimiento,desp_cper_dep_nacimiento,
    desp_cper_muni_nacimiento,desp_cper_religion,desp_cper_nit,desp_cper_situacion,
    desp_cper_app,desp_cper_na1,desp_cper_na2,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,luego.cper_id ,luego.cper_dpi ,luego.cper_nombre1 ,
    luego.cper_nombre2 ,luego.cper_nombre3 ,luego.cper_apellido1 ,luego.cper_apellido2 
    ,luego.cper_apellido3 ,luego.cper_direccion ,luego.cper_estado_civil 
    ,luego.cper_sexo ,luego.cper_sangre ,luego.cper_profesion ,luego.cper_telefono 
    ,luego.cper_celular ,luego.cper_email ,luego.cper_fecha_nacimiento 
    ,luego.cper_dep_nacimiento ,luego.cper_muni_nacimiento ,luego.cper_religion 
    ,luego.cper_nit ,luego.cper_situacion ,luego.cper_app ,luego.cper_na1 
    ,luego.cper_na2 ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_personalc delete on "informix".personalc 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_personalc (cper_id,cper_dpi,
    cper_nombre1,cper_nombre2,cper_nombre3,cper_apellido1,cper_apellido2,
    cper_apellido3,cper_direccion,cper_estado_civil,cper_sexo,cper_sangre,
    cper_profesion,cper_telefono,cper_celular,cper_email,cper_fecha_nacimiento,
    cper_dep_nacimiento,cper_muni_nacimiento,cper_religion,cper_nit,cper_situacion,
    cper_app,cper_na1,cper_na2,desp_cper_id,desp_cper_dpi,desp_cper_nombre1,
    desp_cper_nombre2,desp_cper_nombre3,desp_cper_apellido1,desp_cper_apellido2,
    desp_cper_apellido3,desp_cper_direccion,desp_cper_estado_civil,desp_cper_sexo,
    desp_cper_sangre,desp_cper_profesion,desp_cper_telefono,desp_cper_celular,
    desp_cper_email,desp_cper_fecha_nacimiento,desp_cper_dep_nacimiento,
    desp_cper_muni_nacimiento,desp_cper_religion,desp_cper_nit,desp_cper_situacion,
    desp_cper_app,desp_cper_na1,desp_cper_na2,accion,usuario,hora)  values 
    (antes.cper_id ,antes.cper_dpi ,antes.cper_nombre1 ,antes.cper_nombre2 
    ,antes.cper_nombre3 ,antes.cper_apellido1 ,antes.cper_apellido2 ,
    antes.cper_apellido3 ,antes.cper_direccion ,antes.cper_estado_civil 
    ,antes.cper_sexo ,antes.cper_sangre ,antes.cper_profesion ,antes.cper_telefono 
    ,antes.cper_celular ,antes.cper_email ,antes.cper_fecha_nacimiento 
    ,antes.cper_dep_nacimiento ,antes.cper_muni_nacimiento ,antes.cper_religion 
    ,antes.cper_nit ,antes.cper_situacion ,antes.cper_app ,antes.cper_na1 
    ,antes.cper_na2 ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_personalc update on "informix".personalc 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_personalc (cper_id,cper_dpi,
    cper_nombre1,cper_nombre2,cper_nombre3,cper_apellido1,cper_apellido2,
    cper_apellido3,cper_direccion,cper_estado_civil,cper_sexo,cper_sangre,
    cper_profesion,cper_telefono,cper_celular,cper_email,cper_fecha_nacimiento,
    cper_dep_nacimiento,cper_muni_nacimiento,cper_religion,cper_nit,cper_situacion,
    cper_app,cper_na1,cper_na2,desp_cper_id,desp_cper_dpi,desp_cper_nombre1,
    desp_cper_nombre2,desp_cper_nombre3,desp_cper_apellido1,desp_cper_apellido2,
    desp_cper_apellido3,desp_cper_direccion,desp_cper_estado_civil,desp_cper_sexo,
    desp_cper_sangre,desp_cper_profesion,desp_cper_telefono,desp_cper_celular,
    desp_cper_email,desp_cper_fecha_nacimiento,desp_cper_dep_nacimiento,
    desp_cper_muni_nacimiento,desp_cper_religion,desp_cper_nit,desp_cper_situacion,
    desp_cper_app,desp_cper_na1,desp_cper_na2,accion,usuario,hora)  values 
    (antes.cper_id ,antes.cper_dpi ,antes.cper_nombre1 ,antes.cper_nombre2 
    ,antes.cper_nombre3 ,antes.cper_apellido1 ,antes.cper_apellido2 ,
    antes.cper_apellido3 ,antes.cper_direccion ,antes.cper_estado_civil 
    ,antes.cper_sexo ,antes.cper_sangre ,antes.cper_profesion ,antes.cper_telefono 
    ,antes.cper_celular ,antes.cper_email ,antes.cper_fecha_nacimiento 
    ,antes.cper_dep_nacimiento ,antes.cper_muni_nacimiento ,antes.cper_religion 
    ,antes.cper_nit ,antes.cper_situacion ,antes.cper_app ,antes.cper_na1 
    ,antes.cper_na2 ,luego.cper_id ,luego.cper_dpi ,luego.cper_nombre1 
    ,luego.cper_nombre2 ,luego.cper_nombre3 ,luego.cper_apellido1 ,luego.cper_apellido2 
    ,luego.cper_apellido3 ,luego.cper_direccion ,luego.cper_estado_civil 
    ,luego.cper_sexo ,luego.cper_sangre ,luego.cper_profesion ,luego.cper_telefono 
    ,luego.cper_celular ,luego.cper_email ,luego.cper_fecha_nacimiento 
    ,luego.cper_dep_nacimiento ,luego.cper_muni_nacimiento ,luego.cper_religion 
    ,luego.cper_nit ,luego.cper_situacion ,luego.cper_app ,luego.cper_na1 
    ,luego.cper_na2 ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_res_fam insert on "informix".res_fam 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_res_fam (fam_id,fam_dpi_parentesco,
    fam_dpi,fam_nom1,fam_nom2,fam_nom3,fam_ape1,fam_ape2,fam_ape3,fam_tel,
    fam_parentezco,desp_fam_id,desp_fam_dpi_parentesco,desp_fam_dpi,desp_fam_nom1,
    desp_fam_nom2,desp_fam_nom3,desp_fam_ape1,desp_fam_ape2,desp_fam_ape3,
    desp_fam_tel,desp_fam_parentezco,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.fam_id ,luego.fam_dpi_parentesco 
    ,luego.fam_dpi ,luego.fam_nom1 ,luego.fam_nom2 ,luego.fam_nom3 ,luego.fam_ape1 
    ,luego.fam_ape2 ,luego.fam_ape3 ,luego.fam_tel ,luego.fam_parentezco 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_res_fam delete on "informix".res_fam 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_res_fam (fam_id,fam_dpi_parentesco,
    fam_dpi,fam_nom1,fam_nom2,fam_nom3,fam_ape1,fam_ape2,fam_ape3,fam_tel,
    fam_parentezco,desp_fam_id,desp_fam_dpi_parentesco,desp_fam_dpi,desp_fam_nom1,
    desp_fam_nom2,desp_fam_nom3,desp_fam_ape1,desp_fam_ape2,desp_fam_ape3,
    desp_fam_tel,desp_fam_parentezco,accion,usuario,hora)  values (antes.fam_id 
    ,antes.fam_dpi_parentesco ,antes.fam_dpi ,antes.fam_nom1 ,antes.fam_nom2 
    ,antes.fam_nom3 ,antes.fam_ape1 ,antes.fam_ape2 ,antes.fam_ape3 ,
    antes.fam_tel ,antes.fam_parentezco ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_res_fam update on "informix".res_fam 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_res_fam (fam_id,fam_dpi_parentesco,
    fam_dpi,fam_nom1,fam_nom2,fam_nom3,fam_ape1,fam_ape2,fam_ape3,fam_tel,
    fam_parentezco,desp_fam_id,desp_fam_dpi_parentesco,desp_fam_dpi,desp_fam_nom1,
    desp_fam_nom2,desp_fam_nom3,desp_fam_ape1,desp_fam_ape2,desp_fam_ape3,
    desp_fam_tel,desp_fam_parentezco,accion,usuario,hora)  values (antes.fam_id 
    ,antes.fam_dpi_parentesco ,antes.fam_dpi ,antes.fam_nom1 ,antes.fam_nom2 
    ,antes.fam_nom3 ,antes.fam_ape1 ,antes.fam_ape2 ,antes.fam_ape3 ,
    antes.fam_tel ,antes.fam_parentezco ,luego.fam_id ,luego.fam_dpi_parentesco 
    ,luego.fam_dpi ,luego.fam_nom1 ,luego.fam_nom2 ,luego.fam_nom3 ,luego.fam_ape1 
    ,luego.fam_ape2 ,luego.fam_ape3 ,luego.fam_tel ,luego.fam_parentezco 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_res_mdep insert on "informix".res_mdep 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_res_mdep (dep_id,dep_departamento,
    dep_direccion,dep_coord_lat,dep_coord_long,dep_telefono,dep_email,
    dep_situacion,desp_dep_id,desp_dep_departamento,desp_dep_direccion,
    desp_dep_coord_lat,desp_dep_coord_long,desp_dep_telefono,desp_dep_email,
    desp_dep_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,luego.dep_id ,luego.dep_departamento ,luego.dep_direccion 
    ,luego.dep_coord_lat ,luego.dep_coord_long ,luego.dep_telefono ,luego.dep_email 
    ,luego.dep_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_res_mdep delete on "informix".res_mdep 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_res_mdep (dep_id,dep_departamento,
    dep_direccion,dep_coord_lat,dep_coord_long,dep_telefono,dep_email,
    dep_situacion,desp_dep_id,desp_dep_departamento,desp_dep_direccion,
    desp_dep_coord_lat,desp_dep_coord_long,desp_dep_telefono,desp_dep_email,
    desp_dep_situacion,accion,usuario,hora)  values (antes.dep_id ,antes.dep_departamento 
    ,antes.dep_direccion ,antes.dep_coord_lat ,antes.dep_coord_long ,
    antes.dep_telefono ,antes.dep_email ,antes.dep_situacion ,NULL ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_res_mdep update on "informix".res_mdep 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_res_mdep (dep_id,dep_departamento,
    dep_direccion,dep_coord_lat,dep_coord_long,dep_telefono,dep_email,
    dep_situacion,desp_dep_id,desp_dep_departamento,desp_dep_direccion,
    desp_dep_coord_lat,desp_dep_coord_long,desp_dep_telefono,desp_dep_email,
    desp_dep_situacion,accion,usuario,hora)  values (antes.dep_id ,antes.dep_departamento 
    ,antes.dep_direccion ,antes.dep_coord_lat ,antes.dep_coord_long ,
    antes.dep_telefono ,antes.dep_email ,antes.dep_situacion ,luego.dep_id 
    ,luego.dep_departamento ,luego.dep_direccion ,luego.dep_coord_lat 
    ,luego.dep_coord_long ,luego.dep_telefono ,luego.dep_email ,luego.dep_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_res_reservas insert on "informix"
    .res_reservas referencing new as luego
    for each row
        (
        insert into "informix".aud_res_reservas (reg_id,reg_codigo,
    reg_catalogo,reg_fec_ext_dpi,reg_dpi_dep,reg_dpi_mun,reg_escol_grado,
    reg_fec_ingreso_rm,reg_lugar_entren,reg_fec_fin_curso,reg_no_cert,
    reg_dep,reg_fech_alta,reg_fech_baja,reg_profesion,reg_tipo,reg_situacion,
    reg_obs,reg_det_sit,desp_reg_id,desp_reg_codigo,desp_reg_catalogo,
    desp_reg_fec_ext_dpi,desp_reg_dpi_dep,desp_reg_dpi_mun,desp_reg_escol_grado,
    desp_reg_fec_ingreso_rm,desp_reg_lugar_entren,desp_reg_fec_fin_curso,
    desp_reg_no_cert,desp_reg_dep,desp_reg_fech_alta,desp_reg_fech_baja,
    desp_reg_profesion,desp_reg_tipo,desp_reg_situacion,desp_reg_obs,
    desp_reg_det_sit,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.reg_id ,luego.reg_codigo 
    ,luego.reg_catalogo ,luego.reg_fec_ext_dpi ,luego.reg_dpi_dep ,luego.reg_dpi_mun 
    ,luego.reg_escol_grado ,luego.reg_fec_ingreso_rm ,luego.reg_lugar_entren 
    ,luego.reg_fec_fin_curso ,luego.reg_no_cert ,luego.reg_dep ,luego.reg_fech_alta 
    ,luego.reg_fech_baja ,luego.reg_profesion ,luego.reg_tipo ,luego.reg_situacion 
    ,luego.reg_obs ,luego.reg_det_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_res_reservas delete on "informix"
    .res_reservas referencing old as antes
    for each row
        (
        insert into "informix".aud_res_reservas (reg_id,reg_codigo,
    reg_catalogo,reg_fec_ext_dpi,reg_dpi_dep,reg_dpi_mun,reg_escol_grado,
    reg_fec_ingreso_rm,reg_lugar_entren,reg_fec_fin_curso,reg_no_cert,
    reg_dep,reg_fech_alta,reg_fech_baja,reg_profesion,reg_tipo,reg_situacion,
    reg_obs,reg_det_sit,desp_reg_id,desp_reg_codigo,desp_reg_catalogo,
    desp_reg_fec_ext_dpi,desp_reg_dpi_dep,desp_reg_dpi_mun,desp_reg_escol_grado,
    desp_reg_fec_ingreso_rm,desp_reg_lugar_entren,desp_reg_fec_fin_curso,
    desp_reg_no_cert,desp_reg_dep,desp_reg_fech_alta,desp_reg_fech_baja,
    desp_reg_profesion,desp_reg_tipo,desp_reg_situacion,desp_reg_obs,
    desp_reg_det_sit,accion,usuario,hora)  values (antes.reg_id ,antes.reg_codigo 
    ,antes.reg_catalogo ,antes.reg_fec_ext_dpi ,antes.reg_dpi_dep ,antes.reg_dpi_mun 
    ,antes.reg_escol_grado ,antes.reg_fec_ingreso_rm ,antes.reg_lugar_entren 
    ,antes.reg_fec_fin_curso ,antes.reg_no_cert ,antes.reg_dep ,antes.reg_fech_alta 
    ,antes.reg_fech_baja ,antes.reg_profesion ,antes.reg_tipo ,antes.reg_situacion 
    ,antes.reg_obs ,antes.reg_det_sit ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_res_reservas update on "informix"
    .res_reservas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_res_reservas (reg_id,reg_codigo,
    reg_catalogo,reg_fec_ext_dpi,reg_dpi_dep,reg_dpi_mun,reg_escol_grado,
    reg_fec_ingreso_rm,reg_lugar_entren,reg_fec_fin_curso,reg_no_cert,
    reg_dep,reg_fech_alta,reg_fech_baja,reg_profesion,reg_tipo,reg_situacion,
    reg_obs,reg_det_sit,desp_reg_id,desp_reg_codigo,desp_reg_catalogo,
    desp_reg_fec_ext_dpi,desp_reg_dpi_dep,desp_reg_dpi_mun,desp_reg_escol_grado,
    desp_reg_fec_ingreso_rm,desp_reg_lugar_entren,desp_reg_fec_fin_curso,
    desp_reg_no_cert,desp_reg_dep,desp_reg_fech_alta,desp_reg_fech_baja,
    desp_reg_profesion,desp_reg_tipo,desp_reg_situacion,desp_reg_obs,
    desp_reg_det_sit,accion,usuario,hora)  values (antes.reg_id ,antes.reg_codigo 
    ,antes.reg_catalogo ,antes.reg_fec_ext_dpi ,antes.reg_dpi_dep ,antes.reg_dpi_mun 
    ,antes.reg_escol_grado ,antes.reg_fec_ingreso_rm ,antes.reg_lugar_entren 
    ,antes.reg_fec_fin_curso ,antes.reg_no_cert ,antes.reg_dep ,antes.reg_fech_alta 
    ,antes.reg_fech_baja ,antes.reg_profesion ,antes.reg_tipo ,antes.reg_situacion 
    ,antes.reg_obs ,antes.reg_det_sit ,luego.reg_id ,luego.reg_codigo 
    ,luego.reg_catalogo ,luego.reg_fec_ext_dpi ,luego.reg_dpi_dep ,luego.reg_dpi_mun 
    ,luego.reg_escol_grado ,luego.reg_fec_ingreso_rm ,luego.reg_lugar_entren 
    ,luego.reg_fec_fin_curso ,luego.reg_no_cert ,luego.reg_dep ,luego.reg_fech_alta 
    ,luego.reg_fech_baja ,luego.reg_profesion ,luego.reg_tipo ,luego.reg_situacion 
    ,luego.reg_obs ,luego.reg_det_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_res_asig_per insert on "informix"
    .res_asig_per referencing new as luego
    for each row
        (
        insert into "informix".aud_res_asig_per (ape_id,ape_catalogo,
    ape_dep,ape_situacion,desp_ape_id,desp_ape_catalogo,desp_ape_dep,
    desp_ape_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.ape_id 
    ,luego.ape_catalogo ,luego.ape_dep ,luego.ape_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_res_asig_per delete on "informix"
    .res_asig_per referencing old as antes
    for each row
        (
        insert into "informix".aud_res_asig_per (ape_id,ape_catalogo,
    ape_dep,ape_situacion,desp_ape_id,desp_ape_catalogo,desp_ape_dep,
    desp_ape_situacion,accion,usuario,hora)  values (antes.ape_id ,antes.ape_catalogo 
    ,antes.ape_dep ,antes.ape_situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_res_asig_per update on "informix"
    .res_asig_per referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_res_asig_per (ape_id,ape_catalogo,
    ape_dep,ape_situacion,desp_ape_id,desp_ape_catalogo,desp_ape_dep,
    desp_ape_situacion,accion,usuario,hora)  values (antes.ape_id ,antes.ape_catalogo 
    ,antes.ape_dep ,antes.ape_situacion ,luego.ape_id ,luego.ape_catalogo 
    ,luego.ape_dep ,luego.ape_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_ddhh_gest insert on "informix".ddhh_gest 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ddhh_gest (gest_id,gest_cat,
    gest_edad,gest_grav_inic,gest_grav_fin,gest_pren_inic,gest_pren_fin,
    gest_fech_parto,gest_post_inic,gest_post_fin,gest_lact_inic,gest_lact_fin,
    gest_region,gest_tip_embarazo,gest_tip_parto,gest_obs,gest_situacion,
    desp_gest_id,desp_gest_cat,desp_gest_edad,desp_gest_grav_inic,desp_gest_grav_fin,
    desp_gest_pren_inic,desp_gest_pren_fin,desp_gest_fech_parto,desp_gest_post_inic,
    desp_gest_post_fin,desp_gest_lact_inic,desp_gest_lact_fin,desp_gest_region,
    desp_gest_tip_embarazo,desp_gest_tip_parto,desp_gest_obs,desp_gest_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,luego.gest_id ,luego.gest_cat ,luego.gest_edad 
    ,luego.gest_grav_inic ,luego.gest_grav_fin ,luego.gest_pren_inic 
    ,luego.gest_pren_fin ,luego.gest_fech_parto ,luego.gest_post_inic 
    ,luego.gest_post_fin ,luego.gest_lact_inic ,luego.gest_lact_fin ,
    luego.gest_region ,luego.gest_tip_embarazo ,luego.gest_tip_parto 
    ,luego.gest_obs ,luego.gest_situacion ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_ddhh_gest delete on "informix".ddhh_gest 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ddhh_gest (gest_id,gest_cat,
    gest_edad,gest_grav_inic,gest_grav_fin,gest_pren_inic,gest_pren_fin,
    gest_fech_parto,gest_post_inic,gest_post_fin,gest_lact_inic,gest_lact_fin,
    gest_region,gest_tip_embarazo,gest_tip_parto,gest_obs,gest_situacion,
    desp_gest_id,desp_gest_cat,desp_gest_edad,desp_gest_grav_inic,desp_gest_grav_fin,
    desp_gest_pren_inic,desp_gest_pren_fin,desp_gest_fech_parto,desp_gest_post_inic,
    desp_gest_post_fin,desp_gest_lact_inic,desp_gest_lact_fin,desp_gest_region,
    desp_gest_tip_embarazo,desp_gest_tip_parto,desp_gest_obs,desp_gest_situacion,
    accion,usuario,hora)  values (antes.gest_id ,antes.gest_cat ,antes.gest_edad 
    ,antes.gest_grav_inic ,antes.gest_grav_fin ,antes.gest_pren_inic 
    ,antes.gest_pren_fin ,antes.gest_fech_parto ,antes.gest_post_inic 
    ,antes.gest_post_fin ,antes.gest_lact_inic ,antes.gest_lact_fin ,
    antes.gest_region ,antes.gest_tip_embarazo ,antes.gest_tip_parto 
    ,antes.gest_obs ,antes.gest_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_ddhh_gest update on "informix".ddhh_gest 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ddhh_gest (gest_id,gest_cat,
    gest_edad,gest_grav_inic,gest_grav_fin,gest_pren_inic,gest_pren_fin,
    gest_fech_parto,gest_post_inic,gest_post_fin,gest_lact_inic,gest_lact_fin,
    gest_region,gest_tip_embarazo,gest_tip_parto,gest_obs,gest_situacion,
    desp_gest_id,desp_gest_cat,desp_gest_edad,desp_gest_grav_inic,desp_gest_grav_fin,
    desp_gest_pren_inic,desp_gest_pren_fin,desp_gest_fech_parto,desp_gest_post_inic,
    desp_gest_post_fin,desp_gest_lact_inic,desp_gest_lact_fin,desp_gest_region,
    desp_gest_tip_embarazo,desp_gest_tip_parto,desp_gest_obs,desp_gest_situacion,
    accion,usuario,hora)  values (antes.gest_id ,antes.gest_cat ,antes.gest_edad 
    ,antes.gest_grav_inic ,antes.gest_grav_fin ,antes.gest_pren_inic 
    ,antes.gest_pren_fin ,antes.gest_fech_parto ,antes.gest_post_inic 
    ,antes.gest_post_fin ,antes.gest_lact_inic ,antes.gest_lact_fin ,
    antes.gest_region ,antes.gest_tip_embarazo ,antes.gest_tip_parto 
    ,antes.gest_obs ,antes.gest_situacion ,luego.gest_id ,luego.gest_cat 
    ,luego.gest_edad ,luego.gest_grav_inic ,luego.gest_grav_fin ,luego.gest_pren_inic 
    ,luego.gest_pren_fin ,luego.gest_fech_parto ,luego.gest_post_inic 
    ,luego.gest_post_fin ,luego.gest_lact_inic ,luego.gest_lact_fin ,
    luego.gest_region ,luego.gest_tip_embarazo ,luego.gest_tip_parto 
    ,luego.gest_obs ,luego.gest_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_ddhh_gest_cont insert on "informix"
    .ddhh_gest_cont referencing new as luego
    for each row
        (
        insert into "informix".aud_ddhh_gest_cont (gest_cont_id,
    gest_cont_perc_id,gest_cont_edad,gest_cont_grav_inic,gest_cont_grav_fin,
    gest_cont_pren_inic,gest_cont_pren_fin,gest_cont_fech_parto,gest_cont_post_inic,
    gest_cont_post_fin,gest_cont_lact_inic,gest_cont_lact_fin,gest_cont_region,
    gest_cont_tip_embarazo,gest_cont_tip_parto,gest_cont_obs,gest_cont_situacion,
    desp_gest_cont_id,desp_gest_cont_perc_id,desp_gest_cont_edad,desp_gest_cont_grav_inic,
    desp_gest_cont_grav_fin,desp_gest_cont_pren_inic,desp_gest_cont_pren_fin,
    desp_gest_cont_fech_parto,desp_gest_cont_post_inic,desp_gest_cont_post_fin,
    desp_gest_cont_lact_inic,desp_gest_cont_lact_fin,desp_gest_cont_region,
    desp_gest_cont_tip_embarazo,desp_gest_cont_tip_parto,desp_gest_cont_obs,
    desp_gest_cont_situacion,accion,usuario,hora)  values (NULL ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.gest_cont_id ,luego.gest_cont_perc_id 
    ,luego.gest_cont_edad ,luego.gest_cont_grav_inic ,luego.gest_cont_grav_fin 
    ,luego.gest_cont_pren_inic ,luego.gest_cont_pren_fin ,luego.gest_cont_fech_parto 
    ,luego.gest_cont_post_inic ,luego.gest_cont_post_fin ,luego.gest_cont_lact_inic 
    ,luego.gest_cont_lact_fin ,luego.gest_cont_region ,luego.gest_cont_tip_embarazo 
    ,luego.gest_cont_tip_parto ,luego.gest_cont_obs ,luego.gest_cont_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ddhh_gest_cont delete on "informix"
    .ddhh_gest_cont referencing old as antes
    for each row
        (
        insert into "informix".aud_ddhh_gest_cont (gest_cont_id,
    gest_cont_perc_id,gest_cont_edad,gest_cont_grav_inic,gest_cont_grav_fin,
    gest_cont_pren_inic,gest_cont_pren_fin,gest_cont_fech_parto,gest_cont_post_inic,
    gest_cont_post_fin,gest_cont_lact_inic,gest_cont_lact_fin,gest_cont_region,
    gest_cont_tip_embarazo,gest_cont_tip_parto,gest_cont_obs,gest_cont_situacion,
    desp_gest_cont_id,desp_gest_cont_perc_id,desp_gest_cont_edad,desp_gest_cont_grav_inic,
    desp_gest_cont_grav_fin,desp_gest_cont_pren_inic,desp_gest_cont_pren_fin,
    desp_gest_cont_fech_parto,desp_gest_cont_post_inic,desp_gest_cont_post_fin,
    desp_gest_cont_lact_inic,desp_gest_cont_lact_fin,desp_gest_cont_region,
    desp_gest_cont_tip_embarazo,desp_gest_cont_tip_parto,desp_gest_cont_obs,
    desp_gest_cont_situacion,accion,usuario,hora)  values (antes.gest_cont_id 
    ,antes.gest_cont_perc_id ,antes.gest_cont_edad ,antes.gest_cont_grav_inic 
    ,antes.gest_cont_grav_fin ,antes.gest_cont_pren_inic ,antes.gest_cont_pren_fin 
    ,antes.gest_cont_fech_parto ,antes.gest_cont_post_inic ,antes.gest_cont_post_fin 
    ,antes.gest_cont_lact_inic ,antes.gest_cont_lact_fin ,antes.gest_cont_region 
    ,antes.gest_cont_tip_embarazo ,antes.gest_cont_tip_parto ,antes.gest_cont_obs 
    ,antes.gest_cont_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ddhh_gest_cont update on "informix"
    .ddhh_gest_cont referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ddhh_gest_cont (gest_cont_id,
    gest_cont_perc_id,gest_cont_edad,gest_cont_grav_inic,gest_cont_grav_fin,
    gest_cont_pren_inic,gest_cont_pren_fin,gest_cont_fech_parto,gest_cont_post_inic,
    gest_cont_post_fin,gest_cont_lact_inic,gest_cont_lact_fin,gest_cont_region,
    gest_cont_tip_embarazo,gest_cont_tip_parto,gest_cont_obs,gest_cont_situacion,
    desp_gest_cont_id,desp_gest_cont_perc_id,desp_gest_cont_edad,desp_gest_cont_grav_inic,
    desp_gest_cont_grav_fin,desp_gest_cont_pren_inic,desp_gest_cont_pren_fin,
    desp_gest_cont_fech_parto,desp_gest_cont_post_inic,desp_gest_cont_post_fin,
    desp_gest_cont_lact_inic,desp_gest_cont_lact_fin,desp_gest_cont_region,
    desp_gest_cont_tip_embarazo,desp_gest_cont_tip_parto,desp_gest_cont_obs,
    desp_gest_cont_situacion,accion,usuario,hora)  values (antes.gest_cont_id 
    ,antes.gest_cont_perc_id ,antes.gest_cont_edad ,antes.gest_cont_grav_inic 
    ,antes.gest_cont_grav_fin ,antes.gest_cont_pren_inic ,antes.gest_cont_pren_fin 
    ,antes.gest_cont_fech_parto ,antes.gest_cont_post_inic ,antes.gest_cont_post_fin 
    ,antes.gest_cont_lact_inic ,antes.gest_cont_lact_fin ,antes.gest_cont_region 
    ,antes.gest_cont_tip_embarazo ,antes.gest_cont_tip_parto ,antes.gest_cont_obs 
    ,antes.gest_cont_situacion ,luego.gest_cont_id ,luego.gest_cont_perc_id 
    ,luego.gest_cont_edad ,luego.gest_cont_grav_inic ,luego.gest_cont_grav_fin 
    ,luego.gest_cont_pren_inic ,luego.gest_cont_pren_fin ,luego.gest_cont_fech_parto 
    ,luego.gest_cont_post_inic ,luego.gest_cont_post_fin ,luego.gest_cont_lact_inic 
    ,luego.gest_cont_lact_fin ,luego.gest_cont_region ,luego.gest_cont_tip_embarazo 
    ,luego.gest_cont_tip_parto ,luego.gest_cont_obs ,luego.gest_cont_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_re22_areas insert on "informix".re22_areas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_areas (area_id,area_desc,
    area_sit,desp_area_id,desp_area_desc,desp_area_sit,accion,usuario,
    hora)  values (NULL ,'' ,'' ,luego.area_id ,luego.area_desc ,luego.area_sit 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_re22_areas delete on "informix".re22_areas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_areas (area_id,area_desc,
    area_sit,desp_area_id,desp_area_desc,desp_area_sit,accion,usuario,
    hora)  values (antes.area_id ,antes.area_desc ,antes.area_sit ,NULL 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_areas update on "informix".re22_areas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_re22_areas (area_id,area_desc,
    area_sit,desp_area_id,desp_area_desc,desp_area_sit,accion,usuario,
    hora)  values (antes.area_id ,antes.area_desc ,antes.area_sit ,luego.area_id 
    ,luego.area_desc ,luego.area_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_re22_bancos insert on "informix"
    .re22_bancos referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_bancos (banco_id,banco_desc,
    banco_sit,desp_banco_id,desp_banco_desc,desp_banco_sit,accion,usuario,
    hora)  values (NULL ,'' ,'' ,luego.banco_id ,luego.banco_desc ,luego.banco_sit 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_re22_bancos delete on "informix"
    .re22_bancos referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_bancos (banco_id,banco_desc,
    banco_sit,desp_banco_id,desp_banco_desc,desp_banco_sit,accion,usuario,
    hora)  values (antes.banco_id ,antes.banco_desc ,antes.banco_sit 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_bancos update on "informix"
    .re22_bancos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_re22_bancos (banco_id,banco_desc,
    banco_sit,desp_banco_id,desp_banco_desc,desp_banco_sit,accion,usuario,
    hora)  values (antes.banco_id ,antes.banco_desc ,antes.banco_sit 
    ,luego.banco_id ,luego.banco_desc ,luego.banco_sit ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_re22_bono_escolar insert on "informix"
    .re22_bono_escolar referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_bono_escolar (bono_id,
    bono_year,bono_cant,bono_sit,desp_bono_id,desp_bono_year,desp_bono_cant,
    desp_bono_sit,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.bono_id 
    ,luego.bono_year ,luego.bono_cant ,luego.bono_sit ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_re22_bono_escolar delete on "informix"
    .re22_bono_escolar referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_bono_escolar (bono_id,
    bono_year,bono_cant,bono_sit,desp_bono_id,desp_bono_year,desp_bono_cant,
    desp_bono_sit,accion,usuario,hora)  values (antes.bono_id ,antes.bono_year 
    ,antes.bono_cant ,antes.bono_sit ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_re22_bono_escolar update on "informix"
    .re22_bono_escolar referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_re22_bono_escolar (bono_id,
    bono_year,bono_cant,bono_sit,desp_bono_id,desp_bono_year,desp_bono_cant,
    desp_bono_sit,accion,usuario,hora)  values (antes.bono_id ,antes.bono_year 
    ,antes.bono_cant ,antes.bono_sit ,luego.bono_id ,luego.bono_year 
    ,luego.bono_cant ,luego.bono_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_re22_bono_vacacional insert on 
    "informix".re22_bono_vacacional referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_bono_vacacional (bono_id,
    bono_year,bono_cant,bono_sit,desp_bono_id,desp_bono_year,desp_bono_cant,
    desp_bono_sit,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.bono_id 
    ,luego.bono_year ,luego.bono_cant ,luego.bono_sit ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_re22_bono_vacacional delete on 
    "informix".re22_bono_vacacional referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_bono_vacacional (bono_id,
    bono_year,bono_cant,bono_sit,desp_bono_id,desp_bono_year,desp_bono_cant,
    desp_bono_sit,accion,usuario,hora)  values (antes.bono_id ,antes.bono_year 
    ,antes.bono_cant ,antes.bono_sit ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_re22_bono_vacacional update on 
    "informix".re22_bono_vacacional referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_re22_bono_vacacional (bono_id,
    bono_year,bono_cant,bono_sit,desp_bono_id,desp_bono_year,desp_bono_cant,
    desp_bono_sit,accion,usuario,hora)  values (antes.bono_id ,antes.bono_year 
    ,antes.bono_cant ,antes.bono_sit ,luego.bono_id ,luego.bono_year 
    ,luego.bono_cant ,luego.bono_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_re22_tipos_descuentos insert on 
    "informix".re22_tipos_descuentos referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_tipos_descuentos (tip_id,
    tip_desc,tip_sit,desp_tip_id,desp_tip_desc,desp_tip_sit,accion,usuario,
    hora)  values (NULL ,'' ,'' ,luego.tip_id ,luego.tip_desc ,luego.tip_sit 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_re22_tipos_descuentos delete on 
    "informix".re22_tipos_descuentos referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_tipos_descuentos (tip_id,
    tip_desc,tip_sit,desp_tip_id,desp_tip_desc,desp_tip_sit,accion,usuario,
    hora)  values (antes.tip_id ,antes.tip_desc ,antes.tip_sit ,NULL 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_tipos_descuentos update on 
    "informix".re22_tipos_descuentos referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_re22_tipos_descuentos (tip_id,
    tip_desc,tip_sit,desp_tip_id,desp_tip_desc,desp_tip_sit,accion,usuario,
    hora)  values (antes.tip_id ,antes.tip_desc ,antes.tip_sit ,luego.tip_id 
    ,luego.tip_desc ,luego.tip_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_re22_ocupaciones insert on "informix"
    .re22_ocupaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_ocupaciones (ocupacion_id,
    ocupacion_desc,ocupacion_sit,desp_ocupacion_id,desp_ocupacion_desc,
    desp_ocupacion_sit,accion,usuario,hora)  values (NULL ,'' ,'' ,luego.ocupacion_id 
    ,luego.ocupacion_desc ,luego.ocupacion_sit ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_re22_ocupaciones delete on "informix"
    .re22_ocupaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_ocupaciones (ocupacion_id,
    ocupacion_desc,ocupacion_sit,desp_ocupacion_id,desp_ocupacion_desc,
    desp_ocupacion_sit,accion,usuario,hora)  values (antes.ocupacion_id 
    ,antes.ocupacion_desc ,antes.ocupacion_sit ,NULL ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_ocupaciones update on "informix"
    .re22_ocupaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_re22_ocupaciones (ocupacion_id,
    ocupacion_desc,ocupacion_sit,desp_ocupacion_id,desp_ocupacion_desc,
    desp_ocupacion_sit,accion,usuario,hora)  values (antes.ocupacion_id 
    ,antes.ocupacion_desc ,antes.ocupacion_sit ,luego.ocupacion_id ,luego.ocupacion_desc 
    ,luego.ocupacion_sit ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_re22_unidades_ejecutoras insert 
    on "informix".re22_unidades_ejecutoras referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_re22_unidades_ejecutoras (ue_codigo,
    ue_desc,ue_sit,desp_ue_codigo,desp_ue_desc,desp_ue_sit,accion,usuario,
    hora)  values (NULL ,'' ,'' ,luego.ue_codigo ,luego.ue_desc ,luego.ue_sit 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_re22_unidades_ejecutoras delete 
    on "informix".re22_unidades_ejecutoras referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_re22_unidades_ejecutoras (ue_codigo,
    ue_desc,ue_sit,desp_ue_codigo,desp_ue_desc,desp_ue_sit,accion,usuario,
    hora)  values (antes.ue_codigo ,antes.ue_desc ,antes.ue_sit ,NULL 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_unidades_ejecutoras update 
    on "informix".re22_unidades_ejecutoras referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_re22_unidades_ejecutoras (ue_codigo,
    ue_desc,ue_sit,desp_ue_codigo,desp_ue_desc,desp_ue_sit,accion,usuario,
    hora)  values (antes.ue_codigo ,antes.ue_desc ,antes.ue_sit ,luego.ue_codigo 
    ,luego.ue_desc ,luego.ue_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_re22_puestos insert on "informix"
    .re22_puestos referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_puestos (pue_id,pue_desc,
    pue_sit,desp_pue_id,desp_pue_desc,desp_pue_sit,accion,usuario,hora) 
     values (NULL ,'' ,'' ,luego.pue_id ,luego.pue_desc ,luego.pue_sit 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_re22_puestos delete on "informix"
    .re22_puestos referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_puestos (pue_id,pue_desc,
    pue_sit,desp_pue_id,desp_pue_desc,desp_pue_sit,accion,usuario,hora) 
     values (antes.pue_id ,antes.pue_desc ,antes.pue_sit ,NULL ,'' ,'' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_puestos update on "informix"
    .re22_puestos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_re22_puestos (pue_id,pue_desc,
    pue_sit,desp_pue_id,desp_pue_desc,desp_pue_sit,accion,usuario,hora) 
     values (antes.pue_id ,antes.pue_desc ,antes.pue_sit ,luego.pue_id 
    ,luego.pue_desc ,luego.pue_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_re22_obras insert on "informix".re22_obras 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_obras (obra_id,obra_desc,
    obra_dep,obra_subproducto,obra_grupo,obra_sit,desp_obra_id,desp_obra_desc,
    desp_obra_dep,desp_obra_subproducto,desp_obra_grupo,desp_obra_sit,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.obra_id 
    ,luego.obra_desc ,luego.obra_dep ,luego.obra_subproducto ,luego.obra_grupo 
    ,luego.obra_sit ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_re22_obras delete on "informix".re22_obras 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_obras (obra_id,obra_desc,
    obra_dep,obra_subproducto,obra_grupo,obra_sit,desp_obra_id,desp_obra_desc,
    desp_obra_dep,desp_obra_subproducto,desp_obra_grupo,desp_obra_sit,
    accion,usuario,hora)  values (antes.obra_id ,antes.obra_desc ,antes.obra_dep 
    ,antes.obra_subproducto ,antes.obra_grupo ,antes.obra_sit ,NULL ,
    '' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_obras update on "informix".re22_obras 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_re22_obras (obra_id,obra_desc,
    obra_dep,obra_subproducto,obra_grupo,obra_sit,desp_obra_id,desp_obra_desc,
    desp_obra_dep,desp_obra_subproducto,desp_obra_grupo,desp_obra_sit,
    accion,usuario,hora)  values (antes.obra_id ,antes.obra_desc ,antes.obra_dep 
    ,antes.obra_subproducto ,antes.obra_grupo ,antes.obra_sit ,luego.obra_id 
    ,luego.obra_desc ,luego.obra_dep ,luego.obra_subproducto ,luego.obra_grupo 
    ,luego.obra_sit ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_re22_subareas insert on "informix"
    .re22_subareas referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_subareas (sub_id,sub_descripcion,
    sub_salario,sub_bono,sub_base,sub_area,sub_situacion,desp_sub_id,
    desp_sub_descripcion,desp_sub_salario,desp_sub_bono,desp_sub_base,
    desp_sub_area,desp_sub_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,luego.sub_id ,luego.sub_descripcion ,luego.sub_salario 
    ,luego.sub_bono ,luego.sub_base ,luego.sub_area ,luego.sub_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_re22_subareas delete on "informix"
    .re22_subareas referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_subareas (sub_id,sub_descripcion,
    sub_salario,sub_bono,sub_base,sub_area,sub_situacion,desp_sub_id,
    desp_sub_descripcion,desp_sub_salario,desp_sub_bono,desp_sub_base,
    desp_sub_area,desp_sub_situacion,accion,usuario,hora)  values (antes.sub_id 
    ,antes.sub_descripcion ,antes.sub_salario ,antes.sub_bono ,antes.sub_base 
    ,antes.sub_area ,antes.sub_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_subareas update on "informix"
    .re22_subareas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_re22_subareas (sub_id,sub_descripcion,
    sub_salario,sub_bono,sub_base,sub_area,sub_situacion,desp_sub_id,
    desp_sub_descripcion,desp_sub_salario,desp_sub_bono,desp_sub_base,
    desp_sub_area,desp_sub_situacion,accion,usuario,hora)  values (antes.sub_id 
    ,antes.sub_descripcion ,antes.sub_salario ,antes.sub_bono ,antes.sub_base 
    ,antes.sub_area ,antes.sub_situacion ,luego.sub_id ,luego.sub_descripcion 
    ,luego.sub_salario ,luego.sub_bono ,luego.sub_base ,luego.sub_area 
    ,luego.sub_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_re22_asignaciones insert on "informix"
    .re22_asignaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_asignaciones (asig_id,
    asig_cat,asig_cantidad,asig_fecha,asig_motivo,asig_ordeno,asig_documento,
    asig_sit,asig_tipo,desp_asig_id,desp_asig_cat,desp_asig_cantidad,
    desp_asig_fecha,desp_asig_motivo,desp_asig_ordeno,desp_asig_documento,
    desp_asig_sit,desp_asig_tipo,accion,usuario,hora)  values (NULL ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,NULL ,luego.asig_id ,luego.asig_cat ,luego.asig_cantidad 
    ,luego.asig_fecha ,luego.asig_motivo ,luego.asig_ordeno ,luego.asig_documento 
    ,luego.asig_sit ,luego.asig_tipo ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_re22_asignaciones delete on "informix"
    .re22_asignaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_asignaciones (asig_id,
    asig_cat,asig_cantidad,asig_fecha,asig_motivo,asig_ordeno,asig_documento,
    asig_sit,asig_tipo,desp_asig_id,desp_asig_cat,desp_asig_cantidad,
    desp_asig_fecha,desp_asig_motivo,desp_asig_ordeno,desp_asig_documento,
    desp_asig_sit,desp_asig_tipo,accion,usuario,hora)  values (antes.asig_id 
    ,antes.asig_cat ,antes.asig_cantidad ,antes.asig_fecha ,antes.asig_motivo 
    ,antes.asig_ordeno ,antes.asig_documento ,antes.asig_sit ,antes.asig_tipo 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_re22_asignaciones update on "informix"
    .re22_asignaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_re22_asignaciones (asig_id,
    asig_cat,asig_cantidad,asig_fecha,asig_motivo,asig_ordeno,asig_documento,
    asig_sit,asig_tipo,desp_asig_id,desp_asig_cat,desp_asig_cantidad,
    desp_asig_fecha,desp_asig_motivo,desp_asig_ordeno,desp_asig_documento,
    desp_asig_sit,desp_asig_tipo,accion,usuario,hora)  values (antes.asig_id 
    ,antes.asig_cat ,antes.asig_cantidad ,antes.asig_fecha ,antes.asig_motivo 
    ,antes.asig_ordeno ,antes.asig_documento ,antes.asig_sit ,antes.asig_tipo 
    ,luego.asig_id ,luego.asig_cat ,luego.asig_cantidad ,luego.asig_fecha 
    ,luego.asig_motivo ,luego.asig_ordeno ,luego.asig_documento ,luego.asig_sit 
    ,luego.asig_tipo ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_re22_control_pagos_isr insert on 
    "informix".re22_control_pagos_isr referencing new as luego
    
    for each row
        (
        insert into "informix".aud_re22_control_pagos_isr (pago_id,
    pago_catalogo,pago_total,pago_abonado,pago_fecha,pago_sit,desp_pago_id,
    desp_pago_catalogo,desp_pago_total,desp_pago_abonado,desp_pago_fecha,
    desp_pago_sit,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,
    luego.pago_id ,luego.pago_catalogo ,luego.pago_total ,luego.pago_abonado 
    ,luego.pago_fecha ,luego.pago_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_re22_control_pagos_isr delete on 
    "informix".re22_control_pagos_isr referencing old as antes
    
    for each row
        (
        insert into "informix".aud_re22_control_pagos_isr (pago_id,
    pago_catalogo,pago_total,pago_abonado,pago_fecha,pago_sit,desp_pago_id,
    desp_pago_catalogo,desp_pago_total,desp_pago_abonado,desp_pago_fecha,
    desp_pago_sit,accion,usuario,hora)  values (antes.pago_id ,antes.pago_catalogo 
    ,antes.pago_total ,antes.pago_abonado ,antes.pago_fecha ,antes.pago_sit 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_control_pagos_isr update on 
    "informix".re22_control_pagos_isr referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_re22_control_pagos_isr (pago_id,
    pago_catalogo,pago_total,pago_abonado,pago_fecha,pago_sit,desp_pago_id,
    desp_pago_catalogo,desp_pago_total,desp_pago_abonado,desp_pago_fecha,
    desp_pago_sit,accion,usuario,hora)  values (antes.pago_id ,antes.pago_catalogo 
    ,antes.pago_total ,antes.pago_abonado ,antes.pago_fecha ,antes.pago_sit 
    ,luego.pago_id ,luego.pago_catalogo ,luego.pago_total ,luego.pago_abonado 
    ,luego.pago_fecha ,luego.pago_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_re22_fianzas insert on "informix"
    .re22_fianzas referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_fianzas (fia_id,fia_cat,
    fia_cantidad,fia_fecha,fia_sit,desp_fia_id,desp_fia_cat,desp_fia_cantidad,
    desp_fia_fecha,desp_fia_sit,accion,usuario,hora)  values (NULL ,''
     ,'' ,'' ,'' ,luego.fia_id ,luego.fia_cat ,luego.fia_cantidad ,luego.fia_fecha 
    ,luego.fia_sit ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_re22_fianzas delete on "informix"
    .re22_fianzas referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_fianzas (fia_id,fia_cat,
    fia_cantidad,fia_fecha,fia_sit,desp_fia_id,desp_fia_cat,desp_fia_cantidad,
    desp_fia_fecha,desp_fia_sit,accion,usuario,hora)  values (antes.fia_id 
    ,antes.fia_cat ,antes.fia_cantidad ,antes.fia_fecha ,antes.fia_sit 
    ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_fianzas update on "informix"
    .re22_fianzas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_re22_fianzas (fia_id,fia_cat,
    fia_cantidad,fia_fecha,fia_sit,desp_fia_id,desp_fia_cat,desp_fia_cantidad,
    desp_fia_fecha,desp_fia_sit,accion,usuario,hora)  values (antes.fia_id 
    ,antes.fia_cat ,antes.fia_cantidad ,antes.fia_fecha ,antes.fia_sit 
    ,luego.fia_id ,luego.fia_cat ,luego.fia_cantidad ,luego.fia_fecha 
    ,luego.fia_sit ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_re22_obras_bono insert on "informix"
    .re22_obras_bono referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_obras_bono (bono_id,bono_obra,
    bono_cantidad,bono_sit,desp_bono_id,desp_bono_obra,desp_bono_cantidad,
    desp_bono_sit,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.bono_id 
    ,luego.bono_obra ,luego.bono_cantidad ,luego.bono_sit ,'I' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".del_re22_obras_bono delete on "informix"
    .re22_obras_bono referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_obras_bono (bono_id,bono_obra,
    bono_cantidad,bono_sit,desp_bono_id,desp_bono_obra,desp_bono_cantidad,
    desp_bono_sit,accion,usuario,hora)  values (antes.bono_id ,antes.bono_obra 
    ,antes.bono_cantidad ,antes.bono_sit ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_re22_obras_bono update on "informix"
    .re22_obras_bono referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_re22_obras_bono (bono_id,bono_obra,
    bono_cantidad,bono_sit,desp_bono_id,desp_bono_obra,desp_bono_cantidad,
    desp_bono_sit,accion,usuario,hora)  values (antes.bono_id ,antes.bono_obra 
    ,antes.bono_cantidad ,antes.bono_sit ,luego.bono_id ,luego.bono_obra 
    ,luego.bono_cantidad ,luego.bono_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_re22_partidas insert on "informix"
    .re22_partidas referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_partidas (part_id,part_obra,
    part_numero,part_ue,part_sit,desp_part_id,desp_part_obra,desp_part_numero,
    desp_part_ue,desp_part_sit,accion,usuario,hora)  values (NULL ,'' 
    ,'' ,'' ,'' ,luego.part_id ,luego.part_obra ,luego.part_numero ,luego.part_ue 
    ,luego.part_sit ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_re22_partidas delete on "informix"
    .re22_partidas referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_partidas (part_id,part_obra,
    part_numero,part_ue,part_sit,desp_part_id,desp_part_obra,desp_part_numero,
    desp_part_ue,desp_part_sit,accion,usuario,hora)  values (antes.part_id 
    ,antes.part_obra ,antes.part_numero ,antes.part_ue ,antes.part_sit 
    ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_partidas update on "informix"
    .re22_partidas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_re22_partidas (part_id,part_obra,
    part_numero,part_ue,part_sit,desp_part_id,desp_part_obra,desp_part_numero,
    desp_part_ue,desp_part_sit,accion,usuario,hora)  values (antes.part_id 
    ,antes.part_obra ,antes.part_numero ,antes.part_ue ,antes.part_sit 
    ,luego.part_id ,luego.part_obra ,luego.part_numero ,luego.part_ue 
    ,luego.part_sit ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_re22_personal_isr insert on "informix"
    .re22_personal_isr referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_personal_isr (isr_id,
    isr_catalogo,isr_cantidad,isr_year,isr_sit,desp_isr_id,desp_isr_catalogo,
    desp_isr_cantidad,desp_isr_year,desp_isr_sit,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,luego.isr_id ,luego.isr_catalogo ,luego.isr_cantidad 
    ,luego.isr_year ,luego.isr_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_re22_personal_isr delete on "informix"
    .re22_personal_isr referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_personal_isr (isr_id,
    isr_catalogo,isr_cantidad,isr_year,isr_sit,desp_isr_id,desp_isr_catalogo,
    desp_isr_cantidad,desp_isr_year,desp_isr_sit,accion,usuario,hora) 
     values (antes.isr_id ,antes.isr_catalogo ,antes.isr_cantidad ,antes.isr_year 
    ,antes.isr_sit ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_re22_personal_isr update on "informix"
    .re22_personal_isr referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_re22_personal_isr (isr_id,
    isr_catalogo,isr_cantidad,isr_year,isr_sit,desp_isr_id,desp_isr_catalogo,
    desp_isr_cantidad,desp_isr_year,desp_isr_sit,accion,usuario,hora) 
     values (antes.isr_id ,antes.isr_catalogo ,antes.isr_cantidad ,antes.isr_year 
    ,antes.isr_sit ,luego.isr_id ,luego.isr_catalogo ,luego.isr_cantidad 
    ,luego.isr_year ,luego.isr_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_re22_historial_pagos insert on 
    "informix".re22_historial_pagos referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_historial_pagos (pago_id,
    pago_cat,pago_fecha,pago_salario,pago_bono66,pago_asig,pago_igss,
    pago_pio,pago_fianza,pago_desc,pago_isr,pago_total,pago_valido,pago_validacion,
    pago_tipo,desp_pago_id,desp_pago_cat,desp_pago_fecha,desp_pago_salario,
    desp_pago_bono66,desp_pago_asig,desp_pago_igss,desp_pago_pio,desp_pago_fianza,
    desp_pago_desc,desp_pago_isr,desp_pago_total,desp_pago_valido,desp_pago_validacion,
    desp_pago_tipo,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.pago_id ,luego.pago_cat ,luego.pago_fecha 
    ,luego.pago_salario ,luego.pago_bono66 ,luego.pago_asig ,luego.pago_igss 
    ,luego.pago_pio ,luego.pago_fianza ,luego.pago_desc ,luego.pago_isr 
    ,luego.pago_total ,luego.pago_valido ,luego.pago_validacion ,luego.pago_tipo 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_re22_historial_pagos delete on 
    "informix".re22_historial_pagos referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_historial_pagos (pago_id,
    pago_cat,pago_fecha,pago_salario,pago_bono66,pago_asig,pago_igss,
    pago_pio,pago_fianza,pago_desc,pago_isr,pago_total,pago_valido,pago_validacion,
    pago_tipo,desp_pago_id,desp_pago_cat,desp_pago_fecha,desp_pago_salario,
    desp_pago_bono66,desp_pago_asig,desp_pago_igss,desp_pago_pio,desp_pago_fianza,
    desp_pago_desc,desp_pago_isr,desp_pago_total,desp_pago_valido,desp_pago_validacion,
    desp_pago_tipo,accion,usuario,hora)  values (antes.pago_id ,antes.pago_cat 
    ,antes.pago_fecha ,antes.pago_salario ,antes.pago_bono66 ,antes.pago_asig 
    ,antes.pago_igss ,antes.pago_pio ,antes.pago_fianza ,antes.pago_desc 
    ,antes.pago_isr ,antes.pago_total ,antes.pago_valido ,antes.pago_validacion 
    ,antes.pago_tipo ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_historial_pagos update on 
    "informix".re22_historial_pagos referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_re22_historial_pagos (pago_id,
    pago_cat,pago_fecha,pago_salario,pago_bono66,pago_asig,pago_igss,
    pago_pio,pago_fianza,pago_desc,pago_isr,pago_total,pago_valido,pago_validacion,
    pago_tipo,desp_pago_id,desp_pago_cat,desp_pago_fecha,desp_pago_salario,
    desp_pago_bono66,desp_pago_asig,desp_pago_igss,desp_pago_pio,desp_pago_fianza,
    desp_pago_desc,desp_pago_isr,desp_pago_total,desp_pago_valido,desp_pago_validacion,
    desp_pago_tipo,accion,usuario,hora)  values (antes.pago_id ,antes.pago_cat 
    ,antes.pago_fecha ,antes.pago_salario ,antes.pago_bono66 ,antes.pago_asig 
    ,antes.pago_igss ,antes.pago_pio ,antes.pago_fianza ,antes.pago_desc 
    ,antes.pago_isr ,antes.pago_total ,antes.pago_valido ,antes.pago_validacion 
    ,antes.pago_tipo ,luego.pago_id ,luego.pago_cat ,luego.pago_fecha 
    ,luego.pago_salario ,luego.pago_bono66 ,luego.pago_asig ,luego.pago_igss 
    ,luego.pago_pio ,luego.pago_fianza ,luego.pago_desc ,luego.pago_isr 
    ,luego.pago_total ,luego.pago_valido ,luego.pago_validacion ,luego.pago_tipo 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_re22_historial_situaciones insert 
    on "informix".re22_historial_situaciones referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_re22_historial_situaciones 
    (sit_id,sit_catalogo,sit_situacion,sit_observaciones,sit_fecha,desp_sit_id,
    desp_sit_catalogo,desp_sit_situacion,desp_sit_observaciones,desp_sit_fecha,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.sit_id ,luego.sit_catalogo 
    ,luego.sit_situacion ,luego.sit_observaciones ,luego.sit_fecha ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_re22_historial_situaciones delete 
    on "informix".re22_historial_situaciones referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_re22_historial_situaciones 
    (sit_id,sit_catalogo,sit_situacion,sit_observaciones,sit_fecha,desp_sit_id,
    desp_sit_catalogo,desp_sit_situacion,desp_sit_observaciones,desp_sit_fecha,
    accion,usuario,hora)  values (antes.sit_id ,antes.sit_catalogo ,antes.sit_situacion 
    ,antes.sit_observaciones ,antes.sit_fecha ,NULL ,'' ,'' ,'' ,'' ,'D' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_historial_situaciones update 
    on "informix".re22_historial_situaciones referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_re22_historial_situaciones 
    (sit_id,sit_catalogo,sit_situacion,sit_observaciones,sit_fecha,desp_sit_id,
    desp_sit_catalogo,desp_sit_situacion,desp_sit_observaciones,desp_sit_fecha,
    accion,usuario,hora)  values (antes.sit_id ,antes.sit_catalogo ,antes.sit_situacion 
    ,antes.sit_observaciones ,antes.sit_fecha ,luego.sit_id ,luego.sit_catalogo 
    ,luego.sit_situacion ,luego.sit_observaciones ,luego.sit_fecha ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_re22_mper insert on "informix".re22_mper 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_mper (per_catalogo,per_nom1,
    per_nom2,per_nom3,per_ape1,per_ape2,per_ape3,per_sexo,per_estado_civil,
    per_religion,per_nacimiento,per_lugar_nac,per_dpi,per_fecha_ext,per_lugar_ext,
    per_iggs,per_nit,per_pio,per_ocupacion,per_empleo,per_obra,per_subarea,
    per_horas,per_bono_prof,per_direccion,per_telefono,per_celular,per_email,
    per_contrato,per_inicio,per_fin,per_situacion,per_peisol,per_puesto,
    per_obs,desp_per_catalogo,desp_per_nom1,desp_per_nom2,desp_per_nom3,
    desp_per_ape1,desp_per_ape2,desp_per_ape3,desp_per_sexo,desp_per_estado_civil,
    desp_per_religion,desp_per_nacimiento,desp_per_lugar_nac,desp_per_dpi,
    desp_per_fecha_ext,desp_per_lugar_ext,desp_per_iggs,desp_per_nit,
    desp_per_pio,desp_per_ocupacion,desp_per_empleo,desp_per_obra,desp_per_subarea,
    desp_per_horas,desp_per_bono_prof,desp_per_direccion,desp_per_telefono,
    desp_per_celular,desp_per_email,desp_per_contrato,desp_per_inicio,
    desp_per_fin,desp_per_situacion,desp_per_peisol,desp_per_puesto,desp_per_obs,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,luego.per_catalogo ,luego.per_nom1 ,luego.per_nom2 ,luego.per_nom3 
    ,luego.per_ape1 ,luego.per_ape2 ,luego.per_ape3 ,luego.per_sexo ,
    luego.per_estado_civil ,luego.per_religion ,luego.per_nacimiento 
    ,luego.per_lugar_nac ,luego.per_dpi ,luego.per_fecha_ext ,luego.per_lugar_ext 
    ,luego.per_iggs ,luego.per_nit ,luego.per_pio ,luego.per_ocupacion 
    ,luego.per_empleo ,luego.per_obra ,luego.per_subarea ,luego.per_horas 
    ,luego.per_bono_prof ,luego.per_direccion ,luego.per_telefono ,luego.per_celular 
    ,luego.per_email ,luego.per_contrato ,luego.per_inicio ,luego.per_fin 
    ,luego.per_situacion ,luego.per_peisol ,luego.per_puesto ,luego.per_obs 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_re22_mper delete on "informix".re22_mper 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_mper (per_catalogo,per_nom1,
    per_nom2,per_nom3,per_ape1,per_ape2,per_ape3,per_sexo,per_estado_civil,
    per_religion,per_nacimiento,per_lugar_nac,per_dpi,per_fecha_ext,per_lugar_ext,
    per_iggs,per_nit,per_pio,per_ocupacion,per_empleo,per_obra,per_subarea,
    per_horas,per_bono_prof,per_direccion,per_telefono,per_celular,per_email,
    per_contrato,per_inicio,per_fin,per_situacion,per_peisol,per_puesto,
    per_obs,desp_per_catalogo,desp_per_nom1,desp_per_nom2,desp_per_nom3,
    desp_per_ape1,desp_per_ape2,desp_per_ape3,desp_per_sexo,desp_per_estado_civil,
    desp_per_religion,desp_per_nacimiento,desp_per_lugar_nac,desp_per_dpi,
    desp_per_fecha_ext,desp_per_lugar_ext,desp_per_iggs,desp_per_nit,
    desp_per_pio,desp_per_ocupacion,desp_per_empleo,desp_per_obra,desp_per_subarea,
    desp_per_horas,desp_per_bono_prof,desp_per_direccion,desp_per_telefono,
    desp_per_celular,desp_per_email,desp_per_contrato,desp_per_inicio,
    desp_per_fin,desp_per_situacion,desp_per_peisol,desp_per_puesto,desp_per_obs,
    accion,usuario,hora)  values (antes.per_catalogo ,antes.per_nom1 
    ,antes.per_nom2 ,antes.per_nom3 ,antes.per_ape1 ,antes.per_ape2 ,
    antes.per_ape3 ,antes.per_sexo ,antes.per_estado_civil ,antes.per_religion 
    ,antes.per_nacimiento ,antes.per_lugar_nac ,antes.per_dpi ,antes.per_fecha_ext 
    ,antes.per_lugar_ext ,antes.per_iggs ,antes.per_nit ,antes.per_pio 
    ,antes.per_ocupacion ,antes.per_empleo ,antes.per_obra ,antes.per_subarea 
    ,antes.per_horas ,antes.per_bono_prof ,antes.per_direccion ,antes.per_telefono 
    ,antes.per_celular ,antes.per_email ,antes.per_contrato ,antes.per_inicio 
    ,antes.per_fin ,antes.per_situacion ,antes.per_peisol ,antes.per_puesto 
    ,antes.per_obs ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_mper update on "informix".re22_mper 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_re22_mper (per_catalogo,per_nom1,
    per_nom2,per_nom3,per_ape1,per_ape2,per_ape3,per_sexo,per_estado_civil,
    per_religion,per_nacimiento,per_lugar_nac,per_dpi,per_fecha_ext,per_lugar_ext,
    per_iggs,per_nit,per_pio,per_ocupacion,per_empleo,per_obra,per_subarea,
    per_horas,per_bono_prof,per_direccion,per_telefono,per_celular,per_email,
    per_contrato,per_inicio,per_fin,per_situacion,per_peisol,per_puesto,
    per_obs,desp_per_catalogo,desp_per_nom1,desp_per_nom2,desp_per_nom3,
    desp_per_ape1,desp_per_ape2,desp_per_ape3,desp_per_sexo,desp_per_estado_civil,
    desp_per_religion,desp_per_nacimiento,desp_per_lugar_nac,desp_per_dpi,
    desp_per_fecha_ext,desp_per_lugar_ext,desp_per_iggs,desp_per_nit,
    desp_per_pio,desp_per_ocupacion,desp_per_empleo,desp_per_obra,desp_per_subarea,
    desp_per_horas,desp_per_bono_prof,desp_per_direccion,desp_per_telefono,
    desp_per_celular,desp_per_email,desp_per_contrato,desp_per_inicio,
    desp_per_fin,desp_per_situacion,desp_per_peisol,desp_per_puesto,desp_per_obs,
    accion,usuario,hora)  values (antes.per_catalogo ,antes.per_nom1 
    ,antes.per_nom2 ,antes.per_nom3 ,antes.per_ape1 ,antes.per_ape2 ,
    antes.per_ape3 ,antes.per_sexo ,antes.per_estado_civil ,antes.per_religion 
    ,antes.per_nacimiento ,antes.per_lugar_nac ,antes.per_dpi ,antes.per_fecha_ext 
    ,antes.per_lugar_ext ,antes.per_iggs ,antes.per_nit ,antes.per_pio 
    ,antes.per_ocupacion ,antes.per_empleo ,antes.per_obra ,antes.per_subarea 
    ,antes.per_horas ,antes.per_bono_prof ,antes.per_direccion ,antes.per_telefono 
    ,antes.per_celular ,antes.per_email ,antes.per_contrato ,antes.per_inicio 
    ,antes.per_fin ,antes.per_situacion ,antes.per_peisol ,antes.per_puesto 
    ,antes.per_obs ,luego.per_catalogo ,luego.per_nom1 ,luego.per_nom2 
    ,luego.per_nom3 ,luego.per_ape1 ,luego.per_ape2 ,luego.per_ape3 ,
    luego.per_sexo ,luego.per_estado_civil ,luego.per_religion ,luego.per_nacimiento 
    ,luego.per_lugar_nac ,luego.per_dpi ,luego.per_fecha_ext ,luego.per_lugar_ext 
    ,luego.per_iggs ,luego.per_nit ,luego.per_pio ,luego.per_ocupacion 
    ,luego.per_empleo ,luego.per_obra ,luego.per_subarea ,luego.per_horas 
    ,luego.per_bono_prof ,luego.per_direccion ,luego.per_telefono ,luego.per_celular 
    ,luego.per_email ,luego.per_contrato ,luego.per_inicio ,luego.per_fin 
    ,luego.per_situacion ,luego.per_peisol ,luego.per_puesto ,luego.per_obs 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_re22_descuentos insert on "informix"
    .re22_descuentos referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_descuentos (desc_id,desc_cat,
    desc_doc,desc_inicio,desc_fin,desc_cuota,desc_tipo,desc_duracion,
    desc_sit,desc_beneficiario,desp_desc_id,desp_desc_cat,desp_desc_doc,
    desp_desc_inicio,desp_desc_fin,desp_desc_cuota,desp_desc_tipo,desp_desc_duracion,
    desp_desc_sit,desp_desc_beneficiario,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.desc_id ,luego.desc_cat ,
    luego.desc_doc ,luego.desc_inicio ,luego.desc_fin ,luego.desc_cuota 
    ,luego.desc_tipo ,luego.desc_duracion ,luego.desc_sit ,luego.desc_beneficiario 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_re22_descuentos delete on "informix"
    .re22_descuentos referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_descuentos (desc_id,desc_cat,
    desc_doc,desc_inicio,desc_fin,desc_cuota,desc_tipo,desc_duracion,
    desc_sit,desc_beneficiario,desp_desc_id,desp_desc_cat,desp_desc_doc,
    desp_desc_inicio,desp_desc_fin,desp_desc_cuota,desp_desc_tipo,desp_desc_duracion,
    desp_desc_sit,desp_desc_beneficiario,accion,usuario,hora)  values 
    (antes.desc_id ,antes.desc_cat ,antes.desc_doc ,antes.desc_inicio 
    ,antes.desc_fin ,antes.desc_cuota ,antes.desc_tipo ,antes.desc_duracion 
    ,antes.desc_sit ,antes.desc_beneficiario ,NULL ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_descuentos update on "informix"
    .re22_descuentos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_re22_descuentos (desc_id,desc_cat,
    desc_doc,desc_inicio,desc_fin,desc_cuota,desc_tipo,desc_duracion,
    desc_sit,desc_beneficiario,desp_desc_id,desp_desc_cat,desp_desc_doc,
    desp_desc_inicio,desp_desc_fin,desp_desc_cuota,desp_desc_tipo,desp_desc_duracion,
    desp_desc_sit,desp_desc_beneficiario,accion,usuario,hora)  values 
    (antes.desc_id ,antes.desc_cat ,antes.desc_doc ,antes.desc_inicio 
    ,antes.desc_fin ,antes.desc_cuota ,antes.desc_tipo ,antes.desc_duracion 
    ,antes.desc_sit ,antes.desc_beneficiario ,luego.desc_id ,luego.desc_cat 
    ,luego.desc_doc ,luego.desc_inicio ,luego.desc_fin ,luego.desc_cuota 
    ,luego.desc_tipo ,luego.desc_duracion ,luego.desc_sit ,luego.desc_beneficiario 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_dot_articulos insert on "informix"
    .dot_articulos referencing new as luego
    for each row
        (
        insert into "informix".aud_dot_articulos (art_id,art_desc,
    art_sit,desp_art_id,desp_art_desc,desp_art_sit,accion,usuario,hora) 
     values (NULL ,'' ,'' ,luego.art_id ,luego.art_desc ,luego.art_sit 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dot_articulos delete on "informix"
    .dot_articulos referencing old as antes
    for each row
        (
        insert into "informix".aud_dot_articulos (art_id,art_desc,
    art_sit,desp_art_id,desp_art_desc,desp_art_sit,accion,usuario,hora) 
     values (antes.art_id ,antes.art_desc ,antes.art_sit ,NULL ,'' ,'' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_dot_tallas insert on "informix".dot_tallas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_dot_tallas (talla_id,talla_desc,
    talla_art,talla_sit,desp_talla_id,desp_talla_desc,desp_talla_art,
    desp_talla_sit,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.talla_id 
    ,luego.talla_desc ,luego.talla_art ,luego.talla_sit ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_dot_tallas delete on "informix".dot_tallas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_dot_tallas (talla_id,talla_desc,
    talla_art,talla_sit,desp_talla_id,desp_talla_desc,desp_talla_art,
    desp_talla_sit,accion,usuario,hora)  values (antes.talla_id ,antes.talla_desc 
    ,antes.talla_art ,antes.talla_sit ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_dot_tallas update on "informix".dot_tallas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dot_tallas (talla_id,talla_desc,
    talla_art,talla_sit,desp_talla_id,desp_talla_desc,desp_talla_art,
    desp_talla_sit,accion,usuario,hora)  values (antes.talla_id ,antes.talla_desc 
    ,antes.talla_art ,antes.talla_sit ,luego.talla_id ,luego.talla_desc 
    ,luego.talla_art ,luego.talla_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_dot_tallas_oficiales insert on 
    "informix".dot_tallas_oficiales referencing new as luego
    for each row
        (
        insert into "informix".aud_dot_tallas_oficiales (talla_catalogo,
    talla_uniforme,talla_botas,talla_boina,talla_overol,talla_obs,talla_ult_fec_act,
    talla_situacion,desp_talla_catalogo,desp_talla_uniforme,desp_talla_botas,
    desp_talla_boina,desp_talla_overol,desp_talla_obs,desp_talla_ult_fec_act,
    desp_talla_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,luego.talla_catalogo ,luego.talla_uniforme ,luego.talla_botas 
    ,luego.talla_boina ,luego.talla_overol ,luego.talla_obs ,luego.talla_ult_fec_act 
    ,luego.talla_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_dot_tallas_oficiales delete on 
    "informix".dot_tallas_oficiales referencing old as antes
    for each row
        (
        insert into "informix".aud_dot_tallas_oficiales (talla_catalogo,
    talla_uniforme,talla_botas,talla_boina,talla_overol,talla_obs,talla_ult_fec_act,
    talla_situacion,desp_talla_catalogo,desp_talla_uniforme,desp_talla_botas,
    desp_talla_boina,desp_talla_overol,desp_talla_obs,desp_talla_ult_fec_act,
    desp_talla_situacion,accion,usuario,hora)  values (antes.talla_catalogo 
    ,antes.talla_uniforme ,antes.talla_botas ,antes.talla_boina ,antes.talla_overol 
    ,antes.talla_obs ,antes.talla_ult_fec_act ,antes.talla_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_dot_tallas_oficiales update on 
    "informix".dot_tallas_oficiales referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_dot_tallas_oficiales (talla_catalogo,
    talla_uniforme,talla_botas,talla_boina,talla_overol,talla_obs,talla_ult_fec_act,
    talla_situacion,desp_talla_catalogo,desp_talla_uniforme,desp_talla_botas,
    desp_talla_boina,desp_talla_overol,desp_talla_obs,desp_talla_ult_fec_act,
    desp_talla_situacion,accion,usuario,hora)  values (antes.talla_catalogo 
    ,antes.talla_uniforme ,antes.talla_botas ,antes.talla_boina ,antes.talla_overol 
    ,antes.talla_obs ,antes.talla_ult_fec_act ,antes.talla_situacion 
    ,luego.talla_catalogo ,luego.talla_uniforme ,luego.talla_botas ,luego.talla_boina 
    ,luego.talla_overol ,luego.talla_obs ,luego.talla_ult_fec_act ,luego.talla_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_dot_tallas_cadetropa insert on 
    "informix".dot_tallas_cadetropa referencing new as luego
    for each row
        (
        insert into "informix".aud_dot_tallas_cadetropa (talla_plaza2,
    talla_uniforme2,talla_botas2,talla_boina2,talla_obs2,talla_ult_fec_act2,
    talla_situacion2,desp_talla_plaza2,desp_talla_uniforme2,desp_talla_botas2,
    desp_talla_boina2,desp_talla_obs2,desp_talla_ult_fec_act2,desp_talla_situacion2,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,luego.talla_plaza2 
    ,luego.talla_uniforme2 ,luego.talla_botas2 ,luego.talla_boina2 ,luego.talla_obs2 
    ,luego.talla_ult_fec_act2 ,luego.talla_situacion2 ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_dot_tallas_cadetropa delete on 
    "informix".dot_tallas_cadetropa referencing old as antes
    for each row
        (
        insert into "informix".aud_dot_tallas_cadetropa (talla_plaza2,
    talla_uniforme2,talla_botas2,talla_boina2,talla_obs2,talla_ult_fec_act2,
    talla_situacion2,desp_talla_plaza2,desp_talla_uniforme2,desp_talla_botas2,
    desp_talla_boina2,desp_talla_obs2,desp_talla_ult_fec_act2,desp_talla_situacion2,
    accion,usuario,hora)  values (antes.talla_plaza2 ,antes.talla_uniforme2 
    ,antes.talla_botas2 ,antes.talla_boina2 ,antes.talla_obs2 ,antes.talla_ult_fec_act2 
    ,antes.talla_situacion2 ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_dot_tallas_cadetropa update on 
    "informix".dot_tallas_cadetropa referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_dot_tallas_cadetropa (talla_plaza2,
    talla_uniforme2,talla_botas2,talla_boina2,talla_obs2,talla_ult_fec_act2,
    talla_situacion2,desp_talla_plaza2,desp_talla_uniforme2,desp_talla_botas2,
    desp_talla_boina2,desp_talla_obs2,desp_talla_ult_fec_act2,desp_talla_situacion2,
    accion,usuario,hora)  values (antes.talla_plaza2 ,antes.talla_uniforme2 
    ,antes.talla_botas2 ,antes.talla_boina2 ,antes.talla_obs2 ,antes.talla_ult_fec_act2 
    ,antes.talla_situacion2 ,luego.talla_plaza2 ,luego.talla_uniforme2 
    ,luego.talla_botas2 ,luego.talla_boina2 ,luego.talla_obs2 ,luego.talla_ult_fec_act2 
    ,luego.talla_situacion2 ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_dot_tallas_perscontrato insert 
    on "informix".dot_tallas_perscontrato referencing new as luego
    
    for each row
        (
        insert into "informix".aud_dot_tallas_perscontrato (talla_catalogo3,
    talla_uniforme3,talla_botas3,talla_boina3,talla_cofia3,talla_bata3,
    talla_obs3,talla_ult_fec_act3,talla_situacion3,desp_talla_catalogo3,
    desp_talla_uniforme3,desp_talla_botas3,desp_talla_boina3,desp_talla_cofia3,
    desp_talla_bata3,desp_talla_obs3,desp_talla_ult_fec_act3,desp_talla_situacion3,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.talla_catalogo3 
    ,luego.talla_uniforme3 ,luego.talla_botas3 ,luego.talla_boina3 ,luego.talla_cofia3 
    ,luego.talla_bata3 ,luego.talla_obs3 ,luego.talla_ult_fec_act3 ,luego.talla_situacion3 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dot_tallas_perscontrato delete 
    on "informix".dot_tallas_perscontrato referencing old as antes
    
    for each row
        (
        insert into "informix".aud_dot_tallas_perscontrato (talla_catalogo3,
    talla_uniforme3,talla_botas3,talla_boina3,talla_cofia3,talla_bata3,
    talla_obs3,talla_ult_fec_act3,talla_situacion3,desp_talla_catalogo3,
    desp_talla_uniforme3,desp_talla_botas3,desp_talla_boina3,desp_talla_cofia3,
    desp_talla_bata3,desp_talla_obs3,desp_talla_ult_fec_act3,desp_talla_situacion3,
    accion,usuario,hora)  values (antes.talla_catalogo3 ,antes.talla_uniforme3 
    ,antes.talla_botas3 ,antes.talla_boina3 ,antes.talla_cofia3 ,antes.talla_bata3 
    ,antes.talla_obs3 ,antes.talla_ult_fec_act3 ,antes.talla_situacion3 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_dot_tallas_perscontrato update 
    on "informix".dot_tallas_perscontrato referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_dot_tallas_perscontrato (talla_catalogo3,
    talla_uniforme3,talla_botas3,talla_boina3,talla_cofia3,talla_bata3,
    talla_obs3,talla_ult_fec_act3,talla_situacion3,desp_talla_catalogo3,
    desp_talla_uniforme3,desp_talla_botas3,desp_talla_boina3,desp_talla_cofia3,
    desp_talla_bata3,desp_talla_obs3,desp_talla_ult_fec_act3,desp_talla_situacion3,
    accion,usuario,hora)  values (antes.talla_catalogo3 ,antes.talla_uniforme3 
    ,antes.talla_botas3 ,antes.talla_boina3 ,antes.talla_cofia3 ,antes.talla_bata3 
    ,antes.talla_obs3 ,antes.talla_ult_fec_act3 ,antes.talla_situacion3 
    ,luego.talla_catalogo3 ,luego.talla_uniforme3 ,luego.talla_botas3 
    ,luego.talla_boina3 ,luego.talla_cofia3 ,luego.talla_bata3 ,luego.talla_obs3 
    ,luego.talla_ult_fec_act3 ,luego.talla_situacion3 ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_esip_mis_necesidad insert on "informix"
    .esip_mis_necesidad referencing new as luego
    for each row
        (
        insert into "informix".aud_esip_mis_necesidad (esi_id,
    esi_nec_id,esi_mision1,esi_mision2,esi_mision3,esi_mision4,esi_mision5,
    esi_mision6,esi_mision7,esi_mision8,esi_mision9,esi_mision10,esi_sit,
    desp_esi_id,desp_esi_nec_id,desp_esi_mision1,desp_esi_mision2,desp_esi_mision3,
    desp_esi_mision4,desp_esi_mision5,desp_esi_mision6,desp_esi_mision7,
    desp_esi_mision8,desp_esi_mision9,desp_esi_mision10,desp_esi_sit,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,luego.esi_id ,luego.esi_nec_id ,luego.esi_mision1 ,luego.esi_mision2 
    ,luego.esi_mision3 ,luego.esi_mision4 ,luego.esi_mision5 ,luego.esi_mision6 
    ,luego.esi_mision7 ,luego.esi_mision8 ,luego.esi_mision9 ,luego.esi_mision10 
    ,luego.esi_sit ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esip_mis_necesidad delete on "informix"
    .esip_mis_necesidad referencing old as antes
    for each row
        (
        insert into "informix".aud_esip_mis_necesidad (esi_id,
    esi_nec_id,esi_mision1,esi_mision2,esi_mision3,esi_mision4,esi_mision5,
    esi_mision6,esi_mision7,esi_mision8,esi_mision9,esi_mision10,esi_sit,
    desp_esi_id,desp_esi_nec_id,desp_esi_mision1,desp_esi_mision2,desp_esi_mision3,
    desp_esi_mision4,desp_esi_mision5,desp_esi_mision6,desp_esi_mision7,
    desp_esi_mision8,desp_esi_mision9,desp_esi_mision10,desp_esi_sit,
    accion,usuario,hora)  values (antes.esi_id ,antes.esi_nec_id ,antes.esi_mision1 
    ,antes.esi_mision2 ,antes.esi_mision3 ,antes.esi_mision4 ,antes.esi_mision5 
    ,antes.esi_mision6 ,antes.esi_mision7 ,antes.esi_mision8 ,antes.esi_mision9 
    ,antes.esi_mision10 ,antes.esi_sit ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_esip_mis_necesidad update on "informix"
    .esip_mis_necesidad referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_esip_mis_necesidad (esi_id,
    esi_nec_id,esi_mision1,esi_mision2,esi_mision3,esi_mision4,esi_mision5,
    esi_mision6,esi_mision7,esi_mision8,esi_mision9,esi_mision10,esi_sit,
    desp_esi_id,desp_esi_nec_id,desp_esi_mision1,desp_esi_mision2,desp_esi_mision3,
    desp_esi_mision4,desp_esi_mision5,desp_esi_mision6,desp_esi_mision7,
    desp_esi_mision8,desp_esi_mision9,desp_esi_mision10,desp_esi_sit,
    accion,usuario,hora)  values (antes.esi_id ,antes.esi_nec_id ,antes.esi_mision1 
    ,antes.esi_mision2 ,antes.esi_mision3 ,antes.esi_mision4 ,antes.esi_mision5 
    ,antes.esi_mision6 ,antes.esi_mision7 ,antes.esi_mision8 ,antes.esi_mision9 
    ,antes.esi_mision10 ,antes.esi_sit ,luego.esi_id ,luego.esi_nec_id 
    ,luego.esi_mision1 ,luego.esi_mision2 ,luego.esi_mision3 ,luego.esi_mision4 
    ,luego.esi_mision5 ,luego.esi_mision6 ,luego.esi_mision7 ,luego.esi_mision8 
    ,luego.esi_mision9 ,luego.esi_mision10 ,luego.esi_sit ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_esip_areas_mision insert on "informix"
    .esip_areas_mision referencing new as luego
    for each row
        (
        insert into "informix".aud_esip_areas_mision (mis_id,
    mis_no_mision,mis_descripcion,mis_fecha,mis_sit,desp_mis_id,desp_mis_no_mision,
    desp_mis_descripcion,desp_mis_fecha,desp_mis_sit,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,luego.mis_id ,luego.mis_no_mision ,luego.mis_descripcion 
    ,luego.mis_fecha ,luego.mis_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_esip_areas_mision delete on "informix"
    .esip_areas_mision referencing old as antes
    for each row
        (
        insert into "informix".aud_esip_areas_mision (mis_id,
    mis_no_mision,mis_descripcion,mis_fecha,mis_sit,desp_mis_id,desp_mis_no_mision,
    desp_mis_descripcion,desp_mis_fecha,desp_mis_sit,accion,usuario,hora) 
     values (antes.mis_id ,antes.mis_no_mision ,antes.mis_descripcion 
    ,antes.mis_fecha ,antes.mis_sit ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_esip_areas_mision update on "informix"
    .esip_areas_mision referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esip_areas_mision (mis_id,
    mis_no_mision,mis_descripcion,mis_fecha,mis_sit,desp_mis_id,desp_mis_no_mision,
    desp_mis_descripcion,desp_mis_fecha,desp_mis_sit,accion,usuario,hora) 
     values (antes.mis_id ,antes.mis_no_mision ,antes.mis_descripcion 
    ,antes.mis_fecha ,antes.mis_sit ,luego.mis_id ,luego.mis_no_mision 
    ,luego.mis_descripcion ,luego.mis_fecha ,luego.mis_sit ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esip_necesidad insert on "informix"
    .esip_necesidad referencing new as luego
    for each row
        (
        insert into "informix".aud_esip_necesidad (nec_id,nec_nom_proy,
    nec_fecha,nec_periodo,nec_dep,nec_costo,nec_cuantia,nec_prioridad,
    nec_justificacion,nec_obs,nec_situacion,desp_nec_id,desp_nec_nom_proy,
    desp_nec_fecha,desp_nec_periodo,desp_nec_dep,desp_nec_costo,desp_nec_cuantia,
    desp_nec_prioridad,desp_nec_justificacion,desp_nec_obs,desp_nec_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,luego.nec_id ,luego.nec_nom_proy ,luego.nec_fecha ,luego.nec_periodo 
    ,luego.nec_dep ,luego.nec_costo ,luego.nec_cuantia ,luego.nec_prioridad 
    ,luego.nec_justificacion ,luego.nec_obs ,luego.nec_situacion ,'I' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esip_necesidad delete on "informix"
    .esip_necesidad referencing old as antes
    for each row
        (
        insert into "informix".aud_esip_necesidad (nec_id,nec_nom_proy,
    nec_fecha,nec_periodo,nec_dep,nec_costo,nec_cuantia,nec_prioridad,
    nec_justificacion,nec_obs,nec_situacion,desp_nec_id,desp_nec_nom_proy,
    desp_nec_fecha,desp_nec_periodo,desp_nec_dep,desp_nec_costo,desp_nec_cuantia,
    desp_nec_prioridad,desp_nec_justificacion,desp_nec_obs,desp_nec_situacion,
    accion,usuario,hora)  values (antes.nec_id ,antes.nec_nom_proy ,antes.nec_fecha 
    ,antes.nec_periodo ,antes.nec_dep ,antes.nec_costo ,antes.nec_cuantia 
    ,antes.nec_prioridad ,antes.nec_justificacion ,antes.nec_obs ,antes.nec_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_esip_necesidad update on "informix"
    .esip_necesidad referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esip_necesidad (nec_id,nec_nom_proy,
    nec_fecha,nec_periodo,nec_dep,nec_costo,nec_cuantia,nec_prioridad,
    nec_justificacion,nec_obs,nec_situacion,desp_nec_id,desp_nec_nom_proy,
    desp_nec_fecha,desp_nec_periodo,desp_nec_dep,desp_nec_costo,desp_nec_cuantia,
    desp_nec_prioridad,desp_nec_justificacion,desp_nec_obs,desp_nec_situacion,
    accion,usuario,hora)  values (antes.nec_id ,antes.nec_nom_proy ,antes.nec_fecha 
    ,antes.nec_periodo ,antes.nec_dep ,antes.nec_costo ,antes.nec_cuantia 
    ,antes.nec_prioridad ,antes.nec_justificacion ,antes.nec_obs ,antes.nec_situacion 
    ,luego.nec_id ,luego.nec_nom_proy ,luego.nec_fecha ,luego.nec_periodo 
    ,luego.nec_dep ,luego.nec_costo ,luego.nec_cuantia ,luego.nec_prioridad 
    ,luego.nec_justificacion ,luego.nec_obs ,luego.nec_situacion ,'U' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esip_recup_capacidades insert on 
    "informix".esip_recup_capacidades referencing new as luego
    
    for each row
        (
        insert into "informix".aud_esip_recup_capacidades (rec_id,
    rec_nom_proy,rec_fecha,rec_periodo,rec_dep,rec_costo,rec_modalidad,
    rec_prioridad,rec_justificacion,rec_obs,rec_situacion,desp_rec_id,
    desp_rec_nom_proy,desp_rec_fecha,desp_rec_periodo,desp_rec_dep,desp_rec_costo,
    desp_rec_modalidad,desp_rec_prioridad,desp_rec_justificacion,desp_rec_obs,
    desp_rec_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,luego.rec_id ,luego.rec_nom_proy ,luego.rec_fecha 
    ,luego.rec_periodo ,luego.rec_dep ,luego.rec_costo ,luego.rec_modalidad 
    ,luego.rec_prioridad ,luego.rec_justificacion ,luego.rec_obs ,luego.rec_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esip_recup_capacidades delete on 
    "informix".esip_recup_capacidades referencing old as antes
    
    for each row
        (
        insert into "informix".aud_esip_recup_capacidades (rec_id,
    rec_nom_proy,rec_fecha,rec_periodo,rec_dep,rec_costo,rec_modalidad,
    rec_prioridad,rec_justificacion,rec_obs,rec_situacion,desp_rec_id,
    desp_rec_nom_proy,desp_rec_fecha,desp_rec_periodo,desp_rec_dep,desp_rec_costo,
    desp_rec_modalidad,desp_rec_prioridad,desp_rec_justificacion,desp_rec_obs,
    desp_rec_situacion,accion,usuario,hora)  values (antes.rec_id ,antes.rec_nom_proy 
    ,antes.rec_fecha ,antes.rec_periodo ,antes.rec_dep ,antes.rec_costo 
    ,antes.rec_modalidad ,antes.rec_prioridad ,antes.rec_justificacion 
    ,antes.rec_obs ,antes.rec_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_esip_recup_capacidades update on 
    "informix".esip_recup_capacidades referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_esip_recup_capacidades (rec_id,
    rec_nom_proy,rec_fecha,rec_periodo,rec_dep,rec_costo,rec_modalidad,
    rec_prioridad,rec_justificacion,rec_obs,rec_situacion,desp_rec_id,
    desp_rec_nom_proy,desp_rec_fecha,desp_rec_periodo,desp_rec_dep,desp_rec_costo,
    desp_rec_modalidad,desp_rec_prioridad,desp_rec_justificacion,desp_rec_obs,
    desp_rec_situacion,accion,usuario,hora)  values (antes.rec_id ,antes.rec_nom_proy 
    ,antes.rec_fecha ,antes.rec_periodo ,antes.rec_dep ,antes.rec_costo 
    ,antes.rec_modalidad ,antes.rec_prioridad ,antes.rec_justificacion 
    ,antes.rec_obs ,antes.rec_situacion ,luego.rec_id ,luego.rec_nom_proy 
    ,luego.rec_fecha ,luego.rec_periodo ,luego.rec_dep ,luego.rec_costo 
    ,luego.rec_modalidad ,luego.rec_prioridad ,luego.rec_justificacion 
    ,luego.rec_obs ,luego.rec_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_sie_inventarioclase2 insert on 
    "informix".sie_inventarioclase2 referencing new as luego
    for each row
        (
        insert into "informix".aud_sie_inventarioclase2 (inv_id,
    inv_correlativo,inv_articulo,inv_talla,inv_cantidad,inv_movimiento,
    inv_cat_ingreso,inv_cat_recibio,inv_fec_movimiento,inv_dependencia,
    inv_obs,inv_situacion,desp_inv_id,desp_inv_correlativo,desp_inv_articulo,
    desp_inv_talla,desp_inv_cantidad,desp_inv_movimiento,desp_inv_cat_ingreso,
    desp_inv_cat_recibio,desp_inv_fec_movimiento,desp_inv_dependencia,
    desp_inv_obs,desp_inv_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.inv_id ,luego.inv_correlativo 
    ,luego.inv_articulo ,luego.inv_talla ,luego.inv_cantidad ,luego.inv_movimiento 
    ,luego.inv_cat_ingreso ,luego.inv_cat_recibio ,luego.inv_fec_movimiento 
    ,luego.inv_dependencia ,luego.inv_obs ,luego.inv_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_sie_inventarioclase2 update on 
    "informix".sie_inventarioclase2 referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_sie_inventarioclase2 (inv_id,
    inv_correlativo,inv_articulo,inv_talla,inv_cantidad,inv_movimiento,
    inv_cat_ingreso,inv_cat_recibio,inv_fec_movimiento,inv_dependencia,
    inv_obs,inv_situacion,desp_inv_id,desp_inv_correlativo,desp_inv_articulo,
    desp_inv_talla,desp_inv_cantidad,desp_inv_movimiento,desp_inv_cat_ingreso,
    desp_inv_cat_recibio,desp_inv_fec_movimiento,desp_inv_dependencia,
    desp_inv_obs,desp_inv_situacion,accion,usuario,hora)  values (antes.inv_id 
    ,antes.inv_correlativo ,antes.inv_articulo ,antes.inv_talla ,antes.inv_cantidad 
    ,antes.inv_movimiento ,antes.inv_cat_ingreso ,antes.inv_cat_recibio 
    ,antes.inv_fec_movimiento ,antes.inv_dependencia ,antes.inv_obs ,
    antes.inv_situacion ,luego.inv_id ,luego.inv_correlativo ,luego.inv_articulo 
    ,luego.inv_talla ,luego.inv_cantidad ,luego.inv_movimiento ,luego.inv_cat_ingreso 
    ,luego.inv_cat_recibio ,luego.inv_fec_movimiento ,luego.inv_dependencia 
    ,luego.inv_obs ,luego.inv_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_sie_inventarioclase2 delete on 
    "informix".sie_inventarioclase2 referencing old as antes
    for each row
        (
        insert into "informix".aud_sie_inventarioclase2 (inv_id,
    inv_articulo,inv_talla,inv_cantidad,inv_movimiento,inv_cat_ingreso,
    inv_cat_recibio,inv_fec_movimiento,inv_dependencia,inv_obs,inv_situacion,
    desp_inv_id,desp_inv_articulo,desp_inv_talla,desp_inv_cantidad,desp_inv_movimiento,
    desp_inv_cat_ingreso,desp_inv_cat_recibio,desp_inv_fec_movimiento,
    desp_inv_dependencia,desp_inv_obs,desp_inv_situacion,accion,usuario,
    hora)  values (antes.inv_id ,antes.inv_articulo ,antes.inv_talla 
    ,antes.inv_cantidad ,antes.inv_movimiento ,antes.inv_cat_ingreso 
    ,antes.inv_cat_recibio ,antes.inv_fec_movimiento ,antes.inv_dependencia 
    ,antes.inv_obs ,antes.inv_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tropa_movimientos insert on "informix"
    .tropa_movimientos referencing new as luego
    for each row
        (
        insert into "informix".aud_tropa_movimientos (mov_id,
    mov_catalogo,mov_dependencia,mov_accion,mov_fecha,mov_situacion,desp_mov_id,
    desp_mov_catalogo,desp_mov_dependencia,desp_mov_accion,desp_mov_fecha,
    desp_mov_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,luego.mov_id ,luego.mov_catalogo ,luego.mov_dependencia ,luego.mov_accion 
    ,luego.mov_fecha ,luego.mov_situacion ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_tropa_movimientos delete on "informix"
    .tropa_movimientos referencing old as antes
    for each row
        (
        insert into "informix".aud_tropa_movimientos (mov_id,
    mov_catalogo,mov_dependencia,mov_accion,mov_fecha,mov_situacion,desp_mov_id,
    desp_mov_catalogo,desp_mov_dependencia,desp_mov_accion,desp_mov_fecha,
    desp_mov_situacion,accion,usuario,hora)  values (antes.mov_id ,antes.mov_catalogo 
    ,antes.mov_dependencia ,antes.mov_accion ,antes.mov_fecha ,antes.mov_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_tropa_movimientos update on "informix"
    .tropa_movimientos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tropa_movimientos (mov_id,
    mov_catalogo,mov_dependencia,mov_accion,mov_fecha,mov_situacion,desp_mov_id,
    desp_mov_catalogo,desp_mov_dependencia,desp_mov_accion,desp_mov_fecha,
    desp_mov_situacion,accion,usuario,hora)  values (antes.mov_id ,antes.mov_catalogo 
    ,antes.mov_dependencia ,antes.mov_accion ,antes.mov_fecha ,antes.mov_situacion 
    ,luego.mov_id ,luego.mov_catalogo ,luego.mov_dependencia ,luego.mov_accion 
    ,luego.mov_fecha ,luego.mov_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_tropa_disponibilidad insert on 
    "informix".tropa_disponibilidad referencing new as luego
    for each row
        (
        insert into "informix".aud_tropa_disponibilidad (disp_id,
    disp_catalogo,disp_dependencia,disp_situaicon,desp_disp_id,desp_disp_catalogo,
    desp_disp_dependencia,desp_disp_situaicon,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,luego.disp_id ,luego.disp_catalogo ,luego.disp_dependencia 
    ,luego.disp_situaicon ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_tropa_disponibilidad delete on 
    "informix".tropa_disponibilidad referencing old as antes
    for each row
        (
        insert into "informix".aud_tropa_disponibilidad (disp_id,
    disp_catalogo,disp_dependencia,disp_situaicon,desp_disp_id,desp_disp_catalogo,
    desp_disp_dependencia,desp_disp_situaicon,accion,usuario,hora)  values 
    (antes.disp_id ,antes.disp_catalogo ,antes.disp_dependencia ,antes.disp_situaicon 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_tropa_disponibilidad update on 
    "informix".tropa_disponibilidad referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_tropa_disponibilidad (disp_id,
    disp_catalogo,disp_dependencia,disp_situaicon,desp_disp_id,desp_disp_catalogo,
    desp_disp_dependencia,desp_disp_situaicon,accion,usuario,hora)  values 
    (antes.disp_id ,antes.disp_catalogo ,antes.disp_dependencia ,antes.disp_situaicon 
    ,luego.disp_id ,luego.disp_catalogo ,luego.disp_dependencia ,luego.disp_situaicon 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_solicitud_usuarios insert on "informix"
    .solicitud_usuarios referencing new as luego
    for each row
        (
        insert into "informix".aud_solicitud_usuarios (usu_id,
    usu_mensaje,usu_fechadoc,usu_fechaac,usu_fechaautori,usu_catusuario,
    usu_usuario,usu_observa,usu_comando,usu_catrecibe,usu_fecharecibe,
    usu_situacion,desp_usu_id,desp_usu_mensaje,desp_usu_fechadoc,desp_usu_fechaac,
    desp_usu_fechaautori,desp_usu_catusuario,desp_usu_usuario,desp_usu_observa,
    desp_usu_comando,desp_usu_catrecibe,desp_usu_fecharecibe,desp_usu_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,luego.usu_id ,luego.usu_mensaje ,luego.usu_fechadoc ,luego.usu_fechaac 
    ,luego.usu_fechaautori ,luego.usu_catusuario ,luego.usu_usuario ,
    luego.usu_observa ,luego.usu_comando ,luego.usu_catrecibe ,luego.usu_fecharecibe 
    ,luego.usu_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_solicitud_usuarios delete on "informix"
    .solicitud_usuarios referencing old as antes
    for each row
        (
        insert into "informix".aud_solicitud_usuarios (usu_id,
    usu_mensaje,usu_fechadoc,usu_fechaac,usu_fechaautori,usu_catusuario,
    usu_usuario,usu_observa,usu_comando,usu_catrecibe,usu_fecharecibe,
    usu_situacion,desp_usu_id,desp_usu_mensaje,desp_usu_fechadoc,desp_usu_fechaac,
    desp_usu_fechaautori,desp_usu_catusuario,desp_usu_usuario,desp_usu_observa,
    desp_usu_comando,desp_usu_catrecibe,desp_usu_fecharecibe,desp_usu_situacion,
    accion,usuario,hora)  values (antes.usu_id ,antes.usu_mensaje ,antes.usu_fechadoc 
    ,antes.usu_fechaac ,antes.usu_fechaautori ,antes.usu_catusuario ,
    antes.usu_usuario ,antes.usu_observa ,antes.usu_comando ,antes.usu_catrecibe 
    ,antes.usu_fecharecibe ,antes.usu_situacion ,NULL ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_solicitud_usuarios update on "informix"
    .solicitud_usuarios referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_solicitud_usuarios (usu_id,
    usu_mensaje,usu_fechadoc,usu_fechaac,usu_fechaautori,usu_catusuario,
    usu_usuario,usu_observa,usu_comando,usu_catrecibe,usu_fecharecibe,
    usu_situacion,desp_usu_id,desp_usu_mensaje,desp_usu_fechadoc,desp_usu_fechaac,
    desp_usu_fechaautori,desp_usu_catusuario,desp_usu_usuario,desp_usu_observa,
    desp_usu_comando,desp_usu_catrecibe,desp_usu_fecharecibe,desp_usu_situacion,
    accion,usuario,hora)  values (antes.usu_id ,antes.usu_mensaje ,antes.usu_fechadoc 
    ,antes.usu_fechaac ,antes.usu_fechaautori ,antes.usu_catusuario ,
    antes.usu_usuario ,antes.usu_observa ,antes.usu_comando ,antes.usu_catrecibe 
    ,antes.usu_fecharecibe ,antes.usu_situacion ,luego.usu_id ,luego.usu_mensaje 
    ,luego.usu_fechadoc ,luego.usu_fechaac ,luego.usu_fechaautori ,luego.usu_catusuario 
    ,luego.usu_usuario ,luego.usu_observa ,luego.usu_comando ,luego.usu_catrecibe 
    ,luego.usu_fecharecibe ,luego.usu_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_cov_oficios insert on "informix"
    .cov_oficios referencing new as luego
    for each row
        (
        insert into "informix".aud_cov_oficios (ofi_id,ofi_cat,
    ofi_ruta,ofi_sit,desp_ofi_id,desp_ofi_cat,desp_ofi_ruta,desp_ofi_sit,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.ofi_id ,luego.ofi_cat 
    ,luego.ofi_ruta ,luego.ofi_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_cov_oficios delete on "informix"
    .cov_oficios referencing old as antes
    for each row
        (
        insert into "informix".aud_cov_oficios (ofi_id,ofi_cat,
    ofi_ruta,ofi_sit,desp_ofi_id,desp_ofi_cat,desp_ofi_ruta,desp_ofi_sit,
    accion,usuario,hora)  values (antes.ofi_id ,antes.ofi_cat ,antes.ofi_ruta 
    ,antes.ofi_sit ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_cov_oficios update on "informix"
    .cov_oficios referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cov_oficios (ofi_id,ofi_cat,
    ofi_ruta,ofi_sit,desp_ofi_id,desp_ofi_cat,desp_ofi_ruta,desp_ofi_sit,
    accion,usuario,hora)  values (antes.ofi_id ,antes.ofi_cat ,antes.ofi_ruta 
    ,antes.ofi_sit ,luego.ofi_id ,luego.ofi_cat ,luego.ofi_ruta ,luego.ofi_sit 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cov_registro insert on "informix"
    .cov_registro referencing new as luego
    for each row
        (
        insert into "informix".aud_cov_registro (reg_id,reg_catalogo,
    reg_vacuna,reg_dosis,reg_situacion,desp_reg_id,desp_reg_catalogo,
    desp_reg_vacuna,desp_reg_dosis,desp_reg_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.reg_id ,luego.reg_catalogo 
    ,luego.reg_vacuna ,luego.reg_dosis ,luego.reg_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_cov_registro delete on "informix"
    .cov_registro referencing old as antes
    for each row
        (
        insert into "informix".aud_cov_registro (reg_id,reg_catalogo,
    reg_vacuna,reg_dosis,reg_situacion,desp_reg_id,desp_reg_catalogo,
    desp_reg_vacuna,desp_reg_dosis,desp_reg_situacion,accion,usuario,
    hora)  values (antes.reg_id ,antes.reg_catalogo ,antes.reg_vacuna 
    ,antes.reg_dosis ,antes.reg_situacion ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_cov_registro update on "informix"
    .cov_registro referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cov_registro (reg_id,reg_catalogo,
    reg_vacuna,reg_dosis,reg_situacion,desp_reg_id,desp_reg_catalogo,
    desp_reg_vacuna,desp_reg_dosis,desp_reg_situacion,accion,usuario,
    hora)  values (antes.reg_id ,antes.reg_catalogo ,antes.reg_vacuna 
    ,antes.reg_dosis ,antes.reg_situacion ,luego.reg_id ,luego.reg_catalogo 
    ,luego.reg_vacuna ,luego.reg_dosis ,luego.reg_situacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cov_vacunas insert on "informix"
    .cov_vacunas referencing new as luego
    for each row
        (
        insert into "informix".aud_cov_vacunas (vac_cod,vac_nombre,
    vac_dosis,vac_situacion,desp_vac_cod,desp_vac_nombre,desp_vac_dosis,
    desp_vac_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.vac_cod 
    ,luego.vac_nombre ,luego.vac_dosis ,luego.vac_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_cov_vacunas delete on "informix"
    .cov_vacunas referencing old as antes
    for each row
        (
        insert into "informix".aud_cov_vacunas (vac_cod,vac_nombre,
    vac_dosis,vac_situacion,desp_vac_cod,desp_vac_nombre,desp_vac_dosis,
    desp_vac_situacion,accion,usuario,hora)  values (antes.vac_cod ,antes.vac_nombre 
    ,antes.vac_dosis ,antes.vac_situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_cov_vacunas update on "informix"
    .cov_vacunas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cov_vacunas (vac_cod,vac_nombre,
    vac_dosis,vac_situacion,desp_vac_cod,desp_vac_nombre,desp_vac_dosis,
    desp_vac_situacion,accion,usuario,hora)  values (antes.vac_cod ,antes.vac_nombre 
    ,antes.vac_dosis ,antes.vac_situacion ,luego.vac_cod ,luego.vac_nombre 
    ,luego.vac_dosis ,luego.vac_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_dfdes_bindustrial insert on "informix"
    .dfdes_bindustrial referencing new as luego
    for each row
        (
        insert into "informix".aud_dfdes_bindustrial (dfdi_catalogo,
    dfdi_codigo,dfdi_nu_reg,dfdi_tipo_desc,dfdi_fec_ini,dfdi_mes_act,
    dfdi_fin_pres,dfdi_monto,dfdi_saldo,dfdi_mensual,dfdi_tot_cuotas,
    dfdi_num_cuotas,dfdi_nom_banco,dfdi_codeudor,dfdi_nom_bene,dfdi_no_prest,
    dfdi_si_no,desp_dfdi_catalogo,desp_dfdi_codigo,desp_dfdi_nu_reg,desp_dfdi_tipo_desc,
    desp_dfdi_fec_ini,desp_dfdi_mes_act,desp_dfdi_fin_pres,desp_dfdi_monto,
    desp_dfdi_saldo,desp_dfdi_mensual,desp_dfdi_tot_cuotas,desp_dfdi_num_cuotas,
    desp_dfdi_nom_banco,desp_dfdi_codeudor,desp_dfdi_nom_bene,desp_dfdi_no_prest,
    desp_dfdi_si_no,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.dfdi_catalogo ,luego.dfdi_codigo 
    ,luego.dfdi_nu_reg ,luego.dfdi_tipo_desc ,luego.dfdi_fec_ini ,luego.dfdi_mes_act 
    ,luego.dfdi_fin_pres ,luego.dfdi_monto ,luego.dfdi_saldo ,luego.dfdi_mensual 
    ,luego.dfdi_tot_cuotas ,luego.dfdi_num_cuotas ,luego.dfdi_nom_banco 
    ,luego.dfdi_codeudor ,luego.dfdi_nom_bene ,luego.dfdi_no_prest ,luego.dfdi_si_no 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dfdes_bindustrial delete on "informix"
    .dfdes_bindustrial referencing old as antes
    for each row
        (
        insert into "informix".aud_dfdes_bindustrial (dfdi_catalogo,
    dfdi_codigo,dfdi_nu_reg,dfdi_tipo_desc,dfdi_fec_ini,dfdi_mes_act,
    dfdi_fin_pres,dfdi_monto,dfdi_saldo,dfdi_mensual,dfdi_tot_cuotas,
    dfdi_num_cuotas,dfdi_nom_banco,dfdi_codeudor,dfdi_nom_bene,dfdi_no_prest,
    dfdi_si_no,desp_dfdi_catalogo,desp_dfdi_codigo,desp_dfdi_nu_reg,desp_dfdi_tipo_desc,
    desp_dfdi_fec_ini,desp_dfdi_mes_act,desp_dfdi_fin_pres,desp_dfdi_monto,
    desp_dfdi_saldo,desp_dfdi_mensual,desp_dfdi_tot_cuotas,desp_dfdi_num_cuotas,
    desp_dfdi_nom_banco,desp_dfdi_codeudor,desp_dfdi_nom_bene,desp_dfdi_no_prest,
    desp_dfdi_si_no,accion,usuario,hora)  values (antes.dfdi_catalogo 
    ,antes.dfdi_codigo ,antes.dfdi_nu_reg ,antes.dfdi_tipo_desc ,antes.dfdi_fec_ini 
    ,antes.dfdi_mes_act ,antes.dfdi_fin_pres ,antes.dfdi_monto ,antes.dfdi_saldo 
    ,antes.dfdi_mensual ,antes.dfdi_tot_cuotas ,antes.dfdi_num_cuotas 
    ,antes.dfdi_nom_banco ,antes.dfdi_codeudor ,antes.dfdi_nom_bene ,
    antes.dfdi_no_prest ,antes.dfdi_si_no ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_dfdes_bindustrial update on "informix"
    .dfdes_bindustrial referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dfdes_bindustrial (dfdi_catalogo,
    dfdi_codigo,dfdi_nu_reg,dfdi_tipo_desc,dfdi_fec_ini,dfdi_mes_act,
    dfdi_fin_pres,dfdi_monto,dfdi_saldo,dfdi_mensual,dfdi_tot_cuotas,
    dfdi_num_cuotas,dfdi_nom_banco,dfdi_codeudor,dfdi_nom_bene,dfdi_no_prest,
    dfdi_si_no,desp_dfdi_catalogo,desp_dfdi_codigo,desp_dfdi_nu_reg,desp_dfdi_tipo_desc,
    desp_dfdi_fec_ini,desp_dfdi_mes_act,desp_dfdi_fin_pres,desp_dfdi_monto,
    desp_dfdi_saldo,desp_dfdi_mensual,desp_dfdi_tot_cuotas,desp_dfdi_num_cuotas,
    desp_dfdi_nom_banco,desp_dfdi_codeudor,desp_dfdi_nom_bene,desp_dfdi_no_prest,
    desp_dfdi_si_no,accion,usuario,hora)  values (antes.dfdi_catalogo 
    ,antes.dfdi_codigo ,antes.dfdi_nu_reg ,antes.dfdi_tipo_desc ,antes.dfdi_fec_ini 
    ,antes.dfdi_mes_act ,antes.dfdi_fin_pres ,antes.dfdi_monto ,antes.dfdi_saldo 
    ,antes.dfdi_mensual ,antes.dfdi_tot_cuotas ,antes.dfdi_num_cuotas 
    ,antes.dfdi_nom_banco ,antes.dfdi_codeudor ,antes.dfdi_nom_bene ,
    antes.dfdi_no_prest ,antes.dfdi_si_no ,luego.dfdi_catalogo ,luego.dfdi_codigo 
    ,luego.dfdi_nu_reg ,luego.dfdi_tipo_desc ,luego.dfdi_fec_ini ,luego.dfdi_mes_act 
    ,luego.dfdi_fin_pres ,luego.dfdi_monto ,luego.dfdi_saldo ,luego.dfdi_mensual 
    ,luego.dfdi_tot_cuotas ,luego.dfdi_num_cuotas ,luego.dfdi_nom_banco 
    ,luego.dfdi_codeudor ,luego.dfdi_nom_bene ,luego.dfdi_no_prest ,luego.dfdi_si_no 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_re22_cuentas insert on "informix"
    .re22_cuentas referencing new as luego
    for each row
        (
        insert into "informix".aud_re22_cuentas (cue_id,cue_cat,
    cue_cuenta,cue_banco,cue_sit,desp_cue_id,desp_cue_cat,desp_cue_cuenta,
    desp_cue_banco,desp_cue_sit,accion,usuario,hora)  values (NULL ,''
     ,'' ,'' ,'' ,luego.cue_id ,luego.cue_cat ,luego.cue_cuenta ,luego.cue_banco 
    ,luego.cue_sit ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_re22_cuentas delete on "informix"
    .re22_cuentas referencing old as antes
    for each row
        (
        insert into "informix".aud_re22_cuentas (cue_id,cue_cat,
    cue_cuenta,cue_banco,cue_sit,desp_cue_id,desp_cue_cat,desp_cue_cuenta,
    desp_cue_banco,desp_cue_sit,accion,usuario,hora)  values (antes.cue_id 
    ,antes.cue_cat ,antes.cue_cuenta ,antes.cue_banco ,antes.cue_sit 
    ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_cuentas update on "informix"
    .re22_cuentas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_re22_cuentas (cue_id,cue_cat,
    cue_cuenta,cue_banco,cue_sit,desp_cue_id,desp_cue_cat,desp_cue_cuenta,
    desp_cue_banco,desp_cue_sit,accion,usuario,hora)  values (antes.cue_id 
    ,antes.cue_cat ,antes.cue_cuenta ,antes.cue_banco ,antes.cue_sit 
    ,luego.cue_id ,luego.cue_cat ,luego.cue_cuenta ,luego.cue_banco ,
    luego.cue_sit ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_psan_boleta_restore insert on "informix"
    .psan_boleta_restore referencing new as luego
    for each row
        (
        insert into "informix".aud_psan_boleta_restore (bol_det_catalogo,
    bol_det_fecha,bol_det_sancion,bol_det_grado,bol_dependencia,bol_desc_empleo,
    bol_jerarquia_sancionado,bol_sancionador,bol_gra_sancionador,bol_empleo_sancionador,
    bol_justicia,bol_gra_justicia,bol_comte,bol_gra_comte,bol_fech_cumple,
    bol_det_status,desp_bol_det_catalogo,desp_bol_det_fecha,desp_bol_det_sancion,
    desp_bol_det_grado,desp_bol_dependencia,desp_bol_desc_empleo,desp_bol_jerarquia_sancionado,
    desp_bol_sancionador,desp_bol_gra_sancionador,desp_bol_empleo_sancionador,
    desp_bol_justicia,desp_bol_gra_justicia,desp_bol_comte,desp_bol_gra_comte,
    desp_bol_fech_cumple,desp_bol_det_status,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.bol_det_catalogo 
    ,luego.bol_det_fecha ,luego.bol_det_sancion ,luego.bol_det_grado 
    ,luego.bol_dependencia ,luego.bol_desc_empleo ,luego.bol_jerarquia_sancionado 
    ,luego.bol_sancionador ,luego.bol_gra_sancionador ,luego.bol_empleo_sancionador 
    ,luego.bol_justicia ,luego.bol_gra_justicia ,luego.bol_comte ,luego.bol_gra_comte 
    ,luego.bol_fech_cumple ,luego.bol_det_status ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_psan_boleta_restore delete on "informix"
    .psan_boleta_restore referencing old as antes
    for each row
        (
        insert into "informix".aud_psan_boleta_restore (bol_det_catalogo,
    bol_det_fecha,bol_det_sancion,bol_det_grado,bol_dependencia,bol_desc_empleo,
    bol_jerarquia_sancionado,bol_sancionador,bol_gra_sancionador,bol_empleo_sancionador,
    bol_justicia,bol_gra_justicia,bol_comte,bol_gra_comte,bol_fech_cumple,
    bol_det_status,desp_bol_det_catalogo,desp_bol_det_fecha,desp_bol_det_sancion,
    desp_bol_det_grado,desp_bol_dependencia,desp_bol_desc_empleo,desp_bol_jerarquia_sancionado,
    desp_bol_sancionador,desp_bol_gra_sancionador,desp_bol_empleo_sancionador,
    desp_bol_justicia,desp_bol_gra_justicia,desp_bol_comte,desp_bol_gra_comte,
    desp_bol_fech_cumple,desp_bol_det_status,accion,usuario,hora)  values 
    (antes.bol_det_catalogo ,antes.bol_det_fecha ,antes.bol_det_sancion 
    ,antes.bol_det_grado ,antes.bol_dependencia ,antes.bol_desc_empleo 
    ,antes.bol_jerarquia_sancionado ,antes.bol_sancionador ,antes.bol_gra_sancionador 
    ,antes.bol_empleo_sancionador ,antes.bol_justicia ,antes.bol_gra_justicia 
    ,antes.bol_comte ,antes.bol_gra_comte ,antes.bol_fech_cumple ,antes.bol_det_status 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_psan_boleta_restore update on "informix"
    .psan_boleta_restore referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_psan_boleta_restore (bol_det_catalogo,
    bol_det_fecha,bol_det_sancion,bol_det_grado,bol_dependencia,bol_desc_empleo,
    bol_jerarquia_sancionado,bol_sancionador,bol_gra_sancionador,bol_empleo_sancionador,
    bol_justicia,bol_gra_justicia,bol_comte,bol_gra_comte,bol_fech_cumple,
    bol_det_status,desp_bol_det_catalogo,desp_bol_det_fecha,desp_bol_det_sancion,
    desp_bol_det_grado,desp_bol_dependencia,desp_bol_desc_empleo,desp_bol_jerarquia_sancionado,
    desp_bol_sancionador,desp_bol_gra_sancionador,desp_bol_empleo_sancionador,
    desp_bol_justicia,desp_bol_gra_justicia,desp_bol_comte,desp_bol_gra_comte,
    desp_bol_fech_cumple,desp_bol_det_status,accion,usuario,hora)  values 
    (antes.bol_det_catalogo ,antes.bol_det_fecha ,antes.bol_det_sancion 
    ,antes.bol_det_grado ,antes.bol_dependencia ,antes.bol_desc_empleo 
    ,antes.bol_jerarquia_sancionado ,antes.bol_sancionador ,antes.bol_gra_sancionador 
    ,antes.bol_empleo_sancionador ,antes.bol_justicia ,antes.bol_gra_justicia 
    ,antes.bol_comte ,antes.bol_gra_comte ,antes.bol_fech_cumple ,antes.bol_det_status 
    ,luego.bol_det_catalogo ,luego.bol_det_fecha ,luego.bol_det_sancion 
    ,luego.bol_det_grado ,luego.bol_dependencia ,luego.bol_desc_empleo 
    ,luego.bol_jerarquia_sancionado ,luego.bol_sancionador ,luego.bol_gra_sancionador 
    ,luego.bol_empleo_sancionador ,luego.bol_justicia ,luego.bol_gra_justicia 
    ,luego.bol_comte ,luego.bol_gra_comte ,luego.bol_fech_cumple ,luego.bol_det_status 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_dot_asignadas insert on "informix"
    .dot_asignadas referencing new as luego
    for each row
        (
        insert into "informix".aud_dot_asignadas (asig_catalogo,
    asig_num_dotacion,asig_year_dotacion,asig_cat_entrego,asig_fec_entrego,
    asig_situacion,desp_asig_catalogo,desp_asig_num_dotacion,desp_asig_year_dotacion,
    desp_asig_cat_entrego,desp_asig_fec_entrego,desp_asig_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.asig_catalogo ,
    luego.asig_num_dotacion ,luego.asig_year_dotacion ,luego.asig_cat_entrego 
    ,luego.asig_fec_entrego ,luego.asig_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_dot_asignadas delete on "informix"
    .dot_asignadas referencing old as antes
    for each row
        (
        insert into "informix".aud_dot_asignadas (asig_catalogo,
    asig_num_dotacion,asig_year_dotacion,asig_cat_entrego,asig_fec_entrego,
    asig_situacion,desp_asig_catalogo,desp_asig_num_dotacion,desp_asig_year_dotacion,
    desp_asig_cat_entrego,desp_asig_fec_entrego,desp_asig_situacion,accion,
    usuario,hora)  values (antes.asig_catalogo ,antes.asig_num_dotacion 
    ,antes.asig_year_dotacion ,antes.asig_cat_entrego ,antes.asig_fec_entrego 
    ,antes.asig_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_dot_asignadas update on "informix"
    .dot_asignadas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dot_asignadas (asig_catalogo,
    asig_num_dotacion,asig_year_dotacion,asig_cat_entrego,asig_fec_entrego,
    asig_situacion,desp_asig_catalogo,desp_asig_num_dotacion,desp_asig_year_dotacion,
    desp_asig_cat_entrego,desp_asig_fec_entrego,desp_asig_situacion,accion,
    usuario,hora)  values (antes.asig_catalogo ,antes.asig_num_dotacion 
    ,antes.asig_year_dotacion ,antes.asig_cat_entrego ,antes.asig_fec_entrego 
    ,antes.asig_situacion ,luego.asig_catalogo ,luego.asig_num_dotacion 
    ,luego.asig_year_dotacion ,luego.asig_cat_entrego ,luego.asig_fec_entrego 
    ,luego.asig_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_dot_asignadas_cadtropa insert on 
    "informix".dot_asignadas_cadtropa referencing new as luego
    
    for each row
        (
        insert into "informix".aud_dot_asignadas_cadtropa (asig_plaza,
    asig_num_dotacion2,asig_year_dotacion2,asig_cat_entrego2,asig_fec_entrego2,
    asig_situacion2,desp_asig_plaza,desp_asig_num_dotacion2,desp_asig_year_dotacion2,
    desp_asig_cat_entrego2,desp_asig_fec_entrego2,desp_asig_situacion2,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.asig_plaza 
    ,luego.asig_num_dotacion2 ,luego.asig_year_dotacion2 ,luego.asig_cat_entrego2 
    ,luego.asig_fec_entrego2 ,luego.asig_situacion2 ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_dot_asignadas_cadtropa delete on 
    "informix".dot_asignadas_cadtropa referencing old as antes
    
    for each row
        (
        insert into "informix".aud_dot_asignadas_cadtropa (asig_plaza,
    asig_num_dotacion2,asig_year_dotacion2,asig_cat_entrego2,asig_fec_entrego2,
    asig_situacion2,desp_asig_plaza,desp_asig_num_dotacion2,desp_asig_year_dotacion2,
    desp_asig_cat_entrego2,desp_asig_fec_entrego2,desp_asig_situacion2,
    accion,usuario,hora)  values (antes.asig_plaza ,antes.asig_num_dotacion2 
    ,antes.asig_year_dotacion2 ,antes.asig_cat_entrego2 ,antes.asig_fec_entrego2 
    ,antes.asig_situacion2 ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_dot_asignadas_cadtropa update on 
    "informix".dot_asignadas_cadtropa referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_dot_asignadas_cadtropa (asig_plaza,
    asig_num_dotacion2,asig_year_dotacion2,asig_cat_entrego2,asig_fec_entrego2,
    asig_situacion2,desp_asig_plaza,desp_asig_num_dotacion2,desp_asig_year_dotacion2,
    desp_asig_cat_entrego2,desp_asig_fec_entrego2,desp_asig_situacion2,
    accion,usuario,hora)  values (antes.asig_plaza ,antes.asig_num_dotacion2 
    ,antes.asig_year_dotacion2 ,antes.asig_cat_entrego2 ,antes.asig_fec_entrego2 
    ,antes.asig_situacion2 ,luego.asig_plaza ,luego.asig_num_dotacion2 
    ,luego.asig_year_dotacion2 ,luego.asig_cat_entrego2 ,luego.asig_fec_entrego2 
    ,luego.asig_situacion2 ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_fdes_fund_sold insert on "informix"
    .fdes_fund_sold referencing new as luego
    for each row
        (
        insert into "informix".aud_fdes_fund_sold (sold_catalogo,
    sold_codigo,sold_fec_ini,sold_fec_fin,sold_registro,sold_mensual,
    sold_saldo,sold_control,desp_sold_catalogo,desp_sold_codigo,desp_sold_fec_ini,
    desp_sold_fec_fin,desp_sold_registro,desp_sold_mensual,desp_sold_saldo,
    desp_sold_control,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,luego.sold_catalogo ,luego.sold_codigo ,luego.sold_fec_ini 
    ,luego.sold_fec_fin ,luego.sold_registro ,luego.sold_mensual ,luego.sold_saldo 
    ,luego.sold_control ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fdes_fund_sold delete on "informix"
    .fdes_fund_sold referencing old as antes
    for each row
        (
        insert into "informix".aud_fdes_fund_sold (sold_catalogo,
    sold_codigo,sold_fec_ini,sold_fec_fin,sold_registro,sold_mensual,
    sold_saldo,sold_control,desp_sold_catalogo,desp_sold_codigo,desp_sold_fec_ini,
    desp_sold_fec_fin,desp_sold_registro,desp_sold_mensual,desp_sold_saldo,
    desp_sold_control,accion,usuario,hora)  values (antes.sold_catalogo 
    ,antes.sold_codigo ,antes.sold_fec_ini ,antes.sold_fec_fin ,antes.sold_registro 
    ,antes.sold_mensual ,antes.sold_saldo ,antes.sold_control ,NULL ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fdes_fund_sold update on "informix"
    .fdes_fund_sold referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fdes_fund_sold (sold_catalogo,
    sold_codigo,sold_fec_ini,sold_fec_fin,sold_registro,sold_mensual,
    sold_saldo,sold_control,desp_sold_catalogo,desp_sold_codigo,desp_sold_fec_ini,
    desp_sold_fec_fin,desp_sold_registro,desp_sold_mensual,desp_sold_saldo,
    desp_sold_control,accion,usuario,hora)  values (antes.sold_catalogo 
    ,antes.sold_codigo ,antes.sold_fec_ini ,antes.sold_fec_fin ,antes.sold_registro 
    ,antes.sold_mensual ,antes.sold_saldo ,antes.sold_control ,luego.sold_catalogo 
    ,luego.sold_codigo ,luego.sold_fec_ini ,luego.sold_fec_fin ,luego.sold_registro 
    ,luego.sold_mensual ,luego.sold_saldo ,luego.sold_control ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_sat_duca insert on "informix".sat_duca 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_sat_duca (duc_id,duc_nom,duc_nit,
    duc_domicilio,duc_linea,duc_inc_aran,duc_merca,duc_cant_bul,duc_cla_bul,
    duc_bruto,duc_neto,duc_uni_med,duc_pais_or,duc_manifiesto,duc_marca,
    duc_emb_tip,duc_emb_tip_desc,duc_linea_emb,duc_anio,duc_motores,duc_mot1,
    duc_mot2,duc_mot3,duc_mot4,duc_serie_hin,duc_eslora,duc_cant_mot_fb,
    duc_fecha_ing,duc_user_ing,desp_duc_id,desp_duc_nom,desp_duc_nit,
    desp_duc_domicilio,desp_duc_linea,desp_duc_inc_aran,desp_duc_merca,
    desp_duc_cant_bul,desp_duc_cla_bul,desp_duc_bruto,desp_duc_neto,desp_duc_uni_med,
    desp_duc_pais_or,desp_duc_manifiesto,desp_duc_marca,desp_duc_emb_tip,
    desp_duc_emb_tip_desc,desp_duc_linea_emb,desp_duc_anio,desp_duc_motores,
    desp_duc_mot1,desp_duc_mot2,desp_duc_mot3,desp_duc_mot4,desp_duc_serie_hin,
    desp_duc_eslora,desp_duc_cant_mot_fb,desp_duc_fecha_ing,desp_duc_user_ing,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.duc_id 
    ,luego.duc_nom ,luego.duc_nit ,luego.duc_domicilio ,luego.duc_linea 
    ,luego.duc_inc_aran ,luego.duc_merca ,luego.duc_cant_bul ,luego.duc_cla_bul 
    ,luego.duc_bruto ,luego.duc_neto ,luego.duc_uni_med ,luego.duc_pais_or 
    ,luego.duc_manifiesto ,luego.duc_marca ,luego.duc_emb_tip ,luego.duc_emb_tip_desc 
    ,luego.duc_linea_emb ,luego.duc_anio ,luego.duc_motores ,luego.duc_mot1 
    ,luego.duc_mot2 ,luego.duc_mot3 ,luego.duc_mot4 ,luego.duc_serie_hin 
    ,luego.duc_eslora ,luego.duc_cant_mot_fb ,luego.duc_fecha_ing ,luego.duc_user_ing 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sat_duca delete on "informix".sat_duca 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_sat_duca (duc_id,duc_nom,duc_nit,
    duc_domicilio,duc_linea,duc_inc_aran,duc_merca,duc_cant_bul,duc_cla_bul,
    duc_bruto,duc_neto,duc_uni_med,duc_pais_or,duc_manifiesto,duc_marca,
    duc_emb_tip,duc_emb_tip_desc,duc_linea_emb,duc_anio,duc_motores,duc_mot1,
    duc_mot2,duc_mot3,duc_mot4,duc_serie_hin,duc_eslora,duc_cant_mot_fb,
    duc_fecha_ing,duc_user_ing,desp_duc_id,desp_duc_nom,desp_duc_nit,
    desp_duc_domicilio,desp_duc_linea,desp_duc_inc_aran,desp_duc_merca,
    desp_duc_cant_bul,desp_duc_cla_bul,desp_duc_bruto,desp_duc_neto,desp_duc_uni_med,
    desp_duc_pais_or,desp_duc_manifiesto,desp_duc_marca,desp_duc_emb_tip,
    desp_duc_emb_tip_desc,desp_duc_linea_emb,desp_duc_anio,desp_duc_motores,
    desp_duc_mot1,desp_duc_mot2,desp_duc_mot3,desp_duc_mot4,desp_duc_serie_hin,
    desp_duc_eslora,desp_duc_cant_mot_fb,desp_duc_fecha_ing,desp_duc_user_ing,
    accion,usuario,hora)  values (antes.duc_id ,antes.duc_nom ,antes.duc_nit 
    ,antes.duc_domicilio ,antes.duc_linea ,antes.duc_inc_aran ,antes.duc_merca 
    ,antes.duc_cant_bul ,antes.duc_cla_bul ,antes.duc_bruto ,antes.duc_neto 
    ,antes.duc_uni_med ,antes.duc_pais_or ,antes.duc_manifiesto ,antes.duc_marca 
    ,antes.duc_emb_tip ,antes.duc_emb_tip_desc ,antes.duc_linea_emb ,
    antes.duc_anio ,antes.duc_motores ,antes.duc_mot1 ,antes.duc_mot2 
    ,antes.duc_mot3 ,antes.duc_mot4 ,antes.duc_serie_hin ,antes.duc_eslora 
    ,antes.duc_cant_mot_fb ,antes.duc_fecha_ing ,antes.duc_user_ing ,
    NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_sat_duca update on "informix".sat_duca 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sat_duca (duc_id,duc_nom,duc_nit,
    duc_domicilio,duc_linea,duc_inc_aran,duc_merca,duc_cant_bul,duc_cla_bul,
    duc_bruto,duc_neto,duc_uni_med,duc_pais_or,duc_manifiesto,duc_marca,
    duc_emb_tip,duc_emb_tip_desc,duc_linea_emb,duc_anio,duc_motores,duc_mot1,
    duc_mot2,duc_mot3,duc_mot4,duc_serie_hin,duc_eslora,duc_cant_mot_fb,
    duc_fecha_ing,duc_user_ing,desp_duc_id,desp_duc_nom,desp_duc_nit,
    desp_duc_domicilio,desp_duc_linea,desp_duc_inc_aran,desp_duc_merca,
    desp_duc_cant_bul,desp_duc_cla_bul,desp_duc_bruto,desp_duc_neto,desp_duc_uni_med,
    desp_duc_pais_or,desp_duc_manifiesto,desp_duc_marca,desp_duc_emb_tip,
    desp_duc_emb_tip_desc,desp_duc_linea_emb,desp_duc_anio,desp_duc_motores,
    desp_duc_mot1,desp_duc_mot2,desp_duc_mot3,desp_duc_mot4,desp_duc_serie_hin,
    desp_duc_eslora,desp_duc_cant_mot_fb,desp_duc_fecha_ing,desp_duc_user_ing,
    accion,usuario,hora)  values (antes.duc_id ,antes.duc_nom ,antes.duc_nit 
    ,antes.duc_domicilio ,antes.duc_linea ,antes.duc_inc_aran ,antes.duc_merca 
    ,antes.duc_cant_bul ,antes.duc_cla_bul ,antes.duc_bruto ,antes.duc_neto 
    ,antes.duc_uni_med ,antes.duc_pais_or ,antes.duc_manifiesto ,antes.duc_marca 
    ,antes.duc_emb_tip ,antes.duc_emb_tip_desc ,antes.duc_linea_emb ,
    antes.duc_anio ,antes.duc_motores ,antes.duc_mot1 ,antes.duc_mot2 
    ,antes.duc_mot3 ,antes.duc_mot4 ,antes.duc_serie_hin ,antes.duc_eslora 
    ,antes.duc_cant_mot_fb ,antes.duc_fecha_ing ,antes.duc_user_ing ,
    luego.duc_id ,luego.duc_nom ,luego.duc_nit ,luego.duc_domicilio ,
    luego.duc_linea ,luego.duc_inc_aran ,luego.duc_merca ,luego.duc_cant_bul 
    ,luego.duc_cla_bul ,luego.duc_bruto ,luego.duc_neto ,luego.duc_uni_med 
    ,luego.duc_pais_or ,luego.duc_manifiesto ,luego.duc_marca ,luego.duc_emb_tip 
    ,luego.duc_emb_tip_desc ,luego.duc_linea_emb ,luego.duc_anio ,luego.duc_motores 
    ,luego.duc_mot1 ,luego.duc_mot2 ,luego.duc_mot3 ,luego.duc_mot4 ,
    luego.duc_serie_hin ,luego.duc_eslora ,luego.duc_cant_mot_fb ,luego.duc_fecha_ing 
    ,luego.duc_user_ing ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_api_keys insert on "informix".api_keys 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_api_keys (api_id,api_nombre,
    api_key,api_fecha_generacion,api_sit,api_tipo,desp_api_id,desp_api_nombre,
    desp_api_key,desp_api_fecha_generacion,desp_api_sit,desp_api_tipo,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.api_id ,
    luego.api_nombre ,luego.api_key ,luego.api_fecha_generacion ,luego.api_sit 
    ,luego.api_tipo ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_api_keys delete on "informix".api_keys 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_api_keys (api_id,api_nombre,
    api_key,api_fecha_generacion,api_sit,api_tipo,desp_api_id,desp_api_nombre,
    desp_api_key,desp_api_fecha_generacion,desp_api_sit,desp_api_tipo,
    accion,usuario,hora)  values (antes.api_id ,antes.api_nombre ,antes.api_key 
    ,antes.api_fecha_generacion ,antes.api_sit ,antes.api_tipo ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_api_keys update on "informix".api_keys 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_api_keys (api_id,api_nombre,
    api_key,api_fecha_generacion,api_sit,api_tipo,desp_api_id,desp_api_nombre,
    desp_api_key,desp_api_fecha_generacion,desp_api_sit,desp_api_tipo,
    accion,usuario,hora)  values (antes.api_id ,antes.api_nombre ,antes.api_key 
    ,antes.api_fecha_generacion ,antes.api_sit ,antes.api_tipo ,luego.api_id 
    ,luego.api_nombre ,luego.api_key ,luego.api_fecha_generacion ,luego.api_sit 
    ,luego.api_tipo ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_sat_cuscar insert on "informix".sat_cuscar 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_sat_cuscar (cus_id,cus_manifiesto,
    cus_cuscar,cus_fech_envio,cus_fecha_ing,cus_user_ing,desp_cus_id,
    desp_cus_manifiesto,desp_cus_cuscar,desp_cus_fech_envio,desp_cus_fecha_ing,
    desp_cus_user_ing,accion,usuario,hora)  values (NULL ,'' ,'' ::lvarchar(2048) 
    ,'' ,'' ,'' ,luego.cus_id ,luego.cus_manifiesto ,luego.cus_cuscar ,luego.cus_fech_envio 
    ,luego.cus_fecha_ing ,luego.cus_user_ing ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_sat_cuscar delete on "informix".sat_cuscar 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_sat_cuscar (cus_id,cus_manifiesto,
    cus_cuscar,cus_fech_envio,cus_fecha_ing,cus_user_ing,desp_cus_id,
    desp_cus_manifiesto,desp_cus_cuscar,desp_cus_fech_envio,desp_cus_fecha_ing,
    desp_cus_user_ing,accion,usuario,hora)  values (antes.cus_id ,antes.cus_manifiesto 
    ,antes.cus_cuscar ,antes.cus_fech_envio ,antes.cus_fecha_ing ,antes.cus_user_ing 
    ,NULL ,'' ,'' ::lvarchar(2048) ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_sat_cuscar update on "informix".sat_cuscar 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sat_cuscar (cus_id,cus_manifiesto,
    cus_cuscar,cus_fech_envio,cus_fecha_ing,cus_user_ing,desp_cus_id,
    desp_cus_manifiesto,desp_cus_cuscar,desp_cus_fech_envio,desp_cus_fecha_ing,
    desp_cus_user_ing,accion,usuario,hora)  values (antes.cus_id ,antes.cus_manifiesto 
    ,antes.cus_cuscar ,antes.cus_fech_envio ,antes.cus_fecha_ing ,antes.cus_user_ing 
    ,luego.cus_id ,luego.cus_manifiesto ,luego.cus_cuscar ,luego.cus_fech_envio 
    ,luego.cus_fecha_ing ,luego.cus_user_ing ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_veteranos_comparacion insert on 
    "informix".veteranos_comparacion referencing new as luego
    for each row
        (
        insert into "informix".aud_veteranos_comparacion (vet_id,
    vet_nom_real,vet_fec_alta,vet_fec_baja,vet_dpi,vet_cedula,vet_beneficiario,
    vet_dependencia,vet_num_listado,vet_nom1,vet_nom2,vet_nom3,vet_ape1,
    vet_ape2,vet_ape3,vet_fam_nom1,vet_fam_nom2,vet_fam_ape1,vet_fam_ape2,
    vet_coin_nom,vet_coin_fec_alta,vet_coin_fec_baja,vet_coin_2fechas,
    vet_coin_cedula,vet_coin_dpi,vet_coin_beneficiario,vet_cat_coincidencia,
    vet_vac2,vet_vac3,vet_situacion,desp_vet_id,desp_vet_nom_real,desp_vet_fec_alta,
    desp_vet_fec_baja,desp_vet_dpi,desp_vet_cedula,desp_vet_beneficiario,
    desp_vet_dependencia,desp_vet_num_listado,desp_vet_nom1,desp_vet_nom2,
    desp_vet_nom3,desp_vet_ape1,desp_vet_ape2,desp_vet_ape3,desp_vet_fam_nom1,
    desp_vet_fam_nom2,desp_vet_fam_ape1,desp_vet_fam_ape2,desp_vet_coin_nom,
    desp_vet_coin_fec_alta,desp_vet_coin_fec_baja,desp_vet_coin_2fechas,
    desp_vet_coin_cedula,desp_vet_coin_dpi,desp_vet_coin_beneficiario,
    desp_vet_cat_coincidencia,desp_vet_vac2,desp_vet_vac3,desp_vet_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.vet_id 
    ,luego.vet_nom_real ,luego.vet_fec_alta ,luego.vet_fec_baja ,luego.vet_dpi 
    ,luego.vet_cedula ,luego.vet_beneficiario ,luego.vet_dependencia 
    ,luego.vet_num_listado ,luego.vet_nom1 ,luego.vet_nom2 ,luego.vet_nom3 
    ,luego.vet_ape1 ,luego.vet_ape2 ,luego.vet_ape3 ,luego.vet_fam_nom1 
    ,luego.vet_fam_nom2 ,luego.vet_fam_ape1 ,luego.vet_fam_ape2 ,luego.vet_coin_nom 
    ,luego.vet_coin_fec_alta ,luego.vet_coin_fec_baja ,luego.vet_coin_2fechas 
    ,luego.vet_coin_cedula ,luego.vet_coin_dpi ,luego.vet_coin_beneficiario 
    ,luego.vet_cat_coincidencia ,luego.vet_vac2 ,luego.vet_vac3 ,luego.vet_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_veteranos_comparacion delete on 
    "informix".veteranos_comparacion referencing old as antes
    for each row
        (
        insert into "informix".aud_veteranos_comparacion (vet_id,
    vet_nom_real,vet_fec_alta,vet_fec_baja,vet_dpi,vet_cedula,vet_beneficiario,
    vet_dependencia,vet_num_listado,vet_nom1,vet_nom2,vet_nom3,vet_ape1,
    vet_ape2,vet_ape3,vet_fam_nom1,vet_fam_nom2,vet_fam_ape1,vet_fam_ape2,
    vet_coin_nom,vet_coin_fec_alta,vet_coin_fec_baja,vet_coin_2fechas,
    vet_coin_cedula,vet_coin_dpi,vet_coin_beneficiario,vet_cat_coincidencia,
    vet_vac2,vet_vac3,vet_situacion,desp_vet_id,desp_vet_nom_real,desp_vet_fec_alta,
    desp_vet_fec_baja,desp_vet_dpi,desp_vet_cedula,desp_vet_beneficiario,
    desp_vet_dependencia,desp_vet_num_listado,desp_vet_nom1,desp_vet_nom2,
    desp_vet_nom3,desp_vet_ape1,desp_vet_ape2,desp_vet_ape3,desp_vet_fam_nom1,
    desp_vet_fam_nom2,desp_vet_fam_ape1,desp_vet_fam_ape2,desp_vet_coin_nom,
    desp_vet_coin_fec_alta,desp_vet_coin_fec_baja,desp_vet_coin_2fechas,
    desp_vet_coin_cedula,desp_vet_coin_dpi,desp_vet_coin_beneficiario,
    desp_vet_cat_coincidencia,desp_vet_vac2,desp_vet_vac3,desp_vet_situacion,
    accion,usuario,hora)  values (antes.vet_id ,antes.vet_nom_real ,antes.vet_fec_alta 
    ,antes.vet_fec_baja ,antes.vet_dpi ,antes.vet_cedula ,antes.vet_beneficiario 
    ,antes.vet_dependencia ,antes.vet_num_listado ,antes.vet_nom1 ,antes.vet_nom2 
    ,antes.vet_nom3 ,antes.vet_ape1 ,antes.vet_ape2 ,antes.vet_ape3 ,
    antes.vet_fam_nom1 ,antes.vet_fam_nom2 ,antes.vet_fam_ape1 ,antes.vet_fam_ape2 
    ,antes.vet_coin_nom ,antes.vet_coin_fec_alta ,antes.vet_coin_fec_baja 
    ,antes.vet_coin_2fechas ,antes.vet_coin_cedula ,antes.vet_coin_dpi 
    ,antes.vet_coin_beneficiario ,antes.vet_cat_coincidencia ,antes.vet_vac2 
    ,antes.vet_vac3 ,antes.vet_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_veteranos_comparacion update on 
    "informix".veteranos_comparacion referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_veteranos_comparacion (vet_id,
    vet_nom_real,vet_fec_alta,vet_fec_baja,vet_dpi,vet_cedula,vet_beneficiario,
    vet_dependencia,vet_num_listado,vet_nom1,vet_nom2,vet_nom3,vet_ape1,
    vet_ape2,vet_ape3,vet_fam_nom1,vet_fam_nom2,vet_fam_ape1,vet_fam_ape2,
    vet_coin_nom,vet_coin_fec_alta,vet_coin_fec_baja,vet_coin_2fechas,
    vet_coin_cedula,vet_coin_dpi,vet_coin_beneficiario,vet_cat_coincidencia,
    vet_vac2,vet_vac3,vet_situacion,desp_vet_id,desp_vet_nom_real,desp_vet_fec_alta,
    desp_vet_fec_baja,desp_vet_dpi,desp_vet_cedula,desp_vet_beneficiario,
    desp_vet_dependencia,desp_vet_num_listado,desp_vet_nom1,desp_vet_nom2,
    desp_vet_nom3,desp_vet_ape1,desp_vet_ape2,desp_vet_ape3,desp_vet_fam_nom1,
    desp_vet_fam_nom2,desp_vet_fam_ape1,desp_vet_fam_ape2,desp_vet_coin_nom,
    desp_vet_coin_fec_alta,desp_vet_coin_fec_baja,desp_vet_coin_2fechas,
    desp_vet_coin_cedula,desp_vet_coin_dpi,desp_vet_coin_beneficiario,
    desp_vet_cat_coincidencia,desp_vet_vac2,desp_vet_vac3,desp_vet_situacion,
    accion,usuario,hora)  values (antes.vet_id ,antes.vet_nom_real ,antes.vet_fec_alta 
    ,antes.vet_fec_baja ,antes.vet_dpi ,antes.vet_cedula ,antes.vet_beneficiario 
    ,antes.vet_dependencia ,antes.vet_num_listado ,antes.vet_nom1 ,antes.vet_nom2 
    ,antes.vet_nom3 ,antes.vet_ape1 ,antes.vet_ape2 ,antes.vet_ape3 ,
    antes.vet_fam_nom1 ,antes.vet_fam_nom2 ,antes.vet_fam_ape1 ,antes.vet_fam_ape2 
    ,antes.vet_coin_nom ,antes.vet_coin_fec_alta ,antes.vet_coin_fec_baja 
    ,antes.vet_coin_2fechas ,antes.vet_coin_cedula ,antes.vet_coin_dpi 
    ,antes.vet_coin_beneficiario ,antes.vet_cat_coincidencia ,antes.vet_vac2 
    ,antes.vet_vac3 ,antes.vet_situacion ,luego.vet_id ,luego.vet_nom_real 
    ,luego.vet_fec_alta ,luego.vet_fec_baja ,luego.vet_dpi ,luego.vet_cedula 
    ,luego.vet_beneficiario ,luego.vet_dependencia ,luego.vet_num_listado 
    ,luego.vet_nom1 ,luego.vet_nom2 ,luego.vet_nom3 ,luego.vet_ape1 ,
    luego.vet_ape2 ,luego.vet_ape3 ,luego.vet_fam_nom1 ,luego.vet_fam_nom2 
    ,luego.vet_fam_ape1 ,luego.vet_fam_ape2 ,luego.vet_coin_nom ,luego.vet_coin_fec_alta 
    ,luego.vet_coin_fec_baja ,luego.vet_coin_2fechas ,luego.vet_coin_cedula 
    ,luego.vet_coin_dpi ,luego.vet_coin_beneficiario ,luego.vet_cat_coincidencia 
    ,luego.vet_vac2 ,luego.vet_vac3 ,luego.vet_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_bin_estado insert on "informix".bin_estado 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_bin_estado (est_id,est_desc,
    est_situacion,desp_est_id,desp_est_desc,desp_est_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.est_id ,luego.est_desc ,
    luego.est_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_bin_estado delete on "informix".bin_estado 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_bin_estado (est_id,est_desc,
    est_situacion,desp_est_id,desp_est_desc,desp_est_situacion,accion,
    usuario,hora)  values (antes.est_id ,antes.est_desc ,antes.est_situacion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_bin_estado update on "informix".bin_estado 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bin_estado (est_id,est_desc,
    est_situacion,desp_est_id,desp_est_desc,desp_est_situacion,accion,
    usuario,hora)  values (antes.est_id ,antes.est_desc ,antes.est_situacion 
    ,luego.est_id ,luego.est_desc ,luego.est_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_bin_inventariado insert on "informix"
    .bin_inventariado referencing new as luego
    for each row
        (
        insert into "informix".aud_bin_inventariado (inv_id,inv_desc,
    inv_situacion,desp_inv_id,desp_inv_desc,desp_inv_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.inv_id ,luego.inv_desc ,
    luego.inv_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_bin_inventariado delete on "informix"
    .bin_inventariado referencing old as antes
    for each row
        (
        insert into "informix".aud_bin_inventariado (inv_id,inv_desc,
    inv_situacion,desp_inv_id,desp_inv_desc,desp_inv_situacion,accion,
    usuario,hora)  values (antes.inv_id ,antes.inv_desc ,antes.inv_situacion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_bin_inventariado update on "informix"
    .bin_inventariado referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bin_inventariado (inv_id,inv_desc,
    inv_situacion,desp_inv_id,desp_inv_desc,desp_inv_situacion,accion,
    usuario,hora)  values (antes.inv_id ,antes.inv_desc ,antes.inv_situacion 
    ,luego.inv_id ,luego.inv_desc ,luego.inv_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_bin_valor_inmueble insert on "informix"
    .bin_valor_inmueble referencing new as luego
    for each row
        (
        insert into "informix".aud_bin_valor_inmueble (val_id,
    val_id_inm,val_valor,val_situacion,desp_val_id,desp_val_id_inm,desp_val_valor,
    desp_val_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.val_id 
    ,luego.val_id_inm ,luego.val_valor ,luego.val_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_bin_valor_inmueble delete on "informix"
    .bin_valor_inmueble referencing old as antes
    for each row
        (
        insert into "informix".aud_bin_valor_inmueble (val_id,
    val_id_inm,val_valor,val_situacion,desp_val_id,desp_val_id_inm,desp_val_valor,
    desp_val_situacion,accion,usuario,hora)  values (antes.val_id ,antes.val_id_inm 
    ,antes.val_valor ,antes.val_situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_bin_valor_inmueble update on "informix"
    .bin_valor_inmueble referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_bin_valor_inmueble (val_id,
    val_id_inm,val_valor,val_situacion,desp_val_id,desp_val_id_inm,desp_val_valor,
    desp_val_situacion,accion,usuario,hora)  values (antes.val_id ,antes.val_id_inm 
    ,antes.val_valor ,antes.val_situacion ,luego.val_id ,luego.val_id_inm 
    ,luego.val_valor ,luego.val_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_bin_edificaciones insert on "informix"
    .bin_edificaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_bin_edificaciones (edi_id,
    edi_nombre,edi_desc,edi_dep,edi_uso,edi_valor,edi_inv,edi_adqui,edi_estado,
    edi_obs_estado,edi_departamento,edi_mun,edi_direccion,edi_situacion,
    edi_situacion_bi,edi_situacion_ige,edi_situacion_fin,edi_situacion_jur,
    edi_remozamiento,edi_fecha_remozamiento,edi_valor_remozamiento,desp_edi_id,
    desp_edi_nombre,desp_edi_desc,desp_edi_dep,desp_edi_uso,desp_edi_valor,
    desp_edi_inv,desp_edi_adqui,desp_edi_estado,desp_edi_obs_estado,desp_edi_departamento,
    desp_edi_mun,desp_edi_direccion,desp_edi_situacion,desp_edi_situacion_bi,
    desp_edi_situacion_ige,desp_edi_situacion_fin,desp_edi_situacion_jur,
    desp_edi_remozamiento,desp_edi_fecha_remozamiento,desp_edi_valor_remozamiento,
    accion,usuario,hora)  values (NULL ,'' ,'' ::lvarchar(2000) ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ::lvarchar(2000) ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    luego.edi_id ,luego.edi_nombre ,luego.edi_desc ,luego.edi_dep ,luego.edi_uso 
    ,luego.edi_valor ,luego.edi_inv ,luego.edi_adqui ,luego.edi_estado 
    ,luego.edi_obs_estado ,luego.edi_departamento ,luego.edi_mun ,luego.edi_direccion 
    ,luego.edi_situacion ,luego.edi_situacion_bi ,luego.edi_situacion_ige 
    ,luego.edi_situacion_fin ,luego.edi_situacion_jur ,luego.edi_remozamiento 
    ,luego.edi_fecha_remozamiento ,luego.edi_valor_remozamiento ,'I' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_bin_edificaciones delete on "informix"
    .bin_edificaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_bin_edificaciones (edi_id,
    edi_nombre,edi_desc,edi_dep,edi_uso,edi_valor,edi_inv,edi_adqui,edi_estado,
    edi_obs_estado,edi_departamento,edi_mun,edi_direccion,edi_situacion,
    edi_situacion_bi,edi_situacion_ige,edi_situacion_fin,edi_situacion_jur,
    edi_remozamiento,edi_fecha_remozamiento,edi_valor_remozamiento,desp_edi_id,
    desp_edi_nombre,desp_edi_desc,desp_edi_dep,desp_edi_uso,desp_edi_valor,
    desp_edi_inv,desp_edi_adqui,desp_edi_estado,desp_edi_obs_estado,desp_edi_departamento,
    desp_edi_mun,desp_edi_direccion,desp_edi_situacion,desp_edi_situacion_bi,
    desp_edi_situacion_ige,desp_edi_situacion_fin,desp_edi_situacion_jur,
    desp_edi_remozamiento,desp_edi_fecha_remozamiento,desp_edi_valor_remozamiento,
    accion,usuario,hora)  values (antes.edi_id ,antes.edi_nombre ,antes.edi_desc 
    ,antes.edi_dep ,antes.edi_uso ,antes.edi_valor ,antes.edi_inv ,antes.edi_adqui 
    ,antes.edi_estado ,antes.edi_obs_estado ,antes.edi_departamento ,
    antes.edi_mun ,antes.edi_direccion ,antes.edi_situacion ,antes.edi_situacion_bi 
    ,antes.edi_situacion_ige ,antes.edi_situacion_fin ,antes.edi_situacion_jur 
    ,antes.edi_remozamiento ,antes.edi_fecha_remozamiento ,antes.edi_valor_remozamiento 
    ,NULL ,'' ,'' ::lvarchar(2000) ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2000) 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_bin_edificaciones update on "informix"
    .bin_edificaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bin_edificaciones (edi_id,
    edi_nombre,edi_desc,edi_dep,edi_uso,edi_valor,edi_inv,edi_adqui,edi_estado,
    edi_obs_estado,edi_departamento,edi_mun,edi_direccion,edi_situacion,
    edi_situacion_bi,edi_situacion_ige,edi_situacion_fin,edi_situacion_jur,
    edi_remozamiento,edi_fecha_remozamiento,edi_valor_remozamiento,desp_edi_id,
    desp_edi_nombre,desp_edi_desc,desp_edi_dep,desp_edi_uso,desp_edi_valor,
    desp_edi_inv,desp_edi_adqui,desp_edi_estado,desp_edi_obs_estado,desp_edi_departamento,
    desp_edi_mun,desp_edi_direccion,desp_edi_situacion,desp_edi_situacion_bi,
    desp_edi_situacion_ige,desp_edi_situacion_fin,desp_edi_situacion_jur,
    desp_edi_remozamiento,desp_edi_fecha_remozamiento,desp_edi_valor_remozamiento,
    accion,usuario,hora)  values (antes.edi_id ,antes.edi_nombre ,antes.edi_desc 
    ,antes.edi_dep ,antes.edi_uso ,antes.edi_valor ,antes.edi_inv ,antes.edi_adqui 
    ,antes.edi_estado ,antes.edi_obs_estado ,antes.edi_departamento ,
    antes.edi_mun ,antes.edi_direccion ,antes.edi_situacion ,antes.edi_situacion_bi 
    ,antes.edi_situacion_ige ,antes.edi_situacion_fin ,antes.edi_situacion_jur 
    ,antes.edi_remozamiento ,antes.edi_fecha_remozamiento ,antes.edi_valor_remozamiento 
    ,luego.edi_id ,luego.edi_nombre ,luego.edi_desc ,luego.edi_dep ,luego.edi_uso 
    ,luego.edi_valor ,luego.edi_inv ,luego.edi_adqui ,luego.edi_estado 
    ,luego.edi_obs_estado ,luego.edi_departamento ,luego.edi_mun ,luego.edi_direccion 
    ,luego.edi_situacion ,luego.edi_situacion_bi ,luego.edi_situacion_ige 
    ,luego.edi_situacion_fin ,luego.edi_situacion_jur ,luego.edi_remozamiento 
    ,luego.edi_fecha_remozamiento ,luego.edi_valor_remozamiento ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_bin_obs_aprobaciones insert on 
    "informix".bin_obs_aprobaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_bin_obs_aprobaciones (apro_id,
    apro_edi_id,apro_obs_bi,apro_obs_ige,apro_obs_fin,apro_obs_jur,apro_situacion,
    desp_apro_id,desp_apro_edi_id,desp_apro_obs_bi,desp_apro_obs_ige,
    desp_apro_obs_fin,desp_apro_obs_jur,desp_apro_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,luego.apro_id ,luego.apro_edi_id 
    ,luego.apro_obs_bi ,luego.apro_obs_ige ,luego.apro_obs_fin ,luego.apro_obs_jur 
    ,luego.apro_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_bin_obs_aprobaciones delete on 
    "informix".bin_obs_aprobaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_bin_obs_aprobaciones (apro_id,
    apro_edi_id,apro_obs_bi,apro_obs_ige,apro_obs_fin,apro_obs_jur,apro_situacion,
    desp_apro_id,desp_apro_edi_id,desp_apro_obs_bi,desp_apro_obs_ige,
    desp_apro_obs_fin,desp_apro_obs_jur,desp_apro_situacion,accion,usuario,
    hora)  values (antes.apro_id ,antes.apro_edi_id ,antes.apro_obs_bi 
    ,antes.apro_obs_ige ,antes.apro_obs_fin ,antes.apro_obs_jur ,antes.apro_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_bin_obs_aprobaciones update on 
    "informix".bin_obs_aprobaciones referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_bin_obs_aprobaciones (apro_id,
    apro_edi_id,apro_obs_bi,apro_obs_ige,apro_obs_fin,apro_obs_jur,apro_situacion,
    desp_apro_id,desp_apro_edi_id,desp_apro_obs_bi,desp_apro_obs_ige,
    desp_apro_obs_fin,desp_apro_obs_jur,desp_apro_situacion,accion,usuario,
    hora)  values (antes.apro_id ,antes.apro_edi_id ,antes.apro_obs_bi 
    ,antes.apro_obs_ige ,antes.apro_obs_fin ,antes.apro_obs_jur ,antes.apro_situacion 
    ,luego.apro_id ,luego.apro_edi_id ,luego.apro_obs_bi ,luego.apro_obs_ige 
    ,luego.apro_obs_fin ,luego.apro_obs_jur ,luego.apro_situacion ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_bin_pdf_edificaciones insert on 
    "informix".bin_pdf_edificaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_bin_pdf_edificaciones (pdf_registro_edi,
    pdf_catalogo_edi,pdf_ruta_edi,pdf_sit_edi,desp_pdf_registro_edi,desp_pdf_catalogo_edi,
    desp_pdf_ruta_edi,desp_pdf_sit_edi,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,luego.pdf_registro_edi ,luego.pdf_catalogo_edi ,luego.pdf_ruta_edi 
    ,luego.pdf_sit_edi ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_bin_pdf_edificaciones delete on 
    "informix".bin_pdf_edificaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_bin_pdf_edificaciones (pdf_registro_edi,
    pdf_catalogo_edi,pdf_ruta_edi,pdf_sit_edi,desp_pdf_registro_edi,desp_pdf_catalogo_edi,
    desp_pdf_ruta_edi,desp_pdf_sit_edi,accion,usuario,hora)  values (antes.pdf_registro_edi 
    ,antes.pdf_catalogo_edi ,antes.pdf_ruta_edi ,antes.pdf_sit_edi ,NULL 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_bin_pdf_edificaciones update on 
    "informix".bin_pdf_edificaciones referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_bin_pdf_edificaciones (pdf_registro_edi,
    pdf_catalogo_edi,pdf_ruta_edi,pdf_sit_edi,desp_pdf_registro_edi,desp_pdf_catalogo_edi,
    desp_pdf_ruta_edi,desp_pdf_sit_edi,accion,usuario,hora)  values (antes.pdf_registro_edi 
    ,antes.pdf_catalogo_edi ,antes.pdf_ruta_edi ,antes.pdf_sit_edi ,luego.pdf_registro_edi 
    ,luego.pdf_catalogo_edi ,luego.pdf_ruta_edi ,luego.pdf_sit_edi ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_bin_solicitudes insert on "informix"
    .bin_solicitudes referencing new as luego
    for each row
        (
        insert into "informix".aud_bin_solicitudes (sol_id,sol_edi_id,
    sol_desc,sol_obs,desp_sol_id,desp_sol_edi_id,desp_sol_desc,desp_sol_obs,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.sol_id ,luego.sol_edi_id 
    ,luego.sol_desc ,luego.sol_obs ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_bin_solicitudes delete on "informix"
    .bin_solicitudes referencing old as antes
    for each row
        (
        insert into "informix".aud_bin_solicitudes (sol_id,sol_edi_id,
    sol_desc,sol_obs,desp_sol_id,desp_sol_edi_id,desp_sol_desc,desp_sol_obs,
    accion,usuario,hora)  values (antes.sol_id ,antes.sol_edi_id ,antes.sol_desc 
    ,antes.sol_obs ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_bin_solicitudes update on "informix"
    .bin_solicitudes referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bin_solicitudes (sol_id,sol_edi_id,
    sol_desc,sol_obs,desp_sol_id,desp_sol_edi_id,desp_sol_desc,desp_sol_obs,
    accion,usuario,hora)  values (antes.sol_id ,antes.sol_edi_id ,antes.sol_desc 
    ,antes.sol_obs ,luego.sol_id ,luego.sol_edi_id ,luego.sol_desc ,luego.sol_obs 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_com_vales insert on "informix".com_vales 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_com_vales (val_codigo,val_es,
    val_vehiculo,val_cat_autoriza,val_cat_entrego,val_cat_recibio,val_recibio_nombre,
    val_uso,val_despacho,val_mision,val_situacion,val_razon,val_tipo,
    desp_val_codigo,desp_val_es,desp_val_vehiculo,desp_val_cat_autoriza,
    desp_val_cat_entrego,desp_val_cat_recibio,desp_val_recibio_nombre,
    desp_val_uso,desp_val_despacho,desp_val_mision,desp_val_situacion,
    desp_val_razon,desp_val_tipo,accion,usuario,hora)  values (NULL ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.val_codigo ,luego.val_es 
    ,luego.val_vehiculo ,luego.val_cat_autoriza ,luego.val_cat_entrego 
    ,luego.val_cat_recibio ,luego.val_recibio_nombre ,luego.val_uso ,
    luego.val_despacho ,luego.val_mision ,luego.val_situacion ,luego.val_razon 
    ,luego.val_tipo ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_com_vales delete on "informix".com_vales 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_com_vales (val_codigo,val_es,
    val_vehiculo,val_cat_autoriza,val_cat_entrego,val_cat_recibio,val_recibio_nombre,
    val_uso,val_despacho,val_mision,val_situacion,val_razon,val_tipo,
    desp_val_codigo,desp_val_es,desp_val_vehiculo,desp_val_cat_autoriza,
    desp_val_cat_entrego,desp_val_cat_recibio,desp_val_recibio_nombre,
    desp_val_uso,desp_val_despacho,desp_val_mision,desp_val_situacion,
    desp_val_razon,desp_val_tipo,accion,usuario,hora)  values (antes.val_codigo 
    ,antes.val_es ,antes.val_vehiculo ,antes.val_cat_autoriza ,antes.val_cat_entrego 
    ,antes.val_cat_recibio ,antes.val_recibio_nombre ,antes.val_uso ,
    antes.val_despacho ,antes.val_mision ,antes.val_situacion ,antes.val_razon 
    ,antes.val_tipo ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_com_vales update on "informix".com_vales 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_com_vales (val_codigo,val_es,
    val_vehiculo,val_cat_autoriza,val_cat_entrego,val_cat_recibio,val_recibio_nombre,
    val_uso,val_despacho,val_mision,val_situacion,val_razon,val_tipo,
    desp_val_codigo,desp_val_es,desp_val_vehiculo,desp_val_cat_autoriza,
    desp_val_cat_entrego,desp_val_cat_recibio,desp_val_recibio_nombre,
    desp_val_uso,desp_val_despacho,desp_val_mision,desp_val_situacion,
    desp_val_razon,desp_val_tipo,accion,usuario,hora)  values (antes.val_codigo 
    ,antes.val_es ,antes.val_vehiculo ,antes.val_cat_autoriza ,antes.val_cat_entrego 
    ,antes.val_cat_recibio ,antes.val_recibio_nombre ,antes.val_uso ,
    antes.val_despacho ,antes.val_mision ,antes.val_situacion ,antes.val_razon 
    ,antes.val_tipo ,luego.val_codigo ,luego.val_es ,luego.val_vehiculo 
    ,luego.val_cat_autoriza ,luego.val_cat_entrego ,luego.val_cat_recibio 
    ,luego.val_recibio_nombre ,luego.val_uso ,luego.val_despacho ,luego.val_mision 
    ,luego.val_situacion ,luego.val_razon ,luego.val_tipo ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_evaluacion_docente_clase insert 
    on "informix".evaluacion_docente_clase referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_evaluacion_docente_clase (eva_id,
    eva_extencion,eva_docente,eva_materia,eva_fecha,eva_planificacion_general,
    eva_motivacion,eva_presentacion,eva_recursos_educativos,eva_dominio_del_tema,
    eva_capta_atencion_alumno,eva_comunicacion,eva_organizacion,eva_fijacion,
    eva_evaluacion_constante,eva_promueve_expresion_estudiante,eva_resuelve_dudas,
    eva_metodologia,eva_resuelve_evaluaciones_con_alumno,eva_informa_zona_acumulada,
    eva_dosificacion_de_los_temas,eva_puntualidad,eva_higiene_personal,
    eva_infunde_respeto,eva_informa_acerca_evaluaciones_mineduc,eva_situacion,
    desp_id,desp_extencion,desp_docente,desp_materia,desp_fecha,desp_planificacion_general,
    desp_motivacion,desp_presentacion,desp_recursos_educativos,desp_dominio_del_tema,
    desp_capta_atencion_alumno,desp_comunicacion,desp_organizacion,desp_fijacion,
    desp_evaluacion_constante,desp_promueve_expresion_estudiante,desp_resuelve_dudas,
    desp_metodologia,desp_resuelve_evaluaciones_con_alumno,desp_informa_zona_acumulada,
    desp_dosificacion_de_los_temas,desp_puntualidad,desp_higiene_personal,
    desp_infunde_respeto,desp_informa_acerca_evaluaciones_mineduc,desp_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.eva_id ,luego.eva_extencion 
    ,luego.eva_docente ,luego.eva_materia ,luego.eva_fecha ,luego.eva_planificacion_general 
    ,luego.eva_motivacion ,luego.eva_presentacion ,luego.eva_recursos_educativos 
    ,luego.eva_dominio_del_tema ,luego.eva_capta_atencion_alumno ,luego.eva_comunicacion 
    ,luego.eva_organizacion ,luego.eva_fijacion ,luego.eva_evaluacion_constante 
    ,luego.eva_promueve_expresion_estudiante ,luego.eva_resuelve_dudas 
    ,luego.eva_metodologia ,luego.eva_resuelve_evaluaciones_con_alumno 
    ,luego.eva_informa_zona_acumulada ,luego.eva_dosificacion_de_los_temas 
    ,luego.eva_puntualidad ,luego.eva_higiene_personal ,luego.eva_infunde_respeto 
    ,luego.eva_informa_acerca_evaluaciones_mineduc ,luego.eva_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_evaluacion_docente_clase delete 
    on "informix".evaluacion_docente_clase referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_evaluacion_docente_clase (eva_id,
    eva_extencion,eva_docente,eva_materia,eva_fecha,eva_planificacion_general,
    eva_motivacion,eva_presentacion,eva_recursos_educativos,eva_dominio_del_tema,
    eva_capta_atencion_alumno,eva_comunicacion,eva_organizacion,eva_fijacion,
    eva_evaluacion_constante,eva_promueve_expresion_estudiante,eva_resuelve_dudas,
    eva_metodologia,eva_resuelve_evaluaciones_con_alumno,eva_informa_zona_acumulada,
    eva_dosificacion_de_los_temas,eva_puntualidad,eva_higiene_personal,
    eva_infunde_respeto,eva_informa_acerca_evaluaciones_mineduc,eva_situacion,
    desp_id,desp_extencion,desp_docente,desp_materia,desp_fecha,desp_planificacion_general,
    desp_motivacion,desp_presentacion,desp_recursos_educativos,desp_dominio_del_tema,
    desp_capta_atencion_alumno,desp_comunicacion,desp_organizacion,desp_fijacion,
    desp_evaluacion_constante,desp_promueve_expresion_estudiante,desp_resuelve_dudas,
    desp_metodologia,desp_resuelve_evaluaciones_con_alumno,desp_informa_zona_acumulada,
    desp_dosificacion_de_los_temas,desp_puntualidad,desp_higiene_personal,
    desp_infunde_respeto,desp_informa_acerca_evaluaciones_mineduc,desp_situacion,
    accion,usuario,hora)  values (antes.eva_id ,antes.eva_extencion ,
    antes.eva_docente ,antes.eva_materia ,antes.eva_fecha ,antes.eva_planificacion_general 
    ,antes.eva_motivacion ,antes.eva_presentacion ,antes.eva_recursos_educativos 
    ,antes.eva_dominio_del_tema ,antes.eva_capta_atencion_alumno ,antes.eva_comunicacion 
    ,antes.eva_organizacion ,antes.eva_fijacion ,antes.eva_evaluacion_constante 
    ,antes.eva_promueve_expresion_estudiante ,antes.eva_resuelve_dudas 
    ,antes.eva_metodologia ,antes.eva_resuelve_evaluaciones_con_alumno 
    ,antes.eva_informa_zona_acumulada ,antes.eva_dosificacion_de_los_temas 
    ,antes.eva_puntualidad ,antes.eva_higiene_personal ,antes.eva_infunde_respeto 
    ,antes.eva_informa_acerca_evaluaciones_mineduc ,antes.eva_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_evaluacion_docente_clase update 
    on "informix".evaluacion_docente_clase referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_evaluacion_docente_clase (eva_id,
    eva_extencion,eva_docente,eva_materia,eva_fecha,eva_planificacion_general,
    eva_motivacion,eva_presentacion,eva_recursos_educativos,eva_dominio_del_tema,
    eva_capta_atencion_alumno,eva_comunicacion,eva_organizacion,eva_fijacion,
    eva_evaluacion_constante,eva_promueve_expresion_estudiante,eva_resuelve_dudas,
    eva_metodologia,eva_resuelve_evaluaciones_con_alumno,eva_informa_zona_acumulada,
    eva_dosificacion_de_los_temas,eva_puntualidad,eva_higiene_personal,
    eva_infunde_respeto,eva_informa_acerca_evaluaciones_mineduc,eva_situacion,
    desp_id,desp_extencion,desp_docente,desp_materia,desp_fecha,desp_planificacion_general,
    desp_motivacion,desp_presentacion,desp_recursos_educativos,desp_dominio_del_tema,
    desp_capta_atencion_alumno,desp_comunicacion,desp_organizacion,desp_fijacion,
    desp_evaluacion_constante,desp_promueve_expresion_estudiante,desp_resuelve_dudas,
    desp_metodologia,desp_resuelve_evaluaciones_con_alumno,desp_informa_zona_acumulada,
    desp_dosificacion_de_los_temas,desp_puntualidad,desp_higiene_personal,
    desp_infunde_respeto,desp_informa_acerca_evaluaciones_mineduc,desp_situacion,
    accion,usuario,hora)  values (antes.eva_id ,antes.eva_extencion ,
    antes.eva_docente ,antes.eva_materia ,antes.eva_fecha ,antes.eva_planificacion_general 
    ,antes.eva_motivacion ,antes.eva_presentacion ,antes.eva_recursos_educativos 
    ,antes.eva_dominio_del_tema ,antes.eva_capta_atencion_alumno ,antes.eva_comunicacion 
    ,antes.eva_organizacion ,antes.eva_fijacion ,antes.eva_evaluacion_constante 
    ,antes.eva_promueve_expresion_estudiante ,antes.eva_resuelve_dudas 
    ,antes.eva_metodologia ,antes.eva_resuelve_evaluaciones_con_alumno 
    ,antes.eva_informa_zona_acumulada ,antes.eva_dosificacion_de_los_temas 
    ,antes.eva_puntualidad ,antes.eva_higiene_personal ,antes.eva_infunde_respeto 
    ,antes.eva_informa_acerca_evaluaciones_mineduc ,antes.eva_situacion 
    ,luego.eva_id ,luego.eva_extencion ,luego.eva_docente ,luego.eva_materia 
    ,luego.eva_fecha ,luego.eva_planificacion_general ,luego.eva_motivacion 
    ,luego.eva_presentacion ,luego.eva_recursos_educativos ,luego.eva_dominio_del_tema 
    ,luego.eva_capta_atencion_alumno ,luego.eva_comunicacion ,luego.eva_organizacion 
    ,luego.eva_fijacion ,luego.eva_evaluacion_constante ,luego.eva_promueve_expresion_estudiante 
    ,luego.eva_resuelve_dudas ,luego.eva_metodologia ,luego.eva_resuelve_evaluaciones_con_alumno 
    ,luego.eva_informa_zona_acumulada ,luego.eva_dosificacion_de_los_temas 
    ,luego.eva_puntualidad ,luego.eva_higiene_personal ,luego.eva_infunde_respeto 
    ,luego.eva_informa_acerca_evaluaciones_mineduc ,luego.eva_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_informacion_general_peisol insert 
    on "informix".informacion_general_peisol referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_informacion_general_peisol 
    (info_id,info_extencion,info_plan,info_jornada,info_semestre,info_codigo,
    info_tipo,info_catalogo,info_nom1,info_nom2,info_ape1,info_ape2,info_dpi,
    info_fecha_nac,info_sexo,info_encargado,info_telefono_encar,info_antes_estudios,
    info_extencion_antes,info_semestre_antes,info_ano_antes,info_especialidad,
    info_tele_pers,info_correo,info_fecha_inscrip,info_situacion,desp_id,
    desp_extencion,desp_plan,desp_jornada,desp_semestre,desp_codigo,desp_tipo,
    desp_catalogo,desp_nom1,desp_nom2,desp_ape1,desp_ape2,desp_dpi,desp_fecha_nac,
    desp_sexo,desp_encargado,desp_telefono_encar,desp_antes_estudios,
    desp_extencion_antes,desp_semestre_antes,desp_ano_antes,desp_especialidad,
    desp_tele_pers,desp_correo,desp_fecha_inscrip,desp_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.info_id ,luego.info_extencion 
    ,luego.info_plan ,luego.info_jornada ,luego.info_semestre ,luego.info_codigo 
    ,luego.info_tipo ,luego.info_catalogo ,luego.info_nom1 ,luego.info_nom2 
    ,luego.info_ape1 ,luego.info_ape2 ,luego.info_dpi ,luego.info_fecha_nac 
    ,luego.info_sexo ,luego.info_encargado ,luego.info_telefono_encar 
    ,luego.info_antes_estudios ,luego.info_extencion_antes ,luego.info_semestre_antes 
    ,luego.info_ano_antes ,luego.info_especialidad ,luego.info_tele_pers 
    ,luego.info_correo ,luego.info_fecha_inscrip ,luego.info_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_informacion_general_peisol delete 
    on "informix".informacion_general_peisol referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_informacion_general_peisol 
    (info_id,info_extencion,info_plan,info_jornada,info_semestre,info_codigo,
    info_tipo,info_catalogo,info_nom1,info_nom2,info_ape1,info_ape2,info_dpi,
    info_fecha_nac,info_sexo,info_encargado,info_telefono_encar,info_antes_estudios,
    info_extencion_antes,info_semestre_antes,info_ano_antes,info_especialidad,
    info_tele_pers,info_correo,info_fecha_inscrip,info_situacion,desp_id,
    desp_extencion,desp_plan,desp_jornada,desp_semestre,desp_codigo,desp_tipo,
    desp_catalogo,desp_nom1,desp_nom2,desp_ape1,desp_ape2,desp_dpi,desp_fecha_nac,
    desp_sexo,desp_encargado,desp_telefono_encar,desp_antes_estudios,
    desp_extencion_antes,desp_semestre_antes,desp_ano_antes,desp_especialidad,
    desp_tele_pers,desp_correo,desp_fecha_inscrip,desp_situacion,accion,
    usuario,hora)  values (antes.info_id ,antes.info_extencion ,antes.info_plan 
    ,antes.info_jornada ,antes.info_semestre ,antes.info_codigo ,antes.info_tipo 
    ,antes.info_catalogo ,antes.info_nom1 ,antes.info_nom2 ,antes.info_ape1 
    ,antes.info_ape2 ,antes.info_dpi ,antes.info_fecha_nac ,antes.info_sexo 
    ,antes.info_encargado ,antes.info_telefono_encar ,antes.info_antes_estudios 
    ,antes.info_extencion_antes ,antes.info_semestre_antes ,antes.info_ano_antes 
    ,antes.info_especialidad ,antes.info_tele_pers ,antes.info_correo 
    ,antes.info_fecha_inscrip ,antes.info_situacion ,NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_informacion_general_peisol update 
    on "informix".informacion_general_peisol referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_informacion_general_peisol 
    (info_id,info_extencion,info_plan,info_jornada,info_semestre,info_codigo,
    info_tipo,info_catalogo,info_nom1,info_nom2,info_ape1,info_ape2,info_dpi,
    info_fecha_nac,info_sexo,info_encargado,info_telefono_encar,info_antes_estudios,
    info_extencion_antes,info_semestre_antes,info_ano_antes,info_especialidad,
    info_tele_pers,info_correo,info_fecha_inscrip,info_situacion,desp_id,
    desp_extencion,desp_plan,desp_jornada,desp_semestre,desp_codigo,desp_tipo,
    desp_catalogo,desp_nom1,desp_nom2,desp_ape1,desp_ape2,desp_dpi,desp_fecha_nac,
    desp_sexo,desp_encargado,desp_telefono_encar,desp_antes_estudios,
    desp_extencion_antes,desp_semestre_antes,desp_ano_antes,desp_especialidad,
    desp_tele_pers,desp_correo,desp_fecha_inscrip,desp_situacion,accion,
    usuario,hora)  values (antes.info_id ,antes.info_extencion ,antes.info_plan 
    ,antes.info_jornada ,antes.info_semestre ,antes.info_codigo ,antes.info_tipo 
    ,antes.info_catalogo ,antes.info_nom1 ,antes.info_nom2 ,antes.info_ape1 
    ,antes.info_ape2 ,antes.info_dpi ,antes.info_fecha_nac ,antes.info_sexo 
    ,antes.info_encargado ,antes.info_telefono_encar ,antes.info_antes_estudios 
    ,antes.info_extencion_antes ,antes.info_semestre_antes ,antes.info_ano_antes 
    ,antes.info_especialidad ,antes.info_tele_pers ,antes.info_correo 
    ,antes.info_fecha_inscrip ,antes.info_situacion ,luego.info_id ,luego.info_extencion 
    ,luego.info_plan ,luego.info_jornada ,luego.info_semestre ,luego.info_codigo 
    ,luego.info_tipo ,luego.info_catalogo ,luego.info_nom1 ,luego.info_nom2 
    ,luego.info_ape1 ,luego.info_ape2 ,luego.info_dpi ,luego.info_fecha_nac 
    ,luego.info_sexo ,luego.info_encargado ,luego.info_telefono_encar 
    ,luego.info_antes_estudios ,luego.info_extencion_antes ,luego.info_semestre_antes 
    ,luego.info_ano_antes ,luego.info_especialidad ,luego.info_tele_pers 
    ,luego.info_correo ,luego.info_fecha_inscrip ,luego.info_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_evaluacion_docente insert on "informix"
    .evaluacion_docente referencing new as luego
    for each row
        (
        insert into "informix".aud_evaluacion_docente (eva_id,
    eva_extencion,eva_docente,eva_fecha,eva_programa_convenientemente_sus_actividades,
    eva_demuestra_seguridad_habilidad_en_su_trabajo,eva_planeamientos_bien_definidos,
    eva_fomenta_en_los_estudiantes_reflexion_critica,eva_promueve_interaccion_entre_estudiantes,
    eva_utiliza_materiales_ayudas_para_impartir_clase,eva_demuestra_interes_entusiasmo_al_impartir_clases,
    eva_promueve_participacion_de_los_estudiantes,eva_se_comunica_con_fluidez_propiedad,
    eva_mantiene_orden_disciplina_en_clase,eva_relaciones_humanas,eva_puntualidad,
    eva_presentacion_personal,eva_cumplimiento_procedimientos_administrativos,
    eva_se_ausenta_frecuentemente_con_sin_justificacion,eva_interes_colaborar_actividades_extra_aula,
    eva_interes_aprender_cosas_nuevas,eva_acepta_sugerencia_o_recomendacion,
    eva_capacidad_integracion_colaboracion,eva_demuestra_hablidad_organizar_dirigir_actividades,
    eva_muestra_interes_por_el_manteniemiento_area_de_trabajo,eva_situacion,
    desp_id,desp_extencion,desp_docente,desp_fecha,desp_programa_convenientemente_sus_actividades,
    desp_demuestra_seguridad_habilidad_en_su_trabajo,desp_planeamientos_bien_definidos,
    desp_fomenta_en_los_estudiantes_reflexion_critica,desp_promueve_interaccion_entre_estudiantes,
    desp_utiliza_materiales_ayudas_para_impartir_clase,desp_demuestra_interes_entusiasmo_al_impartir_clases,
    desp_promueve_participacion_de_los_estudiantes,desp_se_comunica_con_fluidez_propiedad,
    desp_mantiene_orden_disciplina_en_clase,desp_relaciones_humanas,desp_puntualidad,
    desp_presentacion_personal,desp_cumplimiento_procedimientos_administrativos,
    desp_se_ausenta_frecuentemente_con_sin_justificacion,desp_interes_colaborar_actividades_extra_aula,
    desp_interes_aprender_cosas_nuevas,desp_acepta_sugerencia_o_recomendacion,
    desp_capacidad_integracion_colaboracion,desp_demuestra_hablidad_organizar_dirigir_actividades,
    desp_muestra_interes_por_el_manteniemiento_area_de_trabajo,desp_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.eva_id ,luego.eva_extencion 
    ,luego.eva_docente ,luego.eva_fecha ,luego.eva_programa_convenientemente_sus_actividades 
    ,luego.eva_demuestra_seguridad_habilidad_en_su_trabajo ,luego.eva_planeamientos_bien_definidos 
    ,luego.eva_fomenta_en_los_estudiantes_reflexion_critica ,luego.eva_promueve_interaccion_entre_estudiantes 
    ,luego.eva_utiliza_materiales_ayudas_para_impartir_clase ,luego.eva_demuestra_interes_entusiasmo_al_impartir_clases 
    ,luego.eva_promueve_participacion_de_los_estudiantes ,luego.eva_se_comunica_con_fluidez_propiedad 
    ,luego.eva_mantiene_orden_disciplina_en_clase ,luego.eva_relaciones_humanas 
    ,luego.eva_puntualidad ,luego.eva_presentacion_personal ,luego.eva_cumplimiento_procedimientos_administrativos 
    ,luego.eva_se_ausenta_frecuentemente_con_sin_justificacion ,luego.eva_interes_colaborar_actividades_extra_aula 
    ,luego.eva_interes_aprender_cosas_nuevas ,luego.eva_acepta_sugerencia_o_recomendacion 
    ,luego.eva_capacidad_integracion_colaboracion ,luego.eva_demuestra_hablidad_organizar_dirigir_actividades 
    ,luego.eva_muestra_interes_por_el_manteniemiento_area_de_trabajo 
    ,luego.eva_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_evaluacion_docente delete on "informix"
    .evaluacion_docente referencing old as antes
    for each row
        (
        insert into "informix".aud_evaluacion_docente (eva_id,
    eva_extencion,eva_docente,eva_fecha,eva_programa_convenientemente_sus_actividades,
    eva_demuestra_seguridad_habilidad_en_su_trabajo,eva_planeamientos_bien_definidos,
    eva_fomenta_en_los_estudiantes_reflexion_critica,eva_promueve_interaccion_entre_estudiantes,
    eva_utiliza_materiales_ayudas_para_impartir_clase,eva_demuestra_interes_entusiasmo_al_impartir_clases,
    eva_promueve_participacion_de_los_estudiantes,eva_se_comunica_con_fluidez_propiedad,
    eva_mantiene_orden_disciplina_en_clase,eva_relaciones_humanas,eva_puntualidad,
    eva_presentacion_personal,eva_cumplimiento_procedimientos_administrativos,
    eva_se_ausenta_frecuentemente_con_sin_justificacion,eva_interes_colaborar_actividades_extra_aula,
    eva_interes_aprender_cosas_nuevas,eva_acepta_sugerencia_o_recomendacion,
    eva_capacidad_integracion_colaboracion,eva_demuestra_hablidad_organizar_dirigir_actividades,
    eva_muestra_interes_por_el_manteniemiento_area_de_trabajo,eva_situacion,
    desp_id,desp_extencion,desp_docente,desp_fecha,desp_programa_convenientemente_sus_actividades,
    desp_demuestra_seguridad_habilidad_en_su_trabajo,desp_planeamientos_bien_definidos,
    desp_fomenta_en_los_estudiantes_reflexion_critica,desp_promueve_interaccion_entre_estudiantes,
    desp_utiliza_materiales_ayudas_para_impartir_clase,desp_demuestra_interes_entusiasmo_al_impartir_clases,
    desp_promueve_participacion_de_los_estudiantes,desp_se_comunica_con_fluidez_propiedad,
    desp_mantiene_orden_disciplina_en_clase,desp_relaciones_humanas,desp_puntualidad,
    desp_presentacion_personal,desp_cumplimiento_procedimientos_administrativos,
    desp_se_ausenta_frecuentemente_con_sin_justificacion,desp_interes_colaborar_actividades_extra_aula,
    desp_interes_aprender_cosas_nuevas,desp_acepta_sugerencia_o_recomendacion,
    desp_capacidad_integracion_colaboracion,desp_demuestra_hablidad_organizar_dirigir_actividades,
    desp_muestra_interes_por_el_manteniemiento_area_de_trabajo,desp_situacion,
    accion,usuario,hora)  values (antes.eva_id ,antes.eva_extencion ,
    antes.eva_docente ,antes.eva_fecha ,antes.eva_programa_convenientemente_sus_actividades 
    ,antes.eva_demuestra_seguridad_habilidad_en_su_trabajo ,antes.eva_planeamientos_bien_definidos 
    ,antes.eva_fomenta_en_los_estudiantes_reflexion_critica ,antes.eva_promueve_interaccion_entre_estudiantes 
    ,antes.eva_utiliza_materiales_ayudas_para_impartir_clase ,antes.eva_demuestra_interes_entusiasmo_al_impartir_clases 
    ,antes.eva_promueve_participacion_de_los_estudiantes ,antes.eva_se_comunica_con_fluidez_propiedad 
    ,antes.eva_mantiene_orden_disciplina_en_clase ,antes.eva_relaciones_humanas 
    ,antes.eva_puntualidad ,antes.eva_presentacion_personal ,antes.eva_cumplimiento_procedimientos_administrativos 
    ,antes.eva_se_ausenta_frecuentemente_con_sin_justificacion ,antes.eva_interes_colaborar_actividades_extra_aula 
    ,antes.eva_interes_aprender_cosas_nuevas ,antes.eva_acepta_sugerencia_o_recomendacion 
    ,antes.eva_capacidad_integracion_colaboracion ,antes.eva_demuestra_hablidad_organizar_dirigir_actividades 
    ,antes.eva_muestra_interes_por_el_manteniemiento_area_de_trabajo 
    ,antes.eva_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_evaluacion_docente update on "informix"
    .evaluacion_docente referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_evaluacion_docente (eva_id,
    eva_extencion,eva_docente,eva_fecha,eva_programa_convenientemente_sus_actividades,
    eva_demuestra_seguridad_habilidad_en_su_trabajo,eva_planeamientos_bien_definidos,
    eva_fomenta_en_los_estudiantes_reflexion_critica,eva_promueve_interaccion_entre_estudiantes,
    eva_utiliza_materiales_ayudas_para_impartir_clase,eva_demuestra_interes_entusiasmo_al_impartir_clases,
    eva_promueve_participacion_de_los_estudiantes,eva_se_comunica_con_fluidez_propiedad,
    eva_mantiene_orden_disciplina_en_clase,eva_relaciones_humanas,eva_puntualidad,
    eva_presentacion_personal,eva_cumplimiento_procedimientos_administrativos,
    eva_se_ausenta_frecuentemente_con_sin_justificacion,eva_interes_colaborar_actividades_extra_aula,
    eva_interes_aprender_cosas_nuevas,eva_acepta_sugerencia_o_recomendacion,
    eva_capacidad_integracion_colaboracion,eva_demuestra_hablidad_organizar_dirigir_actividades,
    eva_muestra_interes_por_el_manteniemiento_area_de_trabajo,eva_situacion,
    desp_id,desp_extencion,desp_docente,desp_fecha,desp_programa_convenientemente_sus_actividades,
    desp_demuestra_seguridad_habilidad_en_su_trabajo,desp_planeamientos_bien_definidos,
    desp_fomenta_en_los_estudiantes_reflexion_critica,desp_promueve_interaccion_entre_estudiantes,
    desp_utiliza_materiales_ayudas_para_impartir_clase,desp_demuestra_interes_entusiasmo_al_impartir_clases,
    desp_promueve_participacion_de_los_estudiantes,desp_se_comunica_con_fluidez_propiedad,
    desp_mantiene_orden_disciplina_en_clase,desp_relaciones_humanas,desp_puntualidad,
    desp_presentacion_personal,desp_cumplimiento_procedimientos_administrativos,
    desp_se_ausenta_frecuentemente_con_sin_justificacion,desp_interes_colaborar_actividades_extra_aula,
    desp_interes_aprender_cosas_nuevas,desp_acepta_sugerencia_o_recomendacion,
    desp_capacidad_integracion_colaboracion,desp_demuestra_hablidad_organizar_dirigir_actividades,
    desp_muestra_interes_por_el_manteniemiento_area_de_trabajo,desp_situacion,
    accion,usuario,hora)  values (antes.eva_id ,antes.eva_extencion ,
    antes.eva_docente ,antes.eva_fecha ,antes.eva_programa_convenientemente_sus_actividades 
    ,antes.eva_demuestra_seguridad_habilidad_en_su_trabajo ,antes.eva_planeamientos_bien_definidos 
    ,antes.eva_fomenta_en_los_estudiantes_reflexion_critica ,antes.eva_promueve_interaccion_entre_estudiantes 
    ,antes.eva_utiliza_materiales_ayudas_para_impartir_clase ,antes.eva_demuestra_interes_entusiasmo_al_impartir_clases 
    ,antes.eva_promueve_participacion_de_los_estudiantes ,antes.eva_se_comunica_con_fluidez_propiedad 
    ,antes.eva_mantiene_orden_disciplina_en_clase ,antes.eva_relaciones_humanas 
    ,antes.eva_puntualidad ,antes.eva_presentacion_personal ,antes.eva_cumplimiento_procedimientos_administrativos 
    ,antes.eva_se_ausenta_frecuentemente_con_sin_justificacion ,antes.eva_interes_colaborar_actividades_extra_aula 
    ,antes.eva_interes_aprender_cosas_nuevas ,antes.eva_acepta_sugerencia_o_recomendacion 
    ,antes.eva_capacidad_integracion_colaboracion ,antes.eva_demuestra_hablidad_organizar_dirigir_actividades 
    ,antes.eva_muestra_interes_por_el_manteniemiento_area_de_trabajo 
    ,antes.eva_situacion ,luego.eva_id ,luego.eva_extencion ,luego.eva_docente 
    ,luego.eva_fecha ,luego.eva_programa_convenientemente_sus_actividades 
    ,luego.eva_demuestra_seguridad_habilidad_en_su_trabajo ,luego.eva_planeamientos_bien_definidos 
    ,luego.eva_fomenta_en_los_estudiantes_reflexion_critica ,luego.eva_promueve_interaccion_entre_estudiantes 
    ,luego.eva_utiliza_materiales_ayudas_para_impartir_clase ,luego.eva_demuestra_interes_entusiasmo_al_impartir_clases 
    ,luego.eva_promueve_participacion_de_los_estudiantes ,luego.eva_se_comunica_con_fluidez_propiedad 
    ,luego.eva_mantiene_orden_disciplina_en_clase ,luego.eva_relaciones_humanas 
    ,luego.eva_puntualidad ,luego.eva_presentacion_personal ,luego.eva_cumplimiento_procedimientos_administrativos 
    ,luego.eva_se_ausenta_frecuentemente_con_sin_justificacion ,luego.eva_interes_colaborar_actividades_extra_aula 
    ,luego.eva_interes_aprender_cosas_nuevas ,luego.eva_acepta_sugerencia_o_recomendacion 
    ,luego.eva_capacidad_integracion_colaboracion ,luego.eva_demuestra_hablidad_organizar_dirigir_actividades 
    ,luego.eva_muestra_interes_por_el_manteniemiento_area_de_trabajo 
    ,luego.eva_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_notas_finales_peisol insert on 
    "informix".notas_finales_peisol referencing new as luego
    for each row
        (
        insert into "informix".aud_notas_finales_peisol (not_id,
    not_extencion,not_docente,not_alumno,not_semestre,not_clase1,not_clase2,
    not_clase3,not_clase4,not_clase5,not_clase6,not_fecha,not_situacion,
    desp_not_id,desp_not_extencion,desp_not_docente,desp_not_alumno,desp_not_semestre,
    desp_not_clase1,desp_not_clase2,desp_not_clase3,desp_not_clase4,desp_not_clase5,
    desp_not_clase6,desp_not_fecha,desp_not_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.not_id 
    ,luego.not_extencion ,luego.not_docente ,luego.not_alumno ,luego.not_semestre 
    ,luego.not_clase1 ,luego.not_clase2 ,luego.not_clase3 ,luego.not_clase4 
    ,luego.not_clase5 ,luego.not_clase6 ,luego.not_fecha ,luego.not_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_notas_finales_peisol delete on 
    "informix".notas_finales_peisol referencing old as antes
    for each row
        (
        insert into "informix".aud_notas_finales_peisol (not_id,
    not_extencion,not_docente,not_alumno,not_semestre,not_clase1,not_clase2,
    not_clase3,not_clase4,not_clase5,not_clase6,not_fecha,not_situacion,
    desp_not_id,desp_not_extencion,desp_not_docente,desp_not_alumno,desp_not_semestre,
    desp_not_clase1,desp_not_clase2,desp_not_clase3,desp_not_clase4,desp_not_clase5,
    desp_not_clase6,desp_not_fecha,desp_not_situacion,accion,usuario,
    hora)  values (antes.not_id ,antes.not_extencion ,antes.not_docente 
    ,antes.not_alumno ,antes.not_semestre ,antes.not_clase1 ,antes.not_clase2 
    ,antes.not_clase3 ,antes.not_clase4 ,antes.not_clase5 ,antes.not_clase6 
    ,antes.not_fecha ,antes.not_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_notas_finales_peisol update on 
    "informix".notas_finales_peisol referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_notas_finales_peisol (not_id,
    not_extencion,not_docente,not_alumno,not_semestre,not_clase1,not_clase2,
    not_clase3,not_clase4,not_clase5,not_clase6,not_fecha,not_situacion,
    desp_not_id,desp_not_extencion,desp_not_docente,desp_not_alumno,desp_not_semestre,
    desp_not_clase1,desp_not_clase2,desp_not_clase3,desp_not_clase4,desp_not_clase5,
    desp_not_clase6,desp_not_fecha,desp_not_situacion,accion,usuario,
    hora)  values (antes.not_id ,antes.not_extencion ,antes.not_docente 
    ,antes.not_alumno ,antes.not_semestre ,antes.not_clase1 ,antes.not_clase2 
    ,antes.not_clase3 ,antes.not_clase4 ,antes.not_clase5 ,antes.not_clase6 
    ,antes.not_fecha ,antes.not_situacion ,luego.not_id ,luego.not_extencion 
    ,luego.not_docente ,luego.not_alumno ,luego.not_semestre ,luego.not_clase1 
    ,luego.not_clase2 ,luego.not_clase3 ,luego.not_clase4 ,luego.not_clase5 
    ,luego.not_clase6 ,luego.not_fecha ,luego.not_situacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_maga_actividades insert on "informix"
    .maga_actividades referencing new as luego
    for each row
        (
        insert into "informix".aud_maga_actividades (com_id,com_desc,
    com_lugar,com_doc,com_fec_inicio,com_fec_fin,com_detalle,com_info,
    com_sit,com_ing,com_dep,desp_com_id,desp_com_desc,desp_com_lugar,
    desp_com_doc,desp_com_fec_inicio,desp_com_fec_fin,desp_com_detalle,
    desp_com_info,desp_com_sit,desp_com_ing,desp_com_dep,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.com_id ,
    luego.com_desc ,luego.com_lugar ,luego.com_doc ,luego.com_fec_inicio 
    ,luego.com_fec_fin ,luego.com_detalle ,luego.com_info ,luego.com_sit 
    ,luego.com_ing ,luego.com_dep ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_maga_actividades delete on "informix"
    .maga_actividades referencing old as antes
    for each row
        (
        insert into "informix".aud_maga_actividades (com_id,com_desc,
    com_lugar,com_doc,com_fec_inicio,com_fec_fin,com_detalle,com_info,
    com_sit,com_ing,com_dep,desp_com_id,desp_com_desc,desp_com_lugar,
    desp_com_doc,desp_com_fec_inicio,desp_com_fec_fin,desp_com_detalle,
    desp_com_info,desp_com_sit,desp_com_ing,desp_com_dep,accion,usuario,
    hora)  values (antes.com_id ,antes.com_desc ,antes.com_lugar ,antes.com_doc 
    ,antes.com_fec_inicio ,antes.com_fec_fin ,antes.com_detalle ,antes.com_info 
    ,antes.com_sit ,antes.com_ing ,antes.com_dep ,NULL ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_maga_actividades update on "informix"
    .maga_actividades referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_maga_actividades (com_id,com_desc,
    com_lugar,com_doc,com_fec_inicio,com_fec_fin,com_detalle,com_info,
    com_sit,com_ing,com_dep,desp_com_id,desp_com_desc,desp_com_lugar,
    desp_com_doc,desp_com_fec_inicio,desp_com_fec_fin,desp_com_detalle,
    desp_com_info,desp_com_sit,desp_com_ing,desp_com_dep,accion,usuario,
    hora)  values (antes.com_id ,antes.com_desc ,antes.com_lugar ,antes.com_doc 
    ,antes.com_fec_inicio ,antes.com_fec_fin ,antes.com_detalle ,antes.com_info 
    ,antes.com_sit ,antes.com_ing ,antes.com_dep ,luego.com_id ,luego.com_desc 
    ,luego.com_lugar ,luego.com_doc ,luego.com_fec_inicio ,luego.com_fec_fin 
    ,luego.com_detalle ,luego.com_info ,luego.com_sit ,luego.com_ing 
    ,luego.com_dep ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_materi_peisol insert on "informix"
    .materi_peisol referencing new as luego
    for each row
        (
        insert into "informix".aud_materi_peisol (mat_id,mat_semestre,
    mat_clase_1,mat_clase_2,mat_clase_3,mat_clase_4,mat_clase_5,mat_clase_6,
    mat_situacion,desp_mat_id,desp_mat_semestre,desp_mat_clase_1,desp_mat_clase_2,
    desp_mat_clase_3,desp_mat_clase_4,desp_mat_clase_5,desp_mat_clase_6,
    desp_mat_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,luego.mat_id ,luego.mat_semestre ,luego.mat_clase_1 
    ,luego.mat_clase_2 ,luego.mat_clase_3 ,luego.mat_clase_4 ,luego.mat_clase_5 
    ,luego.mat_clase_6 ,luego.mat_situacion ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_materi_peisol delete on "informix"
    .materi_peisol referencing old as antes
    for each row
        (
        insert into "informix".aud_materi_peisol (mat_id,mat_semestre,
    mat_clase_1,mat_clase_2,mat_clase_3,mat_clase_4,mat_clase_5,mat_clase_6,
    mat_situacion,desp_mat_id,desp_mat_semestre,desp_mat_clase_1,desp_mat_clase_2,
    desp_mat_clase_3,desp_mat_clase_4,desp_mat_clase_5,desp_mat_clase_6,
    desp_mat_situacion,accion,usuario,hora)  values (antes.mat_id ,antes.mat_semestre 
    ,antes.mat_clase_1 ,antes.mat_clase_2 ,antes.mat_clase_3 ,antes.mat_clase_4 
    ,antes.mat_clase_5 ,antes.mat_clase_6 ,antes.mat_situacion ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_materi_peisol update on "informix"
    .materi_peisol referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_materi_peisol (mat_id,mat_semestre,
    mat_clase_1,mat_clase_2,mat_clase_3,mat_clase_4,mat_clase_5,mat_clase_6,
    mat_situacion,desp_mat_id,desp_mat_semestre,desp_mat_clase_1,desp_mat_clase_2,
    desp_mat_clase_3,desp_mat_clase_4,desp_mat_clase_5,desp_mat_clase_6,
    desp_mat_situacion,accion,usuario,hora)  values (antes.mat_id ,antes.mat_semestre 
    ,antes.mat_clase_1 ,antes.mat_clase_2 ,antes.mat_clase_3 ,antes.mat_clase_4 
    ,antes.mat_clase_5 ,antes.mat_clase_6 ,antes.mat_situacion ,luego.mat_id 
    ,luego.mat_semestre ,luego.mat_clase_1 ,luego.mat_clase_2 ,luego.mat_clase_3 
    ,luego.mat_clase_4 ,luego.mat_clase_5 ,luego.mat_clase_6 ,luego.mat_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_maga_personal_asignado insert on 
    "informix".maga_personal_asignado referencing new as luego
    
    for each row
        (
        insert into "informix".aud_maga_personal_asignado (asi_id,
    asi_com,asi_asig,asi_sit,desp_asi_id,desp_asi_com,desp_asi_asig,desp_asi_sit,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.asi_id ,luego.asi_com 
    ,luego.asi_asig ,luego.asi_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_maga_personal_asignado delete on 
    "informix".maga_personal_asignado referencing old as antes
    
    for each row
        (
        insert into "informix".aud_maga_personal_asignado (asi_id,
    asi_com,asi_asig,asi_sit,desp_asi_id,desp_asi_com,desp_asi_asig,desp_asi_sit,
    accion,usuario,hora)  values (antes.asi_id ,antes.asi_com ,antes.asi_asig 
    ,antes.asi_sit ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_maga_personal_asignado update on 
    "informix".maga_personal_asignado referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_maga_personal_asignado (asi_id,
    asi_com,asi_asig,asi_sit,desp_asi_id,desp_asi_com,desp_asi_asig,desp_asi_sit,
    accion,usuario,hora)  values (antes.asi_id ,antes.asi_com ,antes.asi_asig 
    ,antes.asi_sit ,luego.asi_id ,luego.asi_com ,luego.asi_asig ,luego.asi_sit 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_maquinaria insert on "informix"
    .vlh_maquinaria referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_maquinaria (maqu_id,maqu_catalogo,
    maqu_tanque,maqu_tipo_combustible,maqu_consumo_hora,maqu_dependencia,
    maqu_caballos_fuerza,maqu_tipo_maquinaria,maqu_serie,maqu_modelo,
    maqu_estado,maqu_obser,maqu_situacion,maqu_obser1,maqu_obser2,desp_maqu_id,
    desp_maqu_catalogo,desp_maqu_tanque,desp_maqu_tipo_combustible,desp_maqu_consumo_hora,
    desp_maqu_dependencia,desp_maqu_caballos_fuerza,desp_maqu_tipo_maquinaria,
    desp_maqu_serie,desp_maqu_modelo,desp_maqu_estado,desp_maqu_obser,
    desp_maqu_situacion,desp_maqu_obser1,desp_maqu_obser2,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2000) 
    ,'' ,'' ,'' ,luego.maqu_id ,luego.maqu_catalogo ,luego.maqu_tanque ,
    luego.maqu_tipo_combustible ,luego.maqu_consumo_hora ,luego.maqu_dependencia 
    ,luego.maqu_caballos_fuerza ,luego.maqu_tipo_maquinaria ,luego.maqu_serie 
    ,luego.maqu_modelo ,luego.maqu_estado ,luego.maqu_obser ,luego.maqu_situacion 
    ,luego.maqu_obser1 ,luego.maqu_obser2 ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_vlh_maquinaria delete on "informix"
    .vlh_maquinaria referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_maquinaria (maqu_id,maqu_catalogo,
    maqu_tanque,maqu_tipo_combustible,maqu_consumo_hora,maqu_dependencia,
    maqu_caballos_fuerza,maqu_tipo_maquinaria,maqu_serie,maqu_modelo,
    maqu_estado,maqu_obser,maqu_situacion,maqu_obser1,maqu_obser2,desp_maqu_id,
    desp_maqu_catalogo,desp_maqu_tanque,desp_maqu_tipo_combustible,desp_maqu_consumo_hora,
    desp_maqu_dependencia,desp_maqu_caballos_fuerza,desp_maqu_tipo_maquinaria,
    desp_maqu_serie,desp_maqu_modelo,desp_maqu_estado,desp_maqu_obser,
    desp_maqu_situacion,desp_maqu_obser1,desp_maqu_obser2,accion,usuario,
    hora)  values (antes.maqu_id ,antes.maqu_catalogo ,antes.maqu_tanque 
    ,antes.maqu_tipo_combustible ,antes.maqu_consumo_hora ,antes.maqu_dependencia 
    ,antes.maqu_caballos_fuerza ,antes.maqu_tipo_maquinaria ,antes.maqu_serie 
    ,antes.maqu_modelo ,antes.maqu_estado ,antes.maqu_obser ,antes.maqu_situacion 
    ,antes.maqu_obser1 ,antes.maqu_obser2 ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ::lvarchar(2000) ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_vlh_maquinaria update on "informix"
    .vlh_maquinaria referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_maquinaria (maqu_id,maqu_catalogo,
    maqu_tanque,maqu_tipo_combustible,maqu_consumo_hora,maqu_dependencia,
    maqu_caballos_fuerza,maqu_tipo_maquinaria,maqu_serie,maqu_modelo,
    maqu_estado,maqu_obser,maqu_situacion,maqu_obser1,maqu_obser2,desp_maqu_id,
    desp_maqu_catalogo,desp_maqu_tanque,desp_maqu_tipo_combustible,desp_maqu_consumo_hora,
    desp_maqu_dependencia,desp_maqu_caballos_fuerza,desp_maqu_tipo_maquinaria,
    desp_maqu_serie,desp_maqu_modelo,desp_maqu_estado,desp_maqu_obser,
    desp_maqu_situacion,desp_maqu_obser1,desp_maqu_obser2,accion,usuario,
    hora)  values (antes.maqu_id ,antes.maqu_catalogo ,antes.maqu_tanque 
    ,antes.maqu_tipo_combustible ,antes.maqu_consumo_hora ,antes.maqu_dependencia 
    ,antes.maqu_caballos_fuerza ,antes.maqu_tipo_maquinaria ,antes.maqu_serie 
    ,antes.maqu_modelo ,antes.maqu_estado ,antes.maqu_obser ,antes.maqu_situacion 
    ,antes.maqu_obser1 ,antes.maqu_obser2 ,luego.maqu_id ,luego.maqu_catalogo 
    ,luego.maqu_tanque ,luego.maqu_tipo_combustible ,luego.maqu_consumo_hora 
    ,luego.maqu_dependencia ,luego.maqu_caballos_fuerza ,luego.maqu_tipo_maquinaria 
    ,luego.maqu_serie ,luego.maqu_modelo ,luego.maqu_estado ,luego.maqu_obser 
    ,luego.maqu_situacion ,luego.maqu_obser1 ,luego.maqu_obser2 ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_validaciones_fag insert on 
    "informix".vlh_validaciones_fag referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_validaciones_fag (val_id_fag,
    val_catalogo_fag,val_catalogo_equ_fag,val_revisor_fag,val_comte_fag,
    val_fecha_fag,val_situacion_fag,val_dependencia_fag,val_fecha_emision_fag,
    val_tipo_fag,desp_val_id_fag,desp_val_catalogo_fag,desp_val_catalogo_equ_fag,
    desp_val_revisor_fag,desp_val_comte_fag,desp_val_fecha_fag,desp_val_situacion_fag,
    desp_val_dependencia_fag,desp_val_fecha_emision_fag,desp_val_tipo_fag,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.val_id_fag 
    ,luego.val_catalogo_fag ,luego.val_catalogo_equ_fag ,luego.val_revisor_fag 
    ,luego.val_comte_fag ,luego.val_fecha_fag ,luego.val_situacion_fag 
    ,luego.val_dependencia_fag ,luego.val_fecha_emision_fag ,luego.val_tipo_fag 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_validaciones_fag delete on 
    "informix".vlh_validaciones_fag referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_validaciones_fag (val_id_fag,
    val_catalogo_fag,val_catalogo_equ_fag,val_revisor_fag,val_comte_fag,
    val_fecha_fag,val_situacion_fag,val_dependencia_fag,val_fecha_emision_fag,
    val_tipo_fag,desp_val_id_fag,desp_val_catalogo_fag,desp_val_catalogo_equ_fag,
    desp_val_revisor_fag,desp_val_comte_fag,desp_val_fecha_fag,desp_val_situacion_fag,
    desp_val_dependencia_fag,desp_val_fecha_emision_fag,desp_val_tipo_fag,
    accion,usuario,hora)  values (antes.val_id_fag ,antes.val_catalogo_fag 
    ,antes.val_catalogo_equ_fag ,antes.val_revisor_fag ,antes.val_comte_fag 
    ,antes.val_fecha_fag ,antes.val_situacion_fag ,antes.val_dependencia_fag 
    ,antes.val_fecha_emision_fag ,antes.val_tipo_fag ,NULL ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_validaciones_fag update on 
    "informix".vlh_validaciones_fag referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_vlh_validaciones_fag (val_id_fag,
    val_catalogo_fag,val_catalogo_equ_fag,val_revisor_fag,val_comte_fag,
    val_fecha_fag,val_situacion_fag,val_dependencia_fag,val_fecha_emision_fag,
    val_tipo_fag,desp_val_id_fag,desp_val_catalogo_fag,desp_val_catalogo_equ_fag,
    desp_val_revisor_fag,desp_val_comte_fag,desp_val_fecha_fag,desp_val_situacion_fag,
    desp_val_dependencia_fag,desp_val_fecha_emision_fag,desp_val_tipo_fag,
    accion,usuario,hora)  values (antes.val_id_fag ,antes.val_catalogo_fag 
    ,antes.val_catalogo_equ_fag ,antes.val_revisor_fag ,antes.val_comte_fag 
    ,antes.val_fecha_fag ,antes.val_situacion_fag ,antes.val_dependencia_fag 
    ,antes.val_fecha_emision_fag ,antes.val_tipo_fag ,luego.val_id_fag 
    ,luego.val_catalogo_fag ,luego.val_catalogo_equ_fag ,luego.val_revisor_fag 
    ,luego.val_comte_fag ,luego.val_fecha_fag ,luego.val_situacion_fag 
    ,luego.val_dependencia_fag ,luego.val_fecha_emision_fag ,luego.val_tipo_fag 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_desc_elimina insert on "informix"
    .vlh_desc_elimina referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_desc_elimina (eli_id,eli_catalogo,
    eli_matricula,eli_tipo_trasporte,eli_descripcion,eli_fecha,eli_tipo_transaccion,
    eli_situacion,eli_obs,desp_eli_id,desp_eli_catalogo,desp_eli_matricula,
    desp_eli_tipo_trasporte,desp_eli_descripcion,desp_eli_fecha,desp_eli_tipo_transaccion,
    desp_eli_situacion,desp_eli_obs,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,'' ::lvarchar(2000) ,'' ,'' ,'' ,'' ,luego.eli_id ,luego.eli_catalogo 
    ,luego.eli_matricula ,luego.eli_tipo_trasporte ,luego.eli_descripcion 
    ,luego.eli_fecha ,luego.eli_tipo_transaccion ,luego.eli_situacion 
    ,luego.eli_obs ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_desc_elimina delete on "informix"
    .vlh_desc_elimina referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_desc_elimina (eli_id,eli_catalogo,
    eli_matricula,eli_tipo_trasporte,eli_descripcion,eli_fecha,eli_tipo_transaccion,
    eli_situacion,eli_obs,desp_eli_id,desp_eli_catalogo,desp_eli_matricula,
    desp_eli_tipo_trasporte,desp_eli_descripcion,desp_eli_fecha,desp_eli_tipo_transaccion,
    desp_eli_situacion,desp_eli_obs,accion,usuario,hora)  values (antes.eli_id 
    ,antes.eli_catalogo ,antes.eli_matricula ,antes.eli_tipo_trasporte 
    ,antes.eli_descripcion ,antes.eli_fecha ,antes.eli_tipo_transaccion 
    ,antes.eli_situacion ,antes.eli_obs ,NULL ,'' ,'' ,'' ,'' ::lvarchar(2000) 
    ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_desc_elimina update on "informix"
    .vlh_desc_elimina referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_desc_elimina (eli_id,eli_catalogo,
    eli_matricula,eli_tipo_trasporte,eli_descripcion,eli_fecha,eli_tipo_transaccion,
    eli_situacion,eli_obs,desp_eli_id,desp_eli_catalogo,desp_eli_matricula,
    desp_eli_tipo_trasporte,desp_eli_descripcion,desp_eli_fecha,desp_eli_tipo_transaccion,
    desp_eli_situacion,desp_eli_obs,accion,usuario,hora)  values (antes.eli_id 
    ,antes.eli_catalogo ,antes.eli_matricula ,antes.eli_tipo_trasporte 
    ,antes.eli_descripcion ,antes.eli_fecha ,antes.eli_tipo_transaccion 
    ,antes.eli_situacion ,antes.eli_obs ,luego.eli_id ,luego.eli_catalogo 
    ,luego.eli_matricula ,luego.eli_tipo_trasporte ,luego.eli_descripcion 
    ,luego.eli_fecha ,luego.eli_tipo_transaccion ,luego.eli_situacion 
    ,luego.eli_obs ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_retorno_cal insert on "informix"
    .vlh_retorno_cal referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_retorno_cal (ret_id,ret_fecha,
    ret_catalogo_vehiculo,ret_catalogo_carreton,ret_descripcion,ret_user,
    ret_situacion,desp_ret_id,desp_ret_fecha,desp_ret_catalogo_vehiculo,
    desp_ret_catalogo_carreton,desp_ret_descripcion,desp_ret_user,desp_ret_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ::lvarchar(1500) ,
    '' ,'' ,luego.ret_id ,luego.ret_fecha ,luego.ret_catalogo_vehiculo 
    ,luego.ret_catalogo_carreton ,luego.ret_descripcion ,luego.ret_user 
    ,luego.ret_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_retorno_cal delete on "informix"
    .vlh_retorno_cal referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_retorno_cal (ret_id,ret_fecha,
    ret_catalogo_vehiculo,ret_catalogo_carreton,ret_descripcion,ret_user,
    ret_situacion,desp_ret_id,desp_ret_fecha,desp_ret_catalogo_vehiculo,
    desp_ret_catalogo_carreton,desp_ret_descripcion,desp_ret_user,desp_ret_situacion,
    accion,usuario,hora)  values (antes.ret_id ,antes.ret_fecha ,antes.ret_catalogo_vehiculo 
    ,antes.ret_catalogo_carreton ,antes.ret_descripcion ,antes.ret_user 
    ,antes.ret_situacion ,NULL ,'' ,'' ,'' ,'' ::lvarchar(1500) ,'' ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_retorno_cal update on "informix"
    .vlh_retorno_cal referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_retorno_cal (ret_id,ret_fecha,
    ret_catalogo_vehiculo,ret_catalogo_carreton,ret_descripcion,ret_user,
    ret_situacion,desp_ret_id,desp_ret_fecha,desp_ret_catalogo_vehiculo,
    desp_ret_catalogo_carreton,desp_ret_descripcion,desp_ret_user,desp_ret_situacion,
    accion,usuario,hora)  values (antes.ret_id ,antes.ret_fecha ,antes.ret_catalogo_vehiculo 
    ,antes.ret_catalogo_carreton ,antes.ret_descripcion ,antes.ret_user 
    ,antes.ret_situacion ,luego.ret_id ,luego.ret_fecha ,luego.ret_catalogo_vehiculo 
    ,luego.ret_catalogo_carreton ,luego.ret_descripcion ,luego.ret_user 
    ,luego.ret_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_pdf insert on "informix".vlh_pdf 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_pdf (pdf_registro,pdf_catalogo,
    pdf_ruta,pdf_sit,desp_pdf_registro,desp_pdf_catalogo,desp_pdf_ruta,
    desp_pdf_sit,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.pdf_registro 
    ,luego.pdf_catalogo ,luego.pdf_ruta ,luego.pdf_sit ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_vlh_pdf delete on "informix".vlh_pdf 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_pdf (pdf_registro,pdf_catalogo,
    pdf_ruta,pdf_sit,desp_pdf_registro,desp_pdf_catalogo,desp_pdf_ruta,
    desp_pdf_sit,accion,usuario,hora)  values (antes.pdf_registro ,antes.pdf_catalogo 
    ,antes.pdf_ruta ,antes.pdf_sit ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_vlh_pdf update on "informix".vlh_pdf 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_pdf (pdf_registro,pdf_catalogo,
    pdf_ruta,pdf_sit,desp_pdf_registro,desp_pdf_catalogo,desp_pdf_ruta,
    desp_pdf_sit,accion,usuario,hora)  values (antes.pdf_registro ,antes.pdf_catalogo 
    ,antes.pdf_ruta ,antes.pdf_sit ,luego.pdf_registro ,luego.pdf_catalogo 
    ,luego.pdf_ruta ,luego.pdf_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_vlh_pdf_embarcaciones insert on 
    "informix".vlh_pdf_embarcaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_pdf_embarcaciones (pdf_registro_emb,
    pdf_catalogo_emb,pdf_ruta_emb,pdf_sit_emb,desp_pdf_registro_emb,desp_pdf_catalogo_emb,
    desp_pdf_ruta_emb,desp_pdf_sit_emb,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,luego.pdf_registro_emb ,luego.pdf_catalogo_emb ,luego.pdf_ruta_emb 
    ,luego.pdf_sit_emb ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_pdf_embarcaciones delete on 
    "informix".vlh_pdf_embarcaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_pdf_embarcaciones (pdf_registro_emb,
    pdf_catalogo_emb,pdf_ruta_emb,pdf_sit_emb,desp_pdf_registro_emb,desp_pdf_catalogo_emb,
    desp_pdf_ruta_emb,desp_pdf_sit_emb,accion,usuario,hora)  values (antes.pdf_registro_emb 
    ,antes.pdf_catalogo_emb ,antes.pdf_ruta_emb ,antes.pdf_sit_emb ,NULL 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_pdf_embarcaciones update on 
    "informix".vlh_pdf_embarcaciones referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_vlh_pdf_embarcaciones (pdf_registro_emb,
    pdf_catalogo_emb,pdf_ruta_emb,pdf_sit_emb,desp_pdf_registro_emb,desp_pdf_catalogo_emb,
    desp_pdf_ruta_emb,desp_pdf_sit_emb,accion,usuario,hora)  values (antes.pdf_registro_emb 
    ,antes.pdf_catalogo_emb ,antes.pdf_ruta_emb ,antes.pdf_sit_emb ,luego.pdf_registro_emb 
    ,luego.pdf_catalogo_emb ,luego.pdf_ruta_emb ,luego.pdf_sit_emb ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_pdf_fag insert on "informix"
    .vlh_pdf_fag referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_pdf_fag (pdf_registro_fag,
    pdf_catalogo_fag,pdf_ruta_fag,pdf_sit_fag,desp_pdf_registro_fag,desp_pdf_catalogo_fag,
    desp_pdf_ruta_fag,desp_pdf_sit_fag,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,luego.pdf_registro_fag ,luego.pdf_catalogo_fag ,luego.pdf_ruta_fag 
    ,luego.pdf_sit_fag ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_pdf_fag delete on "informix"
    .vlh_pdf_fag referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_pdf_fag (pdf_registro_fag,
    pdf_catalogo_fag,pdf_ruta_fag,pdf_sit_fag,desp_pdf_registro_fag,desp_pdf_catalogo_fag,
    desp_pdf_ruta_fag,desp_pdf_sit_fag,accion,usuario,hora)  values (antes.pdf_registro_fag 
    ,antes.pdf_catalogo_fag ,antes.pdf_ruta_fag ,antes.pdf_sit_fag ,NULL 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_pdf_fag update on "informix"
    .vlh_pdf_fag referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_pdf_fag (pdf_registro_fag,
    pdf_catalogo_fag,pdf_ruta_fag,pdf_sit_fag,desp_pdf_registro_fag,desp_pdf_catalogo_fag,
    desp_pdf_ruta_fag,desp_pdf_sit_fag,accion,usuario,hora)  values (antes.pdf_registro_fag 
    ,antes.pdf_catalogo_fag ,antes.pdf_ruta_fag ,antes.pdf_sit_fag ,luego.pdf_registro_fag 
    ,luego.pdf_catalogo_fag ,luego.pdf_ruta_fag ,luego.pdf_sit_fag ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_vlh_pdf_maquinaria insert on "informix"
    .vlh_pdf_maquinaria referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_pdf_maquinaria (pdf_registro_maqu,
    pdf_catalogo_maqu,pdf_ruta_maqu,pdf_sit_maqu,desp_pdf_registro_maqu,
    desp_pdf_catalogo_maqu,desp_pdf_ruta_maqu,desp_pdf_sit_maqu,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.pdf_registro_maqu ,luego.pdf_catalogo_maqu 
    ,luego.pdf_ruta_maqu ,luego.pdf_sit_maqu ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_vlh_pdf_maquinaria delete on "informix"
    .vlh_pdf_maquinaria referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_pdf_maquinaria (pdf_registro_maqu,
    pdf_catalogo_maqu,pdf_ruta_maqu,pdf_sit_maqu,desp_pdf_registro_maqu,
    desp_pdf_catalogo_maqu,desp_pdf_ruta_maqu,desp_pdf_sit_maqu,accion,
    usuario,hora)  values (antes.pdf_registro_maqu ,antes.pdf_catalogo_maqu 
    ,antes.pdf_ruta_maqu ,antes.pdf_sit_maqu ,NULL ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_pdf_maquinaria update on "informix"
    .vlh_pdf_maquinaria referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_vlh_pdf_maquinaria (pdf_registro_maqu,
    pdf_catalogo_maqu,pdf_ruta_maqu,pdf_sit_maqu,desp_pdf_registro_maqu,
    desp_pdf_catalogo_maqu,desp_pdf_ruta_maqu,desp_pdf_sit_maqu,accion,
    usuario,hora)  values (antes.pdf_registro_maqu ,antes.pdf_catalogo_maqu 
    ,antes.pdf_ruta_maqu ,antes.pdf_sit_maqu ,luego.pdf_registro_maqu 
    ,luego.pdf_catalogo_maqu ,luego.pdf_ruta_maqu ,luego.pdf_sit_maqu 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fin_subpro_desc insert on "informix"
    .fin_subpro_desc referencing new as luego
    for each row
        (
        insert into "informix".aud_fin_subpro_desc (subpro_plaza,
    subpro_politica,subpro_situacion,subpro_fecha,subpro_subproducto,
    desp_subpro_plaza,desp_subpro_politica,desp_subpro_situacion,desp_subpro_fecha,
    desp_subpro_subproducto,accion,usuario,hora)  values (NULL ,'' ,'' 
    ,'' ,'' ,luego.subpro_plaza ,luego.subpro_politica ,luego.subpro_situacion 
    ,luego.subpro_fecha ,luego.subpro_subproducto ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_fin_subpro_desc delete on "informix"
    .fin_subpro_desc referencing old as antes
    for each row
        (
        insert into "informix".aud_fin_subpro_desc (subpro_plaza,
    subpro_politica,subpro_situacion,subpro_fecha,subpro_subproducto,
    desp_subpro_plaza,desp_subpro_politica,desp_subpro_situacion,desp_subpro_fecha,
    desp_subpro_subproducto,accion,usuario,hora)  values (antes.subpro_plaza 
    ,antes.subpro_politica ,antes.subpro_situacion ,antes.subpro_fecha 
    ,antes.subpro_subproducto ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_fin_subpro_desc update on "informix"
    .fin_subpro_desc referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fin_subpro_desc (subpro_plaza,
    subpro_politica,subpro_situacion,subpro_fecha,subpro_subproducto,
    desp_subpro_plaza,desp_subpro_politica,desp_subpro_situacion,desp_subpro_fecha,
    desp_subpro_subproducto,accion,usuario,hora)  values (antes.subpro_plaza 
    ,antes.subpro_politica ,antes.subpro_situacion ,antes.subpro_fecha 
    ,antes.subpro_subproducto ,luego.subpro_plaza ,luego.subpro_politica 
    ,luego.subpro_situacion ,luego.subpro_fecha ,luego.subpro_subproducto 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fin_programa insert on "informix"
    .fin_programa referencing new as luego
    for each row
        (
        insert into "informix".aud_fin_programa (pro_id,pro_nombre,
    pro_fecha,pro_situacion,desp_pro_id,desp_pro_nombre,desp_pro_fecha,
    desp_pro_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.pro_id 
    ,luego.pro_nombre ,luego.pro_fecha ,luego.pro_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_fin_programa delete on "informix"
    .fin_programa referencing old as antes
    for each row
        (
        insert into "informix".aud_fin_programa (pro_id,pro_nombre,
    pro_fecha,pro_situacion,desp_pro_id,desp_pro_nombre,desp_pro_fecha,
    desp_pro_situacion,accion,usuario,hora)  values (antes.pro_id ,antes.pro_nombre 
    ,antes.pro_fecha ,antes.pro_situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_fin_programa update on "informix"
    .fin_programa referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fin_programa (pro_id,pro_nombre,
    pro_fecha,pro_situacion,desp_pro_id,desp_pro_nombre,desp_pro_fecha,
    desp_pro_situacion,accion,usuario,hora)  values (antes.pro_id ,antes.pro_nombre 
    ,antes.pro_fecha ,antes.pro_situacion ,luego.pro_id ,luego.pro_nombre 
    ,luego.pro_fecha ,luego.pro_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_fin_actividades insert on "informix"
    .fin_actividades referencing new as luego
    for each row
        (
        insert into "informix".aud_fin_actividades (act_id,act_nombre,
    act_fecha,act_programa,act_situacion,desp_act_id,desp_act_nombre,
    desp_act_fecha,desp_act_programa,desp_act_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.act_id ,luego.act_nombre ,
    luego.act_fecha ,luego.act_programa ,luego.act_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_fin_actividades delete on "informix"
    .fin_actividades referencing old as antes
    for each row
        (
        insert into "informix".aud_fin_actividades (act_id,act_nombre,
    act_fecha,act_programa,act_situacion,desp_act_id,desp_act_nombre,
    desp_act_fecha,desp_act_programa,desp_act_situacion,accion,usuario,
    hora)  values (antes.act_id ,antes.act_nombre ,antes.act_fecha ,antes.act_programa 
    ,antes.act_situacion ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_fin_actividades update on "informix"
    .fin_actividades referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fin_actividades (act_id,act_nombre,
    act_fecha,act_programa,act_situacion,desp_act_id,desp_act_nombre,
    desp_act_fecha,desp_act_programa,desp_act_situacion,accion,usuario,
    hora)  values (antes.act_id ,antes.act_nombre ,antes.act_fecha ,antes.act_programa 
    ,antes.act_situacion ,luego.act_id ,luego.act_nombre ,luego.act_fecha 
    ,luego.act_programa ,luego.act_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_fin_producto insert on "informix"
    .fin_producto referencing new as luego
    for each row
        (
        insert into "informix".aud_fin_producto (prod_id,prod_nombre,
    prod_fecha,prod_actividades,prod_situacion,desp_prod_id,desp_prod_nombre,
    desp_prod_fecha,desp_prod_actividades,desp_prod_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.prod_id ,luego.prod_nombre 
    ,luego.prod_fecha ,luego.prod_actividades ,luego.prod_situacion ,
    'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fin_producto delete on "informix"
    .fin_producto referencing old as antes
    for each row
        (
        insert into "informix".aud_fin_producto (prod_id,prod_nombre,
    prod_fecha,prod_actividades,prod_situacion,desp_prod_id,desp_prod_nombre,
    desp_prod_fecha,desp_prod_actividades,desp_prod_situacion,accion,
    usuario,hora)  values (antes.prod_id ,antes.prod_nombre ,antes.prod_fecha 
    ,antes.prod_actividades ,antes.prod_situacion ,NULL ,'' ,'' ,'' ,'' ,
    'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_fin_producto update on "informix"
    .fin_producto referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fin_producto (prod_id,prod_nombre,
    prod_fecha,prod_actividades,prod_situacion,desp_prod_id,desp_prod_nombre,
    desp_prod_fecha,desp_prod_actividades,desp_prod_situacion,accion,
    usuario,hora)  values (antes.prod_id ,antes.prod_nombre ,antes.prod_fecha 
    ,antes.prod_actividades ,antes.prod_situacion ,luego.prod_id ,luego.prod_nombre 
    ,luego.prod_fecha ,luego.prod_actividades ,luego.prod_situacion ,
    'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_fin_subproducto insert on "informix"
    .fin_subproducto referencing new as luego
    for each row
        (
        insert into "informix".aud_fin_subproducto (subp_id,subp_nombre,
    subp_fecha,subp_producto,subp_politica,subp_situacion,desp_subp_id,
    desp_subp_nombre,desp_subp_fecha,desp_subp_producto,desp_subp_politica,
    desp_subp_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,
    '' ,'' ,luego.subp_id ,luego.subp_nombre ,luego.subp_fecha ,luego.subp_producto 
    ,luego.subp_politica ,luego.subp_situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_fin_subproducto delete on "informix"
    .fin_subproducto referencing old as antes
    for each row
        (
        insert into "informix".aud_fin_subproducto (subp_id,subp_nombre,
    subp_fecha,subp_producto,subp_politica,subp_situacion,desp_subp_id,
    desp_subp_nombre,desp_subp_fecha,desp_subp_producto,desp_subp_politica,
    desp_subp_situacion,accion,usuario,hora)  values (antes.subp_id ,
    antes.subp_nombre ,antes.subp_fecha ,antes.subp_producto ,antes.subp_politica 
    ,antes.subp_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_fin_subproducto update on "informix"
    .fin_subproducto referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fin_subproducto (subp_id,subp_nombre,
    subp_fecha,subp_producto,subp_politica,subp_situacion,desp_subp_id,
    desp_subp_nombre,desp_subp_fecha,desp_subp_producto,desp_subp_politica,
    desp_subp_situacion,accion,usuario,hora)  values (antes.subp_id ,
    antes.subp_nombre ,antes.subp_fecha ,antes.subp_producto ,antes.subp_politica 
    ,antes.subp_situacion ,luego.subp_id ,luego.subp_nombre ,luego.subp_fecha 
    ,luego.subp_producto ,luego.subp_politica ,luego.subp_situacion ,
    'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cau_situaciones insert on "informix"
    .cau_situaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_cau_situaciones (sit_id,sit_descripcion,
    desp_sit_id,desp_sit_descripcion,accion,usuario,hora)  values (NULL 
    ,'' ,luego.sit_id ,luego.sit_descripcion ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_cau_situaciones delete on "informix"
    .cau_situaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_cau_situaciones (sit_id,sit_descripcion,
    desp_sit_id,desp_sit_descripcion,accion,usuario,hora)  values (antes.sit_id 
    ,antes.sit_descripcion ,NULL ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_cau_situaciones update on "informix"
    .cau_situaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cau_situaciones (sit_id,sit_descripcion,
    desp_sit_id,desp_sit_descripcion,accion,usuario,hora)  values (antes.sit_id 
    ,antes.sit_descripcion ,luego.sit_id ,luego.sit_descripcion ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_cau_permisos insert on "informix"
    .cau_permisos referencing new as luego
    for each row
        (
        insert into "informix".aud_cau_permisos (per_id,per_catalogo_usuario,
    per_contrasena,per_fecha,per_aplicaciones,per_observaciones,per_mensaje,
    per_dependencia,per_situacion_permiso,per_usuario,desp_per_id,desp_per_catalogo_usuario,
    desp_per_contrasena,desp_per_fecha,desp_per_aplicaciones,desp_per_observaciones,
    desp_per_mensaje,desp_per_dependencia,desp_per_situacion_permiso,
    desp_per_usuario,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,luego.per_id ,luego.per_catalogo_usuario ,luego.per_contrasena 
    ,luego.per_fecha ,luego.per_aplicaciones ,luego.per_observaciones 
    ,luego.per_mensaje ,luego.per_dependencia ,luego.per_situacion_permiso 
    ,luego.per_usuario ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_cau_permisos delete on "informix"
    .cau_permisos referencing old as antes
    for each row
        (
        insert into "informix".aud_cau_permisos (per_id,per_catalogo_usuario,
    per_contrasena,per_fecha,per_aplicaciones,per_observaciones,per_mensaje,
    per_dependencia,per_situacion_permiso,per_usuario,desp_per_id,desp_per_catalogo_usuario,
    desp_per_contrasena,desp_per_fecha,desp_per_aplicaciones,desp_per_observaciones,
    desp_per_mensaje,desp_per_dependencia,desp_per_situacion_permiso,
    desp_per_usuario,accion,usuario,hora)  values (antes.per_id ,antes.per_catalogo_usuario 
    ,antes.per_contrasena ,antes.per_fecha ,antes.per_aplicaciones ,antes.per_observaciones 
    ,antes.per_mensaje ,antes.per_dependencia ,antes.per_situacion_permiso 
    ,antes.per_usuario ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_cau_permisos update on "informix"
    .cau_permisos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cau_permisos (per_id,per_catalogo_usuario,
    per_contrasena,per_fecha,per_aplicaciones,per_observaciones,per_mensaje,
    per_dependencia,per_situacion_permiso,per_usuario,desp_per_id,desp_per_catalogo_usuario,
    desp_per_contrasena,desp_per_fecha,desp_per_aplicaciones,desp_per_observaciones,
    desp_per_mensaje,desp_per_dependencia,desp_per_situacion_permiso,
    desp_per_usuario,accion,usuario,hora)  values (antes.per_id ,antes.per_catalogo_usuario 
    ,antes.per_contrasena ,antes.per_fecha ,antes.per_aplicaciones ,antes.per_observaciones 
    ,antes.per_mensaje ,antes.per_dependencia ,antes.per_situacion_permiso 
    ,antes.per_usuario ,luego.per_id ,luego.per_catalogo_usuario ,luego.per_contrasena 
    ,luego.per_fecha ,luego.per_aplicaciones ,luego.per_observaciones 
    ,luego.per_mensaje ,luego.per_dependencia ,luego.per_situacion_permiso 
    ,luego.per_usuario ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_sol_tarjetaunica insert on "informix"
    .sol_tarjetaunica referencing new as luego
    for each row
        (
        insert into "informix".aud_sol_tarjetaunica (sol_id,sol_fecha,
    sol_catalogo,sol_cat_reviso,sol_cat_autoriza,sol_dep,sol_motivo,sol_desc,
    sol_obs_denegada,sol_ruta,sol_situacion,desp_sol_id,desp_sol_fecha,
    desp_sol_catalogo,desp_sol_cat_reviso,desp_sol_cat_autoriza,desp_sol_dep,
    desp_sol_motivo,desp_sol_desc,desp_sol_obs_denegada,desp_sol_ruta,
    desp_sol_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,luego.sol_id ,luego.sol_fecha ,luego.sol_catalogo 
    ,luego.sol_cat_reviso ,luego.sol_cat_autoriza ,luego.sol_dep ,luego.sol_motivo 
    ,luego.sol_desc ,luego.sol_obs_denegada ,luego.sol_ruta ,luego.sol_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sol_tarjetaunica delete on "informix"
    .sol_tarjetaunica referencing old as antes
    for each row
        (
        insert into "informix".aud_sol_tarjetaunica (sol_id,sol_fecha,
    sol_catalogo,sol_cat_reviso,sol_cat_autoriza,sol_dep,sol_motivo,sol_desc,
    sol_obs_denegada,sol_ruta,sol_situacion,desp_sol_id,desp_sol_fecha,
    desp_sol_catalogo,desp_sol_cat_reviso,desp_sol_cat_autoriza,desp_sol_dep,
    desp_sol_motivo,desp_sol_desc,desp_sol_obs_denegada,desp_sol_ruta,
    desp_sol_situacion,accion,usuario,hora)  values (antes.sol_id ,antes.sol_fecha 
    ,antes.sol_catalogo ,antes.sol_cat_reviso ,antes.sol_cat_autoriza 
    ,antes.sol_dep ,antes.sol_motivo ,antes.sol_desc ,antes.sol_obs_denegada 
    ,antes.sol_ruta ,antes.sol_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_sol_tarjetaunica update on "informix"
    .sol_tarjetaunica referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sol_tarjetaunica (sol_id,sol_fecha,
    sol_catalogo,sol_cat_reviso,sol_cat_autoriza,sol_dep,sol_motivo,sol_desc,
    sol_obs_denegada,sol_ruta,sol_situacion,desp_sol_id,desp_sol_fecha,
    desp_sol_catalogo,desp_sol_cat_reviso,desp_sol_cat_autoriza,desp_sol_dep,
    desp_sol_motivo,desp_sol_desc,desp_sol_obs_denegada,desp_sol_ruta,
    desp_sol_situacion,accion,usuario,hora)  values (antes.sol_id ,antes.sol_fecha 
    ,antes.sol_catalogo ,antes.sol_cat_reviso ,antes.sol_cat_autoriza 
    ,antes.sol_dep ,antes.sol_motivo ,antes.sol_desc ,antes.sol_obs_denegada 
    ,antes.sol_ruta ,antes.sol_situacion ,luego.sol_id ,luego.sol_fecha 
    ,luego.sol_catalogo ,luego.sol_cat_reviso ,luego.sol_cat_autoriza 
    ,luego.sol_dep ,luego.sol_motivo ,luego.sol_desc ,luego.sol_obs_denegada 
    ,luego.sol_ruta ,luego.sol_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_sig_rancho insert on "informix".sig_rancho 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_rancho (rancho_id,rancho_compania,
    rancho_grado,rancho_fecha,rancho_tiempo,rancho_cantidad,rancho_situacion,
    desp_rancho_id,desp_rancho_compania,desp_rancho_grado,desp_rancho_fecha,
    desp_rancho_tiempo,desp_rancho_cantidad,desp_rancho_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,luego.rancho_id ,luego.rancho_compania 
    ,luego.rancho_grado ,luego.rancho_fecha ,luego.rancho_tiempo ,luego.rancho_cantidad 
    ,luego.rancho_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_sig_rancho delete on "informix".sig_rancho 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_rancho (rancho_id,rancho_compania,
    rancho_grado,rancho_fecha,rancho_tiempo,rancho_cantidad,rancho_situacion,
    desp_rancho_id,desp_rancho_compania,desp_rancho_grado,desp_rancho_fecha,
    desp_rancho_tiempo,desp_rancho_cantidad,desp_rancho_situacion,accion,
    usuario,hora)  values (antes.rancho_id ,antes.rancho_compania ,antes.rancho_grado 
    ,antes.rancho_fecha ,antes.rancho_tiempo ,antes.rancho_cantidad ,
    antes.rancho_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_sig_rancho update on "informix".sig_rancho 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_rancho (rancho_id,rancho_compania,
    rancho_grado,rancho_fecha,rancho_tiempo,rancho_cantidad,rancho_situacion,
    desp_rancho_id,desp_rancho_compania,desp_rancho_grado,desp_rancho_fecha,
    desp_rancho_tiempo,desp_rancho_cantidad,desp_rancho_situacion,accion,
    usuario,hora)  values (antes.rancho_id ,antes.rancho_compania ,antes.rancho_grado 
    ,antes.rancho_fecha ,antes.rancho_tiempo ,antes.rancho_cantidad ,
    antes.rancho_situacion ,luego.rancho_id ,luego.rancho_compania ,luego.rancho_grado 
    ,luego.rancho_fecha ,luego.rancho_tiempo ,luego.rancho_cantidad ,
    luego.rancho_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_rm_registros insert on "informix"
    .rm_registros referencing new as luego
    for each row
        (
        insert into "informix".aud_rm_registros (reg_catalogo,
    reg_dpi,reg_nombre1,reg_nombre2,reg_nombre3,reg_apellido1,reg_apellido2,
    reg_direccion,reg_estado_civil,reg_sexo,reg_sangre,reg_celular,reg_email,
    reg_fecha_nacimiento,reg_dep_nacimiento,reg_muni_nacimiento,reg_religion,
    reg_nit,reg_grado_escolar,reg_fech_ingreso,reg_lugar_entrenamiento,
    reg_profesion,reg_situacion,reg_fecha_baja,reg_etnia,reg_grado,reg_fuerza,
    reg_edad,reg_plaza,reg_arma,desp_reg_catalogo,desp_reg_dpi,desp_reg_nombre1,
    desp_reg_nombre2,desp_reg_nombre3,desp_reg_apellido1,desp_reg_apellido2,
    desp_reg_direccion,desp_reg_estado_civil,desp_reg_sexo,desp_reg_sangre,
    desp_reg_celular,desp_reg_email,desp_reg_fecha_nacimiento,desp_reg_dep_nacimiento,
    desp_reg_muni_nacimiento,desp_reg_religion,desp_reg_nit,desp_reg_grado_escolar,
    desp_reg_fech_ingreso,desp_reg_lugar_entrenamiento,desp_reg_profesion,
    desp_reg_situacion,desp_reg_fecha_baja,desp_reg_etnia,desp_reg_grado,
    desp_reg_fuerza,desp_reg_edad,desp_reg_plaza,desp_reg_arma,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.reg_catalogo 
    ,luego.reg_dpi ,luego.reg_nombre1 ,luego.reg_nombre2 ,luego.reg_nombre3 
    ,luego.reg_apellido1 ,luego.reg_apellido2 ,luego.reg_direccion ,luego.reg_estado_civil 
    ,luego.reg_sexo ,luego.reg_sangre ,luego.reg_celular ,luego.reg_email 
    ,luego.reg_fecha_nacimiento ,luego.reg_dep_nacimiento ,luego.reg_muni_nacimiento 
    ,luego.reg_religion ,luego.reg_nit ,luego.reg_grado_escolar ,luego.reg_fech_ingreso 
    ,luego.reg_lugar_entrenamiento ,luego.reg_profesion ,luego.reg_situacion 
    ,luego.reg_fecha_baja ,luego.reg_etnia ,luego.reg_grado ,luego.reg_fuerza 
    ,luego.reg_edad ,luego.reg_plaza ,luego.reg_arma ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_rm_registros delete on "informix"
    .rm_registros referencing old as antes
    for each row
        (
        insert into "informix".aud_rm_registros (reg_catalogo,
    reg_dpi,reg_nombre1,reg_nombre2,reg_nombre3,reg_apellido1,reg_apellido2,
    reg_direccion,reg_estado_civil,reg_sexo,reg_sangre,reg_celular,reg_email,
    reg_fecha_nacimiento,reg_dep_nacimiento,reg_muni_nacimiento,reg_religion,
    reg_nit,reg_grado_escolar,reg_fech_ingreso,reg_lugar_entrenamiento,
    reg_profesion,reg_situacion,reg_fecha_baja,reg_etnia,reg_grado,reg_fuerza,
    reg_edad,reg_plaza,reg_arma,desp_reg_catalogo,desp_reg_dpi,desp_reg_nombre1,
    desp_reg_nombre2,desp_reg_nombre3,desp_reg_apellido1,desp_reg_apellido2,
    desp_reg_direccion,desp_reg_estado_civil,desp_reg_sexo,desp_reg_sangre,
    desp_reg_celular,desp_reg_email,desp_reg_fecha_nacimiento,desp_reg_dep_nacimiento,
    desp_reg_muni_nacimiento,desp_reg_religion,desp_reg_nit,desp_reg_grado_escolar,
    desp_reg_fech_ingreso,desp_reg_lugar_entrenamiento,desp_reg_profesion,
    desp_reg_situacion,desp_reg_fecha_baja,desp_reg_etnia,desp_reg_grado,
    desp_reg_fuerza,desp_reg_edad,desp_reg_plaza,desp_reg_arma,accion,
    usuario,hora)  values (antes.reg_catalogo ,antes.reg_dpi ,antes.reg_nombre1 
    ,antes.reg_nombre2 ,antes.reg_nombre3 ,antes.reg_apellido1 ,antes.reg_apellido2 
    ,antes.reg_direccion ,antes.reg_estado_civil ,antes.reg_sexo ,antes.reg_sangre 
    ,antes.reg_celular ,antes.reg_email ,antes.reg_fecha_nacimiento ,
    antes.reg_dep_nacimiento ,antes.reg_muni_nacimiento ,antes.reg_religion 
    ,antes.reg_nit ,antes.reg_grado_escolar ,antes.reg_fech_ingreso ,
    antes.reg_lugar_entrenamiento ,antes.reg_profesion ,antes.reg_situacion 
    ,antes.reg_fecha_baja ,antes.reg_etnia ,antes.reg_grado ,antes.reg_fuerza 
    ,antes.reg_edad ,antes.reg_plaza ,antes.reg_arma ,NULL ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_rm_registros update on "informix"
    .rm_registros referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rm_registros (reg_catalogo,
    reg_dpi,reg_nombre1,reg_nombre2,reg_nombre3,reg_apellido1,reg_apellido2,
    reg_direccion,reg_estado_civil,reg_sexo,reg_sangre,reg_celular,reg_email,
    reg_fecha_nacimiento,reg_dep_nacimiento,reg_muni_nacimiento,reg_religion,
    reg_nit,reg_grado_escolar,reg_fech_ingreso,reg_lugar_entrenamiento,
    reg_profesion,reg_situacion,reg_fecha_baja,reg_etnia,reg_grado,reg_fuerza,
    reg_edad,reg_plaza,reg_arma,desp_reg_catalogo,desp_reg_dpi,desp_reg_nombre1,
    desp_reg_nombre2,desp_reg_nombre3,desp_reg_apellido1,desp_reg_apellido2,
    desp_reg_direccion,desp_reg_estado_civil,desp_reg_sexo,desp_reg_sangre,
    desp_reg_celular,desp_reg_email,desp_reg_fecha_nacimiento,desp_reg_dep_nacimiento,
    desp_reg_muni_nacimiento,desp_reg_religion,desp_reg_nit,desp_reg_grado_escolar,
    desp_reg_fech_ingreso,desp_reg_lugar_entrenamiento,desp_reg_profesion,
    desp_reg_situacion,desp_reg_fecha_baja,desp_reg_etnia,desp_reg_grado,
    desp_reg_fuerza,desp_reg_edad,desp_reg_plaza,desp_reg_arma,accion,
    usuario,hora)  values (antes.reg_catalogo ,antes.reg_dpi ,antes.reg_nombre1 
    ,antes.reg_nombre2 ,antes.reg_nombre3 ,antes.reg_apellido1 ,antes.reg_apellido2 
    ,antes.reg_direccion ,antes.reg_estado_civil ,antes.reg_sexo ,antes.reg_sangre 
    ,antes.reg_celular ,antes.reg_email ,antes.reg_fecha_nacimiento ,
    antes.reg_dep_nacimiento ,antes.reg_muni_nacimiento ,antes.reg_religion 
    ,antes.reg_nit ,antes.reg_grado_escolar ,antes.reg_fech_ingreso ,
    antes.reg_lugar_entrenamiento ,antes.reg_profesion ,antes.reg_situacion 
    ,antes.reg_fecha_baja ,antes.reg_etnia ,antes.reg_grado ,antes.reg_fuerza 
    ,antes.reg_edad ,antes.reg_plaza ,antes.reg_arma ,luego.reg_catalogo 
    ,luego.reg_dpi ,luego.reg_nombre1 ,luego.reg_nombre2 ,luego.reg_nombre3 
    ,luego.reg_apellido1 ,luego.reg_apellido2 ,luego.reg_direccion ,luego.reg_estado_civil 
    ,luego.reg_sexo ,luego.reg_sangre ,luego.reg_celular ,luego.reg_email 
    ,luego.reg_fecha_nacimiento ,luego.reg_dep_nacimiento ,luego.reg_muni_nacimiento 
    ,luego.reg_religion ,luego.reg_nit ,luego.reg_grado_escolar ,luego.reg_fech_ingreso 
    ,luego.reg_lugar_entrenamiento ,luego.reg_profesion ,luego.reg_situacion 
    ,luego.reg_fecha_baja ,luego.reg_etnia ,luego.reg_grado ,luego.reg_fuerza 
    ,luego.reg_edad ,luego.reg_plaza ,luego.reg_arma ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_rm_beneficiarios insert on "informix"
    .rm_beneficiarios referencing new as luego
    for each row
        (
        insert into "informix".aud_rm_beneficiarios (ben_catalogo,
    ben_dpi,ben_nombre1,ben_nombre2,ben_apellido1,ben_apellido2,ben_direccion,
    ben_celular,ben_parentesco,desp_ben_catalogo,desp_ben_dpi,desp_ben_nombre1,
    desp_ben_nombre2,desp_ben_apellido1,desp_ben_apellido2,desp_ben_direccion,
    desp_ben_celular,desp_ben_parentesco,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.ben_catalogo ,luego.ben_dpi 
    ,luego.ben_nombre1 ,luego.ben_nombre2 ,luego.ben_apellido1 ,luego.ben_apellido2 
    ,luego.ben_direccion ,luego.ben_celular ,luego.ben_parentesco ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_rm_beneficiarios delete on "informix"
    .rm_beneficiarios referencing old as antes
    for each row
        (
        insert into "informix".aud_rm_beneficiarios (ben_catalogo,
    ben_dpi,ben_nombre1,ben_nombre2,ben_apellido1,ben_apellido2,ben_direccion,
    ben_celular,ben_parentesco,desp_ben_catalogo,desp_ben_dpi,desp_ben_nombre1,
    desp_ben_nombre2,desp_ben_apellido1,desp_ben_apellido2,desp_ben_direccion,
    desp_ben_celular,desp_ben_parentesco,accion,usuario,hora)  values 
    (antes.ben_catalogo ,antes.ben_dpi ,antes.ben_nombre1 ,antes.ben_nombre2 
    ,antes.ben_apellido1 ,antes.ben_apellido2 ,antes.ben_direccion ,antes.ben_celular 
    ,antes.ben_parentesco ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_rm_beneficiarios update on "informix"
    .rm_beneficiarios referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rm_beneficiarios (ben_catalogo,
    ben_dpi,ben_nombre1,ben_nombre2,ben_apellido1,ben_apellido2,ben_direccion,
    ben_celular,ben_parentesco,desp_ben_catalogo,desp_ben_dpi,desp_ben_nombre1,
    desp_ben_nombre2,desp_ben_apellido1,desp_ben_apellido2,desp_ben_direccion,
    desp_ben_celular,desp_ben_parentesco,accion,usuario,hora)  values 
    (antes.ben_catalogo ,antes.ben_dpi ,antes.ben_nombre1 ,antes.ben_nombre2 
    ,antes.ben_apellido1 ,antes.ben_apellido2 ,antes.ben_direccion ,antes.ben_celular 
    ,antes.ben_parentesco ,luego.ben_catalogo ,luego.ben_dpi ,luego.ben_nombre1 
    ,luego.ben_nombre2 ,luego.ben_apellido1 ,luego.ben_apellido2 ,luego.ben_direccion 
    ,luego.ben_celular ,luego.ben_parentesco ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_rm_asistencia insert on "informix"
    .rm_asistencia referencing new as luego
    for each row
        (
        insert into "informix".aud_rm_asistencia (asi_catalogo,
    asi_fecha,asi_horas,asi_situacion,desp_asi_catalogo,desp_asi_fecha,
    desp_asi_horas,desp_asi_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,luego.asi_catalogo ,luego.asi_fecha ,luego.asi_horas ,luego.asi_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_rm_asistencia delete on "informix"
    .rm_asistencia referencing old as antes
    for each row
        (
        insert into "informix".aud_rm_asistencia (asi_catalogo,
    asi_fecha,asi_horas,asi_situacion,desp_asi_catalogo,desp_asi_fecha,
    desp_asi_horas,desp_asi_situacion,accion,usuario,hora)  values (antes.asi_catalogo 
    ,antes.asi_fecha ,antes.asi_horas ,antes.asi_situacion ,NULL ,'' ,
    '' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_rm_asistencia update on "informix"
    .rm_asistencia referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rm_asistencia (asi_catalogo,
    asi_fecha,asi_horas,asi_situacion,desp_asi_catalogo,desp_asi_fecha,
    desp_asi_horas,desp_asi_situacion,accion,usuario,hora)  values (antes.asi_catalogo 
    ,antes.asi_fecha ,antes.asi_horas ,antes.asi_situacion ,luego.asi_catalogo 
    ,luego.asi_fecha ,luego.asi_horas ,luego.asi_situacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ciber_office insert on "informix"
    .ciber_office referencing new as luego
    for each row
        (
        insert into "informix".aud_ciber_office (off_id,off_desc_2,
    off_situacion,desp_off_id,desp_off_desc_2,desp_off_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.off_id ,luego.off_desc_2 
    ,luego.off_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ciber_office delete on "informix"
    .ciber_office referencing old as antes
    for each row
        (
        insert into "informix".aud_ciber_office (off_id,off_desc_2,
    off_situacion,desp_off_id,desp_off_desc_2,desp_off_situacion,accion,
    usuario,hora)  values (antes.off_id ,antes.off_desc_2 ,antes.off_situacion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ciber_office update on "informix"
    .ciber_office referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ciber_office (off_id,off_desc_2,
    off_situacion,desp_off_id,desp_off_desc_2,desp_off_situacion,accion,
    usuario,hora)  values (antes.off_id ,antes.off_desc_2 ,antes.off_situacion 
    ,luego.off_id ,luego.off_desc_2 ,luego.off_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_ciber_ram insert on "informix".ciber_ram 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_ciber_ram (ram_id,ram_desc,
    ram_situacion,desp_ram_id,desp_ram_desc,desp_ram_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.ram_id ,luego.ram_desc ,
    luego.ram_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ciber_ram delete on "informix".ciber_ram 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_ciber_ram (ram_id,ram_desc,
    ram_situacion,desp_ram_id,desp_ram_desc,desp_ram_situacion,accion,
    usuario,hora)  values (antes.ram_id ,antes.ram_desc ,antes.ram_situacion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ciber_ram update on "informix".ciber_ram 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ciber_ram (ram_id,ram_desc,
    ram_situacion,desp_ram_id,desp_ram_desc,desp_ram_situacion,accion,
    usuario,hora)  values (antes.ram_id ,antes.ram_desc ,antes.ram_situacion 
    ,luego.ram_id ,luego.ram_desc ,luego.ram_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_ciber_antivirus insert on "informix"
    .ciber_antivirus referencing new as luego
    for each row
        (
        insert into "informix".aud_ciber_antivirus (ant_id,ant_desc_3,
    ant_situacion,desp_ant_id,desp_ant_desc_3,desp_ant_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.ant_id ,luego.ant_desc_3 
    ,luego.ant_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ciber_antivirus delete on "informix"
    .ciber_antivirus referencing old as antes
    for each row
        (
        insert into "informix".aud_ciber_antivirus (ant_id,ant_desc_3,
    ant_situacion,desp_ant_id,desp_ant_desc_3,desp_ant_situacion,accion,
    usuario,hora)  values (antes.ant_id ,antes.ant_desc_3 ,antes.ant_situacion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ciber_antivirus update on "informix"
    .ciber_antivirus referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ciber_antivirus (ant_id,ant_desc_3,
    ant_situacion,desp_ant_id,desp_ant_desc_3,desp_ant_situacion,accion,
    usuario,hora)  values (antes.ant_id ,antes.ant_desc_3 ,antes.ant_situacion 
    ,luego.ant_id ,luego.ant_desc_3 ,luego.ant_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_ciber_disco_duro insert on "informix"
    .ciber_disco_duro referencing new as luego
    for each row
        (
        insert into "informix".aud_ciber_disco_duro (disc_id,
    disc_desc,disc_situacion,desp_disc_id,desp_disc_desc,desp_disc_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.disc_id ,luego.disc_desc 
    ,luego.disc_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ciber_disco_duro delete on "informix"
    .ciber_disco_duro referencing old as antes
    for each row
        (
        insert into "informix".aud_ciber_disco_duro (disc_id,
    disc_desc,disc_situacion,desp_disc_id,desp_disc_desc,desp_disc_situacion,
    accion,usuario,hora)  values (antes.disc_id ,antes.disc_desc ,antes.disc_situacion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ciber_disco_duro update on "informix"
    .ciber_disco_duro referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ciber_disco_duro (disc_id,
    disc_desc,disc_situacion,desp_disc_id,desp_disc_desc,desp_disc_situacion,
    accion,usuario,hora)  values (antes.disc_id ,antes.disc_desc ,antes.disc_situacion 
    ,luego.disc_id ,luego.disc_desc ,luego.disc_situacion ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_ciber_procesador insert on "informix"
    .ciber_procesador referencing new as luego
    for each row
        (
        insert into "informix".aud_ciber_procesador (proc_id,
    proc_desc,proc_situacion,desp_proc_id,desp_proc_desc,desp_proc_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.proc_id ,luego.proc_desc 
    ,luego.proc_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ciber_procesador delete on "informix"
    .ciber_procesador referencing old as antes
    for each row
        (
        insert into "informix".aud_ciber_procesador (proc_id,
    proc_desc,proc_situacion,desp_proc_id,desp_proc_desc,desp_proc_situacion,
    accion,usuario,hora)  values (antes.proc_id ,antes.proc_desc ,antes.proc_situacion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ciber_procesador update on "informix"
    .ciber_procesador referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ciber_procesador (proc_id,
    proc_desc,proc_situacion,desp_proc_id,desp_proc_desc,desp_proc_situacion,
    accion,usuario,hora)  values (antes.proc_id ,antes.proc_desc ,antes.proc_situacion 
    ,luego.proc_id ,luego.proc_desc ,luego.proc_situacion ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_ciber_sistema_operativo insert 
    on "informix".ciber_sistema_operativo referencing new as luego
    
    for each row
        (
        insert into "informix".aud_ciber_sistema_operativo (so_id,
    so_desc_1,so_situacion,desp_so_id,desp_so_desc_1,desp_so_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.so_id ,luego.so_desc_1 
    ,luego.so_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ciber_sistema_operativo delete 
    on "informix".ciber_sistema_operativo referencing old as antes
    
    for each row
        (
        insert into "informix".aud_ciber_sistema_operativo (so_id,
    so_desc_1,so_situacion,desp_so_id,desp_so_desc_1,desp_so_situacion,
    accion,usuario,hora)  values (antes.so_id ,antes.so_desc_1 ,antes.so_situacion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ciber_sistema_operativo update 
    on "informix".ciber_sistema_operativo referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_ciber_sistema_operativo (so_id,
    so_desc_1,so_situacion,desp_so_id,desp_so_desc_1,desp_so_situacion,
    accion,usuario,hora)  values (antes.so_id ,antes.so_desc_1 ,antes.so_situacion 
    ,luego.so_id ,luego.so_desc_1 ,luego.so_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_ciber_evento insert on "informix"
    .ciber_evento referencing new as luego
    for each row
        (
        insert into "informix".aud_ciber_evento (evento_id,evento_dia,
    evento_numero,evento_ident,evento_catalogo,evento_grado,evento_telefono,
    evento_correo,evento_observacion,evento_ocurriofecha,evento_descubriofecha,
    evento_informofecha,evento_si,evento_duracion,evento_dependencia,
    evento_situacion,desp_evento_id,desp_evento_dia,desp_evento_numero,
    desp_evento_ident,desp_evento_catalogo,desp_evento_grado,desp_evento_telefono,
    desp_evento_correo,desp_evento_observacion,desp_evento_ocurriofecha,
    desp_evento_descubriofecha,desp_evento_informofecha,desp_evento_si,
    desp_evento_duracion,desp_evento_dependencia,desp_evento_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,luego.evento_id ,luego.evento_dia ,luego.evento_numero 
    ,luego.evento_ident ,luego.evento_catalogo ,luego.evento_grado ,luego.evento_telefono 
    ,luego.evento_correo ,luego.evento_observacion ,luego.evento_ocurriofecha 
    ,luego.evento_descubriofecha ,luego.evento_informofecha ,luego.evento_si 
    ,luego.evento_duracion ,luego.evento_dependencia ,luego.evento_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ciber_evento delete on "informix"
    .ciber_evento referencing old as antes
    for each row
        (
        insert into "informix".aud_ciber_evento (evento_id,evento_dia,
    evento_numero,evento_ident,evento_catalogo,evento_grado,evento_telefono,
    evento_correo,evento_observacion,evento_ocurriofecha,evento_descubriofecha,
    evento_informofecha,evento_si,evento_duracion,evento_dependencia,
    evento_situacion,desp_evento_id,desp_evento_dia,desp_evento_numero,
    desp_evento_ident,desp_evento_catalogo,desp_evento_grado,desp_evento_telefono,
    desp_evento_correo,desp_evento_observacion,desp_evento_ocurriofecha,
    desp_evento_descubriofecha,desp_evento_informofecha,desp_evento_si,
    desp_evento_duracion,desp_evento_dependencia,desp_evento_situacion,
    accion,usuario,hora)  values (antes.evento_id ,antes.evento_dia ,
    antes.evento_numero ,antes.evento_ident ,antes.evento_catalogo ,antes.evento_grado 
    ,antes.evento_telefono ,antes.evento_correo ,antes.evento_observacion 
    ,antes.evento_ocurriofecha ,antes.evento_descubriofecha ,antes.evento_informofecha 
    ,antes.evento_si ,antes.evento_duracion ,antes.evento_dependencia 
    ,antes.evento_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ciber_evento update on "informix"
    .ciber_evento referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ciber_evento (evento_id,evento_dia,
    evento_numero,evento_ident,evento_catalogo,evento_grado,evento_telefono,
    evento_correo,evento_observacion,evento_ocurriofecha,evento_descubriofecha,
    evento_informofecha,evento_si,evento_duracion,evento_dependencia,
    evento_situacion,desp_evento_id,desp_evento_dia,desp_evento_numero,
    desp_evento_ident,desp_evento_catalogo,desp_evento_grado,desp_evento_telefono,
    desp_evento_correo,desp_evento_observacion,desp_evento_ocurriofecha,
    desp_evento_descubriofecha,desp_evento_informofecha,desp_evento_si,
    desp_evento_duracion,desp_evento_dependencia,desp_evento_situacion,
    accion,usuario,hora)  values (antes.evento_id ,antes.evento_dia ,
    antes.evento_numero ,antes.evento_ident ,antes.evento_catalogo ,antes.evento_grado 
    ,antes.evento_telefono ,antes.evento_correo ,antes.evento_observacion 
    ,antes.evento_ocurriofecha ,antes.evento_descubriofecha ,antes.evento_informofecha 
    ,antes.evento_si ,antes.evento_duracion ,antes.evento_dependencia 
    ,antes.evento_situacion ,luego.evento_id ,luego.evento_dia ,luego.evento_numero 
    ,luego.evento_ident ,luego.evento_catalogo ,luego.evento_grado ,luego.evento_telefono 
    ,luego.evento_correo ,luego.evento_observacion ,luego.evento_ocurriofecha 
    ,luego.evento_descubriofecha ,luego.evento_informofecha ,luego.evento_si 
    ,luego.evento_duracion ,luego.evento_dependencia ,luego.evento_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ciber_inventario insert on "informix"
    .ciber_inventario referencing new as luego
    for each row
        (
        insert into "informix".aud_ciber_inventario (inv_id,inv_catalogo,
    inv_oficina,inv_nombre,inv_mac,inv_catresp,inv_detalle,inv_pertenece,
    inv_so,inv_solic,inv_procesador,inv_almacenamiento,inv_ram,inv_office,
    inv_officelic,inv_antivirus,inv_antiviruslic,inv_dependencia,inv_situacion,
    desp_inv_id,desp_inv_catalogo,desp_inv_oficina,desp_inv_nombre,desp_inv_mac,
    desp_inv_catresp,desp_inv_detalle,desp_inv_pertenece,desp_inv_so,
    desp_inv_solic,desp_inv_procesador,desp_inv_almacenamiento,desp_inv_ram,
    desp_inv_office,desp_inv_officelic,desp_inv_antivirus,desp_inv_antiviruslic,
    desp_inv_dependencia,desp_inv_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.inv_id 
    ,luego.inv_catalogo ,luego.inv_oficina ,luego.inv_nombre ,luego.inv_mac 
    ,luego.inv_catresp ,luego.inv_detalle ,luego.inv_pertenece ,luego.inv_so 
    ,luego.inv_solic ,luego.inv_procesador ,luego.inv_almacenamiento 
    ,luego.inv_ram ,luego.inv_office ,luego.inv_officelic ,luego.inv_antivirus 
    ,luego.inv_antiviruslic ,luego.inv_dependencia ,luego.inv_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ciber_inventario delete on "informix"
    .ciber_inventario referencing old as antes
    for each row
        (
        insert into "informix".aud_ciber_inventario (inv_id,inv_catalogo,
    inv_oficina,inv_nombre,inv_mac,inv_catresp,inv_detalle,inv_pertenece,
    inv_so,inv_solic,inv_procesador,inv_almacenamiento,inv_ram,inv_office,
    inv_officelic,inv_antivirus,inv_antiviruslic,inv_dependencia,inv_situacion,
    desp_inv_id,desp_inv_catalogo,desp_inv_oficina,desp_inv_nombre,desp_inv_mac,
    desp_inv_catresp,desp_inv_detalle,desp_inv_pertenece,desp_inv_so,
    desp_inv_solic,desp_inv_procesador,desp_inv_almacenamiento,desp_inv_ram,
    desp_inv_office,desp_inv_officelic,desp_inv_antivirus,desp_inv_antiviruslic,
    desp_inv_dependencia,desp_inv_situacion,accion,usuario,hora)  values 
    (antes.inv_id ,antes.inv_catalogo ,antes.inv_oficina ,antes.inv_nombre 
    ,antes.inv_mac ,antes.inv_catresp ,antes.inv_detalle ,antes.inv_pertenece 
    ,antes.inv_so ,antes.inv_solic ,antes.inv_procesador ,antes.inv_almacenamiento 
    ,antes.inv_ram ,antes.inv_office ,antes.inv_officelic ,antes.inv_antivirus 
    ,antes.inv_antiviruslic ,antes.inv_dependencia ,antes.inv_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ciber_inventario update on "informix"
    .ciber_inventario referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ciber_inventario (inv_id,inv_catalogo,
    inv_oficina,inv_nombre,inv_mac,inv_catresp,inv_detalle,inv_pertenece,
    inv_so,inv_solic,inv_procesador,inv_almacenamiento,inv_ram,inv_office,
    inv_officelic,inv_antivirus,inv_antiviruslic,inv_dependencia,inv_situacion,
    desp_inv_id,desp_inv_catalogo,desp_inv_oficina,desp_inv_nombre,desp_inv_mac,
    desp_inv_catresp,desp_inv_detalle,desp_inv_pertenece,desp_inv_so,
    desp_inv_solic,desp_inv_procesador,desp_inv_almacenamiento,desp_inv_ram,
    desp_inv_office,desp_inv_officelic,desp_inv_antivirus,desp_inv_antiviruslic,
    desp_inv_dependencia,desp_inv_situacion,accion,usuario,hora)  values 
    (antes.inv_id ,antes.inv_catalogo ,antes.inv_oficina ,antes.inv_nombre 
    ,antes.inv_mac ,antes.inv_catresp ,antes.inv_detalle ,antes.inv_pertenece 
    ,antes.inv_so ,antes.inv_solic ,antes.inv_procesador ,antes.inv_almacenamiento 
    ,antes.inv_ram ,antes.inv_office ,antes.inv_officelic ,antes.inv_antivirus 
    ,antes.inv_antiviruslic ,antes.inv_dependencia ,antes.inv_situacion 
    ,luego.inv_id ,luego.inv_catalogo ,luego.inv_oficina ,luego.inv_nombre 
    ,luego.inv_mac ,luego.inv_catresp ,luego.inv_detalle ,luego.inv_pertenece 
    ,luego.inv_so ,luego.inv_solic ,luego.inv_procesador ,luego.inv_almacenamiento 
    ,luego.inv_ram ,luego.inv_office ,luego.inv_officelic ,luego.inv_antivirus 
    ,luego.inv_antiviruslic ,luego.inv_dependencia ,luego.inv_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tropa_beneficiarios insert on "informix"
    .tropa_beneficiarios referencing new as luego
    for each row
        (
        insert into "informix".aud_tropa_beneficiarios (ben_id,
    ben_catalogo,ben_dpi,ben_nombre,ben_direccion,ben_celular,ben_parentesco,
    ben_porcentaje,ben_situacion,desp_ben_id,desp_ben_catalogo,desp_ben_dpi,
    desp_ben_nombre,desp_ben_direccion,desp_ben_celular,desp_ben_parentesco,
    desp_ben_porcentaje,desp_ben_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.ben_id ,luego.ben_catalogo ,
    luego.ben_dpi ,luego.ben_nombre ,luego.ben_direccion ,luego.ben_celular 
    ,luego.ben_parentesco ,luego.ben_porcentaje ,luego.ben_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_tropa_beneficiarios delete on "informix"
    .tropa_beneficiarios referencing old as antes
    for each row
        (
        insert into "informix".aud_tropa_beneficiarios (ben_id,
    ben_catalogo,ben_dpi,ben_nombre,ben_direccion,ben_celular,ben_parentesco,
    ben_porcentaje,ben_situacion,desp_ben_id,desp_ben_catalogo,desp_ben_dpi,
    desp_ben_nombre,desp_ben_direccion,desp_ben_celular,desp_ben_parentesco,
    desp_ben_porcentaje,desp_ben_situacion,accion,usuario,hora)  values 
    (antes.ben_id ,antes.ben_catalogo ,antes.ben_dpi ,antes.ben_nombre 
    ,antes.ben_direccion ,antes.ben_celular ,antes.ben_parentesco ,antes.ben_porcentaje 
    ,antes.ben_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_tropa_beneficiarios update on "informix"
    .tropa_beneficiarios referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_tropa_beneficiarios (ben_id,
    ben_catalogo,ben_dpi,ben_nombre,ben_direccion,ben_celular,ben_parentesco,
    ben_porcentaje,ben_situacion,desp_ben_id,desp_ben_catalogo,desp_ben_dpi,
    desp_ben_nombre,desp_ben_direccion,desp_ben_celular,desp_ben_parentesco,
    desp_ben_porcentaje,desp_ben_situacion,accion,usuario,hora)  values 
    (antes.ben_id ,antes.ben_catalogo ,antes.ben_dpi ,antes.ben_nombre 
    ,antes.ben_direccion ,antes.ben_celular ,antes.ben_parentesco ,antes.ben_porcentaje 
    ,antes.ben_situacion ,luego.ben_id ,luego.ben_catalogo ,luego.ben_dpi 
    ,luego.ben_nombre ,luego.ben_direccion ,luego.ben_celular ,luego.ben_parentesco 
    ,luego.ben_porcentaje ,luego.ben_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_rm_historial_pagos insert on "informix"
    .rm_historial_pagos referencing new as luego
    for each row
        (
        insert into "informix".aud_rm_historial_pagos (pago_id,
    pago_cat,pago_fecha,pago_estipendio,pago_cat_valido,pago_situacion,
    desp_pago_id,desp_pago_cat,desp_pago_fecha,desp_pago_estipendio,desp_pago_cat_valido,
    desp_pago_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,
    '' ,'' ,luego.pago_id ,luego.pago_cat ,luego.pago_fecha ,luego.pago_estipendio 
    ,luego.pago_cat_valido ,luego.pago_situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_rm_historial_pagos delete on "informix"
    .rm_historial_pagos referencing old as antes
    for each row
        (
        insert into "informix".aud_rm_historial_pagos (pago_id,
    pago_cat,pago_fecha,pago_estipendio,pago_cat_valido,pago_situacion,
    desp_pago_id,desp_pago_cat,desp_pago_fecha,desp_pago_estipendio,desp_pago_cat_valido,
    desp_pago_situacion,accion,usuario,hora)  values (antes.pago_id ,
    antes.pago_cat ,antes.pago_fecha ,antes.pago_estipendio ,antes.pago_cat_valido 
    ,antes.pago_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_rm_historial_pagos update on "informix"
    .rm_historial_pagos referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_rm_historial_pagos (pago_id,
    pago_cat,pago_fecha,pago_estipendio,pago_cat_valido,pago_situacion,
    desp_pago_id,desp_pago_cat,desp_pago_fecha,desp_pago_estipendio,desp_pago_cat_valido,
    desp_pago_situacion,accion,usuario,hora)  values (antes.pago_id ,
    antes.pago_cat ,antes.pago_fecha ,antes.pago_estipendio ,antes.pago_cat_valido 
    ,antes.pago_situacion ,luego.pago_id ,luego.pago_cat ,luego.pago_fecha 
    ,luego.pago_estipendio ,luego.pago_cat_valido ,luego.pago_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esip_unidades_ejecutoras insert 
    on "informix".esip_unidades_ejecutoras referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_esip_unidades_ejecutoras (ue_id,
    ue_numero,ue_desc_lg,ue_desc_md,ue_desc_ct,ue_dep,ue_obs,ue_fecha,
    ue_situacion,desp_ue_id,desp_ue_numero,desp_ue_desc_lg,desp_ue_desc_md,
    desp_ue_desc_ct,desp_ue_dep,desp_ue_obs,desp_ue_fecha,desp_ue_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.ue_id 
    ,luego.ue_numero ,luego.ue_desc_lg ,luego.ue_desc_md ,luego.ue_desc_ct 
    ,luego.ue_dep ,luego.ue_obs ,luego.ue_fecha ,luego.ue_situacion ,
    'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esip_unidades_ejecutoras delete 
    on "informix".esip_unidades_ejecutoras referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_esip_unidades_ejecutoras (ue_id,
    ue_numero,ue_desc_lg,ue_desc_md,ue_desc_ct,ue_dep,ue_obs,ue_fecha,
    ue_situacion,desp_ue_id,desp_ue_numero,desp_ue_desc_lg,desp_ue_desc_md,
    desp_ue_desc_ct,desp_ue_dep,desp_ue_obs,desp_ue_fecha,desp_ue_situacion,
    accion,usuario,hora)  values (antes.ue_id ,antes.ue_numero ,antes.ue_desc_lg 
    ,antes.ue_desc_md ,antes.ue_desc_ct ,antes.ue_dep ,antes.ue_obs ,
    antes.ue_fecha ,antes.ue_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_esip_unidades_ejecutoras update 
    on "informix".esip_unidades_ejecutoras referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_esip_unidades_ejecutoras (ue_id,
    ue_numero,ue_desc_lg,ue_desc_md,ue_desc_ct,ue_dep,ue_obs,ue_fecha,
    ue_situacion,desp_ue_id,desp_ue_numero,desp_ue_desc_lg,desp_ue_desc_md,
    desp_ue_desc_ct,desp_ue_dep,desp_ue_obs,desp_ue_fecha,desp_ue_situacion,
    accion,usuario,hora)  values (antes.ue_id ,antes.ue_numero ,antes.ue_desc_lg 
    ,antes.ue_desc_md ,antes.ue_desc_ct ,antes.ue_dep ,antes.ue_obs ,
    antes.ue_fecha ,antes.ue_situacion ,luego.ue_id ,luego.ue_numero 
    ,luego.ue_desc_lg ,luego.ue_desc_md ,luego.ue_desc_ct ,luego.ue_dep 
    ,luego.ue_obs ,luego.ue_fecha ,luego.ue_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_psan_sanciones insert on "informix"
    .psan_sanciones referencing new as luego
    for each row
        (
        insert into "informix".aud_psan_sanciones (san_codigo,
    san_descripcion,san_clasificacion,san_tipo,san_cantidad,san_reglamento,
    san_articulo,san_literal,san_numeral,san_inciso,desp_san_codigo,desp_san_descripcion,
    desp_san_clasificacion,desp_san_tipo,desp_san_cantidad,desp_san_reglamento,
    desp_san_articulo,desp_san_literal,desp_san_numeral,desp_san_inciso,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.san_codigo 
    ,luego.san_descripcion ,luego.san_clasificacion ,luego.san_tipo ,
    luego.san_cantidad ,luego.san_reglamento ,luego.san_articulo ,luego.san_literal 
    ,luego.san_numeral ,luego.san_inciso ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_psan_sanciones delete on "informix"
    .psan_sanciones referencing old as antes
    for each row
        (
        insert into "informix".aud_psan_sanciones (san_codigo,
    san_descripcion,san_clasificacion,san_tipo,san_cantidad,san_reglamento,
    san_articulo,san_literal,san_numeral,san_inciso,desp_san_codigo,desp_san_descripcion,
    desp_san_clasificacion,desp_san_tipo,desp_san_cantidad,desp_san_reglamento,
    desp_san_articulo,desp_san_literal,desp_san_numeral,desp_san_inciso,
    accion,usuario,hora)  values (antes.san_codigo ,antes.san_descripcion 
    ,antes.san_clasificacion ,antes.san_tipo ,antes.san_cantidad ,antes.san_reglamento 
    ,antes.san_articulo ,antes.san_literal ,antes.san_numeral ,antes.san_inciso 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_psan_sanciones update on "informix"
    .psan_sanciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_psan_sanciones (san_codigo,
    san_descripcion,san_clasificacion,san_tipo,san_cantidad,san_reglamento,
    san_articulo,san_literal,san_numeral,san_inciso,desp_san_codigo,desp_san_descripcion,
    desp_san_clasificacion,desp_san_tipo,desp_san_cantidad,desp_san_reglamento,
    desp_san_articulo,desp_san_literal,desp_san_numeral,desp_san_inciso,
    accion,usuario,hora)  values (antes.san_codigo ,antes.san_descripcion 
    ,antes.san_clasificacion ,antes.san_tipo ,antes.san_cantidad ,antes.san_reglamento 
    ,antes.san_articulo ,antes.san_literal ,antes.san_numeral ,antes.san_inciso 
    ,luego.san_codigo ,luego.san_descripcion ,luego.san_clasificacion 
    ,luego.san_tipo ,luego.san_cantidad ,luego.san_reglamento ,luego.san_articulo 
    ,luego.san_literal ,luego.san_numeral ,luego.san_inciso ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_sub18_acciones insert on "informix"
    .sub18_acciones referencing new as luego
    for each row
        (
        insert into "informix".aud_sub18_acciones (sub18_ac_id,
    sub18_id_contrato,sub_18_cat_ingreso,sub18_ac_catg1,sub18_ac_cat_uejec,
    sub18_ac_cat_d1,sub18_ac_cat_juridico,sub18_ac_cat_dgamdn,sub18_ac_situacion,
    desp_sub18_ac_id,desp_sub18_id_contrato,desp_sub_18_cat_ingreso,desp_sub18_ac_catg1,
    desp_sub18_ac_cat_uejec,desp_sub18_ac_cat_d1,desp_sub18_ac_cat_juridico,
    desp_sub18_ac_cat_dgamdn,desp_sub18_ac_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.sub18_ac_id ,luego.sub18_id_contrato 
    ,luego.sub_18_cat_ingreso ,luego.sub18_ac_catg1 ,luego.sub18_ac_cat_uejec 
    ,luego.sub18_ac_cat_d1 ,luego.sub18_ac_cat_juridico ,luego.sub18_ac_cat_dgamdn 
    ,luego.sub18_ac_situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_sub18_acciones delete on "informix"
    .sub18_acciones referencing old as antes
    for each row
        (
        insert into "informix".aud_sub18_acciones (sub18_ac_id,
    sub18_id_contrato,sub_18_cat_ingreso,sub18_ac_catg1,sub18_ac_cat_uejec,
    sub18_ac_cat_d1,sub18_ac_cat_juridico,sub18_ac_cat_dgamdn,sub18_ac_situacion,
    desp_sub18_ac_id,desp_sub18_id_contrato,desp_sub_18_cat_ingreso,desp_sub18_ac_catg1,
    desp_sub18_ac_cat_uejec,desp_sub18_ac_cat_d1,desp_sub18_ac_cat_juridico,
    desp_sub18_ac_cat_dgamdn,desp_sub18_ac_situacion,accion,usuario,hora) 
     values (antes.sub18_ac_id ,antes.sub18_id_contrato ,antes.sub_18_cat_ingreso 
    ,antes.sub18_ac_catg1 ,antes.sub18_ac_cat_uejec ,antes.sub18_ac_cat_d1 
    ,antes.sub18_ac_cat_juridico ,antes.sub18_ac_cat_dgamdn ,antes.sub18_ac_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_sub18_acciones update on "informix"
    .sub18_acciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sub18_acciones (sub18_ac_id,
    sub18_id_contrato,sub_18_cat_ingreso,sub18_ac_catg1,sub18_ac_cat_uejec,
    sub18_ac_cat_d1,sub18_ac_cat_juridico,sub18_ac_cat_dgamdn,sub18_ac_situacion,
    desp_sub18_ac_id,desp_sub18_id_contrato,desp_sub_18_cat_ingreso,desp_sub18_ac_catg1,
    desp_sub18_ac_cat_uejec,desp_sub18_ac_cat_d1,desp_sub18_ac_cat_juridico,
    desp_sub18_ac_cat_dgamdn,desp_sub18_ac_situacion,accion,usuario,hora) 
     values (antes.sub18_ac_id ,antes.sub18_id_contrato ,antes.sub_18_cat_ingreso 
    ,antes.sub18_ac_catg1 ,antes.sub18_ac_cat_uejec ,antes.sub18_ac_cat_d1 
    ,antes.sub18_ac_cat_juridico ,antes.sub18_ac_cat_dgamdn ,antes.sub18_ac_situacion 
    ,luego.sub18_ac_id ,luego.sub18_id_contrato ,luego.sub_18_cat_ingreso 
    ,luego.sub18_ac_catg1 ,luego.sub18_ac_cat_uejec ,luego.sub18_ac_cat_d1 
    ,luego.sub18_ac_cat_juridico ,luego.sub18_ac_cat_dgamdn ,luego.sub18_ac_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_sub18_boleta insert on "informix"
    .sub18_boleta referencing new as luego
    for each row
        (
        insert into "informix".aud_sub18_boleta (sub18_bol_id,
    sub18_bol_id_contrato,sub18_bol_fecha_emi,sub18_bol_fecha_rev,sub18_bol_cat_revisor,
    sub18_bol_cat_comandante,sub18_bol_anotaciones,sub18_bol_situacion,
    desp_sub18_bol_id,desp_sub18_bol_id_contrato,desp_sub18_bol_fecha_emi,
    desp_sub18_bol_fecha_rev,desp_sub18_bol_cat_revisor,desp_sub18_bol_cat_comandante,
    desp_sub18_bol_anotaciones,desp_sub18_bol_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2048) ,'' ,luego.sub18_bol_id 
    ,luego.sub18_bol_id_contrato ,luego.sub18_bol_fecha_emi ,luego.sub18_bol_fecha_rev 
    ,luego.sub18_bol_cat_revisor ,luego.sub18_bol_cat_comandante ,luego.sub18_bol_anotaciones 
    ,luego.sub18_bol_situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_sub18_boleta delete on "informix"
    .sub18_boleta referencing old as antes
    for each row
        (
        insert into "informix".aud_sub18_boleta (sub18_bol_id,
    sub18_bol_id_contrato,sub18_bol_fecha_emi,sub18_bol_fecha_rev,sub18_bol_cat_revisor,
    sub18_bol_cat_comandante,sub18_bol_anotaciones,sub18_bol_situacion,
    desp_sub18_bol_id,desp_sub18_bol_id_contrato,desp_sub18_bol_fecha_emi,
    desp_sub18_bol_fecha_rev,desp_sub18_bol_cat_revisor,desp_sub18_bol_cat_comandante,
    desp_sub18_bol_anotaciones,desp_sub18_bol_situacion,accion,usuario,
    hora)  values (antes.sub18_bol_id ,antes.sub18_bol_id_contrato ,antes.sub18_bol_fecha_emi 
    ,antes.sub18_bol_fecha_rev ,antes.sub18_bol_cat_revisor ,antes.sub18_bol_cat_comandante 
    ,antes.sub18_bol_anotaciones ,antes.sub18_bol_situacion ,NULL ,'' 
    ,'' ,'' ,'' ,'' ,'' ::lvarchar(2048) ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_sub18_boleta update on "informix"
    .sub18_boleta referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sub18_boleta (sub18_bol_id,
    sub18_bol_id_contrato,sub18_bol_fecha_emi,sub18_bol_fecha_rev,sub18_bol_cat_revisor,
    sub18_bol_cat_comandante,sub18_bol_anotaciones,sub18_bol_situacion,
    desp_sub18_bol_id,desp_sub18_bol_id_contrato,desp_sub18_bol_fecha_emi,
    desp_sub18_bol_fecha_rev,desp_sub18_bol_cat_revisor,desp_sub18_bol_cat_comandante,
    desp_sub18_bol_anotaciones,desp_sub18_bol_situacion,accion,usuario,
    hora)  values (antes.sub18_bol_id ,antes.sub18_bol_id_contrato ,antes.sub18_bol_fecha_emi 
    ,antes.sub18_bol_fecha_rev ,antes.sub18_bol_cat_revisor ,antes.sub18_bol_cat_comandante 
    ,antes.sub18_bol_anotaciones ,antes.sub18_bol_situacion ,luego.sub18_bol_id 
    ,luego.sub18_bol_id_contrato ,luego.sub18_bol_fecha_emi ,luego.sub18_bol_fecha_rev 
    ,luego.sub18_bol_cat_revisor ,luego.sub18_bol_cat_comandante ,luego.sub18_bol_anotaciones 
    ,luego.sub18_bol_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_sub18_detalles insert on "informix"
    .sub18_detalles referencing new as luego
    for each row
        (
        insert into "informix".aud_sub18_detalles (sub18_det_id,
    sub18_det_id_contrato,sub18_det_fecha,sub18_det_obs,sub18_det_situacion,
    desp_sub18_det_id,desp_sub18_det_id_contrato,desp_sub18_det_fecha,
    desp_sub18_det_obs,desp_sub18_det_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,luego.sub18_det_id ,luego.sub18_det_id_contrato 
    ,luego.sub18_det_fecha ,luego.sub18_det_obs ,luego.sub18_det_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sub18_detalles delete on "informix"
    .sub18_detalles referencing old as antes
    for each row
        (
        insert into "informix".aud_sub18_detalles (sub18_det_id,
    sub18_det_id_contrato,sub18_det_fecha,sub18_det_obs,sub18_det_situacion,
    desp_sub18_det_id,desp_sub18_det_id_contrato,desp_sub18_det_fecha,
    desp_sub18_det_obs,desp_sub18_det_situacion,accion,usuario,hora) 
     values (antes.sub18_det_id ,antes.sub18_det_id_contrato ,antes.sub18_det_fecha 
    ,antes.sub18_det_obs ,antes.sub18_det_situacion ,NULL ,'' ,'' ,'' ,''
     ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_sub18_detalles update on "informix"
    .sub18_detalles referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sub18_detalles (sub18_det_id,
    sub18_det_id_contrato,sub18_det_fecha,sub18_det_obs,sub18_det_situacion,
    desp_sub18_det_id,desp_sub18_det_id_contrato,desp_sub18_det_fecha,
    desp_sub18_det_obs,desp_sub18_det_situacion,accion,usuario,hora) 
     values (antes.sub18_det_id ,antes.sub18_det_id_contrato ,antes.sub18_det_fecha 
    ,antes.sub18_det_obs ,antes.sub18_det_situacion ,luego.sub18_det_id 
    ,luego.sub18_det_id_contrato ,luego.sub18_det_fecha ,luego.sub18_det_obs 
    ,luego.sub18_det_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_certificaciones insert on "informix"
    .certificaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_certificaciones (cert_id,cert_dpi,
    cert_nom1,cert_nom2,cert_nom3,cert_ape1,cert_ape2,cert_ape3,cert_sexo,
    cert_catalogo,cert_empleo,cert_fecha_alta,cert_grado_alta,cert_dep_alta,
    cert_fecha_baja,cert_grado_baja,cert_dep_baja,cert_motivo_baja,cert_doc_respaldo,
    cert_num_referencia,cert_cat_jefecerti,cert_graarm_certi,cert_nom_certi,
    cert_cat_jefesage,cert_graarm_jefesage,cert_nom_jefesage,cert_fecha_transac,
    cert_plaza_certi,cert_plaza_jefe,cert_cat_hizo,cert_motivo_cambio,
    cert_gen_solicito,cert_situacion,desp_cert_id,desp_cert_dpi,desp_cert_nom1,
    desp_cert_nom2,desp_cert_nom3,desp_cert_ape1,desp_cert_ape2,desp_cert_ape3,
    desp_cert_sexo,desp_cert_catalogo,desp_cert_empleo,desp_cert_fecha_alta,
    desp_cert_grado_alta,desp_cert_dep_alta,desp_cert_fecha_baja,desp_cert_grado_baja,
    desp_cert_dep_baja,desp_cert_motivo_baja,desp_cert_doc_respaldo,desp_cert_num_referencia,
    desp_cert_cat_jefecerti,desp_cert_graarm_certi,desp_cert_nom_certi,
    desp_cert_cat_jefesage,desp_cert_graarm_jefesage,desp_cert_nom_jefesage,
    desp_cert_fecha_transac,desp_cert_plaza_certi,desp_cert_plaza_jefe,
    desp_cert_cat_hizo,desp_cert_motivo_cambio,desp_cert_gen_solicito,
    desp_cert_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.cert_id ,luego.cert_dpi ,luego.cert_nom1 
    ,luego.cert_nom2 ,luego.cert_nom3 ,luego.cert_ape1 ,luego.cert_ape2 
    ,luego.cert_ape3 ,luego.cert_sexo ,luego.cert_catalogo ,luego.cert_empleo 
    ,luego.cert_fecha_alta ,luego.cert_grado_alta ,luego.cert_dep_alta 
    ,luego.cert_fecha_baja ,luego.cert_grado_baja ,luego.cert_dep_baja 
    ,luego.cert_motivo_baja ,luego.cert_doc_respaldo ,luego.cert_num_referencia 
    ,luego.cert_cat_jefecerti ,luego.cert_graarm_certi ,luego.cert_nom_certi 
    ,luego.cert_cat_jefesage ,luego.cert_graarm_jefesage ,luego.cert_nom_jefesage 
    ,luego.cert_fecha_transac ,luego.cert_plaza_certi ,luego.cert_plaza_jefe 
    ,luego.cert_cat_hizo ,luego.cert_motivo_cambio ,luego.cert_gen_solicito 
    ,luego.cert_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_certificaciones delete on "informix"
    .certificaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_certificaciones (cert_id,cert_dpi,
    cert_nom1,cert_nom2,cert_nom3,cert_ape1,cert_ape2,cert_ape3,cert_sexo,
    cert_catalogo,cert_empleo,cert_fecha_alta,cert_grado_alta,cert_dep_alta,
    cert_fecha_baja,cert_grado_baja,cert_dep_baja,cert_motivo_baja,cert_doc_respaldo,
    cert_num_referencia,cert_cat_jefecerti,cert_graarm_certi,cert_nom_certi,
    cert_cat_jefesage,cert_graarm_jefesage,cert_nom_jefesage,cert_fecha_transac,
    cert_plaza_certi,cert_plaza_jefe,cert_cat_hizo,cert_motivo_cambio,
    cert_gen_solicito,cert_situacion,desp_cert_id,desp_cert_dpi,desp_cert_nom1,
    desp_cert_nom2,desp_cert_nom3,desp_cert_ape1,desp_cert_ape2,desp_cert_ape3,
    desp_cert_sexo,desp_cert_catalogo,desp_cert_empleo,desp_cert_fecha_alta,
    desp_cert_grado_alta,desp_cert_dep_alta,desp_cert_fecha_baja,desp_cert_grado_baja,
    desp_cert_dep_baja,desp_cert_motivo_baja,desp_cert_doc_respaldo,desp_cert_num_referencia,
    desp_cert_cat_jefecerti,desp_cert_graarm_certi,desp_cert_nom_certi,
    desp_cert_cat_jefesage,desp_cert_graarm_jefesage,desp_cert_nom_jefesage,
    desp_cert_fecha_transac,desp_cert_plaza_certi,desp_cert_plaza_jefe,
    desp_cert_cat_hizo,desp_cert_motivo_cambio,desp_cert_gen_solicito,
    desp_cert_situacion,accion,usuario,hora)  values (antes.cert_id ,
    antes.cert_dpi ,antes.cert_nom1 ,antes.cert_nom2 ,antes.cert_nom3 
    ,antes.cert_ape1 ,antes.cert_ape2 ,antes.cert_ape3 ,antes.cert_sexo 
    ,antes.cert_catalogo ,antes.cert_empleo ,antes.cert_fecha_alta ,antes.cert_grado_alta 
    ,antes.cert_dep_alta ,antes.cert_fecha_baja ,antes.cert_grado_baja 
    ,antes.cert_dep_baja ,antes.cert_motivo_baja ,antes.cert_doc_respaldo 
    ,antes.cert_num_referencia ,antes.cert_cat_jefecerti ,antes.cert_graarm_certi 
    ,antes.cert_nom_certi ,antes.cert_cat_jefesage ,antes.cert_graarm_jefesage 
    ,antes.cert_nom_jefesage ,antes.cert_fecha_transac ,antes.cert_plaza_certi 
    ,antes.cert_plaza_jefe ,antes.cert_cat_hizo ,antes.cert_motivo_cambio 
    ,antes.cert_gen_solicito ,antes.cert_situacion ,NULL ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_certificaciones update on "informix"
    .certificaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_certificaciones (cert_id,cert_dpi,
    cert_nom1,cert_nom2,cert_nom3,cert_ape1,cert_ape2,cert_ape3,cert_sexo,
    cert_catalogo,cert_empleo,cert_fecha_alta,cert_grado_alta,cert_dep_alta,
    cert_fecha_baja,cert_grado_baja,cert_dep_baja,cert_motivo_baja,cert_doc_respaldo,
    cert_num_referencia,cert_cat_jefecerti,cert_graarm_certi,cert_nom_certi,
    cert_cat_jefesage,cert_graarm_jefesage,cert_nom_jefesage,cert_fecha_transac,
    cert_plaza_certi,cert_plaza_jefe,cert_cat_hizo,cert_motivo_cambio,
    cert_gen_solicito,cert_situacion,desp_cert_id,desp_cert_dpi,desp_cert_nom1,
    desp_cert_nom2,desp_cert_nom3,desp_cert_ape1,desp_cert_ape2,desp_cert_ape3,
    desp_cert_sexo,desp_cert_catalogo,desp_cert_empleo,desp_cert_fecha_alta,
    desp_cert_grado_alta,desp_cert_dep_alta,desp_cert_fecha_baja,desp_cert_grado_baja,
    desp_cert_dep_baja,desp_cert_motivo_baja,desp_cert_doc_respaldo,desp_cert_num_referencia,
    desp_cert_cat_jefecerti,desp_cert_graarm_certi,desp_cert_nom_certi,
    desp_cert_cat_jefesage,desp_cert_graarm_jefesage,desp_cert_nom_jefesage,
    desp_cert_fecha_transac,desp_cert_plaza_certi,desp_cert_plaza_jefe,
    desp_cert_cat_hizo,desp_cert_motivo_cambio,desp_cert_gen_solicito,
    desp_cert_situacion,accion,usuario,hora)  values (antes.cert_id ,
    antes.cert_dpi ,antes.cert_nom1 ,antes.cert_nom2 ,antes.cert_nom3 
    ,antes.cert_ape1 ,antes.cert_ape2 ,antes.cert_ape3 ,antes.cert_sexo 
    ,antes.cert_catalogo ,antes.cert_empleo ,antes.cert_fecha_alta ,antes.cert_grado_alta 
    ,antes.cert_dep_alta ,antes.cert_fecha_baja ,antes.cert_grado_baja 
    ,antes.cert_dep_baja ,antes.cert_motivo_baja ,antes.cert_doc_respaldo 
    ,antes.cert_num_referencia ,antes.cert_cat_jefecerti ,antes.cert_graarm_certi 
    ,antes.cert_nom_certi ,antes.cert_cat_jefesage ,antes.cert_graarm_jefesage 
    ,antes.cert_nom_jefesage ,antes.cert_fecha_transac ,antes.cert_plaza_certi 
    ,antes.cert_plaza_jefe ,antes.cert_cat_hizo ,antes.cert_motivo_cambio 
    ,antes.cert_gen_solicito ,antes.cert_situacion ,luego.cert_id ,luego.cert_dpi 
    ,luego.cert_nom1 ,luego.cert_nom2 ,luego.cert_nom3 ,luego.cert_ape1 
    ,luego.cert_ape2 ,luego.cert_ape3 ,luego.cert_sexo ,luego.cert_catalogo 
    ,luego.cert_empleo ,luego.cert_fecha_alta ,luego.cert_grado_alta 
    ,luego.cert_dep_alta ,luego.cert_fecha_baja ,luego.cert_grado_baja 
    ,luego.cert_dep_baja ,luego.cert_motivo_baja ,luego.cert_doc_respaldo 
    ,luego.cert_num_referencia ,luego.cert_cat_jefecerti ,luego.cert_graarm_certi 
    ,luego.cert_nom_certi ,luego.cert_cat_jefesage ,luego.cert_graarm_jefesage 
    ,luego.cert_nom_jefesage ,luego.cert_fecha_transac ,luego.cert_plaza_certi 
    ,luego.cert_plaza_jefe ,luego.cert_cat_hizo ,luego.cert_motivo_cambio 
    ,luego.cert_gen_solicito ,luego.cert_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_fag_compras insert on "informix"
    .fag_compras referencing new as luego
    for each row
        (
        insert into "informix".aud_fag_compras (com_id,com_registro,
    com_cat_solicito,com_no_parte,com_nombre_articulo,com_no_nac_existencia,
    com_no_alterno,com_unidad_medida,com_matricula,com_dependencia,com_orden_trabajo,
    com_cantidad,com_fecha,com_obs,com_proceso,com_sit,desp_com_id,desp_com_registro,
    desp_com_cat_solicito,desp_com_no_parte,desp_com_nombre_articulo,
    desp_com_no_nac_existencia,desp_com_no_alterno,desp_com_unidad_medida,
    desp_com_matricula,desp_com_dependencia,desp_com_orden_trabajo,desp_com_cantidad,
    desp_com_fecha,desp_com_obs,desp_com_proceso,desp_com_sit,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,luego.com_id ,luego.com_registro ,luego.com_cat_solicito 
    ,luego.com_no_parte ,luego.com_nombre_articulo ,luego.com_no_nac_existencia 
    ,luego.com_no_alterno ,luego.com_unidad_medida ,luego.com_matricula 
    ,luego.com_dependencia ,luego.com_orden_trabajo ,luego.com_cantidad 
    ,luego.com_fecha ,luego.com_obs ,luego.com_proceso ,luego.com_sit 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_fag_compras delete on "informix"
    .fag_compras referencing old as antes
    for each row
        (
        insert into "informix".aud_fag_compras (com_id,com_registro,
    com_cat_solicito,com_no_parte,com_nombre_articulo,com_no_nac_existencia,
    com_no_alterno,com_unidad_medida,com_matricula,com_dependencia,com_orden_trabajo,
    com_cantidad,com_fecha,com_obs,com_proceso,com_sit,desp_com_id,desp_com_registro,
    desp_com_cat_solicito,desp_com_no_parte,desp_com_nombre_articulo,
    desp_com_no_nac_existencia,desp_com_no_alterno,desp_com_unidad_medida,
    desp_com_matricula,desp_com_dependencia,desp_com_orden_trabajo,desp_com_cantidad,
    desp_com_fecha,desp_com_obs,desp_com_proceso,desp_com_sit,accion,
    usuario,hora)  values (antes.com_id ,antes.com_registro ,antes.com_cat_solicito 
    ,antes.com_no_parte ,antes.com_nombre_articulo ,antes.com_no_nac_existencia 
    ,antes.com_no_alterno ,antes.com_unidad_medida ,antes.com_matricula 
    ,antes.com_dependencia ,antes.com_orden_trabajo ,antes.com_cantidad 
    ,antes.com_fecha ,antes.com_obs ,antes.com_proceso ,antes.com_sit 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_fag_compras update on "informix"
    .fag_compras referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_fag_compras (com_id,com_registro,
    com_cat_solicito,com_no_parte,com_nombre_articulo,com_no_nac_existencia,
    com_no_alterno,com_unidad_medida,com_matricula,com_dependencia,com_orden_trabajo,
    com_cantidad,com_fecha,com_obs,com_proceso,com_sit,desp_com_id,desp_com_registro,
    desp_com_cat_solicito,desp_com_no_parte,desp_com_nombre_articulo,
    desp_com_no_nac_existencia,desp_com_no_alterno,desp_com_unidad_medida,
    desp_com_matricula,desp_com_dependencia,desp_com_orden_trabajo,desp_com_cantidad,
    desp_com_fecha,desp_com_obs,desp_com_proceso,desp_com_sit,accion,
    usuario,hora)  values (antes.com_id ,antes.com_registro ,antes.com_cat_solicito 
    ,antes.com_no_parte ,antes.com_nombre_articulo ,antes.com_no_nac_existencia 
    ,antes.com_no_alterno ,antes.com_unidad_medida ,antes.com_matricula 
    ,antes.com_dependencia ,antes.com_orden_trabajo ,antes.com_cantidad 
    ,antes.com_fecha ,antes.com_obs ,antes.com_proceso ,antes.com_sit 
    ,luego.com_id ,luego.com_registro ,luego.com_cat_solicito ,luego.com_no_parte 
    ,luego.com_nombre_articulo ,luego.com_no_nac_existencia ,luego.com_no_alterno 
    ,luego.com_unidad_medida ,luego.com_matricula ,luego.com_dependencia 
    ,luego.com_orden_trabajo ,luego.com_cantidad ,luego.com_fecha ,luego.com_obs 
    ,luego.com_proceso ,luego.com_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_sub_18_contrato insert on "informix"
    .sub_18_contrato referencing new as luego
    for each row
        (
        insert into "informix".aud_sub_18_contrato (sub18_id,
    sub18_num_contrato,sub18_renglon,sub18_fuentefin,sub18_minuta,sub18_cuentadancia,
    sub18_colegiado,sub18_nombres,sub18_apellidos,sub18_dpi,sub18_dependencia_con_dep,
    sub18_uejec_con_unidades,sub18_sexo,sub18_fec_creacion,sub18_fec_inicio,
    sub18_fec_fin,sub18_mesestrabaja,sub18_sueldo,sub18_observaciones,
    sub18_rutapdf_contrato,sub18_rutapdf_documentos,sub18_dependencia_mdep,
    sub18_situacion,desp_sub18_id,desp_sub18_num_contrato,desp_sub18_renglon,
    desp_sub18_fuentefin,desp_sub18_minuta,desp_sub18_cuentadancia,desp_sub18_colegiado,
    desp_sub18_nombres,desp_sub18_apellidos,desp_sub18_dpi,desp_sub18_dependencia_con_dep,
    desp_sub18_uejec_con_unidades,desp_sub18_sexo,desp_sub18_fec_creacion,
    desp_sub18_fec_inicio,desp_sub18_fec_fin,desp_sub18_mesestrabaja,
    desp_sub18_sueldo,desp_sub18_observaciones,desp_sub18_rutapdf_contrato,
    desp_sub18_rutapdf_documentos,desp_sub18_dependencia_mdep,desp_sub18_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.sub18_id ,luego.sub18_num_contrato 
    ,luego.sub18_renglon ,luego.sub18_fuentefin ,luego.sub18_minuta ,
    luego.sub18_cuentadancia ,luego.sub18_colegiado ,luego.sub18_nombres 
    ,luego.sub18_apellidos ,luego.sub18_dpi ,luego.sub18_dependencia_con_dep 
    ,luego.sub18_uejec_con_unidades ,luego.sub18_sexo ,luego.sub18_fec_creacion 
    ,luego.sub18_fec_inicio ,luego.sub18_fec_fin ,luego.sub18_mesestrabaja 
    ,luego.sub18_sueldo ,luego.sub18_observaciones ,luego.sub18_rutapdf_contrato 
    ,luego.sub18_rutapdf_documentos ,luego.sub18_dependencia_mdep ,luego.sub18_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sub_18_contrato delete on "informix"
    .sub_18_contrato referencing old as antes
    for each row
        (
        insert into "informix".aud_sub_18_contrato (sub18_id,
    sub18_num_contrato,sub18_renglon,sub18_fuentefin,sub18_minuta,sub18_cuentadancia,
    sub18_colegiado,sub18_nombres,sub18_apellidos,sub18_dpi,sub18_dependencia_con_dep,
    sub18_uejec_con_unidades,sub18_sexo,sub18_fec_creacion,sub18_fec_inicio,
    sub18_fec_fin,sub18_mesestrabaja,sub18_sueldo,sub18_observaciones,
    sub18_rutapdf_contrato,sub18_rutapdf_documentos,sub18_dependencia_mdep,
    sub18_situacion,desp_sub18_id,desp_sub18_num_contrato,desp_sub18_renglon,
    desp_sub18_fuentefin,desp_sub18_minuta,desp_sub18_cuentadancia,desp_sub18_colegiado,
    desp_sub18_nombres,desp_sub18_apellidos,desp_sub18_dpi,desp_sub18_dependencia_con_dep,
    desp_sub18_uejec_con_unidades,desp_sub18_sexo,desp_sub18_fec_creacion,
    desp_sub18_fec_inicio,desp_sub18_fec_fin,desp_sub18_mesestrabaja,
    desp_sub18_sueldo,desp_sub18_observaciones,desp_sub18_rutapdf_contrato,
    desp_sub18_rutapdf_documentos,desp_sub18_dependencia_mdep,desp_sub18_situacion,
    accion,usuario,hora)  values (antes.sub18_id ,antes.sub18_num_contrato 
    ,antes.sub18_renglon ,antes.sub18_fuentefin ,antes.sub18_minuta ,
    antes.sub18_cuentadancia ,antes.sub18_colegiado ,antes.sub18_nombres 
    ,antes.sub18_apellidos ,antes.sub18_dpi ,antes.sub18_dependencia_con_dep 
    ,antes.sub18_uejec_con_unidades ,antes.sub18_sexo ,antes.sub18_fec_creacion 
    ,antes.sub18_fec_inicio ,antes.sub18_fec_fin ,antes.sub18_mesestrabaja 
    ,antes.sub18_sueldo ,antes.sub18_observaciones ,antes.sub18_rutapdf_contrato 
    ,antes.sub18_rutapdf_documentos ,antes.sub18_dependencia_mdep ,antes.sub18_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_sub_18_contrato update on "informix"
    .sub_18_contrato referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sub_18_contrato (sub18_id,
    sub18_num_contrato,sub18_renglon,sub18_fuentefin,sub18_minuta,sub18_cuentadancia,
    sub18_colegiado,sub18_nombres,sub18_apellidos,sub18_dpi,sub18_dependencia_con_dep,
    sub18_uejec_con_unidades,sub18_sexo,sub18_fec_creacion,sub18_fec_inicio,
    sub18_fec_fin,sub18_mesestrabaja,sub18_sueldo,sub18_observaciones,
    sub18_rutapdf_contrato,sub18_rutapdf_documentos,sub18_dependencia_mdep,
    sub18_situacion,desp_sub18_id,desp_sub18_num_contrato,desp_sub18_renglon,
    desp_sub18_fuentefin,desp_sub18_minuta,desp_sub18_cuentadancia,desp_sub18_colegiado,
    desp_sub18_nombres,desp_sub18_apellidos,desp_sub18_dpi,desp_sub18_dependencia_con_dep,
    desp_sub18_uejec_con_unidades,desp_sub18_sexo,desp_sub18_fec_creacion,
    desp_sub18_fec_inicio,desp_sub18_fec_fin,desp_sub18_mesestrabaja,
    desp_sub18_sueldo,desp_sub18_observaciones,desp_sub18_rutapdf_contrato,
    desp_sub18_rutapdf_documentos,desp_sub18_dependencia_mdep,desp_sub18_situacion,
    accion,usuario,hora)  values (antes.sub18_id ,antes.sub18_num_contrato 
    ,antes.sub18_renglon ,antes.sub18_fuentefin ,antes.sub18_minuta ,
    antes.sub18_cuentadancia ,antes.sub18_colegiado ,antes.sub18_nombres 
    ,antes.sub18_apellidos ,antes.sub18_dpi ,antes.sub18_dependencia_con_dep 
    ,antes.sub18_uejec_con_unidades ,antes.sub18_sexo ,antes.sub18_fec_creacion 
    ,antes.sub18_fec_inicio ,antes.sub18_fec_fin ,antes.sub18_mesestrabaja 
    ,antes.sub18_sueldo ,antes.sub18_observaciones ,antes.sub18_rutapdf_contrato 
    ,antes.sub18_rutapdf_documentos ,antes.sub18_dependencia_mdep ,antes.sub18_situacion 
    ,luego.sub18_id ,luego.sub18_num_contrato ,luego.sub18_renglon ,luego.sub18_fuentefin 
    ,luego.sub18_minuta ,luego.sub18_cuentadancia ,luego.sub18_colegiado 
    ,luego.sub18_nombres ,luego.sub18_apellidos ,luego.sub18_dpi ,luego.sub18_dependencia_con_dep 
    ,luego.sub18_uejec_con_unidades ,luego.sub18_sexo ,luego.sub18_fec_creacion 
    ,luego.sub18_fec_inicio ,luego.sub18_fec_fin ,luego.sub18_mesestrabaja 
    ,luego.sub18_sueldo ,luego.sub18_observaciones ,luego.sub18_rutapdf_contrato 
    ,luego.sub18_rutapdf_documentos ,luego.sub18_dependencia_mdep ,luego.sub18_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_mdep_otros insert on "informix".mdep_otros 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_mdep_otros (odep_codigo,odep_direccion,
    odep_telefono,odep_email,odep_fec_crea,desp_odep_codigo,desp_odep_direccion,
    desp_odep_telefono,desp_odep_email,desp_odep_fec_crea,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.odep_codigo ,luego.odep_direccion 
    ,luego.odep_telefono ,luego.odep_email ,luego.odep_fec_crea ,'I' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_mdep_otros delete on "informix".mdep_otros 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_mdep_otros (odep_codigo,odep_direccion,
    odep_telefono,odep_email,odep_fec_crea,desp_odep_codigo,desp_odep_direccion,
    desp_odep_telefono,desp_odep_email,desp_odep_fec_crea,accion,usuario,
    hora)  values (antes.odep_codigo ,antes.odep_direccion ,antes.odep_telefono 
    ,antes.odep_email ,antes.odep_fec_crea ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_mdep_otros update on "informix".mdep_otros 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mdep_otros (odep_codigo,odep_direccion,
    odep_telefono,odep_email,odep_fec_crea,desp_odep_codigo,desp_odep_direccion,
    desp_odep_telefono,desp_odep_email,desp_odep_fec_crea,accion,usuario,
    hora)  values (antes.odep_codigo ,antes.odep_direccion ,antes.odep_telefono 
    ,antes.odep_email ,antes.odep_fec_crea ,luego.odep_codigo ,luego.odep_direccion 
    ,luego.odep_telefono ,luego.odep_email ,luego.odep_fec_crea ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_far_insumos_dependencias insert 
    on "informix".far_insumos_dependencias referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_far_insumos_dependencias (ins_id_depen,
    ins_id_datos_depen,ins_nombre_farmaco_depen,ins_presentacion_farmaco_depen,
    ins_cantidad_depen,ins_cantidad_existente_lote_depen,ins_cantidad_existente_depen,
    ins_id_tabla_suma,ins_lote_depen,ins_fecha_vence_depen,ins_dependencia_depen,
    ins_asig_prec_depen,ins_asig_total_depend,ins_tipo_movimiento_depend,
    ins_obser1_depend,ins_obser2_depend,ins_situacion_depend,desp_ins_id_depen,
    desp_ins_id_datos_depen,desp_ins_nombre_farmaco_depen,desp_ins_presentacion_farmaco_depen,
    desp_ins_cantidad_depen,desp_ins_cantidad_existente_lote_depen,desp_ins_cantidad_existente_depen,
    desp_ins_id_tabla_suma,desp_ins_lote_depen,desp_ins_fecha_vence_depen,
    desp_ins_dependencia_depen,desp_ins_asig_prec_depen,desp_ins_asig_total_depend,
    desp_ins_tipo_movimiento_depend,desp_ins_obser1_depend,desp_ins_obser2_depend,
    desp_ins_situacion_depend,accion,usuario,hora)  values (NULL ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2000) ,'' ,luego.ins_id_depen 
    ,luego.ins_id_datos_depen ,luego.ins_nombre_farmaco_depen ,luego.ins_presentacion_farmaco_depen 
    ,luego.ins_cantidad_depen ,luego.ins_cantidad_existente_lote_depen 
    ,luego.ins_cantidad_existente_depen ,luego.ins_id_tabla_suma ,luego.ins_lote_depen 
    ,luego.ins_fecha_vence_depen ,luego.ins_dependencia_depen ,luego.ins_asig_prec_depen 
    ,luego.ins_asig_total_depend ,luego.ins_tipo_movimiento_depend ,luego.ins_obser1_depend 
    ,luego.ins_obser2_depend ,luego.ins_situacion_depend ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_far_insumos_dependencias delete 
    on "informix".far_insumos_dependencias referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_far_insumos_dependencias (ins_id_depen,
    ins_id_datos_depen,ins_nombre_farmaco_depen,ins_presentacion_farmaco_depen,
    ins_cantidad_depen,ins_cantidad_existente_lote_depen,ins_cantidad_existente_depen,
    ins_id_tabla_suma,ins_lote_depen,ins_fecha_vence_depen,ins_dependencia_depen,
    ins_asig_prec_depen,ins_asig_total_depend,ins_tipo_movimiento_depend,
    ins_obser1_depend,ins_obser2_depend,ins_situacion_depend,desp_ins_id_depen,
    desp_ins_id_datos_depen,desp_ins_nombre_farmaco_depen,desp_ins_presentacion_farmaco_depen,
    desp_ins_cantidad_depen,desp_ins_cantidad_existente_lote_depen,desp_ins_cantidad_existente_depen,
    desp_ins_id_tabla_suma,desp_ins_lote_depen,desp_ins_fecha_vence_depen,
    desp_ins_dependencia_depen,desp_ins_asig_prec_depen,desp_ins_asig_total_depend,
    desp_ins_tipo_movimiento_depend,desp_ins_obser1_depend,desp_ins_obser2_depend,
    desp_ins_situacion_depend,accion,usuario,hora)  values (antes.ins_id_depen 
    ,antes.ins_id_datos_depen ,antes.ins_nombre_farmaco_depen ,antes.ins_presentacion_farmaco_depen 
    ,antes.ins_cantidad_depen ,antes.ins_cantidad_existente_lote_depen 
    ,antes.ins_cantidad_existente_depen ,antes.ins_id_tabla_suma ,antes.ins_lote_depen 
    ,antes.ins_fecha_vence_depen ,antes.ins_dependencia_depen ,antes.ins_asig_prec_depen 
    ,antes.ins_asig_total_depend ,antes.ins_tipo_movimiento_depend ,antes.ins_obser1_depend 
    ,antes.ins_obser2_depend ,antes.ins_situacion_depend ,NULL ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2000) ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_far_insumos_dependencias update 
    on "informix".far_insumos_dependencias referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_far_insumos_dependencias (ins_id_depen,
    ins_id_datos_depen,ins_nombre_farmaco_depen,ins_presentacion_farmaco_depen,
    ins_cantidad_depen,ins_cantidad_existente_lote_depen,ins_cantidad_existente_depen,
    ins_id_tabla_suma,ins_lote_depen,ins_fecha_vence_depen,ins_dependencia_depen,
    ins_asig_prec_depen,ins_asig_total_depend,ins_tipo_movimiento_depend,
    ins_obser1_depend,ins_obser2_depend,ins_situacion_depend,desp_ins_id_depen,
    desp_ins_id_datos_depen,desp_ins_nombre_farmaco_depen,desp_ins_presentacion_farmaco_depen,
    desp_ins_cantidad_depen,desp_ins_cantidad_existente_lote_depen,desp_ins_cantidad_existente_depen,
    desp_ins_id_tabla_suma,desp_ins_lote_depen,desp_ins_fecha_vence_depen,
    desp_ins_dependencia_depen,desp_ins_asig_prec_depen,desp_ins_asig_total_depend,
    desp_ins_tipo_movimiento_depend,desp_ins_obser1_depend,desp_ins_obser2_depend,
    desp_ins_situacion_depend,accion,usuario,hora)  values (antes.ins_id_depen 
    ,antes.ins_id_datos_depen ,antes.ins_nombre_farmaco_depen ,antes.ins_presentacion_farmaco_depen 
    ,antes.ins_cantidad_depen ,antes.ins_cantidad_existente_lote_depen 
    ,antes.ins_cantidad_existente_depen ,antes.ins_id_tabla_suma ,antes.ins_lote_depen 
    ,antes.ins_fecha_vence_depen ,antes.ins_dependencia_depen ,antes.ins_asig_prec_depen 
    ,antes.ins_asig_total_depend ,antes.ins_tipo_movimiento_depend ,antes.ins_obser1_depend 
    ,antes.ins_obser2_depend ,antes.ins_situacion_depend ,luego.ins_id_depen 
    ,luego.ins_id_datos_depen ,luego.ins_nombre_farmaco_depen ,luego.ins_presentacion_farmaco_depen 
    ,luego.ins_cantidad_depen ,luego.ins_cantidad_existente_lote_depen 
    ,luego.ins_cantidad_existente_depen ,luego.ins_id_tabla_suma ,luego.ins_lote_depen 
    ,luego.ins_fecha_vence_depen ,luego.ins_dependencia_depen ,luego.ins_asig_prec_depen 
    ,luego.ins_asig_total_depend ,luego.ins_tipo_movimiento_depend ,luego.ins_obser1_depend 
    ,luego.ins_obser2_depend ,luego.ins_situacion_depend ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_far_insumos_datos_dependencias 
    insert on "informix".far_insumos_datos_dependencias referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_far_insumos_datos_dependencias 
    (ins_id_dat_depend,ins_fecha_dat_depend,ins_cat_entrega_depend,ins_grado_entrega_depend,
    ins_arma_entrega_depend,ins_cat_recibe_depend,ins_grado_recibe_depend,
    ins_arma_recibe_depend,ins_tipo_enfermedad_depend,ins_categoria_enfermedad_depend,
    ins_enfermedad_depend,ins_total_dat_depens,ins_dependencia_dat_depend,
    ins_observacion_dat_depend,ins_situacion_dat_depend,ins_obser1_dat_depend,
    ins_obser2_dat_depend,ins_tipo_mov_dat_depend,ins_id_tabla_suma_depend,
    desp_ins_id_dat_depend,desp_ins_fecha_dat_depend,desp_ins_cat_entrega_depend,
    desp_ins_grado_entrega_depend,desp_ins_arma_entrega_depend,desp_ins_cat_recibe_depend,
    desp_ins_grado_recibe_depend,desp_ins_arma_recibe_depend,desp_ins_tipo_enfermedad_depend,
    desp_ins_categoria_enfermedad_depend,desp_ins_enfermedad_depend,desp_ins_total_dat_depens,
    desp_ins_dependencia_dat_depend,desp_ins_observacion_dat_depend,desp_ins_situacion_dat_depend,
    desp_ins_obser1_dat_depend,desp_ins_obser2_dat_depend,desp_ins_tipo_mov_dat_depend,
    desp_ins_id_tabla_suma_depend,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2000) ,'' ,'' ,'' 
    ,'' ,'' ,luego.ins_id_dat_depend ,luego.ins_fecha_dat_depend ,luego.ins_cat_entrega_depend 
    ,luego.ins_grado_entrega_depend ,luego.ins_arma_entrega_depend ,luego.ins_cat_recibe_depend 
    ,luego.ins_grado_recibe_depend ,luego.ins_arma_recibe_depend ,luego.ins_tipo_enfermedad_depend 
    ,luego.ins_categoria_enfermedad_depend ,luego.ins_enfermedad_depend 
    ,luego.ins_total_dat_depens ,luego.ins_dependencia_dat_depend ,luego.ins_observacion_dat_depend 
    ,luego.ins_situacion_dat_depend ,luego.ins_obser1_dat_depend ,luego.ins_obser2_dat_depend 
    ,luego.ins_tipo_mov_dat_depend ,luego.ins_id_tabla_suma_depend ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_far_insumos_datos_dependencias 
    delete on "informix".far_insumos_datos_dependencias referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_far_insumos_datos_dependencias 
    (ins_id_dat_depend,ins_fecha_dat_depend,ins_cat_entrega_depend,ins_grado_entrega_depend,
    ins_arma_entrega_depend,ins_cat_recibe_depend,ins_grado_recibe_depend,
    ins_arma_recibe_depend,ins_tipo_enfermedad_depend,ins_categoria_enfermedad_depend,
    ins_enfermedad_depend,ins_total_dat_depens,ins_dependencia_dat_depend,
    ins_observacion_dat_depend,ins_situacion_dat_depend,ins_obser1_dat_depend,
    ins_obser2_dat_depend,ins_tipo_mov_dat_depend,ins_id_tabla_suma_depend,
    desp_ins_id_dat_depend,desp_ins_fecha_dat_depend,desp_ins_cat_entrega_depend,
    desp_ins_grado_entrega_depend,desp_ins_arma_entrega_depend,desp_ins_cat_recibe_depend,
    desp_ins_grado_recibe_depend,desp_ins_arma_recibe_depend,desp_ins_tipo_enfermedad_depend,
    desp_ins_categoria_enfermedad_depend,desp_ins_enfermedad_depend,desp_ins_total_dat_depens,
    desp_ins_dependencia_dat_depend,desp_ins_observacion_dat_depend,desp_ins_situacion_dat_depend,
    desp_ins_obser1_dat_depend,desp_ins_obser2_dat_depend,desp_ins_tipo_mov_dat_depend,
    desp_ins_id_tabla_suma_depend,accion,usuario,hora)  values (antes.ins_id_dat_depend 
    ,antes.ins_fecha_dat_depend ,antes.ins_cat_entrega_depend ,antes.ins_grado_entrega_depend 
    ,antes.ins_arma_entrega_depend ,antes.ins_cat_recibe_depend ,antes.ins_grado_recibe_depend 
    ,antes.ins_arma_recibe_depend ,antes.ins_tipo_enfermedad_depend ,
    antes.ins_categoria_enfermedad_depend ,antes.ins_enfermedad_depend 
    ,antes.ins_total_dat_depens ,antes.ins_dependencia_dat_depend ,antes.ins_observacion_dat_depend 
    ,antes.ins_situacion_dat_depend ,antes.ins_obser1_dat_depend ,antes.ins_obser2_dat_depend 
    ,antes.ins_tipo_mov_dat_depend ,antes.ins_id_tabla_suma_depend ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2000) ,'' ,'' ,'' 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_far_insumos_datos_dependencias 
    update on "informix".far_insumos_datos_dependencias referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_far_insumos_datos_dependencias 
    (ins_id_dat_depend,ins_fecha_dat_depend,ins_cat_entrega_depend,ins_grado_entrega_depend,
    ins_arma_entrega_depend,ins_cat_recibe_depend,ins_grado_recibe_depend,
    ins_arma_recibe_depend,ins_tipo_enfermedad_depend,ins_categoria_enfermedad_depend,
    ins_enfermedad_depend,ins_total_dat_depens,ins_dependencia_dat_depend,
    ins_observacion_dat_depend,ins_situacion_dat_depend,ins_obser1_dat_depend,
    ins_obser2_dat_depend,ins_tipo_mov_dat_depend,ins_id_tabla_suma_depend,
    desp_ins_id_dat_depend,desp_ins_fecha_dat_depend,desp_ins_cat_entrega_depend,
    desp_ins_grado_entrega_depend,desp_ins_arma_entrega_depend,desp_ins_cat_recibe_depend,
    desp_ins_grado_recibe_depend,desp_ins_arma_recibe_depend,desp_ins_tipo_enfermedad_depend,
    desp_ins_categoria_enfermedad_depend,desp_ins_enfermedad_depend,desp_ins_total_dat_depens,
    desp_ins_dependencia_dat_depend,desp_ins_observacion_dat_depend,desp_ins_situacion_dat_depend,
    desp_ins_obser1_dat_depend,desp_ins_obser2_dat_depend,desp_ins_tipo_mov_dat_depend,
    desp_ins_id_tabla_suma_depend,accion,usuario,hora)  values (antes.ins_id_dat_depend 
    ,antes.ins_fecha_dat_depend ,antes.ins_cat_entrega_depend ,antes.ins_grado_entrega_depend 
    ,antes.ins_arma_entrega_depend ,antes.ins_cat_recibe_depend ,antes.ins_grado_recibe_depend 
    ,antes.ins_arma_recibe_depend ,antes.ins_tipo_enfermedad_depend ,
    antes.ins_categoria_enfermedad_depend ,antes.ins_enfermedad_depend 
    ,antes.ins_total_dat_depens ,antes.ins_dependencia_dat_depend ,antes.ins_observacion_dat_depend 
    ,antes.ins_situacion_dat_depend ,antes.ins_obser1_dat_depend ,antes.ins_obser2_dat_depend 
    ,antes.ins_tipo_mov_dat_depend ,antes.ins_id_tabla_suma_depend ,luego.ins_id_dat_depend 
    ,luego.ins_fecha_dat_depend ,luego.ins_cat_entrega_depend ,luego.ins_grado_entrega_depend 
    ,luego.ins_arma_entrega_depend ,luego.ins_cat_recibe_depend ,luego.ins_grado_recibe_depend 
    ,luego.ins_arma_recibe_depend ,luego.ins_tipo_enfermedad_depend ,
    luego.ins_categoria_enfermedad_depend ,luego.ins_enfermedad_depend 
    ,luego.ins_total_dat_depens ,luego.ins_dependencia_dat_depend ,luego.ins_observacion_dat_depend 
    ,luego.ins_situacion_dat_depend ,luego.ins_obser1_dat_depend ,luego.ins_obser2_dat_depend 
    ,luego.ins_tipo_mov_dat_depend ,luego.ins_id_tabla_suma_depend ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_far_enfermedades insert on "informix"
    .far_enfermedades referencing new as luego
    for each row
        (
        insert into "informix".aud_far_enfermedades (enferm_id,
    enferm_cod,enferm_id_cat_enf,enferm_nomb,enferm_descripcion,enferm_situacion,
    desp_enferm_id,desp_enferm_cod,desp_enferm_id_cat_enf,desp_enferm_nomb,
    desp_enferm_descripcion,desp_enferm_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ::lvarchar(2000) ,'' ,luego.enferm_id ,luego.enferm_cod 
    ,luego.enferm_id_cat_enf ,luego.enferm_nomb ,luego.enferm_descripcion 
    ,luego.enferm_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_far_enfermedades delete on "informix"
    .far_enfermedades referencing old as antes
    for each row
        (
        insert into "informix".aud_far_enfermedades (enferm_id,
    enferm_cod,enferm_id_cat_enf,enferm_nomb,enferm_descripcion,enferm_situacion,
    desp_enferm_id,desp_enferm_cod,desp_enferm_id_cat_enf,desp_enferm_nomb,
    desp_enferm_descripcion,desp_enferm_situacion,accion,usuario,hora) 
     values (antes.enferm_id ,antes.enferm_cod ,antes.enferm_id_cat_enf 
    ,antes.enferm_nomb ,antes.enferm_descripcion ,antes.enferm_situacion 
    ,NULL ,'' ,'' ,'' ,'' ::lvarchar(2000) ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_far_enfermedades update on "informix"
    .far_enfermedades referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_far_enfermedades (enferm_id,
    enferm_cod,enferm_id_cat_enf,enferm_nomb,enferm_descripcion,enferm_situacion,
    desp_enferm_id,desp_enferm_cod,desp_enferm_id_cat_enf,desp_enferm_nomb,
    desp_enferm_descripcion,desp_enferm_situacion,accion,usuario,hora) 
     values (antes.enferm_id ,antes.enferm_cod ,antes.enferm_id_cat_enf 
    ,antes.enferm_nomb ,antes.enferm_descripcion ,antes.enferm_situacion 
    ,luego.enferm_id ,luego.enferm_cod ,luego.enferm_id_cat_enf ,luego.enferm_nomb 
    ,luego.enferm_descripcion ,luego.enferm_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_far_categorias_enfermedades insert 
    on "informix".far_categorias_enfermedades referencing new 
    as luego
    for each row
        (
        insert into "informix".aud_far_categorias_enfermedades 
    (cat_enf_id,cat_enf_cod,cat_enf_id_tip_enf,cat_enf_nomb,cat_enf_descripcion,
    cat_enf_situacion,desp_cat_enf_id,desp_cat_enf_cod,desp_cat_enf_id_tip_enf,
    desp_cat_enf_nomb,desp_cat_enf_descripcion,desp_cat_enf_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ::lvarchar(2000) ,
    '' ,luego.cat_enf_id ,luego.cat_enf_cod ,luego.cat_enf_id_tip_enf 
    ,luego.cat_enf_nomb ,luego.cat_enf_descripcion ,luego.cat_enf_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_far_categorias_enfermedades delete 
    on "informix".far_categorias_enfermedades referencing old 
    as antes
    for each row
        (
        insert into "informix".aud_far_categorias_enfermedades 
    (cat_enf_id,cat_enf_cod,cat_enf_id_tip_enf,cat_enf_nomb,cat_enf_descripcion,
    cat_enf_situacion,desp_cat_enf_id,desp_cat_enf_cod,desp_cat_enf_id_tip_enf,
    desp_cat_enf_nomb,desp_cat_enf_descripcion,desp_cat_enf_situacion,
    accion,usuario,hora)  values (antes.cat_enf_id ,antes.cat_enf_cod 
    ,antes.cat_enf_id_tip_enf ,antes.cat_enf_nomb ,antes.cat_enf_descripcion 
    ,antes.cat_enf_situacion ,NULL ,'' ,'' ,'' ,'' ::lvarchar(2000) ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_far_categorias_enfermedades update 
    on "informix".far_categorias_enfermedades referencing old 
    as antes new as luego
    for each row
        (
        insert into "informix".aud_far_categorias_enfermedades 
    (cat_enf_id,cat_enf_cod,cat_enf_id_tip_enf,cat_enf_nomb,cat_enf_descripcion,
    cat_enf_situacion,desp_cat_enf_id,desp_cat_enf_cod,desp_cat_enf_id_tip_enf,
    desp_cat_enf_nomb,desp_cat_enf_descripcion,desp_cat_enf_situacion,
    accion,usuario,hora)  values (antes.cat_enf_id ,antes.cat_enf_cod 
    ,antes.cat_enf_id_tip_enf ,antes.cat_enf_nomb ,antes.cat_enf_descripcion 
    ,antes.cat_enf_situacion ,luego.cat_enf_id ,luego.cat_enf_cod ,luego.cat_enf_id_tip_enf 
    ,luego.cat_enf_nomb ,luego.cat_enf_descripcion ,luego.cat_enf_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_far_tipos_enfermedades insert on 
    "informix".far_tipos_enfermedades referencing new as luego
    
    for each row
        (
        insert into "informix".aud_far_tipos_enfermedades (tip_enf_id,
    tip_enf_cod,tip_enf_nomb,tip_enf_descripcion,tip_enf_situacion,desp_tip_enf_id,
    desp_tip_enf_cod,desp_tip_enf_nomb,desp_tip_enf_descripcion,desp_tip_enf_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ::lvarchar(2000) ,'' ,
    luego.tip_enf_id ,luego.tip_enf_cod ,luego.tip_enf_nomb ,luego.tip_enf_descripcion 
    ,luego.tip_enf_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_far_tipos_enfermedades delete on 
    "informix".far_tipos_enfermedades referencing old as antes
    
    for each row
        (
        insert into "informix".aud_far_tipos_enfermedades (tip_enf_id,
    tip_enf_cod,tip_enf_nomb,tip_enf_descripcion,tip_enf_situacion,desp_tip_enf_id,
    desp_tip_enf_cod,desp_tip_enf_nomb,desp_tip_enf_descripcion,desp_tip_enf_situacion,
    accion,usuario,hora)  values (antes.tip_enf_id ,antes.tip_enf_cod 
    ,antes.tip_enf_nomb ,antes.tip_enf_descripcion ,antes.tip_enf_situacion 
    ,NULL ,'' ,'' ,'' ::lvarchar(2000) ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_far_tipos_enfermedades update on 
    "informix".far_tipos_enfermedades referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_far_tipos_enfermedades (tip_enf_id,
    tip_enf_cod,tip_enf_nomb,tip_enf_descripcion,tip_enf_situacion,desp_tip_enf_id,
    desp_tip_enf_cod,desp_tip_enf_nomb,desp_tip_enf_descripcion,desp_tip_enf_situacion,
    accion,usuario,hora)  values (antes.tip_enf_id ,antes.tip_enf_cod 
    ,antes.tip_enf_nomb ,antes.tip_enf_descripcion ,antes.tip_enf_situacion 
    ,luego.tip_enf_id ,luego.tip_enf_cod ,luego.tip_enf_nomb ,luego.tip_enf_descripcion 
    ,luego.tip_enf_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_constancias_sage insert on "informix"
    .constancias_sage referencing new as luego
    for each row
        (
        insert into "informix".aud_constancias_sage (cons_id,
    cons_dpi,cons_nom1,cons_nom2,cons_ape1,cons_ape2,cons_sexo,cons_fecha_doc,
    cons_nombre_not,cons_numero_col,cons_sexo_not,cons_fecha_alta,cons_grado_alta,
    cons_dep_alta,cons_fecha_baja,cons_grado_baja,cons_dep_baja,cons_motivo_baja,
    cons_doc_respaldo,cons_num_recibo,cons_cat_jefecerti,cons_graarm_certi,
    cons_nom_certi,cons_cat_jefesage,cons_graarm_jefesage,cons_nom_jefesage,
    cons_fecha_transac,cons_plaza_certi,cons_plaza_jefe,cons_cat_hizo,
    cons_motivo_cambio,cons_tip_documento,cons_situacion,desp_cons_id,
    desp_cons_dpi,desp_cons_nom1,desp_cons_nom2,desp_cons_ape1,desp_cons_ape2,
    desp_cons_sexo,desp_cons_fecha_doc,desp_cons_nombre_not,desp_cons_numero_col,
    desp_cons_sexo_not,desp_cons_fecha_alta,desp_cons_grado_alta,desp_cons_dep_alta,
    desp_cons_fecha_baja,desp_cons_grado_baja,desp_cons_dep_baja,desp_cons_motivo_baja,
    desp_cons_doc_respaldo,desp_cons_num_recibo,desp_cons_cat_jefecerti,
    desp_cons_graarm_certi,desp_cons_nom_certi,desp_cons_cat_jefesage,
    desp_cons_graarm_jefesage,desp_cons_nom_jefesage,desp_cons_fecha_transac,
    desp_cons_plaza_certi,desp_cons_plaza_jefe,desp_cons_cat_hizo,desp_cons_motivo_cambio,
    desp_cons_tip_documento,desp_cons_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.cons_id ,luego.cons_dpi 
    ,luego.cons_nom1 ,luego.cons_nom2 ,luego.cons_ape1 ,luego.cons_ape2 
    ,luego.cons_sexo ,luego.cons_fecha_doc ,luego.cons_nombre_not ,luego.cons_numero_col 
    ,luego.cons_sexo_not ,luego.cons_fecha_alta ,luego.cons_grado_alta 
    ,luego.cons_dep_alta ,luego.cons_fecha_baja ,luego.cons_grado_baja 
    ,luego.cons_dep_baja ,luego.cons_motivo_baja ,luego.cons_doc_respaldo 
    ,luego.cons_num_recibo ,luego.cons_cat_jefecerti ,luego.cons_graarm_certi 
    ,luego.cons_nom_certi ,luego.cons_cat_jefesage ,luego.cons_graarm_jefesage 
    ,luego.cons_nom_jefesage ,luego.cons_fecha_transac ,luego.cons_plaza_certi 
    ,luego.cons_plaza_jefe ,luego.cons_cat_hizo ,luego.cons_motivo_cambio 
    ,luego.cons_tip_documento ,luego.cons_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_constancias_sage delete on "informix"
    .constancias_sage referencing old as antes
    for each row
        (
        insert into "informix".aud_constancias_sage (cons_id,
    cons_dpi,cons_nom1,cons_nom2,cons_ape1,cons_ape2,cons_sexo,cons_fecha_doc,
    cons_nombre_not,cons_numero_col,cons_sexo_not,cons_fecha_alta,cons_grado_alta,
    cons_dep_alta,cons_fecha_baja,cons_grado_baja,cons_dep_baja,cons_motivo_baja,
    cons_doc_respaldo,cons_num_recibo,cons_cat_jefecerti,cons_graarm_certi,
    cons_nom_certi,cons_cat_jefesage,cons_graarm_jefesage,cons_nom_jefesage,
    cons_fecha_transac,cons_plaza_certi,cons_plaza_jefe,cons_cat_hizo,
    cons_motivo_cambio,cons_tip_documento,cons_situacion,desp_cons_id,
    desp_cons_dpi,desp_cons_nom1,desp_cons_nom2,desp_cons_ape1,desp_cons_ape2,
    desp_cons_sexo,desp_cons_fecha_doc,desp_cons_nombre_not,desp_cons_numero_col,
    desp_cons_sexo_not,desp_cons_fecha_alta,desp_cons_grado_alta,desp_cons_dep_alta,
    desp_cons_fecha_baja,desp_cons_grado_baja,desp_cons_dep_baja,desp_cons_motivo_baja,
    desp_cons_doc_respaldo,desp_cons_num_recibo,desp_cons_cat_jefecerti,
    desp_cons_graarm_certi,desp_cons_nom_certi,desp_cons_cat_jefesage,
    desp_cons_graarm_jefesage,desp_cons_nom_jefesage,desp_cons_fecha_transac,
    desp_cons_plaza_certi,desp_cons_plaza_jefe,desp_cons_cat_hizo,desp_cons_motivo_cambio,
    desp_cons_tip_documento,desp_cons_situacion,accion,usuario,hora) 
     values (antes.cons_id ,antes.cons_dpi ,antes.cons_nom1 ,antes.cons_nom2 
    ,antes.cons_ape1 ,antes.cons_ape2 ,antes.cons_sexo ,antes.cons_fecha_doc 
    ,antes.cons_nombre_not ,antes.cons_numero_col ,antes.cons_sexo_not 
    ,antes.cons_fecha_alta ,antes.cons_grado_alta ,antes.cons_dep_alta 
    ,antes.cons_fecha_baja ,antes.cons_grado_baja ,antes.cons_dep_baja 
    ,antes.cons_motivo_baja ,antes.cons_doc_respaldo ,antes.cons_num_recibo 
    ,antes.cons_cat_jefecerti ,antes.cons_graarm_certi ,antes.cons_nom_certi 
    ,antes.cons_cat_jefesage ,antes.cons_graarm_jefesage ,antes.cons_nom_jefesage 
    ,antes.cons_fecha_transac ,antes.cons_plaza_certi ,antes.cons_plaza_jefe 
    ,antes.cons_cat_hizo ,antes.cons_motivo_cambio ,antes.cons_tip_documento 
    ,antes.cons_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_constancias_sage update on "informix"
    .constancias_sage referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_constancias_sage (cons_id,
    cons_dpi,cons_nom1,cons_nom2,cons_ape1,cons_ape2,cons_sexo,cons_fecha_doc,
    cons_nombre_not,cons_numero_col,cons_sexo_not,cons_fecha_alta,cons_grado_alta,
    cons_dep_alta,cons_fecha_baja,cons_grado_baja,cons_dep_baja,cons_motivo_baja,
    cons_doc_respaldo,cons_num_recibo,cons_cat_jefecerti,cons_graarm_certi,
    cons_nom_certi,cons_cat_jefesage,cons_graarm_jefesage,cons_nom_jefesage,
    cons_fecha_transac,cons_plaza_certi,cons_plaza_jefe,cons_cat_hizo,
    cons_motivo_cambio,cons_tip_documento,cons_situacion,desp_cons_id,
    desp_cons_dpi,desp_cons_nom1,desp_cons_nom2,desp_cons_ape1,desp_cons_ape2,
    desp_cons_sexo,desp_cons_fecha_doc,desp_cons_nombre_not,desp_cons_numero_col,
    desp_cons_sexo_not,desp_cons_fecha_alta,desp_cons_grado_alta,desp_cons_dep_alta,
    desp_cons_fecha_baja,desp_cons_grado_baja,desp_cons_dep_baja,desp_cons_motivo_baja,
    desp_cons_doc_respaldo,desp_cons_num_recibo,desp_cons_cat_jefecerti,
    desp_cons_graarm_certi,desp_cons_nom_certi,desp_cons_cat_jefesage,
    desp_cons_graarm_jefesage,desp_cons_nom_jefesage,desp_cons_fecha_transac,
    desp_cons_plaza_certi,desp_cons_plaza_jefe,desp_cons_cat_hizo,desp_cons_motivo_cambio,
    desp_cons_tip_documento,desp_cons_situacion,accion,usuario,hora) 
     values (antes.cons_id ,antes.cons_dpi ,antes.cons_nom1 ,antes.cons_nom2 
    ,antes.cons_ape1 ,antes.cons_ape2 ,antes.cons_sexo ,antes.cons_fecha_doc 
    ,antes.cons_nombre_not ,antes.cons_numero_col ,antes.cons_sexo_not 
    ,antes.cons_fecha_alta ,antes.cons_grado_alta ,antes.cons_dep_alta 
    ,antes.cons_fecha_baja ,antes.cons_grado_baja ,antes.cons_dep_baja 
    ,antes.cons_motivo_baja ,antes.cons_doc_respaldo ,antes.cons_num_recibo 
    ,antes.cons_cat_jefecerti ,antes.cons_graarm_certi ,antes.cons_nom_certi 
    ,antes.cons_cat_jefesage ,antes.cons_graarm_jefesage ,antes.cons_nom_jefesage 
    ,antes.cons_fecha_transac ,antes.cons_plaza_certi ,antes.cons_plaza_jefe 
    ,antes.cons_cat_hizo ,antes.cons_motivo_cambio ,antes.cons_tip_documento 
    ,antes.cons_situacion ,luego.cons_id ,luego.cons_dpi ,luego.cons_nom1 
    ,luego.cons_nom2 ,luego.cons_ape1 ,luego.cons_ape2 ,luego.cons_sexo 
    ,luego.cons_fecha_doc ,luego.cons_nombre_not ,luego.cons_numero_col 
    ,luego.cons_sexo_not ,luego.cons_fecha_alta ,luego.cons_grado_alta 
    ,luego.cons_dep_alta ,luego.cons_fecha_baja ,luego.cons_grado_baja 
    ,luego.cons_dep_baja ,luego.cons_motivo_baja ,luego.cons_doc_respaldo 
    ,luego.cons_num_recibo ,luego.cons_cat_jefecerti ,luego.cons_graarm_certi 
    ,luego.cons_nom_certi ,luego.cons_cat_jefesage ,luego.cons_graarm_jefesage 
    ,luego.cons_nom_jefesage ,luego.cons_fecha_transac ,luego.cons_plaza_certi 
    ,luego.cons_plaza_jefe ,luego.cons_cat_hizo ,luego.cons_motivo_cambio 
    ,luego.cons_tip_documento ,luego.cons_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_f_cat_eliminados insert on "informix"
    .f_cat_eliminados referencing new as luego
    for each row
        (
        insert into "informix".aud_f_cat_eliminados (fin_elim_id,
    fin_elim_cat_finanzas,fin_elim_fecha,fin_elim_observaciones,fin_elim_cat_quitado,
    desp_fin_elim_id,desp_fin_elim_cat_finanzas,desp_fin_elim_fecha,desp_fin_elim_observaciones,
    desp_fin_elim_cat_quitado,accion,usuario,hora)  values (NULL ,'' ,
    '' ,'' ,'' ,luego.fin_elim_id ,luego.fin_elim_cat_finanzas ,luego.fin_elim_fecha 
    ,luego.fin_elim_observaciones ,luego.fin_elim_cat_quitado ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_f_cat_eliminados delete on "informix"
    .f_cat_eliminados referencing old as antes
    for each row
        (
        insert into "informix".aud_f_cat_eliminados (fin_elim_id,
    fin_elim_cat_finanzas,fin_elim_fecha,fin_elim_observaciones,fin_elim_cat_quitado,
    desp_fin_elim_id,desp_fin_elim_cat_finanzas,desp_fin_elim_fecha,desp_fin_elim_observaciones,
    desp_fin_elim_cat_quitado,accion,usuario,hora)  values (antes.fin_elim_id 
    ,antes.fin_elim_cat_finanzas ,antes.fin_elim_fecha ,antes.fin_elim_observaciones 
    ,antes.fin_elim_cat_quitado ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_f_cat_eliminados update on "informix"
    .f_cat_eliminados referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_f_cat_eliminados (fin_elim_id,
    fin_elim_cat_finanzas,fin_elim_fecha,fin_elim_observaciones,fin_elim_cat_quitado,
    desp_fin_elim_id,desp_fin_elim_cat_finanzas,desp_fin_elim_fecha,desp_fin_elim_observaciones,
    desp_fin_elim_cat_quitado,accion,usuario,hora)  values (antes.fin_elim_id 
    ,antes.fin_elim_cat_finanzas ,antes.fin_elim_fecha ,antes.fin_elim_observaciones 
    ,antes.fin_elim_cat_quitado ,luego.fin_elim_id ,luego.fin_elim_cat_finanzas 
    ,luego.fin_elim_fecha ,luego.fin_elim_observaciones ,luego.fin_elim_cat_quitado 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tiro_totales insert on "informix"
    .tiro_totales referencing new as luego
    for each row
        (
        insert into "informix".aud_tiro_totales (tir_id,tir_catalogo,
    tir_total_disparo,tir_total_tiempo,tir_total,tir_situacion,tir_montaje,
    tir_precision,tir_sit,desp_tir_id,desp_tir_catalogo,desp_tir_total_disparo,
    desp_tir_total_tiempo,desp_tir_total,desp_tir_situacion,desp_tir_montaje,
    desp_tir_precision,desp_tir_sit,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.tir_id ,luego.tir_catalogo ,luego.tir_total_disparo 
    ,luego.tir_total_tiempo ,luego.tir_total ,luego.tir_situacion ,luego.tir_montaje 
    ,luego.tir_precision ,luego.tir_sit ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_tiro_totales delete on "informix"
    .tiro_totales referencing old as antes
    for each row
        (
        insert into "informix".aud_tiro_totales (tir_id,tir_catalogo,
    tir_total_disparo,tir_total_tiempo,tir_total,tir_situacion,tir_montaje,
    tir_precision,tir_sit,desp_tir_id,desp_tir_catalogo,desp_tir_total_disparo,
    desp_tir_total_tiempo,desp_tir_total,desp_tir_situacion,desp_tir_montaje,
    desp_tir_precision,desp_tir_sit,accion,usuario,hora)  values (antes.tir_id 
    ,antes.tir_catalogo ,antes.tir_total_disparo ,antes.tir_total_tiempo 
    ,antes.tir_total ,antes.tir_situacion ,antes.tir_montaje ,antes.tir_precision 
    ,antes.tir_sit ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_tiro_totales update on "informix"
    .tiro_totales referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tiro_totales (tir_id,tir_catalogo,
    tir_total_disparo,tir_total_tiempo,tir_total,tir_situacion,tir_montaje,
    tir_precision,tir_sit,desp_tir_id,desp_tir_catalogo,desp_tir_total_disparo,
    desp_tir_total_tiempo,desp_tir_total,desp_tir_situacion,desp_tir_montaje,
    desp_tir_precision,desp_tir_sit,accion,usuario,hora)  values (antes.tir_id 
    ,antes.tir_catalogo ,antes.tir_total_disparo ,antes.tir_total_tiempo 
    ,antes.tir_total ,antes.tir_situacion ,antes.tir_montaje ,antes.tir_precision 
    ,antes.tir_sit ,luego.tir_id ,luego.tir_catalogo ,luego.tir_total_disparo 
    ,luego.tir_total_tiempo ,luego.tir_total ,luego.tir_situacion ,luego.tir_montaje 
    ,luego.tir_precision ,luego.tir_sit ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_tiro_equipos insert on "informix"
    .tiro_equipos referencing new as luego
    for each row
        (
        insert into "informix".aud_tiro_equipos (equip_id,equip_equipo,
    equip_cantidad,equip_situacion,desp_equip_id,desp_equip_equipo,desp_equip_cantidad,
    desp_equip_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' 
    ,luego.equip_id ,luego.equip_equipo ,luego.equip_cantidad ,luego.equip_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_tiro_equipos delete on "informix"
    .tiro_equipos referencing old as antes
    for each row
        (
        insert into "informix".aud_tiro_equipos (equip_id,equip_equipo,
    equip_cantidad,equip_situacion,desp_equip_id,desp_equip_equipo,desp_equip_cantidad,
    desp_equip_situacion,accion,usuario,hora)  values (antes.equip_id 
    ,antes.equip_equipo ,antes.equip_cantidad ,antes.equip_situacion 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_tiro_equipos update on "informix"
    .tiro_equipos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tiro_equipos (equip_id,equip_equipo,
    equip_cantidad,equip_situacion,desp_equip_id,desp_equip_equipo,desp_equip_cantidad,
    desp_equip_situacion,accion,usuario,hora)  values (antes.equip_id 
    ,antes.equip_equipo ,antes.equip_cantidad ,antes.equip_situacion 
    ,luego.equip_id ,luego.equip_equipo ,luego.equip_cantidad ,luego.equip_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tiro_resultados_equipo insert on 
    "informix".tiro_resultados_equipo referencing new as luego
    
    for each row
        (
        insert into "informix".aud_tiro_resultados_equipo (resul_id,
    resul_punteo,resul_equipo,resul_situacion,desp_resul_id,desp_resul_punteo,
    desp_resul_equipo,desp_resul_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,luego.resul_id ,luego.resul_punteo ,luego.resul_equipo 
    ,luego.resul_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_tiro_resultados_equipo delete on 
    "informix".tiro_resultados_equipo referencing old as antes
    
    for each row
        (
        insert into "informix".aud_tiro_resultados_equipo (resul_id,
    resul_punteo,resul_equipo,resul_situacion,desp_resul_id,desp_resul_punteo,
    desp_resul_equipo,desp_resul_situacion,accion,usuario,hora)  values 
    (antes.resul_id ,antes.resul_punteo ,antes.resul_equipo ,antes.resul_situacion 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_tiro_resultados_equipo update on 
    "informix".tiro_resultados_equipo referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_tiro_resultados_equipo (resul_id,
    resul_punteo,resul_equipo,resul_situacion,desp_resul_id,desp_resul_punteo,
    desp_resul_equipo,desp_resul_situacion,accion,usuario,hora)  values 
    (antes.resul_id ,antes.resul_punteo ,antes.resul_equipo ,antes.resul_situacion 
    ,luego.resul_id ,luego.resul_punteo ,luego.resul_equipo ,luego.resul_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_con_boleta_dp insert on "informix"
    .con_boleta_dp referencing new as luego
    for each row
        (
        insert into "informix".aud_con_boleta_dp (bol_id,bol_id_con,
    bol_id_foto,bol_ue,bol_fecha_revision,bol_tipo,bol_fuente,bol_situacion,
    desp_bol_id,desp_bol_id_con,desp_bol_id_foto,desp_bol_ue,desp_bol_fecha_revision,
    desp_bol_tipo,desp_bol_fuente,desp_bol_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.bol_id ,luego.bol_id_con 
    ,luego.bol_id_foto ,luego.bol_ue ,luego.bol_fecha_revision ,luego.bol_tipo 
    ,luego.bol_fuente ,luego.bol_situacion ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_con_boleta_dp delete on "informix"
    .con_boleta_dp referencing old as antes
    for each row
        (
        insert into "informix".aud_con_boleta_dp (bol_id,bol_id_con,
    bol_id_foto,bol_ue,bol_fecha_revision,bol_tipo,bol_fuente,bol_situacion,
    desp_bol_id,desp_bol_id_con,desp_bol_id_foto,desp_bol_ue,desp_bol_fecha_revision,
    desp_bol_tipo,desp_bol_fuente,desp_bol_situacion,accion,usuario,hora) 
     values (antes.bol_id ,antes.bol_id_con ,antes.bol_id_foto ,antes.bol_ue 
    ,antes.bol_fecha_revision ,antes.bol_tipo ,antes.bol_fuente ,antes.bol_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_con_boleta_dp update on "informix"
    .con_boleta_dp referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_con_boleta_dp (bol_id,bol_id_con,
    bol_id_foto,bol_ue,bol_fecha_revision,bol_tipo,bol_fuente,bol_situacion,
    desp_bol_id,desp_bol_id_con,desp_bol_id_foto,desp_bol_ue,desp_bol_fecha_revision,
    desp_bol_tipo,desp_bol_fuente,desp_bol_situacion,accion,usuario,hora) 
     values (antes.bol_id ,antes.bol_id_con ,antes.bol_id_foto ,antes.bol_ue 
    ,antes.bol_fecha_revision ,antes.bol_tipo ,antes.bol_fuente ,antes.bol_situacion 
    ,luego.bol_id ,luego.bol_id_con ,luego.bol_id_foto ,luego.bol_ue 
    ,luego.bol_fecha_revision ,luego.bol_tipo ,luego.bol_fuente ,luego.bol_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_emer_julia insert on "informix".emer_julia 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_emer_julia (emer_id,emer_comando,
    emer_municipio,emer_latitud,emer_longitud,emer_lluvia,emer_viento,
    emer_inundaciones,emer_derrumbe,emer_carretera,emer_desbordamiento,
    emer_evacuacion,emer_puentes,emer_situacion,desp_emer_id,desp_emer_comando,
    desp_emer_municipio,desp_emer_latitud,desp_emer_longitud,desp_emer_lluvia,
    desp_emer_viento,desp_emer_inundaciones,desp_emer_derrumbe,desp_emer_carretera,
    desp_emer_desbordamiento,desp_emer_evacuacion,desp_emer_puentes,desp_emer_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,luego.emer_id ,luego.emer_comando ,luego.emer_municipio 
    ,luego.emer_latitud ,luego.emer_longitud ,luego.emer_lluvia ,luego.emer_viento 
    ,luego.emer_inundaciones ,luego.emer_derrumbe ,luego.emer_carretera 
    ,luego.emer_desbordamiento ,luego.emer_evacuacion ,luego.emer_puentes 
    ,luego.emer_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_emer_julia delete on "informix".emer_julia 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_emer_julia (emer_id,emer_comando,
    emer_municipio,emer_latitud,emer_longitud,emer_lluvia,emer_viento,
    emer_inundaciones,emer_derrumbe,emer_carretera,emer_desbordamiento,
    emer_evacuacion,emer_puentes,emer_situacion,desp_emer_id,desp_emer_comando,
    desp_emer_municipio,desp_emer_latitud,desp_emer_longitud,desp_emer_lluvia,
    desp_emer_viento,desp_emer_inundaciones,desp_emer_derrumbe,desp_emer_carretera,
    desp_emer_desbordamiento,desp_emer_evacuacion,desp_emer_puentes,desp_emer_situacion,
    accion,usuario,hora)  values (antes.emer_id ,antes.emer_comando ,
    antes.emer_municipio ,antes.emer_latitud ,antes.emer_longitud ,antes.emer_lluvia 
    ,antes.emer_viento ,antes.emer_inundaciones ,antes.emer_derrumbe 
    ,antes.emer_carretera ,antes.emer_desbordamiento ,antes.emer_evacuacion 
    ,antes.emer_puentes ,antes.emer_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_emer_julia update on "informix".emer_julia 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_emer_julia (emer_id,emer_comando,
    emer_municipio,emer_latitud,emer_longitud,emer_lluvia,emer_viento,
    emer_inundaciones,emer_derrumbe,emer_carretera,emer_desbordamiento,
    emer_evacuacion,emer_puentes,emer_situacion,desp_emer_id,desp_emer_comando,
    desp_emer_municipio,desp_emer_latitud,desp_emer_longitud,desp_emer_lluvia,
    desp_emer_viento,desp_emer_inundaciones,desp_emer_derrumbe,desp_emer_carretera,
    desp_emer_desbordamiento,desp_emer_evacuacion,desp_emer_puentes,desp_emer_situacion,
    accion,usuario,hora)  values (antes.emer_id ,antes.emer_comando ,
    antes.emer_municipio ,antes.emer_latitud ,antes.emer_longitud ,antes.emer_lluvia 
    ,antes.emer_viento ,antes.emer_inundaciones ,antes.emer_derrumbe 
    ,antes.emer_carretera ,antes.emer_desbordamiento ,antes.emer_evacuacion 
    ,antes.emer_puentes ,antes.emer_situacion ,luego.emer_id ,luego.emer_comando 
    ,luego.emer_municipio ,luego.emer_latitud ,luego.emer_longitud ,luego.emer_lluvia 
    ,luego.emer_viento ,luego.emer_inundaciones ,luego.emer_derrumbe 
    ,luego.emer_carretera ,luego.emer_desbordamiento ,luego.emer_evacuacion 
    ,luego.emer_puentes ,luego.emer_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_pro_ord_gral insert on "informix"
    .pro_ord_gral referencing new as luego
    for each row
        (
        insert into "informix".aud_pro_ord_gral (pro_id,pro_catalogo,
    pro_grado,pro_fechanomb,pro_arma,pro_plazacese,pro_motivo,pro_plazapropuesta,
    pro_fuerza,pro_cese,pro_nombra,pro_punto,desp_pro_id,desp_pro_catalogo,
    desp_pro_grado,desp_pro_fechanomb,desp_pro_arma,desp_pro_plazacese,
    desp_pro_motivo,desp_pro_plazapropuesta,desp_pro_fuerza,desp_pro_cese,
    desp_pro_nombra,desp_pro_punto,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.pro_id ,luego.pro_catalogo 
    ,luego.pro_grado ,luego.pro_fechanomb ,luego.pro_arma ,luego.pro_plazacese 
    ,luego.pro_motivo ,luego.pro_plazapropuesta ,luego.pro_fuerza ,luego.pro_cese 
    ,luego.pro_nombra ,luego.pro_punto ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_pro_ord_gral delete on "informix"
    .pro_ord_gral referencing old as antes
    for each row
        (
        insert into "informix".aud_pro_ord_gral (pro_id,pro_catalogo,
    pro_grado,pro_fechanomb,pro_arma,pro_plazacese,pro_motivo,pro_plazapropuesta,
    pro_fuerza,pro_cese,pro_nombra,pro_punto,desp_pro_id,desp_pro_catalogo,
    desp_pro_grado,desp_pro_fechanomb,desp_pro_arma,desp_pro_plazacese,
    desp_pro_motivo,desp_pro_plazapropuesta,desp_pro_fuerza,desp_pro_cese,
    desp_pro_nombra,desp_pro_punto,accion,usuario,hora)  values (antes.pro_id 
    ,antes.pro_catalogo ,antes.pro_grado ,antes.pro_fechanomb ,antes.pro_arma 
    ,antes.pro_plazacese ,antes.pro_motivo ,antes.pro_plazapropuesta 
    ,antes.pro_fuerza ,antes.pro_cese ,antes.pro_nombra ,antes.pro_punto 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_pro_ord_gral update on "informix"
    .pro_ord_gral referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_pro_ord_gral (pro_id,pro_catalogo,
    pro_grado,pro_fechanomb,pro_arma,pro_plazacese,pro_motivo,pro_plazapropuesta,
    pro_fuerza,pro_cese,pro_nombra,pro_punto,desp_pro_id,desp_pro_catalogo,
    desp_pro_grado,desp_pro_fechanomb,desp_pro_arma,desp_pro_plazacese,
    desp_pro_motivo,desp_pro_plazapropuesta,desp_pro_fuerza,desp_pro_cese,
    desp_pro_nombra,desp_pro_punto,accion,usuario,hora)  values (antes.pro_id 
    ,antes.pro_catalogo ,antes.pro_grado ,antes.pro_fechanomb ,antes.pro_arma 
    ,antes.pro_plazacese ,antes.pro_motivo ,antes.pro_plazapropuesta 
    ,antes.pro_fuerza ,antes.pro_cese ,antes.pro_nombra ,antes.pro_punto 
    ,luego.pro_id ,luego.pro_catalogo ,luego.pro_grado ,luego.pro_fechanomb 
    ,luego.pro_arma ,luego.pro_plazacese ,luego.pro_motivo ,luego.pro_plazapropuesta 
    ,luego.pro_fuerza ,luego.pro_cese ,luego.pro_nombra ,luego.pro_punto 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_per_plazas_orden insert on "informix"
    .per_plazas_orden referencing new as luego
    for each row
        (
        insert into "informix".aud_per_plazas_orden (plaza_num,
    plaza_desc_ct,plaza_desc_lg,desp_plaza_num,desp_plaza_desc_ct,desp_plaza_desc_lg,
    accion,usuario,hora)  values (NULL ,'' ,'' ::lvarchar(2048) ,luego.plaza_num 
    ,luego.plaza_desc_ct ,luego.plaza_desc_lg ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_per_plazas_orden delete on "informix"
    .per_plazas_orden referencing old as antes
    for each row
        (
        insert into "informix".aud_per_plazas_orden (plaza_num,
    plaza_desc_ct,plaza_desc_lg,desp_plaza_num,desp_plaza_desc_ct,desp_plaza_desc_lg,
    accion,usuario,hora)  values (antes.plaza_num ,antes.plaza_desc_ct 
    ,antes.plaza_desc_lg ,NULL ,'' ,'' ::lvarchar(2048) ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_per_plazas_orden update on "informix"
    .per_plazas_orden referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_per_plazas_orden (plaza_num,
    plaza_desc_ct,plaza_desc_lg,desp_plaza_num,desp_plaza_desc_ct,desp_plaza_desc_lg,
    accion,usuario,hora)  values (antes.plaza_num ,antes.plaza_desc_ct 
    ,antes.plaza_desc_lg ,luego.plaza_num ,luego.plaza_desc_ct ,luego.plaza_desc_lg 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_pro_ord_gral_h insert on "informix"
    .pro_ord_gral_h referencing new as luego
    for each row
        (
        insert into "informix".aud_pro_ord_gral_h (prh_id,prh_catalogo,
    prh_fechanomb,prh_plazacese,prh_punto,prh_situacion,desp_prh_id,desp_prh_catalogo,
    desp_prh_fechanomb,desp_prh_plazacese,desp_prh_punto,desp_prh_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.prh_id ,
    luego.prh_catalogo ,luego.prh_fechanomb ,luego.prh_plazacese ,luego.prh_punto 
    ,luego.prh_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_pro_ord_gral_h delete on "informix"
    .pro_ord_gral_h referencing old as antes
    for each row
        (
        insert into "informix".aud_pro_ord_gral_h (prh_id,prh_catalogo,
    prh_fechanomb,prh_plazacese,prh_punto,prh_situacion,desp_prh_id,desp_prh_catalogo,
    desp_prh_fechanomb,desp_prh_plazacese,desp_prh_punto,desp_prh_situacion,
    accion,usuario,hora)  values (antes.prh_id ,antes.prh_catalogo ,antes.prh_fechanomb 
    ,antes.prh_plazacese ,antes.prh_punto ,antes.prh_situacion ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_pro_ord_gral_h update on "informix"
    .pro_ord_gral_h referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_pro_ord_gral_h (prh_id,prh_catalogo,
    prh_fechanomb,prh_plazacese,prh_punto,prh_situacion,desp_prh_id,desp_prh_catalogo,
    desp_prh_fechanomb,desp_prh_plazacese,desp_prh_punto,desp_prh_situacion,
    accion,usuario,hora)  values (antes.prh_id ,antes.prh_catalogo ,antes.prh_fechanomb 
    ,antes.prh_plazacese ,antes.prh_punto ,antes.prh_situacion ,luego.prh_id 
    ,luego.prh_catalogo ,luego.prh_fechanomb ,luego.prh_plazacese ,luego.prh_punto 
    ,luego.prh_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_dfdes_vivibanco insert on "informix"
    .dfdes_vivibanco referencing new as luego
    for each row
        (
        insert into "informix".aud_dfdes_vivibanco (dfvivi_catalogo,
    dfvivi_codigo,dfvivi_nu_reg,dfvivi_cod_control,dfvivi_tipo_desc,dfvivi_fec_ini,
    dfvivi_ult_act,dfvivi_fec_cer,dfvivi_monto,dfvivi_saldo,dfvivi_mensual,
    dfvivi_tot_cuotas,dfvivi_num_cuotas,dfvivi_documen,dfvivi_codeudor,
    dfvivi_nom_bene,dfvivi_juz_con,dfvivi_si_no,desp_dfvivi_catalogo,
    desp_dfvivi_codigo,desp_dfvivi_nu_reg,desp_dfvivi_cod_control,desp_dfvivi_tipo_desc,
    desp_dfvivi_fec_ini,desp_dfvivi_ult_act,desp_dfvivi_fec_cer,desp_dfvivi_monto,
    desp_dfvivi_saldo,desp_dfvivi_mensual,desp_dfvivi_tot_cuotas,desp_dfvivi_num_cuotas,
    desp_dfvivi_documen,desp_dfvivi_codeudor,desp_dfvivi_nom_bene,desp_dfvivi_juz_con,
    desp_dfvivi_si_no,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.dfvivi_catalogo ,luego.dfvivi_codigo 
    ,luego.dfvivi_nu_reg ,luego.dfvivi_cod_control ,luego.dfvivi_tipo_desc 
    ,luego.dfvivi_fec_ini ,luego.dfvivi_ult_act ,luego.dfvivi_fec_cer 
    ,luego.dfvivi_monto ,luego.dfvivi_saldo ,luego.dfvivi_mensual ,luego.dfvivi_tot_cuotas 
    ,luego.dfvivi_num_cuotas ,luego.dfvivi_documen ,luego.dfvivi_codeudor 
    ,luego.dfvivi_nom_bene ,luego.dfvivi_juz_con ,luego.dfvivi_si_no 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dfdes_vivibanco delete on "informix"
    .dfdes_vivibanco referencing old as antes
    for each row
        (
        insert into "informix".aud_dfdes_vivibanco (dfvivi_catalogo,
    dfvivi_codigo,dfvivi_nu_reg,dfvivi_cod_control,dfvivi_tipo_desc,dfvivi_fec_ini,
    dfvivi_ult_act,dfvivi_fec_cer,dfvivi_monto,dfvivi_saldo,dfvivi_mensual,
    dfvivi_tot_cuotas,dfvivi_num_cuotas,dfvivi_documen,dfvivi_codeudor,
    dfvivi_nom_bene,dfvivi_juz_con,dfvivi_si_no,desp_dfvivi_catalogo,
    desp_dfvivi_codigo,desp_dfvivi_nu_reg,desp_dfvivi_cod_control,desp_dfvivi_tipo_desc,
    desp_dfvivi_fec_ini,desp_dfvivi_ult_act,desp_dfvivi_fec_cer,desp_dfvivi_monto,
    desp_dfvivi_saldo,desp_dfvivi_mensual,desp_dfvivi_tot_cuotas,desp_dfvivi_num_cuotas,
    desp_dfvivi_documen,desp_dfvivi_codeudor,desp_dfvivi_nom_bene,desp_dfvivi_juz_con,
    desp_dfvivi_si_no,accion,usuario,hora)  values (antes.dfvivi_catalogo 
    ,antes.dfvivi_codigo ,antes.dfvivi_nu_reg ,antes.dfvivi_cod_control 
    ,antes.dfvivi_tipo_desc ,antes.dfvivi_fec_ini ,antes.dfvivi_ult_act 
    ,antes.dfvivi_fec_cer ,antes.dfvivi_monto ,antes.dfvivi_saldo ,antes.dfvivi_mensual 
    ,antes.dfvivi_tot_cuotas ,antes.dfvivi_num_cuotas ,antes.dfvivi_documen 
    ,antes.dfvivi_codeudor ,antes.dfvivi_nom_bene ,antes.dfvivi_juz_con 
    ,antes.dfvivi_si_no ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_dfdes_vivibanco update on "informix"
    .dfdes_vivibanco referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dfdes_vivibanco (dfvivi_catalogo,
    dfvivi_codigo,dfvivi_nu_reg,dfvivi_cod_control,dfvivi_tipo_desc,dfvivi_fec_ini,
    dfvivi_ult_act,dfvivi_fec_cer,dfvivi_monto,dfvivi_saldo,dfvivi_mensual,
    dfvivi_tot_cuotas,dfvivi_num_cuotas,dfvivi_documen,dfvivi_codeudor,
    dfvivi_nom_bene,dfvivi_juz_con,dfvivi_si_no,desp_dfvivi_catalogo,
    desp_dfvivi_codigo,desp_dfvivi_nu_reg,desp_dfvivi_cod_control,desp_dfvivi_tipo_desc,
    desp_dfvivi_fec_ini,desp_dfvivi_ult_act,desp_dfvivi_fec_cer,desp_dfvivi_monto,
    desp_dfvivi_saldo,desp_dfvivi_mensual,desp_dfvivi_tot_cuotas,desp_dfvivi_num_cuotas,
    desp_dfvivi_documen,desp_dfvivi_codeudor,desp_dfvivi_nom_bene,desp_dfvivi_juz_con,
    desp_dfvivi_si_no,accion,usuario,hora)  values (antes.dfvivi_catalogo 
    ,antes.dfvivi_codigo ,antes.dfvivi_nu_reg ,antes.dfvivi_cod_control 
    ,antes.dfvivi_tipo_desc ,antes.dfvivi_fec_ini ,antes.dfvivi_ult_act 
    ,antes.dfvivi_fec_cer ,antes.dfvivi_monto ,antes.dfvivi_saldo ,antes.dfvivi_mensual 
    ,antes.dfvivi_tot_cuotas ,antes.dfvivi_num_cuotas ,antes.dfvivi_documen 
    ,antes.dfvivi_codeudor ,antes.dfvivi_nom_bene ,antes.dfvivi_juz_con 
    ,antes.dfvivi_si_no ,luego.dfvivi_catalogo ,luego.dfvivi_codigo ,
    luego.dfvivi_nu_reg ,luego.dfvivi_cod_control ,luego.dfvivi_tipo_desc 
    ,luego.dfvivi_fec_ini ,luego.dfvivi_ult_act ,luego.dfvivi_fec_cer 
    ,luego.dfvivi_monto ,luego.dfvivi_saldo ,luego.dfvivi_mensual ,luego.dfvivi_tot_cuotas 
    ,luego.dfvivi_num_cuotas ,luego.dfvivi_documen ,luego.dfvivi_codeudor 
    ,luego.dfvivi_nom_bene ,luego.dfvivi_juz_con ,luego.dfvivi_si_no 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_emer_lisa insert on "informix".emer_lisa 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_emer_lisa (emer_id,emer_comando,
    emer_municipio,emer_latitud,emer_longitud,emer_lluvia,emer_viento,
    emer_inundaciones,emer_derrumbe,emer_carretera,emer_desbordamiento,
    emer_evacuacion,emer_puentes,emer_situacion,desp_emer_id,desp_emer_comando,
    desp_emer_municipio,desp_emer_latitud,desp_emer_longitud,desp_emer_lluvia,
    desp_emer_viento,desp_emer_inundaciones,desp_emer_derrumbe,desp_emer_carretera,
    desp_emer_desbordamiento,desp_emer_evacuacion,desp_emer_puentes,desp_emer_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,luego.emer_id ,luego.emer_comando ,luego.emer_municipio 
    ,luego.emer_latitud ,luego.emer_longitud ,luego.emer_lluvia ,luego.emer_viento 
    ,luego.emer_inundaciones ,luego.emer_derrumbe ,luego.emer_carretera 
    ,luego.emer_desbordamiento ,luego.emer_evacuacion ,luego.emer_puentes 
    ,luego.emer_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_emer_lisa delete on "informix".emer_lisa 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_emer_lisa (emer_id,emer_comando,
    emer_municipio,emer_latitud,emer_longitud,emer_lluvia,emer_viento,
    emer_inundaciones,emer_derrumbe,emer_carretera,emer_desbordamiento,
    emer_evacuacion,emer_puentes,emer_situacion,desp_emer_id,desp_emer_comando,
    desp_emer_municipio,desp_emer_latitud,desp_emer_longitud,desp_emer_lluvia,
    desp_emer_viento,desp_emer_inundaciones,desp_emer_derrumbe,desp_emer_carretera,
    desp_emer_desbordamiento,desp_emer_evacuacion,desp_emer_puentes,desp_emer_situacion,
    accion,usuario,hora)  values (antes.emer_id ,antes.emer_comando ,
    antes.emer_municipio ,antes.emer_latitud ,antes.emer_longitud ,antes.emer_lluvia 
    ,antes.emer_viento ,antes.emer_inundaciones ,antes.emer_derrumbe 
    ,antes.emer_carretera ,antes.emer_desbordamiento ,antes.emer_evacuacion 
    ,antes.emer_puentes ,antes.emer_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_emer_lisa update on "informix".emer_lisa 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_emer_lisa (emer_id,emer_comando,
    emer_municipio,emer_latitud,emer_longitud,emer_lluvia,emer_viento,
    emer_inundaciones,emer_derrumbe,emer_carretera,emer_desbordamiento,
    emer_evacuacion,emer_puentes,emer_situacion,desp_emer_id,desp_emer_comando,
    desp_emer_municipio,desp_emer_latitud,desp_emer_longitud,desp_emer_lluvia,
    desp_emer_viento,desp_emer_inundaciones,desp_emer_derrumbe,desp_emer_carretera,
    desp_emer_desbordamiento,desp_emer_evacuacion,desp_emer_puentes,desp_emer_situacion,
    accion,usuario,hora)  values (antes.emer_id ,antes.emer_comando ,
    antes.emer_municipio ,antes.emer_latitud ,antes.emer_longitud ,antes.emer_lluvia 
    ,antes.emer_viento ,antes.emer_inundaciones ,antes.emer_derrumbe 
    ,antes.emer_carretera ,antes.emer_desbordamiento ,antes.emer_evacuacion 
    ,antes.emer_puentes ,antes.emer_situacion ,luego.emer_id ,luego.emer_comando 
    ,luego.emer_municipio ,luego.emer_latitud ,luego.emer_longitud ,luego.emer_lluvia 
    ,luego.emer_viento ,luego.emer_inundaciones ,luego.emer_derrumbe 
    ,luego.emer_carretera ,luego.emer_desbordamiento ,luego.emer_evacuacion 
    ,luego.emer_puentes ,luego.emer_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_slc_matrimonio insert on "informix"
    .slc_matrimonio referencing new as luego
    for each row
        (
        insert into "informix".aud_slc_matrimonio (mat_id,mat_comando,
    mat_cat1,mat_gra1,mat_arm1,mat_emp1,mat_lugar_civil,mat_lugar_fecha1,
    mat_lugar_religioso,mat_lugar_fecha2,mat_cat2,mat_gra2,mat_arm2,mat_emp2,
    mat_cat3,mat_gra3,mat_arm3,mat_emp3,mat_con_prof,mat_comando2,mat_con_civil,
    mat_dias_fecha1,mat_dias_fecha2,mat_sit,mat_obs,mat_phone,desp_mat_id,
    desp_mat_comando,desp_mat_cat1,desp_mat_gra1,desp_mat_arm1,desp_mat_emp1,
    desp_mat_lugar_civil,desp_mat_lugar_fecha1,desp_mat_lugar_religioso,
    desp_mat_lugar_fecha2,desp_mat_cat2,desp_mat_gra2,desp_mat_arm2,desp_mat_emp2,
    desp_mat_cat3,desp_mat_gra3,desp_mat_arm3,desp_mat_emp3,desp_mat_con_prof,
    desp_mat_comando2,desp_mat_con_civil,desp_mat_dias_fecha1,desp_mat_dias_fecha2,
    desp_mat_sit,desp_mat_obs,desp_mat_phone,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,luego.mat_id ,luego.mat_comando ,luego.mat_cat1 
    ,luego.mat_gra1 ,luego.mat_arm1 ,luego.mat_emp1 ,luego.mat_lugar_civil 
    ,luego.mat_lugar_fecha1 ,luego.mat_lugar_religioso ,luego.mat_lugar_fecha2 
    ,luego.mat_cat2 ,luego.mat_gra2 ,luego.mat_arm2 ,luego.mat_emp2 ,
    luego.mat_cat3 ,luego.mat_gra3 ,luego.mat_arm3 ,luego.mat_emp3 ,luego.mat_con_prof 
    ,luego.mat_comando2 ,luego.mat_con_civil ,luego.mat_dias_fecha1 ,
    luego.mat_dias_fecha2 ,luego.mat_sit ,luego.mat_obs ,luego.mat_phone 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_slc_matrimonio delete on "informix"
    .slc_matrimonio referencing old as antes
    for each row
        (
        insert into "informix".aud_slc_matrimonio (mat_id,mat_comando,
    mat_cat1,mat_gra1,mat_arm1,mat_emp1,mat_lugar_civil,mat_lugar_fecha1,
    mat_lugar_religioso,mat_lugar_fecha2,mat_cat2,mat_gra2,mat_arm2,mat_emp2,
    mat_cat3,mat_gra3,mat_arm3,mat_emp3,mat_con_prof,mat_comando2,mat_con_civil,
    mat_dias_fecha1,mat_dias_fecha2,mat_sit,mat_obs,mat_phone,desp_mat_id,
    desp_mat_comando,desp_mat_cat1,desp_mat_gra1,desp_mat_arm1,desp_mat_emp1,
    desp_mat_lugar_civil,desp_mat_lugar_fecha1,desp_mat_lugar_religioso,
    desp_mat_lugar_fecha2,desp_mat_cat2,desp_mat_gra2,desp_mat_arm2,desp_mat_emp2,
    desp_mat_cat3,desp_mat_gra3,desp_mat_arm3,desp_mat_emp3,desp_mat_con_prof,
    desp_mat_comando2,desp_mat_con_civil,desp_mat_dias_fecha1,desp_mat_dias_fecha2,
    desp_mat_sit,desp_mat_obs,desp_mat_phone,accion,usuario,hora)  values 
    (antes.mat_id ,antes.mat_comando ,antes.mat_cat1 ,antes.mat_gra1 
    ,antes.mat_arm1 ,antes.mat_emp1 ,antes.mat_lugar_civil ,antes.mat_lugar_fecha1 
    ,antes.mat_lugar_religioso ,antes.mat_lugar_fecha2 ,antes.mat_cat2 
    ,antes.mat_gra2 ,antes.mat_arm2 ,antes.mat_emp2 ,antes.mat_cat3 ,
    antes.mat_gra3 ,antes.mat_arm3 ,antes.mat_emp3 ,antes.mat_con_prof 
    ,antes.mat_comando2 ,antes.mat_con_civil ,antes.mat_dias_fecha1 ,
    antes.mat_dias_fecha2 ,antes.mat_sit ,antes.mat_obs ,antes.mat_phone 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_slc_matrimonio update on "informix"
    .slc_matrimonio referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_slc_matrimonio (mat_id,mat_comando,
    mat_cat1,mat_gra1,mat_arm1,mat_emp1,mat_lugar_civil,mat_lugar_fecha1,
    mat_lugar_religioso,mat_lugar_fecha2,mat_cat2,mat_gra2,mat_arm2,mat_emp2,
    mat_cat3,mat_gra3,mat_arm3,mat_emp3,mat_con_prof,mat_comando2,mat_con_civil,
    mat_dias_fecha1,mat_dias_fecha2,mat_sit,mat_obs,mat_phone,desp_mat_id,
    desp_mat_comando,desp_mat_cat1,desp_mat_gra1,desp_mat_arm1,desp_mat_emp1,
    desp_mat_lugar_civil,desp_mat_lugar_fecha1,desp_mat_lugar_religioso,
    desp_mat_lugar_fecha2,desp_mat_cat2,desp_mat_gra2,desp_mat_arm2,desp_mat_emp2,
    desp_mat_cat3,desp_mat_gra3,desp_mat_arm3,desp_mat_emp3,desp_mat_con_prof,
    desp_mat_comando2,desp_mat_con_civil,desp_mat_dias_fecha1,desp_mat_dias_fecha2,
    desp_mat_sit,desp_mat_obs,desp_mat_phone,accion,usuario,hora)  values 
    (antes.mat_id ,antes.mat_comando ,antes.mat_cat1 ,antes.mat_gra1 
    ,antes.mat_arm1 ,antes.mat_emp1 ,antes.mat_lugar_civil ,antes.mat_lugar_fecha1 
    ,antes.mat_lugar_religioso ,antes.mat_lugar_fecha2 ,antes.mat_cat2 
    ,antes.mat_gra2 ,antes.mat_arm2 ,antes.mat_emp2 ,antes.mat_cat3 ,
    antes.mat_gra3 ,antes.mat_arm3 ,antes.mat_emp3 ,antes.mat_con_prof 
    ,antes.mat_comando2 ,antes.mat_con_civil ,antes.mat_dias_fecha1 ,
    antes.mat_dias_fecha2 ,antes.mat_sit ,antes.mat_obs ,antes.mat_phone 
    ,luego.mat_id ,luego.mat_comando ,luego.mat_cat1 ,luego.mat_gra1 
    ,luego.mat_arm1 ,luego.mat_emp1 ,luego.mat_lugar_civil ,luego.mat_lugar_fecha1 
    ,luego.mat_lugar_religioso ,luego.mat_lugar_fecha2 ,luego.mat_cat2 
    ,luego.mat_gra2 ,luego.mat_arm2 ,luego.mat_emp2 ,luego.mat_cat3 ,
    luego.mat_gra3 ,luego.mat_arm3 ,luego.mat_emp3 ,luego.mat_con_prof 
    ,luego.mat_comando2 ,luego.mat_con_civil ,luego.mat_dias_fecha1 ,
    luego.mat_dias_fecha2 ,luego.mat_sit ,luego.mat_obs ,luego.mat_phone 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_slc_mb insert on "informix".slc_mb 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_slc_mb (mb_id,mb_per,mb_cel,
    mb_direc,mb_fec,mb_ini,mb_fin,mb_just,mb_tipo,mb_cmv,mb_sit,desp_mb_id,
    desp_mb_per,desp_mb_cel,desp_mb_direc,desp_mb_fec,desp_mb_ini,desp_mb_fin,
    desp_mb_just,desp_mb_tipo,desp_mb_cmv,desp_mb_sit,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.mb_id ,luego.mb_per 
    ,luego.mb_cel ,luego.mb_direc ,luego.mb_fec ,luego.mb_ini ,luego.mb_fin 
    ,luego.mb_just ,luego.mb_tipo ,luego.mb_cmv ,luego.mb_sit ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_slc_mb delete on "informix".slc_mb 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_slc_mb (mb_id,mb_per,mb_cel,
    mb_direc,mb_fec,mb_ini,mb_fin,mb_just,mb_tipo,mb_cmv,mb_sit,desp_mb_id,
    desp_mb_per,desp_mb_cel,desp_mb_direc,desp_mb_fec,desp_mb_ini,desp_mb_fin,
    desp_mb_just,desp_mb_tipo,desp_mb_cmv,desp_mb_sit,accion,usuario,
    hora)  values (antes.mb_id ,antes.mb_per ,antes.mb_cel ,antes.mb_direc 
    ,antes.mb_fec ,antes.mb_ini ,antes.mb_fin ,antes.mb_just ,antes.mb_tipo 
    ,antes.mb_cmv ,antes.mb_sit ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_slc_mb update on "informix".slc_mb 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_slc_mb (mb_id,mb_per,mb_cel,
    mb_direc,mb_fec,mb_ini,mb_fin,mb_just,mb_tipo,mb_cmv,mb_sit,desp_mb_id,
    desp_mb_per,desp_mb_cel,desp_mb_direc,desp_mb_fec,desp_mb_ini,desp_mb_fin,
    desp_mb_just,desp_mb_tipo,desp_mb_cmv,desp_mb_sit,accion,usuario,
    hora)  values (antes.mb_id ,antes.mb_per ,antes.mb_cel ,antes.mb_direc 
    ,antes.mb_fec ,antes.mb_ini ,antes.mb_fin ,antes.mb_just ,antes.mb_tipo 
    ,antes.mb_cmv ,antes.mb_sit ,luego.mb_id ,luego.mb_per ,luego.mb_cel 
    ,luego.mb_direc ,luego.mb_fec ,luego.mb_ini ,luego.mb_fin ,luego.mb_just 
    ,luego.mb_tipo ,luego.mb_cmv ,luego.mb_sit ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_slc_cmv insert on "informix".slc_cmv 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_slc_cmv (cmv_id,cmv_desc,cmv_tip,
    cmv_obs,cmv_sit,desp_cmv_id,desp_cmv_desc,desp_cmv_tip,desp_cmv_obs,
    desp_cmv_sit,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.cmv_id 
    ,luego.cmv_desc ,luego.cmv_tip ,luego.cmv_obs ,luego.cmv_sit ,'I' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_slc_cmv delete on "informix".slc_cmv 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_slc_cmv (cmv_id,cmv_desc,cmv_tip,
    cmv_obs,cmv_sit,desp_cmv_id,desp_cmv_desc,desp_cmv_tip,desp_cmv_obs,
    desp_cmv_sit,accion,usuario,hora)  values (antes.cmv_id ,antes.cmv_desc 
    ,antes.cmv_tip ,antes.cmv_obs ,antes.cmv_sit ,NULL ,'' ,'' ,'' ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_slc_cmv update on "informix".slc_cmv 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_slc_cmv (cmv_id,cmv_desc,cmv_tip,
    cmv_obs,cmv_sit,desp_cmv_id,desp_cmv_desc,desp_cmv_tip,desp_cmv_obs,
    desp_cmv_sit,accion,usuario,hora)  values (antes.cmv_id ,antes.cmv_desc 
    ,antes.cmv_tip ,antes.cmv_obs ,antes.cmv_sit ,luego.cmv_id ,luego.cmv_desc 
    ,luego.cmv_tip ,luego.cmv_obs ,luego.cmv_sit ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_slc_autorizado insert on "informix"
    .slc_autorizado referencing new as luego
    for each row
        (
        insert into "informix".aud_slc_autorizado (aut_id,aut_tipo,
    aut_solicitud,aut_comando,aut_cat1,aut_gra1,aut_arm1,aut_emp,aut_fecha_hora,
    aut_sit,aut_obs,desp_aut_id,desp_aut_tipo,desp_aut_solicitud,desp_aut_comando,
    desp_aut_cat1,desp_aut_gra1,desp_aut_arm1,desp_aut_emp,desp_aut_fecha_hora,
    desp_aut_sit,desp_aut_obs,accion,usuario,hora)  values (NULL ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.aut_id ,luego.aut_tipo ,luego.aut_solicitud 
    ,luego.aut_comando ,luego.aut_cat1 ,luego.aut_gra1 ,luego.aut_arm1 
    ,luego.aut_emp ,luego.aut_fecha_hora ,luego.aut_sit ,luego.aut_obs 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_slc_autorizado delete on "informix"
    .slc_autorizado referencing old as antes
    for each row
        (
        insert into "informix".aud_slc_autorizado (aut_id,aut_tipo,
    aut_solicitud,aut_comando,aut_cat1,aut_gra1,aut_arm1,aut_emp,aut_fecha_hora,
    aut_sit,aut_obs,desp_aut_id,desp_aut_tipo,desp_aut_solicitud,desp_aut_comando,
    desp_aut_cat1,desp_aut_gra1,desp_aut_arm1,desp_aut_emp,desp_aut_fecha_hora,
    desp_aut_sit,desp_aut_obs,accion,usuario,hora)  values (antes.aut_id 
    ,antes.aut_tipo ,antes.aut_solicitud ,antes.aut_comando ,antes.aut_cat1 
    ,antes.aut_gra1 ,antes.aut_arm1 ,antes.aut_emp ,antes.aut_fecha_hora 
    ,antes.aut_sit ,antes.aut_obs ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_slc_autorizado update on "informix"
    .slc_autorizado referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_slc_autorizado (aut_id,aut_tipo,
    aut_solicitud,aut_comando,aut_cat1,aut_gra1,aut_arm1,aut_emp,aut_fecha_hora,
    aut_sit,aut_obs,desp_aut_id,desp_aut_tipo,desp_aut_solicitud,desp_aut_comando,
    desp_aut_cat1,desp_aut_gra1,desp_aut_arm1,desp_aut_emp,desp_aut_fecha_hora,
    desp_aut_sit,desp_aut_obs,accion,usuario,hora)  values (antes.aut_id 
    ,antes.aut_tipo ,antes.aut_solicitud ,antes.aut_comando ,antes.aut_cat1 
    ,antes.aut_gra1 ,antes.aut_arm1 ,antes.aut_emp ,antes.aut_fecha_hora 
    ,antes.aut_sit ,antes.aut_obs ,luego.aut_id ,luego.aut_tipo ,luego.aut_solicitud 
    ,luego.aut_comando ,luego.aut_cat1 ,luego.aut_gra1 ,luego.aut_arm1 
    ,luego.aut_emp ,luego.aut_fecha_hora ,luego.aut_sit ,luego.aut_obs 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_slc_licencia_temporal insert on 
    "informix".slc_licencia_temporal referencing new as luego
    for each row
        (
        insert into "informix".aud_slc_licencia_temporal (lit_id,
    lit_comando,lit_cat1,lit_cat2,lit_gra1,lit_gra2,lit_arm1,lit_arm2,
    lit_emp,lit_emp2,lit_mes_saldo,lit_mes_sinsaldo,lit_fecha1,lit_fecha2,
    lit_legal,lit_just,lit_salir,lit_sit,lit_obs,lit_phone,desp_lit_id,
    desp_lit_comando,desp_lit_cat1,desp_lit_cat2,desp_lit_gra1,desp_lit_gra2,
    desp_lit_arm1,desp_lit_arm2,desp_lit_emp,desp_lit_emp2,desp_lit_mes_saldo,
    desp_lit_mes_sinsaldo,desp_lit_fecha1,desp_lit_fecha2,desp_lit_legal,
    desp_lit_just,desp_lit_salir,desp_lit_sit,desp_lit_obs,desp_lit_phone,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ::lvarchar(800) ,'' ,'' ,'' ,'' ,luego.lit_id ,luego.lit_comando 
    ,luego.lit_cat1 ,luego.lit_cat2 ,luego.lit_gra1 ,luego.lit_gra2 ,
    luego.lit_arm1 ,luego.lit_arm2 ,luego.lit_emp ,luego.lit_emp2 ,luego.lit_mes_saldo 
    ,luego.lit_mes_sinsaldo ,luego.lit_fecha1 ,luego.lit_fecha2 ,luego.lit_legal 
    ,luego.lit_just ,luego.lit_salir ,luego.lit_sit ,luego.lit_obs ,luego.lit_phone 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_slc_licencia_temporal delete on 
    "informix".slc_licencia_temporal referencing old as antes
    for each row
        (
        insert into "informix".aud_slc_licencia_temporal (lit_id,
    lit_comando,lit_cat1,lit_cat2,lit_gra1,lit_gra2,lit_arm1,lit_arm2,
    lit_emp,lit_emp2,lit_mes_saldo,lit_mes_sinsaldo,lit_fecha1,lit_fecha2,
    lit_legal,lit_just,lit_salir,lit_sit,lit_obs,lit_phone,desp_lit_id,
    desp_lit_comando,desp_lit_cat1,desp_lit_cat2,desp_lit_gra1,desp_lit_gra2,
    desp_lit_arm1,desp_lit_arm2,desp_lit_emp,desp_lit_emp2,desp_lit_mes_saldo,
    desp_lit_mes_sinsaldo,desp_lit_fecha1,desp_lit_fecha2,desp_lit_legal,
    desp_lit_just,desp_lit_salir,desp_lit_sit,desp_lit_obs,desp_lit_phone,
    accion,usuario,hora)  values (antes.lit_id ,antes.lit_comando ,antes.lit_cat1 
    ,antes.lit_cat2 ,antes.lit_gra1 ,antes.lit_gra2 ,antes.lit_arm1 ,
    antes.lit_arm2 ,antes.lit_emp ,antes.lit_emp2 ,antes.lit_mes_saldo 
    ,antes.lit_mes_sinsaldo ,antes.lit_fecha1 ,antes.lit_fecha2 ,antes.lit_legal 
    ,antes.lit_just ,antes.lit_salir ,antes.lit_sit ,antes.lit_obs ,antes.lit_phone 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(800) 
    ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_slc_licencia_temporal update on 
    "informix".slc_licencia_temporal referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_slc_licencia_temporal (lit_id,
    lit_comando,lit_cat1,lit_cat2,lit_gra1,lit_gra2,lit_arm1,lit_arm2,
    lit_emp,lit_emp2,lit_mes_saldo,lit_mes_sinsaldo,lit_fecha1,lit_fecha2,
    lit_legal,lit_just,lit_salir,lit_sit,lit_obs,lit_phone,desp_lit_id,
    desp_lit_comando,desp_lit_cat1,desp_lit_cat2,desp_lit_gra1,desp_lit_gra2,
    desp_lit_arm1,desp_lit_arm2,desp_lit_emp,desp_lit_emp2,desp_lit_mes_saldo,
    desp_lit_mes_sinsaldo,desp_lit_fecha1,desp_lit_fecha2,desp_lit_legal,
    desp_lit_just,desp_lit_salir,desp_lit_sit,desp_lit_obs,desp_lit_phone,
    accion,usuario,hora)  values (antes.lit_id ,antes.lit_comando ,antes.lit_cat1 
    ,antes.lit_cat2 ,antes.lit_gra1 ,antes.lit_gra2 ,antes.lit_arm1 ,
    antes.lit_arm2 ,antes.lit_emp ,antes.lit_emp2 ,antes.lit_mes_saldo 
    ,antes.lit_mes_sinsaldo ,antes.lit_fecha1 ,antes.lit_fecha2 ,antes.lit_legal 
    ,antes.lit_just ,antes.lit_salir ,antes.lit_sit ,antes.lit_obs ,antes.lit_phone 
    ,luego.lit_id ,luego.lit_comando ,luego.lit_cat1 ,luego.lit_cat2 
    ,luego.lit_gra1 ,luego.lit_gra2 ,luego.lit_arm1 ,luego.lit_arm2 ,
    luego.lit_emp ,luego.lit_emp2 ,luego.lit_mes_saldo ,luego.lit_mes_sinsaldo 
    ,luego.lit_fecha1 ,luego.lit_fecha2 ,luego.lit_legal ,luego.lit_just 
    ,luego.lit_salir ,luego.lit_sit ,luego.lit_obs ,luego.lit_phone ,
    'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_slc_protocolo insert on "informix"
    .slc_protocolo referencing new as luego
    for each row
        (
        insert into "informix".aud_slc_protocolo (pco_id,pco_comando,
    pco_cat1,pco_cat2,pco_gra1,pco_gra2,pco_arm1,pco_arm2,pco_emp1,pco_emp2,
    pco_cmbv,pco_civil,pco_hr1,pco_hr2,pco_fecha,pco_dir,pco_just,pco_sit,
    pco_obs,pco_phone,desp_pco_id,desp_pco_comando,desp_pco_cat1,desp_pco_cat2,
    desp_pco_gra1,desp_pco_gra2,desp_pco_arm1,desp_pco_arm2,desp_pco_emp1,
    desp_pco_emp2,desp_pco_cmbv,desp_pco_civil,desp_pco_hr1,desp_pco_hr2,
    desp_pco_fecha,desp_pco_dir,desp_pco_just,desp_pco_sit,desp_pco_obs,
    desp_pco_phone,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(800) ,'' ::lvarchar(800) 
    ,'' ,'' ::lvarchar(800) ,'' ,luego.pco_id ,luego.pco_comando ,luego.pco_cat1 
    ,luego.pco_cat2 ,luego.pco_gra1 ,luego.pco_gra2 ,luego.pco_arm1 ,
    luego.pco_arm2 ,luego.pco_emp1 ,luego.pco_emp2 ,luego.pco_cmbv ,luego.pco_civil 
    ,luego.pco_hr1 ,luego.pco_hr2 ,luego.pco_fecha ,luego.pco_dir ,luego.pco_just 
    ,luego.pco_sit ,luego.pco_obs ,luego.pco_phone ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_slc_protocolo delete on "informix"
    .slc_protocolo referencing old as antes
    for each row
        (
        insert into "informix".aud_slc_protocolo (pco_id,pco_comando,
    pco_cat1,pco_cat2,pco_gra1,pco_gra2,pco_arm1,pco_arm2,pco_emp1,pco_emp2,
    pco_cmbv,pco_civil,pco_hr1,pco_hr2,pco_fecha,pco_dir,pco_just,pco_sit,
    pco_obs,pco_phone,desp_pco_id,desp_pco_comando,desp_pco_cat1,desp_pco_cat2,
    desp_pco_gra1,desp_pco_gra2,desp_pco_arm1,desp_pco_arm2,desp_pco_emp1,
    desp_pco_emp2,desp_pco_cmbv,desp_pco_civil,desp_pco_hr1,desp_pco_hr2,
    desp_pco_fecha,desp_pco_dir,desp_pco_just,desp_pco_sit,desp_pco_obs,
    desp_pco_phone,accion,usuario,hora)  values (antes.pco_id ,antes.pco_comando 
    ,antes.pco_cat1 ,antes.pco_cat2 ,antes.pco_gra1 ,antes.pco_gra2 ,
    antes.pco_arm1 ,antes.pco_arm2 ,antes.pco_emp1 ,antes.pco_emp2 ,antes.pco_cmbv 
    ,antes.pco_civil ,antes.pco_hr1 ,antes.pco_hr2 ,antes.pco_fecha ,
    antes.pco_dir ,antes.pco_just ,antes.pco_sit ,antes.pco_obs ,antes.pco_phone 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(800) 
    ,'' ::lvarchar(800) ,'' ,'' ::lvarchar(800) ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_slc_protocolo update on "informix"
    .slc_protocolo referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_slc_protocolo (pco_id,pco_comando,
    pco_cat1,pco_cat2,pco_gra1,pco_gra2,pco_arm1,pco_arm2,pco_emp1,pco_emp2,
    pco_cmbv,pco_civil,pco_hr1,pco_hr2,pco_fecha,pco_dir,pco_just,pco_sit,
    pco_obs,pco_phone,desp_pco_id,desp_pco_comando,desp_pco_cat1,desp_pco_cat2,
    desp_pco_gra1,desp_pco_gra2,desp_pco_arm1,desp_pco_arm2,desp_pco_emp1,
    desp_pco_emp2,desp_pco_cmbv,desp_pco_civil,desp_pco_hr1,desp_pco_hr2,
    desp_pco_fecha,desp_pco_dir,desp_pco_just,desp_pco_sit,desp_pco_obs,
    desp_pco_phone,accion,usuario,hora)  values (antes.pco_id ,antes.pco_comando 
    ,antes.pco_cat1 ,antes.pco_cat2 ,antes.pco_gra1 ,antes.pco_gra2 ,
    antes.pco_arm1 ,antes.pco_arm2 ,antes.pco_emp1 ,antes.pco_emp2 ,antes.pco_cmbv 
    ,antes.pco_civil ,antes.pco_hr1 ,antes.pco_hr2 ,antes.pco_fecha ,
    antes.pco_dir ,antes.pco_just ,antes.pco_sit ,antes.pco_obs ,antes.pco_phone 
    ,luego.pco_id ,luego.pco_comando ,luego.pco_cat1 ,luego.pco_cat2 
    ,luego.pco_gra1 ,luego.pco_gra2 ,luego.pco_arm1 ,luego.pco_arm2 ,
    luego.pco_emp1 ,luego.pco_emp2 ,luego.pco_cmbv ,luego.pco_civil ,
    luego.pco_hr1 ,luego.pco_hr2 ,luego.pco_fecha ,luego.pco_dir ,luego.pco_just 
    ,luego.pco_sit ,luego.pco_obs ,luego.pco_phone ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_slc_sal_pais insert on "informix"
    .slc_sal_pais referencing new as luego
    for each row
        (
        insert into "informix".aud_slc_sal_pais (sal_id,sal_comando,
    sal_cat1,sal_cat2,sal_gra1,sal_gra2,sal_arm1,sal_arm2,sal_emp,sal_emp2,
    sal_sit,sal_obs,sal_phone,sal_fecha_autorizado,sal_goce,desp_sal_id,
    desp_sal_comando,desp_sal_cat1,desp_sal_cat2,desp_sal_gra1,desp_sal_gra2,
    desp_sal_arm1,desp_sal_arm2,desp_sal_emp,desp_sal_emp2,desp_sal_sit,
    desp_sal_obs,desp_sal_phone,desp_sal_fecha_autorizado,desp_sal_goce,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ::lvarchar(800) ,'' ,'' ,'' ,luego.sal_id ,luego.sal_comando ,luego.sal_cat1 
    ,luego.sal_cat2 ,luego.sal_gra1 ,luego.sal_gra2 ,luego.sal_arm1 ,
    luego.sal_arm2 ,luego.sal_emp ,luego.sal_emp2 ,luego.sal_sit ,luego.sal_obs 
    ,luego.sal_phone ,luego.sal_fecha_autorizado ,luego.sal_goce ,'I' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_slc_sal_pais delete on "informix"
    .slc_sal_pais referencing old as antes
    for each row
        (
        insert into "informix".aud_slc_sal_pais (sal_id,sal_comando,
    sal_cat1,sal_cat2,sal_gra1,sal_gra2,sal_arm1,sal_arm2,sal_emp,sal_emp2,
    sal_sit,sal_obs,sal_phone,sal_fecha_autorizado,sal_goce,desp_sal_id,
    desp_sal_comando,desp_sal_cat1,desp_sal_cat2,desp_sal_gra1,desp_sal_gra2,
    desp_sal_arm1,desp_sal_arm2,desp_sal_emp,desp_sal_emp2,desp_sal_sit,
    desp_sal_obs,desp_sal_phone,desp_sal_fecha_autorizado,desp_sal_goce,
    accion,usuario,hora)  values (antes.sal_id ,antes.sal_comando ,antes.sal_cat1 
    ,antes.sal_cat2 ,antes.sal_gra1 ,antes.sal_gra2 ,antes.sal_arm1 ,
    antes.sal_arm2 ,antes.sal_emp ,antes.sal_emp2 ,antes.sal_sit ,antes.sal_obs 
    ,antes.sal_phone ,antes.sal_fecha_autorizado ,antes.sal_goce ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(800) ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_slc_sal_pais update on "informix"
    .slc_sal_pais referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_slc_sal_pais (sal_id,sal_comando,
    sal_cat1,sal_cat2,sal_gra1,sal_gra2,sal_arm1,sal_arm2,sal_emp,sal_emp2,
    sal_sit,sal_obs,sal_phone,sal_fecha_autorizado,sal_goce,desp_sal_id,
    desp_sal_comando,desp_sal_cat1,desp_sal_cat2,desp_sal_gra1,desp_sal_gra2,
    desp_sal_arm1,desp_sal_arm2,desp_sal_emp,desp_sal_emp2,desp_sal_sit,
    desp_sal_obs,desp_sal_phone,desp_sal_fecha_autorizado,desp_sal_goce,
    accion,usuario,hora)  values (antes.sal_id ,antes.sal_comando ,antes.sal_cat1 
    ,antes.sal_cat2 ,antes.sal_gra1 ,antes.sal_gra2 ,antes.sal_arm1 ,
    antes.sal_arm2 ,antes.sal_emp ,antes.sal_emp2 ,antes.sal_sit ,antes.sal_obs 
    ,antes.sal_phone ,antes.sal_fecha_autorizado ,antes.sal_goce ,luego.sal_id 
    ,luego.sal_comando ,luego.sal_cat1 ,luego.sal_cat2 ,luego.sal_gra1 
    ,luego.sal_gra2 ,luego.sal_arm1 ,luego.sal_arm2 ,luego.sal_emp ,luego.sal_emp2 
    ,luego.sal_sit ,luego.sal_obs ,luego.sal_phone ,luego.sal_fecha_autorizado 
    ,luego.sal_goce ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_slc_dsal_fechas insert on "informix"
    .slc_dsal_fechas referencing new as luego
    for each row
        (
        insert into "informix".aud_slc_dsal_fechas (dsal_id,dsal_tip_uso,
    dsal_sol_cod,dsal_salida,dsal_ingreso,dsal_ciudad,dsal_pais,dsal_via,
    dsal_obs,dsal_sit,desp_dsal_id,desp_dsal_tip_uso,desp_dsal_sol_cod,
    desp_dsal_salida,desp_dsal_ingreso,desp_dsal_ciudad,desp_dsal_pais,
    desp_dsal_via,desp_dsal_obs,desp_dsal_sit,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.dsal_id ,luego.dsal_tip_uso 
    ,luego.dsal_sol_cod ,luego.dsal_salida ,luego.dsal_ingreso ,luego.dsal_ciudad 
    ,luego.dsal_pais ,luego.dsal_via ,luego.dsal_obs ,luego.dsal_sit 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_slc_dsal_fechas delete on "informix"
    .slc_dsal_fechas referencing old as antes
    for each row
        (
        insert into "informix".aud_slc_dsal_fechas (dsal_id,dsal_tip_uso,
    dsal_sol_cod,dsal_salida,dsal_ingreso,dsal_ciudad,dsal_pais,dsal_via,
    dsal_obs,dsal_sit,desp_dsal_id,desp_dsal_tip_uso,desp_dsal_sol_cod,
    desp_dsal_salida,desp_dsal_ingreso,desp_dsal_ciudad,desp_dsal_pais,
    desp_dsal_via,desp_dsal_obs,desp_dsal_sit,accion,usuario,hora)  values 
    (antes.dsal_id ,antes.dsal_tip_uso ,antes.dsal_sol_cod ,antes.dsal_salida 
    ,antes.dsal_ingreso ,antes.dsal_ciudad ,antes.dsal_pais ,antes.dsal_via 
    ,antes.dsal_obs ,antes.dsal_sit ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_slc_dsal_fechas update on "informix"
    .slc_dsal_fechas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_slc_dsal_fechas (dsal_id,dsal_tip_uso,
    dsal_sol_cod,dsal_salida,dsal_ingreso,dsal_ciudad,dsal_pais,dsal_via,
    dsal_obs,dsal_sit,desp_dsal_id,desp_dsal_tip_uso,desp_dsal_sol_cod,
    desp_dsal_salida,desp_dsal_ingreso,desp_dsal_ciudad,desp_dsal_pais,
    desp_dsal_via,desp_dsal_obs,desp_dsal_sit,accion,usuario,hora)  values 
    (antes.dsal_id ,antes.dsal_tip_uso ,antes.dsal_sol_cod ,antes.dsal_salida 
    ,antes.dsal_ingreso ,antes.dsal_ciudad ,antes.dsal_pais ,antes.dsal_via 
    ,antes.dsal_obs ,antes.dsal_sit ,luego.dsal_id ,luego.dsal_tip_uso 
    ,luego.dsal_sol_cod ,luego.dsal_salida ,luego.dsal_ingreso ,luego.dsal_ciudad 
    ,luego.dsal_pais ,luego.dsal_via ,luego.dsal_obs ,luego.dsal_sit 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ciber_temas insert on "informix"
    .ciber_temas referencing new as luego
    for each row
        (
        insert into "informix".aud_ciber_temas (tema_id,tema_nombre,
    tema_situacion,desp_tema_id,desp_tema_nombre,desp_tema_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.tema_id ,luego.tema_nombre 
    ,luego.tema_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ciber_temas delete on "informix"
    .ciber_temas referencing old as antes
    for each row
        (
        insert into "informix".aud_ciber_temas (tema_id,tema_nombre,
    tema_situacion,desp_tema_id,desp_tema_nombre,desp_tema_situacion,
    accion,usuario,hora)  values (antes.tema_id ,antes.tema_nombre ,antes.tema_situacion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ciber_temas update on "informix"
    .ciber_temas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ciber_temas (tema_id,tema_nombre,
    tema_situacion,desp_tema_id,desp_tema_nombre,desp_tema_situacion,
    accion,usuario,hora)  values (antes.tema_id ,antes.tema_nombre ,antes.tema_situacion 
    ,luego.tema_id ,luego.tema_nombre ,luego.tema_situacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ciber_subtemas insert on "informix"
    .ciber_subtemas referencing new as luego
    for each row
        (
        insert into "informix".aud_ciber_subtemas (subtema_id,
    subtema_tema,subtema_nombre,subtema_situacion,desp_subtema_id,desp_subtema_tema,
    desp_subtema_nombre,desp_subtema_situacion,accion,usuario,hora)  
    values (NULL ,'' ,'' ,'' ,luego.subtema_id ,luego.subtema_tema ,luego.subtema_nombre 
    ,luego.subtema_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_ciber_subtemas delete on "informix"
    .ciber_subtemas referencing old as antes
    for each row
        (
        insert into "informix".aud_ciber_subtemas (subtema_id,
    subtema_tema,subtema_nombre,subtema_situacion,desp_subtema_id,desp_subtema_tema,
    desp_subtema_nombre,desp_subtema_situacion,accion,usuario,hora)  
    values (antes.subtema_id ,antes.subtema_tema ,antes.subtema_nombre 
    ,antes.subtema_situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_ciber_subtemas update on "informix"
    .ciber_subtemas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ciber_subtemas (subtema_id,
    subtema_tema,subtema_nombre,subtema_situacion,desp_subtema_id,desp_subtema_tema,
    desp_subtema_nombre,desp_subtema_situacion,accion,usuario,hora)  
    values (antes.subtema_id ,antes.subtema_tema ,antes.subtema_nombre 
    ,antes.subtema_situacion ,luego.subtema_id ,luego.subtema_tema ,luego.subtema_nombre 
    ,luego.subtema_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_ciber_preguntas insert on "informix"
    .ciber_preguntas referencing new as luego
    for each row
        (
        insert into "informix".aud_ciber_preguntas (pregunta_id,
    pregunta_subtema,pregunta_descripcion,pregunta_situacion,desp_pregunta_id,
    desp_pregunta_subtema,desp_pregunta_descripcion,desp_pregunta_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ::lvarchar(2048) ,'' ,luego.pregunta_id 
    ,luego.pregunta_subtema ,luego.pregunta_descripcion ,luego.pregunta_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ciber_preguntas delete on "informix"
    .ciber_preguntas referencing old as antes
    for each row
        (
        insert into "informix".aud_ciber_preguntas (pregunta_id,
    pregunta_subtema,pregunta_descripcion,pregunta_situacion,desp_pregunta_id,
    desp_pregunta_subtema,desp_pregunta_descripcion,desp_pregunta_situacion,
    accion,usuario,hora)  values (antes.pregunta_id ,antes.pregunta_subtema 
    ,antes.pregunta_descripcion ,antes.pregunta_situacion ,NULL ,'' ,''
     ::lvarchar(2048) ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ciber_preguntas update on "informix"
    .ciber_preguntas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ciber_preguntas (pregunta_id,
    pregunta_subtema,pregunta_descripcion,pregunta_situacion,desp_pregunta_id,
    desp_pregunta_subtema,desp_pregunta_descripcion,desp_pregunta_situacion,
    accion,usuario,hora)  values (antes.pregunta_id ,antes.pregunta_subtema 
    ,antes.pregunta_descripcion ,antes.pregunta_situacion ,luego.pregunta_id 
    ,luego.pregunta_subtema ,luego.pregunta_descripcion ,luego.pregunta_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ciber_respuestas insert on "informix"
    .ciber_respuestas referencing new as luego
    for each row
        (
        insert into "informix".aud_ciber_respuestas (respuesta_id,
    respuesta_pregunta,respuesta_descripcion,respuesta_correcta,respuesta_situacion,
    desp_respuesta_id,desp_respuesta_pregunta,desp_respuesta_descripcion,
    desp_respuesta_correcta,desp_respuesta_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ::lvarchar(2048) ,'' ,'' ,luego.respuesta_id ,luego.respuesta_pregunta 
    ,luego.respuesta_descripcion ,luego.respuesta_correcta ,luego.respuesta_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ciber_respuestas delete on "informix"
    .ciber_respuestas referencing old as antes
    for each row
        (
        insert into "informix".aud_ciber_respuestas (respuesta_id,
    respuesta_pregunta,respuesta_descripcion,respuesta_correcta,respuesta_situacion,
    desp_respuesta_id,desp_respuesta_pregunta,desp_respuesta_descripcion,
    desp_respuesta_correcta,desp_respuesta_situacion,accion,usuario,hora) 
     values (antes.respuesta_id ,antes.respuesta_pregunta ,antes.respuesta_descripcion 
    ,antes.respuesta_correcta ,antes.respuesta_situacion ,NULL ,'' ,'' 
    ::lvarchar(2048) ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_ciber_respuestas update on "informix"
    .ciber_respuestas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ciber_respuestas (respuesta_id,
    respuesta_pregunta,respuesta_descripcion,respuesta_correcta,respuesta_situacion,
    desp_respuesta_id,desp_respuesta_pregunta,desp_respuesta_descripcion,
    desp_respuesta_correcta,desp_respuesta_situacion,accion,usuario,hora) 
     values (antes.respuesta_id ,antes.respuesta_pregunta ,antes.respuesta_descripcion 
    ,antes.respuesta_correcta ,antes.respuesta_situacion ,luego.respuesta_id 
    ,luego.respuesta_pregunta ,luego.respuesta_descripcion ,luego.respuesta_correcta 
    ,luego.respuesta_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_ciber_evaluaciones insert on "informix"
    .ciber_evaluaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_ciber_evaluaciones (evaluacion_id,
    evaluacion_usuario,evaluacion_fecha,evaluacion_modulo,evaluacion_situacion,
    desp_evaluacion_id,desp_evaluacion_usuario,desp_evaluacion_fecha,
    desp_evaluacion_modulo,desp_evaluacion_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,luego.evaluacion_id ,luego.evaluacion_usuario 
    ,luego.evaluacion_fecha ,luego.evaluacion_modulo ,luego.evaluacion_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ciber_evaluaciones delete on "informix"
    .ciber_evaluaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_ciber_evaluaciones (evaluacion_id,
    evaluacion_usuario,evaluacion_fecha,evaluacion_modulo,evaluacion_situacion,
    desp_evaluacion_id,desp_evaluacion_usuario,desp_evaluacion_fecha,
    desp_evaluacion_modulo,desp_evaluacion_situacion,accion,usuario,hora) 
     values (antes.evaluacion_id ,antes.evaluacion_usuario ,antes.evaluacion_fecha 
    ,antes.evaluacion_modulo ,antes.evaluacion_situacion ,NULL ,'' ,'' 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ciber_evaluaciones update on "informix"
    .ciber_evaluaciones referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_ciber_evaluaciones (evaluacion_id,
    evaluacion_usuario,evaluacion_fecha,evaluacion_modulo,evaluacion_situacion,
    desp_evaluacion_id,desp_evaluacion_usuario,desp_evaluacion_fecha,
    desp_evaluacion_modulo,desp_evaluacion_situacion,accion,usuario,hora) 
     values (antes.evaluacion_id ,antes.evaluacion_usuario ,antes.evaluacion_fecha 
    ,antes.evaluacion_modulo ,antes.evaluacion_situacion ,luego.evaluacion_id 
    ,luego.evaluacion_usuario ,luego.evaluacion_fecha ,luego.evaluacion_modulo 
    ,luego.evaluacion_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_ciber_detalle_evaluaciones insert 
    on "informix".ciber_detalle_evaluaciones referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_ciber_detalle_evaluaciones 
    (detalle_id,detalle_evaluacion,detalle_respuesta,detalle_situacion,
    desp_detalle_id,desp_detalle_evaluacion,desp_detalle_respuesta,desp_detalle_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.detalle_id ,luego.detalle_evaluacion 
    ,luego.detalle_respuesta ,luego.detalle_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_ciber_detalle_evaluaciones delete 
    on "informix".ciber_detalle_evaluaciones referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_ciber_detalle_evaluaciones 
    (detalle_id,detalle_evaluacion,detalle_respuesta,detalle_situacion,
    desp_detalle_id,desp_detalle_evaluacion,desp_detalle_respuesta,desp_detalle_situacion,
    accion,usuario,hora)  values (antes.detalle_id ,antes.detalle_evaluacion 
    ,antes.detalle_respuesta ,antes.detalle_situacion ,NULL ,'' ,'' ,'' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ciber_detalle_evaluaciones update 
    on "informix".ciber_detalle_evaluaciones referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_ciber_detalle_evaluaciones 
    (detalle_id,detalle_evaluacion,detalle_respuesta,detalle_situacion,
    desp_detalle_id,desp_detalle_evaluacion,desp_detalle_respuesta,desp_detalle_situacion,
    accion,usuario,hora)  values (antes.detalle_id ,antes.detalle_evaluacion 
    ,antes.detalle_respuesta ,antes.detalle_situacion ,luego.detalle_id 
    ,luego.detalle_evaluacion ,luego.detalle_respuesta ,luego.detalle_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ciber_usuarios insert on "informix"
    .ciber_usuarios referencing new as luego
    for each row
        (
        insert into "informix".aud_ciber_usuarios (usu_id,usu_correo,
    usu_password,usu_rol,usu_catalogo,usu_registro,usu_token,usu_diploma,
    usu_fecha_diploma,usu_situacion,desp_usu_id,desp_usu_correo,desp_usu_password,
    desp_usu_rol,desp_usu_catalogo,desp_usu_registro,desp_usu_token,desp_usu_diploma,
    desp_usu_fecha_diploma,desp_usu_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.usu_id ,luego.usu_correo 
    ,luego.usu_password ,luego.usu_rol ,luego.usu_catalogo ,luego.usu_registro 
    ,luego.usu_token ,luego.usu_diploma ,luego.usu_fecha_diploma ,luego.usu_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ciber_usuarios delete on "informix"
    .ciber_usuarios referencing old as antes
    for each row
        (
        insert into "informix".aud_ciber_usuarios (usu_id,usu_correo,
    usu_password,usu_rol,usu_catalogo,usu_registro,usu_token,usu_diploma,
    usu_fecha_diploma,usu_situacion,desp_usu_id,desp_usu_correo,desp_usu_password,
    desp_usu_rol,desp_usu_catalogo,desp_usu_registro,desp_usu_token,desp_usu_diploma,
    desp_usu_fecha_diploma,desp_usu_situacion,accion,usuario,hora)  values 
    (antes.usu_id ,antes.usu_correo ,antes.usu_password ,antes.usu_rol 
    ,antes.usu_catalogo ,antes.usu_registro ,antes.usu_token ,antes.usu_diploma 
    ,antes.usu_fecha_diploma ,antes.usu_situacion ,NULL ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ciber_usuarios update on "informix"
    .ciber_usuarios referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ciber_usuarios (usu_id,usu_correo,
    usu_password,usu_rol,usu_catalogo,usu_registro,usu_token,usu_diploma,
    usu_fecha_diploma,usu_situacion,desp_usu_id,desp_usu_correo,desp_usu_password,
    desp_usu_rol,desp_usu_catalogo,desp_usu_registro,desp_usu_token,desp_usu_diploma,
    desp_usu_fecha_diploma,desp_usu_situacion,accion,usuario,hora)  values 
    (antes.usu_id ,antes.usu_correo ,antes.usu_password ,antes.usu_rol 
    ,antes.usu_catalogo ,antes.usu_registro ,antes.usu_token ,antes.usu_diploma 
    ,antes.usu_fecha_diploma ,antes.usu_situacion ,luego.usu_id ,luego.usu_correo 
    ,luego.usu_password ,luego.usu_rol ,luego.usu_catalogo ,luego.usu_registro 
    ,luego.usu_token ,luego.usu_diploma ,luego.usu_fecha_diploma ,luego.usu_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_smm_banda insert on "informix".smm_banda 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_smm_banda (smm_banda_id,smm_banda_banda,
    smm_banda_situacion,desp_smm_banda_id,desp_smm_banda_banda,desp_smm_banda_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.smm_banda_id ,luego.smm_banda_banda 
    ,luego.smm_banda_situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_smm_banda delete on "informix".smm_banda 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_smm_banda (smm_banda_id,smm_banda_banda,
    smm_banda_situacion,desp_smm_banda_id,desp_smm_banda_banda,desp_smm_banda_situacion,
    accion,usuario,hora)  values (antes.smm_banda_id ,antes.smm_banda_banda 
    ,antes.smm_banda_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_smm_banda update on "informix".smm_banda 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_smm_banda (smm_banda_id,smm_banda_banda,
    smm_banda_situacion,desp_smm_banda_id,desp_smm_banda_banda,desp_smm_banda_situacion,
    accion,usuario,hora)  values (antes.smm_banda_id ,antes.smm_banda_banda 
    ,antes.smm_banda_situacion ,luego.smm_banda_id ,luego.smm_banda_banda 
    ,luego.smm_banda_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_smm_actividad insert on "informix"
    .smm_actividad referencing new as luego
    for each row
        (
        insert into "informix".aud_smm_actividad (smm_actividad_id,
    smm_actividad_actividad,smm_actividad_situacion,desp_smm_actividad_id,
    desp_smm_actividad_actividad,desp_smm_actividad_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.smm_actividad_id ,luego.smm_actividad_actividad 
    ,luego.smm_actividad_situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_smm_actividad delete on "informix"
    .smm_actividad referencing old as antes
    for each row
        (
        insert into "informix".aud_smm_actividad (smm_actividad_id,
    smm_actividad_actividad,smm_actividad_situacion,desp_smm_actividad_id,
    desp_smm_actividad_actividad,desp_smm_actividad_situacion,accion,
    usuario,hora)  values (antes.smm_actividad_id ,antes.smm_actividad_actividad 
    ,antes.smm_actividad_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_smm_actividad update on "informix"
    .smm_actividad referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_smm_actividad (smm_actividad_id,
    smm_actividad_actividad,smm_actividad_situacion,desp_smm_actividad_id,
    desp_smm_actividad_actividad,desp_smm_actividad_situacion,accion,
    usuario,hora)  values (antes.smm_actividad_id ,antes.smm_actividad_actividad 
    ,antes.smm_actividad_situacion ,luego.smm_actividad_id ,luego.smm_actividad_actividad 
    ,luego.smm_actividad_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_opaf_carrera1 insert on "informix"
    .opaf_carrera1 referencing new as luego
    for each row
        (
        insert into "informix".aud_opaf_carrera1 (car_edad,car_sexo,
    car_tiempo,car_punteo,desp_car_edad,desp_car_sexo,desp_car_tiempo,
    desp_car_punteo,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.car_edad 
    ,luego.car_sexo ,luego.car_tiempo ,luego.car_punteo ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_opaf_carrera1 delete on "informix"
    .opaf_carrera1 referencing old as antes
    for each row
        (
        insert into "informix".aud_opaf_carrera1 (car_edad,car_sexo,
    car_tiempo,car_punteo,desp_car_edad,desp_car_sexo,desp_car_tiempo,
    desp_car_punteo,accion,usuario,hora)  values (antes.car_edad ,antes.car_sexo 
    ,antes.car_tiempo ,antes.car_punteo ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_opaf_carrera1 update on "informix"
    .opaf_carrera1 referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_opaf_carrera1 (car_edad,car_sexo,
    car_tiempo,car_punteo,desp_car_edad,desp_car_sexo,desp_car_tiempo,
    desp_car_punteo,accion,usuario,hora)  values (antes.car_edad ,antes.car_sexo 
    ,antes.car_tiempo ,antes.car_punteo ,luego.car_edad ,luego.car_sexo 
    ,luego.car_tiempo ,luego.car_punteo ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_smm_reporte insert on "informix"
    .smm_reporte referencing new as luego
    for each row
        (
        insert into "informix".aud_smm_reporte (smm_reporte_id,
    smm_reporte_nombre,smm_reporte_comision,smm_reporte_civil,smm_reporte_motivo,
    smm_reporte_cantidad,smm_reporte_fecha,smm_reporte_horain,smm_reporte_horafin,
    smm_reporte_situacion,desp_smm_reporte_id,desp_smm_reporte_nombre,
    desp_smm_reporte_comision,desp_smm_reporte_civil,desp_smm_reporte_motivo,
    desp_smm_reporte_cantidad,desp_smm_reporte_fecha,desp_smm_reporte_horain,
    desp_smm_reporte_horafin,desp_smm_reporte_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.smm_reporte_id 
    ,luego.smm_reporte_nombre ,luego.smm_reporte_comision ,luego.smm_reporte_civil 
    ,luego.smm_reporte_motivo ,luego.smm_reporte_cantidad ,luego.smm_reporte_fecha 
    ,luego.smm_reporte_horain ,luego.smm_reporte_horafin ,luego.smm_reporte_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_smm_reporte delete on "informix"
    .smm_reporte referencing old as antes
    for each row
        (
        insert into "informix".aud_smm_reporte (smm_reporte_id,
    smm_reporte_nombre,smm_reporte_comision,smm_reporte_civil,smm_reporte_motivo,
    smm_reporte_cantidad,smm_reporte_fecha,smm_reporte_horain,smm_reporte_horafin,
    smm_reporte_situacion,desp_smm_reporte_id,desp_smm_reporte_nombre,
    desp_smm_reporte_comision,desp_smm_reporte_civil,desp_smm_reporte_motivo,
    desp_smm_reporte_cantidad,desp_smm_reporte_fecha,desp_smm_reporte_horain,
    desp_smm_reporte_horafin,desp_smm_reporte_situacion,accion,usuario,
    hora)  values (antes.smm_reporte_id ,antes.smm_reporte_nombre ,antes.smm_reporte_comision 
    ,antes.smm_reporte_civil ,antes.smm_reporte_motivo ,antes.smm_reporte_cantidad 
    ,antes.smm_reporte_fecha ,antes.smm_reporte_horain ,antes.smm_reporte_horafin 
    ,antes.smm_reporte_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_smm_reporte update on "informix"
    .smm_reporte referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_smm_reporte (smm_reporte_id,
    smm_reporte_nombre,smm_reporte_comision,smm_reporte_civil,smm_reporte_motivo,
    smm_reporte_cantidad,smm_reporte_fecha,smm_reporte_horain,smm_reporte_horafin,
    smm_reporte_situacion,desp_smm_reporte_id,desp_smm_reporte_nombre,
    desp_smm_reporte_comision,desp_smm_reporte_civil,desp_smm_reporte_motivo,
    desp_smm_reporte_cantidad,desp_smm_reporte_fecha,desp_smm_reporte_horain,
    desp_smm_reporte_horafin,desp_smm_reporte_situacion,accion,usuario,
    hora)  values (antes.smm_reporte_id ,antes.smm_reporte_nombre ,antes.smm_reporte_comision 
    ,antes.smm_reporte_civil ,antes.smm_reporte_motivo ,antes.smm_reporte_cantidad 
    ,antes.smm_reporte_fecha ,antes.smm_reporte_horain ,antes.smm_reporte_horafin 
    ,antes.smm_reporte_situacion ,luego.smm_reporte_id ,luego.smm_reporte_nombre 
    ,luego.smm_reporte_comision ,luego.smm_reporte_civil ,luego.smm_reporte_motivo 
    ,luego.smm_reporte_cantidad ,luego.smm_reporte_fecha ,luego.smm_reporte_horain 
    ,luego.smm_reporte_horafin ,luego.smm_reporte_situacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esip_fuente_financiamiento insert 
    on "informix".esip_fuente_financiamiento referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_esip_fuente_financiamiento 
    (fuentefi_fuente,fuentefi_descripcion,fuentefi_observaciones,fuentefi_situacion,
    desp_fuentefi_fuente,desp_fuentefi_descripcion,desp_fuentefi_observaciones,
    desp_fuentefi_situacion,accion,usuario,hora)  values (NULL ,'' ,'' 
    ,'' ,luego.fuentefi_fuente ,luego.fuentefi_descripcion ,luego.fuentefi_observaciones 
    ,luego.fuentefi_situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_esip_fuente_financiamiento delete 
    on "informix".esip_fuente_financiamiento referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_esip_fuente_financiamiento 
    (fuentefi_fuente,fuentefi_descripcion,fuentefi_observaciones,fuentefi_situacion,
    desp_fuentefi_fuente,desp_fuentefi_descripcion,desp_fuentefi_observaciones,
    desp_fuentefi_situacion,accion,usuario,hora)  values (antes.fuentefi_fuente 
    ,antes.fuentefi_descripcion ,antes.fuentefi_observaciones ,antes.fuentefi_situacion 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_esip_fuente_financiamiento update 
    on "informix".esip_fuente_financiamiento referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_esip_fuente_financiamiento 
    (fuentefi_fuente,fuentefi_descripcion,fuentefi_observaciones,fuentefi_situacion,
    desp_fuentefi_fuente,desp_fuentefi_descripcion,desp_fuentefi_observaciones,
    desp_fuentefi_situacion,accion,usuario,hora)  values (antes.fuentefi_fuente 
    ,antes.fuentefi_descripcion ,antes.fuentefi_observaciones ,antes.fuentefi_situacion 
    ,luego.fuentefi_fuente ,luego.fuentefi_descripcion ,luego.fuentefi_observaciones 
    ,luego.fuentefi_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_esip_grupo_gasto insert on "informix"
    .esip_grupo_gasto referencing new as luego
    for each row
        (
        insert into "informix".aud_esip_grupo_gasto (grupoga_grupo,
    grupoga_descripcion,grupoga_observaciones,grupoga_situacion,desp_grupoga_grupo,
    desp_grupoga_descripcion,desp_grupoga_observaciones,desp_grupoga_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.grupoga_grupo 
    ,luego.grupoga_descripcion ,luego.grupoga_observaciones ,luego.grupoga_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esip_grupo_gasto delete on "informix"
    .esip_grupo_gasto referencing old as antes
    for each row
        (
        insert into "informix".aud_esip_grupo_gasto (grupoga_grupo,
    grupoga_descripcion,grupoga_observaciones,grupoga_situacion,desp_grupoga_grupo,
    desp_grupoga_descripcion,desp_grupoga_observaciones,desp_grupoga_situacion,
    accion,usuario,hora)  values (antes.grupoga_grupo ,antes.grupoga_descripcion 
    ,antes.grupoga_observaciones ,antes.grupoga_situacion ,NULL ,'' ,''
     ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_esip_grupo_gasto update on "informix"
    .esip_grupo_gasto referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_esip_grupo_gasto (grupoga_grupo,
    grupoga_descripcion,grupoga_observaciones,grupoga_situacion,desp_grupoga_grupo,
    desp_grupoga_descripcion,desp_grupoga_observaciones,desp_grupoga_situacion,
    accion,usuario,hora)  values (antes.grupoga_grupo ,antes.grupoga_descripcion 
    ,antes.grupoga_observaciones ,antes.grupoga_situacion ,luego.grupoga_grupo 
    ,luego.grupoga_descripcion ,luego.grupoga_observaciones ,luego.grupoga_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esip_planes_basicos insert on "informix"
    .esip_planes_basicos referencing new as luego
    for each row
        (
        insert into "informix".aud_esip_planes_basicos (planb_id,
    planb_nombre_proyecto,planb_fecha,planb_periodo,planb_dep,planb_costo,
    planb_prioridad,planb_justificacion,planb_observaciones,planb_plan_basico,
    planb_situacion,desp_planb_id,desp_planb_nombre_proyecto,desp_planb_fecha,
    desp_planb_periodo,desp_planb_dep,desp_planb_costo,desp_planb_prioridad,
    desp_planb_justificacion,desp_planb_observaciones,desp_planb_plan_basico,
    desp_planb_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.planb_id ,luego.planb_nombre_proyecto 
    ,luego.planb_fecha ,luego.planb_periodo ,luego.planb_dep ,luego.planb_costo 
    ,luego.planb_prioridad ,luego.planb_justificacion ,luego.planb_observaciones 
    ,luego.planb_plan_basico ,luego.planb_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_esip_planes_basicos delete on "informix"
    .esip_planes_basicos referencing old as antes
    for each row
        (
        insert into "informix".aud_esip_planes_basicos (planb_id,
    planb_nombre_proyecto,planb_fecha,planb_periodo,planb_dep,planb_costo,
    planb_prioridad,planb_justificacion,planb_observaciones,planb_plan_basico,
    planb_situacion,desp_planb_id,desp_planb_nombre_proyecto,desp_planb_fecha,
    desp_planb_periodo,desp_planb_dep,desp_planb_costo,desp_planb_prioridad,
    desp_planb_justificacion,desp_planb_observaciones,desp_planb_plan_basico,
    desp_planb_situacion,accion,usuario,hora)  values (antes.planb_id 
    ,antes.planb_nombre_proyecto ,antes.planb_fecha ,antes.planb_periodo 
    ,antes.planb_dep ,antes.planb_costo ,antes.planb_prioridad ,antes.planb_justificacion 
    ,antes.planb_observaciones ,antes.planb_plan_basico ,antes.planb_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_esip_planes_basicos update on "informix"
    .esip_planes_basicos referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_esip_planes_basicos (planb_id,
    planb_nombre_proyecto,planb_fecha,planb_periodo,planb_dep,planb_costo,
    planb_prioridad,planb_justificacion,planb_observaciones,planb_plan_basico,
    planb_situacion,desp_planb_id,desp_planb_nombre_proyecto,desp_planb_fecha,
    desp_planb_periodo,desp_planb_dep,desp_planb_costo,desp_planb_prioridad,
    desp_planb_justificacion,desp_planb_observaciones,desp_planb_plan_basico,
    desp_planb_situacion,accion,usuario,hora)  values (antes.planb_id 
    ,antes.planb_nombre_proyecto ,antes.planb_fecha ,antes.planb_periodo 
    ,antes.planb_dep ,antes.planb_costo ,antes.planb_prioridad ,antes.planb_justificacion 
    ,antes.planb_observaciones ,antes.planb_plan_basico ,antes.planb_situacion 
    ,luego.planb_id ,luego.planb_nombre_proyecto ,luego.planb_fecha ,
    luego.planb_periodo ,luego.planb_dep ,luego.planb_costo ,luego.planb_prioridad 
    ,luego.planb_justificacion ,luego.planb_observaciones ,luego.planb_plan_basico 
    ,luego.planb_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_esip_paquetes_logisticos insert 
    on "informix".esip_paquetes_logisticos referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_esip_paquetes_logisticos (paquetes_id,
    paquetes_plan_basico,paquetes_unidad_tecnica,paquetes_observaciones,
    paquetes_situacion,desp_paquetes_id,desp_paquetes_plan_basico,desp_paquetes_unidad_tecnica,
    desp_paquetes_observaciones,desp_paquetes_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.paquetes_id ,luego.paquetes_plan_basico 
    ,luego.paquetes_unidad_tecnica ,luego.paquetes_observaciones ,luego.paquetes_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esip_paquetes_logisticos delete 
    on "informix".esip_paquetes_logisticos referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_esip_paquetes_logisticos (paquetes_id,
    paquetes_plan_basico,paquetes_unidad_tecnica,paquetes_observaciones,
    paquetes_situacion,desp_paquetes_id,desp_paquetes_plan_basico,desp_paquetes_unidad_tecnica,
    desp_paquetes_observaciones,desp_paquetes_situacion,accion,usuario,
    hora)  values (antes.paquetes_id ,antes.paquetes_plan_basico ,antes.paquetes_unidad_tecnica 
    ,antes.paquetes_observaciones ,antes.paquetes_situacion ,NULL ,'' 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_esip_paquetes_logisticos update 
    on "informix".esip_paquetes_logisticos referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_esip_paquetes_logisticos (paquetes_id,
    paquetes_plan_basico,paquetes_unidad_tecnica,paquetes_observaciones,
    paquetes_situacion,desp_paquetes_id,desp_paquetes_plan_basico,desp_paquetes_unidad_tecnica,
    desp_paquetes_observaciones,desp_paquetes_situacion,accion,usuario,
    hora)  values (antes.paquetes_id ,antes.paquetes_plan_basico ,antes.paquetes_unidad_tecnica 
    ,antes.paquetes_observaciones ,antes.paquetes_situacion ,luego.paquetes_id 
    ,luego.paquetes_plan_basico ,luego.paquetes_unidad_tecnica ,luego.paquetes_observaciones 
    ,luego.paquetes_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_esip_unidad_medida insert on "informix"
    .esip_unidad_medida referencing new as luego
    for each row
        (
        insert into "informix".aud_esip_unidad_medida (unidad_id,
    unidad_descripcion_larga,unidad_descripcion_corta,unidad_observacion,
    unidad_situacion,desp_unidad_id,desp_unidad_descripcion_larga,desp_unidad_descripcion_corta,
    desp_unidad_observacion,desp_unidad_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,luego.unidad_id ,luego.unidad_descripcion_larga 
    ,luego.unidad_descripcion_corta ,luego.unidad_observacion ,luego.unidad_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esip_unidad_medida delete on "informix"
    .esip_unidad_medida referencing old as antes
    for each row
        (
        insert into "informix".aud_esip_unidad_medida (unidad_id,
    unidad_descripcion_larga,unidad_descripcion_corta,unidad_observacion,
    unidad_situacion,desp_unidad_id,desp_unidad_descripcion_larga,desp_unidad_descripcion_corta,
    desp_unidad_observacion,desp_unidad_situacion,accion,usuario,hora) 
     values (antes.unidad_id ,antes.unidad_descripcion_larga ,antes.unidad_descripcion_corta 
    ,antes.unidad_observacion ,antes.unidad_situacion ,NULL ,'' ,'' ,'' 
    ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_esip_unidad_medida update on "informix"
    .esip_unidad_medida referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_esip_unidad_medida (unidad_id,
    unidad_descripcion_larga,unidad_descripcion_corta,unidad_observacion,
    unidad_situacion,desp_unidad_id,desp_unidad_descripcion_larga,desp_unidad_descripcion_corta,
    desp_unidad_observacion,desp_unidad_situacion,accion,usuario,hora) 
     values (antes.unidad_id ,antes.unidad_descripcion_larga ,antes.unidad_descripcion_corta 
    ,antes.unidad_observacion ,antes.unidad_situacion ,luego.unidad_id 
    ,luego.unidad_descripcion_larga ,luego.unidad_descripcion_corta ,
    luego.unidad_observacion ,luego.unidad_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_esip_renglon_presupuestario insert 
    on "informix".esip_renglon_presupuestario referencing new 
    as luego
    for each row
        (
        insert into "informix".aud_esip_renglon_presupuestario 
    (renglonpre_renglon,renglonpre_descripcion,renglonpre_observaciones,
    renglonpre_situacion,desp_renglonpre_renglon,desp_renglonpre_descripcion,
    desp_renglonpre_observaciones,desp_renglonpre_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,luego.renglonpre_renglon ,luego.renglonpre_descripcion 
    ,luego.renglonpre_observaciones ,luego.renglonpre_situacion ,'I' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_esip_renglon_presupuestario delete 
    on "informix".esip_renglon_presupuestario referencing old 
    as antes
    for each row
        (
        insert into "informix".aud_esip_renglon_presupuestario 
    (renglonpre_renglon,renglonpre_descripcion,renglonpre_observaciones,
    renglonpre_situacion,desp_renglonpre_renglon,desp_renglonpre_descripcion,
    desp_renglonpre_observaciones,desp_renglonpre_situacion,accion,usuario,
    hora)  values (antes.renglonpre_renglon ,antes.renglonpre_descripcion 
    ,antes.renglonpre_observaciones ,antes.renglonpre_situacion ,NULL 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_esip_renglon_presupuestario update 
    on "informix".esip_renglon_presupuestario referencing old 
    as antes new as luego
    for each row
        (
        insert into "informix".aud_esip_renglon_presupuestario 
    (renglonpre_renglon,renglonpre_descripcion,renglonpre_observaciones,
    renglonpre_situacion,desp_renglonpre_renglon,desp_renglonpre_descripcion,
    desp_renglonpre_observaciones,desp_renglonpre_situacion,accion,usuario,
    hora)  values (antes.renglonpre_renglon ,antes.renglonpre_descripcion 
    ,antes.renglonpre_observaciones ,antes.renglonpre_situacion ,luego.renglonpre_renglon 
    ,luego.renglonpre_descripcion ,luego.renglonpre_observaciones ,luego.renglonpre_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_esip_matriz_presupuestaria insert 
    on "informix".esip_matriz_presupuestaria referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_esip_matriz_presupuestaria 
    (matriz_id,matriz_plan_basico,matriz_fuente,matriz_grupo,matriz_renglon,
    matriz_descripcion,matriz_justificacion,matriz_cantidad,matriz_unidad_medida,
    matriz_costo,matriz_subtotal,matriz_suma_grupo,matriz_total_fuente,
    matriz_observaciones,matriz_situacion,matriz_fecha_envio,matriz_fecha_regreso,
    desp_matriz_id,desp_matriz_plan_basico,desp_matriz_fuente,desp_matriz_grupo,
    desp_matriz_renglon,desp_matriz_descripcion,desp_matriz_justificacion,
    desp_matriz_cantidad,desp_matriz_unidad_medida,desp_matriz_costo,
    desp_matriz_subtotal,desp_matriz_suma_grupo,desp_matriz_total_fuente,
    desp_matriz_observaciones,desp_matriz_situacion,desp_matriz_fecha_envio,
    desp_matriz_fecha_regreso,accion,usuario,hora)  values (NULL ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.matriz_id ,luego.matriz_plan_basico 
    ,luego.matriz_fuente ,luego.matriz_grupo ,luego.matriz_renglon ,luego.matriz_descripcion 
    ,luego.matriz_justificacion ,luego.matriz_cantidad ,luego.matriz_unidad_medida 
    ,luego.matriz_costo ,luego.matriz_subtotal ,luego.matriz_suma_grupo 
    ,luego.matriz_total_fuente ,luego.matriz_observaciones ,luego.matriz_situacion 
    ,luego.matriz_fecha_envio ,luego.matriz_fecha_regreso ,'I' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".del_esip_matriz_presupuestaria delete 
    on "informix".esip_matriz_presupuestaria referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_esip_matriz_presupuestaria 
    (matriz_id,matriz_plan_basico,matriz_fuente,matriz_grupo,matriz_renglon,
    matriz_descripcion,matriz_justificacion,matriz_cantidad,matriz_unidad_medida,
    matriz_costo,matriz_subtotal,matriz_suma_grupo,matriz_total_fuente,
    matriz_observaciones,matriz_situacion,matriz_fecha_envio,matriz_fecha_regreso,
    desp_matriz_id,desp_matriz_plan_basico,desp_matriz_fuente,desp_matriz_grupo,
    desp_matriz_renglon,desp_matriz_descripcion,desp_matriz_justificacion,
    desp_matriz_cantidad,desp_matriz_unidad_medida,desp_matriz_costo,
    desp_matriz_subtotal,desp_matriz_suma_grupo,desp_matriz_total_fuente,
    desp_matriz_observaciones,desp_matriz_situacion,desp_matriz_fecha_envio,
    desp_matriz_fecha_regreso,accion,usuario,hora)  values (antes.matriz_id 
    ,antes.matriz_plan_basico ,antes.matriz_fuente ,antes.matriz_grupo 
    ,antes.matriz_renglon ,antes.matriz_descripcion ,antes.matriz_justificacion 
    ,antes.matriz_cantidad ,antes.matriz_unidad_medida ,antes.matriz_costo 
    ,antes.matriz_subtotal ,antes.matriz_suma_grupo ,antes.matriz_total_fuente 
    ,antes.matriz_observaciones ,antes.matriz_situacion ,antes.matriz_fecha_envio 
    ,antes.matriz_fecha_regreso ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_esip_matriz_presupuestaria update 
    on "informix".esip_matriz_presupuestaria referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_esip_matriz_presupuestaria 
    (matriz_id,matriz_plan_basico,matriz_fuente,matriz_grupo,matriz_renglon,
    matriz_descripcion,matriz_justificacion,matriz_cantidad,matriz_unidad_medida,
    matriz_costo,matriz_subtotal,matriz_suma_grupo,matriz_total_fuente,
    matriz_observaciones,matriz_situacion,matriz_fecha_envio,matriz_fecha_regreso,
    desp_matriz_id,desp_matriz_plan_basico,desp_matriz_fuente,desp_matriz_grupo,
    desp_matriz_renglon,desp_matriz_descripcion,desp_matriz_justificacion,
    desp_matriz_cantidad,desp_matriz_unidad_medida,desp_matriz_costo,
    desp_matriz_subtotal,desp_matriz_suma_grupo,desp_matriz_total_fuente,
    desp_matriz_observaciones,desp_matriz_situacion,desp_matriz_fecha_envio,
    desp_matriz_fecha_regreso,accion,usuario,hora)  values (antes.matriz_id 
    ,antes.matriz_plan_basico ,antes.matriz_fuente ,antes.matriz_grupo 
    ,antes.matriz_renglon ,antes.matriz_descripcion ,antes.matriz_justificacion 
    ,antes.matriz_cantidad ,antes.matriz_unidad_medida ,antes.matriz_costo 
    ,antes.matriz_subtotal ,antes.matriz_suma_grupo ,antes.matriz_total_fuente 
    ,antes.matriz_observaciones ,antes.matriz_situacion ,antes.matriz_fecha_envio 
    ,antes.matriz_fecha_regreso ,luego.matriz_id ,luego.matriz_plan_basico 
    ,luego.matriz_fuente ,luego.matriz_grupo ,luego.matriz_renglon ,luego.matriz_descripcion 
    ,luego.matriz_justificacion ,luego.matriz_cantidad ,luego.matriz_unidad_medida 
    ,luego.matriz_costo ,luego.matriz_subtotal ,luego.matriz_suma_grupo 
    ,luego.matriz_total_fuente ,luego.matriz_observaciones ,luego.matriz_situacion 
    ,luego.matriz_fecha_envio ,luego.matriz_fecha_regreso ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_capta_evaluados insert on "informix"
    .capta_evaluados referencing new as luego
    for each row
        (
        insert into "informix".aud_capta_evaluados (captae_id,
    captae_nombre1,captae_nombre2,captae_apellido1,captae_apellido2,captae_catalogo,
    captae_situacion,desp_captae_id,desp_captae_nombre1,desp_captae_nombre2,
    desp_captae_apellido1,desp_captae_apellido2,desp_captae_catalogo,
    desp_captae_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,''
     ,'' ,'' ,'' ,luego.captae_id ,luego.captae_nombre1 ,luego.captae_nombre2 
    ,luego.captae_apellido1 ,luego.captae_apellido2 ,luego.captae_catalogo 
    ,luego.captae_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_capta_evaluados delete on "informix"
    .capta_evaluados referencing old as antes
    for each row
        (
        insert into "informix".aud_capta_evaluados (captae_id,
    captae_nombre1,captae_nombre2,captae_apellido1,captae_apellido2,captae_catalogo,
    captae_situacion,desp_captae_id,desp_captae_nombre1,desp_captae_nombre2,
    desp_captae_apellido1,desp_captae_apellido2,desp_captae_catalogo,
    desp_captae_situacion,accion,usuario,hora)  values (antes.captae_id 
    ,antes.captae_nombre1 ,antes.captae_nombre2 ,antes.captae_apellido1 
    ,antes.captae_apellido2 ,antes.captae_catalogo ,antes.captae_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_capta_evaluados update on "informix"
    .capta_evaluados referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_capta_evaluados (captae_id,
    captae_nombre1,captae_nombre2,captae_apellido1,captae_apellido2,captae_catalogo,
    captae_situacion,desp_captae_id,desp_captae_nombre1,desp_captae_nombre2,
    desp_captae_apellido1,desp_captae_apellido2,desp_captae_catalogo,
    desp_captae_situacion,accion,usuario,hora)  values (antes.captae_id 
    ,antes.captae_nombre1 ,antes.captae_nombre2 ,antes.captae_apellido1 
    ,antes.captae_apellido2 ,antes.captae_catalogo ,antes.captae_situacion 
    ,luego.captae_id ,luego.captae_nombre1 ,luego.captae_nombre2 ,luego.captae_apellido1 
    ,luego.captae_apellido2 ,luego.captae_catalogo ,luego.captae_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_capta_documentos insert on "informix"
    .capta_documentos referencing new as luego
    for each row
        (
        insert into "informix".aud_capta_documentos (capta_id,
    capta_ingreso,capta_documento,capta_situacion,desp_capta_id,desp_capta_ingreso,
    desp_capta_documento,desp_capta_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,luego.capta_id ,luego.capta_ingreso ,luego.capta_documento 
    ,luego.capta_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_capta_documentos delete on "informix"
    .capta_documentos referencing old as antes
    for each row
        (
        insert into "informix".aud_capta_documentos (capta_id,
    capta_ingreso,capta_documento,capta_situacion,desp_capta_id,desp_capta_ingreso,
    desp_capta_documento,desp_capta_situacion,accion,usuario,hora)  values 
    (antes.capta_id ,antes.capta_ingreso ,antes.capta_documento ,antes.capta_situacion 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_capta_documentos update on "informix"
    .capta_documentos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_capta_documentos (capta_id,
    capta_ingreso,capta_documento,capta_situacion,desp_capta_id,desp_capta_ingreso,
    desp_capta_documento,desp_capta_situacion,accion,usuario,hora)  values 
    (antes.capta_id ,antes.capta_ingreso ,antes.capta_documento ,antes.capta_situacion 
    ,luego.capta_id ,luego.capta_ingreso ,luego.capta_documento ,luego.capta_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_capta_evaluaciones insert on "informix"
    .capta_evaluaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_capta_evaluaciones (eva_id,
    eva_ingreso,eva_tipo,eva_lugar,eva_fecha,eva_nota,eva_situacion,desp_eva_id,
    desp_eva_ingreso,desp_eva_tipo,desp_eva_lugar,desp_eva_fecha,desp_eva_nota,
    desp_eva_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,luego.eva_id ,luego.eva_ingreso ,luego.eva_tipo ,luego.eva_lugar 
    ,luego.eva_fecha ,luego.eva_nota ,luego.eva_situacion ,'I' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".del_capta_evaluaciones delete on "informix"
    .capta_evaluaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_capta_evaluaciones (eva_id,
    eva_ingreso,eva_tipo,eva_lugar,eva_fecha,eva_nota,eva_situacion,desp_eva_id,
    desp_eva_ingreso,desp_eva_tipo,desp_eva_lugar,desp_eva_fecha,desp_eva_nota,
    desp_eva_situacion,accion,usuario,hora)  values (antes.eva_id ,antes.eva_ingreso 
    ,antes.eva_tipo ,antes.eva_lugar ,antes.eva_fecha ,antes.eva_nota 
    ,antes.eva_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_capta_evaluaciones update on "informix"
    .capta_evaluaciones referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_capta_evaluaciones (eva_id,
    eva_ingreso,eva_tipo,eva_lugar,eva_fecha,eva_nota,eva_situacion,desp_eva_id,
    desp_eva_ingreso,desp_eva_tipo,desp_eva_lugar,desp_eva_fecha,desp_eva_nota,
    desp_eva_situacion,accion,usuario,hora)  values (antes.eva_id ,antes.eva_ingreso 
    ,antes.eva_tipo ,antes.eva_lugar ,antes.eva_fecha ,antes.eva_nota 
    ,antes.eva_situacion ,luego.eva_id ,luego.eva_ingreso ,luego.eva_tipo 
    ,luego.eva_lugar ,luego.eva_fecha ,luego.eva_nota ,luego.eva_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_capta_tipoeva insert on "informix"
    .capta_tipoeva referencing new as luego
    for each row
        (
        insert into "informix".aud_capta_tipoeva (tipo_id,tipo_descripcion,
    tipo_situacion,desp_tipo_id,desp_tipo_descripcion,desp_tipo_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.tipo_id ,luego.tipo_descripcion 
    ,luego.tipo_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_capta_tipoeva delete on "informix"
    .capta_tipoeva referencing old as antes
    for each row
        (
        insert into "informix".aud_capta_tipoeva (tipo_id,tipo_descripcion,
    tipo_situacion,desp_tipo_id,desp_tipo_descripcion,desp_tipo_situacion,
    accion,usuario,hora)  values (antes.tipo_id ,antes.tipo_descripcion 
    ,antes.tipo_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_capta_tipoeva update on "informix"
    .capta_tipoeva referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_capta_tipoeva (tipo_id,tipo_descripcion,
    tipo_situacion,desp_tipo_id,desp_tipo_descripcion,desp_tipo_situacion,
    accion,usuario,hora)  values (antes.tipo_id ,antes.tipo_descripcion 
    ,antes.tipo_situacion ,luego.tipo_id ,luego.tipo_descripcion ,luego.tipo_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_capta_feriados insert on "informix"
    .capta_feriados referencing new as luego
    for each row
        (
        insert into "informix".aud_capta_feriados (feriado_id,
    feriado_fecha,feriado_descripcion,feriado_situacion,antes_feriado_id,
    antes_feriado_fecha,antes_feriado_descripcion,antes_feriado_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.feriado_id ,luego.feriado_fecha 
    ,luego.feriado_descripcion ,luego.feriado_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_capta_feriados delete on "informix"
    .capta_feriados referencing old as antes
    for each row
        (
        insert into "informix".aud_capta_feriados (feriado_id,
    feriado_fecha,feriado_descripcion,feriado_situacion,antes_feriado_id,
    antes_feriado_fecha,antes_feriado_descripcion,antes_feriado_situacion,
    accion,usuario,hora)  values (antes.feriado_id ,antes.feriado_fecha 
    ,antes.feriado_descripcion ,antes.feriado_situacion ,NULL ,'' ,'' ,
    '' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_capta_feriados update on "informix"
    .capta_feriados referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_capta_feriados (feriado_id,
    feriado_fecha,feriado_descripcion,feriado_situacion,antes_feriado_id,
    antes_feriado_fecha,antes_feriado_descripcion,antes_feriado_situacion,
    accion,usuario,hora)  values (antes.feriado_id ,antes.feriado_fecha 
    ,antes.feriado_descripcion ,antes.feriado_situacion ,luego.feriado_id 
    ,luego.feriado_fecha ,luego.feriado_descripcion ,luego.feriado_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_asig_requisitos insert on "informix"
    .asig_requisitos referencing new as luego
    for each row
        (
        insert into "informix".aud_asig_requisitos (asig_id,asig_plaza,
    asig_requisito,asig_situacion,desp_asig_id,desp_asig_plaza,desp_asig_requisito,
    desp_asig_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,
    luego.asig_id ,luego.asig_plaza ,luego.asig_requisito ,luego.asig_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_asig_requisitos delete on "informix"
    .asig_requisitos referencing old as antes
    for each row
        (
        insert into "informix".aud_asig_requisitos (asig_id,asig_plaza,
    asig_requisito,asig_situacion,desp_asig_id,desp_asig_plaza,desp_asig_requisito,
    desp_asig_situacion,accion,usuario,hora)  values (antes.asig_id ,
    antes.asig_plaza ,antes.asig_requisito ,antes.asig_situacion ,NULL 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_asig_requisitos update on "informix"
    .asig_requisitos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_asig_requisitos (asig_id,asig_plaza,
    asig_requisito,asig_situacion,desp_asig_id,desp_asig_plaza,desp_asig_requisito,
    desp_asig_situacion,accion,usuario,hora)  values (antes.asig_id ,
    antes.asig_plaza ,antes.asig_requisito ,antes.asig_situacion ,luego.asig_id 
    ,luego.asig_plaza ,luego.asig_requisito ,luego.asig_situacion ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_capta_ingresos insert on "informix"
    .capta_ingresos referencing new as luego
    for each row
        (
        insert into "informix".aud_capta_ingresos (ingre_id,ingre_plaza,
    ingre_dpi,ingre_situacion,ingre_fecha,ingre_ceom,desp_ingre_id,desp_ingre_plaza,
    desp_ingre_dpi,desp_ingre_situacion,desp_ingre_fecha,desp_ingre_ceom,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.ingre_id 
    ,luego.ingre_plaza ,luego.ingre_dpi ,luego.ingre_situacion ,luego.ingre_fecha 
    ,luego.ingre_ceom ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_capta_ingresos delete on "informix"
    .capta_ingresos referencing old as antes
    for each row
        (
        insert into "informix".aud_capta_ingresos (ingre_id,ingre_plaza,
    ingre_dpi,ingre_situacion,ingre_fecha,ingre_ceom,desp_ingre_id,desp_ingre_plaza,
    desp_ingre_dpi,desp_ingre_situacion,desp_ingre_fecha,desp_ingre_ceom,
    accion,usuario,hora)  values (antes.ingre_id ,antes.ingre_plaza ,
    antes.ingre_dpi ,antes.ingre_situacion ,antes.ingre_fecha ,antes.ingre_ceom 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_capta_ingresos update on "informix"
    .capta_ingresos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_capta_ingresos (ingre_id,ingre_plaza,
    ingre_dpi,ingre_situacion,ingre_fecha,ingre_ceom,desp_ingre_id,desp_ingre_plaza,
    desp_ingre_dpi,desp_ingre_situacion,desp_ingre_fecha,desp_ingre_ceom,
    accion,usuario,hora)  values (antes.ingre_id ,antes.ingre_plaza ,
    antes.ingre_dpi ,antes.ingre_situacion ,antes.ingre_fecha ,antes.ingre_ceom 
    ,luego.ingre_id ,luego.ingre_plaza ,luego.ingre_dpi ,luego.ingre_situacion 
    ,luego.ingre_fecha ,luego.ingre_ceom ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_tri_eventos insert on "informix"
    .tri_eventos referencing new as luego
    for each row
        (
        insert into "informix".aud_tri_eventos (id,nombre,situacion,
    desp_id,desp_nombre,desp_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,luego.id ,luego.nombre ,luego.situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_tri_eventos delete on "informix"
    .tri_eventos referencing old as antes
    for each row
        (
        insert into "informix".aud_tri_eventos (id,nombre,situacion,
    desp_id,desp_nombre,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.nombre ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_tri_eventos update on "informix"
    .tri_eventos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tri_eventos (id,nombre,situacion,
    desp_id,desp_nombre,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.nombre ,antes.situacion ,luego.id ,luego.nombre ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tri_etapas insert on "informix".tri_etapas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_tri_etapas (id,nombre,situacion,
    ponderacion,desp_id,desp_nombre,desp_situacion,desp_ponderacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.id ,luego.nombre ,luego.situacion 
    ,luego.ponderacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_tri_etapas delete on "informix".tri_etapas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_tri_etapas (id,nombre,situacion,
    ponderacion,desp_id,desp_nombre,desp_situacion,desp_ponderacion,accion,
    usuario,hora)  values (antes.id ,antes.nombre ,antes.situacion ,antes.ponderacion 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_tri_etapas update on "informix".tri_etapas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tri_etapas (id,nombre,situacion,
    ponderacion,desp_id,desp_nombre,desp_situacion,desp_ponderacion,accion,
    usuario,hora)  values (antes.id ,antes.nombre ,antes.situacion ,antes.ponderacion 
    ,luego.id ,luego.nombre ,luego.situacion ,luego.ponderacion ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tri_detalle insert on "informix"
    .tri_detalle referencing new as luego
    for each row
        (
        insert into "informix".aud_tri_detalle (id,evento,etapa,
    situacion,desp_id,desp_evento,desp_etapa,desp_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,luego.id ,luego.evento ,luego.etapa 
    ,luego.situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_tri_detalle delete on "informix"
    .tri_detalle referencing old as antes
    for each row
        (
        insert into "informix".aud_tri_detalle (id,evento,etapa,
    situacion,desp_id,desp_evento,desp_etapa,desp_situacion,accion,usuario,
    hora)  values (antes.id ,antes.evento ,antes.etapa ,antes.situacion 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_tri_detalle update on "informix"
    .tri_detalle referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tri_detalle (id,evento,etapa,
    situacion,desp_id,desp_evento,desp_etapa,desp_situacion,accion,usuario,
    hora)  values (antes.id ,antes.evento ,antes.etapa ,antes.situacion 
    ,luego.id ,luego.evento ,luego.etapa ,luego.situacion ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_tri_participantes insert on "informix"
    .tri_participantes referencing new as luego
    for each row
        (
        insert into "informix".aud_tri_participantes (id,evento,
    catalogo,situacion,desp_id,desp_evento,desp_catalogo,desp_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.id ,luego.evento 
    ,luego.catalogo ,luego.situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_tri_participantes delete on "informix"
    .tri_participantes referencing old as antes
    for each row
        (
        insert into "informix".aud_tri_participantes (id,evento,
    catalogo,situacion,desp_id,desp_evento,desp_catalogo,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.evento ,antes.catalogo 
    ,antes.situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_tri_participantes update on "informix"
    .tri_participantes referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tri_participantes (id,evento,
    catalogo,situacion,desp_id,desp_evento,desp_catalogo,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.evento ,antes.catalogo 
    ,antes.situacion ,luego.id ,luego.evento ,luego.catalogo ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tri_puntaje insert on "informix"
    .tri_puntaje referencing new as luego
    for each row
        (
        insert into "informix".aud_tri_puntaje (id,participante,
    etapa,punteo,tiempo,situacion,desp_id,desp_participante,desp_etapa,
    desp_punteo,desp_tiempo,desp_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,luego.id ,luego.participante ,luego.etapa ,
    luego.punteo ,luego.tiempo ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_tri_puntaje delete on "informix"
    .tri_puntaje referencing old as antes
    for each row
        (
        insert into "informix".aud_tri_puntaje (id,participante,
    etapa,punteo,tiempo,situacion,desp_id,desp_participante,desp_etapa,
    desp_punteo,desp_tiempo,desp_situacion,accion,usuario,hora)  values 
    (antes.id ,antes.participante ,antes.etapa ,antes.punteo ,antes.tiempo 
    ,antes.situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_tri_puntaje update on "informix"
    .tri_puntaje referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tri_puntaje (id,participante,
    etapa,punteo,tiempo,situacion,desp_id,desp_participante,desp_etapa,
    desp_punteo,desp_tiempo,desp_situacion,accion,usuario,hora)  values 
    (antes.id ,antes.participante ,antes.etapa ,antes.punteo ,antes.tiempo 
    ,antes.situacion ,luego.id ,luego.participante ,luego.etapa ,luego.punteo 
    ,luego.tiempo ,luego.situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_coc_instituciones insert on "informix"
    .coc_instituciones referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_instituciones (inst_codigo,
    inst_descripcion,inst_observacion,ins_situacion,desp_inst_codigo,
    desp_inst_descripcion,desp_inst_observacion,desp_ins_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.inst_codigo ,luego.inst_descripcion 
    ,luego.inst_observacion ,luego.ins_situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_coc_instituciones delete on "informix"
    .coc_instituciones referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_instituciones (inst_codigo,
    inst_descripcion,inst_observacion,ins_situacion,desp_inst_codigo,
    desp_inst_descripcion,desp_inst_observacion,desp_ins_situacion,accion,
    usuario,hora)  values (antes.inst_codigo ,antes.inst_descripcion 
    ,antes.inst_observacion ,antes.ins_situacion ,NULL ,'' ,'' ,'' ,'D' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_instituciones update on "informix"
    .coc_instituciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_instituciones (inst_codigo,
    inst_descripcion,inst_observacion,ins_situacion,desp_inst_codigo,
    desp_inst_descripcion,desp_inst_observacion,desp_ins_situacion,accion,
    usuario,hora)  values (antes.inst_codigo ,antes.inst_descripcion 
    ,antes.inst_observacion ,antes.ins_situacion ,luego.inst_codigo ,
    luego.inst_descripcion ,luego.inst_observacion ,luego.ins_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_desastre_natural insert on 
    "informix".amc_desastre_natural referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_desastre_natural (id,topico,
    tipo,nombre_desastre,per_fallecida,per_evacuada,per_afectada,albergues,
    est_colapsadas,inundaciones,derrumbes,carre_colap,hectareas_quemadas,
    rios,situacion,desp_id,desp_topico,desp_tipo,desp_nombre_desastre,
    desp_per_fallecida,desp_per_evacuada,desp_per_afectada,desp_albergues,
    desp_est_colapsadas,desp_inundaciones,desp_derrumbes,desp_carre_colap,
    desp_hectareas_quemadas,desp_rios,desp_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.id 
    ,luego.topico ,luego.tipo ,luego.nombre_desastre ,luego.per_fallecida 
    ,luego.per_evacuada ,luego.per_afectada ,luego.albergues ,luego.est_colapsadas 
    ,luego.inundaciones ,luego.derrumbes ,luego.carre_colap ,luego.hectareas_quemadas 
    ,luego.rios ,luego.situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_amc_desastre_natural delete on 
    "informix".amc_desastre_natural referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_desastre_natural (id,topico,
    tipo,nombre_desastre,per_fallecida,per_evacuada,per_afectada,albergues,
    est_colapsadas,inundaciones,derrumbes,carre_colap,hectareas_quemadas,
    rios,situacion,desp_id,desp_topico,desp_tipo,desp_nombre_desastre,
    desp_per_fallecida,desp_per_evacuada,desp_per_afectada,desp_albergues,
    desp_est_colapsadas,desp_inundaciones,desp_derrumbes,desp_carre_colap,
    desp_hectareas_quemadas,desp_rios,desp_situacion,accion,usuario,hora) 
     values (antes.id ,antes.topico ,antes.tipo ,antes.nombre_desastre 
    ,antes.per_fallecida ,antes.per_evacuada ,antes.per_afectada ,antes.albergues 
    ,antes.est_colapsadas ,antes.inundaciones ,antes.derrumbes ,antes.carre_colap 
    ,antes.hectareas_quemadas ,antes.rios ,antes.situacion ,NULL ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_amc_desastre_natural update on 
    "informix".amc_desastre_natural referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_amc_desastre_natural (id,topico,
    tipo,nombre_desastre,per_fallecida,per_evacuada,per_afectada,albergues,
    est_colapsadas,inundaciones,derrumbes,carre_colap,hectareas_quemadas,
    rios,situacion,desp_id,desp_topico,desp_tipo,desp_nombre_desastre,
    desp_per_fallecida,desp_per_evacuada,desp_per_afectada,desp_albergues,
    desp_est_colapsadas,desp_inundaciones,desp_derrumbes,desp_carre_colap,
    desp_hectareas_quemadas,desp_rios,desp_situacion,accion,usuario,hora) 
     values (antes.id ,antes.topico ,antes.tipo ,antes.nombre_desastre 
    ,antes.per_fallecida ,antes.per_evacuada ,antes.per_afectada ,antes.albergues 
    ,antes.est_colapsadas ,antes.inundaciones ,antes.derrumbes ,antes.carre_colap 
    ,antes.hectareas_quemadas ,antes.rios ,antes.situacion ,luego.id 
    ,luego.topico ,luego.tipo ,luego.nombre_desastre ,luego.per_fallecida 
    ,luego.per_evacuada ,luego.per_afectada ,luego.albergues ,luego.est_colapsadas 
    ,luego.inundaciones ,luego.derrumbes ,luego.carre_colap ,luego.hectareas_quemadas 
    ,luego.rios ,luego.situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_amc_topico insert on "informix".amc_topico 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_topico (id,fecha,lugar,
    departamento,municipio,tipo,latitud,longitud,actividad,situacion,
    info,dependencia,fuente,link,usuario,desp_id,desp_fecha,desp_lugar,
    desp_departamento,desp_municipio,desp_tipo,desp_latitud,desp_longitud,
    desp_actividad,desp_situacion,desp_info,desp_dependencia,desp_fuente,
    desp_link,desp_usuario,accion,usuario1,hora)  values (NULL ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2048) ,'' ,'' ,'' ::lvarchar(2048) 
    ,'' ,luego.id ,luego.fecha ,luego.lugar ,luego.departamento ,luego.municipio 
    ,luego.tipo ,luego.latitud ,luego.longitud ,luego.actividad ,luego.situacion 
    ,luego.info ,luego.dependencia ,luego.fuente ,luego.link ,luego.usuario 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_amc_topico delete on "informix".amc_topico 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_topico (id,fecha,lugar,
    departamento,municipio,tipo,latitud,longitud,actividad,situacion,
    info,dependencia,fuente,link,usuario,desp_id,desp_fecha,desp_lugar,
    desp_departamento,desp_municipio,desp_tipo,desp_latitud,desp_longitud,
    desp_actividad,desp_situacion,desp_info,desp_dependencia,desp_fuente,
    desp_link,desp_usuario,accion,usuario1,hora)  values (antes.id ,antes.fecha 
    ,antes.lugar ,antes.departamento ,antes.municipio ,antes.tipo ,antes.latitud 
    ,antes.longitud ,antes.actividad ,antes.situacion ,antes.info ,antes.dependencia 
    ,antes.fuente ,antes.link ,antes.usuario ,NULL ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ::lvarchar(2048) ,'' ,'' ,'' ::lvarchar(2048) ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_amc_topico update on "informix".amc_topico 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_topico (id,fecha,lugar,
    departamento,municipio,tipo,latitud,longitud,actividad,situacion,
    info,dependencia,fuente,link,usuario,desp_id,desp_fecha,desp_lugar,
    desp_departamento,desp_municipio,desp_tipo,desp_latitud,desp_longitud,
    desp_actividad,desp_situacion,desp_info,desp_dependencia,desp_fuente,
    desp_link,desp_usuario,accion,usuario1,hora)  values (antes.id ,antes.fecha 
    ,antes.lugar ,antes.departamento ,antes.municipio ,antes.tipo ,antes.latitud 
    ,antes.longitud ,antes.actividad ,antes.situacion ,antes.info ,antes.dependencia 
    ,antes.fuente ,antes.link ,antes.usuario ,luego.id ,luego.fecha ,
    luego.lugar ,luego.departamento ,luego.municipio ,luego.tipo ,luego.latitud 
    ,luego.longitud ,luego.actividad ,luego.situacion ,luego.info ,luego.dependencia 
    ,luego.fuente ,luego.link ,luego.usuario ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_amc_incautacion_droga insert on 
    "informix".amc_incautacion_droga referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_incautacion_droga (id,
    topico,tipo_droga,transporte,matricula,tipo_transporte,cantidad,tip_droga_plantacion,
    cantidad_plantacion,situacion,desp_id,desp_topico,desp_tipo_droga,
    desp_transporte,desp_matricula,desp_tipo_transporte,desp_cantidad,
    desp_tip_droga_plantacion,desp_cantidad_plantacion,desp_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.id 
    ,luego.topico ,luego.tipo_droga ,luego.transporte ,luego.matricula 
    ,luego.tipo_transporte ,luego.cantidad ,luego.tip_droga_plantacion 
    ,luego.cantidad_plantacion ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_amc_incautacion_droga delete on 
    "informix".amc_incautacion_droga referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_incautacion_droga (id,
    topico,tipo_droga,transporte,matricula,tipo_transporte,cantidad,tip_droga_plantacion,
    cantidad_plantacion,situacion,desp_id,desp_topico,desp_tipo_droga,
    desp_transporte,desp_matricula,desp_tipo_transporte,desp_cantidad,
    desp_tip_droga_plantacion,desp_cantidad_plantacion,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.topico ,antes.tipo_droga 
    ,antes.transporte ,antes.matricula ,antes.tipo_transporte ,antes.cantidad 
    ,antes.tip_droga_plantacion ,antes.cantidad_plantacion ,antes.situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_amc_incautacion_droga update on 
    "informix".amc_incautacion_droga referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_amc_incautacion_droga (id,
    topico,tipo_droga,transporte,matricula,tipo_transporte,cantidad,tip_droga_plantacion,
    cantidad_plantacion,situacion,desp_id,desp_topico,desp_tipo_droga,
    desp_transporte,desp_matricula,desp_tipo_transporte,desp_cantidad,
    desp_tip_droga_plantacion,desp_cantidad_plantacion,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.topico ,antes.tipo_droga 
    ,antes.transporte ,antes.matricula ,antes.tipo_transporte ,antes.cantidad 
    ,antes.tip_droga_plantacion ,antes.cantidad_plantacion ,antes.situacion 
    ,luego.id ,luego.topico ,luego.tipo_droga ,luego.transporte ,luego.matricula 
    ,luego.tipo_transporte ,luego.cantidad ,luego.tip_droga_plantacion 
    ,luego.cantidad_plantacion ,luego.situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_amc_per_capturadas insert on "informix"
    .amc_per_capturadas referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_per_capturadas (id,topico,
    nacionalidad,sexo,nombre,edad,delito,vinculo,situacion,desp_id,desp_topico,
    desp_nacionalidad,desp_sexo,desp_nombre,desp_edad,desp_delito,desp_vinculo,
    desp_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,luego.id ,luego.topico ,luego.nacionalidad ,luego.sexo 
    ,luego.nombre ,luego.edad ,luego.delito ,luego.vinculo ,luego.situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_amc_per_capturadas delete on "informix"
    .amc_per_capturadas referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_per_capturadas (id,topico,
    nacionalidad,sexo,nombre,edad,delito,vinculo,situacion,desp_id,desp_topico,
    desp_nacionalidad,desp_sexo,desp_nombre,desp_edad,desp_delito,desp_vinculo,
    desp_situacion,accion,usuario,hora)  values (antes.id ,antes.topico 
    ,antes.nacionalidad ,antes.sexo ,antes.nombre ,antes.edad ,antes.delito 
    ,antes.vinculo ,antes.situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_amc_per_capturadas update on "informix"
    .amc_per_capturadas referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_amc_per_capturadas (id,topico,
    nacionalidad,sexo,nombre,edad,delito,vinculo,situacion,desp_id,desp_topico,
    desp_nacionalidad,desp_sexo,desp_nombre,desp_edad,desp_delito,desp_vinculo,
    desp_situacion,accion,usuario,hora)  values (antes.id ,antes.topico 
    ,antes.nacionalidad ,antes.sexo ,antes.nombre ,antes.edad ,antes.delito 
    ,antes.vinculo ,antes.situacion ,luego.id ,luego.topico ,luego.nacionalidad 
    ,luego.sexo ,luego.nombre ,luego.edad ,luego.delito ,luego.vinculo 
    ,luego.situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_migrantes insert on "informix"
    .amc_migrantes referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_migrantes (id,topic,pais_migrante,
    edad,cantidad,sexo,lugar_ingreso,destino,situacion,desp_id,desp_topic,
    desp_pais_migrante,desp_edad,desp_cantidad,desp_sexo,desp_lugar_ingreso,
    desp_destino,desp_situacion,accion,usuario,hora)  values (NULL ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.id ,luego.topic ,luego.pais_migrante 
    ,luego.edad ,luego.cantidad ,luego.sexo ,luego.lugar_ingreso ,luego.destino 
    ,luego.situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_amc_migrantes delete on "informix"
    .amc_migrantes referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_migrantes (id,topic,pais_migrante,
    edad,cantidad,sexo,lugar_ingreso,destino,situacion,desp_id,desp_topic,
    desp_pais_migrante,desp_edad,desp_cantidad,desp_sexo,desp_lugar_ingreso,
    desp_destino,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.topic ,antes.pais_migrante ,antes.edad ,antes.cantidad ,antes.sexo 
    ,antes.lugar_ingreso ,antes.destino ,antes.situacion ,NULL ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_amc_migrantes update on "informix"
    .amc_migrantes referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_migrantes (id,topic,pais_migrante,
    edad,cantidad,sexo,lugar_ingreso,destino,situacion,desp_id,desp_topic,
    desp_pais_migrante,desp_edad,desp_cantidad,desp_sexo,desp_lugar_ingreso,
    desp_destino,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.topic ,antes.pais_migrante ,antes.edad ,antes.cantidad ,antes.sexo 
    ,antes.lugar_ingreso ,antes.destino ,antes.situacion ,luego.id ,luego.topic 
    ,luego.pais_migrante ,luego.edad ,luego.cantidad ,luego.sexo ,luego.lugar_ingreso 
    ,luego.destino ,luego.situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_amc_movimiento_social insert on 
    "informix".amc_movimiento_social referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_movimiento_social (id,
    topico,tipo_movimiento,organizacion,cantidad,situacion,desp_id,desp_topico,
    desp_tipo_movimiento,desp_organizacion,desp_cantidad,desp_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.id ,luego.topico 
    ,luego.tipo_movimiento ,luego.organizacion ,luego.cantidad ,luego.situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_amc_movimiento_social delete on 
    "informix".amc_movimiento_social referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_movimiento_social (id,
    topico,tipo_movimiento,organizacion,cantidad,situacion,desp_id,desp_topico,
    desp_tipo_movimiento,desp_organizacion,desp_cantidad,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.topico ,antes.tipo_movimiento 
    ,antes.organizacion ,antes.cantidad ,antes.situacion ,NULL ,'' ,'' 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_amc_movimiento_social update on 
    "informix".amc_movimiento_social referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_amc_movimiento_social (id,
    topico,tipo_movimiento,organizacion,cantidad,situacion,desp_id,desp_topico,
    desp_tipo_movimiento,desp_organizacion,desp_cantidad,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.topico ,antes.tipo_movimiento 
    ,antes.organizacion ,antes.cantidad ,antes.situacion ,luego.id ,luego.topico 
    ,luego.tipo_movimiento ,luego.organizacion ,luego.cantidad ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_colores insert on "informix"
    .amc_colores referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_colores (id,descripcion,
    cantidad,color,nivel,topico,situacion,desp_id,desp_descripcion,desp_cantidad,
    desp_color,desp_nivel,desp_topico,desp_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,luego.id ,luego.descripcion ,luego.cantidad 
    ,luego.color ,luego.nivel ,luego.topico ,luego.situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_amc_colores delete on "informix"
    .amc_colores referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_colores (id,descripcion,
    cantidad,color,nivel,topico,situacion,desp_id,desp_descripcion,desp_cantidad,
    desp_color,desp_nivel,desp_topico,desp_situacion,accion,usuario,hora) 
     values (antes.id ,antes.descripcion ,antes.cantidad ,antes.color 
    ,antes.nivel ,antes.topico ,antes.situacion ,NULL ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_amc_colores update on "informix"
    .amc_colores referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_colores (id,descripcion,
    cantidad,color,nivel,topico,situacion,desp_id,desp_descripcion,desp_cantidad,
    desp_color,desp_nivel,desp_topico,desp_situacion,accion,usuario,hora) 
     values (antes.id ,antes.descripcion ,antes.cantidad ,antes.color 
    ,antes.nivel ,antes.topico ,antes.situacion ,luego.id ,luego.descripcion 
    ,luego.cantidad ,luego.color ,luego.nivel ,luego.topico ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_incautacion_dinero insert on 
    "informix".amc_incautacion_dinero referencing new as luego
    
    for each row
        (
        insert into "informix".aud_amc_incautacion_dinero (id,
    topico,cantidad,moneda,conversion,situacion,desp_id,desp_topico,desp_cantidad,
    desp_moneda,desp_conversion,desp_situacion,accion,usuario,hora)  
    values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.id ,luego.topico ,luego.cantidad 
    ,luego.moneda ,luego.conversion ,luego.situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_amc_incautacion_dinero delete on 
    "informix".amc_incautacion_dinero referencing old as antes
    
    for each row
        (
        insert into "informix".aud_amc_incautacion_dinero (id,
    topico,cantidad,moneda,conversion,situacion,desp_id,desp_topico,desp_cantidad,
    desp_moneda,desp_conversion,desp_situacion,accion,usuario,hora)  
    values (antes.id ,antes.topico ,antes.cantidad ,antes.moneda ,antes.conversion 
    ,antes.situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_amc_incautacion_dinero update on 
    "informix".amc_incautacion_dinero referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_amc_incautacion_dinero (id,
    topico,cantidad,moneda,conversion,situacion,desp_id,desp_topico,desp_cantidad,
    desp_moneda,desp_conversion,desp_situacion,accion,usuario,hora)  
    values (antes.id ,antes.topico ,antes.cantidad ,antes.moneda ,antes.conversion 
    ,antes.situacion ,luego.id ,luego.topico ,luego.cantidad ,luego.moneda 
    ,luego.conversion ,luego.situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_amc_detalle_arma insert on "informix"
    .amc_detalle_arma referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_detalle_arma (id,topico,
    tipo_arma,calibre,cantidad,situacion,desp_id,desp_topico,desp_tipo_arma,
    desp_calibre,desp_cantidad,desp_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,luego.id ,luego.topico ,luego.tipo_arma ,luego.calibre 
    ,luego.cantidad ,luego.situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_amc_detalle_arma delete on "informix"
    .amc_detalle_arma referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_detalle_arma (id,topico,
    tipo_arma,calibre,cantidad,situacion,desp_id,desp_topico,desp_tipo_arma,
    desp_calibre,desp_cantidad,desp_situacion,accion,usuario,hora)  values 
    (antes.id ,antes.topico ,antes.tipo_arma ,antes.calibre ,antes.cantidad 
    ,antes.situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_amc_detalle_arma update on "informix"
    .amc_detalle_arma referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_detalle_arma (id,topico,
    tipo_arma,calibre,cantidad,situacion,desp_id,desp_topico,desp_tipo_arma,
    desp_calibre,desp_cantidad,desp_situacion,accion,usuario,hora)  values 
    (antes.id ,antes.topico ,antes.tipo_arma ,antes.calibre ,antes.cantidad 
    ,antes.situacion ,luego.id ,luego.topico ,luego.tipo_arma ,luego.calibre 
    ,luego.cantidad ,luego.situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_amc_detalle_municion insert on 
    "informix".amc_detalle_municion referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_detalle_municion (id,topico,
    calibre,cantidad,situacion,desp_id,desp_topico,desp_calibre,desp_cantidad,
    desp_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.id 
    ,luego.topico ,luego.calibre ,luego.cantidad ,luego.situacion ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_amc_detalle_municion delete on 
    "informix".amc_detalle_municion referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_detalle_municion (id,topico,
    calibre,cantidad,situacion,desp_id,desp_topico,desp_calibre,desp_cantidad,
    desp_situacion,accion,usuario,hora)  values (antes.id ,antes.topico 
    ,antes.calibre ,antes.cantidad ,antes.situacion ,NULL ,'' ,'' ,'' ,''
     ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_amc_detalle_municion update on 
    "informix".amc_detalle_municion referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_amc_detalle_municion (id,topico,
    calibre,cantidad,situacion,desp_id,desp_topico,desp_calibre,desp_cantidad,
    desp_situacion,accion,usuario,hora)  values (antes.id ,antes.topico 
    ,antes.calibre ,antes.cantidad ,antes.situacion ,luego.id ,luego.topico 
    ,luego.calibre ,luego.cantidad ,luego.situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_amc_asesinato insert on "informix"
    .amc_asesinato referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_asesinato (id,topico,cant_per_asesinadas,
    situacion,desp_id,desp_topico,desp_cant_per_asesinadas,desp_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.id ,luego.topico 
    ,luego.cant_per_asesinadas ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_amc_asesinato delete on "informix"
    .amc_asesinato referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_asesinato (id,topico,cant_per_asesinadas,
    situacion,desp_id,desp_topico,desp_cant_per_asesinadas,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.topico ,antes.cant_per_asesinadas 
    ,antes.situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_amc_asesinato update on "informix"
    .amc_asesinato referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_asesinato (id,topico,cant_per_asesinadas,
    situacion,desp_id,desp_topico,desp_cant_per_asesinadas,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.topico ,antes.cant_per_asesinadas 
    ,antes.situacion ,luego.id ,luego.topico ,luego.cant_per_asesinadas 
    ,luego.situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_destruccion_pista insert on 
    "informix".amc_destruccion_pista referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_destruccion_pista (id,
    topico,distancia,situacion,desp_id,desp_topico,desp_distancia,desp_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.id ,luego.topico 
    ,luego.distancia ,luego.situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_amc_destruccion_pista delete on 
    "informix".amc_destruccion_pista referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_destruccion_pista (id,
    topico,distancia,situacion,desp_id,desp_topico,desp_distancia,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.topico ,antes.distancia 
    ,antes.situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_amc_destruccion_pista update on 
    "informix".amc_destruccion_pista referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_amc_destruccion_pista (id,
    topico,distancia,situacion,desp_id,desp_topico,desp_distancia,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.topico ,antes.distancia 
    ,antes.situacion ,luego.id ,luego.topico ,luego.distancia ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_incautacion_armas insert on 
    "informix".amc_incautacion_armas referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_incautacion_armas (id,
    topico,info,situacion,desp_id,desp_topico,desp_info,desp_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ::lvarchar(2048) ,'' ,luego.id 
    ,luego.topico ,luego.info ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_amc_incautacion_armas delete on 
    "informix".amc_incautacion_armas referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_incautacion_armas (id,
    topico,info,situacion,desp_id,desp_topico,desp_info,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.topico ,antes.info 
    ,antes.situacion ,NULL ,'' ,'' ::lvarchar(2048) ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_amc_incautacion_armas update on 
    "informix".amc_incautacion_armas referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_amc_incautacion_armas (id,
    topico,info,situacion,desp_id,desp_topico,desp_info,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.topico ,antes.info 
    ,antes.situacion ,luego.id ,luego.topico ,luego.info ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_nacionalidad insert on "informix"
    .amc_nacionalidad referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_nacionalidad (id,desc,
    pais,situacion,desp_id,desp_desc,desp_pais,desp_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.id ,luego.desc ,luego.pais 
    ,luego.situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_amc_nacionalidad delete on "informix"
    .amc_nacionalidad referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_nacionalidad (id,desc,
    pais,situacion,desp_id,desp_desc,desp_pais,desp_situacion,accion,
    usuario,hora)  values (antes.id ,antes.desc ,antes.pais ,antes.situacion 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_amc_nacionalidad update on "informix"
    .amc_nacionalidad referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_nacionalidad (id,desc,
    pais,situacion,desp_id,desp_desc,desp_pais,desp_situacion,accion,
    usuario,hora)  values (antes.id ,antes.desc ,antes.pais ,antes.situacion 
    ,luego.id ,luego.desc ,luego.pais ,luego.situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_amc_organizacion_mov_social insert 
    on "informix".amc_organizacion_mov_social referencing new 
    as luego
    for each row
        (
        insert into "informix".aud_amc_organizacion_mov_social 
    (id,desc,situacion,desp_id,desp_desc,desp_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,luego.id ,luego.desc ,luego.situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_amc_organizacion_mov_social delete 
    on "informix".amc_organizacion_mov_social referencing old 
    as antes
    for each row
        (
        insert into "informix".aud_amc_organizacion_mov_social 
    (id,desc,situacion,desp_id,desp_desc,desp_situacion,accion,usuario,
    hora)  values (antes.id ,antes.desc ,antes.situacion ,NULL ,'' ,'' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_amc_organizacion_mov_social update 
    on "informix".amc_organizacion_mov_social referencing old 
    as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_organizacion_mov_social 
    (id,desc,situacion,desp_id,desp_desc,desp_situacion,accion,usuario,
    hora)  values (antes.id ,antes.desc ,antes.situacion ,luego.id ,luego.desc 
    ,luego.situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_tipo_movimiento_social insert 
    on "informix".amc_tipo_movimiento_social referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_amc_tipo_movimiento_social 
    (id,desc,situacion,desp_id,desp_desc,desp_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,luego.id ,luego.desc ,luego.situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_amc_tipo_movimiento_social delete 
    on "informix".amc_tipo_movimiento_social referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_amc_tipo_movimiento_social 
    (id,desc,situacion,desp_id,desp_desc,desp_situacion,accion,usuario,
    hora)  values (antes.id ,antes.desc ,antes.situacion ,NULL ,'' ,'' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_amc_tipo_movimiento_social update 
    on "informix".amc_tipo_movimiento_social referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_amc_tipo_movimiento_social 
    (id,desc,situacion,desp_id,desp_desc,desp_situacion,accion,usuario,
    hora)  values (antes.id ,antes.desc ,antes.situacion ,luego.id ,luego.desc 
    ,luego.situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_tipo_desastre_natural insert 
    on "informix".amc_tipo_desastre_natural referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_amc_tipo_desastre_natural 
    (id,desc,situacion,desp_id,desp_desc,desp_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,luego.id ,luego.desc ,luego.situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_amc_tipo_desastre_natural delete 
    on "informix".amc_tipo_desastre_natural referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_amc_tipo_desastre_natural 
    (id,desc,situacion,desp_id,desp_desc,desp_situacion,accion,usuario,
    hora)  values (antes.id ,antes.desc ,antes.situacion ,NULL ,'' ,'' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_amc_tipo_desastre_natural update 
    on "informix".amc_tipo_desastre_natural referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_amc_tipo_desastre_natural 
    (id,desc,situacion,desp_id,desp_desc,desp_situacion,accion,usuario,
    hora)  values (antes.id ,antes.desc ,antes.situacion ,luego.id ,luego.desc 
    ,luego.situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_capturas insert on "informix"
    .amc_capturas referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_capturas (id,topico,info,
    situacion,desp_id,desp_topico,desp_info,desp_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ::lvarchar(2048) ,'' ,luego.id ,luego.topico 
    ,luego.info ,luego.situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_amc_capturas delete on "informix"
    .amc_capturas referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_capturas (id,topico,info,
    situacion,desp_id,desp_topico,desp_info,desp_situacion,accion,usuario,
    hora)  values (antes.id ,antes.topico ,antes.info ,antes.situacion 
    ,NULL ,'' ,'' ::lvarchar(2048) ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_amc_capturas update on "informix"
    .amc_capturas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_capturas (id,topico,info,
    situacion,desp_id,desp_topico,desp_info,desp_situacion,accion,usuario,
    hora)  values (antes.id ,antes.topico ,antes.info ,antes.situacion 
    ,luego.id ,luego.topico ,luego.info ,luego.situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_amc_actividad_vinculada insert 
    on "informix".amc_actividad_vinculada referencing new as luego
    
    for each row
        (
        insert into "informix".aud_amc_actividad_vinculada (id,
    desc,situacion,desp_id,desp_desc,desp_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,luego.id ,luego.desc ,luego.situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_amc_actividad_vinculada delete 
    on "informix".amc_actividad_vinculada referencing old as antes
    
    for each row
        (
        insert into "informix".aud_amc_actividad_vinculada (id,
    desc,situacion,desp_id,desp_desc,desp_situacion,accion,usuario,hora) 
     values (antes.id ,antes.desc ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_amc_actividad_vinculada update 
    on "informix".amc_actividad_vinculada referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_amc_actividad_vinculada (id,
    desc,situacion,desp_id,desp_desc,desp_situacion,accion,usuario,hora) 
     values (antes.id ,antes.desc ,antes.situacion ,luego.id ,luego.desc 
    ,luego.situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_moneda insert on "informix".amc_moneda 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_moneda (id,desc,cambio,
    situacion,desp_id,desp_desc,desp_cambio,desp_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,luego.id ,luego.desc ,luego.cambio 
    ,luego.situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_amc_moneda delete on "informix".amc_moneda 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_moneda (id,desc,cambio,
    situacion,desp_id,desp_desc,desp_cambio,desp_situacion,accion,usuario,
    hora)  values (antes.id ,antes.desc ,antes.cambio ,antes.situacion 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_amc_moneda update on "informix".amc_moneda 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_moneda (id,desc,cambio,
    situacion,desp_id,desp_desc,desp_cambio,desp_situacion,accion,usuario,
    hora)  values (antes.id ,antes.desc ,antes.cambio ,antes.situacion 
    ,luego.id ,luego.desc ,luego.cambio ,luego.situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_amc_fenomeno_natural insert on 
    "informix".amc_fenomeno_natural referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_fenomeno_natural (id,desc,
    situacion,desp_id,desp_desc,desp_situacion,accion,usuario,hora)  
    values (NULL ,'' ,'' ,luego.id ,luego.desc ,luego.situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_amc_fenomeno_natural delete on 
    "informix".amc_fenomeno_natural referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_fenomeno_natural (id,desc,
    situacion,desp_id,desp_desc,desp_situacion,accion,usuario,hora)  
    values (antes.id ,antes.desc ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_amc_fenomeno_natural update on 
    "informix".amc_fenomeno_natural referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_amc_fenomeno_natural (id,desc,
    situacion,desp_id,desp_desc,desp_situacion,accion,usuario,hora)  
    values (antes.id ,antes.desc ,antes.situacion ,luego.id ,luego.desc 
    ,luego.situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_tipo_topics insert on "informix"
    .amc_tipo_topics referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_tipo_topics (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,luego.id ,luego.desc ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_amc_tipo_topics delete on "informix"
    .amc_tipo_topics referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_tipo_topics (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_amc_tipo_topics update on "informix"
    .amc_tipo_topics referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_tipo_topics (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,luego.id ,luego.desc ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_tipo_armas insert on "informix"
    .amc_tipo_armas referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_tipo_armas (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,luego.id ,luego.desc ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_amc_tipo_armas delete on "informix"
    .amc_tipo_armas referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_tipo_armas (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_amc_tipo_armas update on "informix"
    .amc_tipo_armas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_tipo_armas (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,luego.id ,luego.desc ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_transporte insert on "informix"
    .amc_transporte referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_transporte (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,luego.id ,luego.desc ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_amc_transporte delete on "informix"
    .amc_transporte referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_transporte (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_amc_transporte update on "informix"
    .amc_transporte referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_transporte (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,luego.id ,luego.desc ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_prioridad insert on "informix"
    .amc_prioridad referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_prioridad (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,luego.id ,luego.desc ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_amc_prioridad delete on "informix"
    .amc_prioridad referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_prioridad (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_amc_prioridad update on "informix"
    .amc_prioridad referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_prioridad (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,luego.id ,luego.desc ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_tendencia insert on "informix"
    .amc_tendencia referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_tendencia (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,luego.id ,luego.desc ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_amc_tendencia delete on "informix"
    .amc_tendencia referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_tendencia (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_amc_tendencia update on "informix"
    .amc_tendencia referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_tendencia (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,luego.id ,luego.desc ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_usuarios insert on "informix"
    .amc_usuarios referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_usuarios (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,luego.id ,luego.desc ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_amc_usuarios delete on "informix"
    .amc_usuarios referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_usuarios (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_amc_usuarios update on "informix"
    .amc_usuarios referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_usuarios (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,luego.id ,luego.desc ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_calibre insert on "informix"
    .amc_calibre referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_calibre (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,luego.id ,luego.desc ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_amc_calibre delete on "informix"
    .amc_calibre referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_calibre (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_amc_calibre update on "informix"
    .amc_calibre referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_calibre (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,luego.id ,luego.desc ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_fuentes insert on "informix"
    .amc_fuentes referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_fuentes (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,luego.id ,luego.desc ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_amc_fuentes delete on "informix"
    .amc_fuentes referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_fuentes (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_amc_fuentes update on "informix"
    .amc_fuentes referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_fuentes (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,luego.id ,luego.desc ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_edades insert on "informix".amc_edades 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_edades (id,edades,situacion,
    desp_id,desp_edades,desp_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,luego.id ,luego.edades ,luego.situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_amc_edades delete on "informix".amc_edades 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_edades (id,edades,situacion,
    desp_id,desp_edades,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.edades ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_amc_edades update on "informix".amc_edades 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_edades (id,edades,situacion,
    desp_id,desp_edades,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.edades ,antes.situacion ,luego.id ,luego.edades ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_factor insert on "informix".amc_factor 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_factor (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,luego.id ,luego.desc ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_amc_factor delete on "informix".amc_factor 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_factor (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_amc_factor update on "informix".amc_factor 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_factor (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,luego.id ,luego.desc ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_delito insert on "informix".amc_delito 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_delito (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,luego.id ,luego.desc ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_amc_delito delete on "informix".amc_delito 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_delito (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_amc_delito update on "informix".amc_delito 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_delito (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,luego.id ,luego.desc ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_drogas insert on "informix".amc_drogas 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_drogas (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,luego.id ,luego.desc ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_amc_drogas delete on "informix".amc_drogas 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_drogas (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_amc_drogas update on "informix".amc_drogas 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_drogas (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,luego.id ,luego.desc ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_sexo insert on "informix".amc_sexo 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_sexo (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,luego.id ,luego.desc ,luego.situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_amc_sexo delete on "informix".amc_sexo 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_sexo (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_amc_sexo update on "informix".amc_sexo 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_amc_sexo (id,desc,situacion,
    desp_id,desp_desc,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.desc ,antes.situacion ,luego.id ,luego.desc ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_amc_per_asesinadas insert on "informix"
    .amc_per_asesinadas referencing new as luego
    for each row
        (
        insert into "informix".aud_amc_per_asesinadas (id,topico,
    nombre,edad,sexo,situacion,desp_id,desp_topico,desp_nombre,desp_edad,
    desp_sexo,desp_situacion,accion,usuario,hora)  values (NULL ,'' ,''
     ,'' ,'' ,'' ,luego.id ,luego.topico ,luego.nombre ,luego.edad ,luego.sexo 
    ,luego.situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_amc_per_asesinadas delete on "informix"
    .amc_per_asesinadas referencing old as antes
    for each row
        (
        insert into "informix".aud_amc_per_asesinadas (id,topico,
    nombre,edad,sexo,situacion,desp_id,desp_topico,desp_nombre,desp_edad,
    desp_sexo,desp_situacion,accion,usuario,hora)  values (antes.id ,
    antes.topico ,antes.nombre ,antes.edad ,antes.sexo ,antes.situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_amc_per_asesinadas update on "informix"
    .amc_per_asesinadas referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_amc_per_asesinadas (id,topico,
    nombre,edad,sexo,situacion,desp_id,desp_topico,desp_nombre,desp_edad,
    desp_sexo,desp_situacion,accion,usuario,hora)  values (antes.id ,
    antes.topico ,antes.nombre ,antes.edad ,antes.sexo ,antes.situacion 
    ,luego.id ,luego.topico ,luego.nombre ,luego.edad ,luego.sexo ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_larm_asentamiento insert on "informix"
    .larm_asentamiento referencing new as luego
    for each row
        (
        insert into "informix".aud_larm_asentamiento (asen_catalogo,
    asen_cuatrimestre,asen_year,asen_estado,asen_situacion,desp_asen_catalogo,
    desp_asen_cuatrimestre,desp_asen_year,desp_asen_estado,desp_asen_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.asen_catalogo 
    ,luego.asen_cuatrimestre ,luego.asen_year ,luego.asen_estado ,luego.asen_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_larm_asentamiento delete on "informix"
    .larm_asentamiento referencing old as antes
    for each row
        (
        insert into "informix".aud_larm_asentamiento (asen_catalogo,
    asen_cuatrimestre,asen_year,asen_estado,asen_situacion,desp_asen_catalogo,
    desp_asen_cuatrimestre,desp_asen_year,desp_asen_estado,desp_asen_situacion,
    accion,usuario,hora)  values (antes.asen_catalogo ,antes.asen_cuatrimestre 
    ,antes.asen_year ,antes.asen_estado ,antes.asen_situacion ,NULL ,
    '' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_larm_asentamiento update on "informix"
    .larm_asentamiento referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_larm_asentamiento (asen_catalogo,
    asen_cuatrimestre,asen_year,asen_estado,asen_situacion,desp_asen_catalogo,
    desp_asen_cuatrimestre,desp_asen_year,desp_asen_estado,desp_asen_situacion,
    accion,usuario,hora)  values (antes.asen_catalogo ,antes.asen_cuatrimestre 
    ,antes.asen_year ,antes.asen_estado ,antes.asen_situacion ,luego.asen_catalogo 
    ,luego.asen_cuatrimestre ,luego.asen_year ,luego.asen_estado ,luego.asen_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_departamentos insert on "informix"
    .coc_departamentos referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_departamentos (dep_codigo,
    dep_desc_lg,dep_desc_md,dep_desc_ct,dep_situacion,desp_dep_codigo,
    desp_dep_desc_lg,desp_dep_desc_md,desp_dep_desc_ct,desp_dep_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.dep_codigo 
    ,luego.dep_desc_lg ,luego.dep_desc_md ,luego.dep_desc_ct ,luego.dep_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_departamentos delete on "informix"
    .coc_departamentos referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_departamentos (dep_codigo,
    dep_desc_lg,dep_desc_md,dep_desc_ct,dep_situacion,desp_dep_codigo,
    desp_dep_desc_lg,desp_dep_desc_md,desp_dep_desc_ct,desp_dep_situacion,
    accion,usuario,hora)  values (antes.dep_codigo ,antes.dep_desc_lg 
    ,antes.dep_desc_md ,antes.dep_desc_ct ,antes.dep_situacion ,NULL 
    ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_departamentos update on "informix"
    .coc_departamentos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_departamentos (dep_codigo,
    dep_desc_lg,dep_desc_md,dep_desc_ct,dep_situacion,desp_dep_codigo,
    desp_dep_desc_lg,desp_dep_desc_md,desp_dep_desc_ct,desp_dep_situacion,
    accion,usuario,hora)  values (antes.dep_codigo ,antes.dep_desc_lg 
    ,antes.dep_desc_md ,antes.dep_desc_ct ,antes.dep_situacion ,luego.dep_codigo 
    ,luego.dep_desc_lg ,luego.dep_desc_md ,luego.dep_desc_ct ,luego.dep_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_municipios insert on "informix"
    .coc_municipios referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_municipios (mun_codigo,
    mun_cod_dep,mun_desc_lg,mun_desc_md,mun_desc_ct,mun_situacion,desp_mun_codigo,
    desp_mun_cod_dep,desp_mun_desc_lg,desp_mun_desc_md,desp_mun_desc_ct,
    desp_mun_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,luego.mun_codigo ,luego.mun_cod_dep ,luego.mun_desc_lg ,luego.mun_desc_md 
    ,luego.mun_desc_ct ,luego.mun_situacion ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_coc_municipios delete on "informix"
    .coc_municipios referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_municipios (mun_codigo,
    mun_cod_dep,mun_desc_lg,mun_desc_md,mun_desc_ct,mun_situacion,desp_mun_codigo,
    desp_mun_cod_dep,desp_mun_desc_lg,desp_mun_desc_md,desp_mun_desc_ct,
    desp_mun_situacion,accion,usuario,hora)  values (antes.mun_codigo 
    ,antes.mun_cod_dep ,antes.mun_desc_lg ,antes.mun_desc_md ,antes.mun_desc_ct 
    ,antes.mun_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_coc_municipios update on "informix"
    .coc_municipios referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_municipios (mun_codigo,
    mun_cod_dep,mun_desc_lg,mun_desc_md,mun_desc_ct,mun_situacion,desp_mun_codigo,
    desp_mun_cod_dep,desp_mun_desc_lg,desp_mun_desc_md,desp_mun_desc_ct,
    desp_mun_situacion,accion,usuario,hora)  values (antes.mun_codigo 
    ,antes.mun_cod_dep ,antes.mun_desc_lg ,antes.mun_desc_md ,antes.mun_desc_ct 
    ,antes.mun_situacion ,luego.mun_codigo ,luego.mun_cod_dep ,luego.mun_desc_lg 
    ,luego.mun_desc_md ,luego.mun_desc_ct ,luego.mun_situacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_lugar insert on "informix".coc_lugar 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_lugar (lug_codigo,lug_cod_mun,
    lug_descripcion,lug_latitud,lug_longitud,lug_hombres,lug_mujeres,
    lug_menores_masc,lug_menores_fem,lug_observaciones,lug_situacion,
    desp_lug_codigo,desp_lug_cod_mun,desp_lug_descripcion,desp_lug_latitud,
    desp_lug_longitud,desp_lug_hombres,desp_lug_mujeres,desp_lug_menores_masc,
    desp_lug_menores_fem,desp_lug_observaciones,desp_lug_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.lug_codigo 
    ,luego.lug_cod_mun ,luego.lug_descripcion ,luego.lug_latitud ,luego.lug_longitud 
    ,luego.lug_hombres ,luego.lug_mujeres ,luego.lug_menores_masc ,luego.lug_menores_fem 
    ,luego.lug_observaciones ,luego.lug_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_coc_lugar delete on "informix".coc_lugar 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_lugar (lug_codigo,lug_cod_mun,
    lug_descripcion,lug_latitud,lug_longitud,lug_hombres,lug_mujeres,
    lug_menores_masc,lug_menores_fem,lug_observaciones,lug_situacion,
    desp_lug_codigo,desp_lug_cod_mun,desp_lug_descripcion,desp_lug_latitud,
    desp_lug_longitud,desp_lug_hombres,desp_lug_mujeres,desp_lug_menores_masc,
    desp_lug_menores_fem,desp_lug_observaciones,desp_lug_situacion,accion,
    usuario,hora)  values (antes.lug_codigo ,antes.lug_cod_mun ,antes.lug_descripcion 
    ,antes.lug_latitud ,antes.lug_longitud ,antes.lug_hombres ,antes.lug_mujeres 
    ,antes.lug_menores_masc ,antes.lug_menores_fem ,antes.lug_observaciones 
    ,antes.lug_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_lugar update on "informix".coc_lugar 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_lugar (lug_codigo,lug_cod_mun,
    lug_descripcion,lug_latitud,lug_longitud,lug_hombres,lug_mujeres,
    lug_menores_masc,lug_menores_fem,lug_observaciones,lug_situacion,
    desp_lug_codigo,desp_lug_cod_mun,desp_lug_descripcion,desp_lug_latitud,
    desp_lug_longitud,desp_lug_hombres,desp_lug_mujeres,desp_lug_menores_masc,
    desp_lug_menores_fem,desp_lug_observaciones,desp_lug_situacion,accion,
    usuario,hora)  values (antes.lug_codigo ,antes.lug_cod_mun ,antes.lug_descripcion 
    ,antes.lug_latitud ,antes.lug_longitud ,antes.lug_hombres ,antes.lug_mujeres 
    ,antes.lug_menores_masc ,antes.lug_menores_fem ,antes.lug_observaciones 
    ,antes.lug_situacion ,luego.lug_codigo ,luego.lug_cod_mun ,luego.lug_descripcion 
    ,luego.lug_latitud ,luego.lug_longitud ,luego.lug_hombres ,luego.lug_mujeres 
    ,luego.lug_menores_masc ,luego.lug_menores_fem ,luego.lug_observaciones 
    ,luego.lug_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_detalle_lugar insert on "informix"
    .coc_detalle_lugar referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_detalle_lugar (det_lug_codigo,
    det_lug_reporte,det_lug_cod_lugar,det_lug_observacion,det_lug_situacion,
    desp_det_lug_codigo,desp_det_lug_reporte,desp_det_lug_cod_lugar,desp_det_lug_observacion,
    desp_det_lug_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,
    '' ,'' ,luego.det_lug_codigo ,luego.det_lug_reporte ,luego.det_lug_cod_lugar 
    ,luego.det_lug_observacion ,luego.det_lug_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_coc_detalle_lugar delete on "informix"
    .coc_detalle_lugar referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_detalle_lugar (det_lug_codigo,
    det_lug_reporte,det_lug_cod_lugar,det_lug_observacion,det_lug_situacion,
    desp_det_lug_codigo,desp_det_lug_reporte,desp_det_lug_cod_lugar,desp_det_lug_observacion,
    desp_det_lug_situacion,accion,usuario,hora)  values (antes.det_lug_codigo 
    ,antes.det_lug_reporte ,antes.det_lug_cod_lugar ,antes.det_lug_observacion 
    ,antes.det_lug_situacion ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_coc_detalle_lugar update on "informix"
    .coc_detalle_lugar referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_detalle_lugar (det_lug_codigo,
    det_lug_reporte,det_lug_cod_lugar,det_lug_observacion,det_lug_situacion,
    desp_det_lug_codigo,desp_det_lug_reporte,desp_det_lug_cod_lugar,desp_det_lug_observacion,
    desp_det_lug_situacion,accion,usuario,hora)  values (antes.det_lug_codigo 
    ,antes.det_lug_reporte ,antes.det_lug_cod_lugar ,antes.det_lug_observacion 
    ,antes.det_lug_situacion ,luego.det_lug_codigo ,luego.det_lug_reporte 
    ,luego.det_lug_cod_lugar ,luego.det_lug_observacion ,luego.det_lug_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_capta_requisitos insert on "informix"
    .capta_requisitos referencing new as luego
    for each row
        (
        insert into "informix".aud_capta_requisitos (regi_id,
    regi_nombre,regi_situacion,desp_regi_id,desp_regi_nombre,desp_regi_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.regi_id ,luego.regi_nombre 
    ,luego.regi_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_capta_requisitos delete on "informix"
    .capta_requisitos referencing old as antes
    for each row
        (
        insert into "informix".aud_capta_requisitos (regi_id,
    regi_nombre,regi_situacion,desp_regi_id,desp_regi_nombre,desp_regi_situacion,
    accion,usuario,hora)  values (antes.regi_id ,antes.regi_nombre ,antes.regi_situacion 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_capta_requisitos update on "informix"
    .capta_requisitos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_capta_requisitos (regi_id,
    regi_nombre,regi_situacion,desp_regi_id,desp_regi_nombre,desp_regi_situacion,
    accion,usuario,hora)  values (antes.regi_id ,antes.regi_nombre ,antes.regi_situacion 
    ,luego.regi_id ,luego.regi_nombre ,luego.regi_situacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_far_insumos_asignados insert on 
    "informix".far_insumos_asignados referencing new as luego
    for each row
        (
        insert into "informix".aud_far_insumos_asignados (ins_asig_id,
    ins_asig_ins_id,ins_asig_ins,ins_asig_pres,ins_asig_prec,ins_asig_cantidad,
    ins_asig_total,ins_asig_situacion,ins_desc_insumo,ins_fecha_vence,
    ins_lote,desp_ins_asig_id,desp_ins_asig_ins_id,desp_ins_asig_ins,
    desp_ins_asig_pres,desp_ins_asig_prec,desp_ins_asig_cantidad,desp_ins_asig_total,
    desp_ins_asig_situacion,desp_ins_desc_insumo,desp_ins_fecha_vence,
    desp_ins_lote,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,luego.ins_asig_id ,luego.ins_asig_ins_id ,luego.ins_asig_ins 
    ,luego.ins_asig_pres ,luego.ins_asig_prec ,luego.ins_asig_cantidad 
    ,luego.ins_asig_total ,luego.ins_asig_situacion ,luego.ins_desc_insumo 
    ,luego.ins_fecha_vence ,luego.ins_lote ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_far_insumos_asignados delete on 
    "informix".far_insumos_asignados referencing old as antes
    for each row
        (
        insert into "informix".aud_far_insumos_asignados (ins_asig_id,
    ins_asig_ins_id,ins_asig_ins,ins_asig_pres,ins_asig_prec,ins_asig_cantidad,
    ins_asig_total,ins_asig_situacion,ins_desc_insumo,ins_fecha_vence,
    ins_lote,desp_ins_asig_id,desp_ins_asig_ins_id,desp_ins_asig_ins,
    desp_ins_asig_pres,desp_ins_asig_prec,desp_ins_asig_cantidad,desp_ins_asig_total,
    desp_ins_asig_situacion,desp_ins_desc_insumo,desp_ins_fecha_vence,
    desp_ins_lote,accion,usuario,hora)  values (antes.ins_asig_id ,antes.ins_asig_ins_id 
    ,antes.ins_asig_ins ,antes.ins_asig_pres ,antes.ins_asig_prec ,antes.ins_asig_cantidad 
    ,antes.ins_asig_total ,antes.ins_asig_situacion ,antes.ins_desc_insumo 
    ,antes.ins_fecha_vence ,antes.ins_lote ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_far_insumos_asignados update on 
    "informix".far_insumos_asignados referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_far_insumos_asignados (ins_asig_id,
    ins_asig_ins_id,ins_asig_ins,ins_asig_pres,ins_asig_prec,ins_asig_cantidad,
    ins_asig_total,ins_asig_situacion,ins_desc_insumo,ins_fecha_vence,
    ins_lote,desp_ins_asig_id,desp_ins_asig_ins_id,desp_ins_asig_ins,
    desp_ins_asig_pres,desp_ins_asig_prec,desp_ins_asig_cantidad,desp_ins_asig_total,
    desp_ins_asig_situacion,desp_ins_desc_insumo,desp_ins_fecha_vence,
    desp_ins_lote,accion,usuario,hora)  values (antes.ins_asig_id ,antes.ins_asig_ins_id 
    ,antes.ins_asig_ins ,antes.ins_asig_pres ,antes.ins_asig_prec ,antes.ins_asig_cantidad 
    ,antes.ins_asig_total ,antes.ins_asig_situacion ,antes.ins_desc_insumo 
    ,antes.ins_fecha_vence ,antes.ins_lote ,luego.ins_asig_id ,luego.ins_asig_ins_id 
    ,luego.ins_asig_ins ,luego.ins_asig_pres ,luego.ins_asig_prec ,luego.ins_asig_cantidad 
    ,luego.ins_asig_total ,luego.ins_asig_situacion ,luego.ins_desc_insumo 
    ,luego.ins_fecha_vence ,luego.ins_lote ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_far_insumos_datos insert on "informix"
    .far_insumos_datos referencing new as luego
    for each row
        (
        insert into "informix".aud_far_insumos_datos (ins_id,
    ins_id_ingreso,ins_id_egresos,ins_proveedor,ins_fecha,ins_num_factura,
    ins_num_serie,ins_forma_pago,ins_fecha_pago,ins_totales,ins_situacion,
    ins_dependencia,ins_otra_dependencia,ins_persona_recibe,ins_persona_entrega,
    ins_tipo,ins_observaciones,desp_ins_id,desp_ins_id_ingreso,desp_ins_id_egresos,
    desp_ins_proveedor,desp_ins_fecha,desp_ins_num_factura,desp_ins_num_serie,
    desp_ins_forma_pago,desp_ins_fecha_pago,desp_ins_totales,desp_ins_situacion,
    desp_ins_dependencia,desp_ins_otra_dependencia,desp_ins_persona_recibe,
    desp_ins_persona_entrega,desp_ins_tipo,desp_ins_observaciones,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ::lvarchar(2000) ,luego.ins_id ,luego.ins_id_ingreso ,
    luego.ins_id_egresos ,luego.ins_proveedor ,luego.ins_fecha ,luego.ins_num_factura 
    ,luego.ins_num_serie ,luego.ins_forma_pago ,luego.ins_fecha_pago 
    ,luego.ins_totales ,luego.ins_situacion ,luego.ins_dependencia ,luego.ins_otra_dependencia 
    ,luego.ins_persona_recibe ,luego.ins_persona_entrega ,luego.ins_tipo 
    ,luego.ins_observaciones ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_far_insumos_datos delete on "informix"
    .far_insumos_datos referencing old as antes
    for each row
        (
        insert into "informix".aud_far_insumos_datos (ins_id,
    ins_id_ingreso,ins_id_egresos,ins_proveedor,ins_fecha,ins_num_factura,
    ins_num_serie,ins_forma_pago,ins_fecha_pago,ins_totales,ins_situacion,
    ins_dependencia,ins_otra_dependencia,ins_persona_recibe,ins_persona_entrega,
    ins_tipo,ins_observaciones,desp_ins_id,desp_ins_id_ingreso,desp_ins_id_egresos,
    desp_ins_proveedor,desp_ins_fecha,desp_ins_num_factura,desp_ins_num_serie,
    desp_ins_forma_pago,desp_ins_fecha_pago,desp_ins_totales,desp_ins_situacion,
    desp_ins_dependencia,desp_ins_otra_dependencia,desp_ins_persona_recibe,
    desp_ins_persona_entrega,desp_ins_tipo,desp_ins_observaciones,accion,
    usuario,hora)  values (antes.ins_id ,antes.ins_id_ingreso ,antes.ins_id_egresos 
    ,antes.ins_proveedor ,antes.ins_fecha ,antes.ins_num_factura ,antes.ins_num_serie 
    ,antes.ins_forma_pago ,antes.ins_fecha_pago ,antes.ins_totales ,antes.ins_situacion 
    ,antes.ins_dependencia ,antes.ins_otra_dependencia ,antes.ins_persona_recibe 
    ,antes.ins_persona_entrega ,antes.ins_tipo ,antes.ins_observaciones 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2000) 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_far_insumos_datos update on "informix"
    .far_insumos_datos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_far_insumos_datos (ins_id,
    ins_id_ingreso,ins_id_egresos,ins_proveedor,ins_fecha,ins_num_factura,
    ins_num_serie,ins_forma_pago,ins_fecha_pago,ins_totales,ins_situacion,
    ins_dependencia,ins_otra_dependencia,ins_persona_recibe,ins_persona_entrega,
    ins_tipo,ins_observaciones,desp_ins_id,desp_ins_id_ingreso,desp_ins_id_egresos,
    desp_ins_proveedor,desp_ins_fecha,desp_ins_num_factura,desp_ins_num_serie,
    desp_ins_forma_pago,desp_ins_fecha_pago,desp_ins_totales,desp_ins_situacion,
    desp_ins_dependencia,desp_ins_otra_dependencia,desp_ins_persona_recibe,
    desp_ins_persona_entrega,desp_ins_tipo,desp_ins_observaciones,accion,
    usuario,hora)  values (antes.ins_id ,antes.ins_id_ingreso ,antes.ins_id_egresos 
    ,antes.ins_proveedor ,antes.ins_fecha ,antes.ins_num_factura ,antes.ins_num_serie 
    ,antes.ins_forma_pago ,antes.ins_fecha_pago ,antes.ins_totales ,antes.ins_situacion 
    ,antes.ins_dependencia ,antes.ins_otra_dependencia ,antes.ins_persona_recibe 
    ,antes.ins_persona_entrega ,antes.ins_tipo ,antes.ins_observaciones 
    ,luego.ins_id ,luego.ins_id_ingreso ,luego.ins_id_egresos ,luego.ins_proveedor 
    ,luego.ins_fecha ,luego.ins_num_factura ,luego.ins_num_serie ,luego.ins_forma_pago 
    ,luego.ins_fecha_pago ,luego.ins_totales ,luego.ins_situacion ,luego.ins_dependencia 
    ,luego.ins_otra_dependencia ,luego.ins_persona_recibe ,luego.ins_persona_entrega 
    ,luego.ins_tipo ,luego.ins_observaciones ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_far_insumos_suma insert on "informix"
    .far_insumos_suma referencing new as luego
    for each row
        (
        insert into "informix".aud_far_insumos_suma (ins_id_suma,
    ins_nombre_farmaco_suma,ins_presentacion_farmaco_suma,ins_cantidad_suma,
    ins_situacion,ins_situacion_existencia,ins_cantidad_existente,ins_id_tabla_egresos,
    ins_lote_suma,ins_fecha_vence_suma,ins_dependencia_suma,desp_ins_id_suma,
    desp_ins_nombre_farmaco_suma,desp_ins_presentacion_farmaco_suma,desp_ins_cantidad_suma,
    desp_ins_situacion,desp_ins_situacion_existencia,desp_ins_cantidad_existente,
    desp_ins_id_tabla_egresos,desp_ins_lote_suma,desp_ins_fecha_vence_suma,
    desp_ins_dependencia_suma,accion,usuario,hora)  values (NULL ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.ins_id_suma ,luego.ins_nombre_farmaco_suma 
    ,luego.ins_presentacion_farmaco_suma ,luego.ins_cantidad_suma ,luego.ins_situacion 
    ,luego.ins_situacion_existencia ,luego.ins_cantidad_existente ,luego.ins_id_tabla_egresos 
    ,luego.ins_lote_suma ,luego.ins_fecha_vence_suma ,luego.ins_dependencia_suma 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_far_insumos_suma delete on "informix"
    .far_insumos_suma referencing old as antes
    for each row
        (
        insert into "informix".aud_far_insumos_suma (ins_id_suma,
    ins_nombre_farmaco_suma,ins_presentacion_farmaco_suma,ins_cantidad_suma,
    ins_situacion,ins_situacion_existencia,ins_cantidad_existente,ins_id_tabla_egresos,
    ins_lote_suma,ins_fecha_vence_suma,ins_dependencia_suma,desp_ins_id_suma,
    desp_ins_nombre_farmaco_suma,desp_ins_presentacion_farmaco_suma,desp_ins_cantidad_suma,
    desp_ins_situacion,desp_ins_situacion_existencia,desp_ins_cantidad_existente,
    desp_ins_id_tabla_egresos,desp_ins_lote_suma,desp_ins_fecha_vence_suma,
    desp_ins_dependencia_suma,accion,usuario,hora)  values (antes.ins_id_suma 
    ,antes.ins_nombre_farmaco_suma ,antes.ins_presentacion_farmaco_suma 
    ,antes.ins_cantidad_suma ,antes.ins_situacion ,antes.ins_situacion_existencia 
    ,antes.ins_cantidad_existente ,antes.ins_id_tabla_egresos ,antes.ins_lote_suma 
    ,antes.ins_fecha_vence_suma ,antes.ins_dependencia_suma ,NULL ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_far_insumos_suma update on "informix"
    .far_insumos_suma referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_far_insumos_suma (ins_id_suma,
    ins_nombre_farmaco_suma,ins_presentacion_farmaco_suma,ins_cantidad_suma,
    ins_situacion,ins_situacion_existencia,ins_cantidad_existente,ins_id_tabla_egresos,
    ins_lote_suma,ins_fecha_vence_suma,ins_dependencia_suma,desp_ins_id_suma,
    desp_ins_nombre_farmaco_suma,desp_ins_presentacion_farmaco_suma,desp_ins_cantidad_suma,
    desp_ins_situacion,desp_ins_situacion_existencia,desp_ins_cantidad_existente,
    desp_ins_id_tabla_egresos,desp_ins_lote_suma,desp_ins_fecha_vence_suma,
    desp_ins_dependencia_suma,accion,usuario,hora)  values (antes.ins_id_suma 
    ,antes.ins_nombre_farmaco_suma ,antes.ins_presentacion_farmaco_suma 
    ,antes.ins_cantidad_suma ,antes.ins_situacion ,antes.ins_situacion_existencia 
    ,antes.ins_cantidad_existente ,antes.ins_id_tabla_egresos ,antes.ins_lote_suma 
    ,antes.ins_fecha_vence_suma ,antes.ins_dependencia_suma ,luego.ins_id_suma 
    ,luego.ins_nombre_farmaco_suma ,luego.ins_presentacion_farmaco_suma 
    ,luego.ins_cantidad_suma ,luego.ins_situacion ,luego.ins_situacion_existencia 
    ,luego.ins_cantidad_existente ,luego.ins_id_tabla_egresos ,luego.ins_lote_suma 
    ,luego.ins_fecha_vence_suma ,luego.ins_dependencia_suma ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_farma_farmacos insert on "informix"
    .farma_farmacos referencing new as luego
    for each row
        (
        insert into "informix".aud_farma_farmacos (farmaco_id,
    farmaco_cod,farmaco_nom,farmaco_desc,farmaco_desc_ct,farmaco_tipo,
    farmaco_ren,farmaco_sit,farmaco_obs,desp_farmaco_id,desp_farmaco_cod,
    desp_farmaco_nom,desp_farmaco_desc,desp_farmaco_desc_ct,desp_farmaco_tipo,
    desp_farmaco_ren,desp_farmaco_sit,desp_farmaco_obs,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.farmaco_id ,luego.farmaco_cod 
    ,luego.farmaco_nom ,luego.farmaco_desc ,luego.farmaco_desc_ct ,luego.farmaco_tipo 
    ,luego.farmaco_ren ,luego.farmaco_sit ,luego.farmaco_obs ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_farma_farmacos delete on "informix"
    .farma_farmacos referencing old as antes
    for each row
        (
        insert into "informix".aud_farma_farmacos (farmaco_id,
    farmaco_cod,farmaco_nom,farmaco_desc,farmaco_desc_ct,farmaco_tipo,
    farmaco_ren,farmaco_sit,farmaco_obs,desp_farmaco_id,desp_farmaco_cod,
    desp_farmaco_nom,desp_farmaco_desc,desp_farmaco_desc_ct,desp_farmaco_tipo,
    desp_farmaco_ren,desp_farmaco_sit,desp_farmaco_obs,accion,usuario,
    hora)  values (antes.farmaco_id ,antes.farmaco_cod ,antes.farmaco_nom 
    ,antes.farmaco_desc ,antes.farmaco_desc_ct ,antes.farmaco_tipo ,antes.farmaco_ren 
    ,antes.farmaco_sit ,antes.farmaco_obs ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_farma_farmacos update on "informix"
    .farma_farmacos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_farma_farmacos (farmaco_id,
    farmaco_cod,farmaco_nom,farmaco_desc,farmaco_desc_ct,farmaco_tipo,
    farmaco_ren,farmaco_sit,farmaco_obs,desp_farmaco_id,desp_farmaco_cod,
    desp_farmaco_nom,desp_farmaco_desc,desp_farmaco_desc_ct,desp_farmaco_tipo,
    desp_farmaco_ren,desp_farmaco_sit,desp_farmaco_obs,accion,usuario,
    hora)  values (antes.farmaco_id ,antes.farmaco_cod ,antes.farmaco_nom 
    ,antes.farmaco_desc ,antes.farmaco_desc_ct ,antes.farmaco_tipo ,antes.farmaco_ren 
    ,antes.farmaco_sit ,antes.farmaco_obs ,luego.farmaco_id ,luego.farmaco_cod 
    ,luego.farmaco_nom ,luego.farmaco_desc ,luego.farmaco_desc_ct ,luego.farmaco_tipo 
    ,luego.farmaco_ren ,luego.farmaco_sit ,luego.farmaco_obs ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_sanciones_asc insert on "informix"
    .sanciones_asc referencing new as luego
    for each row
        (
        insert into "informix".aud_sanciones_asc (est_orden,est_catalogo,
    est_horas,est_demeritos,desp_est_orden,desp_est_catalogo,desp_est_horas,
    desp_est_demeritos,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.est_orden 
    ,luego.est_catalogo ,luego.est_horas ,luego.est_demeritos ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_sanciones_asc delete on "informix"
    .sanciones_asc referencing old as antes
    for each row
        (
        insert into "informix".aud_sanciones_asc (est_orden,est_catalogo,
    est_horas,est_demeritos,desp_est_orden,desp_est_catalogo,desp_est_horas,
    desp_est_demeritos,accion,usuario,hora)  values (antes.est_orden 
    ,antes.est_catalogo ,antes.est_horas ,antes.est_demeritos ,NULL ,
    '' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_sanciones_asc update on "informix"
    .sanciones_asc referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sanciones_asc (est_orden,est_catalogo,
    est_horas,est_demeritos,desp_est_orden,desp_est_catalogo,desp_est_horas,
    desp_est_demeritos,accion,usuario,hora)  values (antes.est_orden 
    ,antes.est_catalogo ,antes.est_horas ,antes.est_demeritos ,luego.est_orden 
    ,luego.est_catalogo ,luego.est_horas ,luego.est_demeritos ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ficha_medica_asc insert on "informix"
    .ficha_medica_asc referencing new as luego
    for each row
        (
        insert into "informix".aud_ficha_medica_asc (fic_orden,
    fic_catalogo,fic_desc,fic_observacion,desp_fic_orden,desp_fic_catalogo,
    desp_fic_desc,desp_fic_observacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,luego.fic_orden ,luego.fic_catalogo ,luego.fic_desc ,luego.fic_observacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ficha_medica_asc delete on "informix"
    .ficha_medica_asc referencing old as antes
    for each row
        (
        insert into "informix".aud_ficha_medica_asc (fic_orden,
    fic_catalogo,fic_desc,fic_observacion,desp_fic_orden,desp_fic_catalogo,
    desp_fic_desc,desp_fic_observacion,accion,usuario,hora)  values (antes.fic_orden 
    ,antes.fic_catalogo ,antes.fic_desc ,antes.fic_observacion ,NULL 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ficha_medica_asc update on "informix"
    .ficha_medica_asc referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ficha_medica_asc (fic_orden,
    fic_catalogo,fic_desc,fic_observacion,desp_fic_orden,desp_fic_catalogo,
    desp_fic_desc,desp_fic_observacion,accion,usuario,hora)  values (antes.fic_orden 
    ,antes.fic_catalogo ,antes.fic_desc ,antes.fic_observacion ,luego.fic_orden 
    ,luego.fic_catalogo ,luego.fic_desc ,luego.fic_observacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tiempo_comando_asc insert on "informix"
    .tiempo_comando_asc referencing new as luego
    for each row
        (
        insert into "informix".aud_tiempo_comando_asc (com_orden,
    com_catalogo,com_comando,desp_com_orden,desp_com_catalogo,desp_com_comando,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.com_orden ,luego.com_catalogo 
    ,luego.com_comando ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_tiempo_comando_asc delete on "informix"
    .tiempo_comando_asc referencing old as antes
    for each row
        (
        insert into "informix".aud_tiempo_comando_asc (com_orden,
    com_catalogo,com_comando,desp_com_orden,desp_com_catalogo,desp_com_comando,
    accion,usuario,hora)  values (antes.com_orden ,antes.com_catalogo 
    ,antes.com_comando ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_tiempo_comando_asc update on "informix"
    .tiempo_comando_asc referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_tiempo_comando_asc (com_orden,
    com_catalogo,com_comando,desp_com_orden,desp_com_catalogo,desp_com_comando,
    accion,usuario,hora)  values (antes.com_orden ,antes.com_catalogo 
    ,antes.com_comando ,luego.com_orden ,luego.com_catalogo ,luego.com_comando 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_evaluaciones_perfil_asc insert 
    on "informix".evaluaciones_perfil_asc referencing new as luego
    
    for each row
        (
        insert into "informix".aud_evaluaciones_perfil_asc (e_orden,
    e_catalogo,e_diagnost,e_fecha,e_puntuacion,e_estado,desp_e_orden,
    desp_e_catalogo,desp_e_diagnost,desp_e_fecha,desp_e_puntuacion,desp_e_estado,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.e_orden 
    ,luego.e_catalogo ,luego.e_diagnost ,luego.e_fecha ,luego.e_puntuacion 
    ,luego.e_estado ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_evaluaciones_perfil_asc delete 
    on "informix".evaluaciones_perfil_asc referencing old as antes
    
    for each row
        (
        insert into "informix".aud_evaluaciones_perfil_asc (e_orden,
    e_catalogo,e_diagnost,e_fecha,e_puntuacion,e_estado,desp_e_orden,
    desp_e_catalogo,desp_e_diagnost,desp_e_fecha,desp_e_puntuacion,desp_e_estado,
    accion,usuario,hora)  values (antes.e_orden ,antes.e_catalogo ,antes.e_diagnost 
    ,antes.e_fecha ,antes.e_puntuacion ,antes.e_estado ,NULL ,'' ,'' ,''
     ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_evaluaciones_perfil_asc update 
    on "informix".evaluaciones_perfil_asc referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_evaluaciones_perfil_asc (e_orden,
    e_catalogo,e_diagnost,e_fecha,e_puntuacion,e_estado,desp_e_orden,
    desp_e_catalogo,desp_e_diagnost,desp_e_fecha,desp_e_puntuacion,desp_e_estado,
    accion,usuario,hora)  values (antes.e_orden ,antes.e_catalogo ,antes.e_diagnost 
    ,antes.e_fecha ,antes.e_puntuacion ,antes.e_estado ,luego.e_orden 
    ,luego.e_catalogo ,luego.e_diagnost ,luego.e_fecha ,luego.e_puntuacion 
    ,luego.e_estado ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_opaf_notas_asc insert on "informix"
    .opaf_notas_asc referencing new as luego
    for each row
        (
        insert into "informix".aud_opaf_notas_asc (not_orden,
    not_catalogo,not_fecha,not_promedio,not_tipo,desp_not_orden,desp_not_catalogo,
    desp_not_fecha,desp_not_promedio,desp_not_tipo,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,luego.not_orden ,luego.not_catalogo ,luego.not_fecha 
    ,luego.not_promedio ,luego.not_tipo ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_opaf_notas_asc delete on "informix"
    .opaf_notas_asc referencing old as antes
    for each row
        (
        insert into "informix".aud_opaf_notas_asc (not_orden,
    not_catalogo,not_fecha,not_promedio,not_tipo,desp_not_orden,desp_not_catalogo,
    desp_not_fecha,desp_not_promedio,desp_not_tipo,accion,usuario,hora) 
     values (antes.not_orden ,antes.not_catalogo ,antes.not_fecha ,antes.not_promedio 
    ,antes.not_tipo ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_opaf_notas_asc update on "informix"
    .opaf_notas_asc referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_opaf_notas_asc (not_orden,
    not_catalogo,not_fecha,not_promedio,not_tipo,desp_not_orden,desp_not_catalogo,
    desp_not_fecha,desp_not_promedio,desp_not_tipo,accion,usuario,hora) 
     values (antes.not_orden ,antes.not_catalogo ,antes.not_fecha ,antes.not_promedio 
    ,antes.not_tipo ,luego.not_orden ,luego.not_catalogo ,luego.not_fecha 
    ,luego.not_promedio ,luego.not_tipo ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_eva_evaluacion_asc insert on "informix"
    .eva_evaluacion_asc referencing new as luego
    for each row
        (
        insert into "informix".aud_eva_evaluacion_asc (eva_orden,
    eva_id,eva_periodo,eva_renglon,eva_catalogo,eva_grado,desp_eva_orden,
    desp_eva_id,desp_eva_periodo,desp_eva_renglon,desp_eva_catalogo,desp_eva_grado,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.eva_orden 
    ,luego.eva_id ,luego.eva_periodo ,luego.eva_renglon ,luego.eva_catalogo 
    ,luego.eva_grado ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_eva_evaluacion_asc delete on "informix"
    .eva_evaluacion_asc referencing old as antes
    for each row
        (
        insert into "informix".aud_eva_evaluacion_asc (eva_orden,
    eva_id,eva_periodo,eva_renglon,eva_catalogo,eva_grado,desp_eva_orden,
    desp_eva_id,desp_eva_periodo,desp_eva_renglon,desp_eva_catalogo,desp_eva_grado,
    accion,usuario,hora)  values (antes.eva_orden ,antes.eva_id ,antes.eva_periodo 
    ,antes.eva_renglon ,antes.eva_catalogo ,antes.eva_grado ,NULL ,'' 
    ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_eva_evaluacion_asc update on "informix"
    .eva_evaluacion_asc referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_eva_evaluacion_asc (eva_orden,
    eva_id,eva_periodo,eva_renglon,eva_catalogo,eva_grado,desp_eva_orden,
    desp_eva_id,desp_eva_periodo,desp_eva_renglon,desp_eva_catalogo,desp_eva_grado,
    accion,usuario,hora)  values (antes.eva_orden ,antes.eva_id ,antes.eva_periodo 
    ,antes.eva_renglon ,antes.eva_catalogo ,antes.eva_grado ,luego.eva_orden 
    ,luego.eva_id ,luego.eva_periodo ,luego.eva_renglon ,luego.eva_catalogo 
    ,luego.eva_grado ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_eva_notas_asc insert on "informix"
    .eva_notas_asc referencing new as luego
    for each row
        (
        insert into "informix".aud_eva_notas_asc (no_orden,no_id,
    no_factores,no_evaluacion,no_pregunta,no_nota,no_tipo,no_fecha,no_usuario,
    desp_no_orden,desp_no_id,desp_no_factores,desp_no_evaluacion,desp_no_pregunta,
    desp_no_nota,desp_no_tipo,desp_no_fecha,desp_no_usuario,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.no_orden ,luego.no_id 
    ,luego.no_factores ,luego.no_evaluacion ,luego.no_pregunta ,luego.no_nota 
    ,luego.no_tipo ,luego.no_fecha ,luego.no_usuario ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_eva_notas_asc delete on "informix"
    .eva_notas_asc referencing old as antes
    for each row
        (
        insert into "informix".aud_eva_notas_asc (no_orden,no_id,
    no_factores,no_evaluacion,no_pregunta,no_nota,no_tipo,no_fecha,no_usuario,
    desp_no_orden,desp_no_id,desp_no_factores,desp_no_evaluacion,desp_no_pregunta,
    desp_no_nota,desp_no_tipo,desp_no_fecha,desp_no_usuario,accion,usuario,
    hora)  values (antes.no_orden ,antes.no_id ,antes.no_factores ,antes.no_evaluacion 
    ,antes.no_pregunta ,antes.no_nota ,antes.no_tipo ,antes.no_fecha 
    ,antes.no_usuario ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_eva_notas_asc update on "informix"
    .eva_notas_asc referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eva_notas_asc (no_orden,no_id,
    no_factores,no_evaluacion,no_pregunta,no_nota,no_tipo,no_fecha,no_usuario,
    desp_no_orden,desp_no_id,desp_no_factores,desp_no_evaluacion,desp_no_pregunta,
    desp_no_nota,desp_no_tipo,desp_no_fecha,desp_no_usuario,accion,usuario,
    hora)  values (antes.no_orden ,antes.no_id ,antes.no_factores ,antes.no_evaluacion 
    ,antes.no_pregunta ,antes.no_nota ,antes.no_tipo ,antes.no_fecha 
    ,antes.no_usuario ,luego.no_orden ,luego.no_id ,luego.no_factores 
    ,luego.no_evaluacion ,luego.no_pregunta ,luego.no_nota ,luego.no_tipo 
    ,luego.no_fecha ,luego.no_usuario ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_cursos_asc insert on "informix".cursos_asc 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_cursos_asc (cur_orden,cur_catalogo,
    cur_desc_lg,cur_fec_inicio,cur_fec_fin,cur_punteo,cur_curso,desp_cur_orden,
    desp_cur_catalogo,desp_cur_desc_lg,desp_cur_fec_inicio,desp_cur_fec_fin,
    desp_cur_punteo,desp_cur_curso,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,luego.cur_orden ,luego.cur_catalogo ,luego.cur_desc_lg 
    ,luego.cur_fec_inicio ,luego.cur_fec_fin ,luego.cur_punteo ,luego.cur_curso 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_cursos_asc delete on "informix".cursos_asc 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_cursos_asc (cur_orden,cur_catalogo,
    cur_desc_lg,cur_fec_inicio,cur_fec_fin,cur_punteo,cur_curso,desp_cur_orden,
    desp_cur_catalogo,desp_cur_desc_lg,desp_cur_fec_inicio,desp_cur_fec_fin,
    desp_cur_punteo,desp_cur_curso,accion,usuario,hora)  values (antes.cur_orden 
    ,antes.cur_catalogo ,antes.cur_desc_lg ,antes.cur_fec_inicio ,antes.cur_fec_fin 
    ,antes.cur_punteo ,antes.cur_curso ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_cursos_asc update on "informix".cursos_asc 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_cursos_asc (cur_orden,cur_catalogo,
    cur_desc_lg,cur_fec_inicio,cur_fec_fin,cur_punteo,cur_curso,desp_cur_orden,
    desp_cur_catalogo,desp_cur_desc_lg,desp_cur_fec_inicio,desp_cur_fec_fin,
    desp_cur_punteo,desp_cur_curso,accion,usuario,hora)  values (antes.cur_orden 
    ,antes.cur_catalogo ,antes.cur_desc_lg ,antes.cur_fec_inicio ,antes.cur_fec_fin 
    ,antes.cur_punteo ,antes.cur_curso ,luego.cur_orden ,luego.cur_catalogo 
    ,luego.cur_desc_lg ,luego.cur_fec_inicio ,luego.cur_fec_fin ,luego.cur_punteo 
    ,luego.cur_curso ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_creditos_asc insert on "informix"
    .creditos_asc referencing new as luego
    for each row
        (
        insert into "informix".aud_creditos_asc (cre_orden,cre_catalogo,
    cre_fecha,cre_cur_mil,cre_cur_uni,cre_cur_cap,cre_idiomas,cre_conde,
    not_total,desp_cre_orden,desp_cre_catalogo,desp_cre_fecha,desp_cre_cur_mil,
    desp_cre_cur_uni,desp_cre_cur_cap,desp_cre_idiomas,desp_cre_conde,
    desp_not_total,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,luego.cre_orden ,luego.cre_catalogo ,luego.cre_fecha ,luego.cre_cur_mil 
    ,luego.cre_cur_uni ,luego.cre_cur_cap ,luego.cre_idiomas ,luego.cre_conde 
    ,luego.not_total ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_creditos_asc delete on "informix"
    .creditos_asc referencing old as antes
    for each row
        (
        insert into "informix".aud_creditos_asc (cre_orden,cre_catalogo,
    cre_fecha,cre_cur_mil,cre_cur_uni,cre_cur_cap,cre_idiomas,cre_conde,
    not_total,desp_cre_orden,desp_cre_catalogo,desp_cre_fecha,desp_cre_cur_mil,
    desp_cre_cur_uni,desp_cre_cur_cap,desp_cre_idiomas,desp_cre_conde,
    desp_not_total,accion,usuario,hora)  values (antes.cre_orden ,antes.cre_catalogo 
    ,antes.cre_fecha ,antes.cre_cur_mil ,antes.cre_cur_uni ,antes.cre_cur_cap 
    ,antes.cre_idiomas ,antes.cre_conde ,antes.not_total ,NULL ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_creditos_asc update on "informix"
    .creditos_asc referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_creditos_asc (cre_orden,cre_catalogo,
    cre_fecha,cre_cur_mil,cre_cur_uni,cre_cur_cap,cre_idiomas,cre_conde,
    not_total,desp_cre_orden,desp_cre_catalogo,desp_cre_fecha,desp_cre_cur_mil,
    desp_cre_cur_uni,desp_cre_cur_cap,desp_cre_idiomas,desp_cre_conde,
    desp_not_total,accion,usuario,hora)  values (antes.cre_orden ,antes.cre_catalogo 
    ,antes.cre_fecha ,antes.cre_cur_mil ,antes.cre_cur_uni ,antes.cre_cur_cap 
    ,antes.cre_idiomas ,antes.cre_conde ,antes.not_total ,luego.cre_orden 
    ,luego.cre_catalogo ,luego.cre_fecha ,luego.cre_cur_mil ,luego.cre_cur_uni 
    ,luego.cre_cur_cap ,luego.cre_idiomas ,luego.cre_conde ,luego.not_total 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_mper_asc insert on "informix".mper_asc 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_mper_asc (per_catalogo,per_grado,
    per_arma,per_nom1,per_nom2,per_ape1,per_ape2,per_promocion,per_plaza,
    per_desc_empleo,per_fec_nomb,per_dpi,per_orden_puesto,desp_per_catalogo,
    desp_per_grado,desp_per_arma,desp_per_nom1,desp_per_nom2,desp_per_ape1,
    desp_per_ape2,desp_per_promocion,desp_per_plaza,desp_per_desc_empleo,
    desp_per_fec_nomb,desp_per_dpi,desp_per_orden_puesto,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.per_catalogo 
    ,luego.per_grado ,luego.per_arma ,luego.per_nom1 ,luego.per_nom2 
    ,luego.per_ape1 ,luego.per_ape2 ,luego.per_promocion ,luego.per_plaza 
    ,luego.per_desc_empleo ,luego.per_fec_nomb ,luego.per_dpi ,luego.per_orden_puesto 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_mper_asc delete on "informix".mper_asc 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_mper_asc (per_catalogo,per_grado,
    per_arma,per_nom1,per_nom2,per_ape1,per_ape2,per_promocion,per_plaza,
    per_desc_empleo,per_fec_nomb,per_dpi,per_orden_puesto,desp_per_catalogo,
    desp_per_grado,desp_per_arma,desp_per_nom1,desp_per_nom2,desp_per_ape1,
    desp_per_ape2,desp_per_promocion,desp_per_plaza,desp_per_desc_empleo,
    desp_per_fec_nomb,desp_per_dpi,desp_per_orden_puesto,accion,usuario,
    hora)  values (antes.per_catalogo ,antes.per_grado ,antes.per_arma 
    ,antes.per_nom1 ,antes.per_nom2 ,antes.per_ape1 ,antes.per_ape2 ,
    antes.per_promocion ,antes.per_plaza ,antes.per_desc_empleo ,antes.per_fec_nomb 
    ,antes.per_dpi ,antes.per_orden_puesto ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_mper_asc update on "informix".mper_asc 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mper_asc (per_catalogo,per_grado,
    per_arma,per_nom1,per_nom2,per_ape1,per_ape2,per_promocion,per_plaza,
    per_desc_empleo,per_fec_nomb,per_dpi,per_orden_puesto,desp_per_catalogo,
    desp_per_grado,desp_per_arma,desp_per_nom1,desp_per_nom2,desp_per_ape1,
    desp_per_ape2,desp_per_promocion,desp_per_plaza,desp_per_desc_empleo,
    desp_per_fec_nomb,desp_per_dpi,desp_per_orden_puesto,accion,usuario,
    hora)  values (antes.per_catalogo ,antes.per_grado ,antes.per_arma 
    ,antes.per_nom1 ,antes.per_nom2 ,antes.per_ape1 ,antes.per_ape2 ,
    antes.per_promocion ,antes.per_plaza ,antes.per_desc_empleo ,antes.per_fec_nomb 
    ,antes.per_dpi ,antes.per_orden_puesto ,luego.per_catalogo ,luego.per_grado 
    ,luego.per_arma ,luego.per_nom1 ,luego.per_nom2 ,luego.per_ape1 ,
    luego.per_ape2 ,luego.per_promocion ,luego.per_plaza ,luego.per_desc_empleo 
    ,luego.per_fec_nomb ,luego.per_dpi ,luego.per_orden_puesto ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_observaciones_asc insert on "informix"
    .observaciones_asc referencing new as luego
    for each row
        (
        insert into "informix".aud_observaciones_asc (obs_orden,
    obs_catalogo,obs_descripcion,desp_obs_orden,desp_obs_catalogo,desp_obs_descripcion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.obs_orden ,luego.obs_catalogo 
    ,luego.obs_descripcion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_observaciones_asc delete on "informix"
    .observaciones_asc referencing old as antes
    for each row
        (
        insert into "informix".aud_observaciones_asc (obs_orden,
    obs_catalogo,obs_descripcion,desp_obs_orden,desp_obs_catalogo,desp_obs_descripcion,
    accion,usuario,hora)  values (antes.obs_orden ,antes.obs_catalogo 
    ,antes.obs_descripcion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_observaciones_asc update on "informix"
    .observaciones_asc referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_observaciones_asc (obs_orden,
    obs_catalogo,obs_descripcion,desp_obs_orden,desp_obs_catalogo,desp_obs_descripcion,
    accion,usuario,hora)  values (antes.obs_orden ,antes.obs_catalogo 
    ,antes.obs_descripcion ,luego.obs_orden ,luego.obs_catalogo ,luego.obs_descripcion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_coordenadas3 insert on "informix"
    .coc_coordenadas3 referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_coordenadas3 (coo_id,coo_reporte,
    coo_lat,coo_long,coo_lugar,coo_situacion,desp_coo_id,desp_coo_reporte,
    desp_coo_lat,desp_coo_long,desp_coo_lugar,desp_coo_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.coo_id ,luego.coo_reporte 
    ,luego.coo_lat ,luego.coo_long ,luego.coo_lugar ,luego.coo_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_coordenadas3 delete on "informix"
    .coc_coordenadas3 referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_coordenadas3 (coo_id,coo_reporte,
    coo_lat,coo_long,coo_lugar,coo_situacion,desp_coo_id,desp_coo_reporte,
    desp_coo_lat,desp_coo_long,desp_coo_lugar,desp_coo_situacion,accion,
    usuario,hora)  values (antes.coo_id ,antes.coo_reporte ,antes.coo_lat 
    ,antes.coo_long ,antes.coo_lugar ,antes.coo_situacion ,NULL ,'' ,''
     ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_coordenadas3 update on "informix"
    .coc_coordenadas3 referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_coordenadas3 (coo_id,coo_reporte,
    coo_lat,coo_long,coo_lugar,coo_situacion,desp_coo_id,desp_coo_reporte,
    desp_coo_lat,desp_coo_long,desp_coo_lugar,desp_coo_situacion,accion,
    usuario,hora)  values (antes.coo_id ,antes.coo_reporte ,antes.coo_lat 
    ,antes.coo_long ,antes.coo_lugar ,antes.coo_situacion ,luego.coo_id 
    ,luego.coo_reporte ,luego.coo_lat ,luego.coo_long ,luego.coo_lugar 
    ,luego.coo_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_dep_orden insert on "informix"
    .coc_dep_orden referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_dep_orden (dep_ord_codigo,
    dep_ord_orden,dep_ord_dependencia,dep_ord_situacion,desp_dep_ord_codigo,
    desp_dep_ord_orden,desp_dep_ord_dependencia,desp_dep_ord_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.dep_ord_codigo 
    ,luego.dep_ord_orden ,luego.dep_ord_dependencia ,luego.dep_ord_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_dep_orden delete on "informix"
    .coc_dep_orden referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_dep_orden (dep_ord_codigo,
    dep_ord_orden,dep_ord_dependencia,dep_ord_situacion,desp_dep_ord_codigo,
    desp_dep_ord_orden,desp_dep_ord_dependencia,desp_dep_ord_situacion,
    accion,usuario,hora)  values (antes.dep_ord_codigo ,antes.dep_ord_orden 
    ,antes.dep_ord_dependencia ,antes.dep_ord_situacion ,NULL ,'' ,'' ,
    '' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_dep_orden update on "informix"
    .coc_dep_orden referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_dep_orden (dep_ord_codigo,
    dep_ord_orden,dep_ord_dependencia,dep_ord_situacion,desp_dep_ord_codigo,
    desp_dep_ord_orden,desp_dep_ord_dependencia,desp_dep_ord_situacion,
    accion,usuario,hora)  values (antes.dep_ord_codigo ,antes.dep_ord_orden 
    ,antes.dep_ord_dependencia ,antes.dep_ord_situacion ,luego.dep_ord_codigo 
    ,luego.dep_ord_orden ,luego.dep_ord_dependencia ,luego.dep_ord_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_operaciones insert on "informix"
    .coc_operaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_operaciones (ope_codigo,
    ope_area_codigo,ope_descripcion,ope_observacion,ope_situacion,desp_ope_codigo,
    desp_ope_area_codigo,desp_ope_descripcion,desp_ope_observacion,desp_ope_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.ope_codigo 
    ,luego.ope_area_codigo ,luego.ope_descripcion ,luego.ope_observacion 
    ,luego.ope_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_operaciones delete on "informix"
    .coc_operaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_operaciones (ope_codigo,
    ope_area_codigo,ope_descripcion,ope_observacion,ope_situacion,desp_ope_codigo,
    desp_ope_area_codigo,desp_ope_descripcion,desp_ope_observacion,desp_ope_situacion,
    accion,usuario,hora)  values (antes.ope_codigo ,antes.ope_area_codigo 
    ,antes.ope_descripcion ,antes.ope_observacion ,antes.ope_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_operaciones update on "informix"
    .coc_operaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_operaciones (ope_codigo,
    ope_area_codigo,ope_descripcion,ope_observacion,ope_situacion,desp_ope_codigo,
    desp_ope_area_codigo,desp_ope_descripcion,desp_ope_observacion,desp_ope_situacion,
    accion,usuario,hora)  values (antes.ope_codigo ,antes.ope_area_codigo 
    ,antes.ope_descripcion ,antes.ope_observacion ,antes.ope_situacion 
    ,luego.ope_codigo ,luego.ope_area_codigo ,luego.ope_descripcion ,
    luego.ope_observacion ,luego.ope_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_coc_personal2 insert on "informix"
    .coc_personal2 referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_personal2 (per_id,per_reporte,
    per_anio,per_dep,per_tipo,per_cantidad,desp_per_id,desp_per_reporte,
    desp_per_anio,desp_per_dep,desp_per_tipo,desp_per_cantidad,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.per_id ,luego.per_reporte 
    ,luego.per_anio ,luego.per_dep ,luego.per_tipo ,luego.per_cantidad 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_personal2 delete on "informix"
    .coc_personal2 referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_personal2 (per_id,per_reporte,
    per_anio,per_dep,per_tipo,per_cantidad,desp_per_id,desp_per_reporte,
    desp_per_anio,desp_per_dep,desp_per_tipo,desp_per_cantidad,accion,
    usuario,hora)  values (antes.per_id ,antes.per_reporte ,antes.per_anio 
    ,antes.per_dep ,antes.per_tipo ,antes.per_cantidad ,NULL ,'' ,'' ,''
     ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_personal2 update on "informix"
    .coc_personal2 referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_personal2 (per_id,per_reporte,
    per_anio,per_dep,per_tipo,per_cantidad,desp_per_id,desp_per_reporte,
    desp_per_anio,desp_per_dep,desp_per_tipo,desp_per_cantidad,accion,
    usuario,hora)  values (antes.per_id ,antes.per_reporte ,antes.per_anio 
    ,antes.per_dep ,antes.per_tipo ,antes.per_cantidad ,luego.per_id 
    ,luego.per_reporte ,luego.per_anio ,luego.per_dep ,luego.per_tipo 
    ,luego.per_cantidad ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_ordenes insert on "informix"
    .coc_ordenes referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_ordenes (ord_codigo,ord_referencia,
    ord_descripcion,ord_situacion,desp_ord_codigo,desp_ord_referencia,
    desp_ord_descripcion,desp_ord_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,luego.ord_codigo ,luego.ord_referencia ,luego.ord_descripcion 
    ,luego.ord_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_ordenes delete on "informix"
    .coc_ordenes referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_ordenes (ord_codigo,ord_referencia,
    ord_descripcion,ord_situacion,desp_ord_codigo,desp_ord_referencia,
    desp_ord_descripcion,desp_ord_situacion,accion,usuario,hora)  values 
    (antes.ord_codigo ,antes.ord_referencia ,antes.ord_descripcion ,antes.ord_situacion 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_ordenes update on "informix"
    .coc_ordenes referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_ordenes (ord_codigo,ord_referencia,
    ord_descripcion,ord_situacion,desp_ord_codigo,desp_ord_referencia,
    desp_ord_descripcion,desp_ord_situacion,accion,usuario,hora)  values 
    (antes.ord_codigo ,antes.ord_referencia ,antes.ord_descripcion ,antes.ord_situacion 
    ,luego.ord_codigo ,luego.ord_referencia ,luego.ord_descripcion ,luego.ord_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_proposito insert on "informix"
    .coc_proposito referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_proposito (prop_codigo,
    prop_ope_codigo,prop_descripcion,prop_situacion,desp_prop_codigo,
    desp_prop_ope_codigo,desp_prop_descripcion,desp_prop_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.prop_codigo ,luego.prop_ope_codigo 
    ,luego.prop_descripcion ,luego.prop_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_coc_proposito delete on "informix"
    .coc_proposito referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_proposito (prop_codigo,
    prop_ope_codigo,prop_descripcion,prop_situacion,desp_prop_codigo,
    desp_prop_ope_codigo,desp_prop_descripcion,desp_prop_situacion,accion,
    usuario,hora)  values (antes.prop_codigo ,antes.prop_ope_codigo ,
    antes.prop_descripcion ,antes.prop_situacion ,NULL ,'' ,'' ,'' ,'D' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_proposito update on "informix"
    .coc_proposito referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_proposito (prop_codigo,
    prop_ope_codigo,prop_descripcion,prop_situacion,desp_prop_codigo,
    desp_prop_ope_codigo,desp_prop_descripcion,desp_prop_situacion,accion,
    usuario,hora)  values (antes.prop_codigo ,antes.prop_ope_codigo ,
    antes.prop_descripcion ,antes.prop_situacion ,luego.prop_codigo ,
    luego.prop_ope_codigo ,luego.prop_descripcion ,luego.prop_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_detalle_instituciones insert 
    on "informix".coc_detalle_instituciones referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_coc_detalle_instituciones 
    (det_ins_codigo,det_ins_reporte,det_ins_cod_institucion,det_ins_observacion,
    det_ins_situacion,desp_det_ins_codigo,desp_det_ins_reporte,desp_det_ins_cod_institucion,
    desp_det_ins_observacion,desp_det_ins_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,luego.det_ins_codigo ,luego.det_ins_reporte 
    ,luego.det_ins_cod_institucion ,luego.det_ins_observacion ,luego.det_ins_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_detalle_instituciones delete 
    on "informix".coc_detalle_instituciones referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_coc_detalle_instituciones 
    (det_ins_codigo,det_ins_reporte,det_ins_cod_institucion,det_ins_observacion,
    det_ins_situacion,desp_det_ins_codigo,desp_det_ins_reporte,desp_det_ins_cod_institucion,
    desp_det_ins_observacion,desp_det_ins_situacion,accion,usuario,hora) 
     values (antes.det_ins_codigo ,antes.det_ins_reporte ,antes.det_ins_cod_institucion 
    ,antes.det_ins_observacion ,antes.det_ins_situacion ,NULL ,'' ,'' ,
    '' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_detalle_instituciones update 
    on "informix".coc_detalle_instituciones referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_coc_detalle_instituciones 
    (det_ins_codigo,det_ins_reporte,det_ins_cod_institucion,det_ins_observacion,
    det_ins_situacion,desp_det_ins_codigo,desp_det_ins_reporte,desp_det_ins_cod_institucion,
    desp_det_ins_observacion,desp_det_ins_situacion,accion,usuario,hora) 
     values (antes.det_ins_codigo ,antes.det_ins_reporte ,antes.det_ins_cod_institucion 
    ,antes.det_ins_observacion ,antes.det_ins_situacion ,luego.det_ins_codigo 
    ,luego.det_ins_reporte ,luego.det_ins_cod_institucion ,luego.det_ins_observacion 
    ,luego.det_ins_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_coc_producto_operacion insert on 
    "informix".coc_producto_operacion referencing new as luego
    
    for each row
        (
        insert into "informix".aud_coc_producto_operacion (prod_ope_id,
    prod_ope_producto,prod_ope_operacion,prod_ope_situacion,desp_prod_ope_id,
    desp_prod_ope_producto,desp_prod_ope_operacion,desp_prod_ope_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.prod_ope_id ,luego.prod_ope_producto 
    ,luego.prod_ope_operacion ,luego.prod_ope_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_coc_producto_operacion delete on 
    "informix".coc_producto_operacion referencing old as antes
    
    for each row
        (
        insert into "informix".aud_coc_producto_operacion (prod_ope_id,
    prod_ope_producto,prod_ope_operacion,prod_ope_situacion,desp_prod_ope_id,
    desp_prod_ope_producto,desp_prod_ope_operacion,desp_prod_ope_situacion,
    accion,usuario,hora)  values (antes.prod_ope_id ,antes.prod_ope_producto 
    ,antes.prod_ope_operacion ,antes.prod_ope_situacion ,NULL ,'' ,'' ,
    '' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_producto_operacion update on 
    "informix".coc_producto_operacion referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_coc_producto_operacion (prod_ope_id,
    prod_ope_producto,prod_ope_operacion,prod_ope_situacion,desp_prod_ope_id,
    desp_prod_ope_producto,desp_prod_ope_operacion,desp_prod_ope_situacion,
    accion,usuario,hora)  values (antes.prod_ope_id ,antes.prod_ope_producto 
    ,antes.prod_ope_operacion ,antes.prod_ope_situacion ,luego.prod_ope_id 
    ,luego.prod_ope_producto ,luego.prod_ope_operacion ,luego.prod_ope_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_productos insert on "informix"
    .coc_productos referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_productos (prod_id,prod_descripcion,
    prod_situacion,desp_prod_id,desp_prod_descripcion,desp_prod_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.prod_id ,luego.prod_descripcion 
    ,luego.prod_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_productos delete on "informix"
    .coc_productos referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_productos (prod_id,prod_descripcion,
    prod_situacion,desp_prod_id,desp_prod_descripcion,desp_prod_situacion,
    accion,usuario,hora)  values (antes.prod_id ,antes.prod_descripcion 
    ,antes.prod_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_coc_productos update on "informix"
    .coc_productos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_coc_productos (prod_id,prod_descripcion,
    prod_situacion,desp_prod_id,desp_prod_descripcion,desp_prod_situacion,
    accion,usuario,hora)  values (antes.prod_id ,antes.prod_descripcion 
    ,antes.prod_situacion ,luego.prod_id ,luego.prod_descripcion ,luego.prod_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_detalle_vehiculos insert on 
    "informix".coc_detalle_vehiculos referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_detalle_vehiculos (det_veh_codigo,
    det_veh_reporte,det_veh_catalogo,det_veh_observacion,det_veh_situacion,
    desp_det_veh_codigo,desp_det_veh_reporte,desp_det_veh_catalogo,desp_det_veh_observacion,
    desp_det_veh_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,
    '' ,'' ,luego.det_veh_codigo ,luego.det_veh_reporte ,luego.det_veh_catalogo 
    ,luego.det_veh_observacion ,luego.det_veh_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_coc_detalle_vehiculos delete on 
    "informix".coc_detalle_vehiculos referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_detalle_vehiculos (det_veh_codigo,
    det_veh_reporte,det_veh_catalogo,det_veh_observacion,det_veh_situacion,
    desp_det_veh_codigo,desp_det_veh_reporte,desp_det_veh_catalogo,desp_det_veh_observacion,
    desp_det_veh_situacion,accion,usuario,hora)  values (antes.det_veh_codigo 
    ,antes.det_veh_reporte ,antes.det_veh_catalogo ,antes.det_veh_observacion 
    ,antes.det_veh_situacion ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_coc_detalle_vehiculos update on 
    "informix".coc_detalle_vehiculos referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_coc_detalle_vehiculos (det_veh_codigo,
    det_veh_reporte,det_veh_catalogo,det_veh_observacion,det_veh_situacion,
    desp_det_veh_codigo,desp_det_veh_reporte,desp_det_veh_catalogo,desp_det_veh_observacion,
    desp_det_veh_situacion,accion,usuario,hora)  values (antes.det_veh_codigo 
    ,antes.det_veh_reporte ,antes.det_veh_catalogo ,antes.det_veh_observacion 
    ,antes.det_veh_situacion ,luego.det_veh_codigo ,luego.det_veh_reporte 
    ,luego.det_veh_catalogo ,luego.det_veh_observacion ,luego.det_veh_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tri_penalizaciones insert on "informix"
    .tri_penalizaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_tri_penalizaciones (id,descripcion,
    valor,situacion,desp_id,desp_descripcion,desp_valor,desp_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.id ,luego.descripcion 
    ,luego.valor ,luego.situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_tri_penalizaciones delete on "informix"
    .tri_penalizaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_tri_penalizaciones (id,descripcion,
    valor,situacion,desp_id,desp_descripcion,desp_valor,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.descripcion ,antes.valor 
    ,antes.situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_tri_penalizaciones update on "informix"
    .tri_penalizaciones referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_tri_penalizaciones (id,descripcion,
    valor,situacion,desp_id,desp_descripcion,desp_valor,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.descripcion ,antes.valor 
    ,antes.situacion ,luego.id ,luego.descripcion ,luego.valor ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tri_det_penalizacion insert on 
    "informix".tri_det_penalizacion referencing new as luego
    for each row
        (
        insert into "informix".aud_tri_det_penalizacion (id,participante,
    penalizacion,etapa,situacion,desp_id,desp_participante,desp_penalizacion,
    desp_etapa,desp_situacion,accion,usuario,hora)  values (NULL ,'' ,
    '' ,'' ,'' ,luego.id ,luego.participante ,luego.penalizacion ,luego.etapa 
    ,luego.situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_tri_det_penalizacion delete on 
    "informix".tri_det_penalizacion referencing old as antes
    for each row
        (
        insert into "informix".aud_tri_det_penalizacion (id,participante,
    penalizacion,etapa,situacion,desp_id,desp_participante,desp_penalizacion,
    desp_etapa,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.participante ,antes.penalizacion ,antes.etapa ,antes.situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_tri_det_penalizacion update on 
    "informix".tri_det_penalizacion referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_tri_det_penalizacion (id,participante,
    penalizacion,etapa,situacion,desp_id,desp_participante,desp_penalizacion,
    desp_etapa,desp_situacion,accion,usuario,hora)  values (antes.id 
    ,antes.participante ,antes.penalizacion ,antes.etapa ,antes.situacion 
    ,luego.id ,luego.participante ,luego.penalizacion ,luego.etapa ,luego.situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_tri_detalle_tiro insert on "informix"
    .tri_detalle_tiro referencing new as luego
    for each row
        (
        insert into "informix".aud_tri_detalle_tiro (id,participante,
    cinco_x,cinco,cuatro,tres,dos,uno,situacion,desp_id,desp_participante,
    desp_cinco_x,desp_cinco,desp_cuatro,desp_tres,desp_dos,desp_uno,desp_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.id 
    ,luego.participante ,luego.cinco_x ,luego.cinco ,luego.cuatro ,luego.tres 
    ,luego.dos ,luego.uno ,luego.situacion ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_tri_detalle_tiro delete on "informix"
    .tri_detalle_tiro referencing old as antes
    for each row
        (
        insert into "informix".aud_tri_detalle_tiro (id,participante,
    cinco_x,cinco,cuatro,tres,dos,uno,situacion,desp_id,desp_participante,
    desp_cinco_x,desp_cinco,desp_cuatro,desp_tres,desp_dos,desp_uno,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.participante ,antes.cinco_x 
    ,antes.cinco ,antes.cuatro ,antes.tres ,antes.dos ,antes.uno ,antes.situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_tri_detalle_tiro update on "informix"
    .tri_detalle_tiro referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_tri_detalle_tiro (id,participante,
    cinco_x,cinco,cuatro,tres,dos,uno,situacion,desp_id,desp_participante,
    desp_cinco_x,desp_cinco,desp_cuatro,desp_tres,desp_dos,desp_uno,desp_situacion,
    accion,usuario,hora)  values (antes.id ,antes.participante ,antes.cinco_x 
    ,antes.cinco ,antes.cuatro ,antes.tres ,antes.dos ,antes.uno ,antes.situacion 
    ,luego.id ,luego.participante ,luego.cinco_x ,luego.cinco ,luego.cuatro 
    ,luego.tres ,luego.dos ,luego.uno ,luego.situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_ssm_registro_vacuna insert on "informix"
    .ssm_registro_vacuna referencing new as luego
    for each row
        (
        insert into "informix".aud_ssm_registro_vacuna (registro_id,
    registro_catalogo,registro_vacuna,registro_dosis,registro_fecha,registro_situacion,
    desp_registro_id,desp_registro_catalogo,desp_registro_vacuna,desp_registro_dosis,
    desp_registro_fecha,desp_registro_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.registro_id ,luego.registro_catalogo 
    ,luego.registro_vacuna ,luego.registro_dosis ,luego.registro_fecha 
    ,luego.registro_situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_ssm_registro_vacuna delete on "informix"
    .ssm_registro_vacuna referencing old as antes
    for each row
        (
        insert into "informix".aud_ssm_registro_vacuna (registro_id,
    registro_catalogo,registro_vacuna,registro_dosis,registro_fecha,registro_situacion,
    desp_registro_id,desp_registro_catalogo,desp_registro_vacuna,desp_registro_dosis,
    desp_registro_fecha,desp_registro_situacion,accion,usuario,hora) 
     values (antes.registro_id ,antes.registro_catalogo ,antes.registro_vacuna 
    ,antes.registro_dosis ,antes.registro_fecha ,antes.registro_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ssm_registro_vacuna update on "informix"
    .ssm_registro_vacuna referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_ssm_registro_vacuna (registro_id,
    registro_catalogo,registro_vacuna,registro_dosis,registro_fecha,registro_situacion,
    desp_registro_id,desp_registro_catalogo,desp_registro_vacuna,desp_registro_dosis,
    desp_registro_fecha,desp_registro_situacion,accion,usuario,hora) 
     values (antes.registro_id ,antes.registro_catalogo ,antes.registro_vacuna 
    ,antes.registro_dosis ,antes.registro_fecha ,antes.registro_situacion 
    ,luego.registro_id ,luego.registro_catalogo ,luego.registro_vacuna 
    ,luego.registro_dosis ,luego.registro_fecha ,luego.registro_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ssm_vacunas insert on "informix"
    .ssm_vacunas referencing new as luego
    for each row
        (
        insert into "informix".aud_ssm_vacunas (vacuna_id,vacuna_desc,
    vacuna_dosis,vacuna_refuerzo,vacuna_sit,desp_vacuna_id,desp_vacuna_desc,
    desp_vacuna_dosis,desp_vacuna_refuerzo,desp_vacuna_sit,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.vacuna_id ,luego.vacuna_desc 
    ,luego.vacuna_dosis ,luego.vacuna_refuerzo ,luego.vacuna_sit ,'I' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ssm_vacunas delete on "informix"
    .ssm_vacunas referencing old as antes
    for each row
        (
        insert into "informix".aud_ssm_vacunas (vacuna_id,vacuna_desc,
    vacuna_dosis,vacuna_refuerzo,vacuna_sit,desp_vacuna_id,desp_vacuna_desc,
    desp_vacuna_dosis,desp_vacuna_refuerzo,desp_vacuna_sit,accion,usuario,
    hora)  values (antes.vacuna_id ,antes.vacuna_desc ,antes.vacuna_dosis 
    ,antes.vacuna_refuerzo ,antes.vacuna_sit ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_ssm_vacunas update on "informix"
    .ssm_vacunas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_ssm_vacunas (vacuna_id,vacuna_desc,
    vacuna_dosis,vacuna_refuerzo,vacuna_sit,desp_vacuna_id,desp_vacuna_desc,
    desp_vacuna_dosis,desp_vacuna_refuerzo,desp_vacuna_sit,accion,usuario,
    hora)  values (antes.vacuna_id ,antes.vacuna_desc ,antes.vacuna_dosis 
    ,antes.vacuna_refuerzo ,antes.vacuna_sit ,luego.vacuna_id ,luego.vacuna_desc 
    ,luego.vacuna_dosis ,luego.vacuna_refuerzo ,luego.vacuna_sit ,'U' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_ssm_validacion_vacuna insert on 
    "informix".ssm_validacion_vacuna referencing new as luego
    for each row
        (
        insert into "informix".aud_ssm_validacion_vacuna (validacion_id,
    validacion_registro,validacion_fecha,validacion_catalogo,validacion_situacion,
    desp_validacion_id,desp_validacion_registro,desp_validacion_fecha,
    desp_validacion_catalogo,desp_validacion_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.validacion_id ,luego.validacion_registro 
    ,luego.validacion_fecha ,luego.validacion_catalogo ,luego.validacion_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_ssm_validacion_vacuna delete on 
    "informix".ssm_validacion_vacuna referencing old as antes
    for each row
        (
        insert into "informix".aud_ssm_validacion_vacuna (validacion_id,
    validacion_registro,validacion_fecha,validacion_catalogo,validacion_situacion,
    desp_validacion_id,desp_validacion_registro,desp_validacion_fecha,
    desp_validacion_catalogo,desp_validacion_situacion,accion,usuario,
    hora)  values (antes.validacion_id ,antes.validacion_registro ,antes.validacion_fecha 
    ,antes.validacion_catalogo ,antes.validacion_situacion ,NULL ,'' ,
    '' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_ssm_validacion_vacuna update on 
    "informix".ssm_validacion_vacuna referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_ssm_validacion_vacuna (validacion_id,
    validacion_registro,validacion_fecha,validacion_catalogo,validacion_situacion,
    desp_validacion_id,desp_validacion_registro,desp_validacion_fecha,
    desp_validacion_catalogo,desp_validacion_situacion,accion,usuario,
    hora)  values (antes.validacion_id ,antes.validacion_registro ,antes.validacion_fecha 
    ,antes.validacion_catalogo ,antes.validacion_situacion ,luego.validacion_id 
    ,luego.validacion_registro ,luego.validacion_fecha ,luego.validacion_catalogo 
    ,luego.validacion_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_dfdes_coop_amat insert on "informix"
    .dfdes_coop_amat referencing new as luego
    for each row
        (
        insert into "informix".aud_dfdes_coop_amat (dfcoop_catalogo,
    dfcoop_codigo,dfcoop_nu_reg,dfcoop_cod_control,dfcoop_tipo_desc,dfcoop_fec_ini,
    dfcoop_ult_act,dfcoop_fec_cer,dfcoop_monto,dfcoop_saldo,dfcoop_mensual,
    dfcoop_tot_cuotas,dfcoop_num_cuotas,dfcoop_documen,dfcoop_codeudor,
    dfcoop_nom_bene,dfcoop_juz_con,dfcoop_si_no,desp_dfcoop_catalogo,
    desp_dfcoop_codigo,desp_dfcoop_nu_reg,desp_dfcoop_cod_control,desp_dfcoop_tipo_desc,
    desp_dfcoop_fec_ini,desp_dfcoop_ult_act,desp_dfcoop_fec_cer,desp_dfcoop_monto,
    desp_dfcoop_saldo,desp_dfcoop_mensual,desp_dfcoop_tot_cuotas,desp_dfcoop_num_cuotas,
    desp_dfcoop_documen,desp_dfcoop_codeudor,desp_dfcoop_nom_bene,desp_dfcoop_juz_con,
    desp_dfcoop_si_no,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.dfcoop_catalogo ,luego.dfcoop_codigo 
    ,luego.dfcoop_nu_reg ,luego.dfcoop_cod_control ,luego.dfcoop_tipo_desc 
    ,luego.dfcoop_fec_ini ,luego.dfcoop_ult_act ,luego.dfcoop_fec_cer 
    ,luego.dfcoop_monto ,luego.dfcoop_saldo ,luego.dfcoop_mensual ,luego.dfcoop_tot_cuotas 
    ,luego.dfcoop_num_cuotas ,luego.dfcoop_documen ,luego.dfcoop_codeudor 
    ,luego.dfcoop_nom_bene ,luego.dfcoop_juz_con ,luego.dfcoop_si_no 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dfdes_coop_amat delete on "informix"
    .dfdes_coop_amat referencing old as antes
    for each row
        (
        insert into "informix".aud_dfdes_coop_amat (dfcoop_catalogo,
    dfcoop_codigo,dfcoop_nu_reg,dfcoop_cod_control,dfcoop_tipo_desc,dfcoop_fec_ini,
    dfcoop_ult_act,dfcoop_fec_cer,dfcoop_monto,dfcoop_saldo,dfcoop_mensual,
    dfcoop_tot_cuotas,dfcoop_num_cuotas,dfcoop_documen,dfcoop_codeudor,
    dfcoop_nom_bene,dfcoop_juz_con,dfcoop_si_no,desp_dfcoop_catalogo,
    desp_dfcoop_codigo,desp_dfcoop_nu_reg,desp_dfcoop_cod_control,desp_dfcoop_tipo_desc,
    desp_dfcoop_fec_ini,desp_dfcoop_ult_act,desp_dfcoop_fec_cer,desp_dfcoop_monto,
    desp_dfcoop_saldo,desp_dfcoop_mensual,desp_dfcoop_tot_cuotas,desp_dfcoop_num_cuotas,
    desp_dfcoop_documen,desp_dfcoop_codeudor,desp_dfcoop_nom_bene,desp_dfcoop_juz_con,
    desp_dfcoop_si_no,accion,usuario,hora)  values (antes.dfcoop_catalogo 
    ,antes.dfcoop_codigo ,antes.dfcoop_nu_reg ,antes.dfcoop_cod_control 
    ,antes.dfcoop_tipo_desc ,antes.dfcoop_fec_ini ,antes.dfcoop_ult_act 
    ,antes.dfcoop_fec_cer ,antes.dfcoop_monto ,antes.dfcoop_saldo ,antes.dfcoop_mensual 
    ,antes.dfcoop_tot_cuotas ,antes.dfcoop_num_cuotas ,antes.dfcoop_documen 
    ,antes.dfcoop_codeudor ,antes.dfcoop_nom_bene ,antes.dfcoop_juz_con 
    ,antes.dfcoop_si_no ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_dfdes_coop_amat update on "informix"
    .dfdes_coop_amat referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dfdes_coop_amat (dfcoop_catalogo,
    dfcoop_codigo,dfcoop_nu_reg,dfcoop_cod_control,dfcoop_tipo_desc,dfcoop_fec_ini,
    dfcoop_ult_act,dfcoop_fec_cer,dfcoop_monto,dfcoop_saldo,dfcoop_mensual,
    dfcoop_tot_cuotas,dfcoop_num_cuotas,dfcoop_documen,dfcoop_codeudor,
    dfcoop_nom_bene,dfcoop_juz_con,dfcoop_si_no,desp_dfcoop_catalogo,
    desp_dfcoop_codigo,desp_dfcoop_nu_reg,desp_dfcoop_cod_control,desp_dfcoop_tipo_desc,
    desp_dfcoop_fec_ini,desp_dfcoop_ult_act,desp_dfcoop_fec_cer,desp_dfcoop_monto,
    desp_dfcoop_saldo,desp_dfcoop_mensual,desp_dfcoop_tot_cuotas,desp_dfcoop_num_cuotas,
    desp_dfcoop_documen,desp_dfcoop_codeudor,desp_dfcoop_nom_bene,desp_dfcoop_juz_con,
    desp_dfcoop_si_no,accion,usuario,hora)  values (antes.dfcoop_catalogo 
    ,antes.dfcoop_codigo ,antes.dfcoop_nu_reg ,antes.dfcoop_cod_control 
    ,antes.dfcoop_tipo_desc ,antes.dfcoop_fec_ini ,antes.dfcoop_ult_act 
    ,antes.dfcoop_fec_cer ,antes.dfcoop_monto ,antes.dfcoop_saldo ,antes.dfcoop_mensual 
    ,antes.dfcoop_tot_cuotas ,antes.dfcoop_num_cuotas ,antes.dfcoop_documen 
    ,antes.dfcoop_codeudor ,antes.dfcoop_nom_bene ,antes.dfcoop_juz_con 
    ,antes.dfcoop_si_no ,luego.dfcoop_catalogo ,luego.dfcoop_codigo ,
    luego.dfcoop_nu_reg ,luego.dfcoop_cod_control ,luego.dfcoop_tipo_desc 
    ,luego.dfcoop_fec_ini ,luego.dfcoop_ult_act ,luego.dfcoop_fec_cer 
    ,luego.dfcoop_monto ,luego.dfcoop_saldo ,luego.dfcoop_mensual ,luego.dfcoop_tot_cuotas 
    ,luego.dfcoop_num_cuotas ,luego.dfcoop_documen ,luego.dfcoop_codeudor 
    ,luego.dfcoop_nom_bene ,luego.dfcoop_juz_con ,luego.dfcoop_si_no 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_mper_firma update on "informix".mper_firma 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mper_firma (fir_id,fir_catalogo,
    fir_rubrica,fir_situacion,desp_fir_id,desp_fir_catalogo,desp_fir_rubrica,
    desp_fir_situacion,accion,usuario,hora)  values (antes.fir_id ,antes.fir_catalogo 
    ,antes.fir_rubrica ,antes.fir_situacion ,luego.fir_id ,luego.fir_catalogo 
    ,luego.fir_rubrica ,luego.fir_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_f_asig_desc insert on "informix"
    .f_asig_desc referencing new as luego
    for each row
        (
        insert into "informix".aud_f_asig_desc (asig_desc_id,
    asig_desc_cat,asig_desc_plaza,asig_desc_monto,asig_desc_codigo_des,
    asig_desc_codigo_as,asig_desc_observaciones,asig_desc_tipo,asig_desc_situacion,
    desp_asig_desc_id,desp_asig_desc_cat,desp_asig_desc_plaza,desp_asig_desc_monto,
    desp_asig_desc_codigo_des,desp_asig_desc_codigo_as,desp_asig_desc_observaciones,
    desp_asig_desc_tipo,desp_asig_desc_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.asig_desc_id ,luego.asig_desc_cat 
    ,luego.asig_desc_plaza ,luego.asig_desc_monto ,luego.asig_desc_codigo_des 
    ,luego.asig_desc_codigo_as ,luego.asig_desc_observaciones ,luego.asig_desc_tipo 
    ,luego.asig_desc_situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_f_asig_desc delete on "informix"
    .f_asig_desc referencing old as antes
    for each row
        (
        insert into "informix".aud_f_asig_desc (asig_desc_id,
    asig_desc_cat,asig_desc_plaza,asig_desc_monto,asig_desc_codigo_des,
    asig_desc_codigo_as,asig_desc_observaciones,asig_desc_tipo,asig_desc_situacion,
    desp_asig_desc_id,desp_asig_desc_cat,desp_asig_desc_plaza,desp_asig_desc_monto,
    desp_asig_desc_codigo_des,desp_asig_desc_codigo_as,desp_asig_desc_observaciones,
    desp_asig_desc_tipo,desp_asig_desc_situacion,accion,usuario,hora) 
     values (antes.asig_desc_id ,antes.asig_desc_cat ,antes.asig_desc_plaza 
    ,antes.asig_desc_monto ,antes.asig_desc_codigo_des ,antes.asig_desc_codigo_as 
    ,antes.asig_desc_observaciones ,antes.asig_desc_tipo ,antes.asig_desc_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_f_asig_desc update on "informix"
    .f_asig_desc referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_f_asig_desc (asig_desc_id,
    asig_desc_cat,asig_desc_plaza,asig_desc_monto,asig_desc_codigo_des,
    asig_desc_codigo_as,asig_desc_observaciones,asig_desc_tipo,asig_desc_situacion,
    desp_asig_desc_id,desp_asig_desc_cat,desp_asig_desc_plaza,desp_asig_desc_monto,
    desp_asig_desc_codigo_des,desp_asig_desc_codigo_as,desp_asig_desc_observaciones,
    desp_asig_desc_tipo,desp_asig_desc_situacion,accion,usuario,hora) 
     values (antes.asig_desc_id ,antes.asig_desc_cat ,antes.asig_desc_plaza 
    ,antes.asig_desc_monto ,antes.asig_desc_codigo_des ,antes.asig_desc_codigo_as 
    ,antes.asig_desc_observaciones ,antes.asig_desc_tipo ,antes.asig_desc_situacion 
    ,luego.asig_desc_id ,luego.asig_desc_cat ,luego.asig_desc_plaza ,
    luego.asig_desc_monto ,luego.asig_desc_codigo_des ,luego.asig_desc_codigo_as 
    ,luego.asig_desc_observaciones ,luego.asig_desc_tipo ,luego.asig_desc_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".actu_mper_otros update on "informix"
    .mper_otros referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_mper_otros (oper_catalogo,
    oper_nit,oper_celular_personal,oper_celular_servicio,oper_correo_institucional,
    oper_correo_personal,oper_obs,oper_desc1,oper_desc2,oper_desc3,desp_oper_catalogo,
    desp_oper_nit,desp_oper_celular_personal,desp_oper_celular_servicio,
    desp_oper_correo_institucional,desp_oper_correo_personal,desp_oper_obs,
    desp_oper_desc1,desp_oper_desc2,desp_oper_desc3,accion,usuario,hora) 
     values (antes.oper_catalogo ,antes.oper_nit ,antes.oper_celular_personal 
    ,antes.oper_celular_servicio ,antes.oper_correo_institucional ,antes.oper_correo_personal 
    ,antes.oper_obs ,antes.oper_desc1 ,antes.oper_desc2 ,antes.oper_desc3 
    ,luego.oper_catalogo ,luego.oper_nit ,luego.oper_celular_personal 
    ,luego.oper_celular_servicio ,luego.oper_correo_institucional ,luego.oper_correo_personal 
    ,luego.oper_obs ,luego.oper_desc1 ,luego.oper_desc2 ,luego.oper_desc3 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".inse_mper_otros insert on "informix"
    .mper_otros referencing new as luego
    for each row
        (
        insert into "informix".aud_mper_otros (oper_catalogo,
    oper_nit,oper_celular_personal,oper_celular_servicio,oper_correo_institucional,
    oper_correo_personal,oper_obs,oper_desc1,oper_desc2,oper_desc3,desp_oper_catalogo,
    desp_oper_nit,desp_oper_celular_personal,desp_oper_celular_servicio,
    desp_oper_correo_institucional,desp_oper_correo_personal,desp_oper_obs,
    desp_oper_desc1,desp_oper_desc2,desp_oper_desc3,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.oper_catalogo ,luego.oper_nit 
    ,luego.oper_celular_personal ,luego.oper_celular_servicio ,luego.oper_correo_institucional 
    ,luego.oper_correo_personal ,luego.oper_obs ,luego.oper_desc1 ,luego.oper_desc2 
    ,luego.oper_desc3 ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".dele_mper_otros delete on "informix"
    .mper_otros referencing old as antes
    for each row
        (
        insert into "informix".aud_mper_otros (oper_catalogo,
    oper_nit,oper_celular_personal,oper_celular_servicio,oper_correo_institucional,
    oper_correo_personal,oper_obs,oper_desc1,oper_desc2,oper_desc3,desp_oper_catalogo,
    desp_oper_nit,desp_oper_celular_personal,desp_oper_celular_servicio,
    desp_oper_correo_institucional,desp_oper_correo_personal,desp_oper_obs,
    desp_oper_desc1,desp_oper_desc2,desp_oper_desc3,accion,usuario,hora) 
     values (antes.oper_catalogo ,antes.oper_nit ,antes.oper_celular_personal 
    ,antes.oper_celular_servicio ,antes.oper_correo_institucional ,antes.oper_correo_personal 
    ,antes.oper_obs ,antes.oper_desc1 ,antes.oper_desc2 ,antes.oper_desc3 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_sig_tiempo_alimentacion insert 
    on "informix".sig_tiempo_alimentacion referencing new as luego
    
    for each row
        (
        insert into "informix".aud_sig_tiempo_alimentacion (tiempo_codigo,
    tiempo_descripcion,tiempo_situacion,desp_tiempo_codigo,desp_tiempo_descripcion,
    desp_tiempo_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,luego.tiempo_codigo 
    ,luego.tiempo_descripcion ,luego.tiempo_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_sig_tiempo_alimentacion delete 
    on "informix".sig_tiempo_alimentacion referencing old as antes
    
    for each row
        (
        insert into "informix".aud_sig_tiempo_alimentacion (tiempo_codigo,
    tiempo_descripcion,tiempo_situacion,desp_tiempo_codigo,desp_tiempo_descripcion,
    desp_tiempo_situacion,accion,usuario,hora)  values (antes.tiempo_codigo 
    ,antes.tiempo_descripcion ,antes.tiempo_situacion ,NULL ,'' ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_sig_tiempo_alimentacion update 
    on "informix".sig_tiempo_alimentacion referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_sig_tiempo_alimentacion (tiempo_codigo,
    tiempo_descripcion,tiempo_situacion,desp_tiempo_codigo,desp_tiempo_descripcion,
    desp_tiempo_situacion,accion,usuario,hora)  values (antes.tiempo_codigo 
    ,antes.tiempo_descripcion ,antes.tiempo_situacion ,luego.tiempo_codigo 
    ,luego.tiempo_descripcion ,luego.tiempo_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_sig_menu insert on "informix".sig_menu 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_menu (menu_codigo,menu_tipo,
    menu_descripcion,menu_situacion,desp_menu_codigo,desp_menu_tipo,desp_menu_descripcion,
    desp_menu_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,
    luego.menu_codigo ,luego.menu_tipo ,luego.menu_descripcion ,luego.menu_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sig_menu delete on "informix".sig_menu 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_menu (menu_codigo,menu_tipo,
    menu_descripcion,menu_situacion,desp_menu_codigo,desp_menu_tipo,desp_menu_descripcion,
    desp_menu_situacion,accion,usuario,hora)  values (antes.menu_codigo 
    ,antes.menu_tipo ,antes.menu_descripcion ,antes.menu_situacion ,NULL 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_sig_menu update on "informix".sig_menu 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_menu (menu_codigo,menu_tipo,
    menu_descripcion,menu_situacion,desp_menu_codigo,desp_menu_tipo,desp_menu_descripcion,
    desp_menu_situacion,accion,usuario,hora)  values (antes.menu_codigo 
    ,antes.menu_tipo ,antes.menu_descripcion ,antes.menu_situacion ,luego.menu_codigo 
    ,luego.menu_tipo ,luego.menu_descripcion ,luego.menu_situacion ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_sig_programa_alimentacion insert 
    on "informix".sig_programa_alimentacion referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_sig_programa_alimentacion 
    (alim_codigo,alim_menu,alim_fecha,desp_alim_codigo,desp_alim_menu,
    desp_alim_fecha,accion,usuario,hora)  values (NULL ,'' ,'' ,luego.alim_codigo 
    ,luego.alim_menu ,luego.alim_fecha ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_sig_programa_alimentacion delete 
    on "informix".sig_programa_alimentacion referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_sig_programa_alimentacion 
    (alim_codigo,alim_menu,alim_fecha,desp_alim_codigo,desp_alim_menu,
    desp_alim_fecha,accion,usuario,hora)  values (antes.alim_codigo ,
    antes.alim_menu ,antes.alim_fecha ,NULL ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_sig_programa_alimentacion update 
    on "informix".sig_programa_alimentacion referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_sig_programa_alimentacion 
    (alim_codigo,alim_menu,alim_fecha,desp_alim_codigo,desp_alim_menu,
    desp_alim_fecha,accion,usuario,hora)  values (antes.alim_codigo ,
    antes.alim_menu ,antes.alim_fecha ,luego.alim_codigo ,luego.alim_menu 
    ,luego.alim_fecha ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_sig_asignacion insert on "informix"
    .sig_asignacion referencing new as luego
    for each row
        (
        insert into "informix".aud_sig_asignacion (asig_codigo,
    asig_menu,asig_catalogo,asig_fecha,asig_situacion,desp_asig_codigo,
    desp_asig_menu,desp_asig_catalogo,desp_asig_fecha,desp_asig_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.asig_codigo 
    ,luego.asig_menu ,luego.asig_catalogo ,luego.asig_fecha ,luego.asig_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_sig_asignacion delete on "informix"
    .sig_asignacion referencing old as antes
    for each row
        (
        insert into "informix".aud_sig_asignacion (asig_codigo,
    asig_menu,asig_catalogo,asig_fecha,asig_situacion,desp_asig_codigo,
    desp_asig_menu,desp_asig_catalogo,desp_asig_fecha,desp_asig_situacion,
    accion,usuario,hora)  values (antes.asig_codigo ,antes.asig_menu 
    ,antes.asig_catalogo ,antes.asig_fecha ,antes.asig_situacion ,NULL 
    ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_sig_asignacion update on "informix"
    .sig_asignacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_sig_asignacion (asig_codigo,
    asig_menu,asig_catalogo,asig_fecha,asig_situacion,desp_asig_codigo,
    desp_asig_menu,desp_asig_catalogo,desp_asig_fecha,desp_asig_situacion,
    accion,usuario,hora)  values (antes.asig_codigo ,antes.asig_menu 
    ,antes.asig_catalogo ,antes.asig_fecha ,antes.asig_situacion ,luego.asig_codigo 
    ,luego.asig_menu ,luego.asig_catalogo ,luego.asig_fecha ,luego.asig_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_municion_situacion insert on "informix"
    .municion_situacion referencing new as luego
    for each row
        (
        insert into "informix".aud_municion_situacion (sit_id,
    sit_descripcion,sit_situacion,desp_sit_id,desp_sit_descripcion,desp_sit_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.sit_id ,luego.sit_descripcion 
    ,luego.sit_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_municion_situacion delete on "informix"
    .municion_situacion referencing old as antes
    for each row
        (
        insert into "informix".aud_municion_situacion (sit_id,
    sit_descripcion,sit_situacion,desp_sit_id,desp_sit_descripcion,desp_sit_situacion,
    accion,usuario,hora)  values (antes.sit_id ,antes.sit_descripcion 
    ,antes.sit_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_municion_situacion update on "informix"
    .municion_situacion referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_municion_situacion (sit_id,
    sit_descripcion,sit_situacion,desp_sit_id,desp_sit_descripcion,desp_sit_situacion,
    accion,usuario,hora)  values (antes.sit_id ,antes.sit_descripcion 
    ,antes.sit_situacion ,luego.sit_id ,luego.sit_descripcion ,luego.sit_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_municion_organizacion insert on 
    "informix".municion_organizacion referencing new as luego
    for each row
        (
        insert into "informix".aud_municion_organizacion (org_id,
    org_id_dependencia,org_jerarquia,org_nombre,org_situacion,desp_org_id,
    desp_org_id_dependencia,desp_org_jerarquia,desp_org_nombre,desp_org_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.org_id ,luego.org_id_dependencia 
    ,luego.org_jerarquia ,luego.org_nombre ,luego.org_situacion ,'I' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_municion_organizacion delete on 
    "informix".municion_organizacion referencing old as antes
    for each row
        (
        insert into "informix".aud_municion_organizacion (org_id,
    org_id_dependencia,org_jerarquia,org_nombre,org_situacion,desp_org_id,
    desp_org_id_dependencia,desp_org_jerarquia,desp_org_nombre,desp_org_situacion,
    accion,usuario,hora)  values (antes.org_id ,antes.org_id_dependencia 
    ,antes.org_jerarquia ,antes.org_nombre ,antes.org_situacion ,NULL 
    ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_municion_organizacion update on 
    "informix".municion_organizacion referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_municion_organizacion (org_id,
    org_id_dependencia,org_jerarquia,org_nombre,org_situacion,desp_org_id,
    desp_org_id_dependencia,desp_org_jerarquia,desp_org_nombre,desp_org_situacion,
    accion,usuario,hora)  values (antes.org_id ,antes.org_id_dependencia 
    ,antes.org_jerarquia ,antes.org_nombre ,antes.org_situacion ,luego.org_id 
    ,luego.org_id_dependencia ,luego.org_jerarquia ,luego.org_nombre 
    ,luego.org_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_municion_lote insert on "informix"
    .municion_lote referencing new as luego
    for each row
        (
        insert into "informix".aud_municion_lote (lot_id,lot_descripcion,
    lot_situacion,desp_lot_id,desp_lot_descripcion,desp_lot_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.lot_id ,luego.lot_descripcion 
    ,luego.lot_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_municion_lote delete on "informix"
    .municion_lote referencing old as antes
    for each row
        (
        insert into "informix".aud_municion_lote (lot_id,lot_descripcion,
    lot_situacion,desp_lot_id,desp_lot_descripcion,desp_lot_situacion,
    accion,usuario,hora)  values (antes.lot_id ,antes.lot_descripcion 
    ,antes.lot_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_municion_lote update on "informix"
    .municion_lote referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_municion_lote (lot_id,lot_descripcion,
    lot_situacion,desp_lot_id,desp_lot_descripcion,desp_lot_situacion,
    accion,usuario,hora)  values (antes.lot_id ,antes.lot_descripcion 
    ,antes.lot_situacion ,luego.lot_id ,luego.lot_descripcion ,luego.lot_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_municion_calibre insert on "informix"
    .municion_calibre referencing new as luego
    for each row
        (
        insert into "informix".aud_municion_calibre (cal_id,cal_descripcion,
    cal_situacion,desp_cal_id,desp_cal_descripcion,desp_cal_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.cal_id ,luego.cal_descripcion 
    ,luego.cal_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_municion_calibre update on "informix"
    .municion_calibre referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_municion_calibre (cal_id,cal_descripcion,
    cal_situacion,desp_cal_id,desp_cal_descripcion,desp_cal_situacion,
    accion,usuario,hora)  values (antes.cal_id ,antes.cal_descripcion 
    ,antes.cal_situacion ,luego.cal_id ,luego.cal_descripcion ,luego.cal_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_municion_calibre delete on "informix"
    .municion_calibre referencing old as antes
    for each row
        (
        insert into "informix".aud_municion_calibre (cal_id,cal_descripcion,
    cal_situacion,desp_cal_id,desp_cal_descripcion,desp_cal_situacion,
    accion,usuario,hora)  values (antes.cal_id ,antes.cal_descripcion 
    ,antes.cal_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_municion_ingresofab insert on "informix"
    .municion_ingresofab referencing new as luego
    for each row
        (
        insert into "informix".aud_municion_ingresofab (ifab_id,
    ifab_lote,ifab_calibre,ifab_cantidad,ifab_motivo,ifab_documento,ifab_observaciones,
    ifab_movimiento,ifab_fecha,ifab_departamentosalida,ifab_departamento,
    ifab_catalogo,ifab_catalogosalida,ifab_situacion,desp_ifab_id,desp_ifab_lote,
    desp_ifab_calibre,desp_ifab_cantidad,desp_ifab_motivo,desp_ifab_documento,
    desp_ifab_observaciones,desp_ifab_movimiento,desp_ifab_fecha,desp_ifab_departamentosalida,
    desp_ifab_departamento,desp_ifab_catalogo,desp_ifab_catalogosalida,
    desp_ifab_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.ifab_id ,luego.ifab_lote ,luego.ifab_calibre 
    ,luego.ifab_cantidad ,luego.ifab_motivo ,luego.ifab_documento ,luego.ifab_observaciones 
    ,luego.ifab_movimiento ,luego.ifab_fecha ,luego.ifab_departamentosalida 
    ,luego.ifab_departamento ,luego.ifab_catalogo ,luego.ifab_catalogosalida 
    ,luego.ifab_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_municion_ingresofab update on "informix"
    .municion_ingresofab referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_municion_ingresofab (ifab_id,
    ifab_lote,ifab_calibre,ifab_cantidad,ifab_motivo,ifab_documento,ifab_observaciones,
    ifab_movimiento,ifab_fecha,ifab_departamentosalida,ifab_departamento,
    ifab_catalogo,ifab_catalogosalida,ifab_situacion,desp_ifab_id,desp_ifab_lote,
    desp_ifab_calibre,desp_ifab_cantidad,desp_ifab_motivo,desp_ifab_documento,
    desp_ifab_observaciones,desp_ifab_movimiento,desp_ifab_fecha,desp_ifab_departamentosalida,
    desp_ifab_departamento,desp_ifab_catalogo,desp_ifab_catalogosalida,
    desp_ifab_situacion,accion,usuario,hora)  values (antes.ifab_id ,
    antes.ifab_lote ,antes.ifab_calibre ,antes.ifab_cantidad ,antes.ifab_motivo 
    ,antes.ifab_documento ,antes.ifab_observaciones ,antes.ifab_movimiento 
    ,antes.ifab_fecha ,antes.ifab_departamentosalida ,antes.ifab_departamento 
    ,antes.ifab_catalogo ,antes.ifab_catalogosalida ,antes.ifab_situacion 
    ,luego.ifab_id ,luego.ifab_lote ,luego.ifab_calibre ,luego.ifab_cantidad 
    ,luego.ifab_motivo ,luego.ifab_documento ,luego.ifab_observaciones 
    ,luego.ifab_movimiento ,luego.ifab_fecha ,luego.ifab_departamentosalida 
    ,luego.ifab_departamento ,luego.ifab_catalogo ,luego.ifab_catalogosalida 
    ,luego.ifab_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_municion_ingresofab delete on "informix"
    .municion_ingresofab referencing old as antes
    for each row
        (
        insert into "informix".aud_municion_ingresofab (ifab_id,
    ifab_lote,ifab_calibre,ifab_cantidad,ifab_motivo,ifab_documento,ifab_observaciones,
    ifab_movimiento,ifab_fecha,ifab_departamentosalida,ifab_departamento,
    ifab_catalogo,ifab_catalogosalida,ifab_situacion,desp_ifab_id,desp_ifab_lote,
    desp_ifab_calibre,desp_ifab_cantidad,desp_ifab_motivo,desp_ifab_documento,
    desp_ifab_observaciones,desp_ifab_movimiento,desp_ifab_fecha,desp_ifab_departamentosalida,
    desp_ifab_departamento,desp_ifab_catalogo,desp_ifab_catalogosalida,
    desp_ifab_situacion,accion,usuario,hora)  values (antes.ifab_id ,
    antes.ifab_lote ,antes.ifab_calibre ,antes.ifab_cantidad ,antes.ifab_motivo 
    ,antes.ifab_documento ,antes.ifab_observaciones ,antes.ifab_movimiento 
    ,antes.ifab_fecha ,antes.ifab_departamentosalida ,antes.ifab_departamento 
    ,antes.ifab_catalogo ,antes.ifab_catalogosalida ,antes.ifab_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_inv_estado insert on "informix".inv_estado 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_estado (est_id,est_descripcion,
    est_situacion,desp_est_id,desp_est_descripcion,desp_est_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.est_id ,luego.est_descripcion 
    ,luego.est_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_inv_estado delete on "informix".inv_estado 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_estado (est_id,est_descripcion,
    est_situacion,desp_est_id,desp_est_descripcion,desp_est_situacion,
    accion,usuario,hora)  values (antes.est_id ,antes.est_descripcion 
    ,antes.est_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_inv_estado update on "informix".inv_estado 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_inv_estado (est_id,est_descripcion,
    est_situacion,desp_est_id,desp_est_descripcion,desp_est_situacion,
    accion,usuario,hora)  values (antes.est_id ,antes.est_descripcion 
    ,antes.est_situacion ,luego.est_id ,luego.est_descripcion ,luego.est_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_manto_equipo_estado insert on "informix"
    .manto_equipo_estado referencing new as luego
    for each row
        (
        insert into "informix".aud_manto_equipo_estado (equipo_estado_codigo,
    equipo_estado_descripcion,equipo_estado_detalle_situacion,desp_equipo_estado_codigo,
    desp_equipo_estado_descripcion,desp_equipo_estado_detalle_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.equipo_estado_codigo 
    ,luego.equipo_estado_descripcion ,luego.equipo_estado_detalle_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_manto_equipo_estado delete on "informix"
    .manto_equipo_estado referencing old as antes
    for each row
        (
        insert into "informix".aud_manto_equipo_estado (equipo_estado_codigo,
    equipo_estado_descripcion,equipo_estado_detalle_situacion,desp_equipo_estado_codigo,
    desp_equipo_estado_descripcion,desp_equipo_estado_detalle_situacion,
    accion,usuario,hora)  values (antes.equipo_estado_codigo ,antes.equipo_estado_descripcion 
    ,antes.equipo_estado_detalle_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_manto_equipo_estado update on "informix"
    .manto_equipo_estado referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_manto_equipo_estado (equipo_estado_codigo,
    equipo_estado_descripcion,equipo_estado_detalle_situacion,desp_equipo_estado_codigo,
    desp_equipo_estado_descripcion,desp_equipo_estado_detalle_situacion,
    accion,usuario,hora)  values (antes.equipo_estado_codigo ,antes.equipo_estado_descripcion 
    ,antes.equipo_estado_detalle_situacion ,luego.equipo_estado_codigo 
    ,luego.equipo_estado_descripcion ,luego.equipo_estado_detalle_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_manto_marca_equipo insert on "informix"
    .manto_marca_equipo referencing new as luego
    for each row
        (
        insert into "informix".aud_manto_marca_equipo (marca_equipo_codigo,
    marca_equipo_descripcion,marca_equipo_situacion,desp_marca_equipo_codigo,
    desp_marca_equipo_descripcion,desp_marca_equipo_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.marca_equipo_codigo ,luego.marca_equipo_descripcion 
    ,luego.marca_equipo_situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_manto_marca_equipo delete on "informix"
    .manto_marca_equipo referencing old as antes
    for each row
        (
        insert into "informix".aud_manto_marca_equipo (marca_equipo_codigo,
    marca_equipo_descripcion,marca_equipo_situacion,desp_marca_equipo_codigo,
    desp_marca_equipo_descripcion,desp_marca_equipo_situacion,accion,
    usuario,hora)  values (antes.marca_equipo_codigo ,antes.marca_equipo_descripcion 
    ,antes.marca_equipo_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_manto_marca_equipo update on "informix"
    .manto_marca_equipo referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_manto_marca_equipo (marca_equipo_codigo,
    marca_equipo_descripcion,marca_equipo_situacion,desp_marca_equipo_codigo,
    desp_marca_equipo_descripcion,desp_marca_equipo_situacion,accion,
    usuario,hora)  values (antes.marca_equipo_codigo ,antes.marca_equipo_descripcion 
    ,antes.marca_equipo_situacion ,luego.marca_equipo_codigo ,luego.marca_equipo_descripcion 
    ,luego.marca_equipo_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_manto_tipo_equipo insert on "informix"
    .manto_tipo_equipo referencing new as luego
    for each row
        (
        insert into "informix".aud_manto_tipo_equipo (tipo_equipo_codigo,
    tipo_equipo_descripcion,tipo_equipo_detalle_situacion,desp_tipo_equipo_codigo,
    desp_tipo_equipo_descripcion,desp_tipo_equipo_detalle_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.tipo_equipo_codigo ,luego.tipo_equipo_descripcion 
    ,luego.tipo_equipo_detalle_situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_manto_tipo_equipo delete on "informix"
    .manto_tipo_equipo referencing old as antes
    for each row
        (
        insert into "informix".aud_manto_tipo_equipo (tipo_equipo_codigo,
    tipo_equipo_descripcion,tipo_equipo_detalle_situacion,desp_tipo_equipo_codigo,
    desp_tipo_equipo_descripcion,desp_tipo_equipo_detalle_situacion,accion,
    usuario,hora)  values (antes.tipo_equipo_codigo ,antes.tipo_equipo_descripcion 
    ,antes.tipo_equipo_detalle_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_manto_tipo_equipo update on "informix"
    .manto_tipo_equipo referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_manto_tipo_equipo (tipo_equipo_codigo,
    tipo_equipo_descripcion,tipo_equipo_detalle_situacion,desp_tipo_equipo_codigo,
    desp_tipo_equipo_descripcion,desp_tipo_equipo_detalle_situacion,accion,
    usuario,hora)  values (antes.tipo_equipo_codigo ,antes.tipo_equipo_descripcion 
    ,antes.tipo_equipo_detalle_situacion ,luego.tipo_equipo_codigo ,luego.tipo_equipo_descripcion 
    ,luego.tipo_equipo_detalle_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_manto_equipo insert on "informix"
    .manto_equipo referencing new as luego
    for each row
        (
        insert into "informix".aud_manto_equipo (equipo_codigo,
    equipo_oficio,equipo_dependencia,equipo_motivo,equipo_modelo,equipo_serial,
    equipo_lector_cd,equipo_tarjeta_sonido,equipo_drivers,equipo_tarjeta_grafica,
    equipo_fuente_poder,equipo_tipo_disco_duro,equipo_capacidad_disco_duro,
    equipo_tipo_memoria_ram,equipo_capacidad_memoria_ram,equipo_velocidad_memoria_ram,
    equipo_tipo_procesador,equipo_velocidad_procesador,equipo_targeta_red,
    equipo_tipo_impresora,equipo_con_cable,equipo_marca,equipo_tipo,equipo_descripcion,
    equipo_estado,equipo_detalle_situacion,desp_equipo_codigo,desp_equipo_oficio,
    desp_equipo_dependencia,desp_equipo_motivo,desp_equipo_modelo,desp_equipo_serial,
    desp_equipo_lector_cd,desp_equipo_tarjeta_sonido,desp_equipo_drivers,
    desp_equipo_tarjeta_grafica,desp_equipo_fuente_poder,desp_equipo_tipo_disco_duro,
    desp_equipo_capacidad_disco_duro,desp_equipo_tipo_memoria_ram,desp_equipo_capacidad_memoria_ram,
    desp_equipo_velocidad_memoria_ram,desp_equipo_tipo_procesador,desp_equipo_velocidad_procesador,
    desp_equipo_targeta_red,desp_equipo_tipo_impresora,desp_equipo_con_cable,
    desp_equipo_marca,desp_equipo_tipo,desp_equipo_descripcion,desp_equipo_estado,
    desp_equipo_detalle_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,luego.equipo_codigo ,luego.equipo_oficio ,luego.equipo_dependencia 
    ,luego.equipo_motivo ,luego.equipo_modelo ,luego.equipo_serial ,luego.equipo_lector_cd 
    ,luego.equipo_tarjeta_sonido ,luego.equipo_drivers ,luego.equipo_tarjeta_grafica 
    ,luego.equipo_fuente_poder ,luego.equipo_tipo_disco_duro ,luego.equipo_capacidad_disco_duro 
    ,luego.equipo_tipo_memoria_ram ,luego.equipo_capacidad_memoria_ram 
    ,luego.equipo_velocidad_memoria_ram ,luego.equipo_tipo_procesador 
    ,luego.equipo_velocidad_procesador ,luego.equipo_targeta_red ,luego.equipo_tipo_impresora 
    ,luego.equipo_con_cable ,luego.equipo_marca ,luego.equipo_tipo ,luego.equipo_descripcion 
    ,luego.equipo_estado ,luego.equipo_detalle_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_manto_equipo delete on "informix"
    .manto_equipo referencing old as antes
    for each row
        (
        insert into "informix".aud_manto_equipo (equipo_codigo,
    equipo_oficio,equipo_dependencia,equipo_motivo,equipo_modelo,equipo_serial,
    equipo_lector_cd,equipo_tarjeta_sonido,equipo_drivers,equipo_tarjeta_grafica,
    equipo_fuente_poder,equipo_tipo_disco_duro,equipo_capacidad_disco_duro,
    equipo_tipo_memoria_ram,equipo_capacidad_memoria_ram,equipo_velocidad_memoria_ram,
    equipo_tipo_procesador,equipo_velocidad_procesador,equipo_targeta_red,
    equipo_tipo_impresora,equipo_con_cable,equipo_marca,equipo_tipo,equipo_descripcion,
    equipo_estado,equipo_detalle_situacion,desp_equipo_codigo,desp_equipo_oficio,
    desp_equipo_dependencia,desp_equipo_motivo,desp_equipo_modelo,desp_equipo_serial,
    desp_equipo_lector_cd,desp_equipo_tarjeta_sonido,desp_equipo_drivers,
    desp_equipo_tarjeta_grafica,desp_equipo_fuente_poder,desp_equipo_tipo_disco_duro,
    desp_equipo_capacidad_disco_duro,desp_equipo_tipo_memoria_ram,desp_equipo_capacidad_memoria_ram,
    desp_equipo_velocidad_memoria_ram,desp_equipo_tipo_procesador,desp_equipo_velocidad_procesador,
    desp_equipo_targeta_red,desp_equipo_tipo_impresora,desp_equipo_con_cable,
    desp_equipo_marca,desp_equipo_tipo,desp_equipo_descripcion,desp_equipo_estado,
    desp_equipo_detalle_situacion,accion,usuario,hora)  values (antes.equipo_codigo 
    ,antes.equipo_oficio ,antes.equipo_dependencia ,antes.equipo_motivo 
    ,antes.equipo_modelo ,antes.equipo_serial ,antes.equipo_lector_cd 
    ,antes.equipo_tarjeta_sonido ,antes.equipo_drivers ,antes.equipo_tarjeta_grafica 
    ,antes.equipo_fuente_poder ,antes.equipo_tipo_disco_duro ,antes.equipo_capacidad_disco_duro 
    ,antes.equipo_tipo_memoria_ram ,antes.equipo_capacidad_memoria_ram 
    ,antes.equipo_velocidad_memoria_ram ,antes.equipo_tipo_procesador 
    ,antes.equipo_velocidad_procesador ,antes.equipo_targeta_red ,antes.equipo_tipo_impresora 
    ,antes.equipo_con_cable ,antes.equipo_marca ,antes.equipo_tipo ,antes.equipo_descripcion 
    ,antes.equipo_estado ,antes.equipo_detalle_situacion ,NULL ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,''
     ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_manto_equipo update on "informix"
    .manto_equipo referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_manto_equipo (equipo_codigo,
    equipo_oficio,equipo_dependencia,equipo_motivo,equipo_modelo,equipo_serial,
    equipo_lector_cd,equipo_tarjeta_sonido,equipo_drivers,equipo_tarjeta_grafica,
    equipo_fuente_poder,equipo_tipo_disco_duro,equipo_capacidad_disco_duro,
    equipo_tipo_memoria_ram,equipo_capacidad_memoria_ram,equipo_velocidad_memoria_ram,
    equipo_tipo_procesador,equipo_velocidad_procesador,equipo_targeta_red,
    equipo_tipo_impresora,equipo_con_cable,equipo_marca,equipo_tipo,equipo_descripcion,
    equipo_estado,equipo_detalle_situacion,desp_equipo_codigo,desp_equipo_oficio,
    desp_equipo_dependencia,desp_equipo_motivo,desp_equipo_modelo,desp_equipo_serial,
    desp_equipo_lector_cd,desp_equipo_tarjeta_sonido,desp_equipo_drivers,
    desp_equipo_tarjeta_grafica,desp_equipo_fuente_poder,desp_equipo_tipo_disco_duro,
    desp_equipo_capacidad_disco_duro,desp_equipo_tipo_memoria_ram,desp_equipo_capacidad_memoria_ram,
    desp_equipo_velocidad_memoria_ram,desp_equipo_tipo_procesador,desp_equipo_velocidad_procesador,
    desp_equipo_targeta_red,desp_equipo_tipo_impresora,desp_equipo_con_cable,
    desp_equipo_marca,desp_equipo_tipo,desp_equipo_descripcion,desp_equipo_estado,
    desp_equipo_detalle_situacion,accion,usuario,hora)  values (antes.equipo_codigo 
    ,antes.equipo_oficio ,antes.equipo_dependencia ,antes.equipo_motivo 
    ,antes.equipo_modelo ,antes.equipo_serial ,antes.equipo_lector_cd 
    ,antes.equipo_tarjeta_sonido ,antes.equipo_drivers ,antes.equipo_tarjeta_grafica 
    ,antes.equipo_fuente_poder ,antes.equipo_tipo_disco_duro ,antes.equipo_capacidad_disco_duro 
    ,antes.equipo_tipo_memoria_ram ,antes.equipo_capacidad_memoria_ram 
    ,antes.equipo_velocidad_memoria_ram ,antes.equipo_tipo_procesador 
    ,antes.equipo_velocidad_procesador ,antes.equipo_targeta_red ,antes.equipo_tipo_impresora 
    ,antes.equipo_con_cable ,antes.equipo_marca ,antes.equipo_tipo ,antes.equipo_descripcion 
    ,antes.equipo_estado ,antes.equipo_detalle_situacion ,luego.equipo_codigo 
    ,luego.equipo_oficio ,luego.equipo_dependencia ,luego.equipo_motivo 
    ,luego.equipo_modelo ,luego.equipo_serial ,luego.equipo_lector_cd 
    ,luego.equipo_tarjeta_sonido ,luego.equipo_drivers ,luego.equipo_tarjeta_grafica 
    ,luego.equipo_fuente_poder ,luego.equipo_tipo_disco_duro ,luego.equipo_capacidad_disco_duro 
    ,luego.equipo_tipo_memoria_ram ,luego.equipo_capacidad_memoria_ram 
    ,luego.equipo_velocidad_memoria_ram ,luego.equipo_tipo_procesador 
    ,luego.equipo_velocidad_procesador ,luego.equipo_targeta_red ,luego.equipo_tipo_impresora 
    ,luego.equipo_con_cable ,luego.equipo_marca ,luego.equipo_tipo ,luego.equipo_descripcion 
    ,luego.equipo_estado ,luego.equipo_detalle_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_manto_entrega insert on "informix"
    .manto_entrega referencing new as luego
    for each row
        (
        insert into "informix".aud_manto_entrega (ent_codigo,
    ent_fecha,ent_usuario_catalogo,ent_usuario_numero,ent_tecnico_catalogo,
    ent_equipo_codigo,ent_detalle_situacion,desp_ent_codigo,desp_ent_fecha,
    desp_ent_usuario_catalogo,desp_ent_usuario_numero,desp_ent_tecnico_catalogo,
    desp_ent_equipo_codigo,desp_ent_detalle_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,luego.ent_codigo ,luego.ent_fecha 
    ,luego.ent_usuario_catalogo ,luego.ent_usuario_numero ,luego.ent_tecnico_catalogo 
    ,luego.ent_equipo_codigo ,luego.ent_detalle_situacion ,'I' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".del_manto_entrega delete on "informix"
    .manto_entrega referencing old as antes
    for each row
        (
        insert into "informix".aud_manto_entrega (ent_codigo,
    ent_fecha,ent_usuario_catalogo,ent_usuario_numero,ent_tecnico_catalogo,
    ent_equipo_codigo,ent_detalle_situacion,desp_ent_codigo,desp_ent_fecha,
    desp_ent_usuario_catalogo,desp_ent_usuario_numero,desp_ent_tecnico_catalogo,
    desp_ent_equipo_codigo,desp_ent_detalle_situacion,accion,usuario,
    hora)  values (antes.ent_codigo ,antes.ent_fecha ,antes.ent_usuario_catalogo 
    ,antes.ent_usuario_numero ,antes.ent_tecnico_catalogo ,antes.ent_equipo_codigo 
    ,antes.ent_detalle_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_manto_entrega update on "informix"
    .manto_entrega referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_manto_entrega (ent_codigo,
    ent_fecha,ent_usuario_catalogo,ent_usuario_numero,ent_tecnico_catalogo,
    ent_equipo_codigo,ent_detalle_situacion,desp_ent_codigo,desp_ent_fecha,
    desp_ent_usuario_catalogo,desp_ent_usuario_numero,desp_ent_tecnico_catalogo,
    desp_ent_equipo_codigo,desp_ent_detalle_situacion,accion,usuario,
    hora)  values (antes.ent_codigo ,antes.ent_fecha ,antes.ent_usuario_catalogo 
    ,antes.ent_usuario_numero ,antes.ent_tecnico_catalogo ,antes.ent_equipo_codigo 
    ,antes.ent_detalle_situacion ,luego.ent_codigo ,luego.ent_fecha ,
    luego.ent_usuario_catalogo ,luego.ent_usuario_numero ,luego.ent_tecnico_catalogo 
    ,luego.ent_equipo_codigo ,luego.ent_detalle_situacion ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_manto_solicitud insert on "informix"
    .manto_solicitud referencing new as luego
    for each row
        (
        insert into "informix".aud_manto_solicitud (sol_codigo,
    sol_fecha,sol_usuario_catalogo,sol_usuario_telefono,sol_tecnico_catalogo,
    sol_observacion,sol_detalle_situacion,sol_equipo_codigo,desp_sol_codigo,
    desp_sol_fecha,desp_sol_usuario_catalogo,desp_sol_usuario_telefono,
    desp_sol_tecnico_catalogo,desp_sol_observacion,desp_sol_detalle_situacion,
    desp_sol_equipo_codigo,accion,usuario,hora)  values (NULL ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,luego.sol_codigo ,luego.sol_fecha ,luego.sol_usuario_catalogo 
    ,luego.sol_usuario_telefono ,luego.sol_tecnico_catalogo ,luego.sol_observacion 
    ,luego.sol_detalle_situacion ,luego.sol_equipo_codigo ,'I' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".del_manto_solicitud delete on "informix"
    .manto_solicitud referencing old as antes
    for each row
        (
        insert into "informix".aud_manto_solicitud (sol_codigo,
    sol_fecha,sol_usuario_catalogo,sol_usuario_telefono,sol_tecnico_catalogo,
    sol_observacion,sol_detalle_situacion,sol_equipo_codigo,desp_sol_codigo,
    desp_sol_fecha,desp_sol_usuario_catalogo,desp_sol_usuario_telefono,
    desp_sol_tecnico_catalogo,desp_sol_observacion,desp_sol_detalle_situacion,
    desp_sol_equipo_codigo,accion,usuario,hora)  values (antes.sol_codigo 
    ,antes.sol_fecha ,antes.sol_usuario_catalogo ,antes.sol_usuario_telefono 
    ,antes.sol_tecnico_catalogo ,antes.sol_observacion ,antes.sol_detalle_situacion 
    ,antes.sol_equipo_codigo ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_manto_solicitud update on "informix"
    .manto_solicitud referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_manto_solicitud (sol_codigo,
    sol_fecha,sol_usuario_catalogo,sol_usuario_telefono,sol_tecnico_catalogo,
    sol_observacion,sol_detalle_situacion,sol_equipo_codigo,desp_sol_codigo,
    desp_sol_fecha,desp_sol_usuario_catalogo,desp_sol_usuario_telefono,
    desp_sol_tecnico_catalogo,desp_sol_observacion,desp_sol_detalle_situacion,
    desp_sol_equipo_codigo,accion,usuario,hora)  values (antes.sol_codigo 
    ,antes.sol_fecha ,antes.sol_usuario_catalogo ,antes.sol_usuario_telefono 
    ,antes.sol_tecnico_catalogo ,antes.sol_observacion ,antes.sol_detalle_situacion 
    ,antes.sol_equipo_codigo ,luego.sol_codigo ,luego.sol_fecha ,luego.sol_usuario_catalogo 
    ,luego.sol_usuario_telefono ,luego.sol_tecnico_catalogo ,luego.sol_observacion 
    ,luego.sol_detalle_situacion ,luego.sol_equipo_codigo ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_manto_reparacion insert on "informix"
    .manto_reparacion referencing new as luego
    for each row
        (
        insert into "informix".aud_manto_reparacion (rep_codigo,
    rep_fecha,rep_tecnico_catalogo,rep_descripcion,rep_notificacion,rep_detalle_situacion,
    rep_equipo_codigo,desp_rep_codigo,desp_rep_fecha,desp_rep_tecnico_catalogo,
    desp_rep_descripcion,desp_rep_notificacion,desp_rep_detalle_situacion,
    desp_rep_equipo_codigo,accion,usuario,hora)  values (NULL ,'' ,'' ,
    '' ,'' ,'' ,'' ,luego.rep_codigo ,luego.rep_fecha ,luego.rep_tecnico_catalogo 
    ,luego.rep_descripcion ,luego.rep_notificacion ,luego.rep_detalle_situacion 
    ,luego.rep_equipo_codigo ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_manto_reparacion delete on "informix"
    .manto_reparacion referencing old as antes
    for each row
        (
        insert into "informix".aud_manto_reparacion (rep_codigo,
    rep_fecha,rep_tecnico_catalogo,rep_descripcion,rep_notificacion,rep_detalle_situacion,
    rep_equipo_codigo,desp_rep_codigo,desp_rep_fecha,desp_rep_tecnico_catalogo,
    desp_rep_descripcion,desp_rep_notificacion,desp_rep_detalle_situacion,
    desp_rep_equipo_codigo,accion,usuario,hora)  values (antes.rep_codigo 
    ,antes.rep_fecha ,antes.rep_tecnico_catalogo ,antes.rep_descripcion 
    ,antes.rep_notificacion ,antes.rep_detalle_situacion ,antes.rep_equipo_codigo 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".act_manto_reparacion update on "informix"
    .manto_reparacion referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_manto_reparacion (rep_codigo,
    rep_fecha,rep_tecnico_catalogo,rep_descripcion,rep_notificacion,rep_detalle_situacion,
    rep_equipo_codigo,desp_rep_codigo,desp_rep_fecha,desp_rep_tecnico_catalogo,
    desp_rep_descripcion,desp_rep_notificacion,desp_rep_detalle_situacion,
    desp_rep_equipo_codigo,accion,usuario,hora)  values (antes.rep_codigo 
    ,antes.rep_fecha ,antes.rep_tecnico_catalogo ,antes.rep_descripcion 
    ,antes.rep_notificacion ,antes.rep_detalle_situacion ,antes.rep_equipo_codigo 
    ,luego.rep_codigo ,luego.rep_fecha ,luego.rep_tecnico_catalogo ,luego.rep_descripcion 
    ,luego.rep_notificacion ,luego.rep_detalle_situacion ,luego.rep_equipo_codigo 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_manto_equipo_historial insert on 
    "informix".manto_equipo_historial referencing new as luego
    
    for each row
        (
        insert into "informix".aud_manto_equipo_historial (equi_his_codigo,
    equi_his_codigo_equipo,equi_his_codigo_solicitud,equi_his_fecha,equi_his_estado,
    equi_his_situacion,desp_equi_his_codigo,desp_equi_his_codigo_equipo,
    desp_equi_his_codigo_solicitud,desp_equi_his_fecha,desp_equi_his_estado,
    desp_equi_his_situacion,accion,usuario,hora)  values (NULL ,'' ,'' 
    ,'' ,'' ,'' ,luego.equi_his_codigo ,luego.equi_his_codigo_equipo ,luego.equi_his_codigo_solicitud 
    ,luego.equi_his_fecha ,luego.equi_his_estado ,luego.equi_his_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_manto_equipo_historial delete on 
    "informix".manto_equipo_historial referencing old as antes
    
    for each row
        (
        insert into "informix".aud_manto_equipo_historial (equi_his_codigo,
    equi_his_codigo_equipo,equi_his_codigo_solicitud,equi_his_fecha,equi_his_estado,
    equi_his_situacion,desp_equi_his_codigo,desp_equi_his_codigo_equipo,
    desp_equi_his_codigo_solicitud,desp_equi_his_fecha,desp_equi_his_estado,
    desp_equi_his_situacion,accion,usuario,hora)  values (antes.equi_his_codigo 
    ,antes.equi_his_codigo_equipo ,antes.equi_his_codigo_solicitud ,antes.equi_his_fecha 
    ,antes.equi_his_estado ,antes.equi_his_situacion ,NULL ,'' ,'' ,'' ,
    '' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_manto_equipo_historial update on 
    "informix".manto_equipo_historial referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_manto_equipo_historial (equi_his_codigo,
    equi_his_codigo_equipo,equi_his_codigo_solicitud,equi_his_fecha,equi_his_estado,
    equi_his_situacion,desp_equi_his_codigo,desp_equi_his_codigo_equipo,
    desp_equi_his_codigo_solicitud,desp_equi_his_fecha,desp_equi_his_estado,
    desp_equi_his_situacion,accion,usuario,hora)  values (antes.equi_his_codigo 
    ,antes.equi_his_codigo_equipo ,antes.equi_his_codigo_solicitud ,antes.equi_his_fecha 
    ,antes.equi_his_estado ,antes.equi_his_situacion ,luego.equi_his_codigo 
    ,luego.equi_his_codigo_equipo ,luego.equi_his_codigo_solicitud ,luego.equi_his_fecha 
    ,luego.equi_his_estado ,luego.equi_his_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_municion_almacencomando insert 
    on "informix".municion_almacencomando referencing new as luego
    
    for each row
        (
        insert into "informix".aud_municion_almacencomando (acom_id,
    acom_lote,acom_calibre,acom_cantidad,acom_motivo,acom_documento,acom_observaciones,
    acom_movimiento,acom_fecha,acom_departamentosalida,acom_departamento,
    acom_catalogo,acom_catalogosalida,acom_situacion,desp_acom_id,desp_acom_lote,
    desp_acom_calibre,desp_acom_cantidad,desp_acom_motivo,desp_acom_documento,
    desp_acom_observaciones,desp_acom_movimiento,desp_acom_fecha,desp_acom_departamentosalida,
    desp_acom_departamento,desp_acom_catalogo,desp_acom_catalogosalida,
    desp_acom_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.acom_id ,luego.acom_lote ,luego.acom_calibre 
    ,luego.acom_cantidad ,luego.acom_motivo ,luego.acom_documento ,luego.acom_observaciones 
    ,luego.acom_movimiento ,luego.acom_fecha ,luego.acom_departamentosalida 
    ,luego.acom_departamento ,luego.acom_catalogo ,luego.acom_catalogosalida 
    ,luego.acom_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_municion_almacencomando delete 
    on "informix".municion_almacencomando referencing old as antes
    
    for each row
        (
        insert into "informix".aud_municion_almacencomando (acom_id,
    acom_lote,acom_calibre,acom_cantidad,acom_motivo,acom_documento,acom_observaciones,
    acom_movimiento,acom_fecha,acom_departamentosalida,acom_departamento,
    acom_catalogo,acom_catalogosalida,acom_situacion,desp_acom_id,desp_acom_lote,
    desp_acom_calibre,desp_acom_cantidad,desp_acom_motivo,desp_acom_documento,
    desp_acom_observaciones,desp_acom_movimiento,desp_acom_fecha,desp_acom_departamentosalida,
    desp_acom_departamento,desp_acom_catalogo,desp_acom_catalogosalida,
    desp_acom_situacion,accion,usuario,hora)  values (antes.acom_id ,
    antes.acom_lote ,antes.acom_calibre ,antes.acom_cantidad ,antes.acom_motivo 
    ,antes.acom_documento ,antes.acom_observaciones ,antes.acom_movimiento 
    ,antes.acom_fecha ,antes.acom_departamentosalida ,antes.acom_departamento 
    ,antes.acom_catalogo ,antes.acom_catalogosalida ,antes.acom_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_municion_almacencomando update 
    on "informix".municion_almacencomando referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_municion_almacencomando (acom_id,
    acom_lote,acom_calibre,acom_cantidad,acom_motivo,acom_documento,acom_observaciones,
    acom_movimiento,acom_fecha,acom_departamentosalida,acom_departamento,
    acom_catalogo,acom_catalogosalida,acom_situacion,desp_acom_id,desp_acom_lote,
    desp_acom_calibre,desp_acom_cantidad,desp_acom_motivo,desp_acom_documento,
    desp_acom_observaciones,desp_acom_movimiento,desp_acom_fecha,desp_acom_departamentosalida,
    desp_acom_departamento,desp_acom_catalogo,desp_acom_catalogosalida,
    desp_acom_situacion,accion,usuario,hora)  values (antes.acom_id ,
    antes.acom_lote ,antes.acom_calibre ,antes.acom_cantidad ,antes.acom_motivo 
    ,antes.acom_documento ,antes.acom_observaciones ,antes.acom_movimiento 
    ,antes.acom_fecha ,antes.acom_departamentosalida ,antes.acom_departamento 
    ,antes.acom_catalogo ,antes.acom_catalogosalida ,antes.acom_situacion 
    ,luego.acom_id ,luego.acom_lote ,luego.acom_calibre ,luego.acom_cantidad 
    ,luego.acom_motivo ,luego.acom_documento ,luego.acom_observaciones 
    ,luego.acom_movimiento ,luego.acom_fecha ,luego.acom_departamentosalida 
    ,luego.acom_departamento ,luego.acom_catalogo ,luego.acom_catalogosalida 
    ,luego.acom_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_municion_batallon insert on "informix"
    .municion_batallon referencing new as luego
    for each row
        (
        insert into "informix".aud_municion_batallon (bat_id,
    bat_lote,bat_calibre,bat_cantidad,bat_motivo,bat_documento,bat_observaciones,
    bat_movimiento,bat_fecha,bat_departamento,bat_batallon,bat_catalogo,
    bat_catalogosalida,bat_situacion,desp_bat_id,desp_bat_lote,desp_bat_calibre,
    desp_bat_cantidad,desp_bat_motivo,desp_bat_documento,desp_bat_observaciones,
    desp_bat_movimiento,desp_bat_fecha,desp_bat_departamento,desp_bat_batallon,
    desp_bat_catalogo,desp_bat_catalogosalida,desp_bat_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,luego.bat_id ,luego.bat_lote ,luego.bat_calibre ,luego.bat_cantidad 
    ,luego.bat_motivo ,luego.bat_documento ,luego.bat_observaciones ,
    luego.bat_movimiento ,luego.bat_fecha ,luego.bat_departamento ,luego.bat_batallon 
    ,luego.bat_catalogo ,luego.bat_catalogosalida ,luego.bat_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_municion_batallon delete on "informix"
    .municion_batallon referencing old as antes
    for each row
        (
        insert into "informix".aud_municion_batallon (bat_id,
    bat_lote,bat_calibre,bat_cantidad,bat_motivo,bat_documento,bat_observaciones,
    bat_movimiento,bat_fecha,bat_departamento,bat_batallon,bat_catalogo,
    bat_catalogosalida,bat_situacion,desp_bat_id,desp_bat_lote,desp_bat_calibre,
    desp_bat_cantidad,desp_bat_motivo,desp_bat_documento,desp_bat_observaciones,
    desp_bat_movimiento,desp_bat_fecha,desp_bat_departamento,desp_bat_batallon,
    desp_bat_catalogo,desp_bat_catalogosalida,desp_bat_situacion,accion,
    usuario,hora)  values (antes.bat_id ,antes.bat_lote ,antes.bat_calibre 
    ,antes.bat_cantidad ,antes.bat_motivo ,antes.bat_documento ,antes.bat_observaciones 
    ,antes.bat_movimiento ,antes.bat_fecha ,antes.bat_departamento ,antes.bat_batallon 
    ,antes.bat_catalogo ,antes.bat_catalogosalida ,antes.bat_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_municion_batallon update on "informix"
    .municion_batallon referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_municion_batallon (bat_id,
    bat_lote,bat_calibre,bat_cantidad,bat_motivo,bat_documento,bat_observaciones,
    bat_movimiento,bat_fecha,bat_departamento,bat_batallon,bat_catalogo,
    bat_catalogosalida,bat_situacion,desp_bat_id,desp_bat_lote,desp_bat_calibre,
    desp_bat_cantidad,desp_bat_motivo,desp_bat_documento,desp_bat_observaciones,
    desp_bat_movimiento,desp_bat_fecha,desp_bat_departamento,desp_bat_batallon,
    desp_bat_catalogo,desp_bat_catalogosalida,desp_bat_situacion,accion,
    usuario,hora)  values (antes.bat_id ,antes.bat_lote ,antes.bat_calibre 
    ,antes.bat_cantidad ,antes.bat_motivo ,antes.bat_documento ,antes.bat_observaciones 
    ,antes.bat_movimiento ,antes.bat_fecha ,antes.bat_departamento ,antes.bat_batallon 
    ,antes.bat_catalogo ,antes.bat_catalogosalida ,antes.bat_situacion 
    ,luego.bat_id ,luego.bat_lote ,luego.bat_calibre ,luego.bat_cantidad 
    ,luego.bat_motivo ,luego.bat_documento ,luego.bat_observaciones ,
    luego.bat_movimiento ,luego.bat_fecha ,luego.bat_departamento ,luego.bat_batallon 
    ,luego.bat_catalogo ,luego.bat_catalogosalida ,luego.bat_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_municion_ingresoalmacen insert 
    on "informix".municion_ingresoalmacen referencing new as luego
    
    for each row
        (
        insert into "informix".aud_municion_ingresoalmacen (ialm_id,
    ialm_lote,ialm_calibre,ialm_cantidad,ialm_motivo,ialm_documento,ialm_observaciones,
    ialm_movimiento,ialm_fecha,ialm_departamentosalida,ialm_departamento,
    ialm_catalogo,ialm_catalogosalida,ialm_situacion,desp_ialm_id,desp_ialm_lote,
    desp_ialm_calibre,desp_ialm_cantidad,desp_ialm_motivo,desp_ialm_documento,
    desp_ialm_observaciones,desp_ialm_movimiento,desp_ialm_fecha,desp_ialm_departamentosalida,
    desp_ialm_departamento,desp_ialm_catalogo,desp_ialm_catalogosalida,
    desp_ialm_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.ialm_id ,luego.ialm_lote ,luego.ialm_calibre 
    ,luego.ialm_cantidad ,luego.ialm_motivo ,luego.ialm_documento ,luego.ialm_observaciones 
    ,luego.ialm_movimiento ,luego.ialm_fecha ,luego.ialm_departamentosalida 
    ,luego.ialm_departamento ,luego.ialm_catalogo ,luego.ialm_catalogosalida 
    ,luego.ialm_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_municion_ingresoalmacen delete 
    on "informix".municion_ingresoalmacen referencing old as antes
    
    for each row
        (
        insert into "informix".aud_municion_ingresoalmacen (ialm_id,
    ialm_lote,ialm_calibre,ialm_cantidad,ialm_motivo,ialm_documento,ialm_observaciones,
    ialm_movimiento,ialm_fecha,ialm_departamentosalida,ialm_departamento,
    ialm_catalogo,ialm_catalogosalida,ialm_situacion,desp_ialm_id,desp_ialm_lote,
    desp_ialm_calibre,desp_ialm_cantidad,desp_ialm_motivo,desp_ialm_documento,
    desp_ialm_observaciones,desp_ialm_movimiento,desp_ialm_fecha,desp_ialm_departamentosalida,
    desp_ialm_departamento,desp_ialm_catalogo,desp_ialm_catalogosalida,
    desp_ialm_situacion,accion,usuario,hora)  values (antes.ialm_id ,
    antes.ialm_lote ,antes.ialm_calibre ,antes.ialm_cantidad ,antes.ialm_motivo 
    ,antes.ialm_documento ,antes.ialm_observaciones ,antes.ialm_movimiento 
    ,antes.ialm_fecha ,antes.ialm_departamentosalida ,antes.ialm_departamento 
    ,antes.ialm_catalogo ,antes.ialm_catalogosalida ,antes.ialm_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_municion_ingresoalmacen update 
    on "informix".municion_ingresoalmacen referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_municion_ingresoalmacen (ialm_id,
    ialm_lote,ialm_calibre,ialm_cantidad,ialm_motivo,ialm_documento,ialm_observaciones,
    ialm_movimiento,ialm_fecha,ialm_departamentosalida,ialm_departamento,
    ialm_catalogo,ialm_catalogosalida,ialm_situacion,desp_ialm_id,desp_ialm_lote,
    desp_ialm_calibre,desp_ialm_cantidad,desp_ialm_motivo,desp_ialm_documento,
    desp_ialm_observaciones,desp_ialm_movimiento,desp_ialm_fecha,desp_ialm_departamentosalida,
    desp_ialm_departamento,desp_ialm_catalogo,desp_ialm_catalogosalida,
    desp_ialm_situacion,accion,usuario,hora)  values (antes.ialm_id ,
    antes.ialm_lote ,antes.ialm_calibre ,antes.ialm_cantidad ,antes.ialm_motivo 
    ,antes.ialm_documento ,antes.ialm_observaciones ,antes.ialm_movimiento 
    ,antes.ialm_fecha ,antes.ialm_departamentosalida ,antes.ialm_departamento 
    ,antes.ialm_catalogo ,antes.ialm_catalogosalida ,antes.ialm_situacion 
    ,luego.ialm_id ,luego.ialm_lote ,luego.ialm_calibre ,luego.ialm_cantidad 
    ,luego.ialm_motivo ,luego.ialm_documento ,luego.ialm_observaciones 
    ,luego.ialm_movimiento ,luego.ialm_fecha ,luego.ialm_departamentosalida 
    ,luego.ialm_departamento ,luego.ialm_catalogo ,luego.ialm_catalogosalida 
    ,luego.ialm_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_f_cat_eliminado_r22 insert on "informix"
    .f_cat_eliminado_r22 referencing new as luego
    for each row
        (
        insert into "informix".aud_f_cat_eliminado_r22 (fin_elim_id,
    fin_elim_cat_finanzas,fin_elim_fecha,fin_elim_observaciones,fin_elim_cat_quitado,
    desp_fin_elim_id,desp_fin_elim_cat_finanzas,desp_fin_elim_fecha,desp_fin_elim_observaciones,
    desp_fin_elim_cat_quitado,accion,usuario,hora)  values (NULL ,'' ,
    '' ,'' ,'' ,luego.fin_elim_id ,luego.fin_elim_cat_finanzas ,luego.fin_elim_fecha 
    ,luego.fin_elim_observaciones ,luego.fin_elim_cat_quitado ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_f_cat_eliminado_r22 delete on "informix"
    .f_cat_eliminado_r22 referencing old as antes
    for each row
        (
        insert into "informix".aud_f_cat_eliminado_r22 (fin_elim_id,
    fin_elim_cat_finanzas,fin_elim_fecha,fin_elim_observaciones,fin_elim_cat_quitado,
    desp_fin_elim_id,desp_fin_elim_cat_finanzas,desp_fin_elim_fecha,desp_fin_elim_observaciones,
    desp_fin_elim_cat_quitado,accion,usuario,hora)  values (antes.fin_elim_id 
    ,antes.fin_elim_cat_finanzas ,antes.fin_elim_fecha ,antes.fin_elim_observaciones 
    ,antes.fin_elim_cat_quitado ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_f_cat_eliminado_r22 update on "informix"
    .f_cat_eliminado_r22 referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_f_cat_eliminado_r22 (fin_elim_id,
    fin_elim_cat_finanzas,fin_elim_fecha,fin_elim_observaciones,fin_elim_cat_quitado,
    desp_fin_elim_id,desp_fin_elim_cat_finanzas,desp_fin_elim_fecha,desp_fin_elim_observaciones,
    desp_fin_elim_cat_quitado,accion,usuario,hora)  values (antes.fin_elim_id 
    ,antes.fin_elim_cat_finanzas ,antes.fin_elim_fecha ,antes.fin_elim_observaciones 
    ,antes.fin_elim_cat_quitado ,luego.fin_elim_id ,luego.fin_elim_cat_finanzas 
    ,luego.fin_elim_fecha ,luego.fin_elim_observaciones ,luego.fin_elim_cat_quitado 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_inv_almacenes insert on "informix"
    .inv_almacenes referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_almacenes (alma_id,alma_nombre,
    alma_clase,alma_descripcion,alma_unidad,alma_situacion,desp_alma_id,
    desp_alma_nombre,desp_alma_clase,desp_alma_descripcion,desp_alma_unidad,
    desp_alma_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,
    '' ,'' ,luego.alma_id ,luego.alma_nombre ,luego.alma_clase ,luego.alma_descripcion 
    ,luego.alma_unidad ,luego.alma_situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_inv_almacenes delete on "informix"
    .inv_almacenes referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_almacenes (alma_id,alma_nombre,
    alma_clase,alma_descripcion,alma_unidad,alma_situacion,desp_alma_id,
    desp_alma_nombre,desp_alma_clase,desp_alma_descripcion,desp_alma_unidad,
    desp_alma_situacion,accion,usuario,hora)  values (antes.alma_id ,
    antes.alma_nombre ,antes.alma_clase ,antes.alma_descripcion ,antes.alma_unidad 
    ,antes.alma_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_inv_almacenes update on "informix"
    .inv_almacenes referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_inv_almacenes (alma_id,alma_nombre,
    alma_clase,alma_descripcion,alma_unidad,alma_situacion,desp_alma_id,
    desp_alma_nombre,desp_alma_clase,desp_alma_descripcion,desp_alma_unidad,
    desp_alma_situacion,accion,usuario,hora)  values (antes.alma_id ,
    antes.alma_nombre ,antes.alma_clase ,antes.alma_descripcion ,antes.alma_unidad 
    ,antes.alma_situacion ,luego.alma_id ,luego.alma_nombre ,luego.alma_clase 
    ,luego.alma_descripcion ,luego.alma_unidad ,luego.alma_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_inv_movimientos insert on "informix"
    .inv_movimientos referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_movimientos (mov_id,mov_tipo_mov,
    mov_tipo_trans,mov_alma_id,mov_perso_entrega,mov_perso_recibe,mov_perso_respon,
    mov_fecha,mov_proce_destino,mov_descrip,mov_situacion,desp_mov_id,
    desp_mov_tipo_mov,desp_mov_tipo_trans,desp_mov_alma_id,desp_mov_perso_entrega,
    desp_mov_perso_recibe,desp_mov_perso_respon,desp_mov_fecha,desp_mov_proce_destino,
    desp_mov_descrip,desp_mov_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.mov_id ,luego.mov_tipo_mov 
    ,luego.mov_tipo_trans ,luego.mov_alma_id ,luego.mov_perso_entrega 
    ,luego.mov_perso_recibe ,luego.mov_perso_respon ,luego.mov_fecha 
    ,luego.mov_proce_destino ,luego.mov_descrip ,luego.mov_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_inv_movimientos delete on "informix"
    .inv_movimientos referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_movimientos (mov_id,mov_tipo_mov,
    mov_tipo_trans,mov_alma_id,mov_perso_entrega,mov_perso_recibe,mov_perso_respon,
    mov_fecha,mov_proce_destino,mov_descrip,mov_situacion,desp_mov_id,
    desp_mov_tipo_mov,desp_mov_tipo_trans,desp_mov_alma_id,desp_mov_perso_entrega,
    desp_mov_perso_recibe,desp_mov_perso_respon,desp_mov_fecha,desp_mov_proce_destino,
    desp_mov_descrip,desp_mov_situacion,accion,usuario,hora)  values 
    (antes.mov_id ,antes.mov_tipo_mov ,antes.mov_tipo_trans ,antes.mov_alma_id 
    ,antes.mov_perso_entrega ,antes.mov_perso_recibe ,antes.mov_perso_respon 
    ,antes.mov_fecha ,antes.mov_proce_destino ,antes.mov_descrip ,antes.mov_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_inv_movimientos update on "informix"
    .inv_movimientos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_inv_movimientos (mov_id,mov_tipo_mov,
    mov_tipo_trans,mov_alma_id,mov_perso_entrega,mov_perso_recibe,mov_perso_respon,
    mov_fecha,mov_proce_destino,mov_descrip,mov_situacion,desp_mov_id,
    desp_mov_tipo_mov,desp_mov_tipo_trans,desp_mov_alma_id,desp_mov_perso_entrega,
    desp_mov_perso_recibe,desp_mov_perso_respon,desp_mov_fecha,desp_mov_proce_destino,
    desp_mov_descrip,desp_mov_situacion,accion,usuario,hora)  values 
    (antes.mov_id ,antes.mov_tipo_mov ,antes.mov_tipo_trans ,antes.mov_alma_id 
    ,antes.mov_perso_entrega ,antes.mov_perso_recibe ,antes.mov_perso_respon 
    ,antes.mov_fecha ,antes.mov_proce_destino ,antes.mov_descrip ,antes.mov_situacion 
    ,luego.mov_id ,luego.mov_tipo_mov ,luego.mov_tipo_trans ,luego.mov_alma_id 
    ,luego.mov_perso_entrega ,luego.mov_perso_recibe ,luego.mov_perso_respon 
    ,luego.mov_fecha ,luego.mov_proce_destino ,luego.mov_descrip ,luego.mov_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_inv_producto insert on "informix"
    .inv_producto referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_producto (pro_id,pro_clase_id,
    pro_nom_articulo,pro_descripcion,pro_situacion,desp_pro_id,desp_pro_clase_id,
    desp_pro_nom_articulo,desp_pro_descripcion,desp_pro_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ::lvarchar(2048) ,'' ,luego.pro_id 
    ,luego.pro_clase_id ,luego.pro_nom_articulo ,luego.pro_descripcion 
    ,luego.pro_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_inv_producto delete on "informix"
    .inv_producto referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_producto (pro_id,pro_clase_id,
    pro_nom_articulo,pro_descripcion,pro_situacion,desp_pro_id,desp_pro_clase_id,
    desp_pro_nom_articulo,desp_pro_descripcion,desp_pro_situacion,accion,
    usuario,hora)  values (antes.pro_id ,antes.pro_clase_id ,antes.pro_nom_articulo 
    ,antes.pro_descripcion ,antes.pro_situacion ,NULL ,'' ,'' ,'' ::lvarchar(2048) 
    ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_inv_producto update on "informix"
    .inv_producto referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_inv_producto (pro_id,pro_clase_id,
    pro_nom_articulo,pro_descripcion,pro_situacion,desp_pro_id,desp_pro_clase_id,
    desp_pro_nom_articulo,desp_pro_descripcion,desp_pro_situacion,accion,
    usuario,hora)  values (antes.pro_id ,antes.pro_clase_id ,antes.pro_nom_articulo 
    ,antes.pro_descripcion ,antes.pro_situacion ,luego.pro_id ,luego.pro_clase_id 
    ,luego.pro_nom_articulo ,luego.pro_descripcion ,luego.pro_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_inv_uni_med insert on "informix"
    .inv_uni_med referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_uni_med (uni_id,uni_nombre,
    uni_clase,uni_situacion,desp_uni_id,desp_uni_nombre,desp_uni_clase,
    desp_uni_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.uni_id 
    ,luego.uni_nombre ,luego.uni_clase ,luego.uni_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_inv_uni_med delete on "informix"
    .inv_uni_med referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_uni_med (uni_id,uni_nombre,
    uni_clase,uni_situacion,desp_uni_id,desp_uni_nombre,desp_uni_clase,
    desp_uni_situacion,accion,usuario,hora)  values (antes.uni_id ,antes.uni_nombre 
    ,antes.uni_clase ,antes.uni_situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_inv_uni_med update on "informix"
    .inv_uni_med referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_inv_uni_med (uni_id,uni_nombre,
    uni_clase,uni_situacion,desp_uni_id,desp_uni_nombre,desp_uni_clase,
    desp_uni_situacion,accion,usuario,hora)  values (antes.uni_id ,antes.uni_nombre 
    ,antes.uni_clase ,antes.uni_situacion ,luego.uni_id ,luego.uni_nombre 
    ,luego.uni_clase ,luego.uni_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_inv_guarda_almacen insert on "informix"
    .inv_guarda_almacen referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_guarda_almacen (guarda_id,
    guarda_catalogo,guarda_almacen,guarda_situacion,desp_guarda_id,desp_guarda_catalogo,
    desp_guarda_almacen,desp_guarda_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,luego.guarda_id ,luego.guarda_catalogo ,luego.guarda_almacen 
    ,luego.guarda_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_inv_guarda_almacen delete on "informix"
    .inv_guarda_almacen referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_guarda_almacen (guarda_id,
    guarda_catalogo,guarda_almacen,guarda_situacion,desp_guarda_id,desp_guarda_catalogo,
    desp_guarda_almacen,desp_guarda_situacion,accion,usuario,hora)  values 
    (antes.guarda_id ,antes.guarda_catalogo ,antes.guarda_almacen ,antes.guarda_situacion 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_inv_guarda_almacen update on "informix"
    .inv_guarda_almacen referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_inv_guarda_almacen (guarda_id,
    guarda_catalogo,guarda_almacen,guarda_situacion,desp_guarda_id,desp_guarda_catalogo,
    desp_guarda_almacen,desp_guarda_situacion,accion,usuario,hora)  values 
    (antes.guarda_id ,antes.guarda_catalogo ,antes.guarda_almacen ,antes.guarda_situacion 
    ,luego.guarda_id ,luego.guarda_catalogo ,luego.guarda_almacen ,luego.guarda_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_inv_deta_movimientos insert on 
    "informix".inv_deta_movimientos referencing new as luego
    for each row
        (
        insert into "informix".aud_inv_deta_movimientos (det_id,
    det_mov_id,det_pro_id,det_uni_med,det_lote,det_fecha_vence,det_estado,
    det_cantidad,det_cantidad_existente,det_cantidad_lote,det_observaciones,
    det_situacion,desp_det_id,desp_det_mov_id,desp_det_pro_id,desp_det_uni_med,
    desp_det_lote,desp_det_fecha_vence,desp_det_estado,desp_det_cantidad,
    desp_det_cantidad_existente,desp_det_cantidad_lote,desp_det_observaciones,
    desp_det_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2048) ,'' ,luego.det_id ,luego.det_mov_id 
    ,luego.det_pro_id ,luego.det_uni_med ,luego.det_lote ,luego.det_fecha_vence 
    ,luego.det_estado ,luego.det_cantidad ,luego.det_cantidad_existente 
    ,luego.det_cantidad_lote ,luego.det_observaciones ,luego.det_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_inv_deta_movimientos delete on 
    "informix".inv_deta_movimientos referencing old as antes
    for each row
        (
        insert into "informix".aud_inv_deta_movimientos (det_id,
    det_mov_id,det_pro_id,det_uni_med,det_lote,det_fecha_vence,det_estado,
    det_cantidad,det_cantidad_existente,det_cantidad_lote,det_observaciones,
    det_situacion,desp_det_id,desp_det_mov_id,desp_det_pro_id,desp_det_uni_med,
    desp_det_lote,desp_det_fecha_vence,desp_det_estado,desp_det_cantidad,
    desp_det_cantidad_existente,desp_det_cantidad_lote,desp_det_observaciones,
    desp_det_situacion,accion,usuario,hora)  values (antes.det_id ,antes.det_mov_id 
    ,antes.det_pro_id ,antes.det_uni_med ,antes.det_lote ,antes.det_fecha_vence 
    ,antes.det_estado ,antes.det_cantidad ,antes.det_cantidad_existente 
    ,antes.det_cantidad_lote ,antes.det_observaciones ,antes.det_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2048) ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_inv_deta_movimientos update on 
    "informix".inv_deta_movimientos referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_inv_deta_movimientos (det_id,
    det_mov_id,det_pro_id,det_uni_med,det_lote,det_fecha_vence,det_estado,
    det_cantidad,det_cantidad_existente,det_cantidad_lote,det_observaciones,
    det_situacion,desp_det_id,desp_det_mov_id,desp_det_pro_id,desp_det_uni_med,
    desp_det_lote,desp_det_fecha_vence,desp_det_estado,desp_det_cantidad,
    desp_det_cantidad_existente,desp_det_cantidad_lote,desp_det_observaciones,
    desp_det_situacion,accion,usuario,hora)  values (antes.det_id ,antes.det_mov_id 
    ,antes.det_pro_id ,antes.det_uni_med ,antes.det_lote ,antes.det_fecha_vence 
    ,antes.det_estado ,antes.det_cantidad ,antes.det_cantidad_existente 
    ,antes.det_cantidad_lote ,antes.det_observaciones ,antes.det_situacion 
    ,luego.det_id ,luego.det_mov_id ,luego.det_pro_id ,luego.det_uni_med 
    ,luego.det_lote ,luego.det_fecha_vence ,luego.det_estado ,luego.det_cantidad 
    ,luego.det_cantidad_existente ,luego.det_cantidad_lote ,luego.det_observaciones 
    ,luego.det_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_firma_registro insert on "informix"
    .firma_registro referencing new as luego
    for each row
        (
        insert into "informix".aud_firma_registro (fir_reg_id,
    fir_reg_cat,fir_reg_tipo,fir_reg_sit,desp_fir_reg_id,desp_fir_reg_cat,
    desp_fir_reg_tipo,desp_fir_reg_sit,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,luego.fir_reg_id ,luego.fir_reg_cat ,luego.fir_reg_tipo 
    ,luego.fir_reg_sit ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_firma_registro delete on "informix"
    .firma_registro referencing old as antes
    for each row
        (
        insert into "informix".aud_firma_registro (fir_reg_id,
    fir_reg_cat,fir_reg_tipo,fir_reg_sit,desp_fir_reg_id,desp_fir_reg_cat,
    desp_fir_reg_tipo,desp_fir_reg_sit,accion,usuario,hora)  values (antes.fir_reg_id 
    ,antes.fir_reg_cat ,antes.fir_reg_tipo ,antes.fir_reg_sit ,NULL ,
    '' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_firma_registro update on "informix"
    .firma_registro referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_firma_registro (fir_reg_id,
    fir_reg_cat,fir_reg_tipo,fir_reg_sit,desp_fir_reg_id,desp_fir_reg_cat,
    desp_fir_reg_tipo,desp_fir_reg_sit,accion,usuario,hora)  values (antes.fir_reg_id 
    ,antes.fir_reg_cat ,antes.fir_reg_tipo ,antes.fir_reg_sit ,luego.fir_reg_id 
    ,luego.fir_reg_cat ,luego.fir_reg_tipo ,luego.fir_reg_sit ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_coc_unidad_organica insert on "informix"
    .coc_unidad_organica referencing new as luego
    for each row
        (
        insert into "informix".aud_coc_unidad_organica (uni_org_codigo,
    uni_org_descripcion,uni_org_situacion,desp_uni_org_codigo,desp_uni_org_descripcion,
    desp_uni_org_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,
    luego.uni_org_codigo ,luego.uni_org_descripcion ,luego.uni_org_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_coc_unidad_organica delete on "informix"
    .coc_unidad_organica referencing old as antes
    for each row
        (
        insert into "informix".aud_coc_unidad_organica (uni_org_codigo,
    uni_org_descripcion,uni_org_situacion,desp_uni_org_codigo,desp_uni_org_descripcion,
    desp_uni_org_situacion,accion,usuario,hora)  values (antes.uni_org_codigo 
    ,antes.uni_org_descripcion ,antes.uni_org_situacion ,NULL ,'' ,'' ,
    'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_coc_unidad_organica update on "informix"
    .coc_unidad_organica referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_coc_unidad_organica (uni_org_codigo,
    uni_org_descripcion,uni_org_situacion,desp_uni_org_codigo,desp_uni_org_descripcion,
    desp_uni_org_situacion,accion,usuario,hora)  values (antes.uni_org_codigo 
    ,antes.uni_org_descripcion ,antes.uni_org_situacion ,luego.uni_org_codigo 
    ,luego.uni_org_descripcion ,luego.uni_org_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_municion_cuatrimestral delete on 
    "informix".municion_cuatrimestral referencing old as antes
    
    for each row
        (
        insert into "informix".aud_municion_cuatrimestral (cuat_id,
    cuat_lote,cuat_calibre,cuat_cantidad,cuat_motivo,cuat_documento,cuat_observaciones,
    cuat_movimiento,cuat_fecha,cuat_fecharegistro,cuat_departamento,cuat_batallon,
    cuat_catalogoasignado,cuat_catalogoasignadopor,cuat_catalogoregistradopor,
    cuat_situacion,desp_cuat_id,desp_cuat_lote,desp_cuat_calibre,desp_cuat_cantidad,
    desp_cuat_motivo,desp_cuat_documento,desp_cuat_observaciones,desp_cuat_movimiento,
    desp_cuat_fecha,desp_cuat_fecharegistro,desp_cuat_departamento,desp_cuat_batallon,
    desp_cuat_catalogoasignado,desp_cuat_catalogoasignadopor,desp_cuat_catalogoregistradopor,
    desp_cuat_situacion,accion,usuario,hora)  values (antes.cuat_id ,
    antes.cuat_lote ,antes.cuat_calibre ,antes.cuat_cantidad ,antes.cuat_motivo 
    ,antes.cuat_documento ,antes.cuat_observaciones ,antes.cuat_movimiento 
    ,antes.cuat_fecha ,antes.cuat_fecharegistro ,antes.cuat_departamento 
    ,antes.cuat_batallon ,antes.cuat_catalogoasignado ,antes.cuat_catalogoasignadopor 
    ,antes.cuat_catalogoregistradopor ,antes.cuat_situacion ,NULL ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_municion_cuatrimestral insert on 
    "informix".municion_cuatrimestral referencing new as luego
    
    for each row
        (
        insert into "informix".aud_municion_cuatrimestral (cuat_id,
    cuat_lote,cuat_calibre,cuat_cantidad,cuat_motivo,cuat_documento,cuat_observaciones,
    cuat_movimiento,cuat_fecha,cuat_fecharegistro,cuat_departamento,cuat_batallon,
    cuat_catalogoasignado,cuat_catalogoasignadopor,cuat_catalogoregistradopor,
    cuat_situacion,desp_cuat_id,desp_cuat_lote,desp_cuat_calibre,desp_cuat_cantidad,
    desp_cuat_motivo,desp_cuat_documento,desp_cuat_observaciones,desp_cuat_movimiento,
    desp_cuat_fecha,desp_cuat_fecharegistro,desp_cuat_departamento,desp_cuat_batallon,
    desp_cuat_catalogoasignado,desp_cuat_catalogoasignadopor,desp_cuat_catalogoregistradopor,
    desp_cuat_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.cuat_id ,luego.cuat_lote 
    ,luego.cuat_calibre ,luego.cuat_cantidad ,luego.cuat_motivo ,luego.cuat_documento 
    ,luego.cuat_observaciones ,luego.cuat_movimiento ,luego.cuat_fecha 
    ,luego.cuat_fecharegistro ,luego.cuat_departamento ,luego.cuat_batallon 
    ,luego.cuat_catalogoasignado ,luego.cuat_catalogoasignadopor ,luego.cuat_catalogoregistradopor 
    ,luego.cuat_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_municion_cuatrimestral update on 
    "informix".municion_cuatrimestral referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_municion_cuatrimestral (cuat_id,
    cuat_lote,cuat_calibre,cuat_cantidad,cuat_motivo,cuat_documento,cuat_observaciones,
    cuat_movimiento,cuat_fecha,cuat_fecharegistro,cuat_departamento,cuat_batallon,
    cuat_catalogoasignado,cuat_catalogoasignadopor,cuat_catalogoregistradopor,
    cuat_situacion,desp_cuat_id,desp_cuat_lote,desp_cuat_calibre,desp_cuat_cantidad,
    desp_cuat_motivo,desp_cuat_documento,desp_cuat_observaciones,desp_cuat_movimiento,
    desp_cuat_fecha,desp_cuat_fecharegistro,desp_cuat_departamento,desp_cuat_batallon,
    desp_cuat_catalogoasignado,desp_cuat_catalogoasignadopor,desp_cuat_catalogoregistradopor,
    desp_cuat_situacion,accion,usuario,hora)  values (antes.cuat_id ,
    antes.cuat_lote ,antes.cuat_calibre ,antes.cuat_cantidad ,antes.cuat_motivo 
    ,antes.cuat_documento ,antes.cuat_observaciones ,antes.cuat_movimiento 
    ,antes.cuat_fecha ,antes.cuat_fecharegistro ,antes.cuat_departamento 
    ,antes.cuat_batallon ,antes.cuat_catalogoasignado ,antes.cuat_catalogoasignadopor 
    ,antes.cuat_catalogoregistradopor ,antes.cuat_situacion ,luego.cuat_id 
    ,luego.cuat_lote ,luego.cuat_calibre ,luego.cuat_cantidad ,luego.cuat_motivo 
    ,luego.cuat_documento ,luego.cuat_observaciones ,luego.cuat_movimiento 
    ,luego.cuat_fecha ,luego.cuat_fecharegistro ,luego.cuat_departamento 
    ,luego.cuat_batallon ,luego.cuat_catalogoasignado ,luego.cuat_catalogoasignadopor 
    ,luego.cuat_catalogoregistradopor ,luego.cuat_situacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_apresto_asesor delete on "informix"
    .apresto_asesor referencing old as antes
    for each row
        (
        insert into "informix".aud_apresto_asesor (ase_id,ase_catalogo,
    ase_funcion,ase_curriculum,ase_situacion,desp_ase_id,desp_ase_catalogo,
    desp_ase_funcion,desp_ase_curriculum,desp_ase_situacion,usuario,accion,
    hora)  values (antes.ase_id ,antes.ase_catalogo ,antes.ase_funcion 
    ,antes.ase_curriculum ,antes.ase_situacion ,'' ,'' ,'' ,'' ,'' ,USER ,
    'D' ,CURRENT year to minute ));

create trigger "informix".ins_apresto_asesor insert on "informix"
    .apresto_asesor referencing new as luego
    for each row
        (
        insert into "informix".aud_apresto_asesor (ase_id,ase_catalogo,
    ase_funcion,ase_curriculum,ase_situacion,desp_ase_id,desp_ase_catalogo,
    desp_ase_funcion,desp_ase_curriculum,desp_ase_situacion,usuario,accion,
    hora)  values ('' ,'' ,'' ,'' ,'' ,luego.ase_id ,luego.ase_catalogo ,luego.ase_funcion 
    ,luego.ase_curriculum ,luego.ase_situacion ,USER ,'I' ,CURRENT year 
    to minute ));

create trigger "informix".upd_apresto_asesor update on "informix"
    .apresto_asesor referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_apresto_asesor (ase_id,ase_catalogo,
    ase_funcion,ase_curriculum,ase_situacion,desp_ase_id,desp_ase_catalogo,
    desp_ase_funcion,desp_ase_curriculum,desp_ase_situacion,usuario,accion,
    hora)  values (antes.ase_id ,antes.ase_catalogo ,antes.ase_funcion 
    ,antes.ase_curriculum ,antes.ase_situacion ,luego.ase_id ,luego.ase_catalogo 
    ,luego.ase_funcion ,luego.ase_curriculum ,luego.ase_situacion ,USER 
    ,'U' ,CURRENT year to minute ));

create trigger "informix".ins_apresto_asignacion_dependencia 
    insert on "informix".apresto_asignacion_dependencia referencing 
    new as luego
    for each row
        (
        insert into "informix".aud_apresto_asignacion_dependencia 
    (asig_id,asig_dep,asig_asesor,asig_situacion,desp_asig_id,desp_asig_dep,
    desp_asig_asesor,desp_asig_situacion,usuario,accion,hora)  values 
    ('' ,'' ,'' ,'' ,luego.asig_id ,luego.asig_dep ,luego.asig_asesor ,luego.asig_situacion 
    ,USER ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_apresto_asignacion_dependencia 
    update on "informix".apresto_asignacion_dependencia referencing 
    old as antes new as luego
    for each row
        (
        insert into "informix".aud_apresto_asignacion_dependencia 
    (asig_id,asig_dep,asig_asesor,asig_situacion,desp_asig_id,desp_asig_dep,
    desp_asig_asesor,desp_asig_situacion,usuario,accion,hora)  values 
    (antes.asig_id ,antes.asig_dep ,antes.asig_asesor ,antes.asig_situacion 
    ,luego.asig_id ,luego.asig_dep ,luego.asig_asesor ,luego.asig_situacion 
    ,USER ,'U' ,CURRENT year to minute ));

create trigger "informix".del_apresto_asignacion_dependencia 
    delete on "informix".apresto_asignacion_dependencia referencing 
    old as antes
    for each row
        (
        insert into "informix".aud_apresto_asignacion_dependencia 
    (asig_id,asig_dep,asig_asesor,asig_situacion,desp_asig_id,desp_asig_dep,
    desp_asig_asesor,desp_asig_situacion,usuario,accion,hora)  values 
    (antes.asig_id ,antes.asig_dep ,antes.asig_asesor ,antes.asig_situacion 
    ,'' ,'' ,'' ,'' ,USER ,'D' ,CURRENT year to minute ));

create trigger "informix".ins_apresto_ambito insert on "informix"
    .apresto_ambito referencing new as luego
    for each row
        (
        insert into "informix".aud_apresto_ambito (amb_id,amb_ambito,
    amb_situacion,desp_amb_id,desp_amb_ambito,desp_amb_situacion,usuario,
    accion,hora)  values ('' ,'' ,'' ,luego.amb_id ,luego.amb_ambito ,luego.amb_situacion 
    ,USER ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_apresto_ambito update on "informix"
    .apresto_ambito referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_apresto_ambito (amb_id,amb_ambito,
    amb_situacion,desp_amb_id,desp_amb_ambito,desp_amb_situacion,usuario,
    accion,hora)  values (antes.amb_id ,antes.amb_ambito ,antes.amb_situacion 
    ,luego.amb_id ,luego.amb_ambito ,luego.amb_situacion ,USER ,'U' ,CURRENT 
    year to minute ));

create trigger "informix".del_apresto_ambito delete on "informix"
    .apresto_ambito referencing old as antes
    for each row
        (
        insert into "informix".aud_apresto_ambito (amb_id,amb_ambito,
    amb_situacion,desp_amb_id,desp_amb_ambito,desp_amb_situacion,usuario,
    accion,hora)  values (antes.amb_id ,antes.amb_ambito ,antes.amb_situacion 
    ,'' ,'' ,'' ,USER ,'D' ,CURRENT year to minute ));

create trigger "informix".ins_apresto_modalidad insert on "informix"
    .apresto_modalidad referencing new as luego
    for each row
        (
        insert into "informix".aud_apresto_modalidad (mod_id,
    mod_modalidad,mod_situacion,desp_mod_id,desp_mod_modalidad,desp_mod_situacion,
    usuario,accion,hora)  values ('' ,'' ,'' ,luego.mod_id ,luego.mod_modalidad 
    ,luego.mod_situacion ,USER ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_apresto_modalidad update on "informix"
    .apresto_modalidad referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_apresto_modalidad (mod_id,
    mod_modalidad,mod_situacion,desp_mod_id,desp_mod_modalidad,desp_mod_situacion,
    usuario,accion,hora)  values (antes.mod_id ,antes.mod_modalidad ,
    antes.mod_situacion ,luego.mod_id ,luego.mod_modalidad ,luego.mod_situacion 
    ,USER ,'U' ,CURRENT year to minute ));

create trigger "informix".del_apresto_modalidad delete on "informix"
    .apresto_modalidad referencing old as antes
    for each row
        (
        insert into "informix".aud_apresto_modalidad (mod_id,
    mod_modalidad,mod_situacion,desp_mod_id,desp_mod_modalidad,desp_mod_situacion,
    usuario,accion,hora)  values (antes.mod_id ,antes.mod_modalidad ,
    antes.mod_situacion ,'' ,'' ,'' ,USER ,'D' ,CURRENT year to minute ));
    

create trigger "informix".del_apresto_asigna_tarea delete on 
    "informix".apresto_asigna_tarea referencing old as antes
    for each row
        (
        insert into "informix".aud_apresto_asigna_tarea (asig_tar_id,
    asig_tar_tarea,asig_tar_asesor,asig_tar_fecha,asig_tar_situacion,
    desp_asig_tar_id,desp_asig_tar_tarea,desp_asig_tar_asesor,desp_asig_tar_fecha,
    desp_asig_tar_situacion,usuario,accion,hora)  values (antes.asig_tar_id 
    ,antes.asig_tar_tarea ,antes.asig_tar_asesor ,antes.asig_tar_fecha 
    ,antes.asig_tar_situacion ,'' ,'' ,'' ,'' ,'' ,USER ,'D' ,CURRENT year 
    to minute ));

create trigger "informix".ins_apresto_asigna_tarea insert on 
    "informix".apresto_asigna_tarea referencing new as luego
    for each row
        (
        insert into "informix".aud_apresto_asigna_tarea (asig_tar_id,
    asig_tar_tarea,asig_tar_asesor,asig_tar_fecha,asig_tar_situacion,
    desp_asig_tar_id,desp_asig_tar_tarea,desp_asig_tar_asesor,desp_asig_tar_fecha,
    desp_asig_tar_situacion,usuario,accion,hora)  values ('' ,'' ,'' ,'' 
    ,'' ,luego.asig_tar_id ,luego.asig_tar_tarea ,luego.asig_tar_asesor 
    ,luego.asig_tar_fecha ,luego.asig_tar_situacion ,USER ,'I' ,CURRENT 
    year to minute ));

create trigger "informix".upd_apresto_asigna_tarea update on 
    "informix".apresto_asigna_tarea referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_apresto_asigna_tarea (asig_tar_id,
    asig_tar_tarea,asig_tar_asesor,asig_tar_fecha,asig_tar_situacion,
    desp_asig_tar_id,desp_asig_tar_tarea,desp_asig_tar_asesor,desp_asig_tar_fecha,
    desp_asig_tar_situacion,usuario,accion,hora)  values (antes.asig_tar_id 
    ,antes.asig_tar_tarea ,antes.asig_tar_asesor ,antes.asig_tar_fecha 
    ,antes.asig_tar_situacion ,luego.asig_tar_id ,luego.asig_tar_tarea 
    ,luego.asig_tar_asesor ,luego.asig_tar_fecha ,luego.asig_tar_situacion 
    ,USER ,'U' ,CURRENT year to minute ));

create trigger "informix".ins_apresto_respuesta insert on "informix"
    .apresto_respuesta referencing new as luego
    for each row
        (
        insert into "informix".aud_apresto_respuesta (res_id,
    res_asignacion,res_documento,res_fecha,res_situacion,desp_res_id,
    desp_res_asignacion,desp_res_documento,desp_res_fecha,desp_res_situacion,
    usuario,accion,hora)  values ('' ,'' ,'' ,'' ,'' ,luego.res_id ,luego.res_asignacion 
    ,luego.res_documento ,luego.res_fecha ,luego.res_situacion ,USER 
    ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_apresto_respuesta update on "informix"
    .apresto_respuesta referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_apresto_respuesta (res_id,
    res_asignacion,res_documento,res_fecha,res_situacion,desp_res_id,
    desp_res_asignacion,desp_res_documento,desp_res_fecha,desp_res_situacion,
    usuario,accion,hora)  values (antes.res_id ,antes.res_asignacion 
    ,antes.res_documento ,antes.res_fecha ,antes.res_situacion ,luego.res_id 
    ,luego.res_asignacion ,luego.res_documento ,luego.res_fecha ,luego.res_situacion 
    ,USER ,'U' ,CURRENT year to minute ));

create trigger "informix".del_apresto_respuesta delete on "informix"
    .apresto_respuesta referencing old as antes
    for each row
        (
        insert into "informix".aud_apresto_respuesta (res_id,
    res_asignacion,res_documento,res_fecha,res_situacion,desp_res_id,
    desp_res_asignacion,desp_res_documento,desp_res_fecha,desp_res_situacion,
    usuario,accion,hora)  values (antes.res_id ,antes.res_asignacion 
    ,antes.res_documento ,antes.res_fecha ,antes.res_situacion ,'' ,'' 
    ,'' ,'' ,'' ,USER ,'D' ,CURRENT year to minute ));

create trigger "informix".ins_codemar_asig_personal insert on 
    "informix".codemar_asig_personal referencing new as luego
    for each row
        (
        insert into "informix".aud_codemar_asig_personal (asi_id,
    asi_operacion,asi_catalogo,asi_sit,desp_asi_id,desp_asi_operacion,
    desp_asi_catalogo,desp_asi_sit,usuario,accion,hora)  values ('' ,''
     ,'' ,'' ,luego.asi_id ,luego.asi_operacion ,luego.asi_catalogo ,luego.asi_sit 
    ,USER ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_codemar_asig_personal update on 
    "informix".codemar_asig_personal referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_codemar_asig_personal (asi_id,
    asi_operacion,asi_catalogo,asi_sit,desp_asi_id,desp_asi_operacion,
    desp_asi_catalogo,desp_asi_sit,usuario,accion,hora)  values (antes.asi_id 
    ,antes.asi_operacion ,antes.asi_catalogo ,antes.asi_sit ,luego.asi_id 
    ,luego.asi_operacion ,luego.asi_catalogo ,luego.asi_sit ,USER ,'U'
     ,CURRENT year to minute ));

create trigger "informix".del_codemar_asig_personal delete on 
    "informix".codemar_asig_personal referencing old as antes
    for each row
        (
        insert into "informix".aud_codemar_asig_personal (asi_id,
    asi_operacion,asi_catalogo,asi_sit,desp_asi_id,desp_asi_operacion,
    desp_asi_catalogo,desp_asi_sit,usuario,accion,hora)  values (antes.asi_id 
    ,antes.asi_operacion ,antes.asi_catalogo ,antes.asi_sit ,'' ,'' ,'' 
    ,'' ,USER ,'D' ,CURRENT year to minute ));

create trigger "informix".ins_codemar_tipos_operaciones insert 
    on "informix".codemar_tipos_operaciones referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_codemar_tipos_operaciones 
    (tipo_id,tipo_desc,tipo_situacion,desp_tipo_id,desp_tipo_desc,desp_tipo_situacion,
    usuario,accion,hora)  values ('' ,'' ,'' ,luego.tipo_id ,luego.tipo_desc 
    ,luego.tipo_situacion ,USER ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_codemar_tipos_operaciones update 
    on "informix".codemar_tipos_operaciones referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_codemar_tipos_operaciones 
    (tipo_id,tipo_desc,tipo_situacion,desp_tipo_id,desp_tipo_desc,desp_tipo_situacion,
    usuario,accion,hora)  values (antes.tipo_id ,antes.tipo_desc ,antes.tipo_situacion 
    ,luego.tipo_id ,luego.tipo_desc ,luego.tipo_situacion ,USER ,'U' ,
    CURRENT year to minute ));

create trigger "informix".del_codemar_tipos_operaciones delete 
    on "informix".codemar_tipos_operaciones referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_codemar_tipos_operaciones 
    (tipo_id,tipo_desc,tipo_situacion,desp_tipo_id,desp_tipo_desc,desp_tipo_situacion,
    usuario,accion,hora)  values (antes.tipo_id ,antes.tipo_desc ,antes.tipo_situacion 
    ,'' ,'' ,'' ,USER ,'D' ,CURRENT year to minute ));

create trigger "informix".ins_codemar_operaciones insert on "informix"
    .codemar_operaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_codemar_operaciones (ope_id,
    ope_tipo,ope_fecha_zarpe,ope_fecha_atraque,ope_situacion,ope_mision,
    ope_ejecucion,ope_identificador,ope_dependencia,ope_reutilizar,ope_distancia,
    ope_nacional,ope_sit,ope_reservados,desp_ope_id,desp_ope_tipo,desp_ope_fecha_zarpe,
    desp_ope_fecha_atraque,desp_ope_situacion,desp_ope_mision,desp_ope_ejecucion,
    desp_ope_identificador,desp_ope_dependencia,desp_ope_reutilizar,desp_ope_distancia,
    desp_ope_nacional,desp_ope_sit,desp_ope_reservados,usuario,accion,
    hora)  values ('' ,'' ,NULL ,NULL ,'' ::lvarchar(2048) ,'' ::lvarchar(2048) 
    ,'' ::lvarchar(2048) ,'' ,'' ,'' ,'' ,'''' ,'' ,'' ,luego.ope_id ,luego.ope_tipo 
    ,luego.ope_fecha_zarpe ,luego.ope_fecha_atraque ,luego.ope_situacion 
    ,luego.ope_mision ,luego.ope_ejecucion ,luego.ope_identificador ,
    luego.ope_dependencia ,luego.ope_reutilizar ,luego.ope_distancia 
    ,luego.ope_nacional ,luego.ope_sit ,luego.ope_reservados ,USER ,'I'
     ,CURRENT year to minute ));

create trigger "informix".upd_codemar_operaciones update on "informix"
    .codemar_operaciones referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_codemar_operaciones (ope_id,
    ope_tipo,ope_fecha_zarpe,ope_fecha_atraque,ope_situacion,ope_mision,
    ope_ejecucion,ope_identificador,ope_dependencia,ope_reutilizar,ope_distancia,
    ope_nacional,ope_sit,ope_reservados,desp_ope_id,desp_ope_tipo,desp_ope_fecha_zarpe,
    desp_ope_fecha_atraque,desp_ope_situacion,desp_ope_mision,desp_ope_ejecucion,
    desp_ope_identificador,desp_ope_dependencia,desp_ope_reutilizar,desp_ope_distancia,
    desp_ope_nacional,desp_ope_sit,desp_ope_reservados,usuario,accion,
    hora)  values (antes.ope_id ,antes.ope_tipo ,antes.ope_fecha_zarpe 
    ,antes.ope_fecha_atraque ,antes.ope_situacion ,antes.ope_mision ,
    antes.ope_ejecucion ,antes.ope_identificador ,antes.ope_dependencia 
    ,antes.ope_reutilizar ,antes.ope_distancia ,antes.ope_nacional ,antes.ope_sit 
    ,antes.ope_reservados ,luego.ope_id ,luego.ope_tipo ,luego.ope_fecha_zarpe 
    ,luego.ope_fecha_atraque ,luego.ope_situacion ,luego.ope_mision ,
    luego.ope_ejecucion ,luego.ope_identificador ,luego.ope_dependencia 
    ,luego.ope_reutilizar ,luego.ope_distancia ,luego.ope_nacional ,luego.ope_sit 
    ,luego.ope_reservados ,USER ,'U' ,CURRENT year to minute ));

create trigger "informix".del_codemar_operaciones delete on "informix"
    .codemar_operaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_codemar_operaciones (ope_id,
    ope_tipo,ope_fecha_zarpe,ope_fecha_atraque,ope_situacion,ope_mision,
    ope_ejecucion,ope_identificador,ope_dependencia,ope_reutilizar,ope_distancia,
    ope_nacional,ope_sit,ope_reservados,desp_ope_id,desp_ope_tipo,desp_ope_fecha_zarpe,
    desp_ope_fecha_atraque,desp_ope_situacion,desp_ope_mision,desp_ope_ejecucion,
    desp_ope_identificador,desp_ope_dependencia,desp_ope_reutilizar,desp_ope_distancia,
    desp_ope_nacional,desp_ope_sit,desp_ope_reservados,usuario,accion,
    hora)  values (antes.ope_id ,antes.ope_tipo ,antes.ope_fecha_zarpe 
    ,antes.ope_fecha_atraque ,antes.ope_situacion ,antes.ope_mision ,
    antes.ope_ejecucion ,antes.ope_identificador ,antes.ope_dependencia 
    ,antes.ope_reutilizar ,antes.ope_distancia ,antes.ope_nacional ,antes.ope_sit 
    ,antes.ope_reservados ,'' ,'' ,NULL ,NULL ,'' ::lvarchar(2048) ,'' ::lvarchar(2048) 
    ,'' ::lvarchar(2048) ,'' ,'' ,'' ,'' ,'''' ,'' ,'' ,USER ,'D' ,CURRENT year 
    to minute ));

create trigger "informix".ins_codemar_tipos_embarcaciones insert 
    on "informix".codemar_tipos_embarcaciones referencing new 
    as luego
    for each row
        (
        insert into "informix".aud_codemar_tipos_embarcaciones 
    (tipo_id,tipo_desc,tipo_situacion,desp_tipo_id,desp_tipo_desc,desp_tipo_situacion,
    usuario,accion,hora)  values ('' ,'' ,'' ,luego.tipo_id ,luego.tipo_desc 
    ,luego.tipo_situacion ,USER ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_codemar_tipos_embarcaciones update 
    on "informix".codemar_tipos_embarcaciones referencing old 
    as antes new as luego
    for each row
        (
        insert into "informix".aud_codemar_tipos_embarcaciones 
    (tipo_id,tipo_desc,tipo_situacion,desp_tipo_id,desp_tipo_desc,desp_tipo_situacion,
    usuario,accion,hora)  values (antes.tipo_id ,antes.tipo_desc ,antes.tipo_situacion 
    ,luego.tipo_id ,luego.tipo_desc ,luego.tipo_situacion ,USER ,'U' ,
    CURRENT year to minute ));

create trigger "informix".del_codemar_tipos_embarcaciones delete 
    on "informix".codemar_tipos_embarcaciones referencing old 
    as antes
    for each row
        (
        insert into "informix".aud_codemar_tipos_embarcaciones 
    (tipo_id,tipo_desc,tipo_situacion,desp_tipo_id,desp_tipo_desc,desp_tipo_situacion,
    usuario,accion,hora)  values (antes.tipo_id ,antes.tipo_desc ,antes.tipo_situacion 
    ,'' ,'' ,'' ,USER ,'D' ,CURRENT year to minute ));

create trigger "informix".ins_codemar_embarcaciones insert on 
    "informix".codemar_embarcaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_codemar_embarcaciones (emb_id,
    emb_nombre,emb_tipo,emb_situacion,desp_emb_id,desp_emb_nombre,desp_emb_tipo,
    desp_emb_situacion,usuario,accion,hora)  values ('' ,'' ,'' ,'' ,luego.emb_id 
    ,luego.emb_nombre ,luego.emb_tipo ,luego.emb_situacion ,USER ,'I' 
    ,CURRENT year to minute ));

create trigger "informix".upd_codemar_embarcaciones update on 
    "informix".codemar_embarcaciones referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_codemar_embarcaciones (emb_id,
    emb_nombre,emb_tipo,emb_situacion,desp_emb_id,desp_emb_nombre,desp_emb_tipo,
    desp_emb_situacion,usuario,accion,hora)  values (antes.emb_id ,antes.emb_nombre 
    ,antes.emb_tipo ,antes.emb_situacion ,luego.emb_id ,luego.emb_nombre 
    ,luego.emb_tipo ,luego.emb_situacion ,USER ,'U' ,CURRENT year to minute 
    ));

create trigger "informix".del_codemar_embarcaciones delete on 
    "informix".codemar_embarcaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_codemar_embarcaciones (emb_id,
    emb_nombre,emb_tipo,emb_situacion,desp_emb_id,desp_emb_nombre,desp_emb_tipo,
    desp_emb_situacion,usuario,accion,hora)  values (antes.emb_id ,antes.emb_nombre 
    ,antes.emb_tipo ,antes.emb_situacion ,'' ,'' ,'' ,'' ,USER ,'D' ,CURRENT 
    year to minute ));

create trigger "informix".ins_codemar_informacion insert on "informix"
    .codemar_informacion referencing new as luego
    for each row
        (
        insert into "informix".aud_codemar_informacion (info_id,
    info_operacion,info_descripcion,info_situacion,desp_info_id,desp_info_operacion,
    desp_info_descripcion,desp_info_situacion,usuario,accion,hora)  values 
    ('' ,'' ,'' ::lvarchar(2048) ,'' ,luego.info_id ,luego.info_operacion 
    ,luego.info_descripcion ,luego.info_situacion ,USER ,'I' ,CURRENT 
    year to minute ));

create trigger "informix".upd_codemar_informacion update on "informix"
    .codemar_informacion referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_codemar_informacion (info_id,
    info_operacion,info_descripcion,info_situacion,desp_info_id,desp_info_operacion,
    desp_info_descripcion,desp_info_situacion,usuario,accion,hora)  values 
    (antes.info_id ,antes.info_operacion ,antes.info_descripcion ,antes.info_situacion 
    ,luego.info_id ,luego.info_operacion ,luego.info_descripcion ,luego.info_situacion 
    ,USER ,'U' ,CURRENT year to minute ));

create trigger "informix".del_codemar_informacion delete on "informix"
    .codemar_informacion referencing old as antes
    for each row
        (
        insert into "informix".aud_codemar_informacion (info_id,
    info_operacion,info_descripcion,info_situacion,desp_info_id,desp_info_operacion,
    desp_info_descripcion,desp_info_situacion,usuario,accion,hora)  values 
    (antes.info_id ,antes.info_operacion ,antes.info_descripcion ,antes.info_situacion 
    ,'' ,'' ,'' ::lvarchar(2048) ,'' ,USER ,'D' ,CURRENT year to minute ));
    

create trigger "informix".ins_codemar_asig_unidad insert on "informix"
    .codemar_asig_unidad referencing new as luego
    for each row
        (
        insert into "informix".aud_codemar_asig_unidad (asi_id,
    asi_operacion,asi_unidad,asi_sit,desp_asi_id,desp_asi_operacion,desp_asi_unidad,
    desp_asi_sit,usuario,accion,hora)  values ('' ,'' ,'' ,'' ,luego.asi_unidad 
    ,luego.asi_id ,luego.asi_operacion ,luego.asi_sit ,USER ,'I' ,CURRENT 
    year to minute ));

create trigger "informix".upd_codemar_asig_unidad update on "informix"
    .codemar_asig_unidad referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_codemar_asig_unidad (asi_id,
    asi_operacion,asi_unidad,asi_sit,desp_asi_id,desp_asi_operacion,desp_asi_unidad,
    desp_asi_sit,usuario,accion,hora)  values (antes.asi_id ,antes.asi_operacion 
    ,antes.asi_unidad ,antes.asi_sit ,luego.asi_id ,luego.asi_operacion 
    ,luego.asi_unidad ,luego.asi_sit ,USER ,'U' ,CURRENT year to minute 
    ));

create trigger "informix".del_codemar_asig_unidad delete on "informix"
    .codemar_asig_unidad referencing old as antes
    for each row
        (
        insert into "informix".aud_codemar_asig_unidad (asi_id,
    asi_operacion,asi_unidad,asi_sit,desp_asi_id,desp_asi_operacion,desp_asi_unidad,
    desp_asi_sit,usuario,accion,hora)  values (antes.asi_id ,antes.asi_operacion 
    ,antes.asi_unidad ,antes.asi_sit ,'' ,'' ,'' ,'' ,USER ,'D' ,CURRENT year 
    to minute ));

create trigger "informix".ins_codemar_medios_comunicacion insert 
    on "informix".codemar_medios_comunicacion referencing new 
    as luego
    for each row
        (
        insert into "informix".aud_codemar_medios_comunicacion 
    (medio_id,medio_desc,medio_situacion,desp_medio_id,desp_medio_desc,
    desp_medio_situacion,usuario,accion,hora)  values ('' ,'' ,'' ,luego.medio_id 
    ,luego.medio_desc ,luego.medio_situacion ,USER ,'I' ,CURRENT year 
    to minute ));

create trigger "informix".upd_codemar_medios_comunicacion update 
    on "informix".codemar_medios_comunicacion referencing old 
    as antes new as luego
    for each row
        (
        insert into "informix".aud_codemar_medios_comunicacion 
    (medio_id,medio_desc,medio_situacion,desp_medio_id,desp_medio_desc,
    desp_medio_situacion,usuario,accion,hora)  values (antes.medio_id 
    ,antes.medio_desc ,antes.medio_situacion ,luego.medio_id ,luego.medio_desc 
    ,luego.medio_situacion ,USER ,'U' ,CURRENT year to minute ));

create trigger "informix".del_codemar_medios_comunicacion delete 
    on "informix".codemar_medios_comunicacion referencing old 
    as antes
    for each row
        (
        insert into "informix".aud_codemar_medios_comunicacion 
    (medio_id,medio_desc,medio_situacion,desp_medio_id,desp_medio_desc,
    desp_medio_situacion,usuario,accion,hora)  values (antes.medio_id 
    ,antes.medio_desc ,antes.medio_situacion ,'' ,'' ,'' ,USER ,'D' ,CURRENT 
    year to minute ));

create trigger "informix".ins_codemar_motores insert on "informix"
    .codemar_motores referencing new as luego
    for each row
        (
        insert into "informix".aud_codemar_motores (mot_id,mot_serie,
    mot_embarcacion,mot_situacion,desp_mot_id,desp_mot_serie,desp_mot_embarcacion,
    desp_mot_situacion,usuario,accion,hora)  values ('' ,'' ,'' ,'' ,luego.mot_id 
    ,luego.mot_serie ,luego.mot_embarcacion ,luego.mot_situacion ,USER 
    ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_codemar_motores update on "informix"
    .codemar_motores referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_codemar_motores (mot_id,mot_serie,
    mot_embarcacion,mot_situacion,desp_mot_id,desp_mot_serie,desp_mot_embarcacion,
    desp_mot_situacion,usuario,accion,hora)  values (antes.mot_id ,antes.mot_serie 
    ,antes.mot_embarcacion ,antes.mot_situacion ,luego.mot_id ,luego.mot_serie 
    ,luego.mot_embarcacion ,luego.mot_situacion ,USER ,'U' ,CURRENT year 
    to minute ));

create trigger "informix".del_codemar_motores delete on "informix"
    .codemar_motores referencing old as antes
    for each row
        (
        insert into "informix".aud_codemar_motores (mot_id,mot_serie,
    mot_embarcacion,mot_situacion,desp_mot_id,desp_mot_serie,desp_mot_embarcacion,
    desp_mot_situacion,usuario,accion,hora)  values (antes.mot_id ,antes.mot_serie 
    ,antes.mot_embarcacion ,antes.mot_situacion ,'' ,'' ,'' ,'' ,USER ,'D'
     ,CURRENT year to minute ));

create trigger "informix".ins_codemar_novedades insert on "informix"
    .codemar_novedades referencing new as luego
    for each row
        (
        insert into "informix".aud_codemar_novedades (nov_id,
    nov_operacion,nov_fechahora,nov_novedad,nov_situacion,desp_nov_id,
    desp_nov_operacion,desp_nov_fechahora,desp_nov_novedad,desp_nov_situacion,
    usuario,accion,hora)  values ('' ,'' ,'' ,'' ::lvarchar(2048) ,'' ,luego.nov_id 
    ,luego.nov_operacion ,luego.nov_fechahora ,luego.nov_novedad ,luego.nov_situacion 
    ,USER ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_codemar_novedades update on "informix"
    .codemar_novedades referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_codemar_novedades (nov_id,
    nov_operacion,nov_fechahora,nov_novedad,nov_situacion,desp_nov_id,
    desp_nov_operacion,desp_nov_fechahora,desp_nov_novedad,desp_nov_situacion,
    usuario,accion,hora)  values (antes.nov_id ,antes.nov_operacion ,
    antes.nov_fechahora ,antes.nov_novedad ,antes.nov_situacion ,luego.nov_id 
    ,luego.nov_operacion ,luego.nov_fechahora ,luego.nov_novedad ,luego.nov_situacion 
    ,USER ,'U' ,CURRENT year to minute ));

create trigger "informix".del_codemar_novedades delete on "informix"
    .codemar_novedades referencing old as antes
    for each row
        (
        insert into "informix".aud_codemar_novedades (nov_id,
    nov_operacion,nov_fechahora,nov_novedad,nov_situacion,desp_nov_id,
    desp_nov_operacion,desp_nov_fechahora,desp_nov_novedad,desp_nov_situacion,
    usuario,accion,hora)  values (antes.nov_id ,antes.nov_operacion ,
    antes.nov_fechahora ,antes.nov_novedad ,antes.nov_situacion ,'' ,''
     ,'' ,'' ::lvarchar(2048) ,'' ,USER ,'D' ,CURRENT year to minute ));

create trigger "informix".ins_codemar_receptor_comunicacion insert 
    on "informix".codemar_receptor_comunicacion referencing new 
    as luego
    for each row
        (
        insert into "informix".aud_codemar_receptor_comunicacion 
    (rec_id,rec_desc,rec_situacion,desp_rec_id,desp_rec_desc,desp_rec_situacion,
    usuario,accion,hora)  values ('' ,'' ,'' ,luego.rec_id ,luego.rec_desc 
    ,luego.rec_situacion ,USER ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_codemar_receptor_comunicacion update 
    on "informix".codemar_receptor_comunicacion referencing old 
    as antes new as luego
    for each row
        (
        insert into "informix".aud_codemar_receptor_comunicacion 
    (rec_id,rec_desc,rec_situacion,desp_rec_id,desp_rec_desc,desp_rec_situacion,
    usuario,accion,hora)  values (antes.rec_id ,antes.rec_desc ,antes.rec_situacion 
    ,luego.rec_id ,luego.rec_desc ,luego.rec_situacion ,USER ,'U' ,CURRENT 
    year to minute ));

create trigger "informix".del_codemar_receptor_comunicacion delete 
    on "informix".codemar_receptor_comunicacion referencing old 
    as antes
    for each row
        (
        insert into "informix".aud_codemar_receptor_comunicacion 
    (rec_id,rec_desc,rec_situacion,desp_rec_id,desp_rec_desc,desp_rec_situacion,
    usuario,accion,hora)  values (antes.rec_id ,antes.rec_desc ,antes.rec_situacion 
    ,'' ,'' ,'' ,USER ,'D' ,CURRENT year to minute ));

create trigger "informix".ins_codemar_recomendaciones insert 
    on "informix".codemar_recomendaciones referencing new as luego
    
    for each row
        (
        insert into "informix".aud_codemar_recomendaciones (rec_id,
    rec_operacion,rec_recomendacion,rec_situacion,desp_rec_id,desp_rec_operacion,
    desp_rec_recomendacion,desp_rec_situacion,usuario,accion,hora)  values 
    ('' ,'' ,'' ::lvarchar(2048) ,'' ,luego.rec_id ,luego.rec_operacion ,
    luego.rec_recomendacion ,luego.rec_situacion ,USER ,'I' ,CURRENT year 
    to minute ));

create trigger "informix".upd_codemar_recomendaciones update 
    on "informix".codemar_recomendaciones referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_codemar_recomendaciones (rec_id,
    rec_operacion,rec_recomendacion,rec_situacion,desp_rec_id,desp_rec_operacion,
    desp_rec_recomendacion,desp_rec_situacion,usuario,accion,hora)  values 
    (antes.rec_id ,antes.rec_operacion ,antes.rec_recomendacion ,antes.rec_situacion 
    ,luego.rec_id ,luego.rec_operacion ,luego.rec_recomendacion ,luego.rec_situacion 
    ,USER ,'U' ,CURRENT year to minute ));

create trigger "informix".del_codemar_recomendaciones delete 
    on "informix".codemar_recomendaciones referencing old as antes
    
    for each row
        (
        insert into "informix".aud_codemar_recomendaciones (rec_id,
    rec_operacion,rec_recomendacion,rec_situacion,desp_rec_id,desp_rec_operacion,
    desp_rec_recomendacion,desp_rec_situacion,usuario,accion,hora)  values 
    (antes.rec_id ,antes.rec_operacion ,antes.rec_recomendacion ,antes.rec_situacion 
    ,'' ,'' ,'' ::lvarchar(2048) ,'' ,USER ,'D' ,CURRENT year to minute ));
    

create trigger "informix".ins_codemar_unidades_medida insert 
    on "informix".codemar_unidades_medida referencing new as luego
    
    for each row
        (
        insert into "informix".aud_codemar_unidades_medida (uni_id,
    uni_desc,uni_situacion,desp_uni_id,desp_uni_desc,desp_uni_situacion,
    usuario,accion,hora)  values ('' ,'' ,'' ,luego.uni_id ,luego.uni_desc 
    ,luego.uni_situacion ,USER ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_codemar_unidades_medida update 
    on "informix".codemar_unidades_medida referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_codemar_unidades_medida (uni_id,
    uni_desc,uni_situacion,desp_uni_id,desp_uni_desc,desp_uni_situacion,
    usuario,accion,hora)  values (antes.uni_id ,antes.uni_desc ,antes.uni_situacion 
    ,luego.uni_id ,luego.uni_desc ,luego.uni_situacion ,USER ,'U' ,CURRENT 
    year to minute ));

create trigger "informix".del_codemar_unidades_medida delete 
    on "informix".codemar_unidades_medida referencing old as antes
    
    for each row
        (
        insert into "informix".aud_codemar_unidades_medida (uni_id,
    uni_desc,uni_situacion,desp_uni_id,desp_uni_desc,desp_uni_situacion,
    usuario,accion,hora)  values (antes.uni_id ,antes.uni_desc ,antes.uni_situacion 
    ,'' ,'' ,'' ,USER ,'D' ,CURRENT year to minute ));

create trigger "informix".ins_codemar_trabajo_motores insert 
    on "informix".codemar_trabajo_motores referencing new as luego
    
    for each row
        (
        insert into "informix".aud_codemar_trabajo_motores (tra_id,
    tra_operacion,tra_motor,tra_horas,tra_rpm,tra_fallas,tra_observacion,
    tra_situacion,desp_tra_id,desp_tra_operacion,desp_tra_motor,desp_tra_horas,
    desp_tra_rpm,desp_tra_fallas,desp_tra_observacion,desp_tra_situacion,
    usuario,accion,hora)  values ('' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.tra_id 
    ,luego.tra_operacion ,luego.tra_motor ,luego.tra_horas ,luego.tra_rpm 
    ,luego.tra_fallas ,luego.tra_observacion ,luego.tra_situacion ,USER 
    ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_codemar_trabajo_motores update 
    on "informix".codemar_trabajo_motores referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_codemar_trabajo_motores (tra_id,
    tra_operacion,tra_motor,tra_horas,tra_rpm,tra_fallas,tra_observacion,
    tra_situacion,desp_tra_id,desp_tra_operacion,desp_tra_motor,desp_tra_horas,
    desp_tra_rpm,desp_tra_fallas,desp_tra_observacion,desp_tra_situacion,
    usuario,accion,hora)  values (antes.tra_id ,antes.tra_operacion ,
    antes.tra_motor ,antes.tra_horas ,antes.tra_rpm ,antes.tra_fallas 
    ,antes.tra_observacion ,antes.tra_situacion ,luego.tra_id ,luego.tra_operacion 
    ,luego.tra_motor ,luego.tra_horas ,luego.tra_rpm ,luego.tra_fallas 
    ,luego.tra_observacion ,luego.tra_situacion ,USER ,'U' ,CURRENT year 
    to minute ));

create trigger "informix".del_codemar_trabajo_motores delete 
    on "informix".codemar_trabajo_motores referencing old as antes
    
    for each row
        (
        insert into "informix".aud_codemar_trabajo_motores (tra_id,
    tra_operacion,tra_motor,tra_horas,tra_rpm,tra_fallas,tra_observacion,
    tra_situacion,desp_tra_id,desp_tra_operacion,desp_tra_motor,desp_tra_horas,
    desp_tra_rpm,desp_tra_fallas,desp_tra_observacion,desp_tra_situacion,
    usuario,accion,hora)  values (antes.tra_id ,antes.tra_operacion ,
    antes.tra_motor ,antes.tra_horas ,antes.tra_rpm ,antes.tra_fallas 
    ,antes.tra_observacion ,antes.tra_situacion ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,USER ,'D' ,CURRENT year to minute ));

create trigger "informix".ins_codemar_clasificacion insert on 
    "informix".codemar_clasificacion referencing new as luego
    for each row
        (
        insert into "informix".aud_codemar_clasificacion (id,
    desc,situacion,desp_id,desp_desc,desp_situacion,usuario,accion,hora) 
     values ('' ,'' ,'' ,luego.id ,luego.desc ,luego.situacion ,USER ,'I'
     ,CURRENT year to minute ));

create trigger "informix".upd_codemar_clasificacion update on 
    "informix".codemar_clasificacion referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_codemar_clasificacion (id,
    desc,situacion,desp_id,desp_desc,desp_situacion,usuario,accion,hora) 
     values (antes.id ,antes.desc ,antes.situacion ,luego.id ,luego.desc 
    ,luego.situacion ,USER ,'U' ,CURRENT year to minute ));

create trigger "informix".del_codemar_clasificacion delete on 
    "informix".codemar_clasificacion referencing old as antes
    for each row
        (
        insert into "informix".aud_codemar_clasificacion (id,
    desc,situacion,desp_id,desp_desc,desp_situacion,usuario,accion,hora) 
     values (antes.id ,antes.desc ,antes.situacion ,'' ,'' ,'' ,USER ,'D'
     ,CURRENT year to minute ));

create trigger "informix".ins_codemar_comunicaciones insert on 
    "informix".codemar_comunicaciones referencing new as luego
    
    for each row
        (
        insert into "informix".aud_codemar_comunicaciones (com_id,
    com_operacion,com_medio,com_receptor,com_calidad,com_observacion,
    com_situacion,desp_com_id,desp_com_operacion,desp_com_medio,desp_com_receptor,
    desp_com_calidad,desp_com_observacion,desp_com_situacion,usuario,
    accion,hora)  values ('' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.com_id ,luego.com_operacion 
    ,luego.com_medio ,luego.com_receptor ,luego.com_calidad ,luego.com_observacion 
    ,luego.com_situacion ,USER ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_codemar_comunicaciones update on 
    "informix".codemar_comunicaciones referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_codemar_comunicaciones (com_id,
    com_operacion,com_medio,com_receptor,com_calidad,com_observacion,
    com_situacion,desp_com_id,desp_com_operacion,desp_com_medio,desp_com_receptor,
    desp_com_calidad,desp_com_observacion,desp_com_situacion,usuario,
    accion,hora)  values (antes.com_id ,antes.com_operacion ,antes.com_medio 
    ,antes.com_receptor ,antes.com_calidad ,antes.com_observacion ,antes.com_situacion 
    ,luego.com_id ,luego.com_operacion ,luego.com_medio ,luego.com_receptor 
    ,luego.com_calidad ,luego.com_observacion ,luego.com_situacion ,USER 
    ,'U' ,CURRENT year to minute ));

create trigger "informix".del_codemar_comunicaciones delete on 
    "informix".codemar_comunicaciones referencing old as antes
    
    for each row
        (
        insert into "informix".aud_codemar_comunicaciones (com_id,
    com_operacion,com_medio,com_receptor,com_calidad,com_observacion,
    com_situacion,desp_com_id,desp_com_operacion,desp_com_medio,desp_com_receptor,
    desp_com_calidad,desp_com_observacion,desp_com_situacion,usuario,
    accion,hora)  values (antes.com_id ,antes.com_operacion ,antes.com_medio 
    ,antes.com_receptor ,antes.com_calidad ,antes.com_observacion ,antes.com_situacion 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,USER ,'D' ,CURRENT year to minute ));

create trigger "informix".ins_codemar_derrota insert on "informix"
    .codemar_derrota referencing new as luego
    for each row
        (
        insert into "informix".aud_codemar_derrota (der_id,der_ope,
    der_latitud,der_longitud,der_fecha,der_situacion,desp_der_id,desp_der_ope,
    desp_der_latitud,desp_der_longitud,desp_der_fecha,desp_der_situacion,
    usuario,accion,hora)  values ('' ,'' ,'' ,'' ,'' ,'' ,luego.der_latitud 
    ,luego.der_longitud ,luego.der_fecha ,luego.der_situacion ,luego.der_id 
    ,luego.der_ope ,USER ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_codemar_derrota update on "informix"
    .codemar_derrota referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_codemar_derrota (der_id,der_ope,
    der_latitud,der_longitud,der_fecha,der_situacion,desp_der_id,desp_der_ope,
    desp_der_latitud,desp_der_longitud,desp_der_fecha,desp_der_situacion,
    usuario,accion,hora)  values (antes.der_id ,antes.der_ope ,antes.der_latitud 
    ,antes.der_longitud ,antes.der_fecha ,antes.der_situacion ,luego.der_id 
    ,luego.der_ope ,luego.der_latitud ,luego.der_longitud ,luego.der_fecha 
    ,luego.der_situacion ,USER ,'U' ,CURRENT year to minute ));

create trigger "informix".del_codemar_derrota delete on "informix"
    .codemar_derrota referencing old as antes
    for each row
        (
        insert into "informix".aud_codemar_derrota (der_id,der_ope,
    der_latitud,der_longitud,der_fecha,der_situacion,desp_der_id,desp_der_ope,
    desp_der_latitud,desp_der_longitud,desp_der_fecha,desp_der_situacion,
    usuario,accion,hora)  values (antes.der_id ,antes.der_ope ,antes.der_latitud 
    ,antes.der_longitud ,antes.der_fecha ,antes.der_situacion ,'' ,'' ,
    '' ,'' ,'' ,'' ,USER ,'D' ,CURRENT year to minute ));

create trigger "informix".ins_codemar_insumos_operaciones insert 
    on "informix".codemar_insumos_operaciones referencing new 
    as luego
    for each row
        (
        insert into "informix".aud_codemar_insumos_operaciones 
    (insumo_id,insumo_desc,insumo_unidad,insumo_color,insumo_situacion,
    desp_insumo_id,desp_insumo_desc,desp_insumo_unidad,desp_insumo_color,
    desp_insumo_situacion,usuario,accion,hora)  values ('' ,'' ,'' ,'#000000'
     ,'' ,luego.insumo_id ,luego.insumo_desc ,luego.insumo_unidad ,luego.insumo_color 
    ,luego.insumo_situacion ,USER ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_codemar_insumos_operaciones update 
    on "informix".codemar_insumos_operaciones referencing old 
    as antes new as luego
    for each row
        (
        insert into "informix".aud_codemar_insumos_operaciones 
    (insumo_id,insumo_desc,insumo_unidad,insumo_color,insumo_situacion,
    desp_insumo_id,desp_insumo_desc,desp_insumo_unidad,desp_insumo_color,
    desp_insumo_situacion,usuario,accion,hora)  values (antes.insumo_id 
    ,antes.insumo_desc ,antes.insumo_unidad ,antes.insumo_color ,antes.insumo_situacion 
    ,luego.insumo_id ,luego.insumo_desc ,luego.insumo_unidad ,luego.insumo_color 
    ,luego.insumo_situacion ,USER ,'U' ,CURRENT year to minute ));

create trigger "informix".del_codemar_insumos_operaciones delete 
    on "informix".codemar_insumos_operaciones referencing old 
    as antes
    for each row
        (
        insert into "informix".aud_codemar_insumos_operaciones 
    (insumo_id,insumo_desc,insumo_unidad,insumo_color,insumo_situacion,
    desp_insumo_id,desp_insumo_desc,desp_insumo_unidad,desp_insumo_color,
    desp_insumo_situacion,usuario,accion,hora)  values (antes.insumo_id 
    ,antes.insumo_desc ,antes.insumo_unidad ,antes.insumo_color ,antes.insumo_situacion 
    ,'' ,'' ,'' ,'#000000' ,'' ,USER ,'D' ,CURRENT year to minute ));

create trigger "informix".ins_codemar_internacionales insert 
    on "informix".codemar_internacionales referencing new as luego
    
    for each row
        (
        insert into "informix".aud_codemar_internacionales (int_ope,
    int_pais,int_documento,int_situacion,desp_int_ope,desp_int_pais,desp_int_documento,
    desp_int_situacion,usuario,accion,hora)  values ('' ,'' ,'' ::lvarchar(2048) 
    ,'' ,luego.int_ope ,luego.int_pais ,luego.int_documento ,luego.int_situacion 
    ,USER ,'I' ,CURRENT year to minute ));

create trigger "informix".upd_codemar_internacionales update 
    on "informix".codemar_internacionales referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_codemar_internacionales (int_ope,
    int_pais,int_documento,int_situacion,desp_int_ope,desp_int_pais,desp_int_documento,
    desp_int_situacion,usuario,accion,hora)  values (antes.int_ope ,antes.int_pais 
    ,antes.int_documento ,antes.int_situacion ,luego.int_ope ,luego.int_pais 
    ,luego.int_documento ,luego.int_situacion ,USER ,'U' ,CURRENT year 
    to minute ));

create trigger "informix".del_codemar_internacionales delete 
    on "informix".codemar_internacionales referencing old as antes
    
    for each row
        (
        insert into "informix".aud_codemar_internacionales (int_ope,
    int_pais,int_documento,int_situacion,desp_int_ope,desp_int_pais,desp_int_documento,
    desp_int_situacion,usuario,accion,hora)  values (antes.int_ope ,antes.int_pais 
    ,antes.int_documento ,antes.int_situacion ,'' ,'' ,'' ::lvarchar(2048) 
    ,'' ,USER ,'D' ,CURRENT year to minute ));

create trigger "informix".ins_arco_historial insert on "informix"
    .arco_historial referencing new as luego
    for each row
        (
        insert into "informix".aud_arco_historial (hist_id,hist_catalogo,
    hist_grado,hist_arma,hist_nom_certificado,hist_codigo,hist_observaciones,
    hist_fecha_ascenso,hist_fecha_inicio,hist_fecha_fin,hist_cap_profesional,
    hist_des_profesional,hist_conducta_militar,hist_aptitud_fisica,hist_per_biofisico,
    hist_creditos,hist_ficha_medica,hist_total_nota,hist_notacurso,hist_notades,
    hist_notapafe,hist_demeritos,hist_diagnostico,hist_dictamen,hist_situacion,
    desp_hist_id,desp_hist_catalogo,desp_hist_grado,desp_hist_arma,desp_hist_nom_certificado,
    desp_hist_codigo,desp_hist_observaciones,desp_hist_fecha_ascenso,
    desp_hist_fecha_inicio,desp_hist_fecha_fin,desp_hist_cap_profesional,
    desp_hist_des_profesional,desp_hist_conducta_militar,desp_hist_aptitud_fisica,
    desp_hist_per_biofisico,desp_hist_creditos,desp_hist_ficha_medica,
    desp_hist_total_nota,desp_hist_notacurso,desp_hist_notades,desp_hist_notapafe,
    desp_hist_demeritos,desp_hist_diagnostico,desp_hist_dictamen,desp_hist_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2048) 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2048) 
    ,'' ,luego.hist_id ,luego.hist_catalogo ,luego.hist_grado ,luego.hist_arma 
    ,luego.hist_nom_certificado ,luego.hist_codigo ,luego.hist_observaciones 
    ,luego.hist_fecha_ascenso ,luego.hist_fecha_inicio ,luego.hist_fecha_fin 
    ,luego.hist_cap_profesional ,luego.hist_des_profesional ,luego.hist_conducta_militar 
    ,luego.hist_aptitud_fisica ,luego.hist_per_biofisico ,luego.hist_creditos 
    ,luego.hist_ficha_medica ,luego.hist_total_nota ,luego.hist_notacurso 
    ,luego.hist_notades ,luego.hist_notapafe ,luego.hist_demeritos ,luego.hist_diagnostico 
    ,luego.hist_dictamen ,luego.hist_situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_arco_historial delete on "informix"
    .arco_historial referencing old as antes
    for each row
        (
        insert into "informix".aud_arco_historial (hist_id,hist_catalogo,
    hist_grado,hist_arma,hist_nom_certificado,hist_codigo,hist_observaciones,
    hist_fecha_ascenso,hist_fecha_inicio,hist_fecha_fin,hist_cap_profesional,
    hist_des_profesional,hist_conducta_militar,hist_aptitud_fisica,hist_per_biofisico,
    hist_creditos,hist_ficha_medica,hist_total_nota,hist_notacurso,hist_notades,
    hist_notapafe,hist_demeritos,hist_diagnostico,hist_dictamen,hist_situacion,
    desp_hist_id,desp_hist_catalogo,desp_hist_grado,desp_hist_arma,desp_hist_nom_certificado,
    desp_hist_codigo,desp_hist_observaciones,desp_hist_fecha_ascenso,
    desp_hist_fecha_inicio,desp_hist_fecha_fin,desp_hist_cap_profesional,
    desp_hist_des_profesional,desp_hist_conducta_militar,desp_hist_aptitud_fisica,
    desp_hist_per_biofisico,desp_hist_creditos,desp_hist_ficha_medica,
    desp_hist_total_nota,desp_hist_notacurso,desp_hist_notades,desp_hist_notapafe,
    desp_hist_demeritos,desp_hist_diagnostico,desp_hist_dictamen,desp_hist_situacion,
    accion,usuario,hora)  values (antes.hist_id ,antes.hist_catalogo 
    ,antes.hist_grado ,antes.hist_arma ,antes.hist_nom_certificado ,antes.hist_codigo 
    ,antes.hist_observaciones ,antes.hist_fecha_ascenso ,antes.hist_fecha_inicio 
    ,antes.hist_fecha_fin ,antes.hist_cap_profesional ,antes.hist_des_profesional 
    ,antes.hist_conducta_militar ,antes.hist_aptitud_fisica ,antes.hist_per_biofisico 
    ,antes.hist_creditos ,antes.hist_ficha_medica ,antes.hist_total_nota 
    ,antes.hist_notacurso ,antes.hist_notades ,antes.hist_notapafe ,antes.hist_demeritos 
    ,antes.hist_diagnostico ,antes.hist_dictamen ,antes.hist_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2048) ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2048) ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_arco_historial update on "informix"
    .arco_historial referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_arco_historial (hist_id,hist_catalogo,
    hist_grado,hist_arma,hist_nom_certificado,hist_codigo,hist_observaciones,
    hist_fecha_ascenso,hist_fecha_inicio,hist_fecha_fin,hist_cap_profesional,
    hist_des_profesional,hist_conducta_militar,hist_aptitud_fisica,hist_per_biofisico,
    hist_creditos,hist_ficha_medica,hist_total_nota,hist_notacurso,hist_notades,
    hist_notapafe,hist_demeritos,hist_diagnostico,hist_dictamen,hist_situacion,
    desp_hist_id,desp_hist_catalogo,desp_hist_grado,desp_hist_arma,desp_hist_nom_certificado,
    desp_hist_codigo,desp_hist_observaciones,desp_hist_fecha_ascenso,
    desp_hist_fecha_inicio,desp_hist_fecha_fin,desp_hist_cap_profesional,
    desp_hist_des_profesional,desp_hist_conducta_militar,desp_hist_aptitud_fisica,
    desp_hist_per_biofisico,desp_hist_creditos,desp_hist_ficha_medica,
    desp_hist_total_nota,desp_hist_notacurso,desp_hist_notades,desp_hist_notapafe,
    desp_hist_demeritos,desp_hist_diagnostico,desp_hist_dictamen,desp_hist_situacion,
    accion,usuario,hora)  values (antes.hist_id ,antes.hist_catalogo 
    ,antes.hist_grado ,antes.hist_arma ,antes.hist_nom_certificado ,antes.hist_codigo 
    ,antes.hist_observaciones ,antes.hist_fecha_ascenso ,antes.hist_fecha_inicio 
    ,antes.hist_fecha_fin ,antes.hist_cap_profesional ,antes.hist_des_profesional 
    ,antes.hist_conducta_militar ,antes.hist_aptitud_fisica ,antes.hist_per_biofisico 
    ,antes.hist_creditos ,antes.hist_ficha_medica ,antes.hist_total_nota 
    ,antes.hist_notacurso ,antes.hist_notades ,antes.hist_notapafe ,antes.hist_demeritos 
    ,antes.hist_diagnostico ,antes.hist_dictamen ,antes.hist_situacion 
    ,luego.hist_id ,luego.hist_catalogo ,luego.hist_grado ,luego.hist_arma 
    ,luego.hist_nom_certificado ,luego.hist_codigo ,luego.hist_observaciones 
    ,luego.hist_fecha_ascenso ,luego.hist_fecha_inicio ,luego.hist_fecha_fin 
    ,luego.hist_cap_profesional ,luego.hist_des_profesional ,luego.hist_conducta_militar 
    ,luego.hist_aptitud_fisica ,luego.hist_per_biofisico ,luego.hist_creditos 
    ,luego.hist_ficha_medica ,luego.hist_total_nota ,luego.hist_notacurso 
    ,luego.hist_notades ,luego.hist_notapafe ,luego.hist_demeritos ,luego.hist_diagnostico 
    ,luego.hist_dictamen ,luego.hist_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_validacion_pagadores insert on 
    "informix".validacion_pagadores referencing new as luego
    for each row
        (
        insert into "informix".aud_validacion_pagadores (vali_catalogo,
    vali_situacion,desp_vali_catalogo,desp_vali_situacion,accion,usuario,
    hora)  values (NULL ,'' ,luego.vali_catalogo ,luego.vali_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_validacion_pagadores delete on 
    "informix".validacion_pagadores referencing old as antes
    for each row
        (
        insert into "informix".aud_validacion_pagadores (vali_catalogo,
    vali_situacion,desp_vali_catalogo,desp_vali_situacion,accion,usuario,
    hora)  values (antes.vali_catalogo ,antes.vali_situacion ,NULL ,''
     ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_validacion_pagadores update on 
    "informix".validacion_pagadores referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_validacion_pagadores (vali_catalogo,
    vali_situacion,desp_vali_catalogo,desp_vali_situacion,accion,usuario,
    hora)  values (antes.vali_catalogo ,antes.vali_situacion ,luego.vali_catalogo 
    ,luego.vali_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_detalle_validaciones insert on 
    "informix".detalle_validaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_detalle_validaciones (det_id,
    det_cat,det_depen,det_tipo,det_fecha,desp_det_id,desp_det_cat,desp_det_depen,
    desp_det_tipo,desp_det_fecha,accion,usuario,hora)  values (NULL ,
    '' ,'' ,'' ,'' ,luego.det_id ,luego.det_cat ,luego.det_depen ,luego.det_tipo 
    ,luego.det_fecha ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_detalle_validaciones delete on 
    "informix".detalle_validaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_detalle_validaciones (det_id,
    det_cat,det_depen,det_tipo,det_fecha,desp_det_id,desp_det_cat,desp_det_depen,
    desp_det_tipo,desp_det_fecha,accion,usuario,hora)  values (antes.det_id 
    ,antes.det_cat ,antes.det_depen ,antes.det_tipo ,antes.det_fecha 
    ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_detalle_validaciones update on 
    "informix".detalle_validaciones referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_detalle_validaciones (det_id,
    det_cat,det_depen,det_tipo,det_fecha,desp_det_id,desp_det_cat,desp_det_depen,
    desp_det_tipo,desp_det_fecha,accion,usuario,hora)  values (antes.det_id 
    ,antes.det_cat ,antes.det_depen ,antes.det_tipo ,antes.det_fecha 
    ,luego.det_id ,luego.det_cat ,luego.det_depen ,luego.det_tipo ,luego.det_fecha 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_est_destinos insert on "informix"
    .est_destinos referencing new as luego
    for each row
        (
        insert into "informix".aud_est_destinos (destino_id,destino_desc,
    destino_sit,desp_destino_id,desp_destino_desc,desp_destino_sit,accion,
    usuario,hora)  values (NULL ,'' ,'' ,luego.destino_id ,luego.destino_desc 
    ,luego.destino_sit ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_est_destinos delete on "informix"
    .est_destinos referencing old as antes
    for each row
        (
        insert into "informix".aud_est_destinos (destino_id,destino_desc,
    destino_sit,desp_destino_id,desp_destino_desc,desp_destino_sit,accion,
    usuario,hora)  values (antes.destino_id ,antes.destino_desc ,antes.destino_sit 
    ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_est_destinos update on "informix"
    .est_destinos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_est_destinos (destino_id,destino_desc,
    destino_sit,desp_destino_id,desp_destino_desc,desp_destino_sit,accion,
    usuario,hora)  values (antes.destino_id ,antes.destino_desc ,antes.destino_sit 
    ,luego.destino_id ,luego.destino_desc ,luego.destino_sit ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_est_regiones insert on "informix"
    .est_regiones referencing new as luego
    for each row
        (
        insert into "informix".aud_est_regiones (est_reg_id,est_reg_desc,
    est_reg_situacion,desp_est_reg_id,desp_est_reg_desc,desp_est_reg_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.est_reg_id ,luego.est_reg_desc 
    ,luego.est_reg_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_est_regiones delete on "informix"
    .est_regiones referencing old as antes
    for each row
        (
        insert into "informix".aud_est_regiones (est_reg_id,est_reg_desc,
    est_reg_situacion,desp_est_reg_id,desp_est_reg_desc,desp_est_reg_situacion,
    accion,usuario,hora)  values (antes.est_reg_id ,antes.est_reg_desc 
    ,antes.est_reg_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_est_regiones update on "informix"
    .est_regiones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_est_regiones (est_reg_id,est_reg_desc,
    est_reg_situacion,desp_est_reg_id,desp_est_reg_desc,desp_est_reg_situacion,
    accion,usuario,hora)  values (antes.est_reg_id ,antes.est_reg_desc 
    ,antes.est_reg_situacion ,luego.est_reg_id ,luego.est_reg_desc ,luego.est_reg_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_est_fuerza insert on "informix".est_fuerza 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_est_fuerza (ef_id,ef_dep,ef_unidad,
    ef_fecha,ef_vacan_toe,ef_disp_toe,ef_usuario,ef_region,ef_situacion,
    desp_ef_id,desp_ef_dep,desp_ef_unidad,desp_ef_fecha,desp_ef_vacan_toe,
    desp_ef_disp_toe,desp_ef_usuario,desp_ef_region,desp_ef_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.ef_id 
    ,luego.ef_dep ,luego.ef_unidad ,luego.ef_fecha ,luego.ef_vacan_toe 
    ,luego.ef_disp_toe ,luego.ef_usuario ,luego.ef_region ,luego.ef_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_est_fuerza delete on "informix".est_fuerza 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_est_fuerza (ef_id,ef_dep,ef_unidad,
    ef_fecha,ef_vacan_toe,ef_disp_toe,ef_usuario,ef_region,ef_situacion,
    desp_ef_id,desp_ef_dep,desp_ef_unidad,desp_ef_fecha,desp_ef_vacan_toe,
    desp_ef_disp_toe,desp_ef_usuario,desp_ef_region,desp_ef_situacion,
    accion,usuario,hora)  values (antes.ef_id ,antes.ef_dep ,antes.ef_unidad 
    ,antes.ef_fecha ,antes.ef_vacan_toe ,antes.ef_disp_toe ,antes.ef_usuario 
    ,antes.ef_region ,antes.ef_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,
    '' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_est_fuerza update on "informix".est_fuerza 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_est_fuerza (ef_id,ef_dep,ef_unidad,
    ef_fecha,ef_vacan_toe,ef_disp_toe,ef_usuario,ef_region,ef_situacion,
    desp_ef_id,desp_ef_dep,desp_ef_unidad,desp_ef_fecha,desp_ef_vacan_toe,
    desp_ef_disp_toe,desp_ef_usuario,desp_ef_region,desp_ef_situacion,
    accion,usuario,hora)  values (antes.ef_id ,antes.ef_dep ,antes.ef_unidad 
    ,antes.ef_fecha ,antes.ef_vacan_toe ,antes.ef_disp_toe ,antes.ef_usuario 
    ,antes.ef_region ,antes.ef_situacion ,luego.ef_id ,luego.ef_dep ,
    luego.ef_unidad ,luego.ef_fecha ,luego.ef_vacan_toe ,luego.ef_disp_toe 
    ,luego.ef_usuario ,luego.ef_region ,luego.ef_situacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".ins_est_fuerza_detalle insert on "informix"
    .est_fuerza_detalle referencing new as luego
    for each row
        (
        insert into "informix".aud_est_fuerza_detalle (ef_det_id,
    ef_cod_ef,ef_destino,ef_gd,ef_gb,ef_ofsup_cr,ef_ofsup_rsvas,ef_ofsup_as,
    ef_ofsub_cr,ef_ofsub_rsvas,ef_ofsub_as,ef_esptas,ef_sgtosmay,ef_tropa,
    ef_tropa_a,ef_tropa_n,ef_cadetes,ef_contrato,ef_total_destinos,ef_det_situacion,
    desp_ef_det_id,desp_ef_cod_ef,desp_ef_destino,desp_ef_gd,desp_ef_gb,
    desp_ef_ofsup_cr,desp_ef_ofsup_rsvas,desp_ef_ofsup_as,desp_ef_ofsub_cr,
    desp_ef_ofsub_rsvas,desp_ef_ofsub_as,desp_ef_esptas,desp_ef_sgtosmay,
    desp_ef_tropa,desp_ef_tropa_a,desp_ef_tropa_n,desp_ef_cadetes,desp_ef_contrato,
    desp_ef_total_destinos,desp_ef_det_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,luego.ef_det_id ,luego.ef_cod_ef ,luego.ef_destino ,luego.ef_gd 
    ,luego.ef_gb ,luego.ef_ofsup_cr ,luego.ef_ofsup_rsvas ,luego.ef_ofsup_as 
    ,luego.ef_ofsub_cr ,luego.ef_ofsub_rsvas ,luego.ef_ofsub_as ,luego.ef_esptas 
    ,luego.ef_sgtosmay ,luego.ef_tropa ,luego.ef_tropa_a ,luego.ef_tropa_n 
    ,luego.ef_cadetes ,luego.ef_contrato ,luego.ef_total_destinos ,luego.ef_det_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_est_fuerza_detalle delete on "informix"
    .est_fuerza_detalle referencing old as antes
    for each row
        (
        insert into "informix".aud_est_fuerza_detalle (ef_det_id,
    ef_cod_ef,ef_destino,ef_gd,ef_gb,ef_ofsup_cr,ef_ofsup_rsvas,ef_ofsup_as,
    ef_ofsub_cr,ef_ofsub_rsvas,ef_ofsub_as,ef_esptas,ef_sgtosmay,ef_tropa,
    ef_tropa_a,ef_tropa_n,ef_cadetes,ef_contrato,ef_total_destinos,ef_det_situacion,
    desp_ef_det_id,desp_ef_cod_ef,desp_ef_destino,desp_ef_gd,desp_ef_gb,
    desp_ef_ofsup_cr,desp_ef_ofsup_rsvas,desp_ef_ofsup_as,desp_ef_ofsub_cr,
    desp_ef_ofsub_rsvas,desp_ef_ofsub_as,desp_ef_esptas,desp_ef_sgtosmay,
    desp_ef_tropa,desp_ef_tropa_a,desp_ef_tropa_n,desp_ef_cadetes,desp_ef_contrato,
    desp_ef_total_destinos,desp_ef_det_situacion,accion,usuario,hora) 
     values (antes.ef_det_id ,antes.ef_cod_ef ,antes.ef_destino ,antes.ef_gd 
    ,antes.ef_gb ,antes.ef_ofsup_cr ,antes.ef_ofsup_rsvas ,antes.ef_ofsup_as 
    ,antes.ef_ofsub_cr ,antes.ef_ofsub_rsvas ,antes.ef_ofsub_as ,antes.ef_esptas 
    ,antes.ef_sgtosmay ,antes.ef_tropa ,antes.ef_tropa_a ,antes.ef_tropa_n 
    ,antes.ef_cadetes ,antes.ef_contrato ,antes.ef_total_destinos ,antes.ef_det_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_est_fuerza_detalle update on "informix"
    .est_fuerza_detalle referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_est_fuerza_detalle (ef_det_id,
    ef_cod_ef,ef_destino,ef_gd,ef_gb,ef_ofsup_cr,ef_ofsup_rsvas,ef_ofsup_as,
    ef_ofsub_cr,ef_ofsub_rsvas,ef_ofsub_as,ef_esptas,ef_sgtosmay,ef_tropa,
    ef_tropa_a,ef_tropa_n,ef_cadetes,ef_contrato,ef_total_destinos,ef_det_situacion,
    desp_ef_det_id,desp_ef_cod_ef,desp_ef_destino,desp_ef_gd,desp_ef_gb,
    desp_ef_ofsup_cr,desp_ef_ofsup_rsvas,desp_ef_ofsup_as,desp_ef_ofsub_cr,
    desp_ef_ofsub_rsvas,desp_ef_ofsub_as,desp_ef_esptas,desp_ef_sgtosmay,
    desp_ef_tropa,desp_ef_tropa_a,desp_ef_tropa_n,desp_ef_cadetes,desp_ef_contrato,
    desp_ef_total_destinos,desp_ef_det_situacion,accion,usuario,hora) 
     values (antes.ef_det_id ,antes.ef_cod_ef ,antes.ef_destino ,antes.ef_gd 
    ,antes.ef_gb ,antes.ef_ofsup_cr ,antes.ef_ofsup_rsvas ,antes.ef_ofsup_as 
    ,antes.ef_ofsub_cr ,antes.ef_ofsub_rsvas ,antes.ef_ofsub_as ,antes.ef_esptas 
    ,antes.ef_sgtosmay ,antes.ef_tropa ,antes.ef_tropa_a ,antes.ef_tropa_n 
    ,antes.ef_cadetes ,antes.ef_contrato ,antes.ef_total_destinos ,antes.ef_det_situacion 
    ,luego.ef_det_id ,luego.ef_cod_ef ,luego.ef_destino ,luego.ef_gd 
    ,luego.ef_gb ,luego.ef_ofsup_cr ,luego.ef_ofsup_rsvas ,luego.ef_ofsup_as 
    ,luego.ef_ofsub_cr ,luego.ef_ofsub_rsvas ,luego.ef_ofsub_as ,luego.ef_esptas 
    ,luego.ef_sgtosmay ,luego.ef_tropa ,luego.ef_tropa_a ,luego.ef_tropa_n 
    ,luego.ef_cadetes ,luego.ef_contrato ,luego.ef_total_destinos ,luego.ef_det_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_est_fuerza_alum_y_rsrv insert on 
    "informix".est_fuerza_alum_y_rsrv referencing new as luego
    
    for each row
        (
        insert into "informix".aud_est_fuerza_alum_y_rsrv (alrs_id,
    alrs_est_fuerza_id,alrs_al_masculinos,alrs_al_femeninos,alrs_rs_masculinos,
    alrs_rs_femeninos,alrs_obervacion,alrs_situacion,desp_alrs_id,desp_alrs_est_fuerza_id,
    desp_alrs_al_masculinos,desp_alrs_al_femeninos,desp_alrs_rs_masculinos,
    desp_alrs_rs_femeninos,desp_alrs_obervacion,desp_alrs_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.alrs_id ,
    luego.alrs_est_fuerza_id ,luego.alrs_al_masculinos ,luego.alrs_al_femeninos 
    ,luego.alrs_rs_masculinos ,luego.alrs_rs_femeninos ,luego.alrs_obervacion 
    ,luego.alrs_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_est_fuerza_alum_y_rsrv delete on 
    "informix".est_fuerza_alum_y_rsrv referencing old as antes
    
    for each row
        (
        insert into "informix".aud_est_fuerza_alum_y_rsrv (alrs_id,
    alrs_est_fuerza_id,alrs_al_masculinos,alrs_al_femeninos,alrs_rs_masculinos,
    alrs_rs_femeninos,alrs_obervacion,alrs_situacion,desp_alrs_id,desp_alrs_est_fuerza_id,
    desp_alrs_al_masculinos,desp_alrs_al_femeninos,desp_alrs_rs_masculinos,
    desp_alrs_rs_femeninos,desp_alrs_obervacion,desp_alrs_situacion,accion,
    usuario,hora)  values (antes.alrs_id ,antes.alrs_est_fuerza_id ,antes.alrs_al_masculinos 
    ,antes.alrs_al_femeninos ,antes.alrs_rs_masculinos ,antes.alrs_rs_femeninos 
    ,antes.alrs_obervacion ,antes.alrs_situacion ,NULL ,'' ,'' ,'' ,'' ,''
     ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_est_fuerza_alum_y_rsrv update on 
    "informix".est_fuerza_alum_y_rsrv referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_est_fuerza_alum_y_rsrv (alrs_id,
    alrs_est_fuerza_id,alrs_al_masculinos,alrs_al_femeninos,alrs_rs_masculinos,
    alrs_rs_femeninos,alrs_obervacion,alrs_situacion,desp_alrs_id,desp_alrs_est_fuerza_id,
    desp_alrs_al_masculinos,desp_alrs_al_femeninos,desp_alrs_rs_masculinos,
    desp_alrs_rs_femeninos,desp_alrs_obervacion,desp_alrs_situacion,accion,
    usuario,hora)  values (antes.alrs_id ,antes.alrs_est_fuerza_id ,antes.alrs_al_masculinos 
    ,antes.alrs_al_femeninos ,antes.alrs_rs_masculinos ,antes.alrs_rs_femeninos 
    ,antes.alrs_obervacion ,antes.alrs_situacion ,luego.alrs_id ,luego.alrs_est_fuerza_id 
    ,luego.alrs_al_masculinos ,luego.alrs_al_femeninos ,luego.alrs_rs_masculinos 
    ,luego.alrs_rs_femeninos ,luego.alrs_obervacion ,luego.alrs_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_est_reg_dep insert on "informix"
    .est_reg_dep referencing new as luego
    for each row
        (
        insert into "informix".aud_est_reg_dep (est_rdep_id,est_rdep_regid,
    est_rdep_unidad,est_rdep_dep,est_rdep_situacion,desp_est_rdep_id,
    desp_est_rdep_regid,desp_est_rdep_unidad,desp_est_rdep_dep,desp_est_rdep_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.est_rdep_id 
    ,luego.est_rdep_regid ,luego.est_rdep_unidad ,luego.est_rdep_dep 
    ,luego.est_rdep_situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_est_reg_dep delete on "informix"
    .est_reg_dep referencing old as antes
    for each row
        (
        insert into "informix".aud_est_reg_dep (est_rdep_id,est_rdep_regid,
    est_rdep_unidad,est_rdep_dep,est_rdep_situacion,desp_est_rdep_id,
    desp_est_rdep_regid,desp_est_rdep_unidad,desp_est_rdep_dep,desp_est_rdep_situacion,
    accion,usuario,hora)  values (antes.est_rdep_id ,antes.est_rdep_regid 
    ,antes.est_rdep_unidad ,antes.est_rdep_dep ,antes.est_rdep_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_est_reg_dep update on "informix"
    .est_reg_dep referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_est_reg_dep (est_rdep_id,est_rdep_regid,
    est_rdep_unidad,est_rdep_dep,est_rdep_situacion,desp_est_rdep_id,
    desp_est_rdep_regid,desp_est_rdep_unidad,desp_est_rdep_dep,desp_est_rdep_situacion,
    accion,usuario,hora)  values (antes.est_rdep_id ,antes.est_rdep_regid 
    ,antes.est_rdep_unidad ,antes.est_rdep_dep ,antes.est_rdep_situacion 
    ,luego.est_rdep_id ,luego.est_rdep_regid ,luego.est_rdep_unidad ,
    luego.est_rdep_dep ,luego.est_rdep_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_est_dest_det insert on "informix"
    .est_dest_det referencing new as luego
    for each row
        (
        insert into "informix".aud_est_dest_det (dest_de_id,dest_de_detid,
    dest_de_destino,dest_de_of,dest_de_esp,dest_de_tropa,dest_de_cad,
    dest_de_pla,dest_de_catalogo,dest_de_obs,dest_de_comando,dest_de_grado,
    dest_de_cantidad,dest_de_tiempo,dest_de_desc_tiempo,dest_de_situacion,
    desp_dest_de_id,desp_dest_de_detid,desp_dest_de_destino,desp_dest_de_of,
    desp_dest_de_esp,desp_dest_de_tropa,desp_dest_de_cad,desp_dest_de_pla,
    desp_dest_de_catalogo,desp_dest_de_obs,desp_dest_de_comando,desp_dest_de_grado,
    desp_dest_de_cantidad,desp_dest_de_tiempo,desp_dest_de_desc_tiempo,
    desp_dest_de_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,
    '' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2000) ,'' ,'' ,'' ,'' ,'' ,'' ,luego.dest_de_id 
    ,luego.dest_de_detid ,luego.dest_de_destino ,luego.dest_de_of ,luego.dest_de_esp 
    ,luego.dest_de_tropa ,luego.dest_de_cad ,luego.dest_de_pla ,luego.dest_de_catalogo 
    ,luego.dest_de_obs ,luego.dest_de_comando ,luego.dest_de_grado ,luego.dest_de_cantidad 
    ,luego.dest_de_tiempo ,luego.dest_de_desc_tiempo ,luego.dest_de_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_est_dest_det delete on "informix"
    .est_dest_det referencing old as antes
    for each row
        (
        insert into "informix".aud_est_dest_det (dest_de_id,dest_de_detid,
    dest_de_destino,dest_de_of,dest_de_esp,dest_de_tropa,dest_de_cad,
    dest_de_pla,dest_de_catalogo,dest_de_obs,dest_de_comando,dest_de_grado,
    dest_de_cantidad,dest_de_tiempo,dest_de_desc_tiempo,dest_de_situacion,
    desp_dest_de_id,desp_dest_de_detid,desp_dest_de_destino,desp_dest_de_of,
    desp_dest_de_esp,desp_dest_de_tropa,desp_dest_de_cad,desp_dest_de_pla,
    desp_dest_de_catalogo,desp_dest_de_obs,desp_dest_de_comando,desp_dest_de_grado,
    desp_dest_de_cantidad,desp_dest_de_tiempo,desp_dest_de_desc_tiempo,
    desp_dest_de_situacion,accion,usuario,hora)  values (antes.dest_de_id 
    ,antes.dest_de_detid ,antes.dest_de_destino ,antes.dest_de_of ,antes.dest_de_esp 
    ,antes.dest_de_tropa ,antes.dest_de_cad ,antes.dest_de_pla ,antes.dest_de_catalogo 
    ,antes.dest_de_obs ,antes.dest_de_comando ,antes.dest_de_grado ,antes.dest_de_cantidad 
    ,antes.dest_de_tiempo ,antes.dest_de_desc_tiempo ,antes.dest_de_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2000) ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_est_dest_det update on "informix"
    .est_dest_det referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_est_dest_det (dest_de_id,dest_de_detid,
    dest_de_destino,dest_de_of,dest_de_esp,dest_de_tropa,dest_de_cad,
    dest_de_pla,dest_de_catalogo,dest_de_obs,dest_de_comando,dest_de_grado,
    dest_de_cantidad,dest_de_tiempo,dest_de_desc_tiempo,dest_de_situacion,
    desp_dest_de_id,desp_dest_de_detid,desp_dest_de_destino,desp_dest_de_of,
    desp_dest_de_esp,desp_dest_de_tropa,desp_dest_de_cad,desp_dest_de_pla,
    desp_dest_de_catalogo,desp_dest_de_obs,desp_dest_de_comando,desp_dest_de_grado,
    desp_dest_de_cantidad,desp_dest_de_tiempo,desp_dest_de_desc_tiempo,
    desp_dest_de_situacion,accion,usuario,hora)  values (antes.dest_de_id 
    ,antes.dest_de_detid ,antes.dest_de_destino ,antes.dest_de_of ,antes.dest_de_esp 
    ,antes.dest_de_tropa ,antes.dest_de_cad ,antes.dest_de_pla ,antes.dest_de_catalogo 
    ,antes.dest_de_obs ,antes.dest_de_comando ,antes.dest_de_grado ,antes.dest_de_cantidad 
    ,antes.dest_de_tiempo ,antes.dest_de_desc_tiempo ,antes.dest_de_situacion 
    ,luego.dest_de_id ,luego.dest_de_detid ,luego.dest_de_destino ,luego.dest_de_of 
    ,luego.dest_de_esp ,luego.dest_de_tropa ,luego.dest_de_cad ,luego.dest_de_pla 
    ,luego.dest_de_catalogo ,luego.dest_de_obs ,luego.dest_de_comando 
    ,luego.dest_de_grado ,luego.dest_de_cantidad ,luego.dest_de_tiempo 
    ,luego.dest_de_desc_tiempo ,luego.dest_de_situacion ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_vlh_det_plaza insert on "informix"
    .vlh_det_plaza referencing new as luego
    for each row
        (
        insert into "informix".aud_vlh_det_plaza (det_plaza_id,
    det_plaza_catalogo,det_plaza_responsable,det_plaza_asignado,det_plaza_fecha,
    det_plaza_situacion,det_plaza_observaciones,desp_det_plaza_id,desp_det_plaza_catalogo,
    desp_det_plaza_responsable,desp_det_plaza_asignado,desp_det_plaza_fecha,
    desp_det_plaza_situacion,desp_det_plaza_observaciones,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2500) ,luego.det_plaza_id 
    ,luego.det_plaza_catalogo ,luego.det_plaza_responsable ,luego.det_plaza_asignado 
    ,luego.det_plaza_fecha ,luego.det_plaza_situacion ,luego.det_plaza_observaciones 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_vlh_det_plaza delete on "informix"
    .vlh_det_plaza referencing old as antes
    for each row
        (
        insert into "informix".aud_vlh_det_plaza (det_plaza_id,
    det_plaza_catalogo,det_plaza_responsable,det_plaza_asignado,det_plaza_fecha,
    det_plaza_situacion,det_plaza_observaciones,desp_det_plaza_id,desp_det_plaza_catalogo,
    desp_det_plaza_responsable,desp_det_plaza_asignado,desp_det_plaza_fecha,
    desp_det_plaza_situacion,desp_det_plaza_observaciones,accion,usuario,
    hora)  values (antes.det_plaza_id ,antes.det_plaza_catalogo ,antes.det_plaza_responsable 
    ,antes.det_plaza_asignado ,antes.det_plaza_fecha ,antes.det_plaza_situacion 
    ,antes.det_plaza_observaciones ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2500) 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_vlh_det_plaza update on "informix"
    .vlh_det_plaza referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_vlh_det_plaza (det_plaza_id,
    det_plaza_catalogo,det_plaza_responsable,det_plaza_asignado,det_plaza_fecha,
    det_plaza_situacion,det_plaza_observaciones,desp_det_plaza_id,desp_det_plaza_catalogo,
    desp_det_plaza_responsable,desp_det_plaza_asignado,desp_det_plaza_fecha,
    desp_det_plaza_situacion,desp_det_plaza_observaciones,accion,usuario,
    hora)  values (antes.det_plaza_id ,antes.det_plaza_catalogo ,antes.det_plaza_responsable 
    ,antes.det_plaza_asignado ,antes.det_plaza_fecha ,antes.det_plaza_situacion 
    ,antes.det_plaza_observaciones ,luego.det_plaza_id ,luego.det_plaza_catalogo 
    ,luego.det_plaza_responsable ,luego.det_plaza_asignado ,luego.det_plaza_fecha 
    ,luego.det_plaza_situacion ,luego.det_plaza_observaciones ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_apresto_asistencia delete on "informix"
    .apresto_asistencia referencing old as antes
    for each row
        (
        insert into "informix".aud_apresto_asistencia (asis_id,
    asis_catalogo,asis_fecha,asis_observacion,asis_situacion,desp_asis_id,
    desp_asis_catalogo,desp_asis_fecha,desp_asis_observacion,desp_asis_situacion,
    usuario,accion,hora)  values (antes.asis_id ,antes.asis_catalogo 
    ,antes.asis_fecha ,antes.asis_observacion ,antes.asis_situacion ,
    '' ,'' ,'' ,'' ::lvarchar(2048) ,'' ,USER ,'D' ,CURRENT year to minute 
    ));

create trigger "informix".upd_apresto_asistencia update on "informix"
    .apresto_asistencia referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_apresto_asistencia (asis_id,
    asis_catalogo,asis_fecha,asis_observacion,asis_situacion,desp_asis_id,
    desp_asis_catalogo,desp_asis_fecha,desp_asis_observacion,desp_asis_situacion,
    usuario,accion,hora)  values (antes.asis_id ,antes.asis_catalogo 
    ,antes.asis_fecha ,antes.asis_observacion ,antes.asis_situacion ,
    luego.asis_id ,luego.asis_catalogo ,luego.asis_fecha ,luego.asis_observacion 
    ,luego.asis_situacion ,USER ,'U' ,CURRENT year to minute ));

create trigger "informix".ins_apresto_asistencia insert on "informix"
    .apresto_asistencia referencing new as luego
    for each row
        (
        insert into "informix".aud_apresto_asistencia (asis_id,
    asis_catalogo,asis_fecha,asis_observacion,asis_situacion,desp_asis_id,
    desp_asis_catalogo,desp_asis_fecha,desp_asis_observacion,desp_asis_situacion,
    usuario,accion,hora)  values ('' ,'' ,'' ,'' ::lvarchar(2048) ,'' ,luego.asis_id 
    ,luego.asis_catalogo ,luego.asis_fecha ,luego.asis_observacion ,luego.asis_situacion 
    ,USER ,'I' ,CURRENT year to minute ));

create trigger "informix".ins_registro_busqueda insert on "informix"
    .registro_busqueda referencing new as luego
    for each row
        (
        insert into "informix".aud_registro_busqueda (busqueda_id,
    busqueda_latitud,busqueda_longitud,busqueda_parametros,busqueda_motivo,
    busqueda_usuario,busqueda_fecha_hora,desp_busqueda_id,desp_busqueda_latitud,
    desp_busqueda_longitud,desp_busqueda_parametros,desp_busqueda_motivo,
    desp_busqueda_usuario,desp_busqueda_fecha_hora,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ::lvarchar(2048) ,'' ::lvarchar(2048) ,'' ,''
     ,luego.busqueda_id ,luego.busqueda_latitud ,luego.busqueda_longitud 
    ,luego.busqueda_parametros ,luego.busqueda_usuario ::lvarchar(2048) 
    ,luego.busqueda_usuario ,luego.busqueda_fecha_hora ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_registro_busqueda delete on "informix"
    .registro_busqueda referencing old as antes
    for each row
        (
        insert into "informix".aud_registro_busqueda (busqueda_id,
    busqueda_latitud,busqueda_longitud,busqueda_parametros,busqueda_motivo,
    busqueda_usuario,busqueda_fecha_hora,desp_busqueda_id,desp_busqueda_latitud,
    desp_busqueda_longitud,desp_busqueda_parametros,desp_busqueda_motivo,
    desp_busqueda_usuario,desp_busqueda_fecha_hora,accion,usuario,hora) 
     values (antes.busqueda_id ,antes.busqueda_latitud ,antes.busqueda_longitud 
    ,antes.busqueda_parametros ,antes.busqueda_motivo ,antes.busqueda_usuario 
    ,antes.busqueda_fecha_hora ,NULL ,'' ,'' ,'' ::lvarchar(2048) ,'' ::lvarchar(2048) 
    ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_registro_busqueda update on "informix"
    .registro_busqueda referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_registro_busqueda (busqueda_id,
    busqueda_latitud,busqueda_longitud,busqueda_parametros,busqueda_motivo,
    busqueda_usuario,busqueda_fecha_hora,desp_busqueda_id,desp_busqueda_latitud,
    desp_busqueda_longitud,desp_busqueda_parametros,desp_busqueda_motivo,
    desp_busqueda_usuario,desp_busqueda_fecha_hora,accion,usuario,hora) 
     values (antes.busqueda_id ,antes.busqueda_latitud ,antes.busqueda_longitud 
    ,antes.busqueda_parametros ,antes.busqueda_motivo ,antes.busqueda_usuario 
    ,antes.busqueda_fecha_hora ,luego.busqueda_id ,luego.busqueda_latitud 
    ,luego.busqueda_longitud ,luego.busqueda_parametros ,luego.busqueda_motivo 
    ,luego.busqueda_usuario ,luego.busqueda_fecha_hora ,'U' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".ins_dfdes_chn insert on "informix".dfdes_chn 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_dfdes_chn (dfdc_catalogo,dfdc_codigo,
    dfdc_nu_reg,dfdc_tipo_desc,dfdc_fec_ini,dfdc_mes_act,dfdc_fin_pres,
    dfdc_monto,dfdc_saldo,dfdc_mensual,dfdc_tot_cuotas,dfdc_num_cuotas,
    dfdc_nom_banco,dfdc_codeudor,dfdc_nom_bene,dfdc_no_prest,dfdc_si_no,
    aud_dfdc_catalogo,aud_dfdc_codigo,aud_dfdc_nu_reg,aud_dfdc_tipo_desc,
    aud_dfdc_fec_ini,aud_dfdc_mes_act,aud_dfdc_fin_pres,aud_dfdc_monto,
    aud_dfdc_saldo,aud_dfdc_mensual,aud_dfdc_tot_cuotas,aud_dfdc_num_cuotas,
    aud_dfdc_nom_banco,aud_dfdc_codeudor,aud_dfdc_nom_bene,aud_dfdc_no_prest,
    aud_dfdc_si_no,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.dfdc_catalogo ,luego.dfdc_codigo 
    ,luego.dfdc_nu_reg ,luego.dfdc_tipo_desc ,luego.dfdc_fec_ini ,luego.dfdc_mes_act 
    ,luego.dfdc_fin_pres ,luego.dfdc_monto ,luego.dfdc_saldo ,luego.dfdc_mensual 
    ,luego.dfdc_tot_cuotas ,luego.dfdc_num_cuotas ,luego.dfdc_nom_banco 
    ,luego.dfdc_codeudor ,luego.dfdc_nom_bene ,luego.dfdc_no_prest ,luego.dfdc_si_no 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_dfdes_chn delete on "informix".dfdes_chn 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_dfdes_chn (dfdc_catalogo,dfdc_codigo,
    dfdc_nu_reg,dfdc_tipo_desc,dfdc_fec_ini,dfdc_mes_act,dfdc_fin_pres,
    dfdc_monto,dfdc_saldo,dfdc_mensual,dfdc_tot_cuotas,dfdc_num_cuotas,
    dfdc_nom_banco,dfdc_codeudor,dfdc_nom_bene,dfdc_no_prest,dfdc_si_no,
    aud_dfdc_catalogo,aud_dfdc_codigo,aud_dfdc_nu_reg,aud_dfdc_tipo_desc,
    aud_dfdc_fec_ini,aud_dfdc_mes_act,aud_dfdc_fin_pres,aud_dfdc_monto,
    aud_dfdc_saldo,aud_dfdc_mensual,aud_dfdc_tot_cuotas,aud_dfdc_num_cuotas,
    aud_dfdc_nom_banco,aud_dfdc_codeudor,aud_dfdc_nom_bene,aud_dfdc_no_prest,
    aud_dfdc_si_no,accion,usuario,hora)  values (antes.dfdc_catalogo 
    ,antes.dfdc_codigo ,antes.dfdc_nu_reg ,antes.dfdc_tipo_desc ,antes.dfdc_fec_ini 
    ,antes.dfdc_mes_act ,antes.dfdc_fin_pres ,antes.dfdc_monto ,antes.dfdc_saldo 
    ,antes.dfdc_mensual ,antes.dfdc_tot_cuotas ,antes.dfdc_num_cuotas 
    ,antes.dfdc_nom_banco ,antes.dfdc_codeudor ,antes.dfdc_nom_bene ,
    antes.dfdc_no_prest ,antes.dfdc_si_no ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_dfdes_chn update on "informix".dfdes_chn 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_dfdes_chn (dfdc_catalogo,dfdc_codigo,
    dfdc_nu_reg,dfdc_tipo_desc,dfdc_fec_ini,dfdc_mes_act,dfdc_fin_pres,
    dfdc_monto,dfdc_saldo,dfdc_mensual,dfdc_tot_cuotas,dfdc_num_cuotas,
    dfdc_nom_banco,dfdc_codeudor,dfdc_nom_bene,dfdc_no_prest,dfdc_si_no,
    aud_dfdc_catalogo,aud_dfdc_codigo,aud_dfdc_nu_reg,aud_dfdc_tipo_desc,
    aud_dfdc_fec_ini,aud_dfdc_mes_act,aud_dfdc_fin_pres,aud_dfdc_monto,
    aud_dfdc_saldo,aud_dfdc_mensual,aud_dfdc_tot_cuotas,aud_dfdc_num_cuotas,
    aud_dfdc_nom_banco,aud_dfdc_codeudor,aud_dfdc_nom_bene,aud_dfdc_no_prest,
    aud_dfdc_si_no,accion,usuario,hora)  values (antes.dfdc_catalogo 
    ,antes.dfdc_codigo ,antes.dfdc_nu_reg ,antes.dfdc_tipo_desc ,antes.dfdc_fec_ini 
    ,antes.dfdc_mes_act ,antes.dfdc_fin_pres ,antes.dfdc_monto ,antes.dfdc_saldo 
    ,antes.dfdc_mensual ,antes.dfdc_tot_cuotas ,antes.dfdc_num_cuotas 
    ,antes.dfdc_nom_banco ,antes.dfdc_codeudor ,antes.dfdc_nom_bene ,
    antes.dfdc_no_prest ,antes.dfdc_si_no ,luego.dfdc_catalogo ,luego.dfdc_codigo 
    ,luego.dfdc_nu_reg ,luego.dfdc_tipo_desc ,luego.dfdc_fec_ini ,luego.dfdc_mes_act 
    ,luego.dfdc_fin_pres ,luego.dfdc_monto ,luego.dfdc_saldo ,luego.dfdc_mensual 
    ,luego.dfdc_tot_cuotas ,luego.dfdc_num_cuotas ,luego.dfdc_nom_banco 
    ,luego.dfdc_codeudor ,luego.dfdc_nom_bene ,luego.dfdc_no_prest ,luego.dfdc_si_no 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_novedades_finanzas insert on "informix"
    .novedades_finanzas referencing new as luego
    for each row
        (
        insert into "informix".aud_novedades_finanzas (nov_id,
    nov_grupo,nov_cat_pagador,nov_fecha,nov_renglon,nov_novedad,nov_descripcion,
    nov_situacion,desp_nov_id,desp_nov_grupo,desp_nov_cat_pagador,desp_nov_fecha,
    desp_nov_renglon,desp_nov_novedad,desp_nov_descripcion,desp_nov_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2048) 
    ,'' ,luego.nov_id ,luego.nov_grupo ,luego.nov_cat_pagador ,luego.nov_fecha 
    ,luego.nov_renglon ,luego.nov_novedad ,luego.nov_descripcion ,luego.nov_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_novedades_finanzas delete on "informix"
    .novedades_finanzas referencing old as antes
    for each row
        (
        insert into "informix".aud_novedades_finanzas (nov_id,
    nov_grupo,nov_cat_pagador,nov_fecha,nov_renglon,nov_novedad,nov_descripcion,
    nov_situacion,desp_nov_id,desp_nov_grupo,desp_nov_cat_pagador,desp_nov_fecha,
    desp_nov_renglon,desp_nov_novedad,desp_nov_descripcion,desp_nov_situacion,
    accion,usuario,hora)  values (antes.nov_id ,antes.nov_grupo ,antes.nov_cat_pagador 
    ,antes.nov_fecha ,antes.nov_renglon ,antes.nov_novedad ,antes.nov_descripcion 
    ,antes.nov_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2048) ,'' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_novedades_finanzas update on "informix"
    .novedades_finanzas referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_novedades_finanzas (nov_id,
    nov_grupo,nov_cat_pagador,nov_fecha,nov_renglon,nov_novedad,nov_descripcion,
    nov_situacion,desp_nov_id,desp_nov_grupo,desp_nov_cat_pagador,desp_nov_fecha,
    desp_nov_renglon,desp_nov_novedad,desp_nov_descripcion,desp_nov_situacion,
    accion,usuario,hora)  values (antes.nov_id ,antes.nov_grupo ,antes.nov_cat_pagador 
    ,antes.nov_fecha ,antes.nov_renglon ,antes.nov_novedad ,antes.nov_descripcion 
    ,antes.nov_situacion ,antes.nov_id ,luego.nov_grupo ,luego.nov_cat_pagador 
    ,luego.nov_fecha ,luego.nov_renglon ,luego.nov_novedad ,luego.nov_descripcion 
    ,luego.nov_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_historial_conexiones insert on 
    "informix".historial_conexiones referencing new as luego
    for each row
        (
        insert into "informix".aud_historial_conexiones (usuarios,
    ultima_conexion,hostname,latitudes,longitudes,desp_usuarios,desp_ultima_conexion,
    desp_hostname,desp_latitudes,desp_longitudes,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,luego.usuarios ,luego.ultima_conexion 
    ,luego.hostname ,luego.latitudes ,luego.longitudes ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_historial_conexiones delete on 
    "informix".historial_conexiones referencing old as antes
    for each row
        (
        insert into "informix".aud_historial_conexiones (usuarios,
    ultima_conexion,hostname,latitudes,longitudes,desp_usuarios,desp_ultima_conexion,
    desp_hostname,desp_latitudes,desp_longitudes,accion,usuario,hora) 
     values (antes.usuarios ,antes.ultima_conexion ,antes.hostname ,antes.latitudes 
    ,antes.longitudes ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_historial_conexiones update on 
    "informix".historial_conexiones referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_historial_conexiones (usuarios,
    ultima_conexion,hostname,latitudes,longitudes,desp_usuarios,desp_ultima_conexion,
    desp_hostname,desp_latitudes,desp_longitudes,accion,usuario,hora) 
     values (antes.usuarios ,antes.ultima_conexion ,antes.hostname ,antes.latitudes 
    ,antes.longitudes ,luego.usuarios ,luego.ultima_conexion ,luego.hostname 
    ,luego.latitudes ,luego.longitudes ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_apresto_tareas delete on "informix"
    .apresto_tareas referencing old as antes
    for each row
        (
        insert into "informix".aud_apresto_tareas (tar_id,tar_dependencia,
    tar_descripcion,tar_ambito,tar_modalidad,tar_forma,tar_fecha_ini,
    tar_fecha_fin,tar_fecha_creacion,tar_documento,tar_situacion,desp_tar_id,
    desp_tar_dependencia,desp_tar_descripcion,desp_tar_ambito,desp_tar_modalidad,
    desp_tar_forma,desp_tar_fecha_ini,desp_tar_fecha_fin,desp_tar_fecha_creacion,
    desp_tar_documento,desp_tar_situacion,usuario,accion,hora)  values 
    (antes.tar_id ,antes.tar_dependencia ,antes.tar_descripcion ,antes.tar_ambito 
    ,antes.tar_modalidad ,antes.tar_forma ,antes.tar_fecha_ini ,antes.tar_fecha_fin 
    ,antes.tar_fecha_creacion ,antes.tar_documento ,antes.tar_situacion 
    ,'' ,'' ,'' ::lvarchar(2048) ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,USER ,'D' ,CURRENT 
    year to minute ));

create trigger "informix".ins_apresto_tareas insert on "informix"
    .apresto_tareas referencing new as luego
    for each row
        (
        insert into "informix".aud_apresto_tareas (tar_id,tar_dependencia,
    tar_descripcion,tar_ambito,tar_modalidad,tar_forma,tar_fecha_ini,
    tar_fecha_fin,tar_fecha_creacion,tar_documento,tar_situacion,desp_tar_id,
    desp_tar_dependencia,desp_tar_descripcion,desp_tar_ambito,desp_tar_modalidad,
    desp_tar_forma,desp_tar_fecha_ini,desp_tar_fecha_fin,desp_tar_fecha_creacion,
    desp_tar_documento,desp_tar_situacion,usuario,accion,hora)  values 
    ('' ,'' ,'' ::lvarchar(2048) ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.tar_id ,
    luego.tar_dependencia ,luego.tar_descripcion ,luego.tar_ambito ,luego.tar_modalidad 
    ,luego.tar_forma ,luego.tar_fecha_ini ,luego.tar_fecha_fin ,luego.tar_fecha_creacion 
    ,luego.tar_documento ,luego.tar_situacion ,USER ,'I' ,CURRENT year 
    to minute ));

create trigger "informix".upd_apresto_tareas update on "informix"
    .apresto_tareas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_apresto_tareas (tar_id,tar_dependencia,
    tar_descripcion,tar_ambito,tar_modalidad,tar_forma,tar_fecha_ini,
    tar_fecha_fin,tar_fecha_creacion,tar_documento,tar_situacion,desp_tar_id,
    desp_tar_dependencia,desp_tar_descripcion,desp_tar_ambito,desp_tar_modalidad,
    desp_tar_forma,desp_tar_fecha_ini,desp_tar_fecha_fin,desp_tar_fecha_creacion,
    desp_tar_documento,desp_tar_situacion,usuario,accion,hora)  values 
    (antes.tar_id ,antes.tar_dependencia ,antes.tar_descripcion ,antes.tar_ambito 
    ,antes.tar_modalidad ,antes.tar_forma ,antes.tar_fecha_ini ,antes.tar_fecha_fin 
    ,antes.tar_fecha_creacion ,antes.tar_documento ,antes.tar_situacion 
    ,luego.tar_id ,luego.tar_dependencia ,luego.tar_descripcion ,luego.tar_ambito 
    ,luego.tar_modalidad ,luego.tar_forma ,luego.tar_fecha_ini ,luego.tar_fecha_fin 
    ,luego.tar_fecha_creacion ,luego.tar_documento ,luego.tar_situacion 
    ,USER ,'U' ,CURRENT year to minute ));

create trigger "informix".ins_apresto_funciones insert on "informix"
    .apresto_funciones referencing new as luego
    for each row
        (
        insert into "informix".aud_apresto_funciones (func_id,
    func_funcion,func_situacion,desp_func_id,desp_func_funcion,desp_func_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.func_id ,luego.func_funcion 
    ,luego.func_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_apresto_funciones delete on "informix"
    .apresto_funciones referencing old as antes
    for each row
        (
        insert into "informix".aud_apresto_funciones (func_id,
    func_funcion,func_situacion,desp_func_id,desp_func_funcion,desp_func_situacion,
    accion,usuario,hora)  values (antes.func_id ,antes.func_funcion ,
    antes.func_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_apresto_funciones update on "informix"
    .apresto_funciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_apresto_funciones (func_id,
    func_funcion,func_situacion,desp_func_id,desp_func_funcion,desp_func_situacion,
    accion,usuario,hora)  values (antes.func_id ,antes.func_funcion ,
    antes.func_situacion ,luego.func_id ,luego.func_funcion ,luego.func_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_eva_pdf insert on "informix".eva_pdf 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_eva_pdf (evapdf_id,evapdf_evaluacion,
    evapdf_catalogo,evapdf_ruta,evapdf_situacion,desp_evapdf_id,desp_evapdf_evaluacion,
    desp_evapdf_catalogo,desp_evapdf_ruta,desp_evapdf_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.evapdf_id ,luego.evapdf_evaluacion 
    ,luego.evapdf_catalogo ,luego.evapdf_ruta ,luego.evapdf_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_eva_pdf delete on "informix".eva_pdf 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_eva_pdf (evapdf_id,evapdf_evaluacion,
    evapdf_catalogo,evapdf_ruta,evapdf_situacion,desp_evapdf_id,desp_evapdf_evaluacion,
    desp_evapdf_catalogo,desp_evapdf_ruta,desp_evapdf_situacion,accion,
    usuario,hora)  values (antes.evapdf_id ,antes.evapdf_evaluacion ,
    antes.evapdf_catalogo ,antes.evapdf_ruta ,antes.evapdf_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_eva_pdf update on "informix".eva_pdf 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_eva_pdf (evapdf_id,evapdf_evaluacion,
    evapdf_catalogo,evapdf_ruta,evapdf_situacion,desp_evapdf_id,desp_evapdf_evaluacion,
    desp_evapdf_catalogo,desp_evapdf_ruta,desp_evapdf_situacion,accion,
    usuario,hora)  values (antes.evapdf_id ,antes.evapdf_evaluacion ,
    antes.evapdf_catalogo ,antes.evapdf_ruta ,antes.evapdf_situacion 
    ,luego.evapdf_id ,luego.evapdf_evaluacion ,luego.evapdf_catalogo 
    ,luego.evapdf_ruta ,luego.evapdf_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_comb_contratos insert on "informix"
    .comb_contratos referencing new as luego
    for each row
        (
        insert into "informix".aud_comb_contratos (cont_id,cont_nog,
    cont_fecha_fin,cont_precio_galon,cont_tipo_combustible,cont_cantidad,
    cont_situacion,desp_cont_id,desp_cont_nog,desp_cont_fecha_fin,desp_cont_precio_galon,
    desp_cont_tipo_combustible,desp_cont_cantidad,desp_cont_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,luego.cont_id 
    ,luego.cont_nog ,luego.cont_fecha_fin ,luego.cont_precio_galon ,luego.cont_tipo_combustible 
    ,luego.cont_cantidad ,luego.cont_situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_comb_contratos delete on "informix"
    .comb_contratos referencing old as antes
    for each row
        (
        insert into "informix".aud_comb_contratos (cont_id,cont_nog,
    cont_fecha_fin,cont_precio_galon,cont_tipo_combustible,cont_cantidad,
    cont_situacion,desp_cont_id,desp_cont_nog,desp_cont_fecha_fin,desp_cont_precio_galon,
    desp_cont_tipo_combustible,desp_cont_cantidad,desp_cont_situacion,
    accion,usuario,hora)  values (antes.cont_id ,antes.cont_nog ,antes.cont_fecha_fin 
    ,antes.cont_precio_galon ,antes.cont_tipo_combustible ,antes.cont_cantidad 
    ,antes.cont_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_comb_contratos update on "informix"
    .comb_contratos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_comb_contratos (cont_id,cont_nog,
    cont_fecha_fin,cont_precio_galon,cont_tipo_combustible,cont_cantidad,
    cont_situacion,desp_cont_id,desp_cont_nog,desp_cont_fecha_fin,desp_cont_precio_galon,
    desp_cont_tipo_combustible,desp_cont_cantidad,desp_cont_situacion,
    accion,usuario,hora)  values (antes.cont_id ,antes.cont_nog ,antes.cont_fecha_fin 
    ,antes.cont_precio_galon ,antes.cont_tipo_combustible ,antes.cont_cantidad 
    ,antes.cont_situacion ,luego.cont_id ,luego.cont_nog ,luego.cont_fecha_fin 
    ,luego.cont_precio_galon ,luego.cont_tipo_combustible ,luego.cont_cantidad 
    ,luego.cont_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_comb_mensuales insert on "informix"
    .comb_mensuales referencing new as luego
    for each row
        (
        insert into "informix".aud_comb_mensuales (men_id,men_contrato,
    men_fecha,men_cantidad,men_tipo,men_situacion,desp_men_id,desp_men_contrato,
    desp_men_fecha,desp_men_cantidad,desp_men_tipo,desp_men_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,luego.men_id ,
    luego.men_contrato ,luego.men_fecha ,luego.men_cantidad ,luego.men_tipo 
    ,luego.men_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_comb_mensuales delete on "informix"
    .comb_mensuales referencing old as antes
    for each row
        (
        insert into "informix".aud_comb_mensuales (men_id,men_contrato,
    men_fecha,men_cantidad,men_tipo,men_situacion,desp_men_id,desp_men_contrato,
    desp_men_fecha,desp_men_cantidad,desp_men_tipo,desp_men_situacion,
    accion,usuario,hora)  values (antes.men_id ,antes.men_contrato ,antes.men_fecha 
    ,antes.men_cantidad ,antes.men_tipo ,antes.men_situacion ,NULL ,''
     ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_comb_mensuales update on "informix"
    .comb_mensuales referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_comb_mensuales (men_id,men_contrato,
    men_fecha,men_cantidad,men_tipo,men_situacion,desp_men_id,desp_men_contrato,
    desp_men_fecha,desp_men_cantidad,desp_men_tipo,desp_men_situacion,
    accion,usuario,hora)  values (antes.men_id ,antes.men_contrato ,antes.men_fecha 
    ,antes.men_cantidad ,antes.men_tipo ,antes.men_situacion ,luego.men_id 
    ,luego.men_contrato ,luego.men_fecha ,luego.men_cantidad ,luego.men_tipo 
    ,luego.men_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_comb_asignaciones_saldos insert 
    on "informix".comb_asignaciones_saldos referencing new as 
    luego
    for each row
        (
        insert into "informix".aud_comb_asignaciones_saldos (sal_id,
    sal_fecha,sal_cuota,sal_tipo,sal_situacion,desp_sal_id,desp_sal_fecha,
    desp_sal_cuota,desp_sal_tipo,desp_sal_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,luego.sal_id ,luego.sal_fecha ,luego.sal_cuota 
    ,luego.sal_tipo ,luego.sal_situacion ,'I' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".del_comb_asignaciones_saldos delete 
    on "informix".comb_asignaciones_saldos referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_comb_asignaciones_saldos (sal_id,
    sal_fecha,sal_cuota,sal_tipo,sal_situacion,desp_sal_id,desp_sal_fecha,
    desp_sal_cuota,desp_sal_tipo,desp_sal_situacion,accion,usuario,hora) 
     values (antes.sal_id ,antes.sal_fecha ,antes.sal_cuota ,antes.sal_tipo 
    ,antes.sal_situacion ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_comb_asignaciones_saldos update 
    on "informix".comb_asignaciones_saldos referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_comb_asignaciones_saldos (sal_id,
    sal_fecha,sal_cuota,sal_tipo,sal_situacion,desp_sal_id,desp_sal_fecha,
    desp_sal_cuota,desp_sal_tipo,desp_sal_situacion,accion,usuario,hora) 
     values (antes.sal_id ,antes.sal_fecha ,antes.sal_cuota ,antes.sal_tipo 
    ,antes.sal_situacion ,luego.sal_id ,luego.sal_fecha ,luego.sal_cuota 
    ,luego.sal_tipo ,luego.sal_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_comb_dependencias insert on "informix"
    .comb_dependencias referencing new as luego
    for each row
        (
        insert into "informix".aud_comb_dependencias (dep_id,
    dep_desc_lg,dep_desc_md,dep_desc_ct,dep_dependencia,dep_latitud,dep_longitud,
    dep_gasolinera,dep_situacion,desp_dep_id,desp_dep_desc_lg,desp_dep_desc_md,
    desp_dep_desc_ct,desp_dep_dependencia,desp_dep_latitud,desp_dep_longitud,
    desp_dep_gasolinera,desp_dep_situacion,accion,usuario,hora)  values 
    (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.dep_id ,luego.dep_desc_lg ,luego.dep_desc_md 
    ,luego.dep_desc_ct ,luego.dep_dependencia ,luego.dep_latitud ,luego.dep_longitud 
    ,luego.dep_gasolinera ,luego.dep_situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_comb_dependencias delete on "informix"
    .comb_dependencias referencing old as antes
    for each row
        (
        insert into "informix".aud_comb_dependencias (dep_id,
    dep_desc_lg,dep_desc_md,dep_desc_ct,dep_dependencia,dep_latitud,dep_longitud,
    dep_gasolinera,dep_situacion,desp_dep_id,desp_dep_desc_lg,desp_dep_desc_md,
    desp_dep_desc_ct,desp_dep_dependencia,desp_dep_latitud,desp_dep_longitud,
    desp_dep_gasolinera,desp_dep_situacion,accion,usuario,hora)  values 
    (antes.dep_id ,antes.dep_desc_lg ,antes.dep_desc_md ,antes.dep_desc_ct 
    ,antes.dep_dependencia ,antes.dep_latitud ,antes.dep_longitud ,antes.dep_gasolinera 
    ,antes.dep_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_comb_dependencias update on "informix"
    .comb_dependencias referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_comb_dependencias (dep_id,
    dep_desc_lg,dep_desc_md,dep_desc_ct,dep_dependencia,dep_latitud,dep_longitud,
    dep_gasolinera,dep_situacion,desp_dep_id,desp_dep_desc_lg,desp_dep_desc_md,
    desp_dep_desc_ct,desp_dep_dependencia,desp_dep_latitud,desp_dep_longitud,
    desp_dep_gasolinera,desp_dep_situacion,accion,usuario,hora)  values 
    (antes.dep_id ,antes.dep_desc_lg ,antes.dep_desc_md ,antes.dep_desc_ct 
    ,antes.dep_dependencia ,antes.dep_latitud ,antes.dep_longitud ,antes.dep_gasolinera 
    ,antes.dep_situacion ,luego.dep_id ,luego.dep_desc_lg ,luego.dep_desc_md 
    ,luego.dep_desc_ct ,luego.dep_dependencia ,luego.dep_latitud ,luego.dep_longitud 
    ,luego.dep_gasolinera ,luego.dep_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_comb_gas_capacidades update on 
    "informix".comb_gas_capacidades referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_comb_gas_capacidades (cap_id,
    cap_gasolinera,cap_tanque,cap_tipo,cap_cantidad,cap_cuota,cap_situacion,
    desp_cap_id,desp_cap_gasolinera,desp_cap_tanque,desp_cap_tipo,desp_cap_cantidad,
    desp_cap_cuota,desp_cap_situacion,accion,usuario,hora)  values (antes.cap_id 
    ,antes.cap_gasolinera ,antes.cap_tanque ,antes.cap_tipo ,antes.cap_cantidad 
    ,antes.cap_cuota ,antes.cap_situacion ,luego.cap_id ,luego.cap_gasolinera 
    ,luego.cap_tanque ,luego.cap_tipo ,luego.cap_cantidad ,luego.cap_cuota 
    ,luego.cap_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_comb_gas_capacidades delete on 
    "informix".comb_gas_capacidades referencing old as antes
    for each row
        (
        insert into "informix".aud_comb_gas_capacidades (cap_id,
    cap_gasolinera,cap_tanque,cap_tipo,cap_cantidad,cap_cuota,cap_situacion,
    desp_cap_id,desp_cap_gasolinera,desp_cap_tanque,desp_cap_tipo,desp_cap_cantidad,
    desp_cap_cuota,desp_cap_situacion,accion,usuario,hora)  values (antes.cap_id 
    ,antes.cap_gasolinera ,antes.cap_tanque ,antes.cap_tipo ,antes.cap_cantidad 
    ,antes.cap_cuota ,antes.cap_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_comb_gas_capacidades insert on 
    "informix".comb_gas_capacidades referencing new as luego
    for each row
        (
        insert into "informix".aud_comb_gas_capacidades (cap_id,
    cap_gasolinera,cap_tanque,cap_tipo,cap_cantidad,cap_cuota,cap_situacion,
    desp_cap_id,desp_cap_gasolinera,desp_cap_tanque,desp_cap_tipo,desp_cap_cantidad,
    desp_cap_cuota,desp_cap_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,luego.cap_id ,luego.cap_gasolinera ,luego.cap_tanque 
    ,luego.cap_tipo ,luego.cap_cantidad ,luego.cap_cuota ,luego.cap_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_comb_hist_asignaciones insert on 
    "informix".comb_hist_asignaciones referencing new as luego
    
    for each row
        (
        insert into "informix".aud_comb_hist_asignaciones (hist_id,
    hist_proyecto,hist_detalle,hist_fecha,hist_situacion,desp_hist_id,
    desp_hist_proyecto,desp_hist_detalle,desp_hist_fecha,desp_hist_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ::lvarchar(2048) ,'' ,'' ,
    luego.hist_id ,luego.hist_proyecto ,luego.hist_detalle ,luego.hist_fecha 
    ,luego.hist_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_comb_hist_asignaciones delete on 
    "informix".comb_hist_asignaciones referencing old as antes
    
    for each row
        (
        insert into "informix".aud_comb_hist_asignaciones (hist_id,
    hist_proyecto,hist_detalle,hist_fecha,hist_situacion,desp_hist_id,
    desp_hist_proyecto,desp_hist_detalle,desp_hist_fecha,desp_hist_situacion,
    accion,usuario,hora)  values (antes.hist_id ,antes.hist_proyecto 
    ,antes.hist_detalle ,antes.hist_fecha ,antes.hist_situacion ,NULL 
    ,'' ,'' ::lvarchar(2048) ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_comb_hist_asignaciones update on 
    "informix".comb_hist_asignaciones referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_comb_hist_asignaciones (hist_id,
    hist_proyecto,hist_detalle,hist_fecha,hist_situacion,desp_hist_id,
    desp_hist_proyecto,desp_hist_detalle,desp_hist_fecha,desp_hist_situacion,
    accion,usuario,hora)  values (antes.hist_id ,antes.hist_proyecto 
    ,antes.hist_detalle ,antes.hist_fecha ,antes.hist_situacion ,luego.hist_id 
    ,luego.hist_proyecto ,luego.hist_detalle ,luego.hist_fecha ,luego.hist_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_comb_asignaciones insert on "informix"
    .comb_asignaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_comb_asignaciones (asig_id,
    asig_dep,asig_proyecto,asig_cantidad,asig_doc_recepcion,asig_situacion,
    desp_asig_id,desp_asig_dep,desp_asig_proyecto,desp_asig_cantidad,
    desp_asig_doc_recepcion,desp_asig_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ::lvarchar(2048) ,'' ,luego.asig_id ,luego.asig_dep 
    ,luego.asig_proyecto ,luego.asig_cantidad ,luego.asig_doc_recepcion 
    ,luego.asig_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_comb_asignaciones delete on "informix"
    .comb_asignaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_comb_asignaciones (asig_id,
    asig_dep,asig_proyecto,asig_cantidad,asig_doc_recepcion,asig_situacion,
    desp_asig_id,desp_asig_dep,desp_asig_proyecto,desp_asig_cantidad,
    desp_asig_doc_recepcion,desp_asig_situacion,accion,usuario,hora) 
     values (antes.asig_id ,antes.asig_dep ,antes.asig_proyecto ,antes.asig_cantidad 
    ,antes.asig_doc_recepcion ,antes.asig_situacion ,NULL ,'' ,'' ,'' ,''
     ::lvarchar(2048) ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_comb_asignaciones update on "informix"
    .comb_asignaciones referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_comb_asignaciones (asig_id,
    asig_dep,asig_proyecto,asig_cantidad,asig_doc_recepcion,asig_situacion,
    desp_asig_id,desp_asig_dep,desp_asig_proyecto,desp_asig_cantidad,
    desp_asig_doc_recepcion,desp_asig_situacion,accion,usuario,hora) 
     values (antes.asig_id ,antes.asig_dep ,antes.asig_proyecto ,antes.asig_cantidad 
    ,antes.asig_doc_recepcion ,antes.asig_situacion ,luego.asig_id ,luego.asig_dep 
    ,luego.asig_proyecto ,luego.asig_cantidad ,luego.asig_doc_recepcion 
    ,luego.asig_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_comb_solicitudes insert on "informix"
    .comb_solicitudes referencing new as luego
    for each row
        (
        insert into "informix".aud_comb_solicitudes (sol_id,sol_asignacion,
    sol_entrega,sol_recibe,sol_documento,sol_cantidad,sol_fecha,sol_situacion,
    desp_sol_id,desp_sol_asignacion,desp_sol_entrega,desp_sol_recibe,
    desp_sol_documento,desp_sol_cantidad,desp_sol_fecha,desp_sol_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.sol_id 
    ,luego.sol_asignacion ,luego.sol_entrega ,luego.sol_recibe ,luego.sol_documento 
    ,luego.sol_cantidad ,luego.sol_fecha ,luego.sol_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_comb_solicitudes delete on "informix"
    .comb_solicitudes referencing old as antes
    for each row
        (
        insert into "informix".aud_comb_solicitudes (sol_id,sol_asignacion,
    sol_entrega,sol_recibe,sol_documento,sol_cantidad,sol_fecha,sol_situacion,
    desp_sol_id,desp_sol_asignacion,desp_sol_entrega,desp_sol_recibe,
    desp_sol_documento,desp_sol_cantidad,desp_sol_fecha,desp_sol_situacion,
    accion,usuario,hora)  values (antes.sol_id ,antes.sol_asignacion 
    ,antes.sol_entrega ,antes.sol_recibe ,antes.sol_documento ,antes.sol_cantidad 
    ,antes.sol_fecha ,antes.sol_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_comb_solicitudes update on "informix"
    .comb_solicitudes referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_comb_solicitudes (sol_id,sol_asignacion,
    sol_entrega,sol_recibe,sol_documento,sol_cantidad,sol_fecha,sol_situacion,
    desp_sol_id,desp_sol_asignacion,desp_sol_entrega,desp_sol_recibe,
    desp_sol_documento,desp_sol_cantidad,desp_sol_fecha,desp_sol_situacion,
    accion,usuario,hora)  values (antes.sol_id ,antes.sol_asignacion 
    ,antes.sol_entrega ,antes.sol_recibe ,antes.sol_documento ,antes.sol_cantidad 
    ,antes.sol_fecha ,antes.sol_situacion ,luego.sol_id ,luego.sol_asignacion 
    ,luego.sol_entrega ,luego.sol_recibe ,luego.sol_documento ,luego.sol_cantidad 
    ,luego.sol_fecha ,luego.sol_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_comb_permisos insert on "informix"
    .comb_permisos referencing new as luego
    for each row
        (
        insert into "informix".aud_comb_permisos (perm_id,perm_catalogo,
    perm_dependencia,perm_situacion,desp_perm_id,desp_perm_catalogo,desp_perm_dependencia,
    desp_perm_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,
    luego.perm_id ,luego.perm_catalogo ,luego.perm_dependencia ,luego.perm_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_comb_permisos delete on "informix"
    .comb_permisos referencing old as antes
    for each row
        (
        insert into "informix".aud_comb_permisos (perm_id,perm_catalogo,
    perm_dependencia,perm_situacion,desp_perm_id,desp_perm_catalogo,desp_perm_dependencia,
    desp_perm_situacion,accion,usuario,hora)  values (antes.perm_id ,
    antes.perm_catalogo ,antes.perm_dependencia ,antes.perm_situacion 
    ,NULL ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_comb_permisos update on "informix"
    .comb_permisos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_comb_permisos (perm_id,perm_catalogo,
    perm_dependencia,perm_situacion,desp_perm_id,desp_perm_catalogo,desp_perm_dependencia,
    desp_perm_situacion,accion,usuario,hora)  values (antes.perm_id ,
    antes.perm_catalogo ,antes.perm_dependencia ,antes.perm_situacion 
    ,luego.perm_id ,luego.perm_catalogo ,luego.perm_dependencia ,luego.perm_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_comb_movimientos insert on "informix"
    .comb_movimientos referencing new as luego
    for each row
        (
        insert into "informix".aud_comb_movimientos (mov_id,mov_dep,
    mov_tipo,mov_cantidad,mov_fecha,mov_asignacion,mov_solicitud,mov_vale,
    mov_traslado,mov_situacion,desp_mov_id,desp_mov_dep,desp_mov_tipo,
    desp_mov_cantidad,desp_mov_fecha,desp_mov_asignacion,desp_mov_solicitud,
    desp_mov_vale,desp_mov_traslado,desp_mov_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.mov_id ,luego.mov_dep 
    ,luego.mov_tipo ,luego.mov_cantidad ,luego.mov_fecha ,luego.mov_asignacion 
    ,luego.mov_solicitud ,luego.mov_vale ,luego.mov_traslado ,luego.mov_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_comb_movimientos delete on "informix"
    .comb_movimientos referencing old as antes
    for each row
        (
        insert into "informix".aud_comb_movimientos (mov_id,mov_dep,
    mov_tipo,mov_cantidad,mov_fecha,mov_asignacion,mov_solicitud,mov_vale,
    mov_traslado,mov_situacion,desp_mov_id,desp_mov_dep,desp_mov_tipo,
    desp_mov_cantidad,desp_mov_fecha,desp_mov_asignacion,desp_mov_solicitud,
    desp_mov_vale,desp_mov_traslado,desp_mov_situacion,accion,usuario,
    hora)  values (antes.mov_id ,antes.mov_dep ,antes.mov_tipo ,antes.mov_cantidad 
    ,antes.mov_fecha ,antes.mov_asignacion ,antes.mov_solicitud ,antes.mov_vale 
    ,antes.mov_traslado ,antes.mov_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_comb_movimientos update on "informix"
    .comb_movimientos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_comb_movimientos (mov_id,mov_dep,
    mov_tipo,mov_cantidad,mov_fecha,mov_asignacion,mov_solicitud,mov_vale,
    mov_traslado,mov_situacion,desp_mov_id,desp_mov_dep,desp_mov_tipo,
    desp_mov_cantidad,desp_mov_fecha,desp_mov_asignacion,desp_mov_solicitud,
    desp_mov_vale,desp_mov_traslado,desp_mov_situacion,accion,usuario,
    hora)  values (antes.mov_id ,antes.mov_dep ,antes.mov_tipo ,antes.mov_cantidad 
    ,antes.mov_fecha ,antes.mov_asignacion ,antes.mov_solicitud ,antes.mov_vale 
    ,antes.mov_traslado ,antes.mov_situacion ,luego.mov_id ,luego.mov_dep 
    ,luego.mov_tipo ,luego.mov_cantidad ,luego.mov_fecha ,luego.mov_asignacion 
    ,luego.mov_solicitud ,luego.mov_vale ,luego.mov_traslado ,luego.mov_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lib_arrestados insert on "informix"
    .lib_arrestados referencing new as luego
    for each row
        (
        insert into "informix".aud_lib_arrestados (are_id,are_gra_a,
    are_catalogo,are_ordeno,are_gra_o,are_motivo,are_fecha_ini,are_fecha_fin,
    are_obs,are_estado,are_situacion,desp_are_id,desp_are_gra_a,desp_are_catalogo,
    desp_are_ordeno,desp_are_gra_o,desp_are_motivo,desp_are_fecha_ini,
    desp_are_fecha_fin,desp_are_obs,desp_are_estado,desp_are_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ::lvarchar(2048) 
    ,'' ,'' ,'' ::lvarchar(2048) ,'' ,'' ,luego.are_id ,luego.are_gra_a ,luego.are_catalogo 
    ,luego.are_ordeno ,luego.are_gra_o ,luego.are_motivo ,luego.are_fecha_ini 
    ,luego.are_fecha_fin ,luego.are_obs ,luego.are_estado ,luego.are_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lib_arrestados delete on "informix"
    .lib_arrestados referencing old as antes
    for each row
        (
        insert into "informix".aud_lib_arrestados (are_id,are_gra_a,
    are_catalogo,are_ordeno,are_gra_o,are_motivo,are_fecha_ini,are_fecha_fin,
    are_obs,are_estado,are_situacion,desp_are_id,desp_are_gra_a,desp_are_catalogo,
    desp_are_ordeno,desp_are_gra_o,desp_are_motivo,desp_are_fecha_ini,
    desp_are_fecha_fin,desp_are_obs,desp_are_estado,desp_are_situacion,
    accion,usuario,hora)  values (antes.are_id ,antes.are_gra_a ,antes.are_catalogo 
    ,antes.are_ordeno ,antes.are_gra_o ,antes.are_motivo ,antes.are_fecha_ini 
    ,antes.are_fecha_fin ,antes.are_obs ,antes.are_estado ,antes.are_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ::lvarchar(2048) ,'' ,'' ,'' ::lvarchar(2048) ,
    '' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lib_arrestados update on "informix"
    .lib_arrestados referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lib_arrestados (are_id,are_gra_a,
    are_catalogo,are_ordeno,are_gra_o,are_motivo,are_fecha_ini,are_fecha_fin,
    are_obs,are_estado,are_situacion,desp_are_id,desp_are_gra_a,desp_are_catalogo,
    desp_are_ordeno,desp_are_gra_o,desp_are_motivo,desp_are_fecha_ini,
    desp_are_fecha_fin,desp_are_obs,desp_are_estado,desp_are_situacion,
    accion,usuario,hora)  values (antes.are_id ,antes.are_gra_a ,antes.are_catalogo 
    ,antes.are_ordeno ,antes.are_gra_o ,antes.are_motivo ,antes.are_fecha_ini 
    ,antes.are_fecha_fin ,antes.are_obs ,antes.are_estado ,antes.are_situacion 
    ,luego.are_id ,luego.are_gra_a ,luego.are_catalogo ,luego.are_ordeno 
    ,luego.are_gra_o ,luego.are_motivo ,luego.are_fecha_ini ,luego.are_fecha_fin 
    ,luego.are_obs ,luego.are_estado ,luego.are_situacion ,'U' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".ins_lib_articulos insert on "informix"
    .lib_articulos referencing new as luego
    for each row
        (
        insert into "informix".aud_lib_articulos (art_id,art_desc,
    art_estado,art_situacion,desp_art_id,desp_art_desc,desp_art_estado,
    desp_art_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.art_id 
    ,luego.art_desc ,luego.art_estado ,luego.art_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_lib_articulos delete on "informix"
    .lib_articulos referencing old as antes
    for each row
        (
        insert into "informix".aud_lib_articulos (art_id,art_desc,
    art_estado,art_situacion,desp_art_id,desp_art_desc,desp_art_estado,
    desp_art_situacion,accion,usuario,hora)  values (antes.art_id ,antes.art_desc 
    ,antes.art_estado ,antes.art_situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".act_lib_articulos update on "informix"
    .lib_articulos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lib_articulos (art_id,art_desc,
    art_estado,art_situacion,desp_art_id,desp_art_desc,desp_art_estado,
    desp_art_situacion,accion,usuario,hora)  values (antes.art_id ,antes.art_desc 
    ,antes.art_estado ,antes.art_situacion ,luego.art_id ,luego.art_desc 
    ,luego.art_estado ,luego.art_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_lib_consignas insert on "informix"
    .lib_consignas referencing new as luego
    for each row
        (
        insert into "informix".aud_lib_consignas (cons_id,cons_cat_ordeno,
    cons_cat_ingreso,cons_fecha,cons_desc,cons_situacion,desp_cons_id,
    desp_cons_cat_ordeno,desp_cons_cat_ingreso,desp_cons_fecha,desp_cons_desc,
    desp_cons_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,
    '' ::lvarchar(2048) ,'' ,luego.cons_id ,luego.cons_cat_ordeno ,luego.cons_cat_ingreso 
    ,luego.cons_fecha ,luego.cons_desc ,luego.cons_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_lib_consignas delete on "informix"
    .lib_consignas referencing old as antes
    for each row
        (
        insert into "informix".aud_lib_consignas (cons_id,cons_cat_ordeno,
    cons_cat_ingreso,cons_fecha,cons_desc,cons_situacion,desp_cons_id,
    desp_cons_cat_ordeno,desp_cons_cat_ingreso,desp_cons_fecha,desp_cons_desc,
    desp_cons_situacion,accion,usuario,hora)  values (antes.cons_id ,
    antes.cons_cat_ordeno ,antes.cons_cat_ingreso ,antes.cons_fecha ,
    antes.cons_desc ,antes.cons_situacion ,NULL ,'' ,'' ,'' ,'' ::lvarchar(2048) 
    ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_lib_consignas update on "informix"
    .lib_consignas referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lib_consignas (cons_id,cons_cat_ordeno,
    cons_cat_ingreso,cons_fecha,cons_desc,cons_situacion,desp_cons_id,
    desp_cons_cat_ordeno,desp_cons_cat_ingreso,desp_cons_fecha,desp_cons_desc,
    desp_cons_situacion,accion,usuario,hora)  values (antes.cons_id ,
    antes.cons_cat_ordeno ,antes.cons_cat_ingreso ,antes.cons_fecha ,
    antes.cons_desc ,antes.cons_situacion ,luego.cons_id ,luego.cons_cat_ordeno 
    ,luego.cons_cat_ingreso ,luego.cons_fecha ,luego.cons_desc ,luego.cons_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lib_estado_art insert on "informix"
    .lib_estado_art referencing new as luego
    for each row
        (
        insert into "informix".aud_lib_estado_art (estado_id,
    estado_desc,estado_situacion,desp_estado_id,desp_estado_desc,desp_estado_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,luego.estado_id ,luego.estado_desc 
    ,luego.estado_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".del_lib_estado_art delete on "informix"
    .lib_estado_art referencing old as antes
    for each row
        (
        insert into "informix".aud_lib_estado_art (estado_id,
    estado_desc,estado_situacion,desp_estado_id,desp_estado_desc,desp_estado_situacion,
    accion,usuario,hora)  values (antes.estado_id ,antes.estado_desc 
    ,antes.estado_situacion ,NULL ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_lib_estado_art update on "informix"
    .lib_estado_art referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lib_estado_art (estado_id,
    estado_desc,estado_situacion,desp_estado_id,desp_estado_desc,desp_estado_situacion,
    accion,usuario,hora)  values (antes.estado_id ,antes.estado_desc 
    ,antes.estado_situacion ,luego.estado_id ,luego.estado_desc ,luego.estado_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lib_inventario insert on "informix"
    .lib_inventario referencing new as luego
    for each row
        (
        insert into "informix".aud_lib_inventario (inv_id,inv_articulos,
    inv_cantidad,inv_situacion,desp_inv_id,desp_inv_articulos,desp_inv_cantidad,
    desp_inv_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.inv_id 
    ,luego.inv_articulos ,luego.inv_cantidad ,luego.inv_situacion ,'I'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_lib_inventario delete on "informix"
    .lib_inventario referencing old as antes
    for each row
        (
        insert into "informix".aud_lib_inventario (inv_id,inv_articulos,
    inv_cantidad,inv_situacion,desp_inv_id,desp_inv_articulos,desp_inv_cantidad,
    desp_inv_situacion,accion,usuario,hora)  values (antes.inv_id ,antes.inv_articulos 
    ,antes.inv_cantidad ,antes.inv_situacion ,NULL ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_lib_inventario update on "informix"
    .lib_inventario referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lib_inventario (inv_id,inv_articulos,
    inv_cantidad,inv_situacion,desp_inv_id,desp_inv_articulos,desp_inv_cantidad,
    desp_inv_situacion,accion,usuario,hora)  values (antes.inv_id ,antes.inv_articulos 
    ,antes.inv_cantidad ,antes.inv_situacion ,luego.inv_id ,luego.inv_articulos 
    ,luego.inv_cantidad ,luego.inv_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_lib_permisos insert on "informix"
    .lib_permisos referencing new as luego
    for each row
        (
        insert into "informix".aud_lib_permisos (perm_id,perm_cat,
    perm_fecha_ini,perm_fecha_fin,perm_motivo,perm_situacion,desp_perm_id,
    desp_perm_cat,desp_perm_fecha_ini,desp_perm_fecha_fin,desp_perm_motivo,
    desp_perm_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,
    '' ,'' ,luego.perm_id ,luego.perm_cat ,luego.perm_fecha_ini ,luego.perm_fecha_fin 
    ,luego.perm_motivo ,luego.perm_situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_lib_permisos delete on "informix"
    .lib_permisos referencing old as antes
    for each row
        (
        insert into "informix".aud_lib_permisos (perm_id,perm_cat,
    perm_fecha_ini,perm_fecha_fin,perm_motivo,perm_situacion,desp_perm_id,
    desp_perm_cat,desp_perm_fecha_ini,desp_perm_fecha_fin,desp_perm_motivo,
    desp_perm_situacion,accion,usuario,hora)  values (antes.perm_id ,
    antes.perm_cat ,antes.perm_fecha_ini ,antes.perm_fecha_fin ,antes.perm_motivo 
    ,antes.perm_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_lib_permisos update on "informix"
    .lib_permisos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lib_permisos (perm_id,perm_cat,
    perm_fecha_ini,perm_fecha_fin,perm_motivo,perm_situacion,desp_perm_id,
    desp_perm_cat,desp_perm_fecha_ini,desp_perm_fecha_fin,desp_perm_motivo,
    desp_perm_situacion,accion,usuario,hora)  values (antes.perm_id ,
    antes.perm_cat ,antes.perm_fecha_ini ,antes.perm_fecha_fin ,antes.perm_motivo 
    ,antes.perm_situacion ,luego.perm_id ,luego.perm_cat ,luego.perm_fecha_ini 
    ,luego.perm_fecha_fin ,luego.perm_motivo ,luego.perm_situacion ,'U'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_lib_vehiculos insert on "informix"
    .lib_vehiculos referencing new as luego
    for each row
        (
        insert into "informix".aud_lib_vehiculos (veh_id,veh_cat_veh,
    veh_cond_cat,veh_hora_salida,veh_hora_entrada,veh_destino,veh_procedencia,
    veh_obs,veh_situacion,desp_veh_id,desp_veh_cat_veh,desp_veh_cond_cat,
    desp_veh_hora_salida,desp_veh_hora_entrada,desp_veh_destino,desp_veh_procedencia,
    desp_veh_obs,desp_veh_situacion,accion,usuario,hora)  values (NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.veh_id ,luego.veh_cat_veh ,luego.veh_cond_cat 
    ,luego.veh_hora_salida ,luego.veh_hora_entrada ,luego.veh_destino 
    ,luego.veh_procedencia ,luego.veh_obs ,luego.veh_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_lib_vehiculos delete on "informix"
    .lib_vehiculos referencing old as antes
    for each row
        (
        insert into "informix".aud_lib_vehiculos (veh_id,veh_cat_veh,
    veh_cond_cat,veh_hora_salida,veh_hora_entrada,veh_destino,veh_procedencia,
    veh_obs,veh_situacion,desp_veh_id,desp_veh_cat_veh,desp_veh_cond_cat,
    desp_veh_hora_salida,desp_veh_hora_entrada,desp_veh_destino,desp_veh_procedencia,
    desp_veh_obs,desp_veh_situacion,accion,usuario,hora)  values (antes.veh_id 
    ,antes.veh_cat_veh ,antes.veh_cond_cat ,antes.veh_hora_salida ,antes.veh_hora_entrada 
    ,antes.veh_destino ,antes.veh_procedencia ,antes.veh_obs ,antes.veh_situacion 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".act_lib_vehiculos update on "informix"
    .lib_vehiculos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_lib_vehiculos (veh_id,veh_cat_veh,
    veh_cond_cat,veh_hora_salida,veh_hora_entrada,veh_destino,veh_procedencia,
    veh_obs,veh_situacion,desp_veh_id,desp_veh_cat_veh,desp_veh_cond_cat,
    desp_veh_hora_salida,desp_veh_hora_entrada,desp_veh_destino,desp_veh_procedencia,
    desp_veh_obs,desp_veh_situacion,accion,usuario,hora)  values (antes.veh_id 
    ,antes.veh_cat_veh ,antes.veh_cond_cat ,antes.veh_hora_salida ,antes.veh_hora_entrada 
    ,antes.veh_destino ,antes.veh_procedencia ,antes.veh_obs ,antes.veh_situacion 
    ,luego.veh_id ,luego.veh_cat_veh ,luego.veh_cond_cat ,luego.veh_hora_salida 
    ,luego.veh_hora_entrada ,luego.veh_destino ,luego.veh_procedencia 
    ,luego.veh_obs ,luego.veh_situacion ,'U' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_asig_menuautocom insert on "informix"
    .asig_menuautocom referencing new as luego
    for each row
        (
        insert into "informix".aud_asig_menuautocom (asig_id,
    asig_catalogo,asig_app,asig_fecha,asig_situacion,desp_asig_id,desp_asig_catalogo,
    desp_asig_app,desp_asig_fecha,desp_asig_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.asig_id ,luego.asig_catalogo 
    ,luego.asig_app ,luego.asig_fecha ,luego.asig_situacion ,'I' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".del_asig_menuautocom delete on "informix"
    .asig_menuautocom referencing old as antes
    for each row
        (
        insert into "informix".aud_asig_menuautocom (asig_id,
    asig_catalogo,asig_app,asig_fecha,asig_situacion,desp_asig_id,desp_asig_catalogo,
    desp_asig_app,desp_asig_fecha,desp_asig_situacion,accion,usuario,
    hora)  values (antes.asig_id ,antes.asig_catalogo ,antes.asig_app 
    ,antes.asig_fecha ,antes.asig_situacion ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_asig_menuautocom update on "informix"
    .asig_menuautocom referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_asig_menuautocom (asig_id,
    asig_catalogo,asig_app,asig_fecha,asig_situacion,desp_asig_id,desp_asig_catalogo,
    desp_asig_app,desp_asig_fecha,desp_asig_situacion,accion,usuario,
    hora)  values (antes.asig_id ,antes.asig_catalogo ,antes.asig_app 
    ,antes.asig_fecha ,antes.asig_situacion ,luego.asig_id ,luego.asig_catalogo 
    ,luego.asig_app ,luego.asig_fecha ,luego.asig_situacion ,'U' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_grupo_menuautocom update on "informix"
    .grupo_menuautocom referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_grupo_menuautocom (gma_codigo,
    gma_desc,gma_fecha_creada,gma_descripcion,gma_situacion,desp_gma_codigo,
    desp_gma_desc,desp_gma_fecha_creada,desp_gma_descripcion,desp_gma_situacion,
    accion,usuario,hora)  values (antes.gma_codigo ,antes.gma_desc ,antes.gma_fecha_creada 
    ,antes.gma_descripcion ,antes.gma_situacion ,luego.gma_codigo ,luego.gma_desc 
    ,luego.gma_fecha_creada ,luego.gma_descripcion ,luego.gma_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_grupo_menuautocom delete on "informix"
    .grupo_menuautocom referencing old as antes
    for each row
        (
        insert into "informix".aud_grupo_menuautocom (gma_codigo,
    gma_desc,gma_fecha_creada,gma_descripcion,gma_situacion,desp_gma_codigo,
    desp_gma_desc,desp_gma_fecha_creada,desp_gma_descripcion,desp_gma_situacion,
    accion,usuario,hora)  values (antes.gma_codigo ,antes.gma_desc ,antes.gma_fecha_creada 
    ,antes.gma_descripcion ,antes.gma_situacion ,NULL ,'' ,'' ,'' ::lvarchar(2048) 
    ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_grupo_menuautocom insert on "informix"
    .grupo_menuautocom referencing new as luego
    for each row
        (
        insert into "informix".aud_grupo_menuautocom (gma_codigo,
    gma_desc,gma_fecha_creada,gma_descripcion,gma_situacion,desp_gma_codigo,
    desp_gma_desc,desp_gma_fecha_creada,desp_gma_descripcion,desp_gma_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ::lvarchar(2048) ,'' ,
    luego.gma_codigo ,luego.gma_desc ,luego.gma_fecha_creada ,luego.gma_descripcion 
    ,luego.gma_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_niveles_autocom update on "informix"
    .niveles_autocom referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_niveles_autocom (aut_codigo,
    aut_plaza,aut_permiso,aut_fecha_asignada,aut_fecha_eliminada,aut_asigno_per,
    aut_elimino_per,aut_descripcion_del,aut_descripcion,aut_situacion,
    desp_aut_codigo,desp_aut_plaza,desp_aut_permiso,desp_aut_fecha_asignada,
    desp_aut_fecha_eliminada,desp_aut_asigno_per,desp_aut_elimino_per,
    desp_aut_descripcion_del,desp_aut_descripcion,desp_aut_situacion,
    accion,usuario,hora)  values (antes.aut_codigo ,antes.aut_plaza ,
    antes.aut_permiso ,antes.aut_fecha_asignada ,antes.aut_fecha_eliminada 
    ,antes.aut_asigno_per ,antes.aut_elimino_per ,antes.aut_descripcion_del 
    ,antes.aut_descripcion ,antes.aut_situacion ,luego.aut_codigo ,luego.aut_plaza 
    ,luego.aut_permiso ,luego.aut_fecha_asignada ,luego.aut_fecha_eliminada 
    ,luego.aut_asigno_per ,luego.aut_elimino_per ,luego.aut_descripcion_del 
    ,luego.aut_descripcion ,luego.aut_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_niveles_autocom delete on "informix"
    .niveles_autocom referencing old as antes
    for each row
        (
        insert into "informix".aud_niveles_autocom (aut_codigo,
    aut_plaza,aut_permiso,aut_fecha_asignada,aut_fecha_eliminada,aut_asigno_per,
    aut_elimino_per,aut_descripcion_del,aut_descripcion,aut_situacion,
    desp_aut_codigo,desp_aut_plaza,desp_aut_permiso,desp_aut_fecha_asignada,
    desp_aut_fecha_eliminada,desp_aut_asigno_per,desp_aut_elimino_per,
    desp_aut_descripcion_del,desp_aut_descripcion,desp_aut_situacion,
    accion,usuario,hora)  values (antes.aut_codigo ,antes.aut_plaza ,
    antes.aut_permiso ,antes.aut_fecha_asignada ,antes.aut_fecha_eliminada 
    ,antes.aut_asigno_per ,antes.aut_elimino_per ,antes.aut_descripcion_del 
    ,antes.aut_descripcion ,antes.aut_situacion ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,'D' ,USER ,CURRENT year to fraction(3) 
    ));

create trigger "informix".ins_niveles_autocom insert on "informix"
    .niveles_autocom referencing new as luego
    for each row
        (
        insert into "informix".aud_niveles_autocom (aut_codigo,
    aut_plaza,aut_permiso,aut_fecha_asignada,aut_fecha_eliminada,aut_asigno_per,
    aut_elimino_per,aut_descripcion_del,aut_descripcion,aut_situacion,
    desp_aut_codigo,desp_aut_plaza,desp_aut_permiso,desp_aut_fecha_asignada,
    desp_aut_fecha_eliminada,desp_aut_asigno_per,desp_aut_elimino_per,
    desp_aut_descripcion_del,desp_aut_descripcion,desp_aut_situacion,
    accion,usuario,hora)  values (NULL ,NULL ,NULL ,NULL ,NULL ,NULL 
    ,NULL ,NULL ,NULL ,NULL ,luego.aut_codigo ,luego.aut_plaza ,luego.aut_permiso 
    ,luego.aut_fecha_asignada ,luego.aut_fecha_eliminada ,luego.aut_asigno_per 
    ,luego.aut_elimino_per ,luego.aut_descripcion_del ,luego.aut_descripcion 
    ,luego.aut_situacion ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_menuautocom update on "informix"
    .menuautocom referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_menuautocom (menu_codigo,menu_descr,
    menu_clave,menu_grupo,menu_detalle,menu_situacion,desp_menu_codigo,
    desp_menu_descr,desp_menu_clave,desp_menu_grupo,desp_menu_detalle,
    desp_menu_situacion,accion,usuario,hora)  values (antes.menu_codigo 
    ,antes.menu_descr ,antes.menu_clave ,antes.menu_grupo ,antes.menu_detalle 
    ,antes.menu_situacion ,luego.menu_codigo ,luego.menu_descr ,luego.menu_clave 
    ,luego.menu_grupo ,luego.menu_detalle ,luego.menu_situacion ,'U' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_menuautocom delete on "informix"
    .menuautocom referencing old as antes
    for each row
        (
        insert into "informix".aud_menuautocom (menu_codigo,menu_descr,
    menu_clave,menu_grupo,menu_detalle,menu_situacion,desp_menu_codigo,
    desp_menu_descr,desp_menu_clave,desp_menu_grupo,desp_menu_detalle,
    desp_menu_situacion,accion,usuario,hora)  values (antes.menu_codigo 
    ,antes.menu_descr ,antes.menu_clave ,antes.menu_grupo ,antes.menu_detalle 
    ,antes.menu_situacion ,NULL ,'' ,'' ,NULL ,'' ::lvarchar(2048) ,'' ,'D'
     ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_menuautocom insert on "informix"
    .menuautocom referencing new as luego
    for each row
        (
        insert into "informix".aud_menuautocom (menu_codigo,menu_descr,
    menu_clave,menu_grupo,desp_menu_codigo,menu_detalle,menu_situacion,
    desp_menu_descr,desp_menu_clave,desp_menu_grupo,desp_menu_detalle,
    desp_menu_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,NULL 
    ,'' ,'' ::lvarchar(2048) ,luego.menu_codigo ,luego.menu_descr ,luego.menu_clave 
    ,luego.menu_grupo ,luego.menu_detalle ,luego.menu_situacion ,'I' ,
    USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_comb_proyectos insert on "informix"
    .comb_proyectos referencing new as luego
    for each row
        (
        insert into "informix".aud_comb_proyectos (pro_id,pro_mensual,
    pro_documento,pro_situacion,desp_pro_id,desp_pro_mensual,desp_pro_documento,
    desp_pro_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.pro_id 
    ,luego.pro_mensual ,luego.pro_documento ,luego.pro_situacion ,'I' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_comb_proyectos delete on "informix"
    .comb_proyectos referencing old as antes
    for each row
        (
        insert into "informix".aud_comb_proyectos (pro_id,pro_mensual,
    pro_documento,pro_situacion,desp_pro_id,desp_pro_mensual,desp_pro_documento,
    desp_pro_situacion,accion,usuario,hora)  values (antes.pro_id ,antes.pro_mensual 
    ,antes.pro_documento ,antes.pro_situacion ,NULL ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_comb_proyectos update on "informix"
    .comb_proyectos referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_comb_proyectos (pro_id,pro_mensual,
    pro_documento,pro_situacion,desp_pro_id,desp_pro_mensual,desp_pro_documento,
    desp_pro_situacion,accion,usuario,hora)  values (antes.pro_id ,antes.pro_mensual 
    ,antes.pro_documento ,antes.pro_situacion ,luego.pro_id ,luego.pro_mensual 
    ,luego.pro_documento ,luego.pro_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_comb_hist_varcontrato insert on 
    "informix".comb_hist_varcontrato referencing new as luego
    for each row
        (
        insert into "informix".aud_comb_hist_varcontrato (var_id,
    var_contrato,var_precio_actual,var_nuevo_precio,var_cant_actual,var_nueva_cant_actualiza,
    var_fecha_actualiza,var_situacion,desp_var_id,desp_var_contrato,desp_var_precio_actual,
    desp_var_nuevo_precio,desp_var_cant_actual,desp_var_nueva_cant_actualiza,
    desp_var_fecha_actualiza,desp_var_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.var_id ,luego.var_contrato 
    ,luego.var_precio_actual ,luego.var_nuevo_precio ,luego.var_cant_actual 
    ,luego.var_nueva_cant_actualiza ,luego.var_fecha_actualiza ,luego.var_situacion 
    ,'I' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_comb_hist_varcontrato delete on 
    "informix".comb_hist_varcontrato referencing old as antes
    for each row
        (
        insert into "informix".aud_comb_hist_varcontrato (var_id,
    var_contrato,var_precio_actual,var_nuevo_precio,var_cant_actual,var_nueva_cant_actualiza,
    var_fecha_actualiza,var_situacion,desp_var_id,desp_var_contrato,desp_var_precio_actual,
    desp_var_nuevo_precio,desp_var_cant_actual,desp_var_nueva_cant_actualiza,
    desp_var_fecha_actualiza,desp_var_situacion,accion,usuario,hora) 
     values (antes.var_id ,antes.var_contrato ,antes.var_precio_actual 
    ,antes.var_nuevo_precio ,antes.var_cant_actual ,antes.var_nueva_cant_actualiza 
    ,antes.var_fecha_actualiza ,antes.var_situacion ,NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".act_comb_hist_varcontrato update on 
    "informix".comb_hist_varcontrato referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_comb_hist_varcontrato (var_id,
    var_contrato,var_precio_actual,var_nuevo_precio,var_cant_actual,var_nueva_cant_actualiza,
    var_fecha_actualiza,var_situacion,desp_var_id,desp_var_contrato,desp_var_precio_actual,
    desp_var_nuevo_precio,desp_var_cant_actual,desp_var_nueva_cant_actualiza,
    desp_var_fecha_actualiza,desp_var_situacion,accion,usuario,hora) 
     values (antes.var_id ,antes.var_contrato ,antes.var_precio_actual 
    ,antes.var_nuevo_precio ,antes.var_cant_actual ,antes.var_nueva_cant_actualiza 
    ,antes.var_fecha_actualiza ,antes.var_situacion ,luego.var_id ,luego.var_contrato 
    ,luego.var_precio_actual ,luego.var_nuevo_precio ,luego.var_cant_actual 
    ,luego.var_nueva_cant_actualiza ,luego.var_fecha_actualiza ,luego.var_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_comb_histo_rep insert on "informix"
    .comb_histo_rep referencing new as luego
    for each row
        (
        insert into "informix".aud_comb_histo_rep (hist_id,hist_catalogo,
    hist_reporte,hist_dependencia,hist_ejercito,hist_fecha,hist_situacion,
    desp_hist_id,desp_hist_catalogo,desp_hist_reporte,desp_hist_dependencia,
    desp_hist_ejercito,desp_hist_fecha,desp_hist_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,luego.hist_id ,luego.hist_catalogo 
    ,luego.hist_reporte ,luego.hist_dependencia ,luego.hist_ejercito 
    ,luego.hist_fecha ,luego.hist_situacion ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_comb_histo_rep update on "informix"
    .comb_histo_rep referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_comb_histo_rep (hist_id,hist_catalogo,
    hist_reporte,hist_dependencia,hist_ejercito,hist_fecha,hist_situacion,
    desp_hist_id,desp_hist_catalogo,desp_hist_reporte,desp_hist_dependencia,
    desp_hist_ejercito,desp_hist_fecha,desp_hist_situacion,accion,usuario,
    hora)  values (antes.hist_id ,antes.hist_catalogo ,antes.hist_reporte 
    ,antes.hist_dependencia ,antes.hist_ejercito ,antes.hist_fecha ,antes.hist_situacion 
    ,luego.hist_id ,luego.hist_catalogo ,luego.hist_reporte ,luego.hist_dependencia 
    ,luego.hist_ejercito ,luego.hist_fecha ,luego.hist_situacion ,'U' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_comb_histo_rep delete on "informix"
    .comb_histo_rep referencing old as antes
    for each row
        (
        insert into "informix".aud_comb_histo_rep (hist_id,hist_catalogo,
    hist_reporte,hist_dependencia,hist_ejercito,hist_fecha,hist_situacion,
    desp_hist_id,desp_hist_catalogo,desp_hist_reporte,desp_hist_dependencia,
    desp_hist_ejercito,desp_hist_fecha,desp_hist_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,antes.hist_id ,antes.hist_catalogo 
    ,antes.hist_reporte ,antes.hist_dependencia ,antes.hist_ejercito 
    ,antes.hist_fecha ,antes.hist_situacion ,'D' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".ins_re22_tipo_asignaciones insert on 
    "informix".re22_tipo_asignaciones referencing new as luego
    
    for each row
        (
        insert into "informix".aud_re22_tipo_asignaciones (tipo_id,
    tipo_descripcion,tipo_situacion,desp_tipo_id,desp_tipo_descripcion,
    desp_tipo_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,luego.tipo_id 
    ,luego.tipo_descripcion ,luego.tipo_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_re22_tipo_asignaciones delete on 
    "informix".re22_tipo_asignaciones referencing old as antes
    
    for each row
        (
        insert into "informix".aud_re22_tipo_asignaciones (tipo_id,
    tipo_descripcion,tipo_situacion,desp_tipo_id,desp_tipo_descripcion,
    desp_tipo_situacion,accion,usuario,hora)  values (antes.tipo_id ,
    antes.tipo_descripcion ,antes.tipo_situacion ,NULL ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_re22_tipo_asignaciones update on 
    "informix".re22_tipo_asignaciones referencing old as antes 
    new as luego
    for each row
        (
        insert into "informix".aud_re22_tipo_asignaciones (tipo_id,
    tipo_descripcion,tipo_situacion,desp_tipo_id,desp_tipo_descripcion,
    desp_tipo_situacion,accion,usuario,hora)  values (antes.tipo_id ,
    antes.tipo_descripcion ,antes.tipo_situacion ,luego.tipo_id ,luego.tipo_descripcion 
    ,luego.tipo_situacion ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_rm_morg insert on "informix".rm_morg 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_rm_morg (org_plaza,org_ceom,
    org_dependencia,org_jerarquia,org_grado,org_plaza_desc,org_situacion,
    org_cod_pago,org_hrs_trab,org_fec_ult_mod,org_ord_gral,org_nominas,
    org_categoria,desp_org_plaza,desp_org_ceom,desp_org_dependencia,desp_org_jerarquia,
    desp_org_grado,desp_org_plaza_desc,desp_org_situacion,desp_org_cod_pago,
    desp_org_hrs_trab,desp_org_fec_ult_mod,desp_org_ord_gral,desp_org_nominas,
    desp_org_categoria,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,luego.org_plaza ,luego.org_ceom ,luego.org_dependencia 
    ,luego.org_jerarquia ,luego.org_grado ,luego.org_plaza_desc ,luego.org_situacion 
    ,luego.org_cod_pago ,luego.org_hrs_trab ,luego.org_fec_ult_mod ,luego.org_ord_gral 
    ,luego.org_nominas ,luego.org_categoria ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_rm_morg delete on "informix".rm_morg 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_rm_morg (org_plaza,org_ceom,
    org_dependencia,org_jerarquia,org_grado,org_plaza_desc,org_situacion,
    org_cod_pago,org_hrs_trab,org_fec_ult_mod,org_ord_gral,org_nominas,
    org_categoria,desp_org_plaza,desp_org_ceom,desp_org_dependencia,desp_org_jerarquia,
    desp_org_grado,desp_org_plaza_desc,desp_org_situacion,desp_org_cod_pago,
    desp_org_hrs_trab,desp_org_fec_ult_mod,desp_org_ord_gral,desp_org_nominas,
    desp_org_categoria,accion,usuario,hora)  values (antes.org_plaza 
    ,antes.org_ceom ,antes.org_dependencia ,antes.org_jerarquia ,antes.org_grado 
    ,antes.org_plaza_desc ,antes.org_situacion ,antes.org_cod_pago ,antes.org_hrs_trab 
    ,antes.org_fec_ult_mod ,antes.org_ord_gral ,antes.org_nominas ,antes.org_categoria 
    ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_rm_morg update on "informix".rm_morg 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_rm_morg (org_plaza,org_ceom,
    org_dependencia,org_jerarquia,org_grado,org_plaza_desc,org_situacion,
    org_cod_pago,org_hrs_trab,org_fec_ult_mod,org_ord_gral,org_nominas,
    org_categoria,desp_org_plaza,desp_org_ceom,desp_org_dependencia,desp_org_jerarquia,
    desp_org_grado,desp_org_plaza_desc,desp_org_situacion,desp_org_cod_pago,
    desp_org_hrs_trab,desp_org_fec_ult_mod,desp_org_ord_gral,desp_org_nominas,
    desp_org_categoria,accion,usuario,hora)  values (antes.org_plaza 
    ,antes.org_ceom ,antes.org_dependencia ,antes.org_jerarquia ,antes.org_grado 
    ,antes.org_plaza_desc ,antes.org_situacion ,antes.org_cod_pago ,antes.org_hrs_trab 
    ,antes.org_fec_ult_mod ,antes.org_ord_gral ,antes.org_nominas ,antes.org_categoria 
    ,luego.org_plaza ,luego.org_ceom ,luego.org_dependencia ,luego.org_jerarquia 
    ,luego.org_grado ,luego.org_plaza_desc ,luego.org_situacion ,luego.org_cod_pago 
    ,luego.org_hrs_trab ,luego.org_fec_ult_mod ,luego.org_ord_gral ,luego.org_nominas 
    ,luego.org_categoria ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".re22_historial_boletaspago insert on 
    "informix".re22_historial_boletaspago referencing new as luego
    
    for each row
        (
        insert into "informix".aud_re22_historial_boletaspago 
    (impresion_id,usuario_boleta,fecha_impresion,latitud_impresion,longitud_impresion,
    usuario_login,desp_impresion_id,desp_usuario_boleta,desp_fecha_impresion,
    desp_latitud_impresion,desp_longitud_impresion,desp_usuario_login,
    accion,usuario,hora)  values (NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,luego.impresion_id 
    ,luego.usuario_boleta ,luego.fecha_impresion ,luego.latitud_impresion 
    ,luego.longitud_impresion ,luego.usuario_login ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".delete_re22_historial_boletaspago delete 
    on "informix".re22_historial_boletaspago referencing old as 
    antes
    for each row
        (
        insert into "informix".aud_re22_historial_boletaspago 
    (impresion_id,usuario_boleta,fecha_impresion,latitud_impresion,longitud_impresion,
    usuario_login,desp_impresion_id,desp_usuario_boleta,desp_fecha_impresion,
    desp_latitud_impresion,desp_longitud_impresion,desp_usuario_login,
    accion,usuario,hora)  values (antes.impresion_id ,antes.usuario_boleta 
    ,antes.fecha_impresion ,antes.latitud_impresion ,antes.longitud_impresion 
    ,antes.usuario_login ,NULL ,' ' ,' ' ,' ' ,' ' ,' ' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".update_re22_historial_boletaspago update 
    on "informix".re22_historial_boletaspago referencing old as 
    antes new as luego
    for each row
        (
        insert into "informix".aud_re22_historial_boletaspago 
    (impresion_id,usuario_boleta,fecha_impresion,latitud_impresion,longitud_impresion,
    usuario_login,desp_impresion_id,desp_usuario_boleta,desp_fecha_impresion,
    desp_latitud_impresion,desp_longitud_impresion,desp_usuario_login,
    accion,usuario,hora)  values (antes.impresion_id ,antes.usuario_boleta 
    ,antes.fecha_impresion ,antes.latitud_impresion ,antes.longitud_impresion 
    ,antes.usuario_login ,luego.impresion_id ,luego.usuario_boleta ,luego.fecha_impresion 
    ,luego.latitud_impresion ,luego.longitud_impresion ,luego.usuario_login 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_bienes insert on "informix".bienes 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_bienes (bie_id,bie_numbien,
    bie_descripcion,bie_marca,bie_situacion,desp_bie_id,desp_bie_numbien,
    desp_bie_descripcion,desp_bie_marca,desp_bie_situacion,accion,usuario,
    hora)  values (NULL ,'' ,'' ,'' ,'' ,luego.bie_id ,luego.bie_numbien 
    ,luego.bie_descripcion ,luego.bie_marca ,luego.bie_situacion ,'I' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".del_bienes delete on "informix".bienes 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_bienes (bie_id,bie_numbien,
    bie_descripcion,bie_marca,bie_situacion,desp_bie_id,desp_bie_numbien,
    desp_bie_descripcion,desp_bie_marca,desp_bie_situacion,accion,usuario,
    hora)  values (antes.bie_id ,antes.bie_numbien ,antes.bie_descripcion 
    ,antes.bie_marca ,antes.bie_situacion ,NULL ,'' ,'' ,'' ,'' ,'D' ,USER 
    ,CURRENT year to fraction(3) ));

create trigger "informix".act_bienes update on "informix".bienes 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_bienes (bie_id,bie_numbien,
    bie_descripcion,bie_marca,bie_situacion,desp_bie_id,desp_bie_numbien,
    desp_bie_descripcion,desp_bie_marca,desp_bie_situacion,accion,usuario,
    hora)  values (antes.bie_id ,antes.bie_numbien ,antes.bie_descripcion 
    ,antes.bie_marca ,antes.bie_situacion ,luego.bie_id ,luego.bie_numbien 
    ,luego.bie_descripcion ,luego.bie_marca ,luego.bie_situacion ,'U' 
    ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_conocimientos_bienes insert on 
    "informix".conocimientos_bienes referencing new as luego
    for each row
        (
        insert into "informix".aud_conocimientos_bienes (con_numero,
    con_catalogo_entrega,con_catalogo_recibe,con_catalogo_devolu,con_fecha_entrega,
    con_fecha_devolucion,con_observaciones,con_situacion,desp_con_numero,
    desp_con_catalogo_entrega,desp_con_catalogo_recibe,desp_con_catalogo_devolu,
    desp_con_fecha_entrega,desp_con_fecha_devolucion,desp_con_observaciones,
    desp_con_situacion,accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,''
     ,'' ,'' ,'' ,luego.con_numero ,luego.con_catalogo_entrega ,luego.con_catalogo_recibe 
    ,luego.con_catalogo_devolu ,luego.con_fecha_entrega ,luego.con_fecha_devolucion 
    ,luego.con_observaciones ,luego.con_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_conocimientos_bienes delete on 
    "informix".conocimientos_bienes referencing old as antes
    for each row
        (
        insert into "informix".aud_conocimientos_bienes (con_numero,
    con_catalogo_entrega,con_catalogo_recibe,con_catalogo_devolu,con_fecha_entrega,
    con_fecha_devolucion,con_observaciones,con_situacion,desp_con_numero,
    desp_con_catalogo_entrega,desp_con_catalogo_recibe,desp_con_catalogo_devolu,
    desp_con_fecha_entrega,desp_con_fecha_devolucion,desp_con_observaciones,
    desp_con_situacion,accion,usuario,hora)  values (antes.con_numero 
    ,antes.con_catalogo_entrega ,antes.con_catalogo_recibe ,antes.con_catalogo_devolu 
    ,antes.con_fecha_entrega ,antes.con_fecha_devolucion ,antes.con_observaciones 
    ,antes.con_situacion ,NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".act_conocimientos_bienes update on 
    "informix".conocimientos_bienes referencing old as antes new 
    as luego
    for each row
        (
        insert into "informix".aud_conocimientos_bienes (con_numero,
    con_catalogo_entrega,con_catalogo_recibe,con_catalogo_devolu,con_fecha_entrega,
    con_fecha_devolucion,con_observaciones,con_situacion,desp_con_numero,
    desp_con_catalogo_entrega,desp_con_catalogo_recibe,desp_con_catalogo_devolu,
    desp_con_fecha_entrega,desp_con_fecha_devolucion,desp_con_observaciones,
    desp_con_situacion,accion,usuario,hora)  values (antes.con_numero 
    ,antes.con_catalogo_entrega ,antes.con_catalogo_recibe ,antes.con_catalogo_devolu 
    ,antes.con_fecha_entrega ,antes.con_fecha_devolucion ,antes.con_observaciones 
    ,antes.con_situacion ,luego.con_numero ,luego.con_catalogo_entrega 
    ,luego.con_catalogo_recibe ,luego.con_catalogo_devolu ,luego.con_fecha_entrega 
    ,luego.con_fecha_devolucion ,luego.con_observaciones ,luego.con_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

create trigger "informix".ins_detalle_conocimiento_bienes insert 
    on "informix".detalle_conocimiento_bienes referencing new 
    as luego
    for each row
        (
        insert into "informix".aud_detalle_conocimiento_bienes 
    (det_numero,det_numero_conocimiento,det_idbien,det_situacion,desp_det_numero,
    desp_det_numero_conocimiento,desp_det_idbien,desp_det_situacion,accion,
    usuario,hora)  values (NULL ,'' ,'' ,'' ,luego.det_numero ,luego.det_numero_conocimiento 
    ,luego.det_idbien ,luego.det_situacion ,'I' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".del_detalle_conocimiento_bienes delete 
    on "informix".detalle_conocimiento_bienes referencing old 
    as antes
    for each row
        (
        insert into "informix".aud_detalle_conocimiento_bienes 
    (det_numero,det_numero_conocimiento,det_idbien,det_situacion,desp_det_numero,
    desp_det_numero_conocimiento,desp_det_idbien,desp_det_situacion,accion,
    usuario,hora)  values (antes.det_numero ,antes.det_numero_conocimiento 
    ,antes.det_idbien ,antes.det_situacion ,NULL ,'' ,'' ,'' ,'D' ,USER ,
    CURRENT year to fraction(3) ));

create trigger "informix".act_detalle_conocimiento_bienes update 
    on "informix".detalle_conocimiento_bienes referencing old 
    as antes new as luego
    for each row
        (
        insert into "informix".aud_detalle_conocimiento_bienes 
    (det_numero,det_numero_conocimiento,det_idbien,det_situacion,desp_det_numero,
    desp_det_numero_conocimiento,desp_det_idbien,desp_det_situacion,accion,
    usuario,hora)  values (antes.det_numero ,antes.det_numero_conocimiento 
    ,antes.det_idbien ,antes.det_situacion ,luego.det_numero ,luego.det_numero_conocimiento 
    ,luego.det_idbien ,luego.det_situacion ,'U' ,USER ,CURRENT year to 
    fraction(3) ));

create trigger "informix".act_comb_vales update on "informix".comb_vales 
    referencing old as antes new as luego
    for each row
        (
        insert into "informix".aud_comb_vales (val_id,val_fecha,
    val_correlativo,val_dep,val_militar,val_tipo_vehiculo,val_placa,val_catalogo_vehiculo,
    val_catalogo_011,val_catalogo_022,val_asignacion,val_traslado,val_cantidad,
    val_autorizo,val_sirvio,val_despacho,val_uso,val_area,val_razon,val_razonamiento,
    val_situacion,desp_val_id,desp_val_fecha,desp_val_correlativo,desp_val_dep,
    desp_val_militar,desp_val_tipo_vehiculo,desp_val_placa,desp_val_catalogo_vehiculo,
    desp_val_catalogo_011,desp_val_catalogo_022,desp_val_asignacion,desp_val_traslado,
    desp_val_cantidad,desp_val_autorizo,desp_val_sirvio,desp_val_despacho,
    desp_val_uso,desp_val_area,desp_val_razon,desp_val_razonamiento,desp_val_situacion,
    accion,usuario,hora)  values (antes.val_id ,antes.val_fecha ,antes.val_correlativo 
    ,antes.val_dep ,antes.val_militar ,antes.val_tipo_vehiculo ,antes.val_placa 
    ,antes.val_catalogo_vehiculo ,antes.val_catalogo_011 ,antes.val_catalogo_022 
    ,antes.val_asignacion ,antes.val_traslado ,antes.val_cantidad ,antes.val_autorizo 
    ,antes.val_sirvio ,antes.val_despacho ,antes.val_uso ,antes.val_area 
    ,antes.val_razon ,antes.val_razonamiento ,antes.val_situacion ,luego.val_id 
    ,luego.val_fecha ,luego.val_correlativo ,luego.val_dep ,luego.val_militar 
    ,luego.val_tipo_vehiculo ,luego.val_placa ,luego.val_catalogo_vehiculo 
    ,luego.val_catalogo_011 ,luego.val_catalogo_022 ,luego.val_asignacion 
    ,luego.val_traslado ,luego.val_cantidad ,luego.val_autorizo ,luego.val_sirvio 
    ,luego.val_despacho ,luego.val_uso ,luego.val_area ,luego.val_razon 
    ,luego.val_razonamiento ,luego.val_situacion ,'U' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".del_comb_vales delete on "informix".comb_vales 
    referencing old as antes
    for each row
        (
        insert into "informix".aud_comb_vales (val_id,val_fecha,
    val_correlativo,val_dep,val_militar,val_tipo_vehiculo,val_placa,val_catalogo_vehiculo,
    val_catalogo_011,val_catalogo_022,val_asignacion,val_traslado,val_cantidad,
    val_autorizo,val_sirvio,val_despacho,val_uso,val_area,val_razon,val_razonamiento,
    val_situacion,desp_val_id,desp_val_fecha,desp_val_correlativo,desp_val_dep,
    desp_val_militar,desp_val_tipo_vehiculo,desp_val_placa,desp_val_catalogo_vehiculo,
    desp_val_catalogo_011,desp_val_catalogo_022,desp_val_asignacion,desp_val_traslado,
    desp_val_cantidad,desp_val_autorizo,desp_val_sirvio,desp_val_despacho,
    desp_val_uso,desp_val_area,desp_val_razon,desp_val_razonamiento,desp_val_situacion,
    accion,usuario,hora)  values (antes.val_id ,antes.val_fecha ,antes.val_correlativo 
    ,antes.val_dep ,antes.val_militar ,antes.val_tipo_vehiculo ,antes.val_placa 
    ,antes.val_catalogo_vehiculo ,antes.val_catalogo_011 ,antes.val_catalogo_022 
    ,antes.val_asignacion ,antes.val_traslado ,antes.val_cantidad ,antes.val_autorizo 
    ,antes.val_sirvio ,antes.val_despacho ,antes.val_uso ,antes.val_area 
    ,antes.val_razon ,antes.val_razonamiento ,antes.val_situacion ,NULL 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2048) 
    ,'' ::lvarchar(2048) ,'' ,'D' ,USER ,CURRENT year to fraction(3) ));
    

create trigger "informix".ins_comb_vales insert on "informix".comb_vales 
    referencing new as luego
    for each row
        (
        insert into "informix".aud_comb_vales (val_id,val_fecha,
    val_correlativo,val_dep,val_militar,val_tipo_vehiculo,val_placa,val_catalogo_vehiculo,
    val_catalogo_011,val_catalogo_022,val_asignacion,val_traslado,val_cantidad,
    val_autorizo,val_sirvio,val_despacho,val_uso,val_area,val_razon,val_razonamiento,
    val_situacion,desp_val_id,desp_val_fecha,desp_val_correlativo,desp_val_dep,
    desp_val_militar,desp_val_tipo_vehiculo,desp_val_placa,desp_val_catalogo_vehiculo,
    desp_val_catalogo_011,desp_val_catalogo_022,desp_val_asignacion,desp_val_traslado,
    desp_val_cantidad,desp_val_autorizo,desp_val_sirvio,desp_val_despacho,
    desp_val_uso,desp_val_area,desp_val_razon,desp_val_razonamiento,desp_val_situacion,
    accion,usuario,hora)  values (NULL ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' 
    ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ::lvarchar(2048) ,'' ::lvarchar(2048) ,'' ,
    luego.val_id ,luego.val_fecha ,luego.val_correlativo ,luego.val_dep 
    ,luego.val_militar ,luego.val_tipo_vehiculo ,luego.val_placa ,luego.val_catalogo_vehiculo 
    ,luego.val_catalogo_011 ,luego.val_catalogo_022 ,luego.val_asignacion 
    ,luego.val_traslado ,luego.val_cantidad ,luego.val_autorizo ,luego.val_sirvio 
    ,luego.val_despacho ,luego.val_uso ,luego.val_area ,luego.val_razon 
    ,luego.val_razonamiento ,luego.val_situacion ,'I' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".ins_comb_notificaciones insert on "informix"
    .comb_notificaciones referencing new as luego
    for each row
        (
        insert into "informix".aud_comb_notificaciones (not_id,
    not_fecha,not_dep,not_mensaje,not_tipo,not_url,not_todos,not_situacion,
    desp_not_id,desp_not_fecha,desp_not_dep,desp_not_mensaje,desp_not_tipo,
    desp_not_url,desp_not_todos,desp_not_situacion,accion,usuario,hora) 
     values (NULL ,'' ,'' ,'' ::lvarchar(2048) ,'' ,'' ,'' ,'' ,luego.not_id 
    ,luego.not_fecha ,luego.not_dep ,luego.not_mensaje ,luego.not_tipo 
    ,luego.not_url ,luego.not_todos ,luego.not_situacion ,'I' ,USER ,CURRENT 
    year to fraction(3) ));

create trigger "informix".del_comb_notificaciones delete on "informix"
    .comb_notificaciones referencing old as antes
    for each row
        (
        insert into "informix".aud_comb_notificaciones (not_id,
    not_fecha,not_dep,not_mensaje,not_tipo,not_url,not_todos,not_situacion,
    desp_not_id,desp_not_fecha,desp_not_dep,desp_not_mensaje,desp_not_tipo,
    desp_not_url,desp_not_todos,desp_not_situacion,accion,usuario,hora) 
     values (antes.not_id ,antes.not_fecha ,antes.not_dep ,antes.not_mensaje 
    ,antes.not_tipo ,antes.not_url ,antes.not_todos ,antes.not_situacion 
    ,NULL ,'' ,'' ,'' ::lvarchar(2048) ,'' ,'' ,'' ,'' ,'D' ,USER ,CURRENT year 
    to fraction(3) ));

create trigger "informix".act_comb_notificaciones update on "informix"
    .comb_notificaciones referencing old as antes new as luego
    
    for each row
        (
        insert into "informix".aud_comb_notificaciones (not_id,
    not_fecha,not_dep,not_mensaje,not_tipo,not_url,not_todos,not_situacion,
    desp_not_id,desp_not_fecha,desp_not_dep,desp_not_mensaje,desp_not_tipo,
    desp_not_url,desp_not_todos,desp_not_situacion,accion,usuario,hora) 
     values (antes.not_id ,antes.not_fecha ,antes.not_dep ,antes.not_mensaje 
    ,antes.not_tipo ,antes.not_url ,antes.not_todos ,antes.not_situacion 
    ,luego.not_id ,luego.not_fecha ,luego.not_dep ,luego.not_mensaje 
    ,luego.not_tipo ,luego.not_url ,luego.not_todos ,luego.not_situacion 
    ,'U' ,USER ,CURRENT year to fraction(3) ));

